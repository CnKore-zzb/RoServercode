// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SceneUser.proto

#ifndef PROTOBUF_SceneUser_2eproto__INCLUDED
#define PROTOBUF_SceneUser_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "xCmd.pb.h"
#include "ProtoCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace Cmd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SceneUser_2eproto();
void protobuf_AssignDesc_SceneUser_2eproto();
void protobuf_ShutdownFile_SceneUser_2eproto();

class UserAttr;
class UserAttrSvr;
class UserData;
class UserSyncCmd;
class UserMessageCmd;
class UserGMCommand;
class UserProfessionExchange;
class UserTest;
class UserFaceCmd;
class MainUserData;
class MainUserDataUserCmd;
class ReqMoveUserCmd;
class RetMoveUserCmd;
class SynTimeUserCmd;
class DeleteEntryUserCmd;
class ChangeBodyUserCmd;
class ChangeSceneUserCmd;
class FunNpcData;
class FuntionNpcListUserCmd;
class GUID;
class DeleteStaticEntryUserCmd;
class ShareDamTarget;
class HitedTarget;
class PhaseData;
class SkillBroadcastUserCmd;
class TestUint64;
class TestSkillBroadcastUserCmd;
class UseSkillUserCmd;
class ChantSkillUserCmd;
class BreakChantSkillUserCmd;
class BroadcastSkillUserCmd;
class MapObjectData;
class ReliveUserCmd;
class GoToUserCmd;
class ReconnectionPosUserCmd;
class GoToExitPosUserCmd;
class GoToRandomPosUserCmd;

enum CmdParam {
  USERPARAM_USERSYNC = 1,
  USERPARAM_GMCOMMAND = 3,
  USERPARAM_PROFESSIONEXCHANGE = 4,
  MAIN_USER_DATA_USER_CMD = 11,
  REQ_MOVE_USER_CMD = 15,
  RET_MOVE_USER_CMD = 16,
  SYS_TIME_USER_CMD = 17,
  DELETE_ENTRY_USER_CMD = 18,
  CHANGE_BODY_USER_CMD = 22,
  CHANGE_SCENE_USER_CMD = 23,
  FUNCTION_NPC_LIST_USER_CMD = 25,
  DELETE_STATIC_ENTRY_USER_CMD = 26,
  SKILL_BROADCAST_USER_CMD = 27,
  USE_SKILL_USER_CMD = 28,
  CHANT_SKILL_USER_CMD = 29,
  BREAK_CHANT_SKILL_USER_CMD = 30,
  BROADCAST_SKILL_USER_CMD = 31,
  TITLE_NEWTITLE = 34,
  TITLE_REQDATA = 35,
  TITLE_ACTIVE = 36,
  MAP_OBJECT_DATA = 38,
  CD_TIME_USER_CMD = 39,
  RELIVE_USER_CMD = 41,
  GOTO_USER_CMD = 42,
  RECONNECTION_POS_USER_CMD = 43,
  USER_FACE_CMD = 45,
  EXIT_POS_USER_CMD = 46,
  TEST_SKILL_BROADCAST_USER_CMD = 47,
  GOTO_EXIT_POS_USER_CMD = 48,
  GOTO_RANDOM_POS_USER_CMD = 49
};
bool CmdParam_IsValid(int value);
const CmdParam CmdParam_MIN = USERPARAM_USERSYNC;
const CmdParam CmdParam_MAX = GOTO_RANDOM_POS_USER_CMD;
const int CmdParam_ARRAYSIZE = CmdParam_MAX + 1;

const ::google::protobuf::EnumDescriptor* CmdParam_descriptor();
inline const ::std::string& CmdParam_Name(CmdParam value) {
  return ::google::protobuf::internal::NameOfEnum(
    CmdParam_descriptor(), value);
}
inline bool CmdParam_Parse(
    const ::std::string& name, CmdParam* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CmdParam>(
    CmdParam_descriptor(), name, value);
}
enum EUserSyncType {
  EUSERSYNCTYPE_MIN = 1,
  EUSERSYNCTYPE_INIT = 2,
  EUSERSYNCTYPE_SYNC = 3,
  EUSERSYNCTYPE_MAX = 4
};
bool EUserSyncType_IsValid(int value);
const EUserSyncType EUserSyncType_MIN = EUSERSYNCTYPE_MIN;
const EUserSyncType EUserSyncType_MAX = EUSERSYNCTYPE_MAX;
const int EUserSyncType_ARRAYSIZE = EUserSyncType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EUserSyncType_descriptor();
inline const ::std::string& EUserSyncType_Name(EUserSyncType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EUserSyncType_descriptor(), value);
}
inline bool EUserSyncType_Parse(
    const ::std::string& name, EUserSyncType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EUserSyncType>(
    EUserSyncType_descriptor(), name, value);
}
enum MessageType {
  MESSAGETYPE_MIN = 0,
  MESSAGETYPE_TEST = 1,
  MESSAGETYPE_MAX = 2
};
bool MessageType_IsValid(int value);
const MessageType MessageType_MIN = MESSAGETYPE_MIN;
const MessageType MessageType_MAX = MESSAGETYPE_MAX;
const int MessageType_ARRAYSIZE = MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageType_descriptor();
inline const ::std::string& MessageType_Name(MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageType_descriptor(), value);
}
inline bool MessageType_Parse(
    const ::std::string& name, MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageType>(
    MessageType_descriptor(), name, value);
}
enum DamageType {
  DAMAGE_TYPE_INVALID = -5,
  DAMAGE_TYPE_CAIJI = -1,
  DAMAGE_TYPE_NONE = 0,
  DAMAGE_TYPE_NORMAL = 1,
  DAMAGE_TYPE_CRITICAL = 2,
  DAMAGE_TYPE_MISS = 3,
  DAMAGE_TYPE_HEAL = 4,
  DAMAGE_TYPE_IMMUNE = 5,
  DAMAGE_TYPE_BARRIER = 6,
  DAMAGE_TYPE_NORMALSP = 8,
  DAMAGE_TYPE_TREATSP = 9,
  DAMAGE_TYPE_AUTOBLOCK = 10,
  DAMAGE_TYPE_WEAPONBLOCK = 11
};
bool DamageType_IsValid(int value);
const DamageType DamageType_MIN = DAMAGE_TYPE_INVALID;
const DamageType DamageType_MAX = DAMAGE_TYPE_WEAPONBLOCK;
const int DamageType_ARRAYSIZE = DamageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DamageType_descriptor();
inline const ::std::string& DamageType_Name(DamageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DamageType_descriptor(), value);
}
inline bool DamageType_Parse(
    const ::std::string& name, DamageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DamageType>(
    DamageType_descriptor(), name, value);
}
// ===================================================================

class UserAttr : public ::google::protobuf::Message {
 public:
  UserAttr();
  virtual ~UserAttr();

  UserAttr(const UserAttr& from);

  inline UserAttr& operator=(const UserAttr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserAttr& default_instance();

  void Swap(UserAttr* other);

  // implements Message ----------------------------------------------

  UserAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserAttr& from);
  void MergeFrom(const UserAttr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Cmd.EAttrType type = 1 [default = EATTRTYPE_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Cmd::EAttrType type() const;
  inline void set_type(::Cmd::EAttrType value);

  // required int32 value = 2 [default = 0];
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Cmd.UserAttr)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::int32 value_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static UserAttr* default_instance_;
};
// -------------------------------------------------------------------

class UserAttrSvr : public ::google::protobuf::Message {
 public:
  UserAttrSvr();
  virtual ~UserAttrSvr();

  UserAttrSvr(const UserAttrSvr& from);

  inline UserAttrSvr& operator=(const UserAttrSvr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserAttrSvr& default_instance();

  void Swap(UserAttrSvr* other);

  // implements Message ----------------------------------------------

  UserAttrSvr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserAttrSvr& from);
  void MergeFrom(const UserAttrSvr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.EAttrType type = 1 [default = EATTRTYPE_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Cmd::EAttrType type() const;
  inline void set_type(::Cmd::EAttrType value);

  // optional float value = 2 [default = 0];
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline float value() const;
  inline void set_value(float value);

  // @@protoc_insertion_point(class_scope:Cmd.UserAttrSvr)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  float value_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static UserAttrSvr* default_instance_;
};
// -------------------------------------------------------------------

class UserData : public ::google::protobuf::Message {
 public:
  UserData();
  virtual ~UserData();

  UserData(const UserData& from);

  inline UserData& operator=(const UserData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserData& default_instance();

  void Swap(UserData* other);

  // implements Message ----------------------------------------------

  UserData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserData& from);
  void MergeFrom(const UserData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Cmd.EUserDataType type = 1 [default = EUSERDATATYPE_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Cmd::EUserDataType type() const;
  inline void set_type(::Cmd::EUserDataType value);

  // required uint64 value = 2 [default = 0];
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);

  // optional bytes data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Cmd.UserData)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 value_;
  ::std::string* data_;
  int type_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static UserData* default_instance_;
};
// -------------------------------------------------------------------

class UserSyncCmd : public ::google::protobuf::Message {
 public:
  UserSyncCmd();
  virtual ~UserSyncCmd();

  UserSyncCmd(const UserSyncCmd& from);

  inline UserSyncCmd& operator=(const UserSyncCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserSyncCmd& default_instance();

  void Swap(UserSyncCmd* other);

  // implements Message ----------------------------------------------

  UserSyncCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserSyncCmd& from);
  void MergeFrom(const UserSyncCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CmdParam param = 2 [default = USERPARAM_USERSYNC];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CmdParam param() const;
  inline void set_param(::Cmd::CmdParam value);

  // optional .Cmd.EUserSyncType type = 3 [default = EUSERSYNCTYPE_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::Cmd::EUserSyncType type() const;
  inline void set_type(::Cmd::EUserSyncType value);

  // repeated .Cmd.UserAttr attrs = 4;
  inline int attrs_size() const;
  inline void clear_attrs();
  static const int kAttrsFieldNumber = 4;
  inline const ::Cmd::UserAttr& attrs(int index) const;
  inline ::Cmd::UserAttr* mutable_attrs(int index);
  inline ::Cmd::UserAttr* add_attrs();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >&
      attrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >*
      mutable_attrs();

  // repeated .Cmd.UserData datas = 5;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 5;
  inline const ::Cmd::UserData& datas(int index) const;
  inline ::Cmd::UserData* mutable_datas(int index);
  inline ::Cmd::UserData* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UserData >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::UserData >*
      mutable_datas();

  // repeated .Cmd.UserAttr pointattrs = 6;
  inline int pointattrs_size() const;
  inline void clear_pointattrs();
  static const int kPointattrsFieldNumber = 6;
  inline const ::Cmd::UserAttr& pointattrs(int index) const;
  inline ::Cmd::UserAttr* mutable_pointattrs(int index);
  inline ::Cmd::UserAttr* add_pointattrs();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >&
      pointattrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >*
      mutable_pointattrs();

  // @@protoc_insertion_point(class_scope:Cmd.UserSyncCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr > attrs_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::UserData > datas_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr > pointattrs_;
  int type_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static UserSyncCmd* default_instance_;
};
// -------------------------------------------------------------------

class UserMessageCmd : public ::google::protobuf::Message {
 public:
  UserMessageCmd();
  virtual ~UserMessageCmd();

  UserMessageCmd(const UserMessageCmd& from);

  inline UserMessageCmd& operator=(const UserMessageCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserMessageCmd& default_instance();

  void Swap(UserMessageCmd* other);

  // implements Message ----------------------------------------------

  UserMessageCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserMessageCmd& from);
  void MergeFrom(const UserMessageCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional uint32 param = 2 [default = 200];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::google::protobuf::uint32 param() const;
  inline void set_param(::google::protobuf::uint32 value);

  // optional uint32 id = 3 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional .Cmd.MessageType type = 4 [default = MESSAGETYPE_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::Cmd::MessageType type() const;
  inline void set_type(::Cmd::MessageType value);

  // optional string addstr = 5;
  inline bool has_addstr() const;
  inline void clear_addstr();
  static const int kAddstrFieldNumber = 5;
  inline const ::std::string& addstr() const;
  inline void set_addstr(const ::std::string& value);
  inline void set_addstr(const char* value);
  inline void set_addstr(const char* value, size_t size);
  inline ::std::string* mutable_addstr();
  inline ::std::string* release_addstr();
  inline void set_allocated_addstr(::std::string* addstr);

  // @@protoc_insertion_point(class_scope:Cmd.UserMessageCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_addstr();
  inline void clear_has_addstr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  ::google::protobuf::uint32 param_;
  ::google::protobuf::uint32 id_;
  int type_;
  ::std::string* addstr_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static UserMessageCmd* default_instance_;
};
// -------------------------------------------------------------------

class UserGMCommand : public ::google::protobuf::Message {
 public:
  UserGMCommand();
  virtual ~UserGMCommand();

  UserGMCommand(const UserGMCommand& from);

  inline UserGMCommand& operator=(const UserGMCommand& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserGMCommand& default_instance();

  void Swap(UserGMCommand* other);

  // implements Message ----------------------------------------------

  UserGMCommand* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserGMCommand& from);
  void MergeFrom(const UserGMCommand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional uint32 param = 2 [default = 3];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::google::protobuf::uint32 param() const;
  inline void set_param(::google::protobuf::uint32 value);

  // optional string command = 3;
  inline bool has_command() const;
  inline void clear_command();
  static const int kCommandFieldNumber = 3;
  inline const ::std::string& command() const;
  inline void set_command(const ::std::string& value);
  inline void set_command(const char* value);
  inline void set_command(const char* value, size_t size);
  inline ::std::string* mutable_command();
  inline ::std::string* release_command();
  inline void set_allocated_command(::std::string* command);

  // @@protoc_insertion_point(class_scope:Cmd.UserGMCommand)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_command();
  inline void clear_has_command();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  ::google::protobuf::uint32 param_;
  ::std::string* command_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static UserGMCommand* default_instance_;
};
// -------------------------------------------------------------------

class UserProfessionExchange : public ::google::protobuf::Message {
 public:
  UserProfessionExchange();
  virtual ~UserProfessionExchange();

  UserProfessionExchange(const UserProfessionExchange& from);

  inline UserProfessionExchange& operator=(const UserProfessionExchange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserProfessionExchange& default_instance();

  void Swap(UserProfessionExchange* other);

  // implements Message ----------------------------------------------

  UserProfessionExchange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserProfessionExchange& from);
  void MergeFrom(const UserProfessionExchange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional uint32 param = 2 [default = 4];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::google::protobuf::uint32 param() const;
  inline void set_param(::google::protobuf::uint32 value);

  // optional .Cmd.EProfession profession = 3 [default = EPROFESSION_MIN];
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 3;
  inline ::Cmd::EProfession profession() const;
  inline void set_profession(::Cmd::EProfession value);

  // @@protoc_insertion_point(class_scope:Cmd.UserProfessionExchange)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_profession();
  inline void clear_has_profession();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  ::google::protobuf::uint32 param_;
  int profession_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static UserProfessionExchange* default_instance_;
};
// -------------------------------------------------------------------

class UserTest : public ::google::protobuf::Message {
 public:
  UserTest();
  virtual ~UserTest();

  UserTest(const UserTest& from);

  inline UserTest& operator=(const UserTest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserTest& default_instance();

  void Swap(UserTest* other);

  // implements Message ----------------------------------------------

  UserTest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserTest& from);
  void MergeFrom(const UserTest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional uint32 param = 2 [default = 10];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::google::protobuf::uint32 param() const;
  inline void set_param(::google::protobuf::uint32 value);

  // repeated .Cmd.UserAttr attrs = 3;
  inline int attrs_size() const;
  inline void clear_attrs();
  static const int kAttrsFieldNumber = 3;
  inline const ::Cmd::UserAttr& attrs(int index) const;
  inline ::Cmd::UserAttr* mutable_attrs(int index);
  inline ::Cmd::UserAttr* add_attrs();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >&
      attrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >*
      mutable_attrs();

  // @@protoc_insertion_point(class_scope:Cmd.UserTest)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  ::google::protobuf::uint32 param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr > attrs_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static UserTest* default_instance_;
};
// -------------------------------------------------------------------

class UserFaceCmd : public ::google::protobuf::Message {
 public:
  UserFaceCmd();
  virtual ~UserFaceCmd();

  UserFaceCmd(const UserFaceCmd& from);

  inline UserFaceCmd& operator=(const UserFaceCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserFaceCmd& default_instance();

  void Swap(UserFaceCmd* other);

  // implements Message ----------------------------------------------

  UserFaceCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserFaceCmd& from);
  void MergeFrom(const UserFaceCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional uint32 param = 2 [default = 200];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::google::protobuf::uint32 param() const;
  inline void set_param(::google::protobuf::uint32 value);

  // optional uint32 id = 3 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.UserFaceCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  ::google::protobuf::uint32 param_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static UserFaceCmd* default_instance_;
};
// -------------------------------------------------------------------

class MainUserData : public ::google::protobuf::Message {
 public:
  MainUserData();
  virtual ~MainUserData();

  MainUserData(const MainUserData& from);

  inline MainUserData& operator=(const MainUserData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MainUserData& default_instance();

  void Swap(MainUserData* other);

  // implements Message ----------------------------------------------

  MainUserData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MainUserData& from);
  void MergeFrom(const MainUserData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 male = 3;
  inline bool has_male() const;
  inline void clear_male();
  static const int kMaleFieldNumber = 3;
  inline ::google::protobuf::uint32 male() const;
  inline void set_male(::google::protobuf::uint32 value);

  // optional uint32 body = 4;
  inline bool has_body() const;
  inline void clear_body();
  static const int kBodyFieldNumber = 4;
  inline ::google::protobuf::uint32 body() const;
  inline void set_body(::google::protobuf::uint32 value);

  // optional uint32 hair = 5;
  inline bool has_hair() const;
  inline void clear_hair();
  static const int kHairFieldNumber = 5;
  inline ::google::protobuf::uint32 hair() const;
  inline void set_hair(::google::protobuf::uint32 value);

  // optional uint32 rightHand = 6;
  inline bool has_righthand() const;
  inline void clear_righthand();
  static const int kRightHandFieldNumber = 6;
  inline ::google::protobuf::uint32 righthand() const;
  inline void set_righthand(::google::protobuf::uint32 value);

  // optional uint32 profession = 7;
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 7;
  inline ::google::protobuf::uint32 profession() const;
  inline void set_profession(::google::protobuf::uint32 value);

  // optional uint32 accessory = 8;
  inline bool has_accessory() const;
  inline void clear_accessory();
  static const int kAccessoryFieldNumber = 8;
  inline ::google::protobuf::uint32 accessory() const;
  inline void set_accessory(::google::protobuf::uint32 value);

  // optional uint32 wing = 9;
  inline bool has_wing() const;
  inline void clear_wing();
  static const int kWingFieldNumber = 9;
  inline ::google::protobuf::uint32 wing() const;
  inline void set_wing(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.MainUserData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_male();
  inline void clear_has_male();
  inline void set_has_body();
  inline void clear_has_body();
  inline void set_has_hair();
  inline void clear_has_hair();
  inline void set_has_righthand();
  inline void clear_has_righthand();
  inline void set_has_profession();
  inline void clear_has_profession();
  inline void set_has_accessory();
  inline void clear_has_accessory();
  inline void set_has_wing();
  inline void clear_has_wing();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::std::string* name_;
  ::google::protobuf::uint32 male_;
  ::google::protobuf::uint32 body_;
  ::google::protobuf::uint32 hair_;
  ::google::protobuf::uint32 righthand_;
  ::google::protobuf::uint32 profession_;
  ::google::protobuf::uint32 accessory_;
  ::google::protobuf::uint32 wing_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static MainUserData* default_instance_;
};
// -------------------------------------------------------------------

class MainUserDataUserCmd : public ::google::protobuf::Message {
 public:
  MainUserDataUserCmd();
  virtual ~MainUserDataUserCmd();

  MainUserDataUserCmd(const MainUserDataUserCmd& from);

  inline MainUserDataUserCmd& operator=(const MainUserDataUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MainUserDataUserCmd& default_instance();

  void Swap(MainUserDataUserCmd* other);

  // implements Message ----------------------------------------------

  MainUserDataUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MainUserDataUserCmd& from);
  void MergeFrom(const MainUserDataUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CmdParam param = 2 [default = MAIN_USER_DATA_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CmdParam param() const;
  inline void set_param(::Cmd::CmdParam value);

  // optional .Cmd.MainUserData data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::Cmd::MainUserData& data() const;
  inline ::Cmd::MainUserData* mutable_data();
  inline ::Cmd::MainUserData* release_data();
  inline void set_allocated_data(::Cmd::MainUserData* data);

  // @@protoc_insertion_point(class_scope:Cmd.MainUserDataUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::MainUserData* data_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static MainUserDataUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class ReqMoveUserCmd : public ::google::protobuf::Message {
 public:
  ReqMoveUserCmd();
  virtual ~ReqMoveUserCmd();

  ReqMoveUserCmd(const ReqMoveUserCmd& from);

  inline ReqMoveUserCmd& operator=(const ReqMoveUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqMoveUserCmd& default_instance();

  void Swap(ReqMoveUserCmd* other);

  // implements Message ----------------------------------------------

  ReqMoveUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqMoveUserCmd& from);
  void MergeFrom(const ReqMoveUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CmdParam param = 2 [default = REQ_MOVE_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CmdParam param() const;
  inline void set_param(::Cmd::CmdParam value);

  // optional .Cmd.ScenePos target = 3;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 3;
  inline const ::Cmd::ScenePos& target() const;
  inline ::Cmd::ScenePos* mutable_target();
  inline ::Cmd::ScenePos* release_target();
  inline void set_allocated_target(::Cmd::ScenePos* target);

  // @@protoc_insertion_point(class_scope:Cmd.ReqMoveUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_target();
  inline void clear_has_target();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::ScenePos* target_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static ReqMoveUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class RetMoveUserCmd : public ::google::protobuf::Message {
 public:
  RetMoveUserCmd();
  virtual ~RetMoveUserCmd();

  RetMoveUserCmd(const RetMoveUserCmd& from);

  inline RetMoveUserCmd& operator=(const RetMoveUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetMoveUserCmd& default_instance();

  void Swap(RetMoveUserCmd* other);

  // implements Message ----------------------------------------------

  RetMoveUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetMoveUserCmd& from);
  void MergeFrom(const RetMoveUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CmdParam param = 2 [default = RET_MOVE_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CmdParam param() const;
  inline void set_param(::Cmd::CmdParam value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional .Cmd.ScenePos pos = 4;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 4;
  inline const ::Cmd::ScenePos& pos() const;
  inline ::Cmd::ScenePos* mutable_pos();
  inline ::Cmd::ScenePos* release_pos();
  inline void set_allocated_pos(::Cmd::ScenePos* pos);

  // @@protoc_insertion_point(class_scope:Cmd.RetMoveUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::Cmd::ScenePos* pos_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static RetMoveUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class SynTimeUserCmd : public ::google::protobuf::Message {
 public:
  SynTimeUserCmd();
  virtual ~SynTimeUserCmd();

  SynTimeUserCmd(const SynTimeUserCmd& from);

  inline SynTimeUserCmd& operator=(const SynTimeUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SynTimeUserCmd& default_instance();

  void Swap(SynTimeUserCmd* other);

  // implements Message ----------------------------------------------

  SynTimeUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SynTimeUserCmd& from);
  void MergeFrom(const SynTimeUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CmdParam param = 2 [default = SYS_TIME_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CmdParam param() const;
  inline void set_param(::Cmd::CmdParam value);

  // optional uint64 serverTime = 3;
  inline bool has_servertime() const;
  inline void clear_servertime();
  static const int kServerTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 servertime() const;
  inline void set_servertime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.SynTimeUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_servertime();
  inline void clear_has_servertime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 servertime_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static SynTimeUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class DeleteEntryUserCmd : public ::google::protobuf::Message {
 public:
  DeleteEntryUserCmd();
  virtual ~DeleteEntryUserCmd();

  DeleteEntryUserCmd(const DeleteEntryUserCmd& from);

  inline DeleteEntryUserCmd& operator=(const DeleteEntryUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteEntryUserCmd& default_instance();

  void Swap(DeleteEntryUserCmd* other);

  // implements Message ----------------------------------------------

  DeleteEntryUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteEntryUserCmd& from);
  void MergeFrom(const DeleteEntryUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CmdParam param = 2 [default = DELETE_ENTRY_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CmdParam param() const;
  inline void set_param(::Cmd::CmdParam value);

  // repeated uint64 list = 3;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 3;
  inline ::google::protobuf::uint64 list(int index) const;
  inline void set_list(int index, ::google::protobuf::uint64 value);
  inline void add_list(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_list();

  // optional uint32 fadeout = 4 [default = 0];
  inline bool has_fadeout() const;
  inline void clear_fadeout();
  static const int kFadeoutFieldNumber = 4;
  inline ::google::protobuf::uint32 fadeout() const;
  inline void set_fadeout(::google::protobuf::uint32 value);

  // optional uint32 delay_del = 5 [default = 0];
  inline bool has_delay_del() const;
  inline void clear_delay_del();
  static const int kDelayDelFieldNumber = 5;
  inline ::google::protobuf::uint32 delay_del() const;
  inline void set_delay_del(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.DeleteEntryUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_fadeout();
  inline void clear_has_fadeout();
  inline void set_has_delay_del();
  inline void clear_has_delay_del();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > list_;
  ::google::protobuf::uint32 fadeout_;
  ::google::protobuf::uint32 delay_del_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static DeleteEntryUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class ChangeBodyUserCmd : public ::google::protobuf::Message {
 public:
  ChangeBodyUserCmd();
  virtual ~ChangeBodyUserCmd();

  ChangeBodyUserCmd(const ChangeBodyUserCmd& from);

  inline ChangeBodyUserCmd& operator=(const ChangeBodyUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeBodyUserCmd& default_instance();

  void Swap(ChangeBodyUserCmd* other);

  // implements Message ----------------------------------------------

  ChangeBodyUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeBodyUserCmd& from);
  void MergeFrom(const ChangeBodyUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CmdParam param = 2 [default = CHANGE_BODY_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CmdParam param() const;
  inline void set_param(::Cmd::CmdParam value);

  // required uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 male = 4;
  inline bool has_male() const;
  inline void clear_male();
  static const int kMaleFieldNumber = 4;
  inline ::google::protobuf::uint32 male() const;
  inline void set_male(::google::protobuf::uint32 value);

  // optional uint32 body = 5;
  inline bool has_body() const;
  inline void clear_body();
  static const int kBodyFieldNumber = 5;
  inline ::google::protobuf::uint32 body() const;
  inline void set_body(::google::protobuf::uint32 value);

  // optional uint32 hair = 6;
  inline bool has_hair() const;
  inline void clear_hair();
  static const int kHairFieldNumber = 6;
  inline ::google::protobuf::uint32 hair() const;
  inline void set_hair(::google::protobuf::uint32 value);

  // optional uint32 rightHand = 7;
  inline bool has_righthand() const;
  inline void clear_righthand();
  static const int kRightHandFieldNumber = 7;
  inline ::google::protobuf::uint32 righthand() const;
  inline void set_righthand(::google::protobuf::uint32 value);

  // optional uint32 profession = 8;
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 8;
  inline ::google::protobuf::uint32 profession() const;
  inline void set_profession(::google::protobuf::uint32 value);

  // optional uint32 accessory = 9;
  inline bool has_accessory() const;
  inline void clear_accessory();
  static const int kAccessoryFieldNumber = 9;
  inline ::google::protobuf::uint32 accessory() const;
  inline void set_accessory(::google::protobuf::uint32 value);

  // optional uint32 wing = 10;
  inline bool has_wing() const;
  inline void clear_wing();
  static const int kWingFieldNumber = 10;
  inline ::google::protobuf::uint32 wing() const;
  inline void set_wing(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ChangeBodyUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_male();
  inline void clear_has_male();
  inline void set_has_body();
  inline void clear_has_body();
  inline void set_has_hair();
  inline void clear_has_hair();
  inline void set_has_righthand();
  inline void clear_has_righthand();
  inline void set_has_profession();
  inline void clear_has_profession();
  inline void set_has_accessory();
  inline void clear_has_accessory();
  inline void set_has_wing();
  inline void clear_has_wing();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 male_;
  ::google::protobuf::uint32 body_;
  ::google::protobuf::uint32 hair_;
  ::google::protobuf::uint32 righthand_;
  ::google::protobuf::uint32 profession_;
  ::google::protobuf::uint32 accessory_;
  ::google::protobuf::uint32 wing_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static ChangeBodyUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class ChangeSceneUserCmd : public ::google::protobuf::Message {
 public:
  ChangeSceneUserCmd();
  virtual ~ChangeSceneUserCmd();

  ChangeSceneUserCmd(const ChangeSceneUserCmd& from);

  inline ChangeSceneUserCmd& operator=(const ChangeSceneUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeSceneUserCmd& default_instance();

  void Swap(ChangeSceneUserCmd* other);

  // implements Message ----------------------------------------------

  ChangeSceneUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeSceneUserCmd& from);
  void MergeFrom(const ChangeSceneUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CmdParam param = 2 [default = CHANGE_SCENE_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CmdParam param() const;
  inline void set_param(::Cmd::CmdParam value);

  // optional uint32 mapID = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // optional string mapName = 4;
  inline bool has_mapname() const;
  inline void clear_mapname();
  static const int kMapNameFieldNumber = 4;
  inline const ::std::string& mapname() const;
  inline void set_mapname(const ::std::string& value);
  inline void set_mapname(const char* value);
  inline void set_mapname(const char* value, size_t size);
  inline ::std::string* mutable_mapname();
  inline ::std::string* release_mapname();
  inline void set_allocated_mapname(::std::string* mapname);

  // optional .Cmd.ScenePos pos = 5;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 5;
  inline const ::Cmd::ScenePos& pos() const;
  inline ::Cmd::ScenePos* mutable_pos();
  inline ::Cmd::ScenePos* release_pos();
  inline void set_allocated_pos(::Cmd::ScenePos* pos);

  // optional uint32 dmapID = 6;
  inline bool has_dmapid() const;
  inline void clear_dmapid();
  static const int kDmapIDFieldNumber = 6;
  inline ::google::protobuf::uint32 dmapid() const;
  inline void set_dmapid(::google::protobuf::uint32 value);

  // optional uint32 preview = 7;
  inline bool has_preview() const;
  inline void clear_preview();
  static const int kPreviewFieldNumber = 7;
  inline ::google::protobuf::uint32 preview() const;
  inline void set_preview(::google::protobuf::uint32 value);

  // repeated uint32 invisiblexit = 8;
  inline int invisiblexit_size() const;
  inline void clear_invisiblexit();
  static const int kInvisiblexitFieldNumber = 8;
  inline ::google::protobuf::uint32 invisiblexit(int index) const;
  inline void set_invisiblexit(int index, ::google::protobuf::uint32 value);
  inline void add_invisiblexit(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      invisiblexit() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_invisiblexit();

  // optional uint32 imageid = 9;
  inline bool has_imageid() const;
  inline void clear_imageid();
  static const int kImageidFieldNumber = 9;
  inline ::google::protobuf::uint32 imageid() const;
  inline void set_imageid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ChangeSceneUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_mapname();
  inline void clear_has_mapname();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_dmapid();
  inline void clear_has_dmapid();
  inline void set_has_preview();
  inline void clear_has_preview();
  inline void set_has_imageid();
  inline void clear_has_imageid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::std::string* mapname_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 dmapid_;
  ::Cmd::ScenePos* pos_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > invisiblexit_;
  ::google::protobuf::uint32 preview_;
  ::google::protobuf::uint32 imageid_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static ChangeSceneUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class FunNpcData : public ::google::protobuf::Message {
 public:
  FunNpcData();
  virtual ~FunNpcData();

  FunNpcData(const FunNpcData& from);

  inline FunNpcData& operator=(const FunNpcData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FunNpcData& default_instance();

  void Swap(FunNpcData* other);

  // implements Message ----------------------------------------------

  FunNpcData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FunNpcData& from);
  void MergeFrom(const FunNpcData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 npcid = 1;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcidFieldNumber = 1;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);

  // required uint64 tempid = 2;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempidFieldNumber = 2;
  inline ::google::protobuf::uint64 tempid() const;
  inline void set_tempid(::google::protobuf::uint64 value);

  // required .Cmd.ScenePos pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline const ::Cmd::ScenePos& pos() const;
  inline ::Cmd::ScenePos* mutable_pos();
  inline ::Cmd::ScenePos* release_pos();
  inline void set_allocated_pos(::Cmd::ScenePos* pos);

  // @@protoc_insertion_point(class_scope:Cmd.FunNpcData)
 private:
  inline void set_has_npcid();
  inline void clear_has_npcid();
  inline void set_has_tempid();
  inline void clear_has_tempid();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 tempid_;
  ::Cmd::ScenePos* pos_;
  ::google::protobuf::uint32 npcid_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static FunNpcData* default_instance_;
};
// -------------------------------------------------------------------

class FuntionNpcListUserCmd : public ::google::protobuf::Message {
 public:
  FuntionNpcListUserCmd();
  virtual ~FuntionNpcListUserCmd();

  FuntionNpcListUserCmd(const FuntionNpcListUserCmd& from);

  inline FuntionNpcListUserCmd& operator=(const FuntionNpcListUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FuntionNpcListUserCmd& default_instance();

  void Swap(FuntionNpcListUserCmd* other);

  // implements Message ----------------------------------------------

  FuntionNpcListUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FuntionNpcListUserCmd& from);
  void MergeFrom(const FuntionNpcListUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CmdParam param = 2 [default = FUNCTION_NPC_LIST_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CmdParam param() const;
  inline void set_param(::Cmd::CmdParam value);

  // repeated .Cmd.FunNpcData list = 3;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 3;
  inline const ::Cmd::FunNpcData& list(int index) const;
  inline ::Cmd::FunNpcData* mutable_list(int index);
  inline ::Cmd::FunNpcData* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::FunNpcData >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::FunNpcData >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:Cmd.FuntionNpcListUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::FunNpcData > list_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static FuntionNpcListUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class GUID : public ::google::protobuf::Message {
 public:
  GUID();
  virtual ~GUID();

  GUID(const GUID& from);

  inline GUID& operator=(const GUID& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GUID& default_instance();

  void Swap(GUID* other);

  // implements Message ----------------------------------------------

  GUID* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GUID& from);
  void MergeFrom(const GUID& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 zoneID = 1;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneIDFieldNumber = 1;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // required uint32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // required uint32 mapID = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // required uint32 index = 4;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 4;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GUID)
 private:
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 index_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static GUID* default_instance_;
};
// -------------------------------------------------------------------

class DeleteStaticEntryUserCmd : public ::google::protobuf::Message {
 public:
  DeleteStaticEntryUserCmd();
  virtual ~DeleteStaticEntryUserCmd();

  DeleteStaticEntryUserCmd(const DeleteStaticEntryUserCmd& from);

  inline DeleteStaticEntryUserCmd& operator=(const DeleteStaticEntryUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteStaticEntryUserCmd& default_instance();

  void Swap(DeleteStaticEntryUserCmd* other);

  // implements Message ----------------------------------------------

  DeleteStaticEntryUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteStaticEntryUserCmd& from);
  void MergeFrom(const DeleteStaticEntryUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CmdParam param = 2 [default = DELETE_STATIC_ENTRY_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CmdParam param() const;
  inline void set_param(::Cmd::CmdParam value);

  // repeated .Cmd.GUID list = 3;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 3;
  inline const ::Cmd::GUID& list(int index) const;
  inline ::Cmd::GUID* mutable_list(int index);
  inline ::Cmd::GUID* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GUID >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GUID >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:Cmd.DeleteStaticEntryUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GUID > list_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static DeleteStaticEntryUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class ShareDamTarget : public ::google::protobuf::Message {
 public:
  ShareDamTarget();
  virtual ~ShareDamTarget();

  ShareDamTarget(const ShareDamTarget& from);

  inline ShareDamTarget& operator=(const ShareDamTarget& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShareDamTarget& default_instance();

  void Swap(ShareDamTarget* other);

  // implements Message ----------------------------------------------

  ShareDamTarget* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShareDamTarget& from);
  void MergeFrom(const ShareDamTarget& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charid = 1 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional int32 damage = 2 [default = 0];
  inline bool has_damage() const;
  inline void clear_damage();
  static const int kDamageFieldNumber = 2;
  inline ::google::protobuf::int32 damage() const;
  inline void set_damage(::google::protobuf::int32 value);

  // optional int32 type = 3 [default = 1];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ShareDamTarget)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_damage();
  inline void clear_has_damage();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::int32 damage_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static ShareDamTarget* default_instance_;
};
// -------------------------------------------------------------------

class HitedTarget : public ::google::protobuf::Message {
 public:
  HitedTarget();
  virtual ~HitedTarget();

  HitedTarget(const HitedTarget& from);

  inline HitedTarget& operator=(const HitedTarget& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HitedTarget& default_instance();

  void Swap(HitedTarget* other);

  // implements Message ----------------------------------------------

  HitedTarget* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HitedTarget& from);
  void MergeFrom(const HitedTarget& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charid = 1 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional int32 damage = 2 [default = 0];
  inline bool has_damage() const;
  inline void clear_damage();
  static const int kDamageFieldNumber = 2;
  inline ::google::protobuf::int32 damage() const;
  inline void set_damage(::google::protobuf::int32 value);

  // optional int32 type = 3 [default = 1];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated .Cmd.ShareDamTarget shareTargets = 4;
  inline int sharetargets_size() const;
  inline void clear_sharetargets();
  static const int kShareTargetsFieldNumber = 4;
  inline const ::Cmd::ShareDamTarget& sharetargets(int index) const;
  inline ::Cmd::ShareDamTarget* mutable_sharetargets(int index);
  inline ::Cmd::ShareDamTarget* add_sharetargets();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ShareDamTarget >&
      sharetargets() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ShareDamTarget >*
      mutable_sharetargets();

  // @@protoc_insertion_point(class_scope:Cmd.HitedTarget)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_damage();
  inline void clear_has_damage();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::int32 damage_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ShareDamTarget > sharetargets_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static HitedTarget* default_instance_;
};
// -------------------------------------------------------------------

class PhaseData : public ::google::protobuf::Message {
 public:
  PhaseData();
  virtual ~PhaseData();

  PhaseData(const PhaseData& from);

  inline PhaseData& operator=(const PhaseData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PhaseData& default_instance();

  void Swap(PhaseData* other);

  // implements Message ----------------------------------------------

  PhaseData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PhaseData& from);
  void MergeFrom(const PhaseData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 number = 1 [default = 0];
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 1;
  inline ::google::protobuf::int32 number() const;
  inline void set_number(::google::protobuf::int32 value);

  // optional .Cmd.ScenePos pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline const ::Cmd::ScenePos& pos() const;
  inline ::Cmd::ScenePos* mutable_pos();
  inline ::Cmd::ScenePos* release_pos();
  inline void set_allocated_pos(::Cmd::ScenePos* pos);

  // repeated .Cmd.HitedTarget hitedTargets = 3;
  inline int hitedtargets_size() const;
  inline void clear_hitedtargets();
  static const int kHitedTargetsFieldNumber = 3;
  inline const ::Cmd::HitedTarget& hitedtargets(int index) const;
  inline ::Cmd::HitedTarget* mutable_hitedtargets(int index);
  inline ::Cmd::HitedTarget* add_hitedtargets();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::HitedTarget >&
      hitedtargets() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::HitedTarget >*
      mutable_hitedtargets();

  // optional int32 dir = 5 [default = 0];
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 5;
  inline ::google::protobuf::int32 dir() const;
  inline void set_dir(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Cmd.PhaseData)
 private:
  inline void set_has_number();
  inline void clear_has_number();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_dir();
  inline void clear_has_dir();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Cmd::ScenePos* pos_;
  ::google::protobuf::int32 number_;
  ::google::protobuf::int32 dir_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::HitedTarget > hitedtargets_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static PhaseData* default_instance_;
};
// -------------------------------------------------------------------

class SkillBroadcastUserCmd : public ::google::protobuf::Message {
 public:
  SkillBroadcastUserCmd();
  virtual ~SkillBroadcastUserCmd();

  SkillBroadcastUserCmd(const SkillBroadcastUserCmd& from);

  inline SkillBroadcastUserCmd& operator=(const SkillBroadcastUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillBroadcastUserCmd& default_instance();

  void Swap(SkillBroadcastUserCmd* other);

  // implements Message ----------------------------------------------

  SkillBroadcastUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillBroadcastUserCmd& from);
  void MergeFrom(const SkillBroadcastUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CmdParam param = 2 [default = SKILL_BROADCAST_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CmdParam param() const;
  inline void set_param(::Cmd::CmdParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 skillID = 4 [default = 0];
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 4;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);

  // optional int32 petid = 5 [default = 0];
  inline bool has_petid() const;
  inline void clear_petid();
  static const int kPetidFieldNumber = 5;
  inline ::google::protobuf::int32 petid() const;
  inline void set_petid(::google::protobuf::int32 value);

  // optional .Cmd.PhaseData data = 6;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 6;
  inline const ::Cmd::PhaseData& data() const;
  inline ::Cmd::PhaseData* mutable_data();
  inline ::Cmd::PhaseData* release_data();
  inline void set_allocated_data(::Cmd::PhaseData* data);

  // optional uint32 random = 7 [default = 0];
  inline bool has_random() const;
  inline void clear_random();
  static const int kRandomFieldNumber = 7;
  inline ::google::protobuf::uint32 random() const;
  inline void set_random(::google::protobuf::uint32 value);

  // optional uint32 chanttime = 8 [default = 0];
  inline bool has_chanttime() const;
  inline void clear_chanttime();
  static const int kChanttimeFieldNumber = 8;
  inline ::google::protobuf::uint32 chanttime() const;
  inline void set_chanttime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.SkillBroadcastUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_petid();
  inline void clear_has_petid();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_random();
  inline void clear_has_random();
  inline void set_has_chanttime();
  inline void clear_has_chanttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::int32 petid_;
  ::Cmd::PhaseData* data_;
  ::google::protobuf::uint32 random_;
  ::google::protobuf::uint32 chanttime_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static SkillBroadcastUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class TestUint64 : public ::google::protobuf::Message {
 public:
  TestUint64();
  virtual ~TestUint64();

  TestUint64(const TestUint64& from);

  inline TestUint64& operator=(const TestUint64& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestUint64& default_instance();

  void Swap(TestUint64* other);

  // implements Message ----------------------------------------------

  TestUint64* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TestUint64& from);
  void MergeFrom(const TestUint64& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 i = 1;
  inline bool has_i() const;
  inline void clear_i();
  static const int kIFieldNumber = 1;
  inline ::google::protobuf::int32 i() const;
  inline void set_i(::google::protobuf::int32 value);

  // optional uint64 j = 2;
  inline bool has_j() const;
  inline void clear_j();
  static const int kJFieldNumber = 2;
  inline ::google::protobuf::uint64 j() const;
  inline void set_j(::google::protobuf::uint64 value);

  // optional int32 k = 3;
  inline bool has_k() const;
  inline void clear_k();
  static const int kKFieldNumber = 3;
  inline ::google::protobuf::int32 k() const;
  inline void set_k(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Cmd.TestUint64)
 private:
  inline void set_has_i();
  inline void clear_has_i();
  inline void set_has_j();
  inline void clear_has_j();
  inline void set_has_k();
  inline void clear_has_k();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 j_;
  ::google::protobuf::int32 i_;
  ::google::protobuf::int32 k_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static TestUint64* default_instance_;
};
// -------------------------------------------------------------------

class TestSkillBroadcastUserCmd : public ::google::protobuf::Message {
 public:
  TestSkillBroadcastUserCmd();
  virtual ~TestSkillBroadcastUserCmd();

  TestSkillBroadcastUserCmd(const TestSkillBroadcastUserCmd& from);

  inline TestSkillBroadcastUserCmd& operator=(const TestSkillBroadcastUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestSkillBroadcastUserCmd& default_instance();

  void Swap(TestSkillBroadcastUserCmd* other);

  // implements Message ----------------------------------------------

  TestSkillBroadcastUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TestSkillBroadcastUserCmd& from);
  void MergeFrom(const TestSkillBroadcastUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CmdParam param = 2 [default = TEST_SKILL_BROADCAST_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CmdParam param() const;
  inline void set_param(::Cmd::CmdParam value);

  // required int32 i = 3;
  inline bool has_i() const;
  inline void clear_i();
  static const int kIFieldNumber = 3;
  inline ::google::protobuf::int32 i() const;
  inline void set_i(::google::protobuf::int32 value);

  // repeated .Cmd.TestUint64 list = 4;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 4;
  inline const ::Cmd::TestUint64& list(int index) const;
  inline ::Cmd::TestUint64* mutable_list(int index);
  inline ::Cmd::TestUint64* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TestUint64 >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TestUint64 >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:Cmd.TestSkillBroadcastUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_i();
  inline void clear_has_i();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TestUint64 > list_;
  ::google::protobuf::int32 i_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static TestSkillBroadcastUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class UseSkillUserCmd : public ::google::protobuf::Message {
 public:
  UseSkillUserCmd();
  virtual ~UseSkillUserCmd();

  UseSkillUserCmd(const UseSkillUserCmd& from);

  inline UseSkillUserCmd& operator=(const UseSkillUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UseSkillUserCmd& default_instance();

  void Swap(UseSkillUserCmd* other);

  // implements Message ----------------------------------------------

  UseSkillUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UseSkillUserCmd& from);
  void MergeFrom(const UseSkillUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CmdParam param = 2 [default = USE_SKILL_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CmdParam param() const;
  inline void set_param(::Cmd::CmdParam value);

  // optional uint64 tid = 3;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 3;
  inline ::google::protobuf::uint64 tid() const;
  inline void set_tid(::google::protobuf::uint64 value);

  // optional uint32 skillID = 4;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 4;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);

  // optional .Cmd.ScenePos pos = 5;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 5;
  inline const ::Cmd::ScenePos& pos() const;
  inline ::Cmd::ScenePos* mutable_pos();
  inline ::Cmd::ScenePos* release_pos();
  inline void set_allocated_pos(::Cmd::ScenePos* pos);

  // @@protoc_insertion_point(class_scope:Cmd.UseSkillUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_tid();
  inline void clear_has_tid();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 tid_;
  ::Cmd::ScenePos* pos_;
  ::google::protobuf::uint32 skillid_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static UseSkillUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class ChantSkillUserCmd : public ::google::protobuf::Message {
 public:
  ChantSkillUserCmd();
  virtual ~ChantSkillUserCmd();

  ChantSkillUserCmd(const ChantSkillUserCmd& from);

  inline ChantSkillUserCmd& operator=(const ChantSkillUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChantSkillUserCmd& default_instance();

  void Swap(ChantSkillUserCmd* other);

  // implements Message ----------------------------------------------

  ChantSkillUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChantSkillUserCmd& from);
  void MergeFrom(const ChantSkillUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CmdParam param = 2 [default = CHANT_SKILL_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CmdParam param() const;
  inline void set_param(::Cmd::CmdParam value);

  // optional uint64 tid = 3;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 3;
  inline ::google::protobuf::uint64 tid() const;
  inline void set_tid(::google::protobuf::uint64 value);

  // optional uint32 skillID = 4;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 4;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);

  // optional .Cmd.ScenePos pos = 5;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 5;
  inline const ::Cmd::ScenePos& pos() const;
  inline ::Cmd::ScenePos* mutable_pos();
  inline ::Cmd::ScenePos* release_pos();
  inline void set_allocated_pos(::Cmd::ScenePos* pos);

  // optional uint64 attid = 6;
  inline bool has_attid() const;
  inline void clear_attid();
  static const int kAttidFieldNumber = 6;
  inline ::google::protobuf::uint64 attid() const;
  inline void set_attid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.ChantSkillUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_tid();
  inline void clear_has_tid();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_attid();
  inline void clear_has_attid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 tid_;
  ::Cmd::ScenePos* pos_;
  ::google::protobuf::uint64 attid_;
  ::google::protobuf::uint32 skillid_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static ChantSkillUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class BreakChantSkillUserCmd : public ::google::protobuf::Message {
 public:
  BreakChantSkillUserCmd();
  virtual ~BreakChantSkillUserCmd();

  BreakChantSkillUserCmd(const BreakChantSkillUserCmd& from);

  inline BreakChantSkillUserCmd& operator=(const BreakChantSkillUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BreakChantSkillUserCmd& default_instance();

  void Swap(BreakChantSkillUserCmd* other);

  // implements Message ----------------------------------------------

  BreakChantSkillUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BreakChantSkillUserCmd& from);
  void MergeFrom(const BreakChantSkillUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CmdParam param = 2 [default = BREAK_CHANT_SKILL_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CmdParam param() const;
  inline void set_param(::Cmd::CmdParam value);

  // optional uint64 attid = 3;
  inline bool has_attid() const;
  inline void clear_attid();
  static const int kAttidFieldNumber = 3;
  inline ::google::protobuf::uint64 attid() const;
  inline void set_attid(::google::protobuf::uint64 value);

  // optional uint32 skillID = 4;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 4;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.BreakChantSkillUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_attid();
  inline void clear_has_attid();
  inline void set_has_skillid();
  inline void clear_has_skillid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 attid_;
  ::google::protobuf::uint32 skillid_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static BreakChantSkillUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class BroadcastSkillUserCmd : public ::google::protobuf::Message {
 public:
  BroadcastSkillUserCmd();
  virtual ~BroadcastSkillUserCmd();

  BroadcastSkillUserCmd(const BroadcastSkillUserCmd& from);

  inline BroadcastSkillUserCmd& operator=(const BroadcastSkillUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BroadcastSkillUserCmd& default_instance();

  void Swap(BroadcastSkillUserCmd* other);

  // implements Message ----------------------------------------------

  BroadcastSkillUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BroadcastSkillUserCmd& from);
  void MergeFrom(const BroadcastSkillUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CmdParam param = 2 [default = BROADCAST_SKILL_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CmdParam param() const;
  inline void set_param(::Cmd::CmdParam value);

  // optional uint64 attid = 3;
  inline bool has_attid() const;
  inline void clear_attid();
  static const int kAttidFieldNumber = 3;
  inline ::google::protobuf::uint64 attid() const;
  inline void set_attid(::google::protobuf::uint64 value);

  // optional uint32 skillID = 4;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 4;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);

  // optional .Cmd.ScenePos pos = 5;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 5;
  inline const ::Cmd::ScenePos& pos() const;
  inline ::Cmd::ScenePos* mutable_pos();
  inline ::Cmd::ScenePos* release_pos();
  inline void set_allocated_pos(::Cmd::ScenePos* pos);

  // optional uint64 tid = 6;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 6;
  inline ::google::protobuf::uint64 tid() const;
  inline void set_tid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.BroadcastSkillUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_attid();
  inline void clear_has_attid();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_tid();
  inline void clear_has_tid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 attid_;
  ::Cmd::ScenePos* pos_;
  ::google::protobuf::uint64 tid_;
  ::google::protobuf::uint32 skillid_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static BroadcastSkillUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class MapObjectData : public ::google::protobuf::Message {
 public:
  MapObjectData();
  virtual ~MapObjectData();

  MapObjectData(const MapObjectData& from);

  inline MapObjectData& operator=(const MapObjectData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MapObjectData& default_instance();

  void Swap(MapObjectData* other);

  // implements Message ----------------------------------------------

  MapObjectData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MapObjectData& from);
  void MergeFrom(const MapObjectData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CmdParam param = 2 [default = MAP_OBJECT_DATA];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CmdParam param() const;
  inline void set_param(::Cmd::CmdParam value);

  // optional uint64 guid = 3 [default = 0];
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 3;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // repeated .Cmd.UserAttr attrs = 4;
  inline int attrs_size() const;
  inline void clear_attrs();
  static const int kAttrsFieldNumber = 4;
  inline const ::Cmd::UserAttr& attrs(int index) const;
  inline ::Cmd::UserAttr* mutable_attrs(int index);
  inline ::Cmd::UserAttr* add_attrs();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >&
      attrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >*
      mutable_attrs();

  // @@protoc_insertion_point(class_scope:Cmd.MapObjectData)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_guid();
  inline void clear_has_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr > attrs_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static MapObjectData* default_instance_;
};
// -------------------------------------------------------------------

class ReliveUserCmd : public ::google::protobuf::Message {
 public:
  ReliveUserCmd();
  virtual ~ReliveUserCmd();

  ReliveUserCmd(const ReliveUserCmd& from);

  inline ReliveUserCmd& operator=(const ReliveUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReliveUserCmd& default_instance();

  void Swap(ReliveUserCmd* other);

  // implements Message ----------------------------------------------

  ReliveUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReliveUserCmd& from);
  void MergeFrom(const ReliveUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CmdParam param = 2 [default = RELIVE_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CmdParam param() const;
  inline void set_param(::Cmd::CmdParam value);

  // optional uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ReliveUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static ReliveUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class GoToUserCmd : public ::google::protobuf::Message {
 public:
  GoToUserCmd();
  virtual ~GoToUserCmd();

  GoToUserCmd(const GoToUserCmd& from);

  inline GoToUserCmd& operator=(const GoToUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GoToUserCmd& default_instance();

  void Swap(GoToUserCmd* other);

  // implements Message ----------------------------------------------

  GoToUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GoToUserCmd& from);
  void MergeFrom(const GoToUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CmdParam param = 2 [default = GOTO_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CmdParam param() const;
  inline void set_param(::Cmd::CmdParam value);

  // optional .Cmd.ScenePos pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline const ::Cmd::ScenePos& pos() const;
  inline ::Cmd::ScenePos* mutable_pos();
  inline ::Cmd::ScenePos* release_pos();
  inline void set_allocated_pos(::Cmd::ScenePos* pos);

  // optional uint64 charid = 4 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 4;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional bool isgomap = 5 [default = false];
  inline bool has_isgomap() const;
  inline void clear_isgomap();
  static const int kIsgomapFieldNumber = 5;
  inline bool isgomap() const;
  inline void set_isgomap(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.GoToUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_isgomap();
  inline void clear_has_isgomap();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::ScenePos* pos_;
  ::google::protobuf::uint64 charid_;
  bool isgomap_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static GoToUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class ReconnectionPosUserCmd : public ::google::protobuf::Message {
 public:
  ReconnectionPosUserCmd();
  virtual ~ReconnectionPosUserCmd();

  ReconnectionPosUserCmd(const ReconnectionPosUserCmd& from);

  inline ReconnectionPosUserCmd& operator=(const ReconnectionPosUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReconnectionPosUserCmd& default_instance();

  void Swap(ReconnectionPosUserCmd* other);

  // implements Message ----------------------------------------------

  ReconnectionPosUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReconnectionPosUserCmd& from);
  void MergeFrom(const ReconnectionPosUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CmdParam param = 2 [default = RECONNECTION_POS_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CmdParam param() const;
  inline void set_param(::Cmd::CmdParam value);

  // optional .Cmd.ScenePos pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline const ::Cmd::ScenePos& pos() const;
  inline ::Cmd::ScenePos* mutable_pos();
  inline ::Cmd::ScenePos* release_pos();
  inline void set_allocated_pos(::Cmd::ScenePos* pos);

  // @@protoc_insertion_point(class_scope:Cmd.ReconnectionPosUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::ScenePos* pos_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static ReconnectionPosUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class GoToExitPosUserCmd : public ::google::protobuf::Message {
 public:
  GoToExitPosUserCmd();
  virtual ~GoToExitPosUserCmd();

  GoToExitPosUserCmd(const GoToExitPosUserCmd& from);

  inline GoToExitPosUserCmd& operator=(const GoToExitPosUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GoToExitPosUserCmd& default_instance();

  void Swap(GoToExitPosUserCmd* other);

  // implements Message ----------------------------------------------

  GoToExitPosUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GoToExitPosUserCmd& from);
  void MergeFrom(const GoToExitPosUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CmdParam param = 2 [default = GOTO_EXIT_POS_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CmdParam param() const;
  inline void set_param(::Cmd::CmdParam value);

  // optional uint32 mapid = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GoToExitPosUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static GoToExitPosUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class GoToRandomPosUserCmd : public ::google::protobuf::Message {
 public:
  GoToRandomPosUserCmd();
  virtual ~GoToRandomPosUserCmd();

  GoToRandomPosUserCmd(const GoToRandomPosUserCmd& from);

  inline GoToRandomPosUserCmd& operator=(const GoToRandomPosUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GoToRandomPosUserCmd& default_instance();

  void Swap(GoToRandomPosUserCmd* other);

  // implements Message ----------------------------------------------

  GoToRandomPosUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GoToRandomPosUserCmd& from);
  void MergeFrom(const GoToRandomPosUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CmdParam param = 2 [default = GOTO_RANDOM_POS_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CmdParam param() const;
  inline void set_param(::Cmd::CmdParam value);

  // optional uint32 mapid = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // optional .Cmd.ScenePos pos = 4;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 4;
  inline const ::Cmd::ScenePos& pos() const;
  inline ::Cmd::ScenePos* mutable_pos();
  inline ::Cmd::ScenePos* release_pos();
  inline void set_allocated_pos(::Cmd::ScenePos* pos);

  // @@protoc_insertion_point(class_scope:Cmd.GoToRandomPosUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::ScenePos* pos_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_SceneUser_2eproto();
  friend void protobuf_AssignDesc_SceneUser_2eproto();
  friend void protobuf_ShutdownFile_SceneUser_2eproto();

  void InitAsDefaultInstance();
  static GoToRandomPosUserCmd* default_instance_;
};
// ===================================================================


// ===================================================================

// UserAttr

// required .Cmd.EAttrType type = 1 [default = EATTRTYPE_MIN];
inline bool UserAttr::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserAttr::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserAttr::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserAttr::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::EAttrType UserAttr::type() const {
  // @@protoc_insertion_point(field_get:Cmd.UserAttr.type)
  return static_cast< ::Cmd::EAttrType >(type_);
}
inline void UserAttr::set_type(::Cmd::EAttrType value) {
  assert(::Cmd::EAttrType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserAttr.type)
}

// required int32 value = 2 [default = 0];
inline bool UserAttr::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserAttr::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserAttr::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserAttr::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 UserAttr::value() const {
  // @@protoc_insertion_point(field_get:Cmd.UserAttr.value)
  return value_;
}
inline void UserAttr::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserAttr.value)
}

// -------------------------------------------------------------------

// UserAttrSvr

// optional .Cmd.EAttrType type = 1 [default = EATTRTYPE_MIN];
inline bool UserAttrSvr::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserAttrSvr::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserAttrSvr::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserAttrSvr::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::EAttrType UserAttrSvr::type() const {
  // @@protoc_insertion_point(field_get:Cmd.UserAttrSvr.type)
  return static_cast< ::Cmd::EAttrType >(type_);
}
inline void UserAttrSvr::set_type(::Cmd::EAttrType value) {
  assert(::Cmd::EAttrType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserAttrSvr.type)
}

// optional float value = 2 [default = 0];
inline bool UserAttrSvr::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserAttrSvr::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserAttrSvr::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserAttrSvr::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline float UserAttrSvr::value() const {
  // @@protoc_insertion_point(field_get:Cmd.UserAttrSvr.value)
  return value_;
}
inline void UserAttrSvr::set_value(float value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserAttrSvr.value)
}

// -------------------------------------------------------------------

// UserData

// required .Cmd.EUserDataType type = 1 [default = EUSERDATATYPE_MIN];
inline bool UserData::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserData::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserData::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserData::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::EUserDataType UserData::type() const {
  // @@protoc_insertion_point(field_get:Cmd.UserData.type)
  return static_cast< ::Cmd::EUserDataType >(type_);
}
inline void UserData::set_type(::Cmd::EUserDataType value) {
  assert(::Cmd::EUserDataType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserData.type)
}

// required uint64 value = 2 [default = 0];
inline bool UserData::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserData::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserData::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserData::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 UserData::value() const {
  // @@protoc_insertion_point(field_get:Cmd.UserData.value)
  return value_;
}
inline void UserData::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserData.value)
}

// optional bytes data = 3;
inline bool UserData::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserData::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserData::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserData::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& UserData::data() const {
  // @@protoc_insertion_point(field_get:Cmd.UserData.data)
  return *data_;
}
inline void UserData::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.UserData.data)
}
inline void UserData::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.UserData.data)
}
inline void UserData::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.UserData.data)
}
inline ::std::string* UserData::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.UserData.data)
  return data_;
}
inline ::std::string* UserData::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserData::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.UserData.data)
}

// -------------------------------------------------------------------

// UserSyncCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
inline bool UserSyncCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserSyncCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserSyncCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserSyncCmd::clear_cmd() {
  cmd_ = 5;
  clear_has_cmd();
}
inline ::Cmd::Command UserSyncCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UserSyncCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UserSyncCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserSyncCmd.cmd)
}

// optional .Cmd.CmdParam param = 2 [default = USERPARAM_USERSYNC];
inline bool UserSyncCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserSyncCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserSyncCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserSyncCmd::clear_param() {
  param_ = 1;
  clear_has_param();
}
inline ::Cmd::CmdParam UserSyncCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UserSyncCmd.param)
  return static_cast< ::Cmd::CmdParam >(param_);
}
inline void UserSyncCmd::set_param(::Cmd::CmdParam value) {
  assert(::Cmd::CmdParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserSyncCmd.param)
}

// optional .Cmd.EUserSyncType type = 3 [default = EUSERSYNCTYPE_MIN];
inline bool UserSyncCmd::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserSyncCmd::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserSyncCmd::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserSyncCmd::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::Cmd::EUserSyncType UserSyncCmd::type() const {
  // @@protoc_insertion_point(field_get:Cmd.UserSyncCmd.type)
  return static_cast< ::Cmd::EUserSyncType >(type_);
}
inline void UserSyncCmd::set_type(::Cmd::EUserSyncType value) {
  assert(::Cmd::EUserSyncType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserSyncCmd.type)
}

// repeated .Cmd.UserAttr attrs = 4;
inline int UserSyncCmd::attrs_size() const {
  return attrs_.size();
}
inline void UserSyncCmd::clear_attrs() {
  attrs_.Clear();
}
inline const ::Cmd::UserAttr& UserSyncCmd::attrs(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UserSyncCmd.attrs)
  return attrs_.Get(index);
}
inline ::Cmd::UserAttr* UserSyncCmd::mutable_attrs(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.UserSyncCmd.attrs)
  return attrs_.Mutable(index);
}
inline ::Cmd::UserAttr* UserSyncCmd::add_attrs() {
  // @@protoc_insertion_point(field_add:Cmd.UserSyncCmd.attrs)
  return attrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >&
UserSyncCmd::attrs() const {
  // @@protoc_insertion_point(field_list:Cmd.UserSyncCmd.attrs)
  return attrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >*
UserSyncCmd::mutable_attrs() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UserSyncCmd.attrs)
  return &attrs_;
}

// repeated .Cmd.UserData datas = 5;
inline int UserSyncCmd::datas_size() const {
  return datas_.size();
}
inline void UserSyncCmd::clear_datas() {
  datas_.Clear();
}
inline const ::Cmd::UserData& UserSyncCmd::datas(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UserSyncCmd.datas)
  return datas_.Get(index);
}
inline ::Cmd::UserData* UserSyncCmd::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.UserSyncCmd.datas)
  return datas_.Mutable(index);
}
inline ::Cmd::UserData* UserSyncCmd::add_datas() {
  // @@protoc_insertion_point(field_add:Cmd.UserSyncCmd.datas)
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UserData >&
UserSyncCmd::datas() const {
  // @@protoc_insertion_point(field_list:Cmd.UserSyncCmd.datas)
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::UserData >*
UserSyncCmd::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UserSyncCmd.datas)
  return &datas_;
}

// repeated .Cmd.UserAttr pointattrs = 6;
inline int UserSyncCmd::pointattrs_size() const {
  return pointattrs_.size();
}
inline void UserSyncCmd::clear_pointattrs() {
  pointattrs_.Clear();
}
inline const ::Cmd::UserAttr& UserSyncCmd::pointattrs(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UserSyncCmd.pointattrs)
  return pointattrs_.Get(index);
}
inline ::Cmd::UserAttr* UserSyncCmd::mutable_pointattrs(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.UserSyncCmd.pointattrs)
  return pointattrs_.Mutable(index);
}
inline ::Cmd::UserAttr* UserSyncCmd::add_pointattrs() {
  // @@protoc_insertion_point(field_add:Cmd.UserSyncCmd.pointattrs)
  return pointattrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >&
UserSyncCmd::pointattrs() const {
  // @@protoc_insertion_point(field_list:Cmd.UserSyncCmd.pointattrs)
  return pointattrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >*
UserSyncCmd::mutable_pointattrs() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UserSyncCmd.pointattrs)
  return &pointattrs_;
}

// -------------------------------------------------------------------

// UserMessageCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
inline bool UserMessageCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserMessageCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserMessageCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserMessageCmd::clear_cmd() {
  cmd_ = 5;
  clear_has_cmd();
}
inline ::Cmd::Command UserMessageCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UserMessageCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UserMessageCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserMessageCmd.cmd)
}

// optional uint32 param = 2 [default = 200];
inline bool UserMessageCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserMessageCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserMessageCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserMessageCmd::clear_param() {
  param_ = 200u;
  clear_has_param();
}
inline ::google::protobuf::uint32 UserMessageCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UserMessageCmd.param)
  return param_;
}
inline void UserMessageCmd::set_param(::google::protobuf::uint32 value) {
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserMessageCmd.param)
}

// optional uint32 id = 3 [default = 0];
inline bool UserMessageCmd::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserMessageCmd::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserMessageCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserMessageCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 UserMessageCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.UserMessageCmd.id)
  return id_;
}
inline void UserMessageCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserMessageCmd.id)
}

// optional .Cmd.MessageType type = 4 [default = MESSAGETYPE_MIN];
inline bool UserMessageCmd::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserMessageCmd::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserMessageCmd::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserMessageCmd::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::MessageType UserMessageCmd::type() const {
  // @@protoc_insertion_point(field_get:Cmd.UserMessageCmd.type)
  return static_cast< ::Cmd::MessageType >(type_);
}
inline void UserMessageCmd::set_type(::Cmd::MessageType value) {
  assert(::Cmd::MessageType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserMessageCmd.type)
}

// optional string addstr = 5;
inline bool UserMessageCmd::has_addstr() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserMessageCmd::set_has_addstr() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserMessageCmd::clear_has_addstr() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserMessageCmd::clear_addstr() {
  if (addstr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    addstr_->clear();
  }
  clear_has_addstr();
}
inline const ::std::string& UserMessageCmd::addstr() const {
  // @@protoc_insertion_point(field_get:Cmd.UserMessageCmd.addstr)
  return *addstr_;
}
inline void UserMessageCmd::set_addstr(const ::std::string& value) {
  set_has_addstr();
  if (addstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    addstr_ = new ::std::string;
  }
  addstr_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.UserMessageCmd.addstr)
}
inline void UserMessageCmd::set_addstr(const char* value) {
  set_has_addstr();
  if (addstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    addstr_ = new ::std::string;
  }
  addstr_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.UserMessageCmd.addstr)
}
inline void UserMessageCmd::set_addstr(const char* value, size_t size) {
  set_has_addstr();
  if (addstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    addstr_ = new ::std::string;
  }
  addstr_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.UserMessageCmd.addstr)
}
inline ::std::string* UserMessageCmd::mutable_addstr() {
  set_has_addstr();
  if (addstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    addstr_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.UserMessageCmd.addstr)
  return addstr_;
}
inline ::std::string* UserMessageCmd::release_addstr() {
  clear_has_addstr();
  if (addstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = addstr_;
    addstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserMessageCmd::set_allocated_addstr(::std::string* addstr) {
  if (addstr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete addstr_;
  }
  if (addstr) {
    set_has_addstr();
    addstr_ = addstr;
  } else {
    clear_has_addstr();
    addstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.UserMessageCmd.addstr)
}

// -------------------------------------------------------------------

// UserGMCommand

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
inline bool UserGMCommand::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserGMCommand::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserGMCommand::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserGMCommand::clear_cmd() {
  cmd_ = 5;
  clear_has_cmd();
}
inline ::Cmd::Command UserGMCommand::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UserGMCommand.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UserGMCommand::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserGMCommand.cmd)
}

// optional uint32 param = 2 [default = 3];
inline bool UserGMCommand::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserGMCommand::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserGMCommand::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserGMCommand::clear_param() {
  param_ = 3u;
  clear_has_param();
}
inline ::google::protobuf::uint32 UserGMCommand::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UserGMCommand.param)
  return param_;
}
inline void UserGMCommand::set_param(::google::protobuf::uint32 value) {
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserGMCommand.param)
}

// optional string command = 3;
inline bool UserGMCommand::has_command() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserGMCommand::set_has_command() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserGMCommand::clear_has_command() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserGMCommand::clear_command() {
  if (command_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    command_->clear();
  }
  clear_has_command();
}
inline const ::std::string& UserGMCommand::command() const {
  // @@protoc_insertion_point(field_get:Cmd.UserGMCommand.command)
  return *command_;
}
inline void UserGMCommand::set_command(const ::std::string& value) {
  set_has_command();
  if (command_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    command_ = new ::std::string;
  }
  command_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.UserGMCommand.command)
}
inline void UserGMCommand::set_command(const char* value) {
  set_has_command();
  if (command_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    command_ = new ::std::string;
  }
  command_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.UserGMCommand.command)
}
inline void UserGMCommand::set_command(const char* value, size_t size) {
  set_has_command();
  if (command_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    command_ = new ::std::string;
  }
  command_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.UserGMCommand.command)
}
inline ::std::string* UserGMCommand::mutable_command() {
  set_has_command();
  if (command_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    command_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.UserGMCommand.command)
  return command_;
}
inline ::std::string* UserGMCommand::release_command() {
  clear_has_command();
  if (command_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = command_;
    command_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserGMCommand::set_allocated_command(::std::string* command) {
  if (command_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete command_;
  }
  if (command) {
    set_has_command();
    command_ = command;
  } else {
    clear_has_command();
    command_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.UserGMCommand.command)
}

// -------------------------------------------------------------------

// UserProfessionExchange

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
inline bool UserProfessionExchange::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserProfessionExchange::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserProfessionExchange::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserProfessionExchange::clear_cmd() {
  cmd_ = 5;
  clear_has_cmd();
}
inline ::Cmd::Command UserProfessionExchange::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UserProfessionExchange.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UserProfessionExchange::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserProfessionExchange.cmd)
}

// optional uint32 param = 2 [default = 4];
inline bool UserProfessionExchange::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserProfessionExchange::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserProfessionExchange::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserProfessionExchange::clear_param() {
  param_ = 4u;
  clear_has_param();
}
inline ::google::protobuf::uint32 UserProfessionExchange::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UserProfessionExchange.param)
  return param_;
}
inline void UserProfessionExchange::set_param(::google::protobuf::uint32 value) {
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserProfessionExchange.param)
}

// optional .Cmd.EProfession profession = 3 [default = EPROFESSION_MIN];
inline bool UserProfessionExchange::has_profession() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserProfessionExchange::set_has_profession() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserProfessionExchange::clear_has_profession() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserProfessionExchange::clear_profession() {
  profession_ = 0;
  clear_has_profession();
}
inline ::Cmd::EProfession UserProfessionExchange::profession() const {
  // @@protoc_insertion_point(field_get:Cmd.UserProfessionExchange.profession)
  return static_cast< ::Cmd::EProfession >(profession_);
}
inline void UserProfessionExchange::set_profession(::Cmd::EProfession value) {
  assert(::Cmd::EProfession_IsValid(value));
  set_has_profession();
  profession_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserProfessionExchange.profession)
}

// -------------------------------------------------------------------

// UserTest

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
inline bool UserTest::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserTest::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserTest::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserTest::clear_cmd() {
  cmd_ = 5;
  clear_has_cmd();
}
inline ::Cmd::Command UserTest::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UserTest.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UserTest::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserTest.cmd)
}

// optional uint32 param = 2 [default = 10];
inline bool UserTest::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserTest::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserTest::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserTest::clear_param() {
  param_ = 10u;
  clear_has_param();
}
inline ::google::protobuf::uint32 UserTest::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UserTest.param)
  return param_;
}
inline void UserTest::set_param(::google::protobuf::uint32 value) {
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserTest.param)
}

// repeated .Cmd.UserAttr attrs = 3;
inline int UserTest::attrs_size() const {
  return attrs_.size();
}
inline void UserTest::clear_attrs() {
  attrs_.Clear();
}
inline const ::Cmd::UserAttr& UserTest::attrs(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UserTest.attrs)
  return attrs_.Get(index);
}
inline ::Cmd::UserAttr* UserTest::mutable_attrs(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.UserTest.attrs)
  return attrs_.Mutable(index);
}
inline ::Cmd::UserAttr* UserTest::add_attrs() {
  // @@protoc_insertion_point(field_add:Cmd.UserTest.attrs)
  return attrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >&
UserTest::attrs() const {
  // @@protoc_insertion_point(field_list:Cmd.UserTest.attrs)
  return attrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >*
UserTest::mutable_attrs() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UserTest.attrs)
  return &attrs_;
}

// -------------------------------------------------------------------

// UserFaceCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
inline bool UserFaceCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserFaceCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserFaceCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserFaceCmd::clear_cmd() {
  cmd_ = 5;
  clear_has_cmd();
}
inline ::Cmd::Command UserFaceCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UserFaceCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UserFaceCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserFaceCmd.cmd)
}

// optional uint32 param = 2 [default = 200];
inline bool UserFaceCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserFaceCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserFaceCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserFaceCmd::clear_param() {
  param_ = 200u;
  clear_has_param();
}
inline ::google::protobuf::uint32 UserFaceCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UserFaceCmd.param)
  return param_;
}
inline void UserFaceCmd::set_param(::google::protobuf::uint32 value) {
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserFaceCmd.param)
}

// optional uint32 id = 3 [default = 0];
inline bool UserFaceCmd::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserFaceCmd::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserFaceCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserFaceCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 UserFaceCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.UserFaceCmd.id)
  return id_;
}
inline void UserFaceCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserFaceCmd.id)
}

// -------------------------------------------------------------------

// MainUserData

// optional uint64 id = 1;
inline bool MainUserData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MainUserData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MainUserData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MainUserData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 MainUserData::id() const {
  // @@protoc_insertion_point(field_get:Cmd.MainUserData.id)
  return id_;
}
inline void MainUserData::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MainUserData.id)
}

// optional string name = 2;
inline bool MainUserData::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MainUserData::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MainUserData::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MainUserData::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& MainUserData::name() const {
  // @@protoc_insertion_point(field_get:Cmd.MainUserData.name)
  return *name_;
}
inline void MainUserData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.MainUserData.name)
}
inline void MainUserData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.MainUserData.name)
}
inline void MainUserData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.MainUserData.name)
}
inline ::std::string* MainUserData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.MainUserData.name)
  return name_;
}
inline ::std::string* MainUserData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MainUserData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.MainUserData.name)
}

// optional uint32 male = 3;
inline bool MainUserData::has_male() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MainUserData::set_has_male() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MainUserData::clear_has_male() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MainUserData::clear_male() {
  male_ = 0u;
  clear_has_male();
}
inline ::google::protobuf::uint32 MainUserData::male() const {
  // @@protoc_insertion_point(field_get:Cmd.MainUserData.male)
  return male_;
}
inline void MainUserData::set_male(::google::protobuf::uint32 value) {
  set_has_male();
  male_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MainUserData.male)
}

// optional uint32 body = 4;
inline bool MainUserData::has_body() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MainUserData::set_has_body() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MainUserData::clear_has_body() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MainUserData::clear_body() {
  body_ = 0u;
  clear_has_body();
}
inline ::google::protobuf::uint32 MainUserData::body() const {
  // @@protoc_insertion_point(field_get:Cmd.MainUserData.body)
  return body_;
}
inline void MainUserData::set_body(::google::protobuf::uint32 value) {
  set_has_body();
  body_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MainUserData.body)
}

// optional uint32 hair = 5;
inline bool MainUserData::has_hair() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MainUserData::set_has_hair() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MainUserData::clear_has_hair() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MainUserData::clear_hair() {
  hair_ = 0u;
  clear_has_hair();
}
inline ::google::protobuf::uint32 MainUserData::hair() const {
  // @@protoc_insertion_point(field_get:Cmd.MainUserData.hair)
  return hair_;
}
inline void MainUserData::set_hair(::google::protobuf::uint32 value) {
  set_has_hair();
  hair_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MainUserData.hair)
}

// optional uint32 rightHand = 6;
inline bool MainUserData::has_righthand() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MainUserData::set_has_righthand() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MainUserData::clear_has_righthand() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MainUserData::clear_righthand() {
  righthand_ = 0u;
  clear_has_righthand();
}
inline ::google::protobuf::uint32 MainUserData::righthand() const {
  // @@protoc_insertion_point(field_get:Cmd.MainUserData.rightHand)
  return righthand_;
}
inline void MainUserData::set_righthand(::google::protobuf::uint32 value) {
  set_has_righthand();
  righthand_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MainUserData.rightHand)
}

// optional uint32 profession = 7;
inline bool MainUserData::has_profession() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MainUserData::set_has_profession() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MainUserData::clear_has_profession() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MainUserData::clear_profession() {
  profession_ = 0u;
  clear_has_profession();
}
inline ::google::protobuf::uint32 MainUserData::profession() const {
  // @@protoc_insertion_point(field_get:Cmd.MainUserData.profession)
  return profession_;
}
inline void MainUserData::set_profession(::google::protobuf::uint32 value) {
  set_has_profession();
  profession_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MainUserData.profession)
}

// optional uint32 accessory = 8;
inline bool MainUserData::has_accessory() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MainUserData::set_has_accessory() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MainUserData::clear_has_accessory() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MainUserData::clear_accessory() {
  accessory_ = 0u;
  clear_has_accessory();
}
inline ::google::protobuf::uint32 MainUserData::accessory() const {
  // @@protoc_insertion_point(field_get:Cmd.MainUserData.accessory)
  return accessory_;
}
inline void MainUserData::set_accessory(::google::protobuf::uint32 value) {
  set_has_accessory();
  accessory_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MainUserData.accessory)
}

// optional uint32 wing = 9;
inline bool MainUserData::has_wing() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MainUserData::set_has_wing() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MainUserData::clear_has_wing() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MainUserData::clear_wing() {
  wing_ = 0u;
  clear_has_wing();
}
inline ::google::protobuf::uint32 MainUserData::wing() const {
  // @@protoc_insertion_point(field_get:Cmd.MainUserData.wing)
  return wing_;
}
inline void MainUserData::set_wing(::google::protobuf::uint32 value) {
  set_has_wing();
  wing_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MainUserData.wing)
}

// -------------------------------------------------------------------

// MainUserDataUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
inline bool MainUserDataUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MainUserDataUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MainUserDataUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MainUserDataUserCmd::clear_cmd() {
  cmd_ = 5;
  clear_has_cmd();
}
inline ::Cmd::Command MainUserDataUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.MainUserDataUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void MainUserDataUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MainUserDataUserCmd.cmd)
}

// optional .Cmd.CmdParam param = 2 [default = MAIN_USER_DATA_USER_CMD];
inline bool MainUserDataUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MainUserDataUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MainUserDataUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MainUserDataUserCmd::clear_param() {
  param_ = 11;
  clear_has_param();
}
inline ::Cmd::CmdParam MainUserDataUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.MainUserDataUserCmd.param)
  return static_cast< ::Cmd::CmdParam >(param_);
}
inline void MainUserDataUserCmd::set_param(::Cmd::CmdParam value) {
  assert(::Cmd::CmdParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MainUserDataUserCmd.param)
}

// optional .Cmd.MainUserData data = 3;
inline bool MainUserDataUserCmd::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MainUserDataUserCmd::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MainUserDataUserCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MainUserDataUserCmd::clear_data() {
  if (data_ != NULL) data_->::Cmd::MainUserData::Clear();
  clear_has_data();
}
inline const ::Cmd::MainUserData& MainUserDataUserCmd::data() const {
  // @@protoc_insertion_point(field_get:Cmd.MainUserDataUserCmd.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Cmd::MainUserData* MainUserDataUserCmd::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Cmd::MainUserData;
  // @@protoc_insertion_point(field_mutable:Cmd.MainUserDataUserCmd.data)
  return data_;
}
inline ::Cmd::MainUserData* MainUserDataUserCmd::release_data() {
  clear_has_data();
  ::Cmd::MainUserData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void MainUserDataUserCmd::set_allocated_data(::Cmd::MainUserData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.MainUserDataUserCmd.data)
}

// -------------------------------------------------------------------

// ReqMoveUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
inline bool ReqMoveUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqMoveUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqMoveUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqMoveUserCmd::clear_cmd() {
  cmd_ = 5;
  clear_has_cmd();
}
inline ::Cmd::Command ReqMoveUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ReqMoveUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ReqMoveUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ReqMoveUserCmd.cmd)
}

// optional .Cmd.CmdParam param = 2 [default = REQ_MOVE_USER_CMD];
inline bool ReqMoveUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqMoveUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqMoveUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqMoveUserCmd::clear_param() {
  param_ = 15;
  clear_has_param();
}
inline ::Cmd::CmdParam ReqMoveUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ReqMoveUserCmd.param)
  return static_cast< ::Cmd::CmdParam >(param_);
}
inline void ReqMoveUserCmd::set_param(::Cmd::CmdParam value) {
  assert(::Cmd::CmdParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ReqMoveUserCmd.param)
}

// optional .Cmd.ScenePos target = 3;
inline bool ReqMoveUserCmd::has_target() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqMoveUserCmd::set_has_target() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqMoveUserCmd::clear_has_target() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqMoveUserCmd::clear_target() {
  if (target_ != NULL) target_->::Cmd::ScenePos::Clear();
  clear_has_target();
}
inline const ::Cmd::ScenePos& ReqMoveUserCmd::target() const {
  // @@protoc_insertion_point(field_get:Cmd.ReqMoveUserCmd.target)
  return target_ != NULL ? *target_ : *default_instance_->target_;
}
inline ::Cmd::ScenePos* ReqMoveUserCmd::mutable_target() {
  set_has_target();
  if (target_ == NULL) target_ = new ::Cmd::ScenePos;
  // @@protoc_insertion_point(field_mutable:Cmd.ReqMoveUserCmd.target)
  return target_;
}
inline ::Cmd::ScenePos* ReqMoveUserCmd::release_target() {
  clear_has_target();
  ::Cmd::ScenePos* temp = target_;
  target_ = NULL;
  return temp;
}
inline void ReqMoveUserCmd::set_allocated_target(::Cmd::ScenePos* target) {
  delete target_;
  target_ = target;
  if (target) {
    set_has_target();
  } else {
    clear_has_target();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ReqMoveUserCmd.target)
}

// -------------------------------------------------------------------

// RetMoveUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
inline bool RetMoveUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetMoveUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetMoveUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetMoveUserCmd::clear_cmd() {
  cmd_ = 5;
  clear_has_cmd();
}
inline ::Cmd::Command RetMoveUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.RetMoveUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void RetMoveUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RetMoveUserCmd.cmd)
}

// optional .Cmd.CmdParam param = 2 [default = RET_MOVE_USER_CMD];
inline bool RetMoveUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetMoveUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetMoveUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetMoveUserCmd::clear_param() {
  param_ = 16;
  clear_has_param();
}
inline ::Cmd::CmdParam RetMoveUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.RetMoveUserCmd.param)
  return static_cast< ::Cmd::CmdParam >(param_);
}
inline void RetMoveUserCmd::set_param(::Cmd::CmdParam value) {
  assert(::Cmd::CmdParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RetMoveUserCmd.param)
}

// optional uint64 charid = 3;
inline bool RetMoveUserCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RetMoveUserCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RetMoveUserCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RetMoveUserCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 RetMoveUserCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.RetMoveUserCmd.charid)
  return charid_;
}
inline void RetMoveUserCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RetMoveUserCmd.charid)
}

// optional .Cmd.ScenePos pos = 4;
inline bool RetMoveUserCmd::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RetMoveUserCmd::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RetMoveUserCmd::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RetMoveUserCmd::clear_pos() {
  if (pos_ != NULL) pos_->::Cmd::ScenePos::Clear();
  clear_has_pos();
}
inline const ::Cmd::ScenePos& RetMoveUserCmd::pos() const {
  // @@protoc_insertion_point(field_get:Cmd.RetMoveUserCmd.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Cmd::ScenePos* RetMoveUserCmd::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Cmd::ScenePos;
  // @@protoc_insertion_point(field_mutable:Cmd.RetMoveUserCmd.pos)
  return pos_;
}
inline ::Cmd::ScenePos* RetMoveUserCmd::release_pos() {
  clear_has_pos();
  ::Cmd::ScenePos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void RetMoveUserCmd::set_allocated_pos(::Cmd::ScenePos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.RetMoveUserCmd.pos)
}

// -------------------------------------------------------------------

// SynTimeUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
inline bool SynTimeUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SynTimeUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SynTimeUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SynTimeUserCmd::clear_cmd() {
  cmd_ = 5;
  clear_has_cmd();
}
inline ::Cmd::Command SynTimeUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SynTimeUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SynTimeUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SynTimeUserCmd.cmd)
}

// optional .Cmd.CmdParam param = 2 [default = SYS_TIME_USER_CMD];
inline bool SynTimeUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SynTimeUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SynTimeUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SynTimeUserCmd::clear_param() {
  param_ = 17;
  clear_has_param();
}
inline ::Cmd::CmdParam SynTimeUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SynTimeUserCmd.param)
  return static_cast< ::Cmd::CmdParam >(param_);
}
inline void SynTimeUserCmd::set_param(::Cmd::CmdParam value) {
  assert(::Cmd::CmdParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SynTimeUserCmd.param)
}

// optional uint64 serverTime = 3;
inline bool SynTimeUserCmd::has_servertime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SynTimeUserCmd::set_has_servertime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SynTimeUserCmd::clear_has_servertime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SynTimeUserCmd::clear_servertime() {
  servertime_ = GOOGLE_ULONGLONG(0);
  clear_has_servertime();
}
inline ::google::protobuf::uint64 SynTimeUserCmd::servertime() const {
  // @@protoc_insertion_point(field_get:Cmd.SynTimeUserCmd.serverTime)
  return servertime_;
}
inline void SynTimeUserCmd::set_servertime(::google::protobuf::uint64 value) {
  set_has_servertime();
  servertime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SynTimeUserCmd.serverTime)
}

// -------------------------------------------------------------------

// DeleteEntryUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
inline bool DeleteEntryUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteEntryUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteEntryUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteEntryUserCmd::clear_cmd() {
  cmd_ = 5;
  clear_has_cmd();
}
inline ::Cmd::Command DeleteEntryUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.DeleteEntryUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void DeleteEntryUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DeleteEntryUserCmd.cmd)
}

// optional .Cmd.CmdParam param = 2 [default = DELETE_ENTRY_USER_CMD];
inline bool DeleteEntryUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteEntryUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteEntryUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteEntryUserCmd::clear_param() {
  param_ = 18;
  clear_has_param();
}
inline ::Cmd::CmdParam DeleteEntryUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.DeleteEntryUserCmd.param)
  return static_cast< ::Cmd::CmdParam >(param_);
}
inline void DeleteEntryUserCmd::set_param(::Cmd::CmdParam value) {
  assert(::Cmd::CmdParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DeleteEntryUserCmd.param)
}

// repeated uint64 list = 3;
inline int DeleteEntryUserCmd::list_size() const {
  return list_.size();
}
inline void DeleteEntryUserCmd::clear_list() {
  list_.Clear();
}
inline ::google::protobuf::uint64 DeleteEntryUserCmd::list(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.DeleteEntryUserCmd.list)
  return list_.Get(index);
}
inline void DeleteEntryUserCmd::set_list(int index, ::google::protobuf::uint64 value) {
  list_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.DeleteEntryUserCmd.list)
}
inline void DeleteEntryUserCmd::add_list(::google::protobuf::uint64 value) {
  list_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.DeleteEntryUserCmd.list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
DeleteEntryUserCmd::list() const {
  // @@protoc_insertion_point(field_list:Cmd.DeleteEntryUserCmd.list)
  return list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
DeleteEntryUserCmd::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.DeleteEntryUserCmd.list)
  return &list_;
}

// optional uint32 fadeout = 4 [default = 0];
inline bool DeleteEntryUserCmd::has_fadeout() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DeleteEntryUserCmd::set_has_fadeout() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DeleteEntryUserCmd::clear_has_fadeout() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DeleteEntryUserCmd::clear_fadeout() {
  fadeout_ = 0u;
  clear_has_fadeout();
}
inline ::google::protobuf::uint32 DeleteEntryUserCmd::fadeout() const {
  // @@protoc_insertion_point(field_get:Cmd.DeleteEntryUserCmd.fadeout)
  return fadeout_;
}
inline void DeleteEntryUserCmd::set_fadeout(::google::protobuf::uint32 value) {
  set_has_fadeout();
  fadeout_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DeleteEntryUserCmd.fadeout)
}

// optional uint32 delay_del = 5 [default = 0];
inline bool DeleteEntryUserCmd::has_delay_del() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DeleteEntryUserCmd::set_has_delay_del() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DeleteEntryUserCmd::clear_has_delay_del() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DeleteEntryUserCmd::clear_delay_del() {
  delay_del_ = 0u;
  clear_has_delay_del();
}
inline ::google::protobuf::uint32 DeleteEntryUserCmd::delay_del() const {
  // @@protoc_insertion_point(field_get:Cmd.DeleteEntryUserCmd.delay_del)
  return delay_del_;
}
inline void DeleteEntryUserCmd::set_delay_del(::google::protobuf::uint32 value) {
  set_has_delay_del();
  delay_del_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DeleteEntryUserCmd.delay_del)
}

// -------------------------------------------------------------------

// ChangeBodyUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
inline bool ChangeBodyUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeBodyUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeBodyUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeBodyUserCmd::clear_cmd() {
  cmd_ = 5;
  clear_has_cmd();
}
inline ::Cmd::Command ChangeBodyUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeBodyUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ChangeBodyUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeBodyUserCmd.cmd)
}

// optional .Cmd.CmdParam param = 2 [default = CHANGE_BODY_USER_CMD];
inline bool ChangeBodyUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeBodyUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeBodyUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeBodyUserCmd::clear_param() {
  param_ = 22;
  clear_has_param();
}
inline ::Cmd::CmdParam ChangeBodyUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeBodyUserCmd.param)
  return static_cast< ::Cmd::CmdParam >(param_);
}
inline void ChangeBodyUserCmd::set_param(::Cmd::CmdParam value) {
  assert(::Cmd::CmdParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeBodyUserCmd.param)
}

// required uint64 charid = 3;
inline bool ChangeBodyUserCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChangeBodyUserCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChangeBodyUserCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChangeBodyUserCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ChangeBodyUserCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeBodyUserCmd.charid)
  return charid_;
}
inline void ChangeBodyUserCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeBodyUserCmd.charid)
}

// optional uint32 male = 4;
inline bool ChangeBodyUserCmd::has_male() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChangeBodyUserCmd::set_has_male() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChangeBodyUserCmd::clear_has_male() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChangeBodyUserCmd::clear_male() {
  male_ = 0u;
  clear_has_male();
}
inline ::google::protobuf::uint32 ChangeBodyUserCmd::male() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeBodyUserCmd.male)
  return male_;
}
inline void ChangeBodyUserCmd::set_male(::google::protobuf::uint32 value) {
  set_has_male();
  male_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeBodyUserCmd.male)
}

// optional uint32 body = 5;
inline bool ChangeBodyUserCmd::has_body() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChangeBodyUserCmd::set_has_body() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChangeBodyUserCmd::clear_has_body() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChangeBodyUserCmd::clear_body() {
  body_ = 0u;
  clear_has_body();
}
inline ::google::protobuf::uint32 ChangeBodyUserCmd::body() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeBodyUserCmd.body)
  return body_;
}
inline void ChangeBodyUserCmd::set_body(::google::protobuf::uint32 value) {
  set_has_body();
  body_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeBodyUserCmd.body)
}

// optional uint32 hair = 6;
inline bool ChangeBodyUserCmd::has_hair() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ChangeBodyUserCmd::set_has_hair() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ChangeBodyUserCmd::clear_has_hair() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ChangeBodyUserCmd::clear_hair() {
  hair_ = 0u;
  clear_has_hair();
}
inline ::google::protobuf::uint32 ChangeBodyUserCmd::hair() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeBodyUserCmd.hair)
  return hair_;
}
inline void ChangeBodyUserCmd::set_hair(::google::protobuf::uint32 value) {
  set_has_hair();
  hair_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeBodyUserCmd.hair)
}

// optional uint32 rightHand = 7;
inline bool ChangeBodyUserCmd::has_righthand() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ChangeBodyUserCmd::set_has_righthand() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ChangeBodyUserCmd::clear_has_righthand() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ChangeBodyUserCmd::clear_righthand() {
  righthand_ = 0u;
  clear_has_righthand();
}
inline ::google::protobuf::uint32 ChangeBodyUserCmd::righthand() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeBodyUserCmd.rightHand)
  return righthand_;
}
inline void ChangeBodyUserCmd::set_righthand(::google::protobuf::uint32 value) {
  set_has_righthand();
  righthand_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeBodyUserCmd.rightHand)
}

// optional uint32 profession = 8;
inline bool ChangeBodyUserCmd::has_profession() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ChangeBodyUserCmd::set_has_profession() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ChangeBodyUserCmd::clear_has_profession() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ChangeBodyUserCmd::clear_profession() {
  profession_ = 0u;
  clear_has_profession();
}
inline ::google::protobuf::uint32 ChangeBodyUserCmd::profession() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeBodyUserCmd.profession)
  return profession_;
}
inline void ChangeBodyUserCmd::set_profession(::google::protobuf::uint32 value) {
  set_has_profession();
  profession_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeBodyUserCmd.profession)
}

// optional uint32 accessory = 9;
inline bool ChangeBodyUserCmd::has_accessory() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ChangeBodyUserCmd::set_has_accessory() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ChangeBodyUserCmd::clear_has_accessory() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ChangeBodyUserCmd::clear_accessory() {
  accessory_ = 0u;
  clear_has_accessory();
}
inline ::google::protobuf::uint32 ChangeBodyUserCmd::accessory() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeBodyUserCmd.accessory)
  return accessory_;
}
inline void ChangeBodyUserCmd::set_accessory(::google::protobuf::uint32 value) {
  set_has_accessory();
  accessory_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeBodyUserCmd.accessory)
}

// optional uint32 wing = 10;
inline bool ChangeBodyUserCmd::has_wing() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ChangeBodyUserCmd::set_has_wing() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ChangeBodyUserCmd::clear_has_wing() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ChangeBodyUserCmd::clear_wing() {
  wing_ = 0u;
  clear_has_wing();
}
inline ::google::protobuf::uint32 ChangeBodyUserCmd::wing() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeBodyUserCmd.wing)
  return wing_;
}
inline void ChangeBodyUserCmd::set_wing(::google::protobuf::uint32 value) {
  set_has_wing();
  wing_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeBodyUserCmd.wing)
}

// -------------------------------------------------------------------

// ChangeSceneUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
inline bool ChangeSceneUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeSceneUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeSceneUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeSceneUserCmd::clear_cmd() {
  cmd_ = 5;
  clear_has_cmd();
}
inline ::Cmd::Command ChangeSceneUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeSceneUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ChangeSceneUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeSceneUserCmd.cmd)
}

// optional .Cmd.CmdParam param = 2 [default = CHANGE_SCENE_USER_CMD];
inline bool ChangeSceneUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeSceneUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeSceneUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeSceneUserCmd::clear_param() {
  param_ = 23;
  clear_has_param();
}
inline ::Cmd::CmdParam ChangeSceneUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeSceneUserCmd.param)
  return static_cast< ::Cmd::CmdParam >(param_);
}
inline void ChangeSceneUserCmd::set_param(::Cmd::CmdParam value) {
  assert(::Cmd::CmdParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeSceneUserCmd.param)
}

// optional uint32 mapID = 3;
inline bool ChangeSceneUserCmd::has_mapid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChangeSceneUserCmd::set_has_mapid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChangeSceneUserCmd::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChangeSceneUserCmd::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 ChangeSceneUserCmd::mapid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeSceneUserCmd.mapID)
  return mapid_;
}
inline void ChangeSceneUserCmd::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeSceneUserCmd.mapID)
}

// optional string mapName = 4;
inline bool ChangeSceneUserCmd::has_mapname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChangeSceneUserCmd::set_has_mapname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChangeSceneUserCmd::clear_has_mapname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChangeSceneUserCmd::clear_mapname() {
  if (mapname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapname_->clear();
  }
  clear_has_mapname();
}
inline const ::std::string& ChangeSceneUserCmd::mapname() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeSceneUserCmd.mapName)
  return *mapname_;
}
inline void ChangeSceneUserCmd::set_mapname(const ::std::string& value) {
  set_has_mapname();
  if (mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapname_ = new ::std::string;
  }
  mapname_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.ChangeSceneUserCmd.mapName)
}
inline void ChangeSceneUserCmd::set_mapname(const char* value) {
  set_has_mapname();
  if (mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapname_ = new ::std::string;
  }
  mapname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.ChangeSceneUserCmd.mapName)
}
inline void ChangeSceneUserCmd::set_mapname(const char* value, size_t size) {
  set_has_mapname();
  if (mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapname_ = new ::std::string;
  }
  mapname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.ChangeSceneUserCmd.mapName)
}
inline ::std::string* ChangeSceneUserCmd::mutable_mapname() {
  set_has_mapname();
  if (mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.ChangeSceneUserCmd.mapName)
  return mapname_;
}
inline ::std::string* ChangeSceneUserCmd::release_mapname() {
  clear_has_mapname();
  if (mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mapname_;
    mapname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ChangeSceneUserCmd::set_allocated_mapname(::std::string* mapname) {
  if (mapname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mapname_;
  }
  if (mapname) {
    set_has_mapname();
    mapname_ = mapname;
  } else {
    clear_has_mapname();
    mapname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ChangeSceneUserCmd.mapName)
}

// optional .Cmd.ScenePos pos = 5;
inline bool ChangeSceneUserCmd::has_pos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChangeSceneUserCmd::set_has_pos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChangeSceneUserCmd::clear_has_pos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChangeSceneUserCmd::clear_pos() {
  if (pos_ != NULL) pos_->::Cmd::ScenePos::Clear();
  clear_has_pos();
}
inline const ::Cmd::ScenePos& ChangeSceneUserCmd::pos() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeSceneUserCmd.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Cmd::ScenePos* ChangeSceneUserCmd::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Cmd::ScenePos;
  // @@protoc_insertion_point(field_mutable:Cmd.ChangeSceneUserCmd.pos)
  return pos_;
}
inline ::Cmd::ScenePos* ChangeSceneUserCmd::release_pos() {
  clear_has_pos();
  ::Cmd::ScenePos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void ChangeSceneUserCmd::set_allocated_pos(::Cmd::ScenePos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ChangeSceneUserCmd.pos)
}

// optional uint32 dmapID = 6;
inline bool ChangeSceneUserCmd::has_dmapid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ChangeSceneUserCmd::set_has_dmapid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ChangeSceneUserCmd::clear_has_dmapid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ChangeSceneUserCmd::clear_dmapid() {
  dmapid_ = 0u;
  clear_has_dmapid();
}
inline ::google::protobuf::uint32 ChangeSceneUserCmd::dmapid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeSceneUserCmd.dmapID)
  return dmapid_;
}
inline void ChangeSceneUserCmd::set_dmapid(::google::protobuf::uint32 value) {
  set_has_dmapid();
  dmapid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeSceneUserCmd.dmapID)
}

// optional uint32 preview = 7;
inline bool ChangeSceneUserCmd::has_preview() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ChangeSceneUserCmd::set_has_preview() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ChangeSceneUserCmd::clear_has_preview() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ChangeSceneUserCmd::clear_preview() {
  preview_ = 0u;
  clear_has_preview();
}
inline ::google::protobuf::uint32 ChangeSceneUserCmd::preview() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeSceneUserCmd.preview)
  return preview_;
}
inline void ChangeSceneUserCmd::set_preview(::google::protobuf::uint32 value) {
  set_has_preview();
  preview_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeSceneUserCmd.preview)
}

// repeated uint32 invisiblexit = 8;
inline int ChangeSceneUserCmd::invisiblexit_size() const {
  return invisiblexit_.size();
}
inline void ChangeSceneUserCmd::clear_invisiblexit() {
  invisiblexit_.Clear();
}
inline ::google::protobuf::uint32 ChangeSceneUserCmd::invisiblexit(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeSceneUserCmd.invisiblexit)
  return invisiblexit_.Get(index);
}
inline void ChangeSceneUserCmd::set_invisiblexit(int index, ::google::protobuf::uint32 value) {
  invisiblexit_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.ChangeSceneUserCmd.invisiblexit)
}
inline void ChangeSceneUserCmd::add_invisiblexit(::google::protobuf::uint32 value) {
  invisiblexit_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.ChangeSceneUserCmd.invisiblexit)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ChangeSceneUserCmd::invisiblexit() const {
  // @@protoc_insertion_point(field_list:Cmd.ChangeSceneUserCmd.invisiblexit)
  return invisiblexit_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ChangeSceneUserCmd::mutable_invisiblexit() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.ChangeSceneUserCmd.invisiblexit)
  return &invisiblexit_;
}

// optional uint32 imageid = 9;
inline bool ChangeSceneUserCmd::has_imageid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ChangeSceneUserCmd::set_has_imageid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ChangeSceneUserCmd::clear_has_imageid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ChangeSceneUserCmd::clear_imageid() {
  imageid_ = 0u;
  clear_has_imageid();
}
inline ::google::protobuf::uint32 ChangeSceneUserCmd::imageid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeSceneUserCmd.imageid)
  return imageid_;
}
inline void ChangeSceneUserCmd::set_imageid(::google::protobuf::uint32 value) {
  set_has_imageid();
  imageid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeSceneUserCmd.imageid)
}

// -------------------------------------------------------------------

// FunNpcData

// required uint32 npcid = 1;
inline bool FunNpcData::has_npcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FunNpcData::set_has_npcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FunNpcData::clear_has_npcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FunNpcData::clear_npcid() {
  npcid_ = 0u;
  clear_has_npcid();
}
inline ::google::protobuf::uint32 FunNpcData::npcid() const {
  // @@protoc_insertion_point(field_get:Cmd.FunNpcData.npcid)
  return npcid_;
}
inline void FunNpcData::set_npcid(::google::protobuf::uint32 value) {
  set_has_npcid();
  npcid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FunNpcData.npcid)
}

// required uint64 tempid = 2;
inline bool FunNpcData::has_tempid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FunNpcData::set_has_tempid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FunNpcData::clear_has_tempid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FunNpcData::clear_tempid() {
  tempid_ = GOOGLE_ULONGLONG(0);
  clear_has_tempid();
}
inline ::google::protobuf::uint64 FunNpcData::tempid() const {
  // @@protoc_insertion_point(field_get:Cmd.FunNpcData.tempid)
  return tempid_;
}
inline void FunNpcData::set_tempid(::google::protobuf::uint64 value) {
  set_has_tempid();
  tempid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FunNpcData.tempid)
}

// required .Cmd.ScenePos pos = 3;
inline bool FunNpcData::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FunNpcData::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FunNpcData::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FunNpcData::clear_pos() {
  if (pos_ != NULL) pos_->::Cmd::ScenePos::Clear();
  clear_has_pos();
}
inline const ::Cmd::ScenePos& FunNpcData::pos() const {
  // @@protoc_insertion_point(field_get:Cmd.FunNpcData.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Cmd::ScenePos* FunNpcData::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Cmd::ScenePos;
  // @@protoc_insertion_point(field_mutable:Cmd.FunNpcData.pos)
  return pos_;
}
inline ::Cmd::ScenePos* FunNpcData::release_pos() {
  clear_has_pos();
  ::Cmd::ScenePos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void FunNpcData::set_allocated_pos(::Cmd::ScenePos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.FunNpcData.pos)
}

// -------------------------------------------------------------------

// FuntionNpcListUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
inline bool FuntionNpcListUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FuntionNpcListUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FuntionNpcListUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FuntionNpcListUserCmd::clear_cmd() {
  cmd_ = 5;
  clear_has_cmd();
}
inline ::Cmd::Command FuntionNpcListUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.FuntionNpcListUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void FuntionNpcListUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FuntionNpcListUserCmd.cmd)
}

// optional .Cmd.CmdParam param = 2 [default = FUNCTION_NPC_LIST_USER_CMD];
inline bool FuntionNpcListUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FuntionNpcListUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FuntionNpcListUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FuntionNpcListUserCmd::clear_param() {
  param_ = 25;
  clear_has_param();
}
inline ::Cmd::CmdParam FuntionNpcListUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.FuntionNpcListUserCmd.param)
  return static_cast< ::Cmd::CmdParam >(param_);
}
inline void FuntionNpcListUserCmd::set_param(::Cmd::CmdParam value) {
  assert(::Cmd::CmdParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FuntionNpcListUserCmd.param)
}

// repeated .Cmd.FunNpcData list = 3;
inline int FuntionNpcListUserCmd::list_size() const {
  return list_.size();
}
inline void FuntionNpcListUserCmd::clear_list() {
  list_.Clear();
}
inline const ::Cmd::FunNpcData& FuntionNpcListUserCmd::list(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.FuntionNpcListUserCmd.list)
  return list_.Get(index);
}
inline ::Cmd::FunNpcData* FuntionNpcListUserCmd::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.FuntionNpcListUserCmd.list)
  return list_.Mutable(index);
}
inline ::Cmd::FunNpcData* FuntionNpcListUserCmd::add_list() {
  // @@protoc_insertion_point(field_add:Cmd.FuntionNpcListUserCmd.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::FunNpcData >&
FuntionNpcListUserCmd::list() const {
  // @@protoc_insertion_point(field_list:Cmd.FuntionNpcListUserCmd.list)
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::FunNpcData >*
FuntionNpcListUserCmd::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.FuntionNpcListUserCmd.list)
  return &list_;
}

// -------------------------------------------------------------------

// GUID

// required uint32 zoneID = 1;
inline bool GUID::has_zoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GUID::set_has_zoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GUID::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GUID::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 GUID::zoneid() const {
  // @@protoc_insertion_point(field_get:Cmd.GUID.zoneID)
  return zoneid_;
}
inline void GUID::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GUID.zoneID)
}

// required uint32 time = 2;
inline bool GUID::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GUID::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GUID::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GUID::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 GUID::time() const {
  // @@protoc_insertion_point(field_get:Cmd.GUID.time)
  return time_;
}
inline void GUID::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GUID.time)
}

// required uint32 mapID = 3;
inline bool GUID::has_mapid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GUID::set_has_mapid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GUID::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GUID::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 GUID::mapid() const {
  // @@protoc_insertion_point(field_get:Cmd.GUID.mapID)
  return mapid_;
}
inline void GUID::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GUID.mapID)
}

// required uint32 index = 4;
inline bool GUID::has_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GUID::set_has_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GUID::clear_has_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GUID::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 GUID::index() const {
  // @@protoc_insertion_point(field_get:Cmd.GUID.index)
  return index_;
}
inline void GUID::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GUID.index)
}

// -------------------------------------------------------------------

// DeleteStaticEntryUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
inline bool DeleteStaticEntryUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteStaticEntryUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteStaticEntryUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteStaticEntryUserCmd::clear_cmd() {
  cmd_ = 5;
  clear_has_cmd();
}
inline ::Cmd::Command DeleteStaticEntryUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.DeleteStaticEntryUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void DeleteStaticEntryUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DeleteStaticEntryUserCmd.cmd)
}

// optional .Cmd.CmdParam param = 2 [default = DELETE_STATIC_ENTRY_USER_CMD];
inline bool DeleteStaticEntryUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteStaticEntryUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteStaticEntryUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteStaticEntryUserCmd::clear_param() {
  param_ = 26;
  clear_has_param();
}
inline ::Cmd::CmdParam DeleteStaticEntryUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.DeleteStaticEntryUserCmd.param)
  return static_cast< ::Cmd::CmdParam >(param_);
}
inline void DeleteStaticEntryUserCmd::set_param(::Cmd::CmdParam value) {
  assert(::Cmd::CmdParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DeleteStaticEntryUserCmd.param)
}

// repeated .Cmd.GUID list = 3;
inline int DeleteStaticEntryUserCmd::list_size() const {
  return list_.size();
}
inline void DeleteStaticEntryUserCmd::clear_list() {
  list_.Clear();
}
inline const ::Cmd::GUID& DeleteStaticEntryUserCmd::list(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.DeleteStaticEntryUserCmd.list)
  return list_.Get(index);
}
inline ::Cmd::GUID* DeleteStaticEntryUserCmd::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.DeleteStaticEntryUserCmd.list)
  return list_.Mutable(index);
}
inline ::Cmd::GUID* DeleteStaticEntryUserCmd::add_list() {
  // @@protoc_insertion_point(field_add:Cmd.DeleteStaticEntryUserCmd.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GUID >&
DeleteStaticEntryUserCmd::list() const {
  // @@protoc_insertion_point(field_list:Cmd.DeleteStaticEntryUserCmd.list)
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GUID >*
DeleteStaticEntryUserCmd::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.DeleteStaticEntryUserCmd.list)
  return &list_;
}

// -------------------------------------------------------------------

// ShareDamTarget

// optional uint64 charid = 1 [default = 0];
inline bool ShareDamTarget::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShareDamTarget::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShareDamTarget::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShareDamTarget::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ShareDamTarget::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.ShareDamTarget.charid)
  return charid_;
}
inline void ShareDamTarget::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ShareDamTarget.charid)
}

// optional int32 damage = 2 [default = 0];
inline bool ShareDamTarget::has_damage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShareDamTarget::set_has_damage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShareDamTarget::clear_has_damage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShareDamTarget::clear_damage() {
  damage_ = 0;
  clear_has_damage();
}
inline ::google::protobuf::int32 ShareDamTarget::damage() const {
  // @@protoc_insertion_point(field_get:Cmd.ShareDamTarget.damage)
  return damage_;
}
inline void ShareDamTarget::set_damage(::google::protobuf::int32 value) {
  set_has_damage();
  damage_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ShareDamTarget.damage)
}

// optional int32 type = 3 [default = 1];
inline bool ShareDamTarget::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShareDamTarget::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShareDamTarget::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShareDamTarget::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::google::protobuf::int32 ShareDamTarget::type() const {
  // @@protoc_insertion_point(field_get:Cmd.ShareDamTarget.type)
  return type_;
}
inline void ShareDamTarget::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ShareDamTarget.type)
}

// -------------------------------------------------------------------

// HitedTarget

// optional uint64 charid = 1 [default = 0];
inline bool HitedTarget::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HitedTarget::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HitedTarget::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HitedTarget::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 HitedTarget::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.HitedTarget.charid)
  return charid_;
}
inline void HitedTarget::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.HitedTarget.charid)
}

// optional int32 damage = 2 [default = 0];
inline bool HitedTarget::has_damage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HitedTarget::set_has_damage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HitedTarget::clear_has_damage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HitedTarget::clear_damage() {
  damage_ = 0;
  clear_has_damage();
}
inline ::google::protobuf::int32 HitedTarget::damage() const {
  // @@protoc_insertion_point(field_get:Cmd.HitedTarget.damage)
  return damage_;
}
inline void HitedTarget::set_damage(::google::protobuf::int32 value) {
  set_has_damage();
  damage_ = value;
  // @@protoc_insertion_point(field_set:Cmd.HitedTarget.damage)
}

// optional int32 type = 3 [default = 1];
inline bool HitedTarget::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HitedTarget::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HitedTarget::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HitedTarget::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::google::protobuf::int32 HitedTarget::type() const {
  // @@protoc_insertion_point(field_get:Cmd.HitedTarget.type)
  return type_;
}
inline void HitedTarget::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.HitedTarget.type)
}

// repeated .Cmd.ShareDamTarget shareTargets = 4;
inline int HitedTarget::sharetargets_size() const {
  return sharetargets_.size();
}
inline void HitedTarget::clear_sharetargets() {
  sharetargets_.Clear();
}
inline const ::Cmd::ShareDamTarget& HitedTarget::sharetargets(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.HitedTarget.shareTargets)
  return sharetargets_.Get(index);
}
inline ::Cmd::ShareDamTarget* HitedTarget::mutable_sharetargets(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.HitedTarget.shareTargets)
  return sharetargets_.Mutable(index);
}
inline ::Cmd::ShareDamTarget* HitedTarget::add_sharetargets() {
  // @@protoc_insertion_point(field_add:Cmd.HitedTarget.shareTargets)
  return sharetargets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ShareDamTarget >&
HitedTarget::sharetargets() const {
  // @@protoc_insertion_point(field_list:Cmd.HitedTarget.shareTargets)
  return sharetargets_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ShareDamTarget >*
HitedTarget::mutable_sharetargets() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.HitedTarget.shareTargets)
  return &sharetargets_;
}

// -------------------------------------------------------------------

// PhaseData

// optional int32 number = 1 [default = 0];
inline bool PhaseData::has_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PhaseData::set_has_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PhaseData::clear_has_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PhaseData::clear_number() {
  number_ = 0;
  clear_has_number();
}
inline ::google::protobuf::int32 PhaseData::number() const {
  // @@protoc_insertion_point(field_get:Cmd.PhaseData.number)
  return number_;
}
inline void PhaseData::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PhaseData.number)
}

// optional .Cmd.ScenePos pos = 2;
inline bool PhaseData::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PhaseData::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PhaseData::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PhaseData::clear_pos() {
  if (pos_ != NULL) pos_->::Cmd::ScenePos::Clear();
  clear_has_pos();
}
inline const ::Cmd::ScenePos& PhaseData::pos() const {
  // @@protoc_insertion_point(field_get:Cmd.PhaseData.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Cmd::ScenePos* PhaseData::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Cmd::ScenePos;
  // @@protoc_insertion_point(field_mutable:Cmd.PhaseData.pos)
  return pos_;
}
inline ::Cmd::ScenePos* PhaseData::release_pos() {
  clear_has_pos();
  ::Cmd::ScenePos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void PhaseData::set_allocated_pos(::Cmd::ScenePos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.PhaseData.pos)
}

// repeated .Cmd.HitedTarget hitedTargets = 3;
inline int PhaseData::hitedtargets_size() const {
  return hitedtargets_.size();
}
inline void PhaseData::clear_hitedtargets() {
  hitedtargets_.Clear();
}
inline const ::Cmd::HitedTarget& PhaseData::hitedtargets(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.PhaseData.hitedTargets)
  return hitedtargets_.Get(index);
}
inline ::Cmd::HitedTarget* PhaseData::mutable_hitedtargets(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.PhaseData.hitedTargets)
  return hitedtargets_.Mutable(index);
}
inline ::Cmd::HitedTarget* PhaseData::add_hitedtargets() {
  // @@protoc_insertion_point(field_add:Cmd.PhaseData.hitedTargets)
  return hitedtargets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::HitedTarget >&
PhaseData::hitedtargets() const {
  // @@protoc_insertion_point(field_list:Cmd.PhaseData.hitedTargets)
  return hitedtargets_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::HitedTarget >*
PhaseData::mutable_hitedtargets() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.PhaseData.hitedTargets)
  return &hitedtargets_;
}

// optional int32 dir = 5 [default = 0];
inline bool PhaseData::has_dir() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PhaseData::set_has_dir() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PhaseData::clear_has_dir() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PhaseData::clear_dir() {
  dir_ = 0;
  clear_has_dir();
}
inline ::google::protobuf::int32 PhaseData::dir() const {
  // @@protoc_insertion_point(field_get:Cmd.PhaseData.dir)
  return dir_;
}
inline void PhaseData::set_dir(::google::protobuf::int32 value) {
  set_has_dir();
  dir_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PhaseData.dir)
}

// -------------------------------------------------------------------

// SkillBroadcastUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
inline bool SkillBroadcastUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillBroadcastUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillBroadcastUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillBroadcastUserCmd::clear_cmd() {
  cmd_ = 5;
  clear_has_cmd();
}
inline ::Cmd::Command SkillBroadcastUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillBroadcastUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SkillBroadcastUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillBroadcastUserCmd.cmd)
}

// optional .Cmd.CmdParam param = 2 [default = SKILL_BROADCAST_USER_CMD];
inline bool SkillBroadcastUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillBroadcastUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillBroadcastUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillBroadcastUserCmd::clear_param() {
  param_ = 27;
  clear_has_param();
}
inline ::Cmd::CmdParam SkillBroadcastUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillBroadcastUserCmd.param)
  return static_cast< ::Cmd::CmdParam >(param_);
}
inline void SkillBroadcastUserCmd::set_param(::Cmd::CmdParam value) {
  assert(::Cmd::CmdParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillBroadcastUserCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool SkillBroadcastUserCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillBroadcastUserCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillBroadcastUserCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillBroadcastUserCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 SkillBroadcastUserCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillBroadcastUserCmd.charid)
  return charid_;
}
inline void SkillBroadcastUserCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillBroadcastUserCmd.charid)
}

// optional uint32 skillID = 4 [default = 0];
inline bool SkillBroadcastUserCmd::has_skillid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SkillBroadcastUserCmd::set_has_skillid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SkillBroadcastUserCmd::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SkillBroadcastUserCmd::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 SkillBroadcastUserCmd::skillid() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillBroadcastUserCmd.skillID)
  return skillid_;
}
inline void SkillBroadcastUserCmd::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillBroadcastUserCmd.skillID)
}

// optional int32 petid = 5 [default = 0];
inline bool SkillBroadcastUserCmd::has_petid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SkillBroadcastUserCmd::set_has_petid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SkillBroadcastUserCmd::clear_has_petid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SkillBroadcastUserCmd::clear_petid() {
  petid_ = 0;
  clear_has_petid();
}
inline ::google::protobuf::int32 SkillBroadcastUserCmd::petid() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillBroadcastUserCmd.petid)
  return petid_;
}
inline void SkillBroadcastUserCmd::set_petid(::google::protobuf::int32 value) {
  set_has_petid();
  petid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillBroadcastUserCmd.petid)
}

// optional .Cmd.PhaseData data = 6;
inline bool SkillBroadcastUserCmd::has_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SkillBroadcastUserCmd::set_has_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SkillBroadcastUserCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SkillBroadcastUserCmd::clear_data() {
  if (data_ != NULL) data_->::Cmd::PhaseData::Clear();
  clear_has_data();
}
inline const ::Cmd::PhaseData& SkillBroadcastUserCmd::data() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillBroadcastUserCmd.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Cmd::PhaseData* SkillBroadcastUserCmd::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Cmd::PhaseData;
  // @@protoc_insertion_point(field_mutable:Cmd.SkillBroadcastUserCmd.data)
  return data_;
}
inline ::Cmd::PhaseData* SkillBroadcastUserCmd::release_data() {
  clear_has_data();
  ::Cmd::PhaseData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void SkillBroadcastUserCmd::set_allocated_data(::Cmd::PhaseData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.SkillBroadcastUserCmd.data)
}

// optional uint32 random = 7 [default = 0];
inline bool SkillBroadcastUserCmd::has_random() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SkillBroadcastUserCmd::set_has_random() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SkillBroadcastUserCmd::clear_has_random() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SkillBroadcastUserCmd::clear_random() {
  random_ = 0u;
  clear_has_random();
}
inline ::google::protobuf::uint32 SkillBroadcastUserCmd::random() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillBroadcastUserCmd.random)
  return random_;
}
inline void SkillBroadcastUserCmd::set_random(::google::protobuf::uint32 value) {
  set_has_random();
  random_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillBroadcastUserCmd.random)
}

// optional uint32 chanttime = 8 [default = 0];
inline bool SkillBroadcastUserCmd::has_chanttime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SkillBroadcastUserCmd::set_has_chanttime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SkillBroadcastUserCmd::clear_has_chanttime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SkillBroadcastUserCmd::clear_chanttime() {
  chanttime_ = 0u;
  clear_has_chanttime();
}
inline ::google::protobuf::uint32 SkillBroadcastUserCmd::chanttime() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillBroadcastUserCmd.chanttime)
  return chanttime_;
}
inline void SkillBroadcastUserCmd::set_chanttime(::google::protobuf::uint32 value) {
  set_has_chanttime();
  chanttime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillBroadcastUserCmd.chanttime)
}

// -------------------------------------------------------------------

// TestUint64

// required int32 i = 1;
inline bool TestUint64::has_i() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TestUint64::set_has_i() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TestUint64::clear_has_i() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TestUint64::clear_i() {
  i_ = 0;
  clear_has_i();
}
inline ::google::protobuf::int32 TestUint64::i() const {
  // @@protoc_insertion_point(field_get:Cmd.TestUint64.i)
  return i_;
}
inline void TestUint64::set_i(::google::protobuf::int32 value) {
  set_has_i();
  i_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TestUint64.i)
}

// optional uint64 j = 2;
inline bool TestUint64::has_j() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TestUint64::set_has_j() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TestUint64::clear_has_j() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TestUint64::clear_j() {
  j_ = GOOGLE_ULONGLONG(0);
  clear_has_j();
}
inline ::google::protobuf::uint64 TestUint64::j() const {
  // @@protoc_insertion_point(field_get:Cmd.TestUint64.j)
  return j_;
}
inline void TestUint64::set_j(::google::protobuf::uint64 value) {
  set_has_j();
  j_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TestUint64.j)
}

// optional int32 k = 3;
inline bool TestUint64::has_k() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TestUint64::set_has_k() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TestUint64::clear_has_k() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TestUint64::clear_k() {
  k_ = 0;
  clear_has_k();
}
inline ::google::protobuf::int32 TestUint64::k() const {
  // @@protoc_insertion_point(field_get:Cmd.TestUint64.k)
  return k_;
}
inline void TestUint64::set_k(::google::protobuf::int32 value) {
  set_has_k();
  k_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TestUint64.k)
}

// -------------------------------------------------------------------

// TestSkillBroadcastUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
inline bool TestSkillBroadcastUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TestSkillBroadcastUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TestSkillBroadcastUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TestSkillBroadcastUserCmd::clear_cmd() {
  cmd_ = 5;
  clear_has_cmd();
}
inline ::Cmd::Command TestSkillBroadcastUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TestSkillBroadcastUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TestSkillBroadcastUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TestSkillBroadcastUserCmd.cmd)
}

// optional .Cmd.CmdParam param = 2 [default = TEST_SKILL_BROADCAST_USER_CMD];
inline bool TestSkillBroadcastUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TestSkillBroadcastUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TestSkillBroadcastUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TestSkillBroadcastUserCmd::clear_param() {
  param_ = 47;
  clear_has_param();
}
inline ::Cmd::CmdParam TestSkillBroadcastUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TestSkillBroadcastUserCmd.param)
  return static_cast< ::Cmd::CmdParam >(param_);
}
inline void TestSkillBroadcastUserCmd::set_param(::Cmd::CmdParam value) {
  assert(::Cmd::CmdParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TestSkillBroadcastUserCmd.param)
}

// required int32 i = 3;
inline bool TestSkillBroadcastUserCmd::has_i() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TestSkillBroadcastUserCmd::set_has_i() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TestSkillBroadcastUserCmd::clear_has_i() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TestSkillBroadcastUserCmd::clear_i() {
  i_ = 0;
  clear_has_i();
}
inline ::google::protobuf::int32 TestSkillBroadcastUserCmd::i() const {
  // @@protoc_insertion_point(field_get:Cmd.TestSkillBroadcastUserCmd.i)
  return i_;
}
inline void TestSkillBroadcastUserCmd::set_i(::google::protobuf::int32 value) {
  set_has_i();
  i_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TestSkillBroadcastUserCmd.i)
}

// repeated .Cmd.TestUint64 list = 4;
inline int TestSkillBroadcastUserCmd::list_size() const {
  return list_.size();
}
inline void TestSkillBroadcastUserCmd::clear_list() {
  list_.Clear();
}
inline const ::Cmd::TestUint64& TestSkillBroadcastUserCmd::list(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TestSkillBroadcastUserCmd.list)
  return list_.Get(index);
}
inline ::Cmd::TestUint64* TestSkillBroadcastUserCmd::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.TestSkillBroadcastUserCmd.list)
  return list_.Mutable(index);
}
inline ::Cmd::TestUint64* TestSkillBroadcastUserCmd::add_list() {
  // @@protoc_insertion_point(field_add:Cmd.TestSkillBroadcastUserCmd.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TestUint64 >&
TestSkillBroadcastUserCmd::list() const {
  // @@protoc_insertion_point(field_list:Cmd.TestSkillBroadcastUserCmd.list)
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TestUint64 >*
TestSkillBroadcastUserCmd::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TestSkillBroadcastUserCmd.list)
  return &list_;
}

// -------------------------------------------------------------------

// UseSkillUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
inline bool UseSkillUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UseSkillUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UseSkillUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UseSkillUserCmd::clear_cmd() {
  cmd_ = 5;
  clear_has_cmd();
}
inline ::Cmd::Command UseSkillUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UseSkillUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UseSkillUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UseSkillUserCmd.cmd)
}

// optional .Cmd.CmdParam param = 2 [default = USE_SKILL_USER_CMD];
inline bool UseSkillUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UseSkillUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UseSkillUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UseSkillUserCmd::clear_param() {
  param_ = 28;
  clear_has_param();
}
inline ::Cmd::CmdParam UseSkillUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UseSkillUserCmd.param)
  return static_cast< ::Cmd::CmdParam >(param_);
}
inline void UseSkillUserCmd::set_param(::Cmd::CmdParam value) {
  assert(::Cmd::CmdParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UseSkillUserCmd.param)
}

// optional uint64 tid = 3;
inline bool UseSkillUserCmd::has_tid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UseSkillUserCmd::set_has_tid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UseSkillUserCmd::clear_has_tid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UseSkillUserCmd::clear_tid() {
  tid_ = GOOGLE_ULONGLONG(0);
  clear_has_tid();
}
inline ::google::protobuf::uint64 UseSkillUserCmd::tid() const {
  // @@protoc_insertion_point(field_get:Cmd.UseSkillUserCmd.tid)
  return tid_;
}
inline void UseSkillUserCmd::set_tid(::google::protobuf::uint64 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UseSkillUserCmd.tid)
}

// optional uint32 skillID = 4;
inline bool UseSkillUserCmd::has_skillid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UseSkillUserCmd::set_has_skillid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UseSkillUserCmd::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UseSkillUserCmd::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 UseSkillUserCmd::skillid() const {
  // @@protoc_insertion_point(field_get:Cmd.UseSkillUserCmd.skillID)
  return skillid_;
}
inline void UseSkillUserCmd::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UseSkillUserCmd.skillID)
}

// optional .Cmd.ScenePos pos = 5;
inline bool UseSkillUserCmd::has_pos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UseSkillUserCmd::set_has_pos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UseSkillUserCmd::clear_has_pos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UseSkillUserCmd::clear_pos() {
  if (pos_ != NULL) pos_->::Cmd::ScenePos::Clear();
  clear_has_pos();
}
inline const ::Cmd::ScenePos& UseSkillUserCmd::pos() const {
  // @@protoc_insertion_point(field_get:Cmd.UseSkillUserCmd.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Cmd::ScenePos* UseSkillUserCmd::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Cmd::ScenePos;
  // @@protoc_insertion_point(field_mutable:Cmd.UseSkillUserCmd.pos)
  return pos_;
}
inline ::Cmd::ScenePos* UseSkillUserCmd::release_pos() {
  clear_has_pos();
  ::Cmd::ScenePos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void UseSkillUserCmd::set_allocated_pos(::Cmd::ScenePos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.UseSkillUserCmd.pos)
}

// -------------------------------------------------------------------

// ChantSkillUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
inline bool ChantSkillUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChantSkillUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChantSkillUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChantSkillUserCmd::clear_cmd() {
  cmd_ = 5;
  clear_has_cmd();
}
inline ::Cmd::Command ChantSkillUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ChantSkillUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ChantSkillUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChantSkillUserCmd.cmd)
}

// optional .Cmd.CmdParam param = 2 [default = CHANT_SKILL_USER_CMD];
inline bool ChantSkillUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChantSkillUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChantSkillUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChantSkillUserCmd::clear_param() {
  param_ = 29;
  clear_has_param();
}
inline ::Cmd::CmdParam ChantSkillUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ChantSkillUserCmd.param)
  return static_cast< ::Cmd::CmdParam >(param_);
}
inline void ChantSkillUserCmd::set_param(::Cmd::CmdParam value) {
  assert(::Cmd::CmdParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChantSkillUserCmd.param)
}

// optional uint64 tid = 3;
inline bool ChantSkillUserCmd::has_tid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChantSkillUserCmd::set_has_tid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChantSkillUserCmd::clear_has_tid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChantSkillUserCmd::clear_tid() {
  tid_ = GOOGLE_ULONGLONG(0);
  clear_has_tid();
}
inline ::google::protobuf::uint64 ChantSkillUserCmd::tid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChantSkillUserCmd.tid)
  return tid_;
}
inline void ChantSkillUserCmd::set_tid(::google::protobuf::uint64 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChantSkillUserCmd.tid)
}

// optional uint32 skillID = 4;
inline bool ChantSkillUserCmd::has_skillid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChantSkillUserCmd::set_has_skillid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChantSkillUserCmd::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChantSkillUserCmd::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 ChantSkillUserCmd::skillid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChantSkillUserCmd.skillID)
  return skillid_;
}
inline void ChantSkillUserCmd::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChantSkillUserCmd.skillID)
}

// optional .Cmd.ScenePos pos = 5;
inline bool ChantSkillUserCmd::has_pos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChantSkillUserCmd::set_has_pos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChantSkillUserCmd::clear_has_pos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChantSkillUserCmd::clear_pos() {
  if (pos_ != NULL) pos_->::Cmd::ScenePos::Clear();
  clear_has_pos();
}
inline const ::Cmd::ScenePos& ChantSkillUserCmd::pos() const {
  // @@protoc_insertion_point(field_get:Cmd.ChantSkillUserCmd.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Cmd::ScenePos* ChantSkillUserCmd::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Cmd::ScenePos;
  // @@protoc_insertion_point(field_mutable:Cmd.ChantSkillUserCmd.pos)
  return pos_;
}
inline ::Cmd::ScenePos* ChantSkillUserCmd::release_pos() {
  clear_has_pos();
  ::Cmd::ScenePos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void ChantSkillUserCmd::set_allocated_pos(::Cmd::ScenePos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ChantSkillUserCmd.pos)
}

// optional uint64 attid = 6;
inline bool ChantSkillUserCmd::has_attid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ChantSkillUserCmd::set_has_attid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ChantSkillUserCmd::clear_has_attid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ChantSkillUserCmd::clear_attid() {
  attid_ = GOOGLE_ULONGLONG(0);
  clear_has_attid();
}
inline ::google::protobuf::uint64 ChantSkillUserCmd::attid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChantSkillUserCmd.attid)
  return attid_;
}
inline void ChantSkillUserCmd::set_attid(::google::protobuf::uint64 value) {
  set_has_attid();
  attid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChantSkillUserCmd.attid)
}

// -------------------------------------------------------------------

// BreakChantSkillUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
inline bool BreakChantSkillUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BreakChantSkillUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BreakChantSkillUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BreakChantSkillUserCmd::clear_cmd() {
  cmd_ = 5;
  clear_has_cmd();
}
inline ::Cmd::Command BreakChantSkillUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.BreakChantSkillUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void BreakChantSkillUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BreakChantSkillUserCmd.cmd)
}

// optional .Cmd.CmdParam param = 2 [default = BREAK_CHANT_SKILL_USER_CMD];
inline bool BreakChantSkillUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BreakChantSkillUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BreakChantSkillUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BreakChantSkillUserCmd::clear_param() {
  param_ = 30;
  clear_has_param();
}
inline ::Cmd::CmdParam BreakChantSkillUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.BreakChantSkillUserCmd.param)
  return static_cast< ::Cmd::CmdParam >(param_);
}
inline void BreakChantSkillUserCmd::set_param(::Cmd::CmdParam value) {
  assert(::Cmd::CmdParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BreakChantSkillUserCmd.param)
}

// optional uint64 attid = 3;
inline bool BreakChantSkillUserCmd::has_attid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BreakChantSkillUserCmd::set_has_attid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BreakChantSkillUserCmd::clear_has_attid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BreakChantSkillUserCmd::clear_attid() {
  attid_ = GOOGLE_ULONGLONG(0);
  clear_has_attid();
}
inline ::google::protobuf::uint64 BreakChantSkillUserCmd::attid() const {
  // @@protoc_insertion_point(field_get:Cmd.BreakChantSkillUserCmd.attid)
  return attid_;
}
inline void BreakChantSkillUserCmd::set_attid(::google::protobuf::uint64 value) {
  set_has_attid();
  attid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BreakChantSkillUserCmd.attid)
}

// optional uint32 skillID = 4;
inline bool BreakChantSkillUserCmd::has_skillid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BreakChantSkillUserCmd::set_has_skillid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BreakChantSkillUserCmd::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BreakChantSkillUserCmd::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 BreakChantSkillUserCmd::skillid() const {
  // @@protoc_insertion_point(field_get:Cmd.BreakChantSkillUserCmd.skillID)
  return skillid_;
}
inline void BreakChantSkillUserCmd::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BreakChantSkillUserCmd.skillID)
}

// -------------------------------------------------------------------

// BroadcastSkillUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
inline bool BroadcastSkillUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BroadcastSkillUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BroadcastSkillUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BroadcastSkillUserCmd::clear_cmd() {
  cmd_ = 5;
  clear_has_cmd();
}
inline ::Cmd::Command BroadcastSkillUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.BroadcastSkillUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void BroadcastSkillUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BroadcastSkillUserCmd.cmd)
}

// optional .Cmd.CmdParam param = 2 [default = BROADCAST_SKILL_USER_CMD];
inline bool BroadcastSkillUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BroadcastSkillUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BroadcastSkillUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BroadcastSkillUserCmd::clear_param() {
  param_ = 31;
  clear_has_param();
}
inline ::Cmd::CmdParam BroadcastSkillUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.BroadcastSkillUserCmd.param)
  return static_cast< ::Cmd::CmdParam >(param_);
}
inline void BroadcastSkillUserCmd::set_param(::Cmd::CmdParam value) {
  assert(::Cmd::CmdParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BroadcastSkillUserCmd.param)
}

// optional uint64 attid = 3;
inline bool BroadcastSkillUserCmd::has_attid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BroadcastSkillUserCmd::set_has_attid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BroadcastSkillUserCmd::clear_has_attid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BroadcastSkillUserCmd::clear_attid() {
  attid_ = GOOGLE_ULONGLONG(0);
  clear_has_attid();
}
inline ::google::protobuf::uint64 BroadcastSkillUserCmd::attid() const {
  // @@protoc_insertion_point(field_get:Cmd.BroadcastSkillUserCmd.attid)
  return attid_;
}
inline void BroadcastSkillUserCmd::set_attid(::google::protobuf::uint64 value) {
  set_has_attid();
  attid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BroadcastSkillUserCmd.attid)
}

// optional uint32 skillID = 4;
inline bool BroadcastSkillUserCmd::has_skillid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BroadcastSkillUserCmd::set_has_skillid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BroadcastSkillUserCmd::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BroadcastSkillUserCmd::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 BroadcastSkillUserCmd::skillid() const {
  // @@protoc_insertion_point(field_get:Cmd.BroadcastSkillUserCmd.skillID)
  return skillid_;
}
inline void BroadcastSkillUserCmd::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BroadcastSkillUserCmd.skillID)
}

// optional .Cmd.ScenePos pos = 5;
inline bool BroadcastSkillUserCmd::has_pos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BroadcastSkillUserCmd::set_has_pos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BroadcastSkillUserCmd::clear_has_pos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BroadcastSkillUserCmd::clear_pos() {
  if (pos_ != NULL) pos_->::Cmd::ScenePos::Clear();
  clear_has_pos();
}
inline const ::Cmd::ScenePos& BroadcastSkillUserCmd::pos() const {
  // @@protoc_insertion_point(field_get:Cmd.BroadcastSkillUserCmd.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Cmd::ScenePos* BroadcastSkillUserCmd::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Cmd::ScenePos;
  // @@protoc_insertion_point(field_mutable:Cmd.BroadcastSkillUserCmd.pos)
  return pos_;
}
inline ::Cmd::ScenePos* BroadcastSkillUserCmd::release_pos() {
  clear_has_pos();
  ::Cmd::ScenePos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void BroadcastSkillUserCmd::set_allocated_pos(::Cmd::ScenePos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.BroadcastSkillUserCmd.pos)
}

// optional uint64 tid = 6;
inline bool BroadcastSkillUserCmd::has_tid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BroadcastSkillUserCmd::set_has_tid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BroadcastSkillUserCmd::clear_has_tid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BroadcastSkillUserCmd::clear_tid() {
  tid_ = GOOGLE_ULONGLONG(0);
  clear_has_tid();
}
inline ::google::protobuf::uint64 BroadcastSkillUserCmd::tid() const {
  // @@protoc_insertion_point(field_get:Cmd.BroadcastSkillUserCmd.tid)
  return tid_;
}
inline void BroadcastSkillUserCmd::set_tid(::google::protobuf::uint64 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BroadcastSkillUserCmd.tid)
}

// -------------------------------------------------------------------

// MapObjectData

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
inline bool MapObjectData::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MapObjectData::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MapObjectData::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MapObjectData::clear_cmd() {
  cmd_ = 5;
  clear_has_cmd();
}
inline ::Cmd::Command MapObjectData::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.MapObjectData.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void MapObjectData::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MapObjectData.cmd)
}

// optional .Cmd.CmdParam param = 2 [default = MAP_OBJECT_DATA];
inline bool MapObjectData::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MapObjectData::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MapObjectData::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MapObjectData::clear_param() {
  param_ = 38;
  clear_has_param();
}
inline ::Cmd::CmdParam MapObjectData::param() const {
  // @@protoc_insertion_point(field_get:Cmd.MapObjectData.param)
  return static_cast< ::Cmd::CmdParam >(param_);
}
inline void MapObjectData::set_param(::Cmd::CmdParam value) {
  assert(::Cmd::CmdParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MapObjectData.param)
}

// optional uint64 guid = 3 [default = 0];
inline bool MapObjectData::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MapObjectData::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MapObjectData::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MapObjectData::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 MapObjectData::guid() const {
  // @@protoc_insertion_point(field_get:Cmd.MapObjectData.guid)
  return guid_;
}
inline void MapObjectData::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MapObjectData.guid)
}

// repeated .Cmd.UserAttr attrs = 4;
inline int MapObjectData::attrs_size() const {
  return attrs_.size();
}
inline void MapObjectData::clear_attrs() {
  attrs_.Clear();
}
inline const ::Cmd::UserAttr& MapObjectData::attrs(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.MapObjectData.attrs)
  return attrs_.Get(index);
}
inline ::Cmd::UserAttr* MapObjectData::mutable_attrs(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.MapObjectData.attrs)
  return attrs_.Mutable(index);
}
inline ::Cmd::UserAttr* MapObjectData::add_attrs() {
  // @@protoc_insertion_point(field_add:Cmd.MapObjectData.attrs)
  return attrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >&
MapObjectData::attrs() const {
  // @@protoc_insertion_point(field_list:Cmd.MapObjectData.attrs)
  return attrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >*
MapObjectData::mutable_attrs() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.MapObjectData.attrs)
  return &attrs_;
}

// -------------------------------------------------------------------

// ReliveUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
inline bool ReliveUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReliveUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReliveUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReliveUserCmd::clear_cmd() {
  cmd_ = 5;
  clear_has_cmd();
}
inline ::Cmd::Command ReliveUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ReliveUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ReliveUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ReliveUserCmd.cmd)
}

// optional .Cmd.CmdParam param = 2 [default = RELIVE_USER_CMD];
inline bool ReliveUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReliveUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReliveUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReliveUserCmd::clear_param() {
  param_ = 41;
  clear_has_param();
}
inline ::Cmd::CmdParam ReliveUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ReliveUserCmd.param)
  return static_cast< ::Cmd::CmdParam >(param_);
}
inline void ReliveUserCmd::set_param(::Cmd::CmdParam value) {
  assert(::Cmd::CmdParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ReliveUserCmd.param)
}

// optional uint32 type = 3;
inline bool ReliveUserCmd::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReliveUserCmd::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReliveUserCmd::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReliveUserCmd::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ReliveUserCmd::type() const {
  // @@protoc_insertion_point(field_get:Cmd.ReliveUserCmd.type)
  return type_;
}
inline void ReliveUserCmd::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ReliveUserCmd.type)
}

// -------------------------------------------------------------------

// GoToUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
inline bool GoToUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GoToUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GoToUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GoToUserCmd::clear_cmd() {
  cmd_ = 5;
  clear_has_cmd();
}
inline ::Cmd::Command GoToUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GoToUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GoToUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GoToUserCmd.cmd)
}

// optional .Cmd.CmdParam param = 2 [default = GOTO_USER_CMD];
inline bool GoToUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GoToUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GoToUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GoToUserCmd::clear_param() {
  param_ = 42;
  clear_has_param();
}
inline ::Cmd::CmdParam GoToUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GoToUserCmd.param)
  return static_cast< ::Cmd::CmdParam >(param_);
}
inline void GoToUserCmd::set_param(::Cmd::CmdParam value) {
  assert(::Cmd::CmdParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GoToUserCmd.param)
}

// optional .Cmd.ScenePos pos = 3;
inline bool GoToUserCmd::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GoToUserCmd::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GoToUserCmd::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GoToUserCmd::clear_pos() {
  if (pos_ != NULL) pos_->::Cmd::ScenePos::Clear();
  clear_has_pos();
}
inline const ::Cmd::ScenePos& GoToUserCmd::pos() const {
  // @@protoc_insertion_point(field_get:Cmd.GoToUserCmd.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Cmd::ScenePos* GoToUserCmd::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Cmd::ScenePos;
  // @@protoc_insertion_point(field_mutable:Cmd.GoToUserCmd.pos)
  return pos_;
}
inline ::Cmd::ScenePos* GoToUserCmd::release_pos() {
  clear_has_pos();
  ::Cmd::ScenePos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void GoToUserCmd::set_allocated_pos(::Cmd::ScenePos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GoToUserCmd.pos)
}

// optional uint64 charid = 4 [default = 0];
inline bool GoToUserCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GoToUserCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GoToUserCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GoToUserCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GoToUserCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.GoToUserCmd.charid)
  return charid_;
}
inline void GoToUserCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GoToUserCmd.charid)
}

// optional bool isgomap = 5 [default = false];
inline bool GoToUserCmd::has_isgomap() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GoToUserCmd::set_has_isgomap() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GoToUserCmd::clear_has_isgomap() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GoToUserCmd::clear_isgomap() {
  isgomap_ = false;
  clear_has_isgomap();
}
inline bool GoToUserCmd::isgomap() const {
  // @@protoc_insertion_point(field_get:Cmd.GoToUserCmd.isgomap)
  return isgomap_;
}
inline void GoToUserCmd::set_isgomap(bool value) {
  set_has_isgomap();
  isgomap_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GoToUserCmd.isgomap)
}

// -------------------------------------------------------------------

// ReconnectionPosUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
inline bool ReconnectionPosUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReconnectionPosUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReconnectionPosUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReconnectionPosUserCmd::clear_cmd() {
  cmd_ = 5;
  clear_has_cmd();
}
inline ::Cmd::Command ReconnectionPosUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ReconnectionPosUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ReconnectionPosUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ReconnectionPosUserCmd.cmd)
}

// optional .Cmd.CmdParam param = 2 [default = RECONNECTION_POS_USER_CMD];
inline bool ReconnectionPosUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReconnectionPosUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReconnectionPosUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReconnectionPosUserCmd::clear_param() {
  param_ = 43;
  clear_has_param();
}
inline ::Cmd::CmdParam ReconnectionPosUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ReconnectionPosUserCmd.param)
  return static_cast< ::Cmd::CmdParam >(param_);
}
inline void ReconnectionPosUserCmd::set_param(::Cmd::CmdParam value) {
  assert(::Cmd::CmdParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ReconnectionPosUserCmd.param)
}

// optional .Cmd.ScenePos pos = 3;
inline bool ReconnectionPosUserCmd::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReconnectionPosUserCmd::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReconnectionPosUserCmd::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReconnectionPosUserCmd::clear_pos() {
  if (pos_ != NULL) pos_->::Cmd::ScenePos::Clear();
  clear_has_pos();
}
inline const ::Cmd::ScenePos& ReconnectionPosUserCmd::pos() const {
  // @@protoc_insertion_point(field_get:Cmd.ReconnectionPosUserCmd.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Cmd::ScenePos* ReconnectionPosUserCmd::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Cmd::ScenePos;
  // @@protoc_insertion_point(field_mutable:Cmd.ReconnectionPosUserCmd.pos)
  return pos_;
}
inline ::Cmd::ScenePos* ReconnectionPosUserCmd::release_pos() {
  clear_has_pos();
  ::Cmd::ScenePos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void ReconnectionPosUserCmd::set_allocated_pos(::Cmd::ScenePos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ReconnectionPosUserCmd.pos)
}

// -------------------------------------------------------------------

// GoToExitPosUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
inline bool GoToExitPosUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GoToExitPosUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GoToExitPosUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GoToExitPosUserCmd::clear_cmd() {
  cmd_ = 5;
  clear_has_cmd();
}
inline ::Cmd::Command GoToExitPosUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GoToExitPosUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GoToExitPosUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GoToExitPosUserCmd.cmd)
}

// optional .Cmd.CmdParam param = 2 [default = GOTO_EXIT_POS_USER_CMD];
inline bool GoToExitPosUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GoToExitPosUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GoToExitPosUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GoToExitPosUserCmd::clear_param() {
  param_ = 48;
  clear_has_param();
}
inline ::Cmd::CmdParam GoToExitPosUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GoToExitPosUserCmd.param)
  return static_cast< ::Cmd::CmdParam >(param_);
}
inline void GoToExitPosUserCmd::set_param(::Cmd::CmdParam value) {
  assert(::Cmd::CmdParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GoToExitPosUserCmd.param)
}

// optional uint32 mapid = 3;
inline bool GoToExitPosUserCmd::has_mapid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GoToExitPosUserCmd::set_has_mapid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GoToExitPosUserCmd::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GoToExitPosUserCmd::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 GoToExitPosUserCmd::mapid() const {
  // @@protoc_insertion_point(field_get:Cmd.GoToExitPosUserCmd.mapid)
  return mapid_;
}
inline void GoToExitPosUserCmd::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GoToExitPosUserCmd.mapid)
}

// -------------------------------------------------------------------

// GoToRandomPosUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PROTOCMD];
inline bool GoToRandomPosUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GoToRandomPosUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GoToRandomPosUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GoToRandomPosUserCmd::clear_cmd() {
  cmd_ = 5;
  clear_has_cmd();
}
inline ::Cmd::Command GoToRandomPosUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GoToRandomPosUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GoToRandomPosUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GoToRandomPosUserCmd.cmd)
}

// optional .Cmd.CmdParam param = 2 [default = GOTO_RANDOM_POS_USER_CMD];
inline bool GoToRandomPosUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GoToRandomPosUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GoToRandomPosUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GoToRandomPosUserCmd::clear_param() {
  param_ = 49;
  clear_has_param();
}
inline ::Cmd::CmdParam GoToRandomPosUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GoToRandomPosUserCmd.param)
  return static_cast< ::Cmd::CmdParam >(param_);
}
inline void GoToRandomPosUserCmd::set_param(::Cmd::CmdParam value) {
  assert(::Cmd::CmdParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GoToRandomPosUserCmd.param)
}

// optional uint32 mapid = 3;
inline bool GoToRandomPosUserCmd::has_mapid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GoToRandomPosUserCmd::set_has_mapid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GoToRandomPosUserCmd::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GoToRandomPosUserCmd::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 GoToRandomPosUserCmd::mapid() const {
  // @@protoc_insertion_point(field_get:Cmd.GoToRandomPosUserCmd.mapid)
  return mapid_;
}
inline void GoToRandomPosUserCmd::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GoToRandomPosUserCmd.mapid)
}

// optional .Cmd.ScenePos pos = 4;
inline bool GoToRandomPosUserCmd::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GoToRandomPosUserCmd::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GoToRandomPosUserCmd::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GoToRandomPosUserCmd::clear_pos() {
  if (pos_ != NULL) pos_->::Cmd::ScenePos::Clear();
  clear_has_pos();
}
inline const ::Cmd::ScenePos& GoToRandomPosUserCmd::pos() const {
  // @@protoc_insertion_point(field_get:Cmd.GoToRandomPosUserCmd.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Cmd::ScenePos* GoToRandomPosUserCmd::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Cmd::ScenePos;
  // @@protoc_insertion_point(field_mutable:Cmd.GoToRandomPosUserCmd.pos)
  return pos_;
}
inline ::Cmd::ScenePos* GoToRandomPosUserCmd::release_pos() {
  clear_has_pos();
  ::Cmd::ScenePos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void GoToRandomPosUserCmd::set_allocated_pos(::Cmd::ScenePos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GoToRandomPosUserCmd.pos)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cmd

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Cmd::CmdParam> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::CmdParam>() {
  return ::Cmd::CmdParam_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EUserSyncType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EUserSyncType>() {
  return ::Cmd::EUserSyncType_descriptor();
}
template <> struct is_proto_enum< ::Cmd::MessageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::MessageType>() {
  return ::Cmd::MessageType_descriptor();
}
template <> struct is_proto_enum< ::Cmd::DamageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::DamageType>() {
  return ::Cmd::DamageType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SceneUser_2eproto__INCLUDED
