// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Tutor.proto

#ifndef PROTOBUF_Tutor_2eproto__INCLUDED
#define PROTOBUF_Tutor_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "xCmd.pb.h"
// @@protoc_insertion_point(includes)

namespace Cmd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Tutor_2eproto();
void protobuf_AssignDesc_Tutor_2eproto();
void protobuf_ShutdownFile_Tutor_2eproto();

class TutorTaskItem;
class TutorRewardItem;
class TutorReward;
class OfflineTutorReward;
class TutorTaskUpdateNtf;
class TutorTaskQueryCmd;
class TutorTaskTeacherRewardCmd;
class TutorGrowRewardUpdateNtf;
class TutorGetGrowRewardCmd;

enum TutorParam {
  TUTORPARAM_TASK_UPDATE_NTF = 1,
  TUTORPARAM_TASK_QUERY = 2,
  TUTORPARAM_TASK_TEACHER_REWARD = 3,
  TUTORPARAM_GROW_REWARD_UPDATE = 4,
  TUTORPARAM_GET_GROW_REWARD = 5
};
bool TutorParam_IsValid(int value);
const TutorParam TutorParam_MIN = TUTORPARAM_TASK_UPDATE_NTF;
const TutorParam TutorParam_MAX = TUTORPARAM_GET_GROW_REWARD;
const int TutorParam_ARRAYSIZE = TutorParam_MAX + 1;

const ::google::protobuf::EnumDescriptor* TutorParam_descriptor();
inline const ::std::string& TutorParam_Name(TutorParam value) {
  return ::google::protobuf::internal::NameOfEnum(
    TutorParam_descriptor(), value);
}
inline bool TutorParam_Parse(
    const ::std::string& name, TutorParam* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TutorParam>(
    TutorParam_descriptor(), name, value);
}
// ===================================================================

class TutorTaskItem : public ::google::protobuf::Message {
 public:
  TutorTaskItem();
  virtual ~TutorTaskItem();

  TutorTaskItem(const TutorTaskItem& from);

  inline TutorTaskItem& operator=(const TutorTaskItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TutorTaskItem& default_instance();

  void Swap(TutorTaskItem* other);

  // implements Message ----------------------------------------------

  TutorTaskItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TutorTaskItem& from);
  void MergeFrom(const TutorTaskItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 progress = 2 [default = 0];
  inline bool has_progress() const;
  inline void clear_progress();
  static const int kProgressFieldNumber = 2;
  inline ::google::protobuf::uint32 progress() const;
  inline void set_progress(::google::protobuf::uint32 value);

  // optional bool reward = 3 [default = false];
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 3;
  inline bool reward() const;
  inline void set_reward(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.TutorTaskItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_progress();
  inline void clear_has_progress();
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 progress_;
  bool reward_;
  friend void  protobuf_AddDesc_Tutor_2eproto();
  friend void protobuf_AssignDesc_Tutor_2eproto();
  friend void protobuf_ShutdownFile_Tutor_2eproto();

  void InitAsDefaultInstance();
  static TutorTaskItem* default_instance_;
};
// -------------------------------------------------------------------

class TutorRewardItem : public ::google::protobuf::Message {
 public:
  TutorRewardItem();
  virtual ~TutorRewardItem();

  TutorRewardItem(const TutorRewardItem& from);

  inline TutorRewardItem& operator=(const TutorRewardItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TutorRewardItem& default_instance();

  void Swap(TutorRewardItem* other);

  // implements Message ----------------------------------------------

  TutorRewardItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TutorRewardItem& from);
  void MergeFrom(const TutorRewardItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 taskid = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskidFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);

  // optional uint32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.TutorRewardItem)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 time_;
  friend void  protobuf_AddDesc_Tutor_2eproto();
  friend void protobuf_AssignDesc_Tutor_2eproto();
  friend void protobuf_ShutdownFile_Tutor_2eproto();

  void InitAsDefaultInstance();
  static TutorRewardItem* default_instance_;
};
// -------------------------------------------------------------------

class TutorReward : public ::google::protobuf::Message {
 public:
  TutorReward();
  virtual ~TutorReward();

  TutorReward(const TutorReward& from);

  inline TutorReward& operator=(const TutorReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TutorReward& default_instance();

  void Swap(TutorReward* other);

  // implements Message ----------------------------------------------

  TutorReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TutorReward& from);
  void MergeFrom(const TutorReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charid = 1 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // repeated uint32 reward = 3;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 3;
  inline ::google::protobuf::uint32 reward(int index) const;
  inline void set_reward(int index, ::google::protobuf::uint32 value);
  inline void add_reward(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      reward() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_reward();

  // repeated .Cmd.TutorRewardItem item = 4;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 4;
  inline const ::Cmd::TutorRewardItem& item(int index) const;
  inline ::Cmd::TutorRewardItem* mutable_item(int index);
  inline ::Cmd::TutorRewardItem* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TutorRewardItem >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TutorRewardItem >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:Cmd.TutorReward)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::std::string* name_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > reward_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TutorRewardItem > item_;
  friend void  protobuf_AddDesc_Tutor_2eproto();
  friend void protobuf_AssignDesc_Tutor_2eproto();
  friend void protobuf_ShutdownFile_Tutor_2eproto();

  void InitAsDefaultInstance();
  static TutorReward* default_instance_;
};
// -------------------------------------------------------------------

class OfflineTutorReward : public ::google::protobuf::Message {
 public:
  OfflineTutorReward();
  virtual ~OfflineTutorReward();

  OfflineTutorReward(const OfflineTutorReward& from);

  inline OfflineTutorReward& operator=(const OfflineTutorReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OfflineTutorReward& default_instance();

  void Swap(OfflineTutorReward* other);

  // implements Message ----------------------------------------------

  OfflineTutorReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OfflineTutorReward& from);
  void MergeFrom(const OfflineTutorReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Cmd.TutorReward teacherrewards = 1;
  inline int teacherrewards_size() const;
  inline void clear_teacherrewards();
  static const int kTeacherrewardsFieldNumber = 1;
  inline const ::Cmd::TutorReward& teacherrewards(int index) const;
  inline ::Cmd::TutorReward* mutable_teacherrewards(int index);
  inline ::Cmd::TutorReward* add_teacherrewards();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TutorReward >&
      teacherrewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TutorReward >*
      mutable_teacherrewards();

  // @@protoc_insertion_point(class_scope:Cmd.OfflineTutorReward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TutorReward > teacherrewards_;
  friend void  protobuf_AddDesc_Tutor_2eproto();
  friend void protobuf_AssignDesc_Tutor_2eproto();
  friend void protobuf_ShutdownFile_Tutor_2eproto();

  void InitAsDefaultInstance();
  static OfflineTutorReward* default_instance_;
};
// -------------------------------------------------------------------

class TutorTaskUpdateNtf : public ::google::protobuf::Message {
 public:
  TutorTaskUpdateNtf();
  virtual ~TutorTaskUpdateNtf();

  TutorTaskUpdateNtf(const TutorTaskUpdateNtf& from);

  inline TutorTaskUpdateNtf& operator=(const TutorTaskUpdateNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TutorTaskUpdateNtf& default_instance();

  void Swap(TutorTaskUpdateNtf* other);

  // implements Message ----------------------------------------------

  TutorTaskUpdateNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TutorTaskUpdateNtf& from);
  void MergeFrom(const TutorTaskUpdateNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_TUTOR_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TutorParam param = 2 [default = TUTORPARAM_TASK_UPDATE_NTF];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TutorParam param() const;
  inline void set_param(::Cmd::TutorParam value);

  // repeated .Cmd.TutorTaskItem items = 3;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 3;
  inline const ::Cmd::TutorTaskItem& items(int index) const;
  inline ::Cmd::TutorTaskItem* mutable_items(int index);
  inline ::Cmd::TutorTaskItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TutorTaskItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TutorTaskItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:Cmd.TutorTaskUpdateNtf)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TutorTaskItem > items_;
  friend void  protobuf_AddDesc_Tutor_2eproto();
  friend void protobuf_AssignDesc_Tutor_2eproto();
  friend void protobuf_ShutdownFile_Tutor_2eproto();

  void InitAsDefaultInstance();
  static TutorTaskUpdateNtf* default_instance_;
};
// -------------------------------------------------------------------

class TutorTaskQueryCmd : public ::google::protobuf::Message {
 public:
  TutorTaskQueryCmd();
  virtual ~TutorTaskQueryCmd();

  TutorTaskQueryCmd(const TutorTaskQueryCmd& from);

  inline TutorTaskQueryCmd& operator=(const TutorTaskQueryCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TutorTaskQueryCmd& default_instance();

  void Swap(TutorTaskQueryCmd* other);

  // implements Message ----------------------------------------------

  TutorTaskQueryCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TutorTaskQueryCmd& from);
  void MergeFrom(const TutorTaskQueryCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_TUTOR_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TutorParam param = 2 [default = TUTORPARAM_TASK_QUERY];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TutorParam param() const;
  inline void set_param(::Cmd::TutorParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // repeated .Cmd.TutorTaskItem items = 4;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 4;
  inline const ::Cmd::TutorTaskItem& items(int index) const;
  inline ::Cmd::TutorTaskItem* mutable_items(int index);
  inline ::Cmd::TutorTaskItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TutorTaskItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TutorTaskItem >*
      mutable_items();

  // repeated uint32 finishtaskids = 5;
  inline int finishtaskids_size() const;
  inline void clear_finishtaskids();
  static const int kFinishtaskidsFieldNumber = 5;
  inline ::google::protobuf::uint32 finishtaskids(int index) const;
  inline void set_finishtaskids(int index, ::google::protobuf::uint32 value);
  inline void add_finishtaskids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      finishtaskids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_finishtaskids();

  // optional bool refresh = 6 [default = false];
  inline bool has_refresh() const;
  inline void clear_refresh();
  static const int kRefreshFieldNumber = 6;
  inline bool refresh() const;
  inline void set_refresh(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.TutorTaskQueryCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_refresh();
  inline void clear_has_refresh();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TutorTaskItem > items_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > finishtaskids_;
  bool refresh_;
  friend void  protobuf_AddDesc_Tutor_2eproto();
  friend void protobuf_AssignDesc_Tutor_2eproto();
  friend void protobuf_ShutdownFile_Tutor_2eproto();

  void InitAsDefaultInstance();
  static TutorTaskQueryCmd* default_instance_;
};
// -------------------------------------------------------------------

class TutorTaskTeacherRewardCmd : public ::google::protobuf::Message {
 public:
  TutorTaskTeacherRewardCmd();
  virtual ~TutorTaskTeacherRewardCmd();

  TutorTaskTeacherRewardCmd(const TutorTaskTeacherRewardCmd& from);

  inline TutorTaskTeacherRewardCmd& operator=(const TutorTaskTeacherRewardCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TutorTaskTeacherRewardCmd& default_instance();

  void Swap(TutorTaskTeacherRewardCmd* other);

  // implements Message ----------------------------------------------

  TutorTaskTeacherRewardCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TutorTaskTeacherRewardCmd& from);
  void MergeFrom(const TutorTaskTeacherRewardCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_TUTOR_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TutorParam param = 2 [default = TUTORPARAM_TASK_TEACHER_REWARD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TutorParam param() const;
  inline void set_param(::Cmd::TutorParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 taskid = 4 [default = 0];
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskidFieldNumber = 4;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.TutorTaskTeacherRewardCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_taskid();
  inline void clear_has_taskid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 taskid_;
  friend void  protobuf_AddDesc_Tutor_2eproto();
  friend void protobuf_AssignDesc_Tutor_2eproto();
  friend void protobuf_ShutdownFile_Tutor_2eproto();

  void InitAsDefaultInstance();
  static TutorTaskTeacherRewardCmd* default_instance_;
};
// -------------------------------------------------------------------

class TutorGrowRewardUpdateNtf : public ::google::protobuf::Message {
 public:
  TutorGrowRewardUpdateNtf();
  virtual ~TutorGrowRewardUpdateNtf();

  TutorGrowRewardUpdateNtf(const TutorGrowRewardUpdateNtf& from);

  inline TutorGrowRewardUpdateNtf& operator=(const TutorGrowRewardUpdateNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TutorGrowRewardUpdateNtf& default_instance();

  void Swap(TutorGrowRewardUpdateNtf* other);

  // implements Message ----------------------------------------------

  TutorGrowRewardUpdateNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TutorGrowRewardUpdateNtf& from);
  void MergeFrom(const TutorGrowRewardUpdateNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_TUTOR_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TutorParam param = 2 [default = TUTORPARAM_GROW_REWARD_UPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TutorParam param() const;
  inline void set_param(::Cmd::TutorParam value);

  // repeated uint64 growrewards = 3;
  inline int growrewards_size() const;
  inline void clear_growrewards();
  static const int kGrowrewardsFieldNumber = 3;
  inline ::google::protobuf::uint64 growrewards(int index) const;
  inline void set_growrewards(int index, ::google::protobuf::uint64 value);
  inline void add_growrewards(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      growrewards() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_growrewards();

  // @@protoc_insertion_point(class_scope:Cmd.TutorGrowRewardUpdateNtf)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > growrewards_;
  friend void  protobuf_AddDesc_Tutor_2eproto();
  friend void protobuf_AssignDesc_Tutor_2eproto();
  friend void protobuf_ShutdownFile_Tutor_2eproto();

  void InitAsDefaultInstance();
  static TutorGrowRewardUpdateNtf* default_instance_;
};
// -------------------------------------------------------------------

class TutorGetGrowRewardCmd : public ::google::protobuf::Message {
 public:
  TutorGetGrowRewardCmd();
  virtual ~TutorGetGrowRewardCmd();

  TutorGetGrowRewardCmd(const TutorGetGrowRewardCmd& from);

  inline TutorGetGrowRewardCmd& operator=(const TutorGetGrowRewardCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TutorGetGrowRewardCmd& default_instance();

  void Swap(TutorGetGrowRewardCmd* other);

  // implements Message ----------------------------------------------

  TutorGetGrowRewardCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TutorGetGrowRewardCmd& from);
  void MergeFrom(const TutorGetGrowRewardCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_TUTOR_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TutorParam param = 2 [default = TUTORPARAM_GET_GROW_REWARD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TutorParam param() const;
  inline void set_param(::Cmd::TutorParam value);

  // @@protoc_insertion_point(class_scope:Cmd.TutorGetGrowRewardCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  friend void  protobuf_AddDesc_Tutor_2eproto();
  friend void protobuf_AssignDesc_Tutor_2eproto();
  friend void protobuf_ShutdownFile_Tutor_2eproto();

  void InitAsDefaultInstance();
  static TutorGetGrowRewardCmd* default_instance_;
};
// ===================================================================


// ===================================================================

// TutorTaskItem

// optional uint32 id = 1 [default = 0];
inline bool TutorTaskItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TutorTaskItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TutorTaskItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TutorTaskItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TutorTaskItem::id() const {
  // @@protoc_insertion_point(field_get:Cmd.TutorTaskItem.id)
  return id_;
}
inline void TutorTaskItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TutorTaskItem.id)
}

// optional uint32 progress = 2 [default = 0];
inline bool TutorTaskItem::has_progress() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TutorTaskItem::set_has_progress() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TutorTaskItem::clear_has_progress() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TutorTaskItem::clear_progress() {
  progress_ = 0u;
  clear_has_progress();
}
inline ::google::protobuf::uint32 TutorTaskItem::progress() const {
  // @@protoc_insertion_point(field_get:Cmd.TutorTaskItem.progress)
  return progress_;
}
inline void TutorTaskItem::set_progress(::google::protobuf::uint32 value) {
  set_has_progress();
  progress_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TutorTaskItem.progress)
}

// optional bool reward = 3 [default = false];
inline bool TutorTaskItem::has_reward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TutorTaskItem::set_has_reward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TutorTaskItem::clear_has_reward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TutorTaskItem::clear_reward() {
  reward_ = false;
  clear_has_reward();
}
inline bool TutorTaskItem::reward() const {
  // @@protoc_insertion_point(field_get:Cmd.TutorTaskItem.reward)
  return reward_;
}
inline void TutorTaskItem::set_reward(bool value) {
  set_has_reward();
  reward_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TutorTaskItem.reward)
}

// -------------------------------------------------------------------

// TutorRewardItem

// optional uint32 taskid = 1;
inline bool TutorRewardItem::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TutorRewardItem::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TutorRewardItem::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TutorRewardItem::clear_taskid() {
  taskid_ = 0u;
  clear_has_taskid();
}
inline ::google::protobuf::uint32 TutorRewardItem::taskid() const {
  // @@protoc_insertion_point(field_get:Cmd.TutorRewardItem.taskid)
  return taskid_;
}
inline void TutorRewardItem::set_taskid(::google::protobuf::uint32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TutorRewardItem.taskid)
}

// optional uint32 time = 2;
inline bool TutorRewardItem::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TutorRewardItem::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TutorRewardItem::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TutorRewardItem::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 TutorRewardItem::time() const {
  // @@protoc_insertion_point(field_get:Cmd.TutorRewardItem.time)
  return time_;
}
inline void TutorRewardItem::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TutorRewardItem.time)
}

// -------------------------------------------------------------------

// TutorReward

// optional uint64 charid = 1 [default = 0];
inline bool TutorReward::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TutorReward::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TutorReward::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TutorReward::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 TutorReward::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.TutorReward.charid)
  return charid_;
}
inline void TutorReward::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TutorReward.charid)
}

// optional string name = 2;
inline bool TutorReward::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TutorReward::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TutorReward::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TutorReward::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& TutorReward::name() const {
  // @@protoc_insertion_point(field_get:Cmd.TutorReward.name)
  return *name_;
}
inline void TutorReward::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.TutorReward.name)
}
inline void TutorReward::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.TutorReward.name)
}
inline void TutorReward::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.TutorReward.name)
}
inline ::std::string* TutorReward::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.TutorReward.name)
  return name_;
}
inline ::std::string* TutorReward::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TutorReward::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TutorReward.name)
}

// repeated uint32 reward = 3;
inline int TutorReward::reward_size() const {
  return reward_.size();
}
inline void TutorReward::clear_reward() {
  reward_.Clear();
}
inline ::google::protobuf::uint32 TutorReward::reward(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TutorReward.reward)
  return reward_.Get(index);
}
inline void TutorReward::set_reward(int index, ::google::protobuf::uint32 value) {
  reward_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.TutorReward.reward)
}
inline void TutorReward::add_reward(::google::protobuf::uint32 value) {
  reward_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.TutorReward.reward)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TutorReward::reward() const {
  // @@protoc_insertion_point(field_list:Cmd.TutorReward.reward)
  return reward_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TutorReward::mutable_reward() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TutorReward.reward)
  return &reward_;
}

// repeated .Cmd.TutorRewardItem item = 4;
inline int TutorReward::item_size() const {
  return item_.size();
}
inline void TutorReward::clear_item() {
  item_.Clear();
}
inline const ::Cmd::TutorRewardItem& TutorReward::item(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TutorReward.item)
  return item_.Get(index);
}
inline ::Cmd::TutorRewardItem* TutorReward::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.TutorReward.item)
  return item_.Mutable(index);
}
inline ::Cmd::TutorRewardItem* TutorReward::add_item() {
  // @@protoc_insertion_point(field_add:Cmd.TutorReward.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TutorRewardItem >&
TutorReward::item() const {
  // @@protoc_insertion_point(field_list:Cmd.TutorReward.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TutorRewardItem >*
TutorReward::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TutorReward.item)
  return &item_;
}

// -------------------------------------------------------------------

// OfflineTutorReward

// repeated .Cmd.TutorReward teacherrewards = 1;
inline int OfflineTutorReward::teacherrewards_size() const {
  return teacherrewards_.size();
}
inline void OfflineTutorReward::clear_teacherrewards() {
  teacherrewards_.Clear();
}
inline const ::Cmd::TutorReward& OfflineTutorReward::teacherrewards(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.OfflineTutorReward.teacherrewards)
  return teacherrewards_.Get(index);
}
inline ::Cmd::TutorReward* OfflineTutorReward::mutable_teacherrewards(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.OfflineTutorReward.teacherrewards)
  return teacherrewards_.Mutable(index);
}
inline ::Cmd::TutorReward* OfflineTutorReward::add_teacherrewards() {
  // @@protoc_insertion_point(field_add:Cmd.OfflineTutorReward.teacherrewards)
  return teacherrewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TutorReward >&
OfflineTutorReward::teacherrewards() const {
  // @@protoc_insertion_point(field_list:Cmd.OfflineTutorReward.teacherrewards)
  return teacherrewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TutorReward >*
OfflineTutorReward::mutable_teacherrewards() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.OfflineTutorReward.teacherrewards)
  return &teacherrewards_;
}

// -------------------------------------------------------------------

// TutorTaskUpdateNtf

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_TUTOR_PROTOCMD];
inline bool TutorTaskUpdateNtf::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TutorTaskUpdateNtf::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TutorTaskUpdateNtf::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TutorTaskUpdateNtf::clear_cmd() {
  cmd_ = 31;
  clear_has_cmd();
}
inline ::Cmd::Command TutorTaskUpdateNtf::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TutorTaskUpdateNtf.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TutorTaskUpdateNtf::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TutorTaskUpdateNtf.cmd)
}

// optional .Cmd.TutorParam param = 2 [default = TUTORPARAM_TASK_UPDATE_NTF];
inline bool TutorTaskUpdateNtf::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TutorTaskUpdateNtf::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TutorTaskUpdateNtf::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TutorTaskUpdateNtf::clear_param() {
  param_ = 1;
  clear_has_param();
}
inline ::Cmd::TutorParam TutorTaskUpdateNtf::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TutorTaskUpdateNtf.param)
  return static_cast< ::Cmd::TutorParam >(param_);
}
inline void TutorTaskUpdateNtf::set_param(::Cmd::TutorParam value) {
  assert(::Cmd::TutorParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TutorTaskUpdateNtf.param)
}

// repeated .Cmd.TutorTaskItem items = 3;
inline int TutorTaskUpdateNtf::items_size() const {
  return items_.size();
}
inline void TutorTaskUpdateNtf::clear_items() {
  items_.Clear();
}
inline const ::Cmd::TutorTaskItem& TutorTaskUpdateNtf::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TutorTaskUpdateNtf.items)
  return items_.Get(index);
}
inline ::Cmd::TutorTaskItem* TutorTaskUpdateNtf::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.TutorTaskUpdateNtf.items)
  return items_.Mutable(index);
}
inline ::Cmd::TutorTaskItem* TutorTaskUpdateNtf::add_items() {
  // @@protoc_insertion_point(field_add:Cmd.TutorTaskUpdateNtf.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TutorTaskItem >&
TutorTaskUpdateNtf::items() const {
  // @@protoc_insertion_point(field_list:Cmd.TutorTaskUpdateNtf.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TutorTaskItem >*
TutorTaskUpdateNtf::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TutorTaskUpdateNtf.items)
  return &items_;
}

// -------------------------------------------------------------------

// TutorTaskQueryCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_TUTOR_PROTOCMD];
inline bool TutorTaskQueryCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TutorTaskQueryCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TutorTaskQueryCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TutorTaskQueryCmd::clear_cmd() {
  cmd_ = 31;
  clear_has_cmd();
}
inline ::Cmd::Command TutorTaskQueryCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TutorTaskQueryCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TutorTaskQueryCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TutorTaskQueryCmd.cmd)
}

// optional .Cmd.TutorParam param = 2 [default = TUTORPARAM_TASK_QUERY];
inline bool TutorTaskQueryCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TutorTaskQueryCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TutorTaskQueryCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TutorTaskQueryCmd::clear_param() {
  param_ = 2;
  clear_has_param();
}
inline ::Cmd::TutorParam TutorTaskQueryCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TutorTaskQueryCmd.param)
  return static_cast< ::Cmd::TutorParam >(param_);
}
inline void TutorTaskQueryCmd::set_param(::Cmd::TutorParam value) {
  assert(::Cmd::TutorParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TutorTaskQueryCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool TutorTaskQueryCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TutorTaskQueryCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TutorTaskQueryCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TutorTaskQueryCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 TutorTaskQueryCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.TutorTaskQueryCmd.charid)
  return charid_;
}
inline void TutorTaskQueryCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TutorTaskQueryCmd.charid)
}

// repeated .Cmd.TutorTaskItem items = 4;
inline int TutorTaskQueryCmd::items_size() const {
  return items_.size();
}
inline void TutorTaskQueryCmd::clear_items() {
  items_.Clear();
}
inline const ::Cmd::TutorTaskItem& TutorTaskQueryCmd::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TutorTaskQueryCmd.items)
  return items_.Get(index);
}
inline ::Cmd::TutorTaskItem* TutorTaskQueryCmd::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.TutorTaskQueryCmd.items)
  return items_.Mutable(index);
}
inline ::Cmd::TutorTaskItem* TutorTaskQueryCmd::add_items() {
  // @@protoc_insertion_point(field_add:Cmd.TutorTaskQueryCmd.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TutorTaskItem >&
TutorTaskQueryCmd::items() const {
  // @@protoc_insertion_point(field_list:Cmd.TutorTaskQueryCmd.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TutorTaskItem >*
TutorTaskQueryCmd::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TutorTaskQueryCmd.items)
  return &items_;
}

// repeated uint32 finishtaskids = 5;
inline int TutorTaskQueryCmd::finishtaskids_size() const {
  return finishtaskids_.size();
}
inline void TutorTaskQueryCmd::clear_finishtaskids() {
  finishtaskids_.Clear();
}
inline ::google::protobuf::uint32 TutorTaskQueryCmd::finishtaskids(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TutorTaskQueryCmd.finishtaskids)
  return finishtaskids_.Get(index);
}
inline void TutorTaskQueryCmd::set_finishtaskids(int index, ::google::protobuf::uint32 value) {
  finishtaskids_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.TutorTaskQueryCmd.finishtaskids)
}
inline void TutorTaskQueryCmd::add_finishtaskids(::google::protobuf::uint32 value) {
  finishtaskids_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.TutorTaskQueryCmd.finishtaskids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TutorTaskQueryCmd::finishtaskids() const {
  // @@protoc_insertion_point(field_list:Cmd.TutorTaskQueryCmd.finishtaskids)
  return finishtaskids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TutorTaskQueryCmd::mutable_finishtaskids() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TutorTaskQueryCmd.finishtaskids)
  return &finishtaskids_;
}

// optional bool refresh = 6 [default = false];
inline bool TutorTaskQueryCmd::has_refresh() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TutorTaskQueryCmd::set_has_refresh() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TutorTaskQueryCmd::clear_has_refresh() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TutorTaskQueryCmd::clear_refresh() {
  refresh_ = false;
  clear_has_refresh();
}
inline bool TutorTaskQueryCmd::refresh() const {
  // @@protoc_insertion_point(field_get:Cmd.TutorTaskQueryCmd.refresh)
  return refresh_;
}
inline void TutorTaskQueryCmd::set_refresh(bool value) {
  set_has_refresh();
  refresh_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TutorTaskQueryCmd.refresh)
}

// -------------------------------------------------------------------

// TutorTaskTeacherRewardCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_TUTOR_PROTOCMD];
inline bool TutorTaskTeacherRewardCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TutorTaskTeacherRewardCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TutorTaskTeacherRewardCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TutorTaskTeacherRewardCmd::clear_cmd() {
  cmd_ = 31;
  clear_has_cmd();
}
inline ::Cmd::Command TutorTaskTeacherRewardCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TutorTaskTeacherRewardCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TutorTaskTeacherRewardCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TutorTaskTeacherRewardCmd.cmd)
}

// optional .Cmd.TutorParam param = 2 [default = TUTORPARAM_TASK_TEACHER_REWARD];
inline bool TutorTaskTeacherRewardCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TutorTaskTeacherRewardCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TutorTaskTeacherRewardCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TutorTaskTeacherRewardCmd::clear_param() {
  param_ = 3;
  clear_has_param();
}
inline ::Cmd::TutorParam TutorTaskTeacherRewardCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TutorTaskTeacherRewardCmd.param)
  return static_cast< ::Cmd::TutorParam >(param_);
}
inline void TutorTaskTeacherRewardCmd::set_param(::Cmd::TutorParam value) {
  assert(::Cmd::TutorParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TutorTaskTeacherRewardCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool TutorTaskTeacherRewardCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TutorTaskTeacherRewardCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TutorTaskTeacherRewardCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TutorTaskTeacherRewardCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 TutorTaskTeacherRewardCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.TutorTaskTeacherRewardCmd.charid)
  return charid_;
}
inline void TutorTaskTeacherRewardCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TutorTaskTeacherRewardCmd.charid)
}

// optional uint32 taskid = 4 [default = 0];
inline bool TutorTaskTeacherRewardCmd::has_taskid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TutorTaskTeacherRewardCmd::set_has_taskid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TutorTaskTeacherRewardCmd::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TutorTaskTeacherRewardCmd::clear_taskid() {
  taskid_ = 0u;
  clear_has_taskid();
}
inline ::google::protobuf::uint32 TutorTaskTeacherRewardCmd::taskid() const {
  // @@protoc_insertion_point(field_get:Cmd.TutorTaskTeacherRewardCmd.taskid)
  return taskid_;
}
inline void TutorTaskTeacherRewardCmd::set_taskid(::google::protobuf::uint32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TutorTaskTeacherRewardCmd.taskid)
}

// -------------------------------------------------------------------

// TutorGrowRewardUpdateNtf

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_TUTOR_PROTOCMD];
inline bool TutorGrowRewardUpdateNtf::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TutorGrowRewardUpdateNtf::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TutorGrowRewardUpdateNtf::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TutorGrowRewardUpdateNtf::clear_cmd() {
  cmd_ = 31;
  clear_has_cmd();
}
inline ::Cmd::Command TutorGrowRewardUpdateNtf::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TutorGrowRewardUpdateNtf.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TutorGrowRewardUpdateNtf::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TutorGrowRewardUpdateNtf.cmd)
}

// optional .Cmd.TutorParam param = 2 [default = TUTORPARAM_GROW_REWARD_UPDATE];
inline bool TutorGrowRewardUpdateNtf::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TutorGrowRewardUpdateNtf::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TutorGrowRewardUpdateNtf::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TutorGrowRewardUpdateNtf::clear_param() {
  param_ = 4;
  clear_has_param();
}
inline ::Cmd::TutorParam TutorGrowRewardUpdateNtf::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TutorGrowRewardUpdateNtf.param)
  return static_cast< ::Cmd::TutorParam >(param_);
}
inline void TutorGrowRewardUpdateNtf::set_param(::Cmd::TutorParam value) {
  assert(::Cmd::TutorParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TutorGrowRewardUpdateNtf.param)
}

// repeated uint64 growrewards = 3;
inline int TutorGrowRewardUpdateNtf::growrewards_size() const {
  return growrewards_.size();
}
inline void TutorGrowRewardUpdateNtf::clear_growrewards() {
  growrewards_.Clear();
}
inline ::google::protobuf::uint64 TutorGrowRewardUpdateNtf::growrewards(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TutorGrowRewardUpdateNtf.growrewards)
  return growrewards_.Get(index);
}
inline void TutorGrowRewardUpdateNtf::set_growrewards(int index, ::google::protobuf::uint64 value) {
  growrewards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.TutorGrowRewardUpdateNtf.growrewards)
}
inline void TutorGrowRewardUpdateNtf::add_growrewards(::google::protobuf::uint64 value) {
  growrewards_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.TutorGrowRewardUpdateNtf.growrewards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TutorGrowRewardUpdateNtf::growrewards() const {
  // @@protoc_insertion_point(field_list:Cmd.TutorGrowRewardUpdateNtf.growrewards)
  return growrewards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TutorGrowRewardUpdateNtf::mutable_growrewards() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TutorGrowRewardUpdateNtf.growrewards)
  return &growrewards_;
}

// -------------------------------------------------------------------

// TutorGetGrowRewardCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_TUTOR_PROTOCMD];
inline bool TutorGetGrowRewardCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TutorGetGrowRewardCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TutorGetGrowRewardCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TutorGetGrowRewardCmd::clear_cmd() {
  cmd_ = 31;
  clear_has_cmd();
}
inline ::Cmd::Command TutorGetGrowRewardCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TutorGetGrowRewardCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TutorGetGrowRewardCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TutorGetGrowRewardCmd.cmd)
}

// optional .Cmd.TutorParam param = 2 [default = TUTORPARAM_GET_GROW_REWARD];
inline bool TutorGetGrowRewardCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TutorGetGrowRewardCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TutorGetGrowRewardCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TutorGetGrowRewardCmd::clear_param() {
  param_ = 5;
  clear_has_param();
}
inline ::Cmd::TutorParam TutorGetGrowRewardCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TutorGetGrowRewardCmd.param)
  return static_cast< ::Cmd::TutorParam >(param_);
}
inline void TutorGetGrowRewardCmd::set_param(::Cmd::TutorParam value) {
  assert(::Cmd::TutorParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TutorGetGrowRewardCmd.param)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cmd

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Cmd::TutorParam> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::TutorParam>() {
  return ::Cmd::TutorParam_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Tutor_2eproto__INCLUDED
