// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ScenePet.proto

#ifndef PROTOBUF_ScenePet_2eproto__INCLUDED
#define PROTOBUF_ScenePet_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "xCmd.pb.h"
#include "SceneItem.pb.h"
// @@protoc_insertion_point(includes)

namespace Cmd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ScenePet_2eproto();
void protobuf_AssignDesc_ScenePet_2eproto();
void protobuf_ShutdownFile_ScenePet_2eproto();

class PetData;
class PetList;
class WeaponPetData;
class FireCatPetCmd;
class HireCatPetCmd;
class EggHatchPetCmd;
class EggRestorePetCmd;
class CatchValuePetCmd;
class CatchResultPetCmd;
class UserPetData;
class CatchPetPetCmd;
class CatchPetGiftPetCmd;
class PetMemberData;
class PetInfo;
class PetInfoPetCmd;
class PetInfoUpdatePetCmd;
class PetOffPetCmd;
class GetGiftPetCmd;
class EquipOperPetCmd;
class EquipUpdatePetCmd;
class PetAdventureStep;
class PetEfficiencyInfo;
class PetMonsterRewardInfo;
class PetAdventureItem;
class QueryPetAdventureListPetCmd;
class PetAdventureResultNtfPetCmd;
class StartAdventurePetCmd;
class GetAdventureRewardPetCmd;
class QueryBattlePetCmd;
class HandPetPetCmd;
class GiveGiftPetCmd;
class UnlockNtfPetCmd;
class ResetSkillPetCmd;
class ChangeNamePetCmd;
class SwitchSkillPetCmd;
class WorkSpace;
class WorkManual;
class WorkPetExtra;
class WorkDayReward;
class UnlockPetWorkManualPetCmd;
class StartWorkPetCmd;
class StopWorkPetCmd;
class QueryPetWorkManualPetCmd;
class QueryPetWorkDataPetCmd;
class GetPetWorkRewardPetCmd;
class WorkSpaceUpdate;
class PetExtraUpdatePetCmd;
class ComposePetCmd;
class SpecPetEquip;
class PetEquipUnlockInfo;
class PetEquipListCmd;
class UpdatePetEquipListCmd;
class PetWearInfo;
class ChangeWearPetCmd;
class UpdateWearPetCmd;

enum PetParam {
  PETPARAM_PETLIST = 1,
  PETPARAM_FIRE_CAT = 2,
  PETPARAM_HIRE_CAT = 3,
  PETPARAM_HATCH_EGG = 4,
  PETPARAM_RESTORE_EGG = 5,
  PETPARAM_CATCH_VALUE_SYNC = 6,
  PETPARAM_CATCH_RESULT = 7,
  PETPARAM_CATCH_PET = 8,
  PETPARAM_PETINFO = 9,
  PETPARAM_PETINFO_UPDATE = 10,
  PETPARAM_OFF_PET = 11,
  PETPARAM_CATCH_GIFT = 12,
  PETPARAM_GET_GIFT = 13,
  PETPARAM_EQUIP_OPER = 14,
  PETPARAM_EQUIP_UPDATE = 15,
  PETPARAM_ADVENTURE_QUERYLIST = 16,
  PETPARAM_ADVENTURE_RESULTNTF = 17,
  PETPARAM_ADVENTURE_START = 18,
  PETPARAM_ADVENTURE_GETREWARD = 19,
  PETPARAM_ADVENTURE_QUERYBATTLEPET = 20,
  PETPARAM_INVITE_HAND = 21,
  PETPARAM_GIVE_GIFT = 22,
  PETPARAM_UNLOCK_NTF = 23,
  PETPARAM_RESET_SKILL = 24,
  PETPARAM_QUERY_GOTITEM = 25,
  PETPARAM_CHANGE_NAME = 26,
  PETPARAM_SWITCH_SKILL = 27,
  PETPARAM_WORK_UNLOCKMANUAL = 28,
  PETPARAM_WORK_STARTWORK = 29,
  PETPARAM_WORK_STOPWORK = 30,
  PETPARAM_WORK_QUERYWORKMANUAL = 31,
  PETPARAM_WORK_QUERYWORKDATA = 32,
  PETPARAM_WORK_GETREWARD = 33,
  PETPARAM_WORK_SPACEUPDATE = 34,
  PETPARAM_WORK_EXTRAUPDATE = 35,
  PETPARAM_COMPOSE = 36,
  PETPARAM_EQUIP_LIST = 37,
  PETPARAM_EQUIP_LIST_UPDATE = 38,
  PETPARAM_CHANGE_WEAR = 39,
  PETPARAM_UPDATE_WEAR = 40
};
bool PetParam_IsValid(int value);
const PetParam PetParam_MIN = PETPARAM_PETLIST;
const PetParam PetParam_MAX = PETPARAM_UPDATE_WEAR;
const int PetParam_ARRAYSIZE = PetParam_MAX + 1;

const ::google::protobuf::EnumDescriptor* PetParam_descriptor();
inline const ::std::string& PetParam_Name(PetParam value) {
  return ::google::protobuf::internal::NameOfEnum(
    PetParam_descriptor(), value);
}
inline bool PetParam_Parse(
    const ::std::string& name, PetParam* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PetParam>(
    PetParam_descriptor(), name, value);
}
enum EEmployType {
  EEMPLOYTYPE_MIN = 0,
  EEMPLOYTYPE_DAY = 1,
  EEMPLOYTYPE_WEEK = 2,
  EEMPLOYTYPE_MAX = 3
};
bool EEmployType_IsValid(int value);
const EEmployType EEmployType_MIN = EEMPLOYTYPE_MIN;
const EEmployType EEmployType_MAX = EEMPLOYTYPE_MAX;
const int EEmployType_ARRAYSIZE = EEmployType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EEmployType_descriptor();
inline const ::std::string& EEmployType_Name(EEmployType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EEmployType_descriptor(), value);
}
inline bool EEmployType_Parse(
    const ::std::string& name, EEmployType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EEmployType>(
    EEmployType_descriptor(), name, value);
}
enum EPetDataType {
  EPETDATA_MIN = 0,
  EPETDATA_LV = 1,
  EPETDATA_EXP = 2,
  EPETDATA_FRIENDLV = 3,
  EPETDATA_FRIENDEXP = 4,
  EPETDATA_REWARDEXP = 5,
  EPETDATA_RELIVETIME = 6,
  EPETDATA_TIME_HAPPLY = 7,
  EPETDATA_TIME_EXCITE = 8,
  EPETDATA_TIME_HAPPINESS = 9,
  EPETDATA_TOUCH_TICK = 10,
  EPETDATA_TOUCH_COUNT = 13,
  EPETDATA_FEED_TICK = 11,
  EPETDATA_FEED_COUNT = 12,
  EPETDATA_REWARD_COUNT = 17,
  EPETDATA_BODY = 18,
  EPETDATA_SKILL = 19,
  EPETDATA_NAME = 20,
  EPETDATA_SKILLSWITCH = 21,
  EPETDATA_MAX = 22
};
bool EPetDataType_IsValid(int value);
const EPetDataType EPetDataType_MIN = EPETDATA_MIN;
const EPetDataType EPetDataType_MAX = EPETDATA_MAX;
const int EPetDataType_ARRAYSIZE = EPetDataType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EPetDataType_descriptor();
inline const ::std::string& EPetDataType_Name(EPetDataType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EPetDataType_descriptor(), value);
}
inline bool EPetDataType_Parse(
    const ::std::string& name, EPetDataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EPetDataType>(
    EPetDataType_descriptor(), name, value);
}
enum EPetEquipOper {
  EPETEQUIPOPER_MIN = 0,
  EPETEQUIPOPER_ON = 1,
  EPETEQUIPOPER_OFF = 2,
  EPETEQUIPOPER_BODY = 3,
  EPETEQUIPOPER_DELETE = 4,
  EPETEQUIPOPER_MAX = 5
};
bool EPetEquipOper_IsValid(int value);
const EPetEquipOper EPetEquipOper_MIN = EPETEQUIPOPER_MIN;
const EPetEquipOper EPetEquipOper_MAX = EPETEQUIPOPER_MAX;
const int EPetEquipOper_ARRAYSIZE = EPetEquipOper_MAX + 1;

const ::google::protobuf::EnumDescriptor* EPetEquipOper_descriptor();
inline const ::std::string& EPetEquipOper_Name(EPetEquipOper value) {
  return ::google::protobuf::internal::NameOfEnum(
    EPetEquipOper_descriptor(), value);
}
inline bool EPetEquipOper_Parse(
    const ::std::string& name, EPetEquipOper* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EPetEquipOper>(
    EPetEquipOper_descriptor(), name, value);
}
enum EPetAdventureStatus {
  EPETADVENTURESTATUS_MIN = 0,
  EPETADVENTURESTATUS_CANACCEPT = 1,
  EPETADVENTURESTATUS_ACCEPT = 2,
  EPETADVENTURESTATUS_COMPLETE = 3,
  EPETADVENTURESTATUS_SUBMIT = 4,
  EPETADVENTURESTATUS_MAX = 5
};
bool EPetAdventureStatus_IsValid(int value);
const EPetAdventureStatus EPetAdventureStatus_MIN = EPETADVENTURESTATUS_MIN;
const EPetAdventureStatus EPetAdventureStatus_MAX = EPETADVENTURESTATUS_MAX;
const int EPetAdventureStatus_ARRAYSIZE = EPetAdventureStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* EPetAdventureStatus_descriptor();
inline const ::std::string& EPetAdventureStatus_Name(EPetAdventureStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    EPetAdventureStatus_descriptor(), value);
}
inline bool EPetAdventureStatus_Parse(
    const ::std::string& name, EPetAdventureStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EPetAdventureStatus>(
    EPetAdventureStatus_descriptor(), name, value);
}
enum EPetEfficiencyType {
  EPETEFFICIENCY_MIN = 0,
  EPETEFFICIENCY_REFINE = 1,
  EPETEFFICIENCY_ENCHANT = 2,
  EPETEFFICIENCY_STAR = 3,
  EPETEFFICIENCY_TITLE = 4,
  EPETEFFICIENCY_HEADWEAR = 5,
  EPETEFFICIENCY_CARD = 6,
  EPETEFFICIENCY_MAX = 7
};
bool EPetEfficiencyType_IsValid(int value);
const EPetEfficiencyType EPetEfficiencyType_MIN = EPETEFFICIENCY_MIN;
const EPetEfficiencyType EPetEfficiencyType_MAX = EPETEFFICIENCY_MAX;
const int EPetEfficiencyType_ARRAYSIZE = EPetEfficiencyType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EPetEfficiencyType_descriptor();
inline const ::std::string& EPetEfficiencyType_Name(EPetEfficiencyType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EPetEfficiencyType_descriptor(), value);
}
inline bool EPetEfficiencyType_Parse(
    const ::std::string& name, EPetEfficiencyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EPetEfficiencyType>(
    EPetEfficiencyType_descriptor(), name, value);
}
enum EWorkState {
  EWORKSTATE_MIN = 0,
  EWORKSTATE_UNUSED = 1,
  EWORKSTATE_WORKING = 2,
  EWORKSTATE_REST = 3,
  EWORKSTATE_MAX = 4
};
bool EWorkState_IsValid(int value);
const EWorkState EWorkState_MIN = EWORKSTATE_MIN;
const EWorkState EWorkState_MAX = EWORKSTATE_MAX;
const int EWorkState_ARRAYSIZE = EWorkState_MAX + 1;

const ::google::protobuf::EnumDescriptor* EWorkState_descriptor();
inline const ::std::string& EWorkState_Name(EWorkState value) {
  return ::google::protobuf::internal::NameOfEnum(
    EWorkState_descriptor(), value);
}
inline bool EWorkState_Parse(
    const ::std::string& name, EWorkState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EWorkState>(
    EWorkState_descriptor(), name, value);
}
// ===================================================================

class PetData : public ::google::protobuf::Message {
 public:
  PetData();
  virtual ~PetData();

  PetData(const PetData& from);

  inline PetData& operator=(const PetData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetData& default_instance();

  void Swap(PetData* other);

  // implements Message ----------------------------------------------

  PetData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetData& from);
  void MergeFrom(const PetData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.PetData)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static PetData* default_instance_;
};
// -------------------------------------------------------------------

class PetList : public ::google::protobuf::Message {
 public:
  PetList();
  virtual ~PetList();

  PetList(const PetList& from);

  inline PetList& operator=(const PetList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetList& default_instance();

  void Swap(PetList* other);

  // implements Message ----------------------------------------------

  PetList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetList& from);
  void MergeFrom(const PetList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional uint32 param = 2 [default = 1];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::google::protobuf::uint32 param() const;
  inline void set_param(::google::protobuf::uint32 value);

  // repeated .Cmd.PetData datas = 3;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 3;
  inline const ::Cmd::PetData& datas(int index) const;
  inline ::Cmd::PetData* mutable_datas(int index);
  inline ::Cmd::PetData* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::PetData >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::PetData >*
      mutable_datas();

  // @@protoc_insertion_point(class_scope:Cmd.PetList)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  ::google::protobuf::uint32 param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::PetData > datas_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static PetList* default_instance_;
};
// -------------------------------------------------------------------

class WeaponPetData : public ::google::protobuf::Message {
 public:
  WeaponPetData();
  virtual ~WeaponPetData();

  WeaponPetData(const WeaponPetData& from);

  inline WeaponPetData& operator=(const WeaponPetData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeaponPetData& default_instance();

  void Swap(WeaponPetData* other);

  // implements Message ----------------------------------------------

  WeaponPetData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WeaponPetData& from);
  void MergeFrom(const WeaponPetData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 hp = 2 [default = 0];
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 2;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);

  // optional uint32 relivetime = 3 [default = 0];
  inline bool has_relivetime() const;
  inline void clear_relivetime();
  static const int kRelivetimeFieldNumber = 3;
  inline ::google::protobuf::uint32 relivetime() const;
  inline void set_relivetime(::google::protobuf::uint32 value);

  // optional uint32 expiretime = 4 [default = 0];
  inline bool has_expiretime() const;
  inline void clear_expiretime();
  static const int kExpiretimeFieldNumber = 4;
  inline ::google::protobuf::uint32 expiretime() const;
  inline void set_expiretime(::google::protobuf::uint32 value);

  // optional bool blive = 5 [default = false];
  inline bool has_blive() const;
  inline void clear_blive();
  static const int kBliveFieldNumber = 5;
  inline bool blive() const;
  inline void set_blive(bool value);

  // optional bool bactive = 6 [default = false];
  inline bool has_bactive() const;
  inline void clear_bactive();
  static const int kBactiveFieldNumber = 6;
  inline bool bactive() const;
  inline void set_bactive(bool value);

  // optional bool handstatus = 7 [default = false];
  inline bool has_handstatus() const;
  inline void clear_handstatus();
  static const int kHandstatusFieldNumber = 7;
  inline bool handstatus() const;
  inline void set_handstatus(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.WeaponPetData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_relivetime();
  inline void clear_has_relivetime();
  inline void set_has_expiretime();
  inline void clear_has_expiretime();
  inline void set_has_blive();
  inline void clear_has_blive();
  inline void set_has_bactive();
  inline void clear_has_bactive();
  inline void set_has_handstatus();
  inline void clear_has_handstatus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 relivetime_;
  ::google::protobuf::uint32 expiretime_;
  bool blive_;
  bool bactive_;
  bool handstatus_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static WeaponPetData* default_instance_;
};
// -------------------------------------------------------------------

class FireCatPetCmd : public ::google::protobuf::Message {
 public:
  FireCatPetCmd();
  virtual ~FireCatPetCmd();

  FireCatPetCmd(const FireCatPetCmd& from);

  inline FireCatPetCmd& operator=(const FireCatPetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FireCatPetCmd& default_instance();

  void Swap(FireCatPetCmd* other);

  // implements Message ----------------------------------------------

  FireCatPetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FireCatPetCmd& from);
  void MergeFrom(const FireCatPetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_FIRE_CAT];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // optional uint32 catid = 3 [default = 0];
  inline bool has_catid() const;
  inline void clear_catid();
  static const int kCatidFieldNumber = 3;
  inline ::google::protobuf::uint32 catid() const;
  inline void set_catid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.FireCatPetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_catid();
  inline void clear_has_catid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 catid_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static FireCatPetCmd* default_instance_;
};
// -------------------------------------------------------------------

class HireCatPetCmd : public ::google::protobuf::Message {
 public:
  HireCatPetCmd();
  virtual ~HireCatPetCmd();

  HireCatPetCmd(const HireCatPetCmd& from);

  inline HireCatPetCmd& operator=(const HireCatPetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HireCatPetCmd& default_instance();

  void Swap(HireCatPetCmd* other);

  // implements Message ----------------------------------------------

  HireCatPetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HireCatPetCmd& from);
  void MergeFrom(const HireCatPetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_HIRE_CAT];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // optional uint32 catid = 3 [default = 0];
  inline bool has_catid() const;
  inline void clear_catid();
  static const int kCatidFieldNumber = 3;
  inline ::google::protobuf::uint32 catid() const;
  inline void set_catid(::google::protobuf::uint32 value);

  // optional .Cmd.EEmployType etype = 4 [default = EEMPLOYTYPE_DAY];
  inline bool has_etype() const;
  inline void clear_etype();
  static const int kEtypeFieldNumber = 4;
  inline ::Cmd::EEmployType etype() const;
  inline void set_etype(::Cmd::EEmployType value);

  // @@protoc_insertion_point(class_scope:Cmd.HireCatPetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_catid();
  inline void clear_has_catid();
  inline void set_has_etype();
  inline void clear_has_etype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 catid_;
  int etype_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static HireCatPetCmd* default_instance_;
};
// -------------------------------------------------------------------

class EggHatchPetCmd : public ::google::protobuf::Message {
 public:
  EggHatchPetCmd();
  virtual ~EggHatchPetCmd();

  EggHatchPetCmd(const EggHatchPetCmd& from);

  inline EggHatchPetCmd& operator=(const EggHatchPetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EggHatchPetCmd& default_instance();

  void Swap(EggHatchPetCmd* other);

  // implements Message ----------------------------------------------

  EggHatchPetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EggHatchPetCmd& from);
  void MergeFrom(const EggHatchPetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_HATCH_EGG];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string guid = 4;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 4;
  inline const ::std::string& guid() const;
  inline void set_guid(const ::std::string& value);
  inline void set_guid(const char* value);
  inline void set_guid(const char* value, size_t size);
  inline ::std::string* mutable_guid();
  inline ::std::string* release_guid();
  inline void set_allocated_guid(::std::string* guid);

  // @@protoc_insertion_point(class_scope:Cmd.EggHatchPetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_guid();
  inline void clear_has_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::std::string* name_;
  ::std::string* guid_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static EggHatchPetCmd* default_instance_;
};
// -------------------------------------------------------------------

class EggRestorePetCmd : public ::google::protobuf::Message {
 public:
  EggRestorePetCmd();
  virtual ~EggRestorePetCmd();

  EggRestorePetCmd(const EggRestorePetCmd& from);

  inline EggRestorePetCmd& operator=(const EggRestorePetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EggRestorePetCmd& default_instance();

  void Swap(EggRestorePetCmd* other);

  // implements Message ----------------------------------------------

  EggRestorePetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EggRestorePetCmd& from);
  void MergeFrom(const EggRestorePetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_RESTORE_EGG];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // optional uint32 petid = 3 [default = 0];
  inline bool has_petid() const;
  inline void clear_petid();
  static const int kPetidFieldNumber = 3;
  inline ::google::protobuf::uint32 petid() const;
  inline void set_petid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.EggRestorePetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_petid();
  inline void clear_has_petid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 petid_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static EggRestorePetCmd* default_instance_;
};
// -------------------------------------------------------------------

class CatchValuePetCmd : public ::google::protobuf::Message {
 public:
  CatchValuePetCmd();
  virtual ~CatchValuePetCmd();

  CatchValuePetCmd(const CatchValuePetCmd& from);

  inline CatchValuePetCmd& operator=(const CatchValuePetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CatchValuePetCmd& default_instance();

  void Swap(CatchValuePetCmd* other);

  // implements Message ----------------------------------------------

  CatchValuePetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CatchValuePetCmd& from);
  void MergeFrom(const CatchValuePetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_CATCH_VALUE_SYNC];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // required uint64 npcguid = 3;
  inline bool has_npcguid() const;
  inline void clear_npcguid();
  static const int kNpcguidFieldNumber = 3;
  inline ::google::protobuf::uint64 npcguid() const;
  inline void set_npcguid(::google::protobuf::uint64 value);

  // optional uint32 value = 4 [default = 0];
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 4;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // optional uint32 from_npcid = 5 [default = 0];
  inline bool has_from_npcid() const;
  inline void clear_from_npcid();
  static const int kFromNpcidFieldNumber = 5;
  inline ::google::protobuf::uint32 from_npcid() const;
  inline void set_from_npcid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.CatchValuePetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_npcguid();
  inline void clear_has_npcguid();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_from_npcid();
  inline void clear_has_from_npcid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 npcguid_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 from_npcid_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static CatchValuePetCmd* default_instance_;
};
// -------------------------------------------------------------------

class CatchResultPetCmd : public ::google::protobuf::Message {
 public:
  CatchResultPetCmd();
  virtual ~CatchResultPetCmd();

  CatchResultPetCmd(const CatchResultPetCmd& from);

  inline CatchResultPetCmd& operator=(const CatchResultPetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CatchResultPetCmd& default_instance();

  void Swap(CatchResultPetCmd* other);

  // implements Message ----------------------------------------------

  CatchResultPetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CatchResultPetCmd& from);
  void MergeFrom(const CatchResultPetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_CATCH_RESULT];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // optional bool success = 3 [default = false];
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 3;
  inline bool success() const;
  inline void set_success(bool value);

  // optional uint64 npcguid = 4 [default = 0];
  inline bool has_npcguid() const;
  inline void clear_npcguid();
  static const int kNpcguidFieldNumber = 4;
  inline ::google::protobuf::uint64 npcguid() const;
  inline void set_npcguid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.CatchResultPetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_success();
  inline void clear_has_success();
  inline void set_has_npcguid();
  inline void clear_has_npcguid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 npcguid_;
  bool success_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static CatchResultPetCmd* default_instance_;
};
// -------------------------------------------------------------------

class UserPetData : public ::google::protobuf::Message {
 public:
  UserPetData();
  virtual ~UserPetData();

  UserPetData(const UserPetData& from);

  inline UserPetData& operator=(const UserPetData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserPetData& default_instance();

  void Swap(UserPetData* other);

  // implements Message ----------------------------------------------

  UserPetData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserPetData& from);
  void MergeFrom(const UserPetData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.EggData basedata = 1;
  inline bool has_basedata() const;
  inline void clear_basedata();
  static const int kBasedataFieldNumber = 1;
  inline const ::Cmd::EggData& basedata() const;
  inline ::Cmd::EggData* mutable_basedata();
  inline ::Cmd::EggData* release_basedata();
  inline void set_allocated_basedata(::Cmd::EggData* basedata);

  // optional bool inhand = 2 [default = false];
  inline bool has_inhand() const;
  inline void clear_inhand();
  static const int kInhandFieldNumber = 2;
  inline bool inhand() const;
  inline void set_inhand(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.UserPetData)
 private:
  inline void set_has_basedata();
  inline void clear_has_basedata();
  inline void set_has_inhand();
  inline void clear_has_inhand();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Cmd::EggData* basedata_;
  bool inhand_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static UserPetData* default_instance_;
};
// -------------------------------------------------------------------

class CatchPetPetCmd : public ::google::protobuf::Message {
 public:
  CatchPetPetCmd();
  virtual ~CatchPetPetCmd();

  CatchPetPetCmd(const CatchPetPetCmd& from);

  inline CatchPetPetCmd& operator=(const CatchPetPetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CatchPetPetCmd& default_instance();

  void Swap(CatchPetPetCmd* other);

  // implements Message ----------------------------------------------

  CatchPetPetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CatchPetPetCmd& from);
  void MergeFrom(const CatchPetPetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_CATCH_PET];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // optional uint64 npcguid = 3 [default = 0];
  inline bool has_npcguid() const;
  inline void clear_npcguid();
  static const int kNpcguidFieldNumber = 3;
  inline ::google::protobuf::uint64 npcguid() const;
  inline void set_npcguid(::google::protobuf::uint64 value);

  // optional bool isstop = 4 [default = false];
  inline bool has_isstop() const;
  inline void clear_isstop();
  static const int kIsstopFieldNumber = 4;
  inline bool isstop() const;
  inline void set_isstop(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.CatchPetPetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_npcguid();
  inline void clear_has_npcguid();
  inline void set_has_isstop();
  inline void clear_has_isstop();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 npcguid_;
  bool isstop_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static CatchPetPetCmd* default_instance_;
};
// -------------------------------------------------------------------

class CatchPetGiftPetCmd : public ::google::protobuf::Message {
 public:
  CatchPetGiftPetCmd();
  virtual ~CatchPetGiftPetCmd();

  CatchPetGiftPetCmd(const CatchPetGiftPetCmd& from);

  inline CatchPetGiftPetCmd& operator=(const CatchPetGiftPetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CatchPetGiftPetCmd& default_instance();

  void Swap(CatchPetGiftPetCmd* other);

  // implements Message ----------------------------------------------

  CatchPetGiftPetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CatchPetGiftPetCmd& from);
  void MergeFrom(const CatchPetGiftPetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_CATCH_GIFT];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // optional uint64 npcguid = 3 [default = 0];
  inline bool has_npcguid() const;
  inline void clear_npcguid();
  static const int kNpcguidFieldNumber = 3;
  inline ::google::protobuf::uint64 npcguid() const;
  inline void set_npcguid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.CatchPetGiftPetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_npcguid();
  inline void clear_has_npcguid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 npcguid_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static CatchPetGiftPetCmd* default_instance_;
};
// -------------------------------------------------------------------

class PetMemberData : public ::google::protobuf::Message {
 public:
  PetMemberData();
  virtual ~PetMemberData();

  PetMemberData(const PetMemberData& from);

  inline PetMemberData& operator=(const PetMemberData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetMemberData& default_instance();

  void Swap(PetMemberData* other);

  // implements Message ----------------------------------------------

  PetMemberData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetMemberData& from);
  void MergeFrom(const PetMemberData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.EPetDataType etype = 1 [default = EPETDATA_MIN];
  inline bool has_etype() const;
  inline void clear_etype();
  static const int kEtypeFieldNumber = 1;
  inline ::Cmd::EPetDataType etype() const;
  inline void set_etype(::Cmd::EPetDataType value);

  // optional uint64 value = 2 [default = 0];
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);

  // repeated uint32 values = 3;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 3;
  inline ::google::protobuf::uint32 values(int index) const;
  inline void set_values(int index, ::google::protobuf::uint32 value);
  inline void add_values(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      values() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_values();

  // optional string data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const char* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Cmd.PetMemberData)
 private:
  inline void set_has_etype();
  inline void clear_has_etype();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 value_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > values_;
  ::std::string* data_;
  int etype_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static PetMemberData* default_instance_;
};
// -------------------------------------------------------------------

class PetInfo : public ::google::protobuf::Message {
 public:
  PetInfo();
  virtual ~PetInfo();

  PetInfo(const PetInfo& from);

  inline PetInfo& operator=(const PetInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetInfo& default_instance();

  void Swap(PetInfo* other);

  // implements Message ----------------------------------------------

  PetInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetInfo& from);
  void MergeFrom(const PetInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 guid = 1 [default = 0];
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional uint64 exp = 2 [default = 0];
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);

  // optional uint64 friendexp = 3 [default = 0];
  inline bool has_friendexp() const;
  inline void clear_friendexp();
  static const int kFriendexpFieldNumber = 3;
  inline ::google::protobuf::uint64 friendexp() const;
  inline void set_friendexp(::google::protobuf::uint64 value);

  // optional uint64 rewardexp = 4 [default = 0];
  inline bool has_rewardexp() const;
  inline void clear_rewardexp();
  static const int kRewardexpFieldNumber = 4;
  inline ::google::protobuf::uint64 rewardexp() const;
  inline void set_rewardexp(::google::protobuf::uint64 value);

  // required uint32 petid = 5;
  inline bool has_petid() const;
  inline void clear_petid();
  static const int kPetidFieldNumber = 5;
  inline ::google::protobuf::uint32 petid() const;
  inline void set_petid(::google::protobuf::uint32 value);

  // required string name = 6;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 6;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 lv = 7 [default = 0];
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 7;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);

  // optional uint32 friendlv = 8 [default = 0];
  inline bool has_friendlv() const;
  inline void clear_friendlv();
  static const int kFriendlvFieldNumber = 8;
  inline ::google::protobuf::uint32 friendlv() const;
  inline void set_friendlv(::google::protobuf::uint32 value);

  // optional uint32 relivetime = 9 [default = 0];
  inline bool has_relivetime() const;
  inline void clear_relivetime();
  static const int kRelivetimeFieldNumber = 9;
  inline ::google::protobuf::uint32 relivetime() const;
  inline void set_relivetime(::google::protobuf::uint32 value);

  // optional uint32 body = 10 [default = 0];
  inline bool has_body() const;
  inline void clear_body();
  static const int kBodyFieldNumber = 10;
  inline ::google::protobuf::uint32 body() const;
  inline void set_body(::google::protobuf::uint32 value);

  // optional uint32 time_happly = 11 [default = 0];
  inline bool has_time_happly() const;
  inline void clear_time_happly();
  static const int kTimeHapplyFieldNumber = 11;
  inline ::google::protobuf::uint32 time_happly() const;
  inline void set_time_happly(::google::protobuf::uint32 value);

  // optional uint32 time_excite = 12 [default = 0];
  inline bool has_time_excite() const;
  inline void clear_time_excite();
  static const int kTimeExciteFieldNumber = 12;
  inline ::google::protobuf::uint32 time_excite() const;
  inline void set_time_excite(::google::protobuf::uint32 value);

  // optional uint32 time_happiness = 13 [default = 0];
  inline bool has_time_happiness() const;
  inline void clear_time_happiness();
  static const int kTimeHappinessFieldNumber = 13;
  inline ::google::protobuf::uint32 time_happiness() const;
  inline void set_time_happiness(::google::protobuf::uint32 value);

  // repeated uint32 unlock_equip = 14;
  inline int unlock_equip_size() const;
  inline void clear_unlock_equip();
  static const int kUnlockEquipFieldNumber = 14;
  inline ::google::protobuf::uint32 unlock_equip(int index) const;
  inline void set_unlock_equip(int index, ::google::protobuf::uint32 value);
  inline void add_unlock_equip(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unlock_equip() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unlock_equip();

  // repeated uint32 unlock_body = 15;
  inline int unlock_body_size() const;
  inline void clear_unlock_body();
  static const int kUnlockBodyFieldNumber = 15;
  inline ::google::protobuf::uint32 unlock_body(int index) const;
  inline void set_unlock_body(int index, ::google::protobuf::uint32 value);
  inline void add_unlock_body(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unlock_body() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unlock_body();

  // repeated uint32 skills = 16;
  inline int skills_size() const;
  inline void clear_skills();
  static const int kSkillsFieldNumber = 16;
  inline ::google::protobuf::uint32 skills(int index) const;
  inline void set_skills(int index, ::google::protobuf::uint32 value);
  inline void add_skills(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skills() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skills();

  // repeated .Cmd.ItemData equips = 17;
  inline int equips_size() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 17;
  inline const ::Cmd::ItemData& equips(int index) const;
  inline ::Cmd::ItemData* mutable_equips(int index);
  inline ::Cmd::ItemData* add_equips();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
      equips() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
      mutable_equips();

  // optional bool skilloff = 18 [default = false];
  inline bool has_skilloff() const;
  inline void clear_skilloff();
  static const int kSkilloffFieldNumber = 18;
  inline bool skilloff() const;
  inline void set_skilloff(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.PetInfo)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_friendexp();
  inline void clear_has_friendexp();
  inline void set_has_rewardexp();
  inline void clear_has_rewardexp();
  inline void set_has_petid();
  inline void clear_has_petid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_friendlv();
  inline void clear_has_friendlv();
  inline void set_has_relivetime();
  inline void clear_has_relivetime();
  inline void set_has_body();
  inline void clear_has_body();
  inline void set_has_time_happly();
  inline void clear_has_time_happly();
  inline void set_has_time_excite();
  inline void clear_has_time_excite();
  inline void set_has_time_happiness();
  inline void clear_has_time_happiness();
  inline void set_has_skilloff();
  inline void clear_has_skilloff();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint64 exp_;
  ::google::protobuf::uint64 friendexp_;
  ::google::protobuf::uint64 rewardexp_;
  ::std::string* name_;
  ::google::protobuf::uint32 petid_;
  ::google::protobuf::uint32 lv_;
  ::google::protobuf::uint32 friendlv_;
  ::google::protobuf::uint32 relivetime_;
  ::google::protobuf::uint32 body_;
  ::google::protobuf::uint32 time_happly_;
  ::google::protobuf::uint32 time_excite_;
  ::google::protobuf::uint32 time_happiness_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unlock_equip_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unlock_body_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skills_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData > equips_;
  bool skilloff_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static PetInfo* default_instance_;
};
// -------------------------------------------------------------------

class PetInfoPetCmd : public ::google::protobuf::Message {
 public:
  PetInfoPetCmd();
  virtual ~PetInfoPetCmd();

  PetInfoPetCmd(const PetInfoPetCmd& from);

  inline PetInfoPetCmd& operator=(const PetInfoPetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetInfoPetCmd& default_instance();

  void Swap(PetInfoPetCmd* other);

  // implements Message ----------------------------------------------

  PetInfoPetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetInfoPetCmd& from);
  void MergeFrom(const PetInfoPetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_PETINFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // repeated .Cmd.PetInfo petinfo = 3;
  inline int petinfo_size() const;
  inline void clear_petinfo();
  static const int kPetinfoFieldNumber = 3;
  inline const ::Cmd::PetInfo& petinfo(int index) const;
  inline ::Cmd::PetInfo* mutable_petinfo(int index);
  inline ::Cmd::PetInfo* add_petinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::PetInfo >&
      petinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::PetInfo >*
      mutable_petinfo();

  // @@protoc_insertion_point(class_scope:Cmd.PetInfoPetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::PetInfo > petinfo_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static PetInfoPetCmd* default_instance_;
};
// -------------------------------------------------------------------

class PetInfoUpdatePetCmd : public ::google::protobuf::Message {
 public:
  PetInfoUpdatePetCmd();
  virtual ~PetInfoUpdatePetCmd();

  PetInfoUpdatePetCmd(const PetInfoUpdatePetCmd& from);

  inline PetInfoUpdatePetCmd& operator=(const PetInfoUpdatePetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetInfoUpdatePetCmd& default_instance();

  void Swap(PetInfoUpdatePetCmd* other);

  // implements Message ----------------------------------------------

  PetInfoUpdatePetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetInfoUpdatePetCmd& from);
  void MergeFrom(const PetInfoUpdatePetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_PETINFO_UPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // required uint32 petid = 3;
  inline bool has_petid() const;
  inline void clear_petid();
  static const int kPetidFieldNumber = 3;
  inline ::google::protobuf::uint32 petid() const;
  inline void set_petid(::google::protobuf::uint32 value);

  // repeated .Cmd.PetMemberData datas = 4;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 4;
  inline const ::Cmd::PetMemberData& datas(int index) const;
  inline ::Cmd::PetMemberData* mutable_datas(int index);
  inline ::Cmd::PetMemberData* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::PetMemberData >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::PetMemberData >*
      mutable_datas();

  // @@protoc_insertion_point(class_scope:Cmd.PetInfoUpdatePetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_petid();
  inline void clear_has_petid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::PetMemberData > datas_;
  ::google::protobuf::uint32 petid_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static PetInfoUpdatePetCmd* default_instance_;
};
// -------------------------------------------------------------------

class PetOffPetCmd : public ::google::protobuf::Message {
 public:
  PetOffPetCmd();
  virtual ~PetOffPetCmd();

  PetOffPetCmd(const PetOffPetCmd& from);

  inline PetOffPetCmd& operator=(const PetOffPetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetOffPetCmd& default_instance();

  void Swap(PetOffPetCmd* other);

  // implements Message ----------------------------------------------

  PetOffPetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetOffPetCmd& from);
  void MergeFrom(const PetOffPetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_OFF_PET];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // required uint32 petid = 3;
  inline bool has_petid() const;
  inline void clear_petid();
  static const int kPetidFieldNumber = 3;
  inline ::google::protobuf::uint32 petid() const;
  inline void set_petid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.PetOffPetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_petid();
  inline void clear_has_petid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 petid_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static PetOffPetCmd* default_instance_;
};
// -------------------------------------------------------------------

class GetGiftPetCmd : public ::google::protobuf::Message {
 public:
  GetGiftPetCmd();
  virtual ~GetGiftPetCmd();

  GetGiftPetCmd(const GetGiftPetCmd& from);

  inline GetGiftPetCmd& operator=(const GetGiftPetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGiftPetCmd& default_instance();

  void Swap(GetGiftPetCmd* other);

  // implements Message ----------------------------------------------

  GetGiftPetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGiftPetCmd& from);
  void MergeFrom(const GetGiftPetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_GET_GIFT];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // optional uint32 petid = 3 [default = 0];
  inline bool has_petid() const;
  inline void clear_petid();
  static const int kPetidFieldNumber = 3;
  inline ::google::protobuf::uint32 petid() const;
  inline void set_petid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GetGiftPetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_petid();
  inline void clear_has_petid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 petid_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static GetGiftPetCmd* default_instance_;
};
// -------------------------------------------------------------------

class EquipOperPetCmd : public ::google::protobuf::Message {
 public:
  EquipOperPetCmd();
  virtual ~EquipOperPetCmd();

  EquipOperPetCmd(const EquipOperPetCmd& from);

  inline EquipOperPetCmd& operator=(const EquipOperPetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipOperPetCmd& default_instance();

  void Swap(EquipOperPetCmd* other);

  // implements Message ----------------------------------------------

  EquipOperPetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipOperPetCmd& from);
  void MergeFrom(const EquipOperPetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_EQUIP_OPER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // optional .Cmd.EPetEquipOper oper = 3 [default = EPETEQUIPOPER_MIN];
  inline bool has_oper() const;
  inline void clear_oper();
  static const int kOperFieldNumber = 3;
  inline ::Cmd::EPetEquipOper oper() const;
  inline void set_oper(::Cmd::EPetEquipOper value);

  // optional uint32 petid = 4 [default = 0];
  inline bool has_petid() const;
  inline void clear_petid();
  static const int kPetidFieldNumber = 4;
  inline ::google::protobuf::uint32 petid() const;
  inline void set_petid(::google::protobuf::uint32 value);

  // optional string guid = 5;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 5;
  inline const ::std::string& guid() const;
  inline void set_guid(const ::std::string& value);
  inline void set_guid(const char* value);
  inline void set_guid(const char* value, size_t size);
  inline ::std::string* mutable_guid();
  inline ::std::string* release_guid();
  inline void set_allocated_guid(::std::string* guid);

  // @@protoc_insertion_point(class_scope:Cmd.EquipOperPetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_oper();
  inline void clear_has_oper();
  inline void set_has_petid();
  inline void clear_has_petid();
  inline void set_has_guid();
  inline void clear_has_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  int oper_;
  ::google::protobuf::uint32 petid_;
  ::std::string* guid_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static EquipOperPetCmd* default_instance_;
};
// -------------------------------------------------------------------

class EquipUpdatePetCmd : public ::google::protobuf::Message {
 public:
  EquipUpdatePetCmd();
  virtual ~EquipUpdatePetCmd();

  EquipUpdatePetCmd(const EquipUpdatePetCmd& from);

  inline EquipUpdatePetCmd& operator=(const EquipUpdatePetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipUpdatePetCmd& default_instance();

  void Swap(EquipUpdatePetCmd* other);

  // implements Message ----------------------------------------------

  EquipUpdatePetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipUpdatePetCmd& from);
  void MergeFrom(const EquipUpdatePetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_EQUIP_UPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // optional uint32 petid = 3 [default = 0];
  inline bool has_petid() const;
  inline void clear_petid();
  static const int kPetidFieldNumber = 3;
  inline ::google::protobuf::uint32 petid() const;
  inline void set_petid(::google::protobuf::uint32 value);

  // optional .Cmd.ItemData update = 4;
  inline bool has_update() const;
  inline void clear_update();
  static const int kUpdateFieldNumber = 4;
  inline const ::Cmd::ItemData& update() const;
  inline ::Cmd::ItemData* mutable_update();
  inline ::Cmd::ItemData* release_update();
  inline void set_allocated_update(::Cmd::ItemData* update);

  // optional string del = 5;
  inline bool has_del() const;
  inline void clear_del();
  static const int kDelFieldNumber = 5;
  inline const ::std::string& del() const;
  inline void set_del(const ::std::string& value);
  inline void set_del(const char* value);
  inline void set_del(const char* value, size_t size);
  inline ::std::string* mutable_del();
  inline ::std::string* release_del();
  inline void set_allocated_del(::std::string* del);

  // @@protoc_insertion_point(class_scope:Cmd.EquipUpdatePetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_petid();
  inline void clear_has_petid();
  inline void set_has_update();
  inline void clear_has_update();
  inline void set_has_del();
  inline void clear_has_del();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::ItemData* update_;
  ::std::string* del_;
  ::google::protobuf::uint32 petid_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static EquipUpdatePetCmd* default_instance_;
};
// -------------------------------------------------------------------

class PetAdventureStep : public ::google::protobuf::Message {
 public:
  PetAdventureStep();
  virtual ~PetAdventureStep();

  PetAdventureStep(const PetAdventureStep& from);

  inline PetAdventureStep& operator=(const PetAdventureStep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetAdventureStep& default_instance();

  void Swap(PetAdventureStep* other);

  // implements Message ----------------------------------------------

  PetAdventureStep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetAdventureStep& from);
  void MergeFrom(const PetAdventureStep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 step = 1 [default = 0];
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 1;
  inline ::google::protobuf::uint32 step() const;
  inline void set_step(::google::protobuf::uint32 value);

  // repeated .Cmd.ItemData items = 3;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 3;
  inline const ::Cmd::ItemData& items(int index) const;
  inline ::Cmd::ItemData* mutable_items(int index);
  inline ::Cmd::ItemData* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:Cmd.PetAdventureStep)
 private:
  inline void set_has_step();
  inline void clear_has_step();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData > items_;
  ::google::protobuf::uint32 step_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static PetAdventureStep* default_instance_;
};
// -------------------------------------------------------------------

class PetEfficiencyInfo : public ::google::protobuf::Message {
 public:
  PetEfficiencyInfo();
  virtual ~PetEfficiencyInfo();

  PetEfficiencyInfo(const PetEfficiencyInfo& from);

  inline PetEfficiencyInfo& operator=(const PetEfficiencyInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetEfficiencyInfo& default_instance();

  void Swap(PetEfficiencyInfo* other);

  // implements Message ----------------------------------------------

  PetEfficiencyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetEfficiencyInfo& from);
  void MergeFrom(const PetEfficiencyInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Cmd.EPetEfficiencyType etype = 1;
  inline bool has_etype() const;
  inline void clear_etype();
  static const int kEtypeFieldNumber = 1;
  inline ::Cmd::EPetEfficiencyType etype() const;
  inline void set_etype(::Cmd::EPetEfficiencyType value);

  // optional uint32 fvalue = 2;
  inline bool has_fvalue() const;
  inline void clear_fvalue();
  static const int kFvalueFieldNumber = 2;
  inline ::google::protobuf::uint32 fvalue() const;
  inline void set_fvalue(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.PetEfficiencyInfo)
 private:
  inline void set_has_etype();
  inline void clear_has_etype();
  inline void set_has_fvalue();
  inline void clear_has_fvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int etype_;
  ::google::protobuf::uint32 fvalue_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static PetEfficiencyInfo* default_instance_;
};
// -------------------------------------------------------------------

class PetMonsterRewardInfo : public ::google::protobuf::Message {
 public:
  PetMonsterRewardInfo();
  virtual ~PetMonsterRewardInfo();

  PetMonsterRewardInfo(const PetMonsterRewardInfo& from);

  inline PetMonsterRewardInfo& operator=(const PetMonsterRewardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetMonsterRewardInfo& default_instance();

  void Swap(PetMonsterRewardInfo* other);

  // implements Message ----------------------------------------------

  PetMonsterRewardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetMonsterRewardInfo& from);
  void MergeFrom(const PetMonsterRewardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 monsterid = 1 [default = 0];
  inline bool has_monsterid() const;
  inline void clear_monsterid();
  static const int kMonsteridFieldNumber = 1;
  inline ::google::protobuf::uint32 monsterid() const;
  inline void set_monsterid(::google::protobuf::uint32 value);

  // repeated .Cmd.ItemData items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::Cmd::ItemData& items(int index) const;
  inline ::Cmd::ItemData* mutable_items(int index);
  inline ::Cmd::ItemData* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:Cmd.PetMonsterRewardInfo)
 private:
  inline void set_has_monsterid();
  inline void clear_has_monsterid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData > items_;
  ::google::protobuf::uint32 monsterid_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static PetMonsterRewardInfo* default_instance_;
};
// -------------------------------------------------------------------

class PetAdventureItem : public ::google::protobuf::Message {
 public:
  PetAdventureItem();
  virtual ~PetAdventureItem();

  PetAdventureItem(const PetAdventureItem& from);

  inline PetAdventureItem& operator=(const PetAdventureItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetAdventureItem& default_instance();

  void Swap(PetAdventureItem* other);

  // implements Message ----------------------------------------------

  PetAdventureItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetAdventureItem& from);
  void MergeFrom(const PetAdventureItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 starttime = 2 [default = 0];
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 2;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // optional .Cmd.EPetAdventureStatus status = 3 [default = EPETADVENTURESTATUS_MIN];
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::Cmd::EPetAdventureStatus status() const;
  inline void set_status(::Cmd::EPetAdventureStatus value);

  // repeated .Cmd.ItemData eggs = 4;
  inline int eggs_size() const;
  inline void clear_eggs();
  static const int kEggsFieldNumber = 4;
  inline const ::Cmd::ItemData& eggs(int index) const;
  inline ::Cmd::ItemData* mutable_eggs(int index);
  inline ::Cmd::ItemData* add_eggs();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
      eggs() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
      mutable_eggs();

  // repeated .Cmd.PetAdventureStep steps = 5;
  inline int steps_size() const;
  inline void clear_steps();
  static const int kStepsFieldNumber = 5;
  inline const ::Cmd::PetAdventureStep& steps(int index) const;
  inline ::Cmd::PetAdventureStep* mutable_steps(int index);
  inline ::Cmd::PetAdventureStep* add_steps();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::PetAdventureStep >&
      steps() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::PetAdventureStep >*
      mutable_steps();

  // repeated .Cmd.ItemData raresreward = 6;
  inline int raresreward_size() const;
  inline void clear_raresreward();
  static const int kRaresrewardFieldNumber = 6;
  inline const ::Cmd::ItemData& raresreward(int index) const;
  inline ::Cmd::ItemData* mutable_raresreward(int index);
  inline ::Cmd::ItemData* add_raresreward();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
      raresreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
      mutable_raresreward();

  // optional uint32 specid = 7 [default = 0];
  inline bool has_specid() const;
  inline void clear_specid();
  static const int kSpecidFieldNumber = 7;
  inline ::google::protobuf::uint32 specid() const;
  inline void set_specid(::google::protobuf::uint32 value);

  // repeated .Cmd.PetEfficiencyInfo eff = 8;
  inline int eff_size() const;
  inline void clear_eff();
  static const int kEffFieldNumber = 8;
  inline const ::Cmd::PetEfficiencyInfo& eff(int index) const;
  inline ::Cmd::PetEfficiencyInfo* mutable_eff(int index);
  inline ::Cmd::PetEfficiencyInfo* add_eff();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::PetEfficiencyInfo >&
      eff() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::PetEfficiencyInfo >*
      mutable_eff();

  // repeated .Cmd.PetMonsterRewardInfo rewardinfo = 9;
  inline int rewardinfo_size() const;
  inline void clear_rewardinfo();
  static const int kRewardinfoFieldNumber = 9;
  inline const ::Cmd::PetMonsterRewardInfo& rewardinfo(int index) const;
  inline ::Cmd::PetMonsterRewardInfo* mutable_rewardinfo(int index);
  inline ::Cmd::PetMonsterRewardInfo* add_rewardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::PetMonsterRewardInfo >&
      rewardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::PetMonsterRewardInfo >*
      mutable_rewardinfo();

  // repeated .Cmd.ItemData extrarewardinfo = 10;
  inline int extrarewardinfo_size() const;
  inline void clear_extrarewardinfo();
  static const int kExtrarewardinfoFieldNumber = 10;
  inline const ::Cmd::ItemData& extrarewardinfo(int index) const;
  inline ::Cmd::ItemData* mutable_extrarewardinfo(int index);
  inline ::Cmd::ItemData* add_extrarewardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
      extrarewardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
      mutable_extrarewardinfo();

  // @@protoc_insertion_point(class_scope:Cmd.PetAdventureItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_specid();
  inline void clear_has_specid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 starttime_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData > eggs_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::PetAdventureStep > steps_;
  int status_;
  ::google::protobuf::uint32 specid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData > raresreward_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::PetEfficiencyInfo > eff_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::PetMonsterRewardInfo > rewardinfo_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData > extrarewardinfo_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static PetAdventureItem* default_instance_;
};
// -------------------------------------------------------------------

class QueryPetAdventureListPetCmd : public ::google::protobuf::Message {
 public:
  QueryPetAdventureListPetCmd();
  virtual ~QueryPetAdventureListPetCmd();

  QueryPetAdventureListPetCmd(const QueryPetAdventureListPetCmd& from);

  inline QueryPetAdventureListPetCmd& operator=(const QueryPetAdventureListPetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryPetAdventureListPetCmd& default_instance();

  void Swap(QueryPetAdventureListPetCmd* other);

  // implements Message ----------------------------------------------

  QueryPetAdventureListPetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryPetAdventureListPetCmd& from);
  void MergeFrom(const QueryPetAdventureListPetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_ADVENTURE_QUERYLIST];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // repeated .Cmd.PetAdventureItem items = 3;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 3;
  inline const ::Cmd::PetAdventureItem& items(int index) const;
  inline ::Cmd::PetAdventureItem* mutable_items(int index);
  inline ::Cmd::PetAdventureItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::PetAdventureItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::PetAdventureItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:Cmd.QueryPetAdventureListPetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::PetAdventureItem > items_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static QueryPetAdventureListPetCmd* default_instance_;
};
// -------------------------------------------------------------------

class PetAdventureResultNtfPetCmd : public ::google::protobuf::Message {
 public:
  PetAdventureResultNtfPetCmd();
  virtual ~PetAdventureResultNtfPetCmd();

  PetAdventureResultNtfPetCmd(const PetAdventureResultNtfPetCmd& from);

  inline PetAdventureResultNtfPetCmd& operator=(const PetAdventureResultNtfPetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetAdventureResultNtfPetCmd& default_instance();

  void Swap(PetAdventureResultNtfPetCmd* other);

  // implements Message ----------------------------------------------

  PetAdventureResultNtfPetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetAdventureResultNtfPetCmd& from);
  void MergeFrom(const PetAdventureResultNtfPetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_ADVENTURE_RESULTNTF];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // optional .Cmd.PetAdventureItem item = 3;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 3;
  inline const ::Cmd::PetAdventureItem& item() const;
  inline ::Cmd::PetAdventureItem* mutable_item();
  inline ::Cmd::PetAdventureItem* release_item();
  inline void set_allocated_item(::Cmd::PetAdventureItem* item);

  // @@protoc_insertion_point(class_scope:Cmd.PetAdventureResultNtfPetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_item();
  inline void clear_has_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::PetAdventureItem* item_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static PetAdventureResultNtfPetCmd* default_instance_;
};
// -------------------------------------------------------------------

class StartAdventurePetCmd : public ::google::protobuf::Message {
 public:
  StartAdventurePetCmd();
  virtual ~StartAdventurePetCmd();

  StartAdventurePetCmd(const StartAdventurePetCmd& from);

  inline StartAdventurePetCmd& operator=(const StartAdventurePetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartAdventurePetCmd& default_instance();

  void Swap(StartAdventurePetCmd* other);

  // implements Message ----------------------------------------------

  StartAdventurePetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StartAdventurePetCmd& from);
  void MergeFrom(const StartAdventurePetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_ADVENTURE_START];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // optional uint32 id = 3 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // repeated string petids = 4;
  inline int petids_size() const;
  inline void clear_petids();
  static const int kPetidsFieldNumber = 4;
  inline const ::std::string& petids(int index) const;
  inline ::std::string* mutable_petids(int index);
  inline void set_petids(int index, const ::std::string& value);
  inline void set_petids(int index, const char* value);
  inline void set_petids(int index, const char* value, size_t size);
  inline ::std::string* add_petids();
  inline void add_petids(const ::std::string& value);
  inline void add_petids(const char* value);
  inline void add_petids(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& petids() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_petids();

  // optional uint32 specid = 5 [default = 0];
  inline bool has_specid() const;
  inline void clear_specid();
  static const int kSpecidFieldNumber = 5;
  inline ::google::protobuf::uint32 specid() const;
  inline void set_specid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.StartAdventurePetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_specid();
  inline void clear_has_specid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::std::string> petids_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 specid_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static StartAdventurePetCmd* default_instance_;
};
// -------------------------------------------------------------------

class GetAdventureRewardPetCmd : public ::google::protobuf::Message {
 public:
  GetAdventureRewardPetCmd();
  virtual ~GetAdventureRewardPetCmd();

  GetAdventureRewardPetCmd(const GetAdventureRewardPetCmd& from);

  inline GetAdventureRewardPetCmd& operator=(const GetAdventureRewardPetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAdventureRewardPetCmd& default_instance();

  void Swap(GetAdventureRewardPetCmd* other);

  // implements Message ----------------------------------------------

  GetAdventureRewardPetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAdventureRewardPetCmd& from);
  void MergeFrom(const GetAdventureRewardPetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_ADVENTURE_GETREWARD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // optional uint32 id = 3 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GetAdventureRewardPetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static GetAdventureRewardPetCmd* default_instance_;
};
// -------------------------------------------------------------------

class QueryBattlePetCmd : public ::google::protobuf::Message {
 public:
  QueryBattlePetCmd();
  virtual ~QueryBattlePetCmd();

  QueryBattlePetCmd(const QueryBattlePetCmd& from);

  inline QueryBattlePetCmd& operator=(const QueryBattlePetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryBattlePetCmd& default_instance();

  void Swap(QueryBattlePetCmd* other);

  // implements Message ----------------------------------------------

  QueryBattlePetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryBattlePetCmd& from);
  void MergeFrom(const QueryBattlePetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_ADVENTURE_QUERYBATTLEPET];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // repeated .Cmd.ItemData pets = 3;
  inline int pets_size() const;
  inline void clear_pets();
  static const int kPetsFieldNumber = 3;
  inline const ::Cmd::ItemData& pets(int index) const;
  inline ::Cmd::ItemData* mutable_pets(int index);
  inline ::Cmd::ItemData* add_pets();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
      pets() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
      mutable_pets();

  // @@protoc_insertion_point(class_scope:Cmd.QueryBattlePetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData > pets_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static QueryBattlePetCmd* default_instance_;
};
// -------------------------------------------------------------------

class HandPetPetCmd : public ::google::protobuf::Message {
 public:
  HandPetPetCmd();
  virtual ~HandPetPetCmd();

  HandPetPetCmd(const HandPetPetCmd& from);

  inline HandPetPetCmd& operator=(const HandPetPetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HandPetPetCmd& default_instance();

  void Swap(HandPetPetCmd* other);

  // implements Message ----------------------------------------------

  HandPetPetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HandPetPetCmd& from);
  void MergeFrom(const HandPetPetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_INVITE_HAND];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // required uint64 petguid = 3;
  inline bool has_petguid() const;
  inline void clear_petguid();
  static const int kPetguidFieldNumber = 3;
  inline ::google::protobuf::uint64 petguid() const;
  inline void set_petguid(::google::protobuf::uint64 value);

  // optional bool breakup = 4 [default = false];
  inline bool has_breakup() const;
  inline void clear_breakup();
  static const int kBreakupFieldNumber = 4;
  inline bool breakup() const;
  inline void set_breakup(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.HandPetPetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_petguid();
  inline void clear_has_petguid();
  inline void set_has_breakup();
  inline void clear_has_breakup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 petguid_;
  bool breakup_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static HandPetPetCmd* default_instance_;
};
// -------------------------------------------------------------------

class GiveGiftPetCmd : public ::google::protobuf::Message {
 public:
  GiveGiftPetCmd();
  virtual ~GiveGiftPetCmd();

  GiveGiftPetCmd(const GiveGiftPetCmd& from);

  inline GiveGiftPetCmd& operator=(const GiveGiftPetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GiveGiftPetCmd& default_instance();

  void Swap(GiveGiftPetCmd* other);

  // implements Message ----------------------------------------------

  GiveGiftPetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GiveGiftPetCmd& from);
  void MergeFrom(const GiveGiftPetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_GIVE_GIFT];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // required uint32 petid = 3;
  inline bool has_petid() const;
  inline void clear_petid();
  static const int kPetidFieldNumber = 3;
  inline ::google::protobuf::uint32 petid() const;
  inline void set_petid(::google::protobuf::uint32 value);

  // optional string itemguid = 4;
  inline bool has_itemguid() const;
  inline void clear_itemguid();
  static const int kItemguidFieldNumber = 4;
  inline const ::std::string& itemguid() const;
  inline void set_itemguid(const ::std::string& value);
  inline void set_itemguid(const char* value);
  inline void set_itemguid(const char* value, size_t size);
  inline ::std::string* mutable_itemguid();
  inline ::std::string* release_itemguid();
  inline void set_allocated_itemguid(::std::string* itemguid);

  // @@protoc_insertion_point(class_scope:Cmd.GiveGiftPetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_petid();
  inline void clear_has_petid();
  inline void set_has_itemguid();
  inline void clear_has_itemguid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::std::string* itemguid_;
  ::google::protobuf::uint32 petid_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static GiveGiftPetCmd* default_instance_;
};
// -------------------------------------------------------------------

class UnlockNtfPetCmd : public ::google::protobuf::Message {
 public:
  UnlockNtfPetCmd();
  virtual ~UnlockNtfPetCmd();

  UnlockNtfPetCmd(const UnlockNtfPetCmd& from);

  inline UnlockNtfPetCmd& operator=(const UnlockNtfPetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlockNtfPetCmd& default_instance();

  void Swap(UnlockNtfPetCmd* other);

  // implements Message ----------------------------------------------

  UnlockNtfPetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnlockNtfPetCmd& from);
  void MergeFrom(const UnlockNtfPetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_UNLOCK_NTF];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // optional uint32 petid = 3 [default = 0];
  inline bool has_petid() const;
  inline void clear_petid();
  static const int kPetidFieldNumber = 3;
  inline ::google::protobuf::uint32 petid() const;
  inline void set_petid(::google::protobuf::uint32 value);

  // repeated uint32 equipids = 4;
  inline int equipids_size() const;
  inline void clear_equipids();
  static const int kEquipidsFieldNumber = 4;
  inline ::google::protobuf::uint32 equipids(int index) const;
  inline void set_equipids(int index, ::google::protobuf::uint32 value);
  inline void add_equipids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      equipids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_equipids();

  // repeated uint32 bodys = 5;
  inline int bodys_size() const;
  inline void clear_bodys();
  static const int kBodysFieldNumber = 5;
  inline ::google::protobuf::uint32 bodys(int index) const;
  inline void set_bodys(int index, ::google::protobuf::uint32 value);
  inline void add_bodys(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      bodys() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_bodys();

  // @@protoc_insertion_point(class_scope:Cmd.UnlockNtfPetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_petid();
  inline void clear_has_petid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > equipids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > bodys_;
  ::google::protobuf::uint32 petid_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static UnlockNtfPetCmd* default_instance_;
};
// -------------------------------------------------------------------

class ResetSkillPetCmd : public ::google::protobuf::Message {
 public:
  ResetSkillPetCmd();
  virtual ~ResetSkillPetCmd();

  ResetSkillPetCmd(const ResetSkillPetCmd& from);

  inline ResetSkillPetCmd& operator=(const ResetSkillPetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResetSkillPetCmd& default_instance();

  void Swap(ResetSkillPetCmd* other);

  // implements Message ----------------------------------------------

  ResetSkillPetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResetSkillPetCmd& from);
  void MergeFrom(const ResetSkillPetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_RESET_SKILL];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // optional uint32 id = 3 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ResetSkillPetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static ResetSkillPetCmd* default_instance_;
};
// -------------------------------------------------------------------

class ChangeNamePetCmd : public ::google::protobuf::Message {
 public:
  ChangeNamePetCmd();
  virtual ~ChangeNamePetCmd();

  ChangeNamePetCmd(const ChangeNamePetCmd& from);

  inline ChangeNamePetCmd& operator=(const ChangeNamePetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeNamePetCmd& default_instance();

  void Swap(ChangeNamePetCmd* other);

  // implements Message ----------------------------------------------

  ChangeNamePetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeNamePetCmd& from);
  void MergeFrom(const ChangeNamePetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_CHANGE_NAME];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // optional uint32 petid = 3 [default = 0];
  inline bool has_petid() const;
  inline void clear_petid();
  static const int kPetidFieldNumber = 3;
  inline ::google::protobuf::uint32 petid() const;
  inline void set_petid(::google::protobuf::uint32 value);

  // optional string name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:Cmd.ChangeNamePetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_petid();
  inline void clear_has_petid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::std::string* name_;
  ::google::protobuf::uint32 petid_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static ChangeNamePetCmd* default_instance_;
};
// -------------------------------------------------------------------

class SwitchSkillPetCmd : public ::google::protobuf::Message {
 public:
  SwitchSkillPetCmd();
  virtual ~SwitchSkillPetCmd();

  SwitchSkillPetCmd(const SwitchSkillPetCmd& from);

  inline SwitchSkillPetCmd& operator=(const SwitchSkillPetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SwitchSkillPetCmd& default_instance();

  void Swap(SwitchSkillPetCmd* other);

  // implements Message ----------------------------------------------

  SwitchSkillPetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SwitchSkillPetCmd& from);
  void MergeFrom(const SwitchSkillPetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_SWITCH_SKILL];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // optional uint32 petid = 3 [default = 0];
  inline bool has_petid() const;
  inline void clear_petid();
  static const int kPetidFieldNumber = 3;
  inline ::google::protobuf::uint32 petid() const;
  inline void set_petid(::google::protobuf::uint32 value);

  // optional bool open = 4 [default = false];
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 4;
  inline bool open() const;
  inline void set_open(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.SwitchSkillPetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_petid();
  inline void clear_has_petid();
  inline void set_has_open();
  inline void clear_has_open();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 petid_;
  bool open_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static SwitchSkillPetCmd* default_instance_;
};
// -------------------------------------------------------------------

class WorkSpace : public ::google::protobuf::Message {
 public:
  WorkSpace();
  virtual ~WorkSpace();

  WorkSpace(const WorkSpace& from);

  inline WorkSpace& operator=(const WorkSpace& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkSpace& default_instance();

  void Swap(WorkSpace* other);

  // implements Message ----------------------------------------------

  WorkSpace* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorkSpace& from);
  void MergeFrom(const WorkSpace& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 starttime = 2 [default = 0];
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 2;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // optional uint32 lastrewardtime = 7 [default = 0];
  inline bool has_lastrewardtime() const;
  inline void clear_lastrewardtime();
  static const int kLastrewardtimeFieldNumber = 7;
  inline ::google::protobuf::uint32 lastrewardtime() const;
  inline void set_lastrewardtime(::google::protobuf::uint32 value);

  // optional bool unlock = 3 [default = false];
  inline bool has_unlock() const;
  inline void clear_unlock();
  static const int kUnlockFieldNumber = 3;
  inline bool unlock() const;
  inline void set_unlock(bool value);

  // optional .Cmd.EWorkState state = 4 [default = EWORKSTATE_MIN];
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::Cmd::EWorkState state() const;
  inline void set_state(::Cmd::EWorkState value);

  // repeated .Cmd.ItemData datas = 5;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 5;
  inline const ::Cmd::ItemData& datas(int index) const;
  inline ::Cmd::ItemData* mutable_datas(int index);
  inline ::Cmd::ItemData* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
      mutable_datas();

  // repeated uint32 counts = 6;
  inline int counts_size() const;
  inline void clear_counts();
  static const int kCountsFieldNumber = 6;
  inline ::google::protobuf::uint32 counts(int index) const;
  inline void set_counts(int index, ::google::protobuf::uint32 value);
  inline void add_counts(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      counts() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_counts();

  // repeated uint32 last_counts = 8;
  inline int last_counts_size() const;
  inline void clear_last_counts();
  static const int kLastCountsFieldNumber = 8;
  inline ::google::protobuf::uint32 last_counts(int index) const;
  inline void set_last_counts(int index, ::google::protobuf::uint32 value);
  inline void add_last_counts(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      last_counts() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_last_counts();

  // @@protoc_insertion_point(class_scope:Cmd.WorkSpace)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_lastrewardtime();
  inline void clear_has_lastrewardtime();
  inline void set_has_unlock();
  inline void clear_has_unlock();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 starttime_;
  ::google::protobuf::uint32 lastrewardtime_;
  bool unlock_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData > datas_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > counts_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > last_counts_;
  int state_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static WorkSpace* default_instance_;
};
// -------------------------------------------------------------------

class WorkManual : public ::google::protobuf::Message {
 public:
  WorkManual();
  virtual ~WorkManual();

  WorkManual(const WorkManual& from);

  inline WorkManual& operator=(const WorkManual& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkManual& default_instance();

  void Swap(WorkManual* other);

  // implements Message ----------------------------------------------

  WorkManual* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorkManual& from);
  void MergeFrom(const WorkManual& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool unlock = 1 [default = false];
  inline bool has_unlock() const;
  inline void clear_unlock();
  static const int kUnlockFieldNumber = 1;
  inline bool unlock() const;
  inline void set_unlock(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.WorkManual)
 private:
  inline void set_has_unlock();
  inline void clear_has_unlock();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool unlock_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static WorkManual* default_instance_;
};
// -------------------------------------------------------------------

class WorkPetExtra : public ::google::protobuf::Message {
 public:
  WorkPetExtra();
  virtual ~WorkPetExtra();

  WorkPetExtra(const WorkPetExtra& from);

  inline WorkPetExtra& operator=(const WorkPetExtra& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkPetExtra& default_instance();

  void Swap(WorkPetExtra* other);

  // implements Message ----------------------------------------------

  WorkPetExtra* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorkPetExtra& from);
  void MergeFrom(const WorkPetExtra& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline const ::std::string& guid() const;
  inline void set_guid(const ::std::string& value);
  inline void set_guid(const char* value);
  inline void set_guid(const char* value, size_t size);
  inline ::std::string* mutable_guid();
  inline ::std::string* release_guid();
  inline void set_allocated_guid(::std::string* guid);

  // optional uint32 lastspaceid = 2 [default = 0];
  inline bool has_lastspaceid() const;
  inline void clear_lastspaceid();
  static const int kLastspaceidFieldNumber = 2;
  inline ::google::protobuf::uint32 lastspaceid() const;
  inline void set_lastspaceid(::google::protobuf::uint32 value);

  // optional uint32 count = 3 [default = 0];
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.WorkPetExtra)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_lastspaceid();
  inline void clear_has_lastspaceid();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* guid_;
  ::google::protobuf::uint32 lastspaceid_;
  ::google::protobuf::uint32 count_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static WorkPetExtra* default_instance_;
};
// -------------------------------------------------------------------

class WorkDayReward : public ::google::protobuf::Message {
 public:
  WorkDayReward();
  virtual ~WorkDayReward();

  WorkDayReward(const WorkDayReward& from);

  inline WorkDayReward& operator=(const WorkDayReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkDayReward& default_instance();

  void Swap(WorkDayReward* other);

  // implements Message ----------------------------------------------

  WorkDayReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorkDayReward& from);
  void MergeFrom(const WorkDayReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 time = 2 [default = 0];
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.WorkDayReward)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 time_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static WorkDayReward* default_instance_;
};
// -------------------------------------------------------------------

class UnlockPetWorkManualPetCmd : public ::google::protobuf::Message {
 public:
  UnlockPetWorkManualPetCmd();
  virtual ~UnlockPetWorkManualPetCmd();

  UnlockPetWorkManualPetCmd(const UnlockPetWorkManualPetCmd& from);

  inline UnlockPetWorkManualPetCmd& operator=(const UnlockPetWorkManualPetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlockPetWorkManualPetCmd& default_instance();

  void Swap(UnlockPetWorkManualPetCmd* other);

  // implements Message ----------------------------------------------

  UnlockPetWorkManualPetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnlockPetWorkManualPetCmd& from);
  void MergeFrom(const UnlockPetWorkManualPetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_WORK_UNLOCKMANUAL];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // @@protoc_insertion_point(class_scope:Cmd.UnlockPetWorkManualPetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static UnlockPetWorkManualPetCmd* default_instance_;
};
// -------------------------------------------------------------------

class StartWorkPetCmd : public ::google::protobuf::Message {
 public:
  StartWorkPetCmd();
  virtual ~StartWorkPetCmd();

  StartWorkPetCmd(const StartWorkPetCmd& from);

  inline StartWorkPetCmd& operator=(const StartWorkPetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartWorkPetCmd& default_instance();

  void Swap(StartWorkPetCmd* other);

  // implements Message ----------------------------------------------

  StartWorkPetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StartWorkPetCmd& from);
  void MergeFrom(const StartWorkPetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_WORK_STARTWORK];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // optional uint32 id = 3 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // repeated string pets = 4;
  inline int pets_size() const;
  inline void clear_pets();
  static const int kPetsFieldNumber = 4;
  inline const ::std::string& pets(int index) const;
  inline ::std::string* mutable_pets(int index);
  inline void set_pets(int index, const ::std::string& value);
  inline void set_pets(int index, const char* value);
  inline void set_pets(int index, const char* value, size_t size);
  inline ::std::string* add_pets();
  inline void add_pets(const ::std::string& value);
  inline void add_pets(const char* value);
  inline void add_pets(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& pets() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_pets();

  // @@protoc_insertion_point(class_scope:Cmd.StartWorkPetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::std::string> pets_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static StartWorkPetCmd* default_instance_;
};
// -------------------------------------------------------------------

class StopWorkPetCmd : public ::google::protobuf::Message {
 public:
  StopWorkPetCmd();
  virtual ~StopWorkPetCmd();

  StopWorkPetCmd(const StopWorkPetCmd& from);

  inline StopWorkPetCmd& operator=(const StopWorkPetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StopWorkPetCmd& default_instance();

  void Swap(StopWorkPetCmd* other);

  // implements Message ----------------------------------------------

  StopWorkPetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StopWorkPetCmd& from);
  void MergeFrom(const StopWorkPetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_WORK_STOPWORK];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // optional uint32 id = 3 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.StopWorkPetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static StopWorkPetCmd* default_instance_;
};
// -------------------------------------------------------------------

class QueryPetWorkManualPetCmd : public ::google::protobuf::Message {
 public:
  QueryPetWorkManualPetCmd();
  virtual ~QueryPetWorkManualPetCmd();

  QueryPetWorkManualPetCmd(const QueryPetWorkManualPetCmd& from);

  inline QueryPetWorkManualPetCmd& operator=(const QueryPetWorkManualPetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryPetWorkManualPetCmd& default_instance();

  void Swap(QueryPetWorkManualPetCmd* other);

  // implements Message ----------------------------------------------

  QueryPetWorkManualPetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryPetWorkManualPetCmd& from);
  void MergeFrom(const QueryPetWorkManualPetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_WORK_QUERYWORKMANUAL];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // optional .Cmd.WorkManual manual = 3;
  inline bool has_manual() const;
  inline void clear_manual();
  static const int kManualFieldNumber = 3;
  inline const ::Cmd::WorkManual& manual() const;
  inline ::Cmd::WorkManual* mutable_manual();
  inline ::Cmd::WorkManual* release_manual();
  inline void set_allocated_manual(::Cmd::WorkManual* manual);

  // @@protoc_insertion_point(class_scope:Cmd.QueryPetWorkManualPetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_manual();
  inline void clear_has_manual();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::WorkManual* manual_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static QueryPetWorkManualPetCmd* default_instance_;
};
// -------------------------------------------------------------------

class QueryPetWorkDataPetCmd : public ::google::protobuf::Message {
 public:
  QueryPetWorkDataPetCmd();
  virtual ~QueryPetWorkDataPetCmd();

  QueryPetWorkDataPetCmd(const QueryPetWorkDataPetCmd& from);

  inline QueryPetWorkDataPetCmd& operator=(const QueryPetWorkDataPetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryPetWorkDataPetCmd& default_instance();

  void Swap(QueryPetWorkDataPetCmd* other);

  // implements Message ----------------------------------------------

  QueryPetWorkDataPetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryPetWorkDataPetCmd& from);
  void MergeFrom(const QueryPetWorkDataPetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_WORK_QUERYWORKDATA];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // repeated .Cmd.WorkSpace datas = 3;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 3;
  inline const ::Cmd::WorkSpace& datas(int index) const;
  inline ::Cmd::WorkSpace* mutable_datas(int index);
  inline ::Cmd::WorkSpace* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::WorkSpace >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::WorkSpace >*
      mutable_datas();

  // repeated .Cmd.WorkPetExtra extras = 4;
  inline int extras_size() const;
  inline void clear_extras();
  static const int kExtrasFieldNumber = 4;
  inline const ::Cmd::WorkPetExtra& extras(int index) const;
  inline ::Cmd::WorkPetExtra* mutable_extras(int index);
  inline ::Cmd::WorkPetExtra* add_extras();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::WorkPetExtra >&
      extras() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::WorkPetExtra >*
      mutable_extras();

  // optional uint32 max_space = 5 [default = 0];
  inline bool has_max_space() const;
  inline void clear_max_space();
  static const int kMaxSpaceFieldNumber = 5;
  inline ::google::protobuf::uint32 max_space() const;
  inline void set_max_space(::google::protobuf::uint32 value);

  // optional uint32 card_expiretime = 6 [default = 0];
  inline bool has_card_expiretime() const;
  inline void clear_card_expiretime();
  static const int kCardExpiretimeFieldNumber = 6;
  inline ::google::protobuf::uint32 card_expiretime() const;
  inline void set_card_expiretime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.QueryPetWorkDataPetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_max_space();
  inline void clear_has_max_space();
  inline void set_has_card_expiretime();
  inline void clear_has_card_expiretime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::WorkSpace > datas_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::WorkPetExtra > extras_;
  ::google::protobuf::uint32 max_space_;
  ::google::protobuf::uint32 card_expiretime_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static QueryPetWorkDataPetCmd* default_instance_;
};
// -------------------------------------------------------------------

class GetPetWorkRewardPetCmd : public ::google::protobuf::Message {
 public:
  GetPetWorkRewardPetCmd();
  virtual ~GetPetWorkRewardPetCmd();

  GetPetWorkRewardPetCmd(const GetPetWorkRewardPetCmd& from);

  inline GetPetWorkRewardPetCmd& operator=(const GetPetWorkRewardPetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPetWorkRewardPetCmd& default_instance();

  void Swap(GetPetWorkRewardPetCmd* other);

  // implements Message ----------------------------------------------

  GetPetWorkRewardPetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetPetWorkRewardPetCmd& from);
  void MergeFrom(const GetPetWorkRewardPetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_WORK_GETREWARD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // optional uint32 id = 3 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GetPetWorkRewardPetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static GetPetWorkRewardPetCmd* default_instance_;
};
// -------------------------------------------------------------------

class WorkSpaceUpdate : public ::google::protobuf::Message {
 public:
  WorkSpaceUpdate();
  virtual ~WorkSpaceUpdate();

  WorkSpaceUpdate(const WorkSpaceUpdate& from);

  inline WorkSpaceUpdate& operator=(const WorkSpaceUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkSpaceUpdate& default_instance();

  void Swap(WorkSpaceUpdate* other);

  // implements Message ----------------------------------------------

  WorkSpaceUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorkSpaceUpdate& from);
  void MergeFrom(const WorkSpaceUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_WORK_SPACEUPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // repeated .Cmd.WorkSpace updates = 3;
  inline int updates_size() const;
  inline void clear_updates();
  static const int kUpdatesFieldNumber = 3;
  inline const ::Cmd::WorkSpace& updates(int index) const;
  inline ::Cmd::WorkSpace* mutable_updates(int index);
  inline ::Cmd::WorkSpace* add_updates();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::WorkSpace >&
      updates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::WorkSpace >*
      mutable_updates();

  // @@protoc_insertion_point(class_scope:Cmd.WorkSpaceUpdate)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::WorkSpace > updates_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static WorkSpaceUpdate* default_instance_;
};
// -------------------------------------------------------------------

class PetExtraUpdatePetCmd : public ::google::protobuf::Message {
 public:
  PetExtraUpdatePetCmd();
  virtual ~PetExtraUpdatePetCmd();

  PetExtraUpdatePetCmd(const PetExtraUpdatePetCmd& from);

  inline PetExtraUpdatePetCmd& operator=(const PetExtraUpdatePetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetExtraUpdatePetCmd& default_instance();

  void Swap(PetExtraUpdatePetCmd* other);

  // implements Message ----------------------------------------------

  PetExtraUpdatePetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetExtraUpdatePetCmd& from);
  void MergeFrom(const PetExtraUpdatePetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_WORK_EXTRAUPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // repeated .Cmd.WorkPetExtra updates = 3;
  inline int updates_size() const;
  inline void clear_updates();
  static const int kUpdatesFieldNumber = 3;
  inline const ::Cmd::WorkPetExtra& updates(int index) const;
  inline ::Cmd::WorkPetExtra* mutable_updates(int index);
  inline ::Cmd::WorkPetExtra* add_updates();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::WorkPetExtra >&
      updates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::WorkPetExtra >*
      mutable_updates();

  // @@protoc_insertion_point(class_scope:Cmd.PetExtraUpdatePetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::WorkPetExtra > updates_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static PetExtraUpdatePetCmd* default_instance_;
};
// -------------------------------------------------------------------

class ComposePetCmd : public ::google::protobuf::Message {
 public:
  ComposePetCmd();
  virtual ~ComposePetCmd();

  ComposePetCmd(const ComposePetCmd& from);

  inline ComposePetCmd& operator=(const ComposePetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComposePetCmd& default_instance();

  void Swap(ComposePetCmd* other);

  // implements Message ----------------------------------------------

  ComposePetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ComposePetCmd& from);
  void MergeFrom(const ComposePetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_COMPOSE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // required uint32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // repeated string eggguids = 4;
  inline int eggguids_size() const;
  inline void clear_eggguids();
  static const int kEggguidsFieldNumber = 4;
  inline const ::std::string& eggguids(int index) const;
  inline ::std::string* mutable_eggguids(int index);
  inline void set_eggguids(int index, const ::std::string& value);
  inline void set_eggguids(int index, const char* value);
  inline void set_eggguids(int index, const char* value, size_t size);
  inline ::std::string* add_eggguids();
  inline void add_eggguids(const ::std::string& value);
  inline void add_eggguids(const char* value);
  inline void add_eggguids(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& eggguids() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_eggguids();

  // @@protoc_insertion_point(class_scope:Cmd.ComposePetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::std::string> eggguids_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static ComposePetCmd* default_instance_;
};
// -------------------------------------------------------------------

class SpecPetEquip : public ::google::protobuf::Message {
 public:
  SpecPetEquip();
  virtual ~SpecPetEquip();

  SpecPetEquip(const SpecPetEquip& from);

  inline SpecPetEquip& operator=(const SpecPetEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SpecPetEquip& default_instance();

  void Swap(SpecPetEquip* other);

  // implements Message ----------------------------------------------

  SpecPetEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpecPetEquip& from);
  void MergeFrom(const SpecPetEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 bodyid = 1;
  inline bool has_bodyid() const;
  inline void clear_bodyid();
  static const int kBodyidFieldNumber = 1;
  inline ::google::protobuf::uint32 bodyid() const;
  inline void set_bodyid(::google::protobuf::uint32 value);

  // required uint32 itemid = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 2;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // optional .Cmd.EEquipPos epos = 3 [default = EEQUIPPOS_MIN];
  inline bool has_epos() const;
  inline void clear_epos();
  static const int kEposFieldNumber = 3;
  inline ::Cmd::EEquipPos epos() const;
  inline void set_epos(::Cmd::EEquipPos value);

  // @@protoc_insertion_point(class_scope:Cmd.SpecPetEquip)
 private:
  inline void set_has_bodyid();
  inline void clear_has_bodyid();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_epos();
  inline void clear_has_epos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 bodyid_;
  ::google::protobuf::uint32 itemid_;
  int epos_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static SpecPetEquip* default_instance_;
};
// -------------------------------------------------------------------

class PetEquipUnlockInfo : public ::google::protobuf::Message {
 public:
  PetEquipUnlockInfo();
  virtual ~PetEquipUnlockInfo();

  PetEquipUnlockInfo(const PetEquipUnlockInfo& from);

  inline PetEquipUnlockInfo& operator=(const PetEquipUnlockInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetEquipUnlockInfo& default_instance();

  void Swap(PetEquipUnlockInfo* other);

  // implements Message ----------------------------------------------

  PetEquipUnlockInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetEquipUnlockInfo& from);
  void MergeFrom(const PetEquipUnlockInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline ::google::protobuf::uint32 items(int index) const;
  inline void set_items(int index, ::google::protobuf::uint32 value);
  inline void add_items(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      items() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_items();

  // repeated .Cmd.SpecPetEquip bodyitems = 2;
  inline int bodyitems_size() const;
  inline void clear_bodyitems();
  static const int kBodyitemsFieldNumber = 2;
  inline const ::Cmd::SpecPetEquip& bodyitems(int index) const;
  inline ::Cmd::SpecPetEquip* mutable_bodyitems(int index);
  inline ::Cmd::SpecPetEquip* add_bodyitems();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SpecPetEquip >&
      bodyitems() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::SpecPetEquip >*
      mutable_bodyitems();

  // @@protoc_insertion_point(class_scope:Cmd.PetEquipUnlockInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > items_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::SpecPetEquip > bodyitems_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static PetEquipUnlockInfo* default_instance_;
};
// -------------------------------------------------------------------

class PetEquipListCmd : public ::google::protobuf::Message {
 public:
  PetEquipListCmd();
  virtual ~PetEquipListCmd();

  PetEquipListCmd(const PetEquipListCmd& from);

  inline PetEquipListCmd& operator=(const PetEquipListCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetEquipListCmd& default_instance();

  void Swap(PetEquipListCmd* other);

  // implements Message ----------------------------------------------

  PetEquipListCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetEquipListCmd& from);
  void MergeFrom(const PetEquipListCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_EQUIP_LIST];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // optional .Cmd.PetEquipUnlockInfo unlockinfo = 3;
  inline bool has_unlockinfo() const;
  inline void clear_unlockinfo();
  static const int kUnlockinfoFieldNumber = 3;
  inline const ::Cmd::PetEquipUnlockInfo& unlockinfo() const;
  inline ::Cmd::PetEquipUnlockInfo* mutable_unlockinfo();
  inline ::Cmd::PetEquipUnlockInfo* release_unlockinfo();
  inline void set_allocated_unlockinfo(::Cmd::PetEquipUnlockInfo* unlockinfo);

  // @@protoc_insertion_point(class_scope:Cmd.PetEquipListCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_unlockinfo();
  inline void clear_has_unlockinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::PetEquipUnlockInfo* unlockinfo_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static PetEquipListCmd* default_instance_;
};
// -------------------------------------------------------------------

class UpdatePetEquipListCmd : public ::google::protobuf::Message {
 public:
  UpdatePetEquipListCmd();
  virtual ~UpdatePetEquipListCmd();

  UpdatePetEquipListCmd(const UpdatePetEquipListCmd& from);

  inline UpdatePetEquipListCmd& operator=(const UpdatePetEquipListCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdatePetEquipListCmd& default_instance();

  void Swap(UpdatePetEquipListCmd* other);

  // implements Message ----------------------------------------------

  UpdatePetEquipListCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdatePetEquipListCmd& from);
  void MergeFrom(const UpdatePetEquipListCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_EQUIP_LIST_UPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // repeated uint32 additems = 3;
  inline int additems_size() const;
  inline void clear_additems();
  static const int kAdditemsFieldNumber = 3;
  inline ::google::protobuf::uint32 additems(int index) const;
  inline void set_additems(int index, ::google::protobuf::uint32 value);
  inline void add_additems(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      additems() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_additems();

  // repeated .Cmd.SpecPetEquip addbodyitems = 4;
  inline int addbodyitems_size() const;
  inline void clear_addbodyitems();
  static const int kAddbodyitemsFieldNumber = 4;
  inline const ::Cmd::SpecPetEquip& addbodyitems(int index) const;
  inline ::Cmd::SpecPetEquip* mutable_addbodyitems(int index);
  inline ::Cmd::SpecPetEquip* add_addbodyitems();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SpecPetEquip >&
      addbodyitems() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::SpecPetEquip >*
      mutable_addbodyitems();

  // @@protoc_insertion_point(class_scope:Cmd.UpdatePetEquipListCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > additems_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::SpecPetEquip > addbodyitems_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static UpdatePetEquipListCmd* default_instance_;
};
// -------------------------------------------------------------------

class PetWearInfo : public ::google::protobuf::Message {
 public:
  PetWearInfo();
  virtual ~PetWearInfo();

  PetWearInfo(const PetWearInfo& from);

  inline PetWearInfo& operator=(const PetWearInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetWearInfo& default_instance();

  void Swap(PetWearInfo* other);

  // implements Message ----------------------------------------------

  PetWearInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetWearInfo& from);
  void MergeFrom(const PetWearInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Cmd.EEquipPos epos = 4;
  inline bool has_epos() const;
  inline void clear_epos();
  static const int kEposFieldNumber = 4;
  inline ::Cmd::EEquipPos epos() const;
  inline void set_epos(::Cmd::EEquipPos value);

  // optional uint32 itemid = 5;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 5;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // optional .Cmd.EPetEquipOper oper = 6 [default = EPETEQUIPOPER_ON];
  inline bool has_oper() const;
  inline void clear_oper();
  static const int kOperFieldNumber = 6;
  inline ::Cmd::EPetEquipOper oper() const;
  inline void set_oper(::Cmd::EPetEquipOper value);

  // @@protoc_insertion_point(class_scope:Cmd.PetWearInfo)
 private:
  inline void set_has_epos();
  inline void clear_has_epos();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_oper();
  inline void clear_has_oper();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int epos_;
  ::google::protobuf::uint32 itemid_;
  int oper_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static PetWearInfo* default_instance_;
};
// -------------------------------------------------------------------

class ChangeWearPetCmd : public ::google::protobuf::Message {
 public:
  ChangeWearPetCmd();
  virtual ~ChangeWearPetCmd();

  ChangeWearPetCmd(const ChangeWearPetCmd& from);

  inline ChangeWearPetCmd& operator=(const ChangeWearPetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeWearPetCmd& default_instance();

  void Swap(ChangeWearPetCmd* other);

  // implements Message ----------------------------------------------

  ChangeWearPetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeWearPetCmd& from);
  void MergeFrom(const ChangeWearPetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_CHANGE_WEAR];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // required uint32 petid = 3;
  inline bool has_petid() const;
  inline void clear_petid();
  static const int kPetidFieldNumber = 3;
  inline ::google::protobuf::uint32 petid() const;
  inline void set_petid(::google::protobuf::uint32 value);

  // repeated .Cmd.PetWearInfo wearinfo = 4;
  inline int wearinfo_size() const;
  inline void clear_wearinfo();
  static const int kWearinfoFieldNumber = 4;
  inline const ::Cmd::PetWearInfo& wearinfo(int index) const;
  inline ::Cmd::PetWearInfo* mutable_wearinfo(int index);
  inline ::Cmd::PetWearInfo* add_wearinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::PetWearInfo >&
      wearinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::PetWearInfo >*
      mutable_wearinfo();

  // @@protoc_insertion_point(class_scope:Cmd.ChangeWearPetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_petid();
  inline void clear_has_petid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::PetWearInfo > wearinfo_;
  ::google::protobuf::uint32 petid_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static ChangeWearPetCmd* default_instance_;
};
// -------------------------------------------------------------------

class UpdateWearPetCmd : public ::google::protobuf::Message {
 public:
  UpdateWearPetCmd();
  virtual ~UpdateWearPetCmd();

  UpdateWearPetCmd(const UpdateWearPetCmd& from);

  inline UpdateWearPetCmd& operator=(const UpdateWearPetCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateWearPetCmd& default_instance();

  void Swap(UpdateWearPetCmd* other);

  // implements Message ----------------------------------------------

  UpdateWearPetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateWearPetCmd& from);
  void MergeFrom(const UpdateWearPetCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.PetParam param = 2 [default = PETPARAM_UPDATE_WEAR];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::PetParam param() const;
  inline void set_param(::Cmd::PetParam value);

  // required uint32 petid = 3;
  inline bool has_petid() const;
  inline void clear_petid();
  static const int kPetidFieldNumber = 3;
  inline ::google::protobuf::uint32 petid() const;
  inline void set_petid(::google::protobuf::uint32 value);

  // repeated .Cmd.PetWearInfo wearinfo = 4;
  inline int wearinfo_size() const;
  inline void clear_wearinfo();
  static const int kWearinfoFieldNumber = 4;
  inline const ::Cmd::PetWearInfo& wearinfo(int index) const;
  inline ::Cmd::PetWearInfo* mutable_wearinfo(int index);
  inline ::Cmd::PetWearInfo* add_wearinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::PetWearInfo >&
      wearinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::PetWearInfo >*
      mutable_wearinfo();

  // @@protoc_insertion_point(class_scope:Cmd.UpdateWearPetCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_petid();
  inline void clear_has_petid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::PetWearInfo > wearinfo_;
  ::google::protobuf::uint32 petid_;
  friend void  protobuf_AddDesc_ScenePet_2eproto();
  friend void protobuf_AssignDesc_ScenePet_2eproto();
  friend void protobuf_ShutdownFile_ScenePet_2eproto();

  void InitAsDefaultInstance();
  static UpdateWearPetCmd* default_instance_;
};
// ===================================================================


// ===================================================================

// PetData

// optional uint32 id = 1 [default = 0];
inline bool PetData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PetData::id() const {
  // @@protoc_insertion_point(field_get:Cmd.PetData.id)
  return id_;
}
inline void PetData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetData.id)
}

// -------------------------------------------------------------------

// PetList

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool PetList::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetList::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetList::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetList::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command PetList::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.PetList.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void PetList::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetList.cmd)
}

// optional uint32 param = 2 [default = 1];
inline bool PetList::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetList::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetList::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetList::clear_param() {
  param_ = 1u;
  clear_has_param();
}
inline ::google::protobuf::uint32 PetList::param() const {
  // @@protoc_insertion_point(field_get:Cmd.PetList.param)
  return param_;
}
inline void PetList::set_param(::google::protobuf::uint32 value) {
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetList.param)
}

// repeated .Cmd.PetData datas = 3;
inline int PetList::datas_size() const {
  return datas_.size();
}
inline void PetList::clear_datas() {
  datas_.Clear();
}
inline const ::Cmd::PetData& PetList::datas(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.PetList.datas)
  return datas_.Get(index);
}
inline ::Cmd::PetData* PetList::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.PetList.datas)
  return datas_.Mutable(index);
}
inline ::Cmd::PetData* PetList::add_datas() {
  // @@protoc_insertion_point(field_add:Cmd.PetList.datas)
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::PetData >&
PetList::datas() const {
  // @@protoc_insertion_point(field_list:Cmd.PetList.datas)
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::PetData >*
PetList::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.PetList.datas)
  return &datas_;
}

// -------------------------------------------------------------------

// WeaponPetData

// optional uint32 id = 1 [default = 0];
inline bool WeaponPetData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WeaponPetData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WeaponPetData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WeaponPetData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 WeaponPetData::id() const {
  // @@protoc_insertion_point(field_get:Cmd.WeaponPetData.id)
  return id_;
}
inline void WeaponPetData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WeaponPetData.id)
}

// optional uint32 hp = 2 [default = 0];
inline bool WeaponPetData::has_hp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WeaponPetData::set_has_hp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WeaponPetData::clear_has_hp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WeaponPetData::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 WeaponPetData::hp() const {
  // @@protoc_insertion_point(field_get:Cmd.WeaponPetData.hp)
  return hp_;
}
inline void WeaponPetData::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WeaponPetData.hp)
}

// optional uint32 relivetime = 3 [default = 0];
inline bool WeaponPetData::has_relivetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WeaponPetData::set_has_relivetime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WeaponPetData::clear_has_relivetime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WeaponPetData::clear_relivetime() {
  relivetime_ = 0u;
  clear_has_relivetime();
}
inline ::google::protobuf::uint32 WeaponPetData::relivetime() const {
  // @@protoc_insertion_point(field_get:Cmd.WeaponPetData.relivetime)
  return relivetime_;
}
inline void WeaponPetData::set_relivetime(::google::protobuf::uint32 value) {
  set_has_relivetime();
  relivetime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WeaponPetData.relivetime)
}

// optional uint32 expiretime = 4 [default = 0];
inline bool WeaponPetData::has_expiretime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WeaponPetData::set_has_expiretime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WeaponPetData::clear_has_expiretime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WeaponPetData::clear_expiretime() {
  expiretime_ = 0u;
  clear_has_expiretime();
}
inline ::google::protobuf::uint32 WeaponPetData::expiretime() const {
  // @@protoc_insertion_point(field_get:Cmd.WeaponPetData.expiretime)
  return expiretime_;
}
inline void WeaponPetData::set_expiretime(::google::protobuf::uint32 value) {
  set_has_expiretime();
  expiretime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WeaponPetData.expiretime)
}

// optional bool blive = 5 [default = false];
inline bool WeaponPetData::has_blive() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WeaponPetData::set_has_blive() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WeaponPetData::clear_has_blive() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WeaponPetData::clear_blive() {
  blive_ = false;
  clear_has_blive();
}
inline bool WeaponPetData::blive() const {
  // @@protoc_insertion_point(field_get:Cmd.WeaponPetData.blive)
  return blive_;
}
inline void WeaponPetData::set_blive(bool value) {
  set_has_blive();
  blive_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WeaponPetData.blive)
}

// optional bool bactive = 6 [default = false];
inline bool WeaponPetData::has_bactive() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WeaponPetData::set_has_bactive() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WeaponPetData::clear_has_bactive() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WeaponPetData::clear_bactive() {
  bactive_ = false;
  clear_has_bactive();
}
inline bool WeaponPetData::bactive() const {
  // @@protoc_insertion_point(field_get:Cmd.WeaponPetData.bactive)
  return bactive_;
}
inline void WeaponPetData::set_bactive(bool value) {
  set_has_bactive();
  bactive_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WeaponPetData.bactive)
}

// optional bool handstatus = 7 [default = false];
inline bool WeaponPetData::has_handstatus() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WeaponPetData::set_has_handstatus() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WeaponPetData::clear_has_handstatus() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WeaponPetData::clear_handstatus() {
  handstatus_ = false;
  clear_has_handstatus();
}
inline bool WeaponPetData::handstatus() const {
  // @@protoc_insertion_point(field_get:Cmd.WeaponPetData.handstatus)
  return handstatus_;
}
inline void WeaponPetData::set_handstatus(bool value) {
  set_has_handstatus();
  handstatus_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WeaponPetData.handstatus)
}

// -------------------------------------------------------------------

// FireCatPetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool FireCatPetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FireCatPetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FireCatPetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FireCatPetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command FireCatPetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.FireCatPetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void FireCatPetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FireCatPetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_FIRE_CAT];
inline bool FireCatPetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FireCatPetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FireCatPetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FireCatPetCmd::clear_param() {
  param_ = 2;
  clear_has_param();
}
inline ::Cmd::PetParam FireCatPetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.FireCatPetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void FireCatPetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FireCatPetCmd.param)
}

// optional uint32 catid = 3 [default = 0];
inline bool FireCatPetCmd::has_catid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FireCatPetCmd::set_has_catid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FireCatPetCmd::clear_has_catid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FireCatPetCmd::clear_catid() {
  catid_ = 0u;
  clear_has_catid();
}
inline ::google::protobuf::uint32 FireCatPetCmd::catid() const {
  // @@protoc_insertion_point(field_get:Cmd.FireCatPetCmd.catid)
  return catid_;
}
inline void FireCatPetCmd::set_catid(::google::protobuf::uint32 value) {
  set_has_catid();
  catid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FireCatPetCmd.catid)
}

// -------------------------------------------------------------------

// HireCatPetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool HireCatPetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HireCatPetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HireCatPetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HireCatPetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command HireCatPetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.HireCatPetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void HireCatPetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.HireCatPetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_HIRE_CAT];
inline bool HireCatPetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HireCatPetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HireCatPetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HireCatPetCmd::clear_param() {
  param_ = 3;
  clear_has_param();
}
inline ::Cmd::PetParam HireCatPetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.HireCatPetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void HireCatPetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.HireCatPetCmd.param)
}

// optional uint32 catid = 3 [default = 0];
inline bool HireCatPetCmd::has_catid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HireCatPetCmd::set_has_catid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HireCatPetCmd::clear_has_catid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HireCatPetCmd::clear_catid() {
  catid_ = 0u;
  clear_has_catid();
}
inline ::google::protobuf::uint32 HireCatPetCmd::catid() const {
  // @@protoc_insertion_point(field_get:Cmd.HireCatPetCmd.catid)
  return catid_;
}
inline void HireCatPetCmd::set_catid(::google::protobuf::uint32 value) {
  set_has_catid();
  catid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.HireCatPetCmd.catid)
}

// optional .Cmd.EEmployType etype = 4 [default = EEMPLOYTYPE_DAY];
inline bool HireCatPetCmd::has_etype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HireCatPetCmd::set_has_etype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HireCatPetCmd::clear_has_etype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HireCatPetCmd::clear_etype() {
  etype_ = 1;
  clear_has_etype();
}
inline ::Cmd::EEmployType HireCatPetCmd::etype() const {
  // @@protoc_insertion_point(field_get:Cmd.HireCatPetCmd.etype)
  return static_cast< ::Cmd::EEmployType >(etype_);
}
inline void HireCatPetCmd::set_etype(::Cmd::EEmployType value) {
  assert(::Cmd::EEmployType_IsValid(value));
  set_has_etype();
  etype_ = value;
  // @@protoc_insertion_point(field_set:Cmd.HireCatPetCmd.etype)
}

// -------------------------------------------------------------------

// EggHatchPetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool EggHatchPetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EggHatchPetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EggHatchPetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EggHatchPetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command EggHatchPetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.EggHatchPetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void EggHatchPetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EggHatchPetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_HATCH_EGG];
inline bool EggHatchPetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EggHatchPetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EggHatchPetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EggHatchPetCmd::clear_param() {
  param_ = 4;
  clear_has_param();
}
inline ::Cmd::PetParam EggHatchPetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.EggHatchPetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void EggHatchPetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EggHatchPetCmd.param)
}

// optional string name = 3;
inline bool EggHatchPetCmd::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EggHatchPetCmd::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EggHatchPetCmd::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EggHatchPetCmd::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& EggHatchPetCmd::name() const {
  // @@protoc_insertion_point(field_get:Cmd.EggHatchPetCmd.name)
  return *name_;
}
inline void EggHatchPetCmd::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.EggHatchPetCmd.name)
}
inline void EggHatchPetCmd::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.EggHatchPetCmd.name)
}
inline void EggHatchPetCmd::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.EggHatchPetCmd.name)
}
inline ::std::string* EggHatchPetCmd::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.EggHatchPetCmd.name)
  return name_;
}
inline ::std::string* EggHatchPetCmd::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void EggHatchPetCmd::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.EggHatchPetCmd.name)
}

// optional string guid = 4;
inline bool EggHatchPetCmd::has_guid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EggHatchPetCmd::set_has_guid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EggHatchPetCmd::clear_has_guid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EggHatchPetCmd::clear_guid() {
  if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_->clear();
  }
  clear_has_guid();
}
inline const ::std::string& EggHatchPetCmd::guid() const {
  // @@protoc_insertion_point(field_get:Cmd.EggHatchPetCmd.guid)
  return *guid_;
}
inline void EggHatchPetCmd::set_guid(const ::std::string& value) {
  set_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_ = new ::std::string;
  }
  guid_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.EggHatchPetCmd.guid)
}
inline void EggHatchPetCmd::set_guid(const char* value) {
  set_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_ = new ::std::string;
  }
  guid_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.EggHatchPetCmd.guid)
}
inline void EggHatchPetCmd::set_guid(const char* value, size_t size) {
  set_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_ = new ::std::string;
  }
  guid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.EggHatchPetCmd.guid)
}
inline ::std::string* EggHatchPetCmd::mutable_guid() {
  set_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.EggHatchPetCmd.guid)
  return guid_;
}
inline ::std::string* EggHatchPetCmd::release_guid() {
  clear_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guid_;
    guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void EggHatchPetCmd::set_allocated_guid(::std::string* guid) {
  if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guid_;
  }
  if (guid) {
    set_has_guid();
    guid_ = guid;
  } else {
    clear_has_guid();
    guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.EggHatchPetCmd.guid)
}

// -------------------------------------------------------------------

// EggRestorePetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool EggRestorePetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EggRestorePetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EggRestorePetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EggRestorePetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command EggRestorePetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.EggRestorePetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void EggRestorePetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EggRestorePetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_RESTORE_EGG];
inline bool EggRestorePetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EggRestorePetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EggRestorePetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EggRestorePetCmd::clear_param() {
  param_ = 5;
  clear_has_param();
}
inline ::Cmd::PetParam EggRestorePetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.EggRestorePetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void EggRestorePetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EggRestorePetCmd.param)
}

// optional uint32 petid = 3 [default = 0];
inline bool EggRestorePetCmd::has_petid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EggRestorePetCmd::set_has_petid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EggRestorePetCmd::clear_has_petid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EggRestorePetCmd::clear_petid() {
  petid_ = 0u;
  clear_has_petid();
}
inline ::google::protobuf::uint32 EggRestorePetCmd::petid() const {
  // @@protoc_insertion_point(field_get:Cmd.EggRestorePetCmd.petid)
  return petid_;
}
inline void EggRestorePetCmd::set_petid(::google::protobuf::uint32 value) {
  set_has_petid();
  petid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EggRestorePetCmd.petid)
}

// -------------------------------------------------------------------

// CatchValuePetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool CatchValuePetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CatchValuePetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CatchValuePetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CatchValuePetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command CatchValuePetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.CatchValuePetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void CatchValuePetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatchValuePetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_CATCH_VALUE_SYNC];
inline bool CatchValuePetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CatchValuePetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CatchValuePetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CatchValuePetCmd::clear_param() {
  param_ = 6;
  clear_has_param();
}
inline ::Cmd::PetParam CatchValuePetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.CatchValuePetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void CatchValuePetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatchValuePetCmd.param)
}

// required uint64 npcguid = 3;
inline bool CatchValuePetCmd::has_npcguid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CatchValuePetCmd::set_has_npcguid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CatchValuePetCmd::clear_has_npcguid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CatchValuePetCmd::clear_npcguid() {
  npcguid_ = GOOGLE_ULONGLONG(0);
  clear_has_npcguid();
}
inline ::google::protobuf::uint64 CatchValuePetCmd::npcguid() const {
  // @@protoc_insertion_point(field_get:Cmd.CatchValuePetCmd.npcguid)
  return npcguid_;
}
inline void CatchValuePetCmd::set_npcguid(::google::protobuf::uint64 value) {
  set_has_npcguid();
  npcguid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatchValuePetCmd.npcguid)
}

// optional uint32 value = 4 [default = 0];
inline bool CatchValuePetCmd::has_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CatchValuePetCmd::set_has_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CatchValuePetCmd::clear_has_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CatchValuePetCmd::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 CatchValuePetCmd::value() const {
  // @@protoc_insertion_point(field_get:Cmd.CatchValuePetCmd.value)
  return value_;
}
inline void CatchValuePetCmd::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatchValuePetCmd.value)
}

// optional uint32 from_npcid = 5 [default = 0];
inline bool CatchValuePetCmd::has_from_npcid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CatchValuePetCmd::set_has_from_npcid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CatchValuePetCmd::clear_has_from_npcid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CatchValuePetCmd::clear_from_npcid() {
  from_npcid_ = 0u;
  clear_has_from_npcid();
}
inline ::google::protobuf::uint32 CatchValuePetCmd::from_npcid() const {
  // @@protoc_insertion_point(field_get:Cmd.CatchValuePetCmd.from_npcid)
  return from_npcid_;
}
inline void CatchValuePetCmd::set_from_npcid(::google::protobuf::uint32 value) {
  set_has_from_npcid();
  from_npcid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatchValuePetCmd.from_npcid)
}

// -------------------------------------------------------------------

// CatchResultPetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool CatchResultPetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CatchResultPetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CatchResultPetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CatchResultPetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command CatchResultPetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.CatchResultPetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void CatchResultPetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatchResultPetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_CATCH_RESULT];
inline bool CatchResultPetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CatchResultPetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CatchResultPetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CatchResultPetCmd::clear_param() {
  param_ = 7;
  clear_has_param();
}
inline ::Cmd::PetParam CatchResultPetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.CatchResultPetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void CatchResultPetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatchResultPetCmd.param)
}

// optional bool success = 3 [default = false];
inline bool CatchResultPetCmd::has_success() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CatchResultPetCmd::set_has_success() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CatchResultPetCmd::clear_has_success() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CatchResultPetCmd::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CatchResultPetCmd::success() const {
  // @@protoc_insertion_point(field_get:Cmd.CatchResultPetCmd.success)
  return success_;
}
inline void CatchResultPetCmd::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatchResultPetCmd.success)
}

// optional uint64 npcguid = 4 [default = 0];
inline bool CatchResultPetCmd::has_npcguid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CatchResultPetCmd::set_has_npcguid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CatchResultPetCmd::clear_has_npcguid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CatchResultPetCmd::clear_npcguid() {
  npcguid_ = GOOGLE_ULONGLONG(0);
  clear_has_npcguid();
}
inline ::google::protobuf::uint64 CatchResultPetCmd::npcguid() const {
  // @@protoc_insertion_point(field_get:Cmd.CatchResultPetCmd.npcguid)
  return npcguid_;
}
inline void CatchResultPetCmd::set_npcguid(::google::protobuf::uint64 value) {
  set_has_npcguid();
  npcguid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatchResultPetCmd.npcguid)
}

// -------------------------------------------------------------------

// UserPetData

// optional .Cmd.EggData basedata = 1;
inline bool UserPetData::has_basedata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserPetData::set_has_basedata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserPetData::clear_has_basedata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserPetData::clear_basedata() {
  if (basedata_ != NULL) basedata_->::Cmd::EggData::Clear();
  clear_has_basedata();
}
inline const ::Cmd::EggData& UserPetData::basedata() const {
  // @@protoc_insertion_point(field_get:Cmd.UserPetData.basedata)
  return basedata_ != NULL ? *basedata_ : *default_instance_->basedata_;
}
inline ::Cmd::EggData* UserPetData::mutable_basedata() {
  set_has_basedata();
  if (basedata_ == NULL) basedata_ = new ::Cmd::EggData;
  // @@protoc_insertion_point(field_mutable:Cmd.UserPetData.basedata)
  return basedata_;
}
inline ::Cmd::EggData* UserPetData::release_basedata() {
  clear_has_basedata();
  ::Cmd::EggData* temp = basedata_;
  basedata_ = NULL;
  return temp;
}
inline void UserPetData::set_allocated_basedata(::Cmd::EggData* basedata) {
  delete basedata_;
  basedata_ = basedata;
  if (basedata) {
    set_has_basedata();
  } else {
    clear_has_basedata();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.UserPetData.basedata)
}

// optional bool inhand = 2 [default = false];
inline bool UserPetData::has_inhand() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserPetData::set_has_inhand() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserPetData::clear_has_inhand() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserPetData::clear_inhand() {
  inhand_ = false;
  clear_has_inhand();
}
inline bool UserPetData::inhand() const {
  // @@protoc_insertion_point(field_get:Cmd.UserPetData.inhand)
  return inhand_;
}
inline void UserPetData::set_inhand(bool value) {
  set_has_inhand();
  inhand_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserPetData.inhand)
}

// -------------------------------------------------------------------

// CatchPetPetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool CatchPetPetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CatchPetPetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CatchPetPetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CatchPetPetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command CatchPetPetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.CatchPetPetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void CatchPetPetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatchPetPetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_CATCH_PET];
inline bool CatchPetPetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CatchPetPetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CatchPetPetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CatchPetPetCmd::clear_param() {
  param_ = 8;
  clear_has_param();
}
inline ::Cmd::PetParam CatchPetPetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.CatchPetPetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void CatchPetPetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatchPetPetCmd.param)
}

// optional uint64 npcguid = 3 [default = 0];
inline bool CatchPetPetCmd::has_npcguid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CatchPetPetCmd::set_has_npcguid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CatchPetPetCmd::clear_has_npcguid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CatchPetPetCmd::clear_npcguid() {
  npcguid_ = GOOGLE_ULONGLONG(0);
  clear_has_npcguid();
}
inline ::google::protobuf::uint64 CatchPetPetCmd::npcguid() const {
  // @@protoc_insertion_point(field_get:Cmd.CatchPetPetCmd.npcguid)
  return npcguid_;
}
inline void CatchPetPetCmd::set_npcguid(::google::protobuf::uint64 value) {
  set_has_npcguid();
  npcguid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatchPetPetCmd.npcguid)
}

// optional bool isstop = 4 [default = false];
inline bool CatchPetPetCmd::has_isstop() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CatchPetPetCmd::set_has_isstop() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CatchPetPetCmd::clear_has_isstop() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CatchPetPetCmd::clear_isstop() {
  isstop_ = false;
  clear_has_isstop();
}
inline bool CatchPetPetCmd::isstop() const {
  // @@protoc_insertion_point(field_get:Cmd.CatchPetPetCmd.isstop)
  return isstop_;
}
inline void CatchPetPetCmd::set_isstop(bool value) {
  set_has_isstop();
  isstop_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatchPetPetCmd.isstop)
}

// -------------------------------------------------------------------

// CatchPetGiftPetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool CatchPetGiftPetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CatchPetGiftPetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CatchPetGiftPetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CatchPetGiftPetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command CatchPetGiftPetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.CatchPetGiftPetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void CatchPetGiftPetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatchPetGiftPetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_CATCH_GIFT];
inline bool CatchPetGiftPetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CatchPetGiftPetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CatchPetGiftPetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CatchPetGiftPetCmd::clear_param() {
  param_ = 12;
  clear_has_param();
}
inline ::Cmd::PetParam CatchPetGiftPetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.CatchPetGiftPetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void CatchPetGiftPetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatchPetGiftPetCmd.param)
}

// optional uint64 npcguid = 3 [default = 0];
inline bool CatchPetGiftPetCmd::has_npcguid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CatchPetGiftPetCmd::set_has_npcguid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CatchPetGiftPetCmd::clear_has_npcguid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CatchPetGiftPetCmd::clear_npcguid() {
  npcguid_ = GOOGLE_ULONGLONG(0);
  clear_has_npcguid();
}
inline ::google::protobuf::uint64 CatchPetGiftPetCmd::npcguid() const {
  // @@protoc_insertion_point(field_get:Cmd.CatchPetGiftPetCmd.npcguid)
  return npcguid_;
}
inline void CatchPetGiftPetCmd::set_npcguid(::google::protobuf::uint64 value) {
  set_has_npcguid();
  npcguid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatchPetGiftPetCmd.npcguid)
}

// -------------------------------------------------------------------

// PetMemberData

// optional .Cmd.EPetDataType etype = 1 [default = EPETDATA_MIN];
inline bool PetMemberData::has_etype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetMemberData::set_has_etype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetMemberData::clear_has_etype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetMemberData::clear_etype() {
  etype_ = 0;
  clear_has_etype();
}
inline ::Cmd::EPetDataType PetMemberData::etype() const {
  // @@protoc_insertion_point(field_get:Cmd.PetMemberData.etype)
  return static_cast< ::Cmd::EPetDataType >(etype_);
}
inline void PetMemberData::set_etype(::Cmd::EPetDataType value) {
  assert(::Cmd::EPetDataType_IsValid(value));
  set_has_etype();
  etype_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetMemberData.etype)
}

// optional uint64 value = 2 [default = 0];
inline bool PetMemberData::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetMemberData::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetMemberData::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetMemberData::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 PetMemberData::value() const {
  // @@protoc_insertion_point(field_get:Cmd.PetMemberData.value)
  return value_;
}
inline void PetMemberData::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetMemberData.value)
}

// repeated uint32 values = 3;
inline int PetMemberData::values_size() const {
  return values_.size();
}
inline void PetMemberData::clear_values() {
  values_.Clear();
}
inline ::google::protobuf::uint32 PetMemberData::values(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.PetMemberData.values)
  return values_.Get(index);
}
inline void PetMemberData::set_values(int index, ::google::protobuf::uint32 value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.PetMemberData.values)
}
inline void PetMemberData::add_values(::google::protobuf::uint32 value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.PetMemberData.values)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PetMemberData::values() const {
  // @@protoc_insertion_point(field_list:Cmd.PetMemberData.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PetMemberData::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.PetMemberData.values)
  return &values_;
}

// optional string data = 4;
inline bool PetMemberData::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PetMemberData::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PetMemberData::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PetMemberData::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& PetMemberData::data() const {
  // @@protoc_insertion_point(field_get:Cmd.PetMemberData.data)
  return *data_;
}
inline void PetMemberData::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.PetMemberData.data)
}
inline void PetMemberData::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.PetMemberData.data)
}
inline void PetMemberData::set_data(const char* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.PetMemberData.data)
}
inline ::std::string* PetMemberData::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.PetMemberData.data)
  return data_;
}
inline ::std::string* PetMemberData::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PetMemberData::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.PetMemberData.data)
}

// -------------------------------------------------------------------

// PetInfo

// optional uint64 guid = 1 [default = 0];
inline bool PetInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 PetInfo::guid() const {
  // @@protoc_insertion_point(field_get:Cmd.PetInfo.guid)
  return guid_;
}
inline void PetInfo::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetInfo.guid)
}

// optional uint64 exp = 2 [default = 0];
inline bool PetInfo::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetInfo::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetInfo::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetInfo::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::uint64 PetInfo::exp() const {
  // @@protoc_insertion_point(field_get:Cmd.PetInfo.exp)
  return exp_;
}
inline void PetInfo::set_exp(::google::protobuf::uint64 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetInfo.exp)
}

// optional uint64 friendexp = 3 [default = 0];
inline bool PetInfo::has_friendexp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PetInfo::set_has_friendexp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PetInfo::clear_has_friendexp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PetInfo::clear_friendexp() {
  friendexp_ = GOOGLE_ULONGLONG(0);
  clear_has_friendexp();
}
inline ::google::protobuf::uint64 PetInfo::friendexp() const {
  // @@protoc_insertion_point(field_get:Cmd.PetInfo.friendexp)
  return friendexp_;
}
inline void PetInfo::set_friendexp(::google::protobuf::uint64 value) {
  set_has_friendexp();
  friendexp_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetInfo.friendexp)
}

// optional uint64 rewardexp = 4 [default = 0];
inline bool PetInfo::has_rewardexp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PetInfo::set_has_rewardexp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PetInfo::clear_has_rewardexp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PetInfo::clear_rewardexp() {
  rewardexp_ = GOOGLE_ULONGLONG(0);
  clear_has_rewardexp();
}
inline ::google::protobuf::uint64 PetInfo::rewardexp() const {
  // @@protoc_insertion_point(field_get:Cmd.PetInfo.rewardexp)
  return rewardexp_;
}
inline void PetInfo::set_rewardexp(::google::protobuf::uint64 value) {
  set_has_rewardexp();
  rewardexp_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetInfo.rewardexp)
}

// required uint32 petid = 5;
inline bool PetInfo::has_petid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PetInfo::set_has_petid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PetInfo::clear_has_petid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PetInfo::clear_petid() {
  petid_ = 0u;
  clear_has_petid();
}
inline ::google::protobuf::uint32 PetInfo::petid() const {
  // @@protoc_insertion_point(field_get:Cmd.PetInfo.petid)
  return petid_;
}
inline void PetInfo::set_petid(::google::protobuf::uint32 value) {
  set_has_petid();
  petid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetInfo.petid)
}

// required string name = 6;
inline bool PetInfo::has_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PetInfo::set_has_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PetInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PetInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PetInfo::name() const {
  // @@protoc_insertion_point(field_get:Cmd.PetInfo.name)
  return *name_;
}
inline void PetInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.PetInfo.name)
}
inline void PetInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.PetInfo.name)
}
inline void PetInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.PetInfo.name)
}
inline ::std::string* PetInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.PetInfo.name)
  return name_;
}
inline ::std::string* PetInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PetInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.PetInfo.name)
}

// optional uint32 lv = 7 [default = 0];
inline bool PetInfo::has_lv() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PetInfo::set_has_lv() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PetInfo::clear_has_lv() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PetInfo::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 PetInfo::lv() const {
  // @@protoc_insertion_point(field_get:Cmd.PetInfo.lv)
  return lv_;
}
inline void PetInfo::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetInfo.lv)
}

// optional uint32 friendlv = 8 [default = 0];
inline bool PetInfo::has_friendlv() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PetInfo::set_has_friendlv() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PetInfo::clear_has_friendlv() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PetInfo::clear_friendlv() {
  friendlv_ = 0u;
  clear_has_friendlv();
}
inline ::google::protobuf::uint32 PetInfo::friendlv() const {
  // @@protoc_insertion_point(field_get:Cmd.PetInfo.friendlv)
  return friendlv_;
}
inline void PetInfo::set_friendlv(::google::protobuf::uint32 value) {
  set_has_friendlv();
  friendlv_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetInfo.friendlv)
}

// optional uint32 relivetime = 9 [default = 0];
inline bool PetInfo::has_relivetime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PetInfo::set_has_relivetime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PetInfo::clear_has_relivetime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PetInfo::clear_relivetime() {
  relivetime_ = 0u;
  clear_has_relivetime();
}
inline ::google::protobuf::uint32 PetInfo::relivetime() const {
  // @@protoc_insertion_point(field_get:Cmd.PetInfo.relivetime)
  return relivetime_;
}
inline void PetInfo::set_relivetime(::google::protobuf::uint32 value) {
  set_has_relivetime();
  relivetime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetInfo.relivetime)
}

// optional uint32 body = 10 [default = 0];
inline bool PetInfo::has_body() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PetInfo::set_has_body() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PetInfo::clear_has_body() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PetInfo::clear_body() {
  body_ = 0u;
  clear_has_body();
}
inline ::google::protobuf::uint32 PetInfo::body() const {
  // @@protoc_insertion_point(field_get:Cmd.PetInfo.body)
  return body_;
}
inline void PetInfo::set_body(::google::protobuf::uint32 value) {
  set_has_body();
  body_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetInfo.body)
}

// optional uint32 time_happly = 11 [default = 0];
inline bool PetInfo::has_time_happly() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PetInfo::set_has_time_happly() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PetInfo::clear_has_time_happly() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PetInfo::clear_time_happly() {
  time_happly_ = 0u;
  clear_has_time_happly();
}
inline ::google::protobuf::uint32 PetInfo::time_happly() const {
  // @@protoc_insertion_point(field_get:Cmd.PetInfo.time_happly)
  return time_happly_;
}
inline void PetInfo::set_time_happly(::google::protobuf::uint32 value) {
  set_has_time_happly();
  time_happly_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetInfo.time_happly)
}

// optional uint32 time_excite = 12 [default = 0];
inline bool PetInfo::has_time_excite() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PetInfo::set_has_time_excite() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PetInfo::clear_has_time_excite() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PetInfo::clear_time_excite() {
  time_excite_ = 0u;
  clear_has_time_excite();
}
inline ::google::protobuf::uint32 PetInfo::time_excite() const {
  // @@protoc_insertion_point(field_get:Cmd.PetInfo.time_excite)
  return time_excite_;
}
inline void PetInfo::set_time_excite(::google::protobuf::uint32 value) {
  set_has_time_excite();
  time_excite_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetInfo.time_excite)
}

// optional uint32 time_happiness = 13 [default = 0];
inline bool PetInfo::has_time_happiness() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PetInfo::set_has_time_happiness() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PetInfo::clear_has_time_happiness() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PetInfo::clear_time_happiness() {
  time_happiness_ = 0u;
  clear_has_time_happiness();
}
inline ::google::protobuf::uint32 PetInfo::time_happiness() const {
  // @@protoc_insertion_point(field_get:Cmd.PetInfo.time_happiness)
  return time_happiness_;
}
inline void PetInfo::set_time_happiness(::google::protobuf::uint32 value) {
  set_has_time_happiness();
  time_happiness_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetInfo.time_happiness)
}

// repeated uint32 unlock_equip = 14;
inline int PetInfo::unlock_equip_size() const {
  return unlock_equip_.size();
}
inline void PetInfo::clear_unlock_equip() {
  unlock_equip_.Clear();
}
inline ::google::protobuf::uint32 PetInfo::unlock_equip(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.PetInfo.unlock_equip)
  return unlock_equip_.Get(index);
}
inline void PetInfo::set_unlock_equip(int index, ::google::protobuf::uint32 value) {
  unlock_equip_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.PetInfo.unlock_equip)
}
inline void PetInfo::add_unlock_equip(::google::protobuf::uint32 value) {
  unlock_equip_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.PetInfo.unlock_equip)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PetInfo::unlock_equip() const {
  // @@protoc_insertion_point(field_list:Cmd.PetInfo.unlock_equip)
  return unlock_equip_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PetInfo::mutable_unlock_equip() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.PetInfo.unlock_equip)
  return &unlock_equip_;
}

// repeated uint32 unlock_body = 15;
inline int PetInfo::unlock_body_size() const {
  return unlock_body_.size();
}
inline void PetInfo::clear_unlock_body() {
  unlock_body_.Clear();
}
inline ::google::protobuf::uint32 PetInfo::unlock_body(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.PetInfo.unlock_body)
  return unlock_body_.Get(index);
}
inline void PetInfo::set_unlock_body(int index, ::google::protobuf::uint32 value) {
  unlock_body_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.PetInfo.unlock_body)
}
inline void PetInfo::add_unlock_body(::google::protobuf::uint32 value) {
  unlock_body_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.PetInfo.unlock_body)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PetInfo::unlock_body() const {
  // @@protoc_insertion_point(field_list:Cmd.PetInfo.unlock_body)
  return unlock_body_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PetInfo::mutable_unlock_body() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.PetInfo.unlock_body)
  return &unlock_body_;
}

// repeated uint32 skills = 16;
inline int PetInfo::skills_size() const {
  return skills_.size();
}
inline void PetInfo::clear_skills() {
  skills_.Clear();
}
inline ::google::protobuf::uint32 PetInfo::skills(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.PetInfo.skills)
  return skills_.Get(index);
}
inline void PetInfo::set_skills(int index, ::google::protobuf::uint32 value) {
  skills_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.PetInfo.skills)
}
inline void PetInfo::add_skills(::google::protobuf::uint32 value) {
  skills_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.PetInfo.skills)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PetInfo::skills() const {
  // @@protoc_insertion_point(field_list:Cmd.PetInfo.skills)
  return skills_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PetInfo::mutable_skills() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.PetInfo.skills)
  return &skills_;
}

// repeated .Cmd.ItemData equips = 17;
inline int PetInfo::equips_size() const {
  return equips_.size();
}
inline void PetInfo::clear_equips() {
  equips_.Clear();
}
inline const ::Cmd::ItemData& PetInfo::equips(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.PetInfo.equips)
  return equips_.Get(index);
}
inline ::Cmd::ItemData* PetInfo::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.PetInfo.equips)
  return equips_.Mutable(index);
}
inline ::Cmd::ItemData* PetInfo::add_equips() {
  // @@protoc_insertion_point(field_add:Cmd.PetInfo.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
PetInfo::equips() const {
  // @@protoc_insertion_point(field_list:Cmd.PetInfo.equips)
  return equips_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
PetInfo::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.PetInfo.equips)
  return &equips_;
}

// optional bool skilloff = 18 [default = false];
inline bool PetInfo::has_skilloff() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void PetInfo::set_has_skilloff() {
  _has_bits_[0] |= 0x00020000u;
}
inline void PetInfo::clear_has_skilloff() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void PetInfo::clear_skilloff() {
  skilloff_ = false;
  clear_has_skilloff();
}
inline bool PetInfo::skilloff() const {
  // @@protoc_insertion_point(field_get:Cmd.PetInfo.skilloff)
  return skilloff_;
}
inline void PetInfo::set_skilloff(bool value) {
  set_has_skilloff();
  skilloff_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetInfo.skilloff)
}

// -------------------------------------------------------------------

// PetInfoPetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool PetInfoPetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetInfoPetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetInfoPetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetInfoPetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command PetInfoPetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.PetInfoPetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void PetInfoPetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetInfoPetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_PETINFO];
inline bool PetInfoPetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetInfoPetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetInfoPetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetInfoPetCmd::clear_param() {
  param_ = 9;
  clear_has_param();
}
inline ::Cmd::PetParam PetInfoPetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.PetInfoPetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void PetInfoPetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetInfoPetCmd.param)
}

// repeated .Cmd.PetInfo petinfo = 3;
inline int PetInfoPetCmd::petinfo_size() const {
  return petinfo_.size();
}
inline void PetInfoPetCmd::clear_petinfo() {
  petinfo_.Clear();
}
inline const ::Cmd::PetInfo& PetInfoPetCmd::petinfo(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.PetInfoPetCmd.petinfo)
  return petinfo_.Get(index);
}
inline ::Cmd::PetInfo* PetInfoPetCmd::mutable_petinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.PetInfoPetCmd.petinfo)
  return petinfo_.Mutable(index);
}
inline ::Cmd::PetInfo* PetInfoPetCmd::add_petinfo() {
  // @@protoc_insertion_point(field_add:Cmd.PetInfoPetCmd.petinfo)
  return petinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::PetInfo >&
PetInfoPetCmd::petinfo() const {
  // @@protoc_insertion_point(field_list:Cmd.PetInfoPetCmd.petinfo)
  return petinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::PetInfo >*
PetInfoPetCmd::mutable_petinfo() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.PetInfoPetCmd.petinfo)
  return &petinfo_;
}

// -------------------------------------------------------------------

// PetInfoUpdatePetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool PetInfoUpdatePetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetInfoUpdatePetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetInfoUpdatePetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetInfoUpdatePetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command PetInfoUpdatePetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.PetInfoUpdatePetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void PetInfoUpdatePetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetInfoUpdatePetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_PETINFO_UPDATE];
inline bool PetInfoUpdatePetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetInfoUpdatePetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetInfoUpdatePetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetInfoUpdatePetCmd::clear_param() {
  param_ = 10;
  clear_has_param();
}
inline ::Cmd::PetParam PetInfoUpdatePetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.PetInfoUpdatePetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void PetInfoUpdatePetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetInfoUpdatePetCmd.param)
}

// required uint32 petid = 3;
inline bool PetInfoUpdatePetCmd::has_petid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PetInfoUpdatePetCmd::set_has_petid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PetInfoUpdatePetCmd::clear_has_petid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PetInfoUpdatePetCmd::clear_petid() {
  petid_ = 0u;
  clear_has_petid();
}
inline ::google::protobuf::uint32 PetInfoUpdatePetCmd::petid() const {
  // @@protoc_insertion_point(field_get:Cmd.PetInfoUpdatePetCmd.petid)
  return petid_;
}
inline void PetInfoUpdatePetCmd::set_petid(::google::protobuf::uint32 value) {
  set_has_petid();
  petid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetInfoUpdatePetCmd.petid)
}

// repeated .Cmd.PetMemberData datas = 4;
inline int PetInfoUpdatePetCmd::datas_size() const {
  return datas_.size();
}
inline void PetInfoUpdatePetCmd::clear_datas() {
  datas_.Clear();
}
inline const ::Cmd::PetMemberData& PetInfoUpdatePetCmd::datas(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.PetInfoUpdatePetCmd.datas)
  return datas_.Get(index);
}
inline ::Cmd::PetMemberData* PetInfoUpdatePetCmd::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.PetInfoUpdatePetCmd.datas)
  return datas_.Mutable(index);
}
inline ::Cmd::PetMemberData* PetInfoUpdatePetCmd::add_datas() {
  // @@protoc_insertion_point(field_add:Cmd.PetInfoUpdatePetCmd.datas)
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::PetMemberData >&
PetInfoUpdatePetCmd::datas() const {
  // @@protoc_insertion_point(field_list:Cmd.PetInfoUpdatePetCmd.datas)
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::PetMemberData >*
PetInfoUpdatePetCmd::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.PetInfoUpdatePetCmd.datas)
  return &datas_;
}

// -------------------------------------------------------------------

// PetOffPetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool PetOffPetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetOffPetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetOffPetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetOffPetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command PetOffPetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.PetOffPetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void PetOffPetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetOffPetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_OFF_PET];
inline bool PetOffPetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetOffPetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetOffPetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetOffPetCmd::clear_param() {
  param_ = 11;
  clear_has_param();
}
inline ::Cmd::PetParam PetOffPetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.PetOffPetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void PetOffPetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetOffPetCmd.param)
}

// required uint32 petid = 3;
inline bool PetOffPetCmd::has_petid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PetOffPetCmd::set_has_petid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PetOffPetCmd::clear_has_petid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PetOffPetCmd::clear_petid() {
  petid_ = 0u;
  clear_has_petid();
}
inline ::google::protobuf::uint32 PetOffPetCmd::petid() const {
  // @@protoc_insertion_point(field_get:Cmd.PetOffPetCmd.petid)
  return petid_;
}
inline void PetOffPetCmd::set_petid(::google::protobuf::uint32 value) {
  set_has_petid();
  petid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetOffPetCmd.petid)
}

// -------------------------------------------------------------------

// GetGiftPetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool GetGiftPetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGiftPetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGiftPetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGiftPetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command GetGiftPetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GetGiftPetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GetGiftPetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetGiftPetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_GET_GIFT];
inline bool GetGiftPetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGiftPetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGiftPetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGiftPetCmd::clear_param() {
  param_ = 13;
  clear_has_param();
}
inline ::Cmd::PetParam GetGiftPetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GetGiftPetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void GetGiftPetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetGiftPetCmd.param)
}

// optional uint32 petid = 3 [default = 0];
inline bool GetGiftPetCmd::has_petid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetGiftPetCmd::set_has_petid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetGiftPetCmd::clear_has_petid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetGiftPetCmd::clear_petid() {
  petid_ = 0u;
  clear_has_petid();
}
inline ::google::protobuf::uint32 GetGiftPetCmd::petid() const {
  // @@protoc_insertion_point(field_get:Cmd.GetGiftPetCmd.petid)
  return petid_;
}
inline void GetGiftPetCmd::set_petid(::google::protobuf::uint32 value) {
  set_has_petid();
  petid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetGiftPetCmd.petid)
}

// -------------------------------------------------------------------

// EquipOperPetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool EquipOperPetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipOperPetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipOperPetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipOperPetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command EquipOperPetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.EquipOperPetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void EquipOperPetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EquipOperPetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_EQUIP_OPER];
inline bool EquipOperPetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipOperPetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipOperPetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipOperPetCmd::clear_param() {
  param_ = 14;
  clear_has_param();
}
inline ::Cmd::PetParam EquipOperPetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.EquipOperPetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void EquipOperPetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EquipOperPetCmd.param)
}

// optional .Cmd.EPetEquipOper oper = 3 [default = EPETEQUIPOPER_MIN];
inline bool EquipOperPetCmd::has_oper() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipOperPetCmd::set_has_oper() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipOperPetCmd::clear_has_oper() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipOperPetCmd::clear_oper() {
  oper_ = 0;
  clear_has_oper();
}
inline ::Cmd::EPetEquipOper EquipOperPetCmd::oper() const {
  // @@protoc_insertion_point(field_get:Cmd.EquipOperPetCmd.oper)
  return static_cast< ::Cmd::EPetEquipOper >(oper_);
}
inline void EquipOperPetCmd::set_oper(::Cmd::EPetEquipOper value) {
  assert(::Cmd::EPetEquipOper_IsValid(value));
  set_has_oper();
  oper_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EquipOperPetCmd.oper)
}

// optional uint32 petid = 4 [default = 0];
inline bool EquipOperPetCmd::has_petid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EquipOperPetCmd::set_has_petid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EquipOperPetCmd::clear_has_petid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EquipOperPetCmd::clear_petid() {
  petid_ = 0u;
  clear_has_petid();
}
inline ::google::protobuf::uint32 EquipOperPetCmd::petid() const {
  // @@protoc_insertion_point(field_get:Cmd.EquipOperPetCmd.petid)
  return petid_;
}
inline void EquipOperPetCmd::set_petid(::google::protobuf::uint32 value) {
  set_has_petid();
  petid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EquipOperPetCmd.petid)
}

// optional string guid = 5;
inline bool EquipOperPetCmd::has_guid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EquipOperPetCmd::set_has_guid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EquipOperPetCmd::clear_has_guid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EquipOperPetCmd::clear_guid() {
  if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_->clear();
  }
  clear_has_guid();
}
inline const ::std::string& EquipOperPetCmd::guid() const {
  // @@protoc_insertion_point(field_get:Cmd.EquipOperPetCmd.guid)
  return *guid_;
}
inline void EquipOperPetCmd::set_guid(const ::std::string& value) {
  set_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_ = new ::std::string;
  }
  guid_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.EquipOperPetCmd.guid)
}
inline void EquipOperPetCmd::set_guid(const char* value) {
  set_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_ = new ::std::string;
  }
  guid_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.EquipOperPetCmd.guid)
}
inline void EquipOperPetCmd::set_guid(const char* value, size_t size) {
  set_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_ = new ::std::string;
  }
  guid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.EquipOperPetCmd.guid)
}
inline ::std::string* EquipOperPetCmd::mutable_guid() {
  set_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.EquipOperPetCmd.guid)
  return guid_;
}
inline ::std::string* EquipOperPetCmd::release_guid() {
  clear_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guid_;
    guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void EquipOperPetCmd::set_allocated_guid(::std::string* guid) {
  if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guid_;
  }
  if (guid) {
    set_has_guid();
    guid_ = guid;
  } else {
    clear_has_guid();
    guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.EquipOperPetCmd.guid)
}

// -------------------------------------------------------------------

// EquipUpdatePetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool EquipUpdatePetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipUpdatePetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipUpdatePetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipUpdatePetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command EquipUpdatePetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.EquipUpdatePetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void EquipUpdatePetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EquipUpdatePetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_EQUIP_UPDATE];
inline bool EquipUpdatePetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipUpdatePetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipUpdatePetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipUpdatePetCmd::clear_param() {
  param_ = 15;
  clear_has_param();
}
inline ::Cmd::PetParam EquipUpdatePetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.EquipUpdatePetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void EquipUpdatePetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EquipUpdatePetCmd.param)
}

// optional uint32 petid = 3 [default = 0];
inline bool EquipUpdatePetCmd::has_petid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipUpdatePetCmd::set_has_petid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipUpdatePetCmd::clear_has_petid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipUpdatePetCmd::clear_petid() {
  petid_ = 0u;
  clear_has_petid();
}
inline ::google::protobuf::uint32 EquipUpdatePetCmd::petid() const {
  // @@protoc_insertion_point(field_get:Cmd.EquipUpdatePetCmd.petid)
  return petid_;
}
inline void EquipUpdatePetCmd::set_petid(::google::protobuf::uint32 value) {
  set_has_petid();
  petid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EquipUpdatePetCmd.petid)
}

// optional .Cmd.ItemData update = 4;
inline bool EquipUpdatePetCmd::has_update() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EquipUpdatePetCmd::set_has_update() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EquipUpdatePetCmd::clear_has_update() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EquipUpdatePetCmd::clear_update() {
  if (update_ != NULL) update_->::Cmd::ItemData::Clear();
  clear_has_update();
}
inline const ::Cmd::ItemData& EquipUpdatePetCmd::update() const {
  // @@protoc_insertion_point(field_get:Cmd.EquipUpdatePetCmd.update)
  return update_ != NULL ? *update_ : *default_instance_->update_;
}
inline ::Cmd::ItemData* EquipUpdatePetCmd::mutable_update() {
  set_has_update();
  if (update_ == NULL) update_ = new ::Cmd::ItemData;
  // @@protoc_insertion_point(field_mutable:Cmd.EquipUpdatePetCmd.update)
  return update_;
}
inline ::Cmd::ItemData* EquipUpdatePetCmd::release_update() {
  clear_has_update();
  ::Cmd::ItemData* temp = update_;
  update_ = NULL;
  return temp;
}
inline void EquipUpdatePetCmd::set_allocated_update(::Cmd::ItemData* update) {
  delete update_;
  update_ = update;
  if (update) {
    set_has_update();
  } else {
    clear_has_update();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.EquipUpdatePetCmd.update)
}

// optional string del = 5;
inline bool EquipUpdatePetCmd::has_del() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EquipUpdatePetCmd::set_has_del() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EquipUpdatePetCmd::clear_has_del() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EquipUpdatePetCmd::clear_del() {
  if (del_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    del_->clear();
  }
  clear_has_del();
}
inline const ::std::string& EquipUpdatePetCmd::del() const {
  // @@protoc_insertion_point(field_get:Cmd.EquipUpdatePetCmd.del)
  return *del_;
}
inline void EquipUpdatePetCmd::set_del(const ::std::string& value) {
  set_has_del();
  if (del_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    del_ = new ::std::string;
  }
  del_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.EquipUpdatePetCmd.del)
}
inline void EquipUpdatePetCmd::set_del(const char* value) {
  set_has_del();
  if (del_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    del_ = new ::std::string;
  }
  del_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.EquipUpdatePetCmd.del)
}
inline void EquipUpdatePetCmd::set_del(const char* value, size_t size) {
  set_has_del();
  if (del_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    del_ = new ::std::string;
  }
  del_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.EquipUpdatePetCmd.del)
}
inline ::std::string* EquipUpdatePetCmd::mutable_del() {
  set_has_del();
  if (del_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    del_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.EquipUpdatePetCmd.del)
  return del_;
}
inline ::std::string* EquipUpdatePetCmd::release_del() {
  clear_has_del();
  if (del_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = del_;
    del_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void EquipUpdatePetCmd::set_allocated_del(::std::string* del) {
  if (del_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete del_;
  }
  if (del) {
    set_has_del();
    del_ = del;
  } else {
    clear_has_del();
    del_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.EquipUpdatePetCmd.del)
}

// -------------------------------------------------------------------

// PetAdventureStep

// optional uint32 step = 1 [default = 0];
inline bool PetAdventureStep::has_step() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetAdventureStep::set_has_step() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetAdventureStep::clear_has_step() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetAdventureStep::clear_step() {
  step_ = 0u;
  clear_has_step();
}
inline ::google::protobuf::uint32 PetAdventureStep::step() const {
  // @@protoc_insertion_point(field_get:Cmd.PetAdventureStep.step)
  return step_;
}
inline void PetAdventureStep::set_step(::google::protobuf::uint32 value) {
  set_has_step();
  step_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetAdventureStep.step)
}

// repeated .Cmd.ItemData items = 3;
inline int PetAdventureStep::items_size() const {
  return items_.size();
}
inline void PetAdventureStep::clear_items() {
  items_.Clear();
}
inline const ::Cmd::ItemData& PetAdventureStep::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.PetAdventureStep.items)
  return items_.Get(index);
}
inline ::Cmd::ItemData* PetAdventureStep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.PetAdventureStep.items)
  return items_.Mutable(index);
}
inline ::Cmd::ItemData* PetAdventureStep::add_items() {
  // @@protoc_insertion_point(field_add:Cmd.PetAdventureStep.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
PetAdventureStep::items() const {
  // @@protoc_insertion_point(field_list:Cmd.PetAdventureStep.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
PetAdventureStep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.PetAdventureStep.items)
  return &items_;
}

// -------------------------------------------------------------------

// PetEfficiencyInfo

// required .Cmd.EPetEfficiencyType etype = 1;
inline bool PetEfficiencyInfo::has_etype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetEfficiencyInfo::set_has_etype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetEfficiencyInfo::clear_has_etype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetEfficiencyInfo::clear_etype() {
  etype_ = 0;
  clear_has_etype();
}
inline ::Cmd::EPetEfficiencyType PetEfficiencyInfo::etype() const {
  // @@protoc_insertion_point(field_get:Cmd.PetEfficiencyInfo.etype)
  return static_cast< ::Cmd::EPetEfficiencyType >(etype_);
}
inline void PetEfficiencyInfo::set_etype(::Cmd::EPetEfficiencyType value) {
  assert(::Cmd::EPetEfficiencyType_IsValid(value));
  set_has_etype();
  etype_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetEfficiencyInfo.etype)
}

// optional uint32 fvalue = 2;
inline bool PetEfficiencyInfo::has_fvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetEfficiencyInfo::set_has_fvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetEfficiencyInfo::clear_has_fvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetEfficiencyInfo::clear_fvalue() {
  fvalue_ = 0u;
  clear_has_fvalue();
}
inline ::google::protobuf::uint32 PetEfficiencyInfo::fvalue() const {
  // @@protoc_insertion_point(field_get:Cmd.PetEfficiencyInfo.fvalue)
  return fvalue_;
}
inline void PetEfficiencyInfo::set_fvalue(::google::protobuf::uint32 value) {
  set_has_fvalue();
  fvalue_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetEfficiencyInfo.fvalue)
}

// -------------------------------------------------------------------

// PetMonsterRewardInfo

// optional uint32 monsterid = 1 [default = 0];
inline bool PetMonsterRewardInfo::has_monsterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetMonsterRewardInfo::set_has_monsterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetMonsterRewardInfo::clear_has_monsterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetMonsterRewardInfo::clear_monsterid() {
  monsterid_ = 0u;
  clear_has_monsterid();
}
inline ::google::protobuf::uint32 PetMonsterRewardInfo::monsterid() const {
  // @@protoc_insertion_point(field_get:Cmd.PetMonsterRewardInfo.monsterid)
  return monsterid_;
}
inline void PetMonsterRewardInfo::set_monsterid(::google::protobuf::uint32 value) {
  set_has_monsterid();
  monsterid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetMonsterRewardInfo.monsterid)
}

// repeated .Cmd.ItemData items = 2;
inline int PetMonsterRewardInfo::items_size() const {
  return items_.size();
}
inline void PetMonsterRewardInfo::clear_items() {
  items_.Clear();
}
inline const ::Cmd::ItemData& PetMonsterRewardInfo::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.PetMonsterRewardInfo.items)
  return items_.Get(index);
}
inline ::Cmd::ItemData* PetMonsterRewardInfo::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.PetMonsterRewardInfo.items)
  return items_.Mutable(index);
}
inline ::Cmd::ItemData* PetMonsterRewardInfo::add_items() {
  // @@protoc_insertion_point(field_add:Cmd.PetMonsterRewardInfo.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
PetMonsterRewardInfo::items() const {
  // @@protoc_insertion_point(field_list:Cmd.PetMonsterRewardInfo.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
PetMonsterRewardInfo::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.PetMonsterRewardInfo.items)
  return &items_;
}

// -------------------------------------------------------------------

// PetAdventureItem

// optional uint32 id = 1 [default = 0];
inline bool PetAdventureItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetAdventureItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetAdventureItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetAdventureItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PetAdventureItem::id() const {
  // @@protoc_insertion_point(field_get:Cmd.PetAdventureItem.id)
  return id_;
}
inline void PetAdventureItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetAdventureItem.id)
}

// optional uint32 starttime = 2 [default = 0];
inline bool PetAdventureItem::has_starttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetAdventureItem::set_has_starttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetAdventureItem::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetAdventureItem::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 PetAdventureItem::starttime() const {
  // @@protoc_insertion_point(field_get:Cmd.PetAdventureItem.starttime)
  return starttime_;
}
inline void PetAdventureItem::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetAdventureItem.starttime)
}

// optional .Cmd.EPetAdventureStatus status = 3 [default = EPETADVENTURESTATUS_MIN];
inline bool PetAdventureItem::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PetAdventureItem::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PetAdventureItem::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PetAdventureItem::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::Cmd::EPetAdventureStatus PetAdventureItem::status() const {
  // @@protoc_insertion_point(field_get:Cmd.PetAdventureItem.status)
  return static_cast< ::Cmd::EPetAdventureStatus >(status_);
}
inline void PetAdventureItem::set_status(::Cmd::EPetAdventureStatus value) {
  assert(::Cmd::EPetAdventureStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetAdventureItem.status)
}

// repeated .Cmd.ItemData eggs = 4;
inline int PetAdventureItem::eggs_size() const {
  return eggs_.size();
}
inline void PetAdventureItem::clear_eggs() {
  eggs_.Clear();
}
inline const ::Cmd::ItemData& PetAdventureItem::eggs(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.PetAdventureItem.eggs)
  return eggs_.Get(index);
}
inline ::Cmd::ItemData* PetAdventureItem::mutable_eggs(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.PetAdventureItem.eggs)
  return eggs_.Mutable(index);
}
inline ::Cmd::ItemData* PetAdventureItem::add_eggs() {
  // @@protoc_insertion_point(field_add:Cmd.PetAdventureItem.eggs)
  return eggs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
PetAdventureItem::eggs() const {
  // @@protoc_insertion_point(field_list:Cmd.PetAdventureItem.eggs)
  return eggs_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
PetAdventureItem::mutable_eggs() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.PetAdventureItem.eggs)
  return &eggs_;
}

// repeated .Cmd.PetAdventureStep steps = 5;
inline int PetAdventureItem::steps_size() const {
  return steps_.size();
}
inline void PetAdventureItem::clear_steps() {
  steps_.Clear();
}
inline const ::Cmd::PetAdventureStep& PetAdventureItem::steps(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.PetAdventureItem.steps)
  return steps_.Get(index);
}
inline ::Cmd::PetAdventureStep* PetAdventureItem::mutable_steps(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.PetAdventureItem.steps)
  return steps_.Mutable(index);
}
inline ::Cmd::PetAdventureStep* PetAdventureItem::add_steps() {
  // @@protoc_insertion_point(field_add:Cmd.PetAdventureItem.steps)
  return steps_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::PetAdventureStep >&
PetAdventureItem::steps() const {
  // @@protoc_insertion_point(field_list:Cmd.PetAdventureItem.steps)
  return steps_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::PetAdventureStep >*
PetAdventureItem::mutable_steps() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.PetAdventureItem.steps)
  return &steps_;
}

// repeated .Cmd.ItemData raresreward = 6;
inline int PetAdventureItem::raresreward_size() const {
  return raresreward_.size();
}
inline void PetAdventureItem::clear_raresreward() {
  raresreward_.Clear();
}
inline const ::Cmd::ItemData& PetAdventureItem::raresreward(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.PetAdventureItem.raresreward)
  return raresreward_.Get(index);
}
inline ::Cmd::ItemData* PetAdventureItem::mutable_raresreward(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.PetAdventureItem.raresreward)
  return raresreward_.Mutable(index);
}
inline ::Cmd::ItemData* PetAdventureItem::add_raresreward() {
  // @@protoc_insertion_point(field_add:Cmd.PetAdventureItem.raresreward)
  return raresreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
PetAdventureItem::raresreward() const {
  // @@protoc_insertion_point(field_list:Cmd.PetAdventureItem.raresreward)
  return raresreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
PetAdventureItem::mutable_raresreward() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.PetAdventureItem.raresreward)
  return &raresreward_;
}

// optional uint32 specid = 7 [default = 0];
inline bool PetAdventureItem::has_specid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PetAdventureItem::set_has_specid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PetAdventureItem::clear_has_specid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PetAdventureItem::clear_specid() {
  specid_ = 0u;
  clear_has_specid();
}
inline ::google::protobuf::uint32 PetAdventureItem::specid() const {
  // @@protoc_insertion_point(field_get:Cmd.PetAdventureItem.specid)
  return specid_;
}
inline void PetAdventureItem::set_specid(::google::protobuf::uint32 value) {
  set_has_specid();
  specid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetAdventureItem.specid)
}

// repeated .Cmd.PetEfficiencyInfo eff = 8;
inline int PetAdventureItem::eff_size() const {
  return eff_.size();
}
inline void PetAdventureItem::clear_eff() {
  eff_.Clear();
}
inline const ::Cmd::PetEfficiencyInfo& PetAdventureItem::eff(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.PetAdventureItem.eff)
  return eff_.Get(index);
}
inline ::Cmd::PetEfficiencyInfo* PetAdventureItem::mutable_eff(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.PetAdventureItem.eff)
  return eff_.Mutable(index);
}
inline ::Cmd::PetEfficiencyInfo* PetAdventureItem::add_eff() {
  // @@protoc_insertion_point(field_add:Cmd.PetAdventureItem.eff)
  return eff_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::PetEfficiencyInfo >&
PetAdventureItem::eff() const {
  // @@protoc_insertion_point(field_list:Cmd.PetAdventureItem.eff)
  return eff_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::PetEfficiencyInfo >*
PetAdventureItem::mutable_eff() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.PetAdventureItem.eff)
  return &eff_;
}

// repeated .Cmd.PetMonsterRewardInfo rewardinfo = 9;
inline int PetAdventureItem::rewardinfo_size() const {
  return rewardinfo_.size();
}
inline void PetAdventureItem::clear_rewardinfo() {
  rewardinfo_.Clear();
}
inline const ::Cmd::PetMonsterRewardInfo& PetAdventureItem::rewardinfo(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.PetAdventureItem.rewardinfo)
  return rewardinfo_.Get(index);
}
inline ::Cmd::PetMonsterRewardInfo* PetAdventureItem::mutable_rewardinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.PetAdventureItem.rewardinfo)
  return rewardinfo_.Mutable(index);
}
inline ::Cmd::PetMonsterRewardInfo* PetAdventureItem::add_rewardinfo() {
  // @@protoc_insertion_point(field_add:Cmd.PetAdventureItem.rewardinfo)
  return rewardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::PetMonsterRewardInfo >&
PetAdventureItem::rewardinfo() const {
  // @@protoc_insertion_point(field_list:Cmd.PetAdventureItem.rewardinfo)
  return rewardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::PetMonsterRewardInfo >*
PetAdventureItem::mutable_rewardinfo() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.PetAdventureItem.rewardinfo)
  return &rewardinfo_;
}

// repeated .Cmd.ItemData extrarewardinfo = 10;
inline int PetAdventureItem::extrarewardinfo_size() const {
  return extrarewardinfo_.size();
}
inline void PetAdventureItem::clear_extrarewardinfo() {
  extrarewardinfo_.Clear();
}
inline const ::Cmd::ItemData& PetAdventureItem::extrarewardinfo(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.PetAdventureItem.extrarewardinfo)
  return extrarewardinfo_.Get(index);
}
inline ::Cmd::ItemData* PetAdventureItem::mutable_extrarewardinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.PetAdventureItem.extrarewardinfo)
  return extrarewardinfo_.Mutable(index);
}
inline ::Cmd::ItemData* PetAdventureItem::add_extrarewardinfo() {
  // @@protoc_insertion_point(field_add:Cmd.PetAdventureItem.extrarewardinfo)
  return extrarewardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
PetAdventureItem::extrarewardinfo() const {
  // @@protoc_insertion_point(field_list:Cmd.PetAdventureItem.extrarewardinfo)
  return extrarewardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
PetAdventureItem::mutable_extrarewardinfo() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.PetAdventureItem.extrarewardinfo)
  return &extrarewardinfo_;
}

// -------------------------------------------------------------------

// QueryPetAdventureListPetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool QueryPetAdventureListPetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryPetAdventureListPetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryPetAdventureListPetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryPetAdventureListPetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command QueryPetAdventureListPetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryPetAdventureListPetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryPetAdventureListPetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryPetAdventureListPetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_ADVENTURE_QUERYLIST];
inline bool QueryPetAdventureListPetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryPetAdventureListPetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryPetAdventureListPetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryPetAdventureListPetCmd::clear_param() {
  param_ = 16;
  clear_has_param();
}
inline ::Cmd::PetParam QueryPetAdventureListPetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryPetAdventureListPetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void QueryPetAdventureListPetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryPetAdventureListPetCmd.param)
}

// repeated .Cmd.PetAdventureItem items = 3;
inline int QueryPetAdventureListPetCmd::items_size() const {
  return items_.size();
}
inline void QueryPetAdventureListPetCmd::clear_items() {
  items_.Clear();
}
inline const ::Cmd::PetAdventureItem& QueryPetAdventureListPetCmd::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QueryPetAdventureListPetCmd.items)
  return items_.Get(index);
}
inline ::Cmd::PetAdventureItem* QueryPetAdventureListPetCmd::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.QueryPetAdventureListPetCmd.items)
  return items_.Mutable(index);
}
inline ::Cmd::PetAdventureItem* QueryPetAdventureListPetCmd::add_items() {
  // @@protoc_insertion_point(field_add:Cmd.QueryPetAdventureListPetCmd.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::PetAdventureItem >&
QueryPetAdventureListPetCmd::items() const {
  // @@protoc_insertion_point(field_list:Cmd.QueryPetAdventureListPetCmd.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::PetAdventureItem >*
QueryPetAdventureListPetCmd::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QueryPetAdventureListPetCmd.items)
  return &items_;
}

// -------------------------------------------------------------------

// PetAdventureResultNtfPetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool PetAdventureResultNtfPetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetAdventureResultNtfPetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetAdventureResultNtfPetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetAdventureResultNtfPetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command PetAdventureResultNtfPetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.PetAdventureResultNtfPetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void PetAdventureResultNtfPetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetAdventureResultNtfPetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_ADVENTURE_RESULTNTF];
inline bool PetAdventureResultNtfPetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetAdventureResultNtfPetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetAdventureResultNtfPetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetAdventureResultNtfPetCmd::clear_param() {
  param_ = 17;
  clear_has_param();
}
inline ::Cmd::PetParam PetAdventureResultNtfPetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.PetAdventureResultNtfPetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void PetAdventureResultNtfPetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetAdventureResultNtfPetCmd.param)
}

// optional .Cmd.PetAdventureItem item = 3;
inline bool PetAdventureResultNtfPetCmd::has_item() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PetAdventureResultNtfPetCmd::set_has_item() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PetAdventureResultNtfPetCmd::clear_has_item() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PetAdventureResultNtfPetCmd::clear_item() {
  if (item_ != NULL) item_->::Cmd::PetAdventureItem::Clear();
  clear_has_item();
}
inline const ::Cmd::PetAdventureItem& PetAdventureResultNtfPetCmd::item() const {
  // @@protoc_insertion_point(field_get:Cmd.PetAdventureResultNtfPetCmd.item)
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::Cmd::PetAdventureItem* PetAdventureResultNtfPetCmd::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::Cmd::PetAdventureItem;
  // @@protoc_insertion_point(field_mutable:Cmd.PetAdventureResultNtfPetCmd.item)
  return item_;
}
inline ::Cmd::PetAdventureItem* PetAdventureResultNtfPetCmd::release_item() {
  clear_has_item();
  ::Cmd::PetAdventureItem* temp = item_;
  item_ = NULL;
  return temp;
}
inline void PetAdventureResultNtfPetCmd::set_allocated_item(::Cmd::PetAdventureItem* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.PetAdventureResultNtfPetCmd.item)
}

// -------------------------------------------------------------------

// StartAdventurePetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool StartAdventurePetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartAdventurePetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartAdventurePetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartAdventurePetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command StartAdventurePetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.StartAdventurePetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void StartAdventurePetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartAdventurePetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_ADVENTURE_START];
inline bool StartAdventurePetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StartAdventurePetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StartAdventurePetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StartAdventurePetCmd::clear_param() {
  param_ = 18;
  clear_has_param();
}
inline ::Cmd::PetParam StartAdventurePetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.StartAdventurePetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void StartAdventurePetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartAdventurePetCmd.param)
}

// optional uint32 id = 3 [default = 0];
inline bool StartAdventurePetCmd::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StartAdventurePetCmd::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StartAdventurePetCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StartAdventurePetCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 StartAdventurePetCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.StartAdventurePetCmd.id)
  return id_;
}
inline void StartAdventurePetCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartAdventurePetCmd.id)
}

// repeated string petids = 4;
inline int StartAdventurePetCmd::petids_size() const {
  return petids_.size();
}
inline void StartAdventurePetCmd::clear_petids() {
  petids_.Clear();
}
inline const ::std::string& StartAdventurePetCmd::petids(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.StartAdventurePetCmd.petids)
  return petids_.Get(index);
}
inline ::std::string* StartAdventurePetCmd::mutable_petids(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.StartAdventurePetCmd.petids)
  return petids_.Mutable(index);
}
inline void StartAdventurePetCmd::set_petids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Cmd.StartAdventurePetCmd.petids)
  petids_.Mutable(index)->assign(value);
}
inline void StartAdventurePetCmd::set_petids(int index, const char* value) {
  petids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.StartAdventurePetCmd.petids)
}
inline void StartAdventurePetCmd::set_petids(int index, const char* value, size_t size) {
  petids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.StartAdventurePetCmd.petids)
}
inline ::std::string* StartAdventurePetCmd::add_petids() {
  return petids_.Add();
}
inline void StartAdventurePetCmd::add_petids(const ::std::string& value) {
  petids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Cmd.StartAdventurePetCmd.petids)
}
inline void StartAdventurePetCmd::add_petids(const char* value) {
  petids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Cmd.StartAdventurePetCmd.petids)
}
inline void StartAdventurePetCmd::add_petids(const char* value, size_t size) {
  petids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Cmd.StartAdventurePetCmd.petids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
StartAdventurePetCmd::petids() const {
  // @@protoc_insertion_point(field_list:Cmd.StartAdventurePetCmd.petids)
  return petids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
StartAdventurePetCmd::mutable_petids() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.StartAdventurePetCmd.petids)
  return &petids_;
}

// optional uint32 specid = 5 [default = 0];
inline bool StartAdventurePetCmd::has_specid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StartAdventurePetCmd::set_has_specid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StartAdventurePetCmd::clear_has_specid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StartAdventurePetCmd::clear_specid() {
  specid_ = 0u;
  clear_has_specid();
}
inline ::google::protobuf::uint32 StartAdventurePetCmd::specid() const {
  // @@protoc_insertion_point(field_get:Cmd.StartAdventurePetCmd.specid)
  return specid_;
}
inline void StartAdventurePetCmd::set_specid(::google::protobuf::uint32 value) {
  set_has_specid();
  specid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartAdventurePetCmd.specid)
}

// -------------------------------------------------------------------

// GetAdventureRewardPetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool GetAdventureRewardPetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAdventureRewardPetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAdventureRewardPetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAdventureRewardPetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command GetAdventureRewardPetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GetAdventureRewardPetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GetAdventureRewardPetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetAdventureRewardPetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_ADVENTURE_GETREWARD];
inline bool GetAdventureRewardPetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetAdventureRewardPetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetAdventureRewardPetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetAdventureRewardPetCmd::clear_param() {
  param_ = 19;
  clear_has_param();
}
inline ::Cmd::PetParam GetAdventureRewardPetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GetAdventureRewardPetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void GetAdventureRewardPetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetAdventureRewardPetCmd.param)
}

// optional uint32 id = 3 [default = 0];
inline bool GetAdventureRewardPetCmd::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetAdventureRewardPetCmd::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetAdventureRewardPetCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetAdventureRewardPetCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GetAdventureRewardPetCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.GetAdventureRewardPetCmd.id)
  return id_;
}
inline void GetAdventureRewardPetCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetAdventureRewardPetCmd.id)
}

// -------------------------------------------------------------------

// QueryBattlePetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool QueryBattlePetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryBattlePetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryBattlePetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryBattlePetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command QueryBattlePetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryBattlePetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryBattlePetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryBattlePetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_ADVENTURE_QUERYBATTLEPET];
inline bool QueryBattlePetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryBattlePetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryBattlePetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryBattlePetCmd::clear_param() {
  param_ = 20;
  clear_has_param();
}
inline ::Cmd::PetParam QueryBattlePetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryBattlePetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void QueryBattlePetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryBattlePetCmd.param)
}

// repeated .Cmd.ItemData pets = 3;
inline int QueryBattlePetCmd::pets_size() const {
  return pets_.size();
}
inline void QueryBattlePetCmd::clear_pets() {
  pets_.Clear();
}
inline const ::Cmd::ItemData& QueryBattlePetCmd::pets(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QueryBattlePetCmd.pets)
  return pets_.Get(index);
}
inline ::Cmd::ItemData* QueryBattlePetCmd::mutable_pets(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.QueryBattlePetCmd.pets)
  return pets_.Mutable(index);
}
inline ::Cmd::ItemData* QueryBattlePetCmd::add_pets() {
  // @@protoc_insertion_point(field_add:Cmd.QueryBattlePetCmd.pets)
  return pets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
QueryBattlePetCmd::pets() const {
  // @@protoc_insertion_point(field_list:Cmd.QueryBattlePetCmd.pets)
  return pets_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
QueryBattlePetCmd::mutable_pets() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QueryBattlePetCmd.pets)
  return &pets_;
}

// -------------------------------------------------------------------

// HandPetPetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool HandPetPetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HandPetPetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HandPetPetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HandPetPetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command HandPetPetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.HandPetPetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void HandPetPetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.HandPetPetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_INVITE_HAND];
inline bool HandPetPetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HandPetPetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HandPetPetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HandPetPetCmd::clear_param() {
  param_ = 21;
  clear_has_param();
}
inline ::Cmd::PetParam HandPetPetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.HandPetPetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void HandPetPetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.HandPetPetCmd.param)
}

// required uint64 petguid = 3;
inline bool HandPetPetCmd::has_petguid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HandPetPetCmd::set_has_petguid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HandPetPetCmd::clear_has_petguid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HandPetPetCmd::clear_petguid() {
  petguid_ = GOOGLE_ULONGLONG(0);
  clear_has_petguid();
}
inline ::google::protobuf::uint64 HandPetPetCmd::petguid() const {
  // @@protoc_insertion_point(field_get:Cmd.HandPetPetCmd.petguid)
  return petguid_;
}
inline void HandPetPetCmd::set_petguid(::google::protobuf::uint64 value) {
  set_has_petguid();
  petguid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.HandPetPetCmd.petguid)
}

// optional bool breakup = 4 [default = false];
inline bool HandPetPetCmd::has_breakup() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HandPetPetCmd::set_has_breakup() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HandPetPetCmd::clear_has_breakup() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HandPetPetCmd::clear_breakup() {
  breakup_ = false;
  clear_has_breakup();
}
inline bool HandPetPetCmd::breakup() const {
  // @@protoc_insertion_point(field_get:Cmd.HandPetPetCmd.breakup)
  return breakup_;
}
inline void HandPetPetCmd::set_breakup(bool value) {
  set_has_breakup();
  breakup_ = value;
  // @@protoc_insertion_point(field_set:Cmd.HandPetPetCmd.breakup)
}

// -------------------------------------------------------------------

// GiveGiftPetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool GiveGiftPetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GiveGiftPetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GiveGiftPetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GiveGiftPetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command GiveGiftPetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GiveGiftPetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GiveGiftPetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GiveGiftPetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_GIVE_GIFT];
inline bool GiveGiftPetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GiveGiftPetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GiveGiftPetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GiveGiftPetCmd::clear_param() {
  param_ = 22;
  clear_has_param();
}
inline ::Cmd::PetParam GiveGiftPetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GiveGiftPetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void GiveGiftPetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GiveGiftPetCmd.param)
}

// required uint32 petid = 3;
inline bool GiveGiftPetCmd::has_petid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GiveGiftPetCmd::set_has_petid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GiveGiftPetCmd::clear_has_petid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GiveGiftPetCmd::clear_petid() {
  petid_ = 0u;
  clear_has_petid();
}
inline ::google::protobuf::uint32 GiveGiftPetCmd::petid() const {
  // @@protoc_insertion_point(field_get:Cmd.GiveGiftPetCmd.petid)
  return petid_;
}
inline void GiveGiftPetCmd::set_petid(::google::protobuf::uint32 value) {
  set_has_petid();
  petid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GiveGiftPetCmd.petid)
}

// optional string itemguid = 4;
inline bool GiveGiftPetCmd::has_itemguid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GiveGiftPetCmd::set_has_itemguid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GiveGiftPetCmd::clear_has_itemguid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GiveGiftPetCmd::clear_itemguid() {
  if (itemguid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemguid_->clear();
  }
  clear_has_itemguid();
}
inline const ::std::string& GiveGiftPetCmd::itemguid() const {
  // @@protoc_insertion_point(field_get:Cmd.GiveGiftPetCmd.itemguid)
  return *itemguid_;
}
inline void GiveGiftPetCmd::set_itemguid(const ::std::string& value) {
  set_has_itemguid();
  if (itemguid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemguid_ = new ::std::string;
  }
  itemguid_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GiveGiftPetCmd.itemguid)
}
inline void GiveGiftPetCmd::set_itemguid(const char* value) {
  set_has_itemguid();
  if (itemguid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemguid_ = new ::std::string;
  }
  itemguid_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GiveGiftPetCmd.itemguid)
}
inline void GiveGiftPetCmd::set_itemguid(const char* value, size_t size) {
  set_has_itemguid();
  if (itemguid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemguid_ = new ::std::string;
  }
  itemguid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GiveGiftPetCmd.itemguid)
}
inline ::std::string* GiveGiftPetCmd::mutable_itemguid() {
  set_has_itemguid();
  if (itemguid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemguid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GiveGiftPetCmd.itemguid)
  return itemguid_;
}
inline ::std::string* GiveGiftPetCmd::release_itemguid() {
  clear_has_itemguid();
  if (itemguid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = itemguid_;
    itemguid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GiveGiftPetCmd::set_allocated_itemguid(::std::string* itemguid) {
  if (itemguid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete itemguid_;
  }
  if (itemguid) {
    set_has_itemguid();
    itemguid_ = itemguid;
  } else {
    clear_has_itemguid();
    itemguid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GiveGiftPetCmd.itemguid)
}

// -------------------------------------------------------------------

// UnlockNtfPetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool UnlockNtfPetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnlockNtfPetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnlockNtfPetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnlockNtfPetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command UnlockNtfPetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UnlockNtfPetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UnlockNtfPetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UnlockNtfPetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_UNLOCK_NTF];
inline bool UnlockNtfPetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnlockNtfPetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnlockNtfPetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnlockNtfPetCmd::clear_param() {
  param_ = 23;
  clear_has_param();
}
inline ::Cmd::PetParam UnlockNtfPetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UnlockNtfPetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void UnlockNtfPetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UnlockNtfPetCmd.param)
}

// optional uint32 petid = 3 [default = 0];
inline bool UnlockNtfPetCmd::has_petid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UnlockNtfPetCmd::set_has_petid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UnlockNtfPetCmd::clear_has_petid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UnlockNtfPetCmd::clear_petid() {
  petid_ = 0u;
  clear_has_petid();
}
inline ::google::protobuf::uint32 UnlockNtfPetCmd::petid() const {
  // @@protoc_insertion_point(field_get:Cmd.UnlockNtfPetCmd.petid)
  return petid_;
}
inline void UnlockNtfPetCmd::set_petid(::google::protobuf::uint32 value) {
  set_has_petid();
  petid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UnlockNtfPetCmd.petid)
}

// repeated uint32 equipids = 4;
inline int UnlockNtfPetCmd::equipids_size() const {
  return equipids_.size();
}
inline void UnlockNtfPetCmd::clear_equipids() {
  equipids_.Clear();
}
inline ::google::protobuf::uint32 UnlockNtfPetCmd::equipids(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UnlockNtfPetCmd.equipids)
  return equipids_.Get(index);
}
inline void UnlockNtfPetCmd::set_equipids(int index, ::google::protobuf::uint32 value) {
  equipids_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.UnlockNtfPetCmd.equipids)
}
inline void UnlockNtfPetCmd::add_equipids(::google::protobuf::uint32 value) {
  equipids_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.UnlockNtfPetCmd.equipids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UnlockNtfPetCmd::equipids() const {
  // @@protoc_insertion_point(field_list:Cmd.UnlockNtfPetCmd.equipids)
  return equipids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UnlockNtfPetCmd::mutable_equipids() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UnlockNtfPetCmd.equipids)
  return &equipids_;
}

// repeated uint32 bodys = 5;
inline int UnlockNtfPetCmd::bodys_size() const {
  return bodys_.size();
}
inline void UnlockNtfPetCmd::clear_bodys() {
  bodys_.Clear();
}
inline ::google::protobuf::uint32 UnlockNtfPetCmd::bodys(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UnlockNtfPetCmd.bodys)
  return bodys_.Get(index);
}
inline void UnlockNtfPetCmd::set_bodys(int index, ::google::protobuf::uint32 value) {
  bodys_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.UnlockNtfPetCmd.bodys)
}
inline void UnlockNtfPetCmd::add_bodys(::google::protobuf::uint32 value) {
  bodys_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.UnlockNtfPetCmd.bodys)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UnlockNtfPetCmd::bodys() const {
  // @@protoc_insertion_point(field_list:Cmd.UnlockNtfPetCmd.bodys)
  return bodys_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UnlockNtfPetCmd::mutable_bodys() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UnlockNtfPetCmd.bodys)
  return &bodys_;
}

// -------------------------------------------------------------------

// ResetSkillPetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool ResetSkillPetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResetSkillPetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResetSkillPetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResetSkillPetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command ResetSkillPetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ResetSkillPetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ResetSkillPetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ResetSkillPetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_RESET_SKILL];
inline bool ResetSkillPetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResetSkillPetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResetSkillPetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResetSkillPetCmd::clear_param() {
  param_ = 24;
  clear_has_param();
}
inline ::Cmd::PetParam ResetSkillPetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ResetSkillPetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void ResetSkillPetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ResetSkillPetCmd.param)
}

// optional uint32 id = 3 [default = 0];
inline bool ResetSkillPetCmd::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResetSkillPetCmd::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResetSkillPetCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResetSkillPetCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ResetSkillPetCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.ResetSkillPetCmd.id)
  return id_;
}
inline void ResetSkillPetCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ResetSkillPetCmd.id)
}

// -------------------------------------------------------------------

// ChangeNamePetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool ChangeNamePetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeNamePetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeNamePetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeNamePetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command ChangeNamePetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeNamePetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ChangeNamePetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeNamePetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_CHANGE_NAME];
inline bool ChangeNamePetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeNamePetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeNamePetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeNamePetCmd::clear_param() {
  param_ = 26;
  clear_has_param();
}
inline ::Cmd::PetParam ChangeNamePetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeNamePetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void ChangeNamePetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeNamePetCmd.param)
}

// optional uint32 petid = 3 [default = 0];
inline bool ChangeNamePetCmd::has_petid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChangeNamePetCmd::set_has_petid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChangeNamePetCmd::clear_has_petid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChangeNamePetCmd::clear_petid() {
  petid_ = 0u;
  clear_has_petid();
}
inline ::google::protobuf::uint32 ChangeNamePetCmd::petid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeNamePetCmd.petid)
  return petid_;
}
inline void ChangeNamePetCmd::set_petid(::google::protobuf::uint32 value) {
  set_has_petid();
  petid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeNamePetCmd.petid)
}

// optional string name = 4;
inline bool ChangeNamePetCmd::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChangeNamePetCmd::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChangeNamePetCmd::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChangeNamePetCmd::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ChangeNamePetCmd::name() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeNamePetCmd.name)
  return *name_;
}
inline void ChangeNamePetCmd::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.ChangeNamePetCmd.name)
}
inline void ChangeNamePetCmd::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.ChangeNamePetCmd.name)
}
inline void ChangeNamePetCmd::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.ChangeNamePetCmd.name)
}
inline ::std::string* ChangeNamePetCmd::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.ChangeNamePetCmd.name)
  return name_;
}
inline ::std::string* ChangeNamePetCmd::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ChangeNamePetCmd::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ChangeNamePetCmd.name)
}

// -------------------------------------------------------------------

// SwitchSkillPetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool SwitchSkillPetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SwitchSkillPetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SwitchSkillPetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SwitchSkillPetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command SwitchSkillPetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SwitchSkillPetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SwitchSkillPetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SwitchSkillPetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_SWITCH_SKILL];
inline bool SwitchSkillPetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SwitchSkillPetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SwitchSkillPetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SwitchSkillPetCmd::clear_param() {
  param_ = 27;
  clear_has_param();
}
inline ::Cmd::PetParam SwitchSkillPetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SwitchSkillPetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void SwitchSkillPetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SwitchSkillPetCmd.param)
}

// optional uint32 petid = 3 [default = 0];
inline bool SwitchSkillPetCmd::has_petid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SwitchSkillPetCmd::set_has_petid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SwitchSkillPetCmd::clear_has_petid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SwitchSkillPetCmd::clear_petid() {
  petid_ = 0u;
  clear_has_petid();
}
inline ::google::protobuf::uint32 SwitchSkillPetCmd::petid() const {
  // @@protoc_insertion_point(field_get:Cmd.SwitchSkillPetCmd.petid)
  return petid_;
}
inline void SwitchSkillPetCmd::set_petid(::google::protobuf::uint32 value) {
  set_has_petid();
  petid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SwitchSkillPetCmd.petid)
}

// optional bool open = 4 [default = false];
inline bool SwitchSkillPetCmd::has_open() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SwitchSkillPetCmd::set_has_open() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SwitchSkillPetCmd::clear_has_open() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SwitchSkillPetCmd::clear_open() {
  open_ = false;
  clear_has_open();
}
inline bool SwitchSkillPetCmd::open() const {
  // @@protoc_insertion_point(field_get:Cmd.SwitchSkillPetCmd.open)
  return open_;
}
inline void SwitchSkillPetCmd::set_open(bool value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SwitchSkillPetCmd.open)
}

// -------------------------------------------------------------------

// WorkSpace

// optional uint32 id = 1 [default = 0];
inline bool WorkSpace::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorkSpace::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorkSpace::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorkSpace::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 WorkSpace::id() const {
  // @@protoc_insertion_point(field_get:Cmd.WorkSpace.id)
  return id_;
}
inline void WorkSpace::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WorkSpace.id)
}

// optional uint32 starttime = 2 [default = 0];
inline bool WorkSpace::has_starttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorkSpace::set_has_starttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorkSpace::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorkSpace::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 WorkSpace::starttime() const {
  // @@protoc_insertion_point(field_get:Cmd.WorkSpace.starttime)
  return starttime_;
}
inline void WorkSpace::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WorkSpace.starttime)
}

// optional uint32 lastrewardtime = 7 [default = 0];
inline bool WorkSpace::has_lastrewardtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorkSpace::set_has_lastrewardtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorkSpace::clear_has_lastrewardtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorkSpace::clear_lastrewardtime() {
  lastrewardtime_ = 0u;
  clear_has_lastrewardtime();
}
inline ::google::protobuf::uint32 WorkSpace::lastrewardtime() const {
  // @@protoc_insertion_point(field_get:Cmd.WorkSpace.lastrewardtime)
  return lastrewardtime_;
}
inline void WorkSpace::set_lastrewardtime(::google::protobuf::uint32 value) {
  set_has_lastrewardtime();
  lastrewardtime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WorkSpace.lastrewardtime)
}

// optional bool unlock = 3 [default = false];
inline bool WorkSpace::has_unlock() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorkSpace::set_has_unlock() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorkSpace::clear_has_unlock() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorkSpace::clear_unlock() {
  unlock_ = false;
  clear_has_unlock();
}
inline bool WorkSpace::unlock() const {
  // @@protoc_insertion_point(field_get:Cmd.WorkSpace.unlock)
  return unlock_;
}
inline void WorkSpace::set_unlock(bool value) {
  set_has_unlock();
  unlock_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WorkSpace.unlock)
}

// optional .Cmd.EWorkState state = 4 [default = EWORKSTATE_MIN];
inline bool WorkSpace::has_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WorkSpace::set_has_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WorkSpace::clear_has_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WorkSpace::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::Cmd::EWorkState WorkSpace::state() const {
  // @@protoc_insertion_point(field_get:Cmd.WorkSpace.state)
  return static_cast< ::Cmd::EWorkState >(state_);
}
inline void WorkSpace::set_state(::Cmd::EWorkState value) {
  assert(::Cmd::EWorkState_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WorkSpace.state)
}

// repeated .Cmd.ItemData datas = 5;
inline int WorkSpace::datas_size() const {
  return datas_.size();
}
inline void WorkSpace::clear_datas() {
  datas_.Clear();
}
inline const ::Cmd::ItemData& WorkSpace::datas(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.WorkSpace.datas)
  return datas_.Get(index);
}
inline ::Cmd::ItemData* WorkSpace::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.WorkSpace.datas)
  return datas_.Mutable(index);
}
inline ::Cmd::ItemData* WorkSpace::add_datas() {
  // @@protoc_insertion_point(field_add:Cmd.WorkSpace.datas)
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
WorkSpace::datas() const {
  // @@protoc_insertion_point(field_list:Cmd.WorkSpace.datas)
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
WorkSpace::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.WorkSpace.datas)
  return &datas_;
}

// repeated uint32 counts = 6;
inline int WorkSpace::counts_size() const {
  return counts_.size();
}
inline void WorkSpace::clear_counts() {
  counts_.Clear();
}
inline ::google::protobuf::uint32 WorkSpace::counts(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.WorkSpace.counts)
  return counts_.Get(index);
}
inline void WorkSpace::set_counts(int index, ::google::protobuf::uint32 value) {
  counts_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.WorkSpace.counts)
}
inline void WorkSpace::add_counts(::google::protobuf::uint32 value) {
  counts_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.WorkSpace.counts)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
WorkSpace::counts() const {
  // @@protoc_insertion_point(field_list:Cmd.WorkSpace.counts)
  return counts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
WorkSpace::mutable_counts() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.WorkSpace.counts)
  return &counts_;
}

// repeated uint32 last_counts = 8;
inline int WorkSpace::last_counts_size() const {
  return last_counts_.size();
}
inline void WorkSpace::clear_last_counts() {
  last_counts_.Clear();
}
inline ::google::protobuf::uint32 WorkSpace::last_counts(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.WorkSpace.last_counts)
  return last_counts_.Get(index);
}
inline void WorkSpace::set_last_counts(int index, ::google::protobuf::uint32 value) {
  last_counts_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.WorkSpace.last_counts)
}
inline void WorkSpace::add_last_counts(::google::protobuf::uint32 value) {
  last_counts_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.WorkSpace.last_counts)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
WorkSpace::last_counts() const {
  // @@protoc_insertion_point(field_list:Cmd.WorkSpace.last_counts)
  return last_counts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
WorkSpace::mutable_last_counts() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.WorkSpace.last_counts)
  return &last_counts_;
}

// -------------------------------------------------------------------

// WorkManual

// optional bool unlock = 1 [default = false];
inline bool WorkManual::has_unlock() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorkManual::set_has_unlock() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorkManual::clear_has_unlock() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorkManual::clear_unlock() {
  unlock_ = false;
  clear_has_unlock();
}
inline bool WorkManual::unlock() const {
  // @@protoc_insertion_point(field_get:Cmd.WorkManual.unlock)
  return unlock_;
}
inline void WorkManual::set_unlock(bool value) {
  set_has_unlock();
  unlock_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WorkManual.unlock)
}

// -------------------------------------------------------------------

// WorkPetExtra

// optional string guid = 1;
inline bool WorkPetExtra::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorkPetExtra::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorkPetExtra::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorkPetExtra::clear_guid() {
  if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_->clear();
  }
  clear_has_guid();
}
inline const ::std::string& WorkPetExtra::guid() const {
  // @@protoc_insertion_point(field_get:Cmd.WorkPetExtra.guid)
  return *guid_;
}
inline void WorkPetExtra::set_guid(const ::std::string& value) {
  set_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_ = new ::std::string;
  }
  guid_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.WorkPetExtra.guid)
}
inline void WorkPetExtra::set_guid(const char* value) {
  set_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_ = new ::std::string;
  }
  guid_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.WorkPetExtra.guid)
}
inline void WorkPetExtra::set_guid(const char* value, size_t size) {
  set_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_ = new ::std::string;
  }
  guid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.WorkPetExtra.guid)
}
inline ::std::string* WorkPetExtra::mutable_guid() {
  set_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.WorkPetExtra.guid)
  return guid_;
}
inline ::std::string* WorkPetExtra::release_guid() {
  clear_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guid_;
    guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void WorkPetExtra::set_allocated_guid(::std::string* guid) {
  if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guid_;
  }
  if (guid) {
    set_has_guid();
    guid_ = guid;
  } else {
    clear_has_guid();
    guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.WorkPetExtra.guid)
}

// optional uint32 lastspaceid = 2 [default = 0];
inline bool WorkPetExtra::has_lastspaceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorkPetExtra::set_has_lastspaceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorkPetExtra::clear_has_lastspaceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorkPetExtra::clear_lastspaceid() {
  lastspaceid_ = 0u;
  clear_has_lastspaceid();
}
inline ::google::protobuf::uint32 WorkPetExtra::lastspaceid() const {
  // @@protoc_insertion_point(field_get:Cmd.WorkPetExtra.lastspaceid)
  return lastspaceid_;
}
inline void WorkPetExtra::set_lastspaceid(::google::protobuf::uint32 value) {
  set_has_lastspaceid();
  lastspaceid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WorkPetExtra.lastspaceid)
}

// optional uint32 count = 3 [default = 0];
inline bool WorkPetExtra::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorkPetExtra::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorkPetExtra::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorkPetExtra::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 WorkPetExtra::count() const {
  // @@protoc_insertion_point(field_get:Cmd.WorkPetExtra.count)
  return count_;
}
inline void WorkPetExtra::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WorkPetExtra.count)
}

// -------------------------------------------------------------------

// WorkDayReward

// optional uint32 id = 1 [default = 0];
inline bool WorkDayReward::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorkDayReward::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorkDayReward::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorkDayReward::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 WorkDayReward::id() const {
  // @@protoc_insertion_point(field_get:Cmd.WorkDayReward.id)
  return id_;
}
inline void WorkDayReward::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WorkDayReward.id)
}

// optional uint32 time = 2 [default = 0];
inline bool WorkDayReward::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorkDayReward::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorkDayReward::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorkDayReward::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 WorkDayReward::time() const {
  // @@protoc_insertion_point(field_get:Cmd.WorkDayReward.time)
  return time_;
}
inline void WorkDayReward::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WorkDayReward.time)
}

// -------------------------------------------------------------------

// UnlockPetWorkManualPetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool UnlockPetWorkManualPetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnlockPetWorkManualPetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnlockPetWorkManualPetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnlockPetWorkManualPetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command UnlockPetWorkManualPetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UnlockPetWorkManualPetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UnlockPetWorkManualPetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UnlockPetWorkManualPetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_WORK_UNLOCKMANUAL];
inline bool UnlockPetWorkManualPetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnlockPetWorkManualPetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnlockPetWorkManualPetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnlockPetWorkManualPetCmd::clear_param() {
  param_ = 28;
  clear_has_param();
}
inline ::Cmd::PetParam UnlockPetWorkManualPetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UnlockPetWorkManualPetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void UnlockPetWorkManualPetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UnlockPetWorkManualPetCmd.param)
}

// -------------------------------------------------------------------

// StartWorkPetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool StartWorkPetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartWorkPetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartWorkPetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartWorkPetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command StartWorkPetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.StartWorkPetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void StartWorkPetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartWorkPetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_WORK_STARTWORK];
inline bool StartWorkPetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StartWorkPetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StartWorkPetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StartWorkPetCmd::clear_param() {
  param_ = 29;
  clear_has_param();
}
inline ::Cmd::PetParam StartWorkPetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.StartWorkPetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void StartWorkPetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartWorkPetCmd.param)
}

// optional uint32 id = 3 [default = 0];
inline bool StartWorkPetCmd::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StartWorkPetCmd::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StartWorkPetCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StartWorkPetCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 StartWorkPetCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.StartWorkPetCmd.id)
  return id_;
}
inline void StartWorkPetCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartWorkPetCmd.id)
}

// repeated string pets = 4;
inline int StartWorkPetCmd::pets_size() const {
  return pets_.size();
}
inline void StartWorkPetCmd::clear_pets() {
  pets_.Clear();
}
inline const ::std::string& StartWorkPetCmd::pets(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.StartWorkPetCmd.pets)
  return pets_.Get(index);
}
inline ::std::string* StartWorkPetCmd::mutable_pets(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.StartWorkPetCmd.pets)
  return pets_.Mutable(index);
}
inline void StartWorkPetCmd::set_pets(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Cmd.StartWorkPetCmd.pets)
  pets_.Mutable(index)->assign(value);
}
inline void StartWorkPetCmd::set_pets(int index, const char* value) {
  pets_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.StartWorkPetCmd.pets)
}
inline void StartWorkPetCmd::set_pets(int index, const char* value, size_t size) {
  pets_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.StartWorkPetCmd.pets)
}
inline ::std::string* StartWorkPetCmd::add_pets() {
  return pets_.Add();
}
inline void StartWorkPetCmd::add_pets(const ::std::string& value) {
  pets_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Cmd.StartWorkPetCmd.pets)
}
inline void StartWorkPetCmd::add_pets(const char* value) {
  pets_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Cmd.StartWorkPetCmd.pets)
}
inline void StartWorkPetCmd::add_pets(const char* value, size_t size) {
  pets_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Cmd.StartWorkPetCmd.pets)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
StartWorkPetCmd::pets() const {
  // @@protoc_insertion_point(field_list:Cmd.StartWorkPetCmd.pets)
  return pets_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
StartWorkPetCmd::mutable_pets() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.StartWorkPetCmd.pets)
  return &pets_;
}

// -------------------------------------------------------------------

// StopWorkPetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool StopWorkPetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StopWorkPetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StopWorkPetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StopWorkPetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command StopWorkPetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.StopWorkPetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void StopWorkPetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StopWorkPetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_WORK_STOPWORK];
inline bool StopWorkPetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StopWorkPetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StopWorkPetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StopWorkPetCmd::clear_param() {
  param_ = 30;
  clear_has_param();
}
inline ::Cmd::PetParam StopWorkPetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.StopWorkPetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void StopWorkPetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StopWorkPetCmd.param)
}

// optional uint32 id = 3 [default = 0];
inline bool StopWorkPetCmd::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StopWorkPetCmd::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StopWorkPetCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StopWorkPetCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 StopWorkPetCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.StopWorkPetCmd.id)
  return id_;
}
inline void StopWorkPetCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StopWorkPetCmd.id)
}

// -------------------------------------------------------------------

// QueryPetWorkManualPetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool QueryPetWorkManualPetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryPetWorkManualPetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryPetWorkManualPetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryPetWorkManualPetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command QueryPetWorkManualPetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryPetWorkManualPetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryPetWorkManualPetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryPetWorkManualPetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_WORK_QUERYWORKMANUAL];
inline bool QueryPetWorkManualPetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryPetWorkManualPetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryPetWorkManualPetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryPetWorkManualPetCmd::clear_param() {
  param_ = 31;
  clear_has_param();
}
inline ::Cmd::PetParam QueryPetWorkManualPetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryPetWorkManualPetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void QueryPetWorkManualPetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryPetWorkManualPetCmd.param)
}

// optional .Cmd.WorkManual manual = 3;
inline bool QueryPetWorkManualPetCmd::has_manual() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryPetWorkManualPetCmd::set_has_manual() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryPetWorkManualPetCmd::clear_has_manual() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryPetWorkManualPetCmd::clear_manual() {
  if (manual_ != NULL) manual_->::Cmd::WorkManual::Clear();
  clear_has_manual();
}
inline const ::Cmd::WorkManual& QueryPetWorkManualPetCmd::manual() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryPetWorkManualPetCmd.manual)
  return manual_ != NULL ? *manual_ : *default_instance_->manual_;
}
inline ::Cmd::WorkManual* QueryPetWorkManualPetCmd::mutable_manual() {
  set_has_manual();
  if (manual_ == NULL) manual_ = new ::Cmd::WorkManual;
  // @@protoc_insertion_point(field_mutable:Cmd.QueryPetWorkManualPetCmd.manual)
  return manual_;
}
inline ::Cmd::WorkManual* QueryPetWorkManualPetCmd::release_manual() {
  clear_has_manual();
  ::Cmd::WorkManual* temp = manual_;
  manual_ = NULL;
  return temp;
}
inline void QueryPetWorkManualPetCmd::set_allocated_manual(::Cmd::WorkManual* manual) {
  delete manual_;
  manual_ = manual;
  if (manual) {
    set_has_manual();
  } else {
    clear_has_manual();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.QueryPetWorkManualPetCmd.manual)
}

// -------------------------------------------------------------------

// QueryPetWorkDataPetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool QueryPetWorkDataPetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryPetWorkDataPetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryPetWorkDataPetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryPetWorkDataPetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command QueryPetWorkDataPetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryPetWorkDataPetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryPetWorkDataPetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryPetWorkDataPetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_WORK_QUERYWORKDATA];
inline bool QueryPetWorkDataPetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryPetWorkDataPetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryPetWorkDataPetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryPetWorkDataPetCmd::clear_param() {
  param_ = 32;
  clear_has_param();
}
inline ::Cmd::PetParam QueryPetWorkDataPetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryPetWorkDataPetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void QueryPetWorkDataPetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryPetWorkDataPetCmd.param)
}

// repeated .Cmd.WorkSpace datas = 3;
inline int QueryPetWorkDataPetCmd::datas_size() const {
  return datas_.size();
}
inline void QueryPetWorkDataPetCmd::clear_datas() {
  datas_.Clear();
}
inline const ::Cmd::WorkSpace& QueryPetWorkDataPetCmd::datas(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QueryPetWorkDataPetCmd.datas)
  return datas_.Get(index);
}
inline ::Cmd::WorkSpace* QueryPetWorkDataPetCmd::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.QueryPetWorkDataPetCmd.datas)
  return datas_.Mutable(index);
}
inline ::Cmd::WorkSpace* QueryPetWorkDataPetCmd::add_datas() {
  // @@protoc_insertion_point(field_add:Cmd.QueryPetWorkDataPetCmd.datas)
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::WorkSpace >&
QueryPetWorkDataPetCmd::datas() const {
  // @@protoc_insertion_point(field_list:Cmd.QueryPetWorkDataPetCmd.datas)
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::WorkSpace >*
QueryPetWorkDataPetCmd::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QueryPetWorkDataPetCmd.datas)
  return &datas_;
}

// repeated .Cmd.WorkPetExtra extras = 4;
inline int QueryPetWorkDataPetCmd::extras_size() const {
  return extras_.size();
}
inline void QueryPetWorkDataPetCmd::clear_extras() {
  extras_.Clear();
}
inline const ::Cmd::WorkPetExtra& QueryPetWorkDataPetCmd::extras(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QueryPetWorkDataPetCmd.extras)
  return extras_.Get(index);
}
inline ::Cmd::WorkPetExtra* QueryPetWorkDataPetCmd::mutable_extras(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.QueryPetWorkDataPetCmd.extras)
  return extras_.Mutable(index);
}
inline ::Cmd::WorkPetExtra* QueryPetWorkDataPetCmd::add_extras() {
  // @@protoc_insertion_point(field_add:Cmd.QueryPetWorkDataPetCmd.extras)
  return extras_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::WorkPetExtra >&
QueryPetWorkDataPetCmd::extras() const {
  // @@protoc_insertion_point(field_list:Cmd.QueryPetWorkDataPetCmd.extras)
  return extras_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::WorkPetExtra >*
QueryPetWorkDataPetCmd::mutable_extras() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QueryPetWorkDataPetCmd.extras)
  return &extras_;
}

// optional uint32 max_space = 5 [default = 0];
inline bool QueryPetWorkDataPetCmd::has_max_space() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QueryPetWorkDataPetCmd::set_has_max_space() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QueryPetWorkDataPetCmd::clear_has_max_space() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QueryPetWorkDataPetCmd::clear_max_space() {
  max_space_ = 0u;
  clear_has_max_space();
}
inline ::google::protobuf::uint32 QueryPetWorkDataPetCmd::max_space() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryPetWorkDataPetCmd.max_space)
  return max_space_;
}
inline void QueryPetWorkDataPetCmd::set_max_space(::google::protobuf::uint32 value) {
  set_has_max_space();
  max_space_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryPetWorkDataPetCmd.max_space)
}

// optional uint32 card_expiretime = 6 [default = 0];
inline bool QueryPetWorkDataPetCmd::has_card_expiretime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void QueryPetWorkDataPetCmd::set_has_card_expiretime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void QueryPetWorkDataPetCmd::clear_has_card_expiretime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void QueryPetWorkDataPetCmd::clear_card_expiretime() {
  card_expiretime_ = 0u;
  clear_has_card_expiretime();
}
inline ::google::protobuf::uint32 QueryPetWorkDataPetCmd::card_expiretime() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryPetWorkDataPetCmd.card_expiretime)
  return card_expiretime_;
}
inline void QueryPetWorkDataPetCmd::set_card_expiretime(::google::protobuf::uint32 value) {
  set_has_card_expiretime();
  card_expiretime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryPetWorkDataPetCmd.card_expiretime)
}

// -------------------------------------------------------------------

// GetPetWorkRewardPetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool GetPetWorkRewardPetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetPetWorkRewardPetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetPetWorkRewardPetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetPetWorkRewardPetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command GetPetWorkRewardPetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GetPetWorkRewardPetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GetPetWorkRewardPetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetPetWorkRewardPetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_WORK_GETREWARD];
inline bool GetPetWorkRewardPetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetPetWorkRewardPetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetPetWorkRewardPetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetPetWorkRewardPetCmd::clear_param() {
  param_ = 33;
  clear_has_param();
}
inline ::Cmd::PetParam GetPetWorkRewardPetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GetPetWorkRewardPetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void GetPetWorkRewardPetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetPetWorkRewardPetCmd.param)
}

// optional uint32 id = 3 [default = 0];
inline bool GetPetWorkRewardPetCmd::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetPetWorkRewardPetCmd::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetPetWorkRewardPetCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetPetWorkRewardPetCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GetPetWorkRewardPetCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.GetPetWorkRewardPetCmd.id)
  return id_;
}
inline void GetPetWorkRewardPetCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetPetWorkRewardPetCmd.id)
}

// -------------------------------------------------------------------

// WorkSpaceUpdate

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool WorkSpaceUpdate::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorkSpaceUpdate::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorkSpaceUpdate::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorkSpaceUpdate::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command WorkSpaceUpdate::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.WorkSpaceUpdate.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void WorkSpaceUpdate::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WorkSpaceUpdate.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_WORK_SPACEUPDATE];
inline bool WorkSpaceUpdate::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorkSpaceUpdate::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorkSpaceUpdate::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorkSpaceUpdate::clear_param() {
  param_ = 34;
  clear_has_param();
}
inline ::Cmd::PetParam WorkSpaceUpdate::param() const {
  // @@protoc_insertion_point(field_get:Cmd.WorkSpaceUpdate.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void WorkSpaceUpdate::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WorkSpaceUpdate.param)
}

// repeated .Cmd.WorkSpace updates = 3;
inline int WorkSpaceUpdate::updates_size() const {
  return updates_.size();
}
inline void WorkSpaceUpdate::clear_updates() {
  updates_.Clear();
}
inline const ::Cmd::WorkSpace& WorkSpaceUpdate::updates(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.WorkSpaceUpdate.updates)
  return updates_.Get(index);
}
inline ::Cmd::WorkSpace* WorkSpaceUpdate::mutable_updates(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.WorkSpaceUpdate.updates)
  return updates_.Mutable(index);
}
inline ::Cmd::WorkSpace* WorkSpaceUpdate::add_updates() {
  // @@protoc_insertion_point(field_add:Cmd.WorkSpaceUpdate.updates)
  return updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::WorkSpace >&
WorkSpaceUpdate::updates() const {
  // @@protoc_insertion_point(field_list:Cmd.WorkSpaceUpdate.updates)
  return updates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::WorkSpace >*
WorkSpaceUpdate::mutable_updates() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.WorkSpaceUpdate.updates)
  return &updates_;
}

// -------------------------------------------------------------------

// PetExtraUpdatePetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool PetExtraUpdatePetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetExtraUpdatePetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetExtraUpdatePetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetExtraUpdatePetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command PetExtraUpdatePetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.PetExtraUpdatePetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void PetExtraUpdatePetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetExtraUpdatePetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_WORK_EXTRAUPDATE];
inline bool PetExtraUpdatePetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetExtraUpdatePetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetExtraUpdatePetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetExtraUpdatePetCmd::clear_param() {
  param_ = 35;
  clear_has_param();
}
inline ::Cmd::PetParam PetExtraUpdatePetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.PetExtraUpdatePetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void PetExtraUpdatePetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetExtraUpdatePetCmd.param)
}

// repeated .Cmd.WorkPetExtra updates = 3;
inline int PetExtraUpdatePetCmd::updates_size() const {
  return updates_.size();
}
inline void PetExtraUpdatePetCmd::clear_updates() {
  updates_.Clear();
}
inline const ::Cmd::WorkPetExtra& PetExtraUpdatePetCmd::updates(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.PetExtraUpdatePetCmd.updates)
  return updates_.Get(index);
}
inline ::Cmd::WorkPetExtra* PetExtraUpdatePetCmd::mutable_updates(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.PetExtraUpdatePetCmd.updates)
  return updates_.Mutable(index);
}
inline ::Cmd::WorkPetExtra* PetExtraUpdatePetCmd::add_updates() {
  // @@protoc_insertion_point(field_add:Cmd.PetExtraUpdatePetCmd.updates)
  return updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::WorkPetExtra >&
PetExtraUpdatePetCmd::updates() const {
  // @@protoc_insertion_point(field_list:Cmd.PetExtraUpdatePetCmd.updates)
  return updates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::WorkPetExtra >*
PetExtraUpdatePetCmd::mutable_updates() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.PetExtraUpdatePetCmd.updates)
  return &updates_;
}

// -------------------------------------------------------------------

// ComposePetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool ComposePetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComposePetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComposePetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComposePetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command ComposePetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ComposePetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ComposePetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ComposePetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_COMPOSE];
inline bool ComposePetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComposePetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ComposePetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ComposePetCmd::clear_param() {
  param_ = 36;
  clear_has_param();
}
inline ::Cmd::PetParam ComposePetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ComposePetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void ComposePetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ComposePetCmd.param)
}

// required uint32 id = 3;
inline bool ComposePetCmd::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ComposePetCmd::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ComposePetCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ComposePetCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ComposePetCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.ComposePetCmd.id)
  return id_;
}
inline void ComposePetCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ComposePetCmd.id)
}

// repeated string eggguids = 4;
inline int ComposePetCmd::eggguids_size() const {
  return eggguids_.size();
}
inline void ComposePetCmd::clear_eggguids() {
  eggguids_.Clear();
}
inline const ::std::string& ComposePetCmd::eggguids(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.ComposePetCmd.eggguids)
  return eggguids_.Get(index);
}
inline ::std::string* ComposePetCmd::mutable_eggguids(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.ComposePetCmd.eggguids)
  return eggguids_.Mutable(index);
}
inline void ComposePetCmd::set_eggguids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Cmd.ComposePetCmd.eggguids)
  eggguids_.Mutable(index)->assign(value);
}
inline void ComposePetCmd::set_eggguids(int index, const char* value) {
  eggguids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.ComposePetCmd.eggguids)
}
inline void ComposePetCmd::set_eggguids(int index, const char* value, size_t size) {
  eggguids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.ComposePetCmd.eggguids)
}
inline ::std::string* ComposePetCmd::add_eggguids() {
  return eggguids_.Add();
}
inline void ComposePetCmd::add_eggguids(const ::std::string& value) {
  eggguids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Cmd.ComposePetCmd.eggguids)
}
inline void ComposePetCmd::add_eggguids(const char* value) {
  eggguids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Cmd.ComposePetCmd.eggguids)
}
inline void ComposePetCmd::add_eggguids(const char* value, size_t size) {
  eggguids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Cmd.ComposePetCmd.eggguids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ComposePetCmd::eggguids() const {
  // @@protoc_insertion_point(field_list:Cmd.ComposePetCmd.eggguids)
  return eggguids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ComposePetCmd::mutable_eggguids() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.ComposePetCmd.eggguids)
  return &eggguids_;
}

// -------------------------------------------------------------------

// SpecPetEquip

// required uint32 bodyid = 1;
inline bool SpecPetEquip::has_bodyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpecPetEquip::set_has_bodyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpecPetEquip::clear_has_bodyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpecPetEquip::clear_bodyid() {
  bodyid_ = 0u;
  clear_has_bodyid();
}
inline ::google::protobuf::uint32 SpecPetEquip::bodyid() const {
  // @@protoc_insertion_point(field_get:Cmd.SpecPetEquip.bodyid)
  return bodyid_;
}
inline void SpecPetEquip::set_bodyid(::google::protobuf::uint32 value) {
  set_has_bodyid();
  bodyid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SpecPetEquip.bodyid)
}

// required uint32 itemid = 2;
inline bool SpecPetEquip::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpecPetEquip::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SpecPetEquip::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SpecPetEquip::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 SpecPetEquip::itemid() const {
  // @@protoc_insertion_point(field_get:Cmd.SpecPetEquip.itemid)
  return itemid_;
}
inline void SpecPetEquip::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SpecPetEquip.itemid)
}

// optional .Cmd.EEquipPos epos = 3 [default = EEQUIPPOS_MIN];
inline bool SpecPetEquip::has_epos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SpecPetEquip::set_has_epos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SpecPetEquip::clear_has_epos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SpecPetEquip::clear_epos() {
  epos_ = 0;
  clear_has_epos();
}
inline ::Cmd::EEquipPos SpecPetEquip::epos() const {
  // @@protoc_insertion_point(field_get:Cmd.SpecPetEquip.epos)
  return static_cast< ::Cmd::EEquipPos >(epos_);
}
inline void SpecPetEquip::set_epos(::Cmd::EEquipPos value) {
  assert(::Cmd::EEquipPos_IsValid(value));
  set_has_epos();
  epos_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SpecPetEquip.epos)
}

// -------------------------------------------------------------------

// PetEquipUnlockInfo

// repeated uint32 items = 1;
inline int PetEquipUnlockInfo::items_size() const {
  return items_.size();
}
inline void PetEquipUnlockInfo::clear_items() {
  items_.Clear();
}
inline ::google::protobuf::uint32 PetEquipUnlockInfo::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.PetEquipUnlockInfo.items)
  return items_.Get(index);
}
inline void PetEquipUnlockInfo::set_items(int index, ::google::protobuf::uint32 value) {
  items_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.PetEquipUnlockInfo.items)
}
inline void PetEquipUnlockInfo::add_items(::google::protobuf::uint32 value) {
  items_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.PetEquipUnlockInfo.items)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PetEquipUnlockInfo::items() const {
  // @@protoc_insertion_point(field_list:Cmd.PetEquipUnlockInfo.items)
  return items_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PetEquipUnlockInfo::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.PetEquipUnlockInfo.items)
  return &items_;
}

// repeated .Cmd.SpecPetEquip bodyitems = 2;
inline int PetEquipUnlockInfo::bodyitems_size() const {
  return bodyitems_.size();
}
inline void PetEquipUnlockInfo::clear_bodyitems() {
  bodyitems_.Clear();
}
inline const ::Cmd::SpecPetEquip& PetEquipUnlockInfo::bodyitems(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.PetEquipUnlockInfo.bodyitems)
  return bodyitems_.Get(index);
}
inline ::Cmd::SpecPetEquip* PetEquipUnlockInfo::mutable_bodyitems(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.PetEquipUnlockInfo.bodyitems)
  return bodyitems_.Mutable(index);
}
inline ::Cmd::SpecPetEquip* PetEquipUnlockInfo::add_bodyitems() {
  // @@protoc_insertion_point(field_add:Cmd.PetEquipUnlockInfo.bodyitems)
  return bodyitems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SpecPetEquip >&
PetEquipUnlockInfo::bodyitems() const {
  // @@protoc_insertion_point(field_list:Cmd.PetEquipUnlockInfo.bodyitems)
  return bodyitems_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::SpecPetEquip >*
PetEquipUnlockInfo::mutable_bodyitems() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.PetEquipUnlockInfo.bodyitems)
  return &bodyitems_;
}

// -------------------------------------------------------------------

// PetEquipListCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool PetEquipListCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetEquipListCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetEquipListCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetEquipListCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command PetEquipListCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.PetEquipListCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void PetEquipListCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetEquipListCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_EQUIP_LIST];
inline bool PetEquipListCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetEquipListCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetEquipListCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetEquipListCmd::clear_param() {
  param_ = 37;
  clear_has_param();
}
inline ::Cmd::PetParam PetEquipListCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.PetEquipListCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void PetEquipListCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetEquipListCmd.param)
}

// optional .Cmd.PetEquipUnlockInfo unlockinfo = 3;
inline bool PetEquipListCmd::has_unlockinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PetEquipListCmd::set_has_unlockinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PetEquipListCmd::clear_has_unlockinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PetEquipListCmd::clear_unlockinfo() {
  if (unlockinfo_ != NULL) unlockinfo_->::Cmd::PetEquipUnlockInfo::Clear();
  clear_has_unlockinfo();
}
inline const ::Cmd::PetEquipUnlockInfo& PetEquipListCmd::unlockinfo() const {
  // @@protoc_insertion_point(field_get:Cmd.PetEquipListCmd.unlockinfo)
  return unlockinfo_ != NULL ? *unlockinfo_ : *default_instance_->unlockinfo_;
}
inline ::Cmd::PetEquipUnlockInfo* PetEquipListCmd::mutable_unlockinfo() {
  set_has_unlockinfo();
  if (unlockinfo_ == NULL) unlockinfo_ = new ::Cmd::PetEquipUnlockInfo;
  // @@protoc_insertion_point(field_mutable:Cmd.PetEquipListCmd.unlockinfo)
  return unlockinfo_;
}
inline ::Cmd::PetEquipUnlockInfo* PetEquipListCmd::release_unlockinfo() {
  clear_has_unlockinfo();
  ::Cmd::PetEquipUnlockInfo* temp = unlockinfo_;
  unlockinfo_ = NULL;
  return temp;
}
inline void PetEquipListCmd::set_allocated_unlockinfo(::Cmd::PetEquipUnlockInfo* unlockinfo) {
  delete unlockinfo_;
  unlockinfo_ = unlockinfo;
  if (unlockinfo) {
    set_has_unlockinfo();
  } else {
    clear_has_unlockinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.PetEquipListCmd.unlockinfo)
}

// -------------------------------------------------------------------

// UpdatePetEquipListCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool UpdatePetEquipListCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdatePetEquipListCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdatePetEquipListCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdatePetEquipListCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command UpdatePetEquipListCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdatePetEquipListCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UpdatePetEquipListCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdatePetEquipListCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_EQUIP_LIST_UPDATE];
inline bool UpdatePetEquipListCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdatePetEquipListCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdatePetEquipListCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdatePetEquipListCmd::clear_param() {
  param_ = 38;
  clear_has_param();
}
inline ::Cmd::PetParam UpdatePetEquipListCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdatePetEquipListCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void UpdatePetEquipListCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdatePetEquipListCmd.param)
}

// repeated uint32 additems = 3;
inline int UpdatePetEquipListCmd::additems_size() const {
  return additems_.size();
}
inline void UpdatePetEquipListCmd::clear_additems() {
  additems_.Clear();
}
inline ::google::protobuf::uint32 UpdatePetEquipListCmd::additems(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UpdatePetEquipListCmd.additems)
  return additems_.Get(index);
}
inline void UpdatePetEquipListCmd::set_additems(int index, ::google::protobuf::uint32 value) {
  additems_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.UpdatePetEquipListCmd.additems)
}
inline void UpdatePetEquipListCmd::add_additems(::google::protobuf::uint32 value) {
  additems_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.UpdatePetEquipListCmd.additems)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UpdatePetEquipListCmd::additems() const {
  // @@protoc_insertion_point(field_list:Cmd.UpdatePetEquipListCmd.additems)
  return additems_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UpdatePetEquipListCmd::mutable_additems() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UpdatePetEquipListCmd.additems)
  return &additems_;
}

// repeated .Cmd.SpecPetEquip addbodyitems = 4;
inline int UpdatePetEquipListCmd::addbodyitems_size() const {
  return addbodyitems_.size();
}
inline void UpdatePetEquipListCmd::clear_addbodyitems() {
  addbodyitems_.Clear();
}
inline const ::Cmd::SpecPetEquip& UpdatePetEquipListCmd::addbodyitems(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UpdatePetEquipListCmd.addbodyitems)
  return addbodyitems_.Get(index);
}
inline ::Cmd::SpecPetEquip* UpdatePetEquipListCmd::mutable_addbodyitems(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.UpdatePetEquipListCmd.addbodyitems)
  return addbodyitems_.Mutable(index);
}
inline ::Cmd::SpecPetEquip* UpdatePetEquipListCmd::add_addbodyitems() {
  // @@protoc_insertion_point(field_add:Cmd.UpdatePetEquipListCmd.addbodyitems)
  return addbodyitems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SpecPetEquip >&
UpdatePetEquipListCmd::addbodyitems() const {
  // @@protoc_insertion_point(field_list:Cmd.UpdatePetEquipListCmd.addbodyitems)
  return addbodyitems_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::SpecPetEquip >*
UpdatePetEquipListCmd::mutable_addbodyitems() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UpdatePetEquipListCmd.addbodyitems)
  return &addbodyitems_;
}

// -------------------------------------------------------------------

// PetWearInfo

// required .Cmd.EEquipPos epos = 4;
inline bool PetWearInfo::has_epos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetWearInfo::set_has_epos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetWearInfo::clear_has_epos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetWearInfo::clear_epos() {
  epos_ = 0;
  clear_has_epos();
}
inline ::Cmd::EEquipPos PetWearInfo::epos() const {
  // @@protoc_insertion_point(field_get:Cmd.PetWearInfo.epos)
  return static_cast< ::Cmd::EEquipPos >(epos_);
}
inline void PetWearInfo::set_epos(::Cmd::EEquipPos value) {
  assert(::Cmd::EEquipPos_IsValid(value));
  set_has_epos();
  epos_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetWearInfo.epos)
}

// optional uint32 itemid = 5;
inline bool PetWearInfo::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetWearInfo::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetWearInfo::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetWearInfo::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 PetWearInfo::itemid() const {
  // @@protoc_insertion_point(field_get:Cmd.PetWearInfo.itemid)
  return itemid_;
}
inline void PetWearInfo::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetWearInfo.itemid)
}

// optional .Cmd.EPetEquipOper oper = 6 [default = EPETEQUIPOPER_ON];
inline bool PetWearInfo::has_oper() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PetWearInfo::set_has_oper() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PetWearInfo::clear_has_oper() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PetWearInfo::clear_oper() {
  oper_ = 1;
  clear_has_oper();
}
inline ::Cmd::EPetEquipOper PetWearInfo::oper() const {
  // @@protoc_insertion_point(field_get:Cmd.PetWearInfo.oper)
  return static_cast< ::Cmd::EPetEquipOper >(oper_);
}
inline void PetWearInfo::set_oper(::Cmd::EPetEquipOper value) {
  assert(::Cmd::EPetEquipOper_IsValid(value));
  set_has_oper();
  oper_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PetWearInfo.oper)
}

// -------------------------------------------------------------------

// ChangeWearPetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool ChangeWearPetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeWearPetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeWearPetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeWearPetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command ChangeWearPetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeWearPetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ChangeWearPetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeWearPetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_CHANGE_WEAR];
inline bool ChangeWearPetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeWearPetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeWearPetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeWearPetCmd::clear_param() {
  param_ = 39;
  clear_has_param();
}
inline ::Cmd::PetParam ChangeWearPetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeWearPetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void ChangeWearPetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeWearPetCmd.param)
}

// required uint32 petid = 3;
inline bool ChangeWearPetCmd::has_petid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChangeWearPetCmd::set_has_petid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChangeWearPetCmd::clear_has_petid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChangeWearPetCmd::clear_petid() {
  petid_ = 0u;
  clear_has_petid();
}
inline ::google::protobuf::uint32 ChangeWearPetCmd::petid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeWearPetCmd.petid)
  return petid_;
}
inline void ChangeWearPetCmd::set_petid(::google::protobuf::uint32 value) {
  set_has_petid();
  petid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeWearPetCmd.petid)
}

// repeated .Cmd.PetWearInfo wearinfo = 4;
inline int ChangeWearPetCmd::wearinfo_size() const {
  return wearinfo_.size();
}
inline void ChangeWearPetCmd::clear_wearinfo() {
  wearinfo_.Clear();
}
inline const ::Cmd::PetWearInfo& ChangeWearPetCmd::wearinfo(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeWearPetCmd.wearinfo)
  return wearinfo_.Get(index);
}
inline ::Cmd::PetWearInfo* ChangeWearPetCmd::mutable_wearinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.ChangeWearPetCmd.wearinfo)
  return wearinfo_.Mutable(index);
}
inline ::Cmd::PetWearInfo* ChangeWearPetCmd::add_wearinfo() {
  // @@protoc_insertion_point(field_add:Cmd.ChangeWearPetCmd.wearinfo)
  return wearinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::PetWearInfo >&
ChangeWearPetCmd::wearinfo() const {
  // @@protoc_insertion_point(field_list:Cmd.ChangeWearPetCmd.wearinfo)
  return wearinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::PetWearInfo >*
ChangeWearPetCmd::mutable_wearinfo() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.ChangeWearPetCmd.wearinfo)
  return &wearinfo_;
}

// -------------------------------------------------------------------

// UpdateWearPetCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_PET_PROTOCMD];
inline bool UpdateWearPetCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateWearPetCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateWearPetCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateWearPetCmd::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::Cmd::Command UpdateWearPetCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateWearPetCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UpdateWearPetCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateWearPetCmd.cmd)
}

// optional .Cmd.PetParam param = 2 [default = PETPARAM_UPDATE_WEAR];
inline bool UpdateWearPetCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateWearPetCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateWearPetCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateWearPetCmd::clear_param() {
  param_ = 40;
  clear_has_param();
}
inline ::Cmd::PetParam UpdateWearPetCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateWearPetCmd.param)
  return static_cast< ::Cmd::PetParam >(param_);
}
inline void UpdateWearPetCmd::set_param(::Cmd::PetParam value) {
  assert(::Cmd::PetParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateWearPetCmd.param)
}

// required uint32 petid = 3;
inline bool UpdateWearPetCmd::has_petid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateWearPetCmd::set_has_petid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateWearPetCmd::clear_has_petid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateWearPetCmd::clear_petid() {
  petid_ = 0u;
  clear_has_petid();
}
inline ::google::protobuf::uint32 UpdateWearPetCmd::petid() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateWearPetCmd.petid)
  return petid_;
}
inline void UpdateWearPetCmd::set_petid(::google::protobuf::uint32 value) {
  set_has_petid();
  petid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateWearPetCmd.petid)
}

// repeated .Cmd.PetWearInfo wearinfo = 4;
inline int UpdateWearPetCmd::wearinfo_size() const {
  return wearinfo_.size();
}
inline void UpdateWearPetCmd::clear_wearinfo() {
  wearinfo_.Clear();
}
inline const ::Cmd::PetWearInfo& UpdateWearPetCmd::wearinfo(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateWearPetCmd.wearinfo)
  return wearinfo_.Get(index);
}
inline ::Cmd::PetWearInfo* UpdateWearPetCmd::mutable_wearinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.UpdateWearPetCmd.wearinfo)
  return wearinfo_.Mutable(index);
}
inline ::Cmd::PetWearInfo* UpdateWearPetCmd::add_wearinfo() {
  // @@protoc_insertion_point(field_add:Cmd.UpdateWearPetCmd.wearinfo)
  return wearinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::PetWearInfo >&
UpdateWearPetCmd::wearinfo() const {
  // @@protoc_insertion_point(field_list:Cmd.UpdateWearPetCmd.wearinfo)
  return wearinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::PetWearInfo >*
UpdateWearPetCmd::mutable_wearinfo() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UpdateWearPetCmd.wearinfo)
  return &wearinfo_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cmd

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Cmd::PetParam> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::PetParam>() {
  return ::Cmd::PetParam_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EEmployType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EEmployType>() {
  return ::Cmd::EEmployType_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EPetDataType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EPetDataType>() {
  return ::Cmd::EPetDataType_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EPetEquipOper> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EPetEquipOper>() {
  return ::Cmd::EPetEquipOper_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EPetAdventureStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EPetAdventureStatus>() {
  return ::Cmd::EPetAdventureStatus_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EPetEfficiencyType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EPetEfficiencyType>() {
  return ::Cmd::EPetEfficiencyType_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EWorkState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EWorkState>() {
  return ::Cmd::EWorkState_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ScenePet_2eproto__INCLUDED
