// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SceneInterlocution.proto

#ifndef PROTOBUF_SceneInterlocution_2eproto__INCLUDED
#define PROTOBUF_SceneInterlocution_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "xCmd.pb.h"
#include "ProtoCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace Cmd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SceneInterlocution_2eproto();
void protobuf_AssignDesc_SceneInterlocution_2eproto();
void protobuf_ShutdownFile_SceneInterlocution_2eproto();

class InterData;
class NewInter;
class Answer;
class Query;

enum InterParam {
  INTERPARAM_NEWINTERLOCUTION = 1,
  INTERPARAM_ANSWERINTER = 2,
  INTERPARAM_QUERYINTER = 3
};
bool InterParam_IsValid(int value);
const InterParam InterParam_MIN = INTERPARAM_NEWINTERLOCUTION;
const InterParam InterParam_MAX = INTERPARAM_QUERYINTER;
const int InterParam_ARRAYSIZE = InterParam_MAX + 1;

const ::google::protobuf::EnumDescriptor* InterParam_descriptor();
inline const ::std::string& InterParam_Name(InterParam value) {
  return ::google::protobuf::internal::NameOfEnum(
    InterParam_descriptor(), value);
}
inline bool InterParam_Parse(
    const ::std::string& name, InterParam* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InterParam>(
    InterParam_descriptor(), name, value);
}
enum EQueryState {
  EQUERYSTATE_OK = 1,
  EQUERYSTATE_ANSWERED_RIGHT = 2,
  EQUERYSTATE_ANSWERED_WRONG = 3,
  EQUERYSTATE_FAIL = 4
};
bool EQueryState_IsValid(int value);
const EQueryState EQueryState_MIN = EQUERYSTATE_OK;
const EQueryState EQueryState_MAX = EQUERYSTATE_FAIL;
const int EQueryState_ARRAYSIZE = EQueryState_MAX + 1;

const ::google::protobuf::EnumDescriptor* EQueryState_descriptor();
inline const ::std::string& EQueryState_Name(EQueryState value) {
  return ::google::protobuf::internal::NameOfEnum(
    EQueryState_descriptor(), value);
}
inline bool EQueryState_Parse(
    const ::std::string& name, EQueryState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EQueryState>(
    EQueryState_descriptor(), name, value);
}
// ===================================================================

class InterData : public ::google::protobuf::Message {
 public:
  InterData();
  virtual ~InterData();

  InterData(const InterData& from);

  inline InterData& operator=(const InterData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InterData& default_instance();

  void Swap(InterData* other);

  // implements Message ----------------------------------------------

  InterData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InterData& from);
  void MergeFrom(const InterData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 guid = 1 [default = 0];
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint32 guid() const;
  inline void set_guid(::google::protobuf::uint32 value);

  // optional uint32 interid = 2 [default = 0];
  inline bool has_interid() const;
  inline void clear_interid();
  static const int kInteridFieldNumber = 2;
  inline ::google::protobuf::uint32 interid() const;
  inline void set_interid(::google::protobuf::uint32 value);

  // optional .Cmd.ESource source = 3 [default = ESOURCE_MIN];
  inline bool has_source() const;
  inline void clear_source();
  static const int kSourceFieldNumber = 3;
  inline ::Cmd::ESource source() const;
  inline void set_source(::Cmd::ESource value);

  // @@protoc_insertion_point(class_scope:Cmd.InterData)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_interid();
  inline void clear_has_interid();
  inline void set_has_source();
  inline void clear_has_source();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 guid_;
  ::google::protobuf::uint32 interid_;
  int source_;
  friend void  protobuf_AddDesc_SceneInterlocution_2eproto();
  friend void protobuf_AssignDesc_SceneInterlocution_2eproto();
  friend void protobuf_ShutdownFile_SceneInterlocution_2eproto();

  void InitAsDefaultInstance();
  static InterData* default_instance_;
};
// -------------------------------------------------------------------

class NewInter : public ::google::protobuf::Message {
 public:
  NewInter();
  virtual ~NewInter();

  NewInter(const NewInter& from);

  inline NewInter& operator=(const NewInter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewInter& default_instance();

  void Swap(NewInter* other);

  // implements Message ----------------------------------------------

  NewInter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NewInter& from);
  void MergeFrom(const NewInter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_INTER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.InterParam param = 2 [default = INTERPARAM_NEWINTERLOCUTION];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::InterParam param() const;
  inline void set_param(::Cmd::InterParam value);

  // optional .Cmd.InterData inter = 3;
  inline bool has_inter() const;
  inline void clear_inter();
  static const int kInterFieldNumber = 3;
  inline const ::Cmd::InterData& inter() const;
  inline ::Cmd::InterData* mutable_inter();
  inline ::Cmd::InterData* release_inter();
  inline void set_allocated_inter(::Cmd::InterData* inter);

  // optional uint64 npcid = 4;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcidFieldNumber = 4;
  inline ::google::protobuf::uint64 npcid() const;
  inline void set_npcid(::google::protobuf::uint64 value);

  // optional uint64 answerid = 5 [default = 0];
  inline bool has_answerid() const;
  inline void clear_answerid();
  static const int kAnsweridFieldNumber = 5;
  inline ::google::protobuf::uint64 answerid() const;
  inline void set_answerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.NewInter)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_inter();
  inline void clear_has_inter();
  inline void set_has_npcid();
  inline void clear_has_npcid();
  inline void set_has_answerid();
  inline void clear_has_answerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::InterData* inter_;
  ::google::protobuf::uint64 npcid_;
  ::google::protobuf::uint64 answerid_;
  friend void  protobuf_AddDesc_SceneInterlocution_2eproto();
  friend void protobuf_AssignDesc_SceneInterlocution_2eproto();
  friend void protobuf_ShutdownFile_SceneInterlocution_2eproto();

  void InitAsDefaultInstance();
  static NewInter* default_instance_;
};
// -------------------------------------------------------------------

class Answer : public ::google::protobuf::Message {
 public:
  Answer();
  virtual ~Answer();

  Answer(const Answer& from);

  inline Answer& operator=(const Answer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Answer& default_instance();

  void Swap(Answer* other);

  // implements Message ----------------------------------------------

  Answer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Answer& from);
  void MergeFrom(const Answer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_INTER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.InterParam param = 2 [default = INTERPARAM_ANSWERINTER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::InterParam param() const;
  inline void set_param(::Cmd::InterParam value);

  // optional uint64 npcid = 3;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcidFieldNumber = 3;
  inline ::google::protobuf::uint64 npcid() const;
  inline void set_npcid(::google::protobuf::uint64 value);

  // optional uint32 guid = 4 [default = 0];
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 4;
  inline ::google::protobuf::uint32 guid() const;
  inline void set_guid(::google::protobuf::uint32 value);

  // optional uint32 interid = 5 [default = 0];
  inline bool has_interid() const;
  inline void clear_interid();
  static const int kInteridFieldNumber = 5;
  inline ::google::protobuf::uint32 interid() const;
  inline void set_interid(::google::protobuf::uint32 value);

  // optional .Cmd.ESource source = 6 [default = ESOURCE_MIN];
  inline bool has_source() const;
  inline void clear_source();
  static const int kSourceFieldNumber = 6;
  inline ::Cmd::ESource source() const;
  inline void set_source(::Cmd::ESource value);

  // optional uint32 answer = 7 [default = 0];
  inline bool has_answer() const;
  inline void clear_answer();
  static const int kAnswerFieldNumber = 7;
  inline ::google::protobuf::uint32 answer() const;
  inline void set_answer(::google::protobuf::uint32 value);

  // optional bool correct = 8 [default = false];
  inline bool has_correct() const;
  inline void clear_correct();
  static const int kCorrectFieldNumber = 8;
  inline bool correct() const;
  inline void set_correct(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.Answer)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_npcid();
  inline void clear_has_npcid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_interid();
  inline void clear_has_interid();
  inline void set_has_source();
  inline void clear_has_source();
  inline void set_has_answer();
  inline void clear_has_answer();
  inline void set_has_correct();
  inline void clear_has_correct();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 npcid_;
  ::google::protobuf::uint32 guid_;
  ::google::protobuf::uint32 interid_;
  int source_;
  ::google::protobuf::uint32 answer_;
  bool correct_;
  friend void  protobuf_AddDesc_SceneInterlocution_2eproto();
  friend void protobuf_AssignDesc_SceneInterlocution_2eproto();
  friend void protobuf_ShutdownFile_SceneInterlocution_2eproto();

  void InitAsDefaultInstance();
  static Answer* default_instance_;
};
// -------------------------------------------------------------------

class Query : public ::google::protobuf::Message {
 public:
  Query();
  virtual ~Query();

  Query(const Query& from);

  inline Query& operator=(const Query& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Query& default_instance();

  void Swap(Query* other);

  // implements Message ----------------------------------------------

  Query* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Query& from);
  void MergeFrom(const Query& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_INTER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.InterParam param = 2 [default = INTERPARAM_QUERYINTER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::InterParam param() const;
  inline void set_param(::Cmd::InterParam value);

  // optional uint64 npcid = 3 [default = 0];
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcidFieldNumber = 3;
  inline ::google::protobuf::uint64 npcid() const;
  inline void set_npcid(::google::protobuf::uint64 value);

  // optional .Cmd.EQueryState ret = 4;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 4;
  inline ::Cmd::EQueryState ret() const;
  inline void set_ret(::Cmd::EQueryState value);

  // @@protoc_insertion_point(class_scope:Cmd.Query)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_npcid();
  inline void clear_has_npcid();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 npcid_;
  int ret_;
  friend void  protobuf_AddDesc_SceneInterlocution_2eproto();
  friend void protobuf_AssignDesc_SceneInterlocution_2eproto();
  friend void protobuf_ShutdownFile_SceneInterlocution_2eproto();

  void InitAsDefaultInstance();
  static Query* default_instance_;
};
// ===================================================================


// ===================================================================

// InterData

// optional uint32 guid = 1 [default = 0];
inline bool InterData::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InterData::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InterData::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InterData::clear_guid() {
  guid_ = 0u;
  clear_has_guid();
}
inline ::google::protobuf::uint32 InterData::guid() const {
  // @@protoc_insertion_point(field_get:Cmd.InterData.guid)
  return guid_;
}
inline void InterData::set_guid(::google::protobuf::uint32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.InterData.guid)
}

// optional uint32 interid = 2 [default = 0];
inline bool InterData::has_interid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InterData::set_has_interid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InterData::clear_has_interid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InterData::clear_interid() {
  interid_ = 0u;
  clear_has_interid();
}
inline ::google::protobuf::uint32 InterData::interid() const {
  // @@protoc_insertion_point(field_get:Cmd.InterData.interid)
  return interid_;
}
inline void InterData::set_interid(::google::protobuf::uint32 value) {
  set_has_interid();
  interid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.InterData.interid)
}

// optional .Cmd.ESource source = 3 [default = ESOURCE_MIN];
inline bool InterData::has_source() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InterData::set_has_source() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InterData::clear_has_source() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InterData::clear_source() {
  source_ = 0;
  clear_has_source();
}
inline ::Cmd::ESource InterData::source() const {
  // @@protoc_insertion_point(field_get:Cmd.InterData.source)
  return static_cast< ::Cmd::ESource >(source_);
}
inline void InterData::set_source(::Cmd::ESource value) {
  assert(::Cmd::ESource_IsValid(value));
  set_has_source();
  source_ = value;
  // @@protoc_insertion_point(field_set:Cmd.InterData.source)
}

// -------------------------------------------------------------------

// NewInter

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_INTER_PROTOCMD];
inline bool NewInter::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewInter::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewInter::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewInter::clear_cmd() {
  cmd_ = 22;
  clear_has_cmd();
}
inline ::Cmd::Command NewInter::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.NewInter.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void NewInter::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.NewInter.cmd)
}

// optional .Cmd.InterParam param = 2 [default = INTERPARAM_NEWINTERLOCUTION];
inline bool NewInter::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewInter::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewInter::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewInter::clear_param() {
  param_ = 1;
  clear_has_param();
}
inline ::Cmd::InterParam NewInter::param() const {
  // @@protoc_insertion_point(field_get:Cmd.NewInter.param)
  return static_cast< ::Cmd::InterParam >(param_);
}
inline void NewInter::set_param(::Cmd::InterParam value) {
  assert(::Cmd::InterParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.NewInter.param)
}

// optional .Cmd.InterData inter = 3;
inline bool NewInter::has_inter() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NewInter::set_has_inter() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NewInter::clear_has_inter() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NewInter::clear_inter() {
  if (inter_ != NULL) inter_->::Cmd::InterData::Clear();
  clear_has_inter();
}
inline const ::Cmd::InterData& NewInter::inter() const {
  // @@protoc_insertion_point(field_get:Cmd.NewInter.inter)
  return inter_ != NULL ? *inter_ : *default_instance_->inter_;
}
inline ::Cmd::InterData* NewInter::mutable_inter() {
  set_has_inter();
  if (inter_ == NULL) inter_ = new ::Cmd::InterData;
  // @@protoc_insertion_point(field_mutable:Cmd.NewInter.inter)
  return inter_;
}
inline ::Cmd::InterData* NewInter::release_inter() {
  clear_has_inter();
  ::Cmd::InterData* temp = inter_;
  inter_ = NULL;
  return temp;
}
inline void NewInter::set_allocated_inter(::Cmd::InterData* inter) {
  delete inter_;
  inter_ = inter;
  if (inter) {
    set_has_inter();
  } else {
    clear_has_inter();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.NewInter.inter)
}

// optional uint64 npcid = 4;
inline bool NewInter::has_npcid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NewInter::set_has_npcid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NewInter::clear_has_npcid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NewInter::clear_npcid() {
  npcid_ = GOOGLE_ULONGLONG(0);
  clear_has_npcid();
}
inline ::google::protobuf::uint64 NewInter::npcid() const {
  // @@protoc_insertion_point(field_get:Cmd.NewInter.npcid)
  return npcid_;
}
inline void NewInter::set_npcid(::google::protobuf::uint64 value) {
  set_has_npcid();
  npcid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.NewInter.npcid)
}

// optional uint64 answerid = 5 [default = 0];
inline bool NewInter::has_answerid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NewInter::set_has_answerid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NewInter::clear_has_answerid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NewInter::clear_answerid() {
  answerid_ = GOOGLE_ULONGLONG(0);
  clear_has_answerid();
}
inline ::google::protobuf::uint64 NewInter::answerid() const {
  // @@protoc_insertion_point(field_get:Cmd.NewInter.answerid)
  return answerid_;
}
inline void NewInter::set_answerid(::google::protobuf::uint64 value) {
  set_has_answerid();
  answerid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.NewInter.answerid)
}

// -------------------------------------------------------------------

// Answer

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_INTER_PROTOCMD];
inline bool Answer::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Answer::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Answer::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Answer::clear_cmd() {
  cmd_ = 22;
  clear_has_cmd();
}
inline ::Cmd::Command Answer::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.Answer.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void Answer::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.Answer.cmd)
}

// optional .Cmd.InterParam param = 2 [default = INTERPARAM_ANSWERINTER];
inline bool Answer::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Answer::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Answer::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Answer::clear_param() {
  param_ = 2;
  clear_has_param();
}
inline ::Cmd::InterParam Answer::param() const {
  // @@protoc_insertion_point(field_get:Cmd.Answer.param)
  return static_cast< ::Cmd::InterParam >(param_);
}
inline void Answer::set_param(::Cmd::InterParam value) {
  assert(::Cmd::InterParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.Answer.param)
}

// optional uint64 npcid = 3;
inline bool Answer::has_npcid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Answer::set_has_npcid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Answer::clear_has_npcid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Answer::clear_npcid() {
  npcid_ = GOOGLE_ULONGLONG(0);
  clear_has_npcid();
}
inline ::google::protobuf::uint64 Answer::npcid() const {
  // @@protoc_insertion_point(field_get:Cmd.Answer.npcid)
  return npcid_;
}
inline void Answer::set_npcid(::google::protobuf::uint64 value) {
  set_has_npcid();
  npcid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.Answer.npcid)
}

// optional uint32 guid = 4 [default = 0];
inline bool Answer::has_guid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Answer::set_has_guid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Answer::clear_has_guid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Answer::clear_guid() {
  guid_ = 0u;
  clear_has_guid();
}
inline ::google::protobuf::uint32 Answer::guid() const {
  // @@protoc_insertion_point(field_get:Cmd.Answer.guid)
  return guid_;
}
inline void Answer::set_guid(::google::protobuf::uint32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.Answer.guid)
}

// optional uint32 interid = 5 [default = 0];
inline bool Answer::has_interid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Answer::set_has_interid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Answer::clear_has_interid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Answer::clear_interid() {
  interid_ = 0u;
  clear_has_interid();
}
inline ::google::protobuf::uint32 Answer::interid() const {
  // @@protoc_insertion_point(field_get:Cmd.Answer.interid)
  return interid_;
}
inline void Answer::set_interid(::google::protobuf::uint32 value) {
  set_has_interid();
  interid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.Answer.interid)
}

// optional .Cmd.ESource source = 6 [default = ESOURCE_MIN];
inline bool Answer::has_source() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Answer::set_has_source() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Answer::clear_has_source() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Answer::clear_source() {
  source_ = 0;
  clear_has_source();
}
inline ::Cmd::ESource Answer::source() const {
  // @@protoc_insertion_point(field_get:Cmd.Answer.source)
  return static_cast< ::Cmd::ESource >(source_);
}
inline void Answer::set_source(::Cmd::ESource value) {
  assert(::Cmd::ESource_IsValid(value));
  set_has_source();
  source_ = value;
  // @@protoc_insertion_point(field_set:Cmd.Answer.source)
}

// optional uint32 answer = 7 [default = 0];
inline bool Answer::has_answer() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Answer::set_has_answer() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Answer::clear_has_answer() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Answer::clear_answer() {
  answer_ = 0u;
  clear_has_answer();
}
inline ::google::protobuf::uint32 Answer::answer() const {
  // @@protoc_insertion_point(field_get:Cmd.Answer.answer)
  return answer_;
}
inline void Answer::set_answer(::google::protobuf::uint32 value) {
  set_has_answer();
  answer_ = value;
  // @@protoc_insertion_point(field_set:Cmd.Answer.answer)
}

// optional bool correct = 8 [default = false];
inline bool Answer::has_correct() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Answer::set_has_correct() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Answer::clear_has_correct() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Answer::clear_correct() {
  correct_ = false;
  clear_has_correct();
}
inline bool Answer::correct() const {
  // @@protoc_insertion_point(field_get:Cmd.Answer.correct)
  return correct_;
}
inline void Answer::set_correct(bool value) {
  set_has_correct();
  correct_ = value;
  // @@protoc_insertion_point(field_set:Cmd.Answer.correct)
}

// -------------------------------------------------------------------

// Query

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_INTER_PROTOCMD];
inline bool Query::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Query::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Query::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Query::clear_cmd() {
  cmd_ = 22;
  clear_has_cmd();
}
inline ::Cmd::Command Query::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.Query.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void Query::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.Query.cmd)
}

// optional .Cmd.InterParam param = 2 [default = INTERPARAM_QUERYINTER];
inline bool Query::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Query::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Query::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Query::clear_param() {
  param_ = 3;
  clear_has_param();
}
inline ::Cmd::InterParam Query::param() const {
  // @@protoc_insertion_point(field_get:Cmd.Query.param)
  return static_cast< ::Cmd::InterParam >(param_);
}
inline void Query::set_param(::Cmd::InterParam value) {
  assert(::Cmd::InterParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.Query.param)
}

// optional uint64 npcid = 3 [default = 0];
inline bool Query::has_npcid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Query::set_has_npcid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Query::clear_has_npcid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Query::clear_npcid() {
  npcid_ = GOOGLE_ULONGLONG(0);
  clear_has_npcid();
}
inline ::google::protobuf::uint64 Query::npcid() const {
  // @@protoc_insertion_point(field_get:Cmd.Query.npcid)
  return npcid_;
}
inline void Query::set_npcid(::google::protobuf::uint64 value) {
  set_has_npcid();
  npcid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.Query.npcid)
}

// optional .Cmd.EQueryState ret = 4;
inline bool Query::has_ret() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Query::set_has_ret() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Query::clear_has_ret() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Query::clear_ret() {
  ret_ = 1;
  clear_has_ret();
}
inline ::Cmd::EQueryState Query::ret() const {
  // @@protoc_insertion_point(field_get:Cmd.Query.ret)
  return static_cast< ::Cmd::EQueryState >(ret_);
}
inline void Query::set_ret(::Cmd::EQueryState value) {
  assert(::Cmd::EQueryState_IsValid(value));
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Cmd.Query.ret)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cmd

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Cmd::InterParam> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::InterParam>() {
  return ::Cmd::InterParam_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EQueryState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EQueryState>() {
  return ::Cmd::EQueryState_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SceneInterlocution_2eproto__INCLUDED
