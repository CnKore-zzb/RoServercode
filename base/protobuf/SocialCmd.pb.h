// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SocialCmd.proto

#ifndef PROTOBUF_SocialCmd_2eproto__INCLUDED
#define PROTOBUF_SocialCmd_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "xCmd.pb.h"
#include "ChatCmd.pb.h"
#include "ProtoCommon.pb.h"
#include "GuildCmd.pb.h"
#include "SceneUser.pb.h"
#include "SceneUser2.pb.h"
#include "SceneItem.pb.h"
#include "SessionTeam.pb.h"
#include "InfiniteTower.pb.h"
#include "SessionSociality.pb.h"
#include "SceneTip.pb.h"
#include "Tutor.pb.h"
// @@protoc_insertion_point(includes)

namespace Cmd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SocialCmd_2eproto();
void protobuf_AssignDesc_SocialCmd_2eproto();
void protobuf_ShutdownFile_SocialCmd_2eproto();

class SocialUser;
class SessionForwardSocialCmd;
class ForwardToUserSocialCmd;
class ForwardToUserSceneSocialCmd;
class ForwardToSceneUserSocialCmd;
class ForwardToSessionUserSocialCmd;
class OnlineStatusSocialCmd;
class AddOfflineMsgSocialCmd;
class UserInfo;
class UserInfoSyncSocialCmd;
class UserAddItemSocialCmd;
class UserDelSocialCmd;
class UserGuildInfoSocialCmd;
class ChatWorldMsgSocialCmd;
class ChatUser;
class ChatSocialCmd;
class CreateGuildSocialCmd;
class GuildDonateSocialCmd;
class GuildApplySocialCmd;
class GuildProcessInviteSocialCmd;
class GuildExchangeZoneSocialCmd;
class TeamCreateSocialCmd;
class TeamInviteSocialCmd;
class TeamProcessInviteSocialCmd;
class TeamApplySocialCmd;
class TeamQuickEnterSocialCmd;
class DojoStateNtfSocialCmd;
class DojoCreateSocialCmd;
class TowerLeaderInfoSyncSocialCmd;
class TowerSceneCreateSocialCmd;
class TowerSceneSyncSocialCmd;
class TowerLayerSyncSocialCmd;
class LeaderSealFinishSocialCmd;
class GoTeamRaidSocialCmd;
class DelTeamRaidSocialCmd;
class SendMailSocialCmd;
class ForwardToAllSessionSocialCmd;
class GuildLevelUpSocialCmd;
class MoveGuildZoneSocialCmd;
class SocialDataUpdateSocialCmd;
class AddRelationSocialCmd;
class RemoveRelationSocialCmd;
class RemoveSocialitySocialCmd;
class SocialItem;
class SyncSocialListSocialCmd;
class SocialListUpdateSocialCmd;
class UpdateRelationTimeSocialCmd;
class TeamerQuestUpdateSocialCmd;
class GlobalForwardCmdSocialCmd;
class AuthorizeInfoSyncSocialCmd;
class SyncRedTipSocialCmd;
class SendTutorRewardSocialCmd;
class SyncTutorRewardSocialCmd;
class GlobalForwardCmdSocialCmd2;
class CardSceneCreateSocialCmd;
class CardSceneSyncSocialCmd;
class ModifyDepositSocialCmd;
class TeamRaidSceneCreateSocialCmd;
class TeamRaidSceneSyncSocialCmd;

enum SocialParam {
  SOCIALPARAM_SESSION_FORWARD_SOCIAL_CMD = 1,
  SOCIALPARAM_FORWARD_TO_USER = 2,
  SOCIALPARAM_FORWARD_TO_USER_SCENE = 3,
  SOCIALPARAM_FORWARD_TO_SCENE_USER = 4,
  SOCIALPARAM_FORWARD_TO_SESSION_USER = 68,
  SOCIALPARAM_ONLINESTATUS = 5,
  SOCIALPARAM_ADD_OFFLINEMSG = 6,
  SOCIALPARAM_USER_SYNC_INFO = 10,
  SOCIALPARAM_USER_ADD_ITEM = 11,
  SOCIALPARAM_USER_DEL_CHAR = 12,
  SOCIALPARAM_USER_GUILD_INFO = 14,
  SOCIALPARAM_CHAT_WORLDMSG = 21,
  SOCIALPARAM_CHAT_MSG = 22,
  SOCIALPARAM_CREATEGUILD = 31,
  SOCIALPARAM_GUILDDONATE = 32,
  SOCIALPARAM_GUILD_APPLY = 37,
  SOCIALPARAM_GUILD_PROCESSINVITE = 38,
  SOCIALPARAM_GUILD_EXCHANGEZONE = 42,
  SOCIALPARAM_GUILD_LEVELUP = 44,
  SOCIALPARAM_TEAM_CREATE = 51,
  SOCIALPARAM_TEAM_INVITE = 52,
  SOCIALPARAM_TEAM_PROCESSINVITE = 53,
  SOCIALPARAM_TEAM_APPLY = 54,
  SOCIALPARAM_TEAM_QUICKENTER = 55,
  SOCIALPARAM_DOJO_CREATE = 56,
  SOCIALPARAM_DOJO_STATE_NTF = 57,
  SOCIALPARAM_TOWER_SYNC_LEADERINFO = 58,
  SOCIALPARAM_TOWER_SCENE_CREATE = 59,
  SOCIALPARAM_TOWER_SYNC_SCENEINFO = 60,
  SOCIALPARAM_TOWER_SYNC_LAYER = 61,
  SOCIALPARAM_GO_TEAM_RAID = 62,
  SOCIALPARAM_DEL_TEAM_RAID = 63,
  SOCIALPARAM_SEND_MAIL = 64,
  SOCIALPARAM_CREATE_PVECARDRAID = 65,
  SOCIALPARAM_PVECARD_SCENEINFO = 66,
  SOCIALPARAM_FORWARD_TO_ALL_SESSION = 67,
  SOCIALPARAM_GM_MOVE_GUILD_ZONE = 70,
  SOCIALPARAM_TEAM_SEAL_FIHISH = 71,
  SOCIALPARAM_SOCIAL_DATA_UPDATE = 80,
  SOCIALPARAM_SOCIAL_ADDRELATION = 81,
  SOCIALPARAM_SOCIAL_REMOVERELATION = 82,
  SOCIALPARAM_SOCIAL_REMOVESOCIAL = 84,
  SOCIALPARAM_SOCIAL_SYNC_LIST = 85,
  SOCIALPARAM_SOCIAL_LIST_UPDATE = 86,
  SOCIALPARAM_SOCIAL_UPDATE_RELATIONTIME = 91,
  SOCIALPARAM_TEAM_QUEST_UPDATE = 87,
  SOCIALPARAM_GLOBAL_FORWARD_CMD = 88,
  SOCIALPARAM_AUTHORIZE_SYNC_INFO = 90,
  SOCIALPARAM_SYNC_REDTIP = 92,
  SOCIALPARAM_SEND_TUTOR_REWARD = 93,
  SOCIALPARAM_SYNC_TUTOR_REWARD = 94,
  SOCIALPARAM_GLOBAL_FORWARD_CMD2 = 95,
  SOCIALPARAM_CREATE_TEAMRAID = 96,
  SOCIALPARAM_SYNC_TEAMRAID = 97,
  SOCIALPARAM_MODIFY_DEPOSIT = 98
};
bool SocialParam_IsValid(int value);
const SocialParam SocialParam_MIN = SOCIALPARAM_SESSION_FORWARD_SOCIAL_CMD;
const SocialParam SocialParam_MAX = SOCIALPARAM_MODIFY_DEPOSIT;
const int SocialParam_ARRAYSIZE = SocialParam_MAX + 1;

const ::google::protobuf::EnumDescriptor* SocialParam_descriptor();
inline const ::std::string& SocialParam_Name(SocialParam value) {
  return ::google::protobuf::internal::NameOfEnum(
    SocialParam_descriptor(), value);
}
inline bool SocialParam_Parse(
    const ::std::string& name, SocialParam* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SocialParam>(
    SocialParam_descriptor(), name, value);
}
enum ECmdType {
  ECMDTYPE_MIN = 0,
  ECMDTYPE_SOCIALITY = 1,
  ECMDTYPE_CHAT = 2,
  ECMDTYPE_GUILD = 3,
  ECMDTYPE_TEAM = 4,
  ECMDTYPE_DOJO = 5,
  ECMDTYPE_TOWER = 6,
  ECMDTYPE_DOJO_GUILD = 7,
  ECMDTYPE_PVECARD = 8,
  ECMDTYPE_TEAMRAID = 9,
  ECMDTYPE_MAX = 10
};
bool ECmdType_IsValid(int value);
const ECmdType ECmdType_MIN = ECMDTYPE_MIN;
const ECmdType ECmdType_MAX = ECMDTYPE_MAX;
const int ECmdType_ARRAYSIZE = ECmdType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ECmdType_descriptor();
inline const ::std::string& ECmdType_Name(ECmdType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ECmdType_descriptor(), value);
}
inline bool ECmdType_Parse(
    const ::std::string& name, ECmdType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ECmdType>(
    ECmdType_descriptor(), name, value);
}
enum EDOJOSTATE {
  EDOJOSTATE_OPEN = 1,
  EDOJOSTATE_CLOSE = 2
};
bool EDOJOSTATE_IsValid(int value);
const EDOJOSTATE EDOJOSTATE_MIN = EDOJOSTATE_OPEN;
const EDOJOSTATE EDOJOSTATE_MAX = EDOJOSTATE_CLOSE;
const int EDOJOSTATE_ARRAYSIZE = EDOJOSTATE_MAX + 1;

const ::google::protobuf::EnumDescriptor* EDOJOSTATE_descriptor();
inline const ::std::string& EDOJOSTATE_Name(EDOJOSTATE value) {
  return ::google::protobuf::internal::NameOfEnum(
    EDOJOSTATE_descriptor(), value);
}
inline bool EDOJOSTATE_Parse(
    const ::std::string& name, EDOJOSTATE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EDOJOSTATE>(
    EDOJOSTATE_descriptor(), name, value);
}
enum EDir {
  EDir_ToClient = 0,
  EDir_ToScene = 1
};
bool EDir_IsValid(int value);
const EDir EDir_MIN = EDir_ToClient;
const EDir EDir_MAX = EDir_ToScene;
const int EDir_ARRAYSIZE = EDir_MAX + 1;

const ::google::protobuf::EnumDescriptor* EDir_descriptor();
inline const ::std::string& EDir_Name(EDir value) {
  return ::google::protobuf::internal::NameOfEnum(
    EDir_descriptor(), value);
}
inline bool EDir_Parse(
    const ::std::string& name, EDir* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EDir>(
    EDir_descriptor(), name, value);
}
// ===================================================================

class SocialUser : public ::google::protobuf::Message {
 public:
  SocialUser();
  virtual ~SocialUser();

  SocialUser(const SocialUser& from);

  inline SocialUser& operator=(const SocialUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SocialUser& default_instance();

  void Swap(SocialUser* other);

  // implements Message ----------------------------------------------

  SocialUser* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SocialUser& from);
  void MergeFrom(const SocialUser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 accid = 1 [default = 0];
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 1;
  inline ::google::protobuf::uint64 accid() const;
  inline void set_accid(::google::protobuf::uint64 value);

  // optional uint64 charid = 2 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 zoneid = 3 [default = 0];
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 3;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 mapid = 4 [default = 0];
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 4;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // optional uint32 baselv = 5 [default = 0];
  inline bool has_baselv() const;
  inline void clear_baselv();
  static const int kBaselvFieldNumber = 5;
  inline ::google::protobuf::uint32 baselv() const;
  inline void set_baselv(::google::protobuf::uint32 value);

  // optional .Cmd.EProfession profession = 6 [default = EPROFESSION_MIN];
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 6;
  inline ::Cmd::EProfession profession() const;
  inline void set_profession(::Cmd::EProfession value);

  // optional string name = 7;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 7;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:Cmd.SocialUser)
 private:
  inline void set_has_accid();
  inline void clear_has_accid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_baselv();
  inline void clear_has_baselv();
  inline void set_has_profession();
  inline void clear_has_profession();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 accid_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 baselv_;
  int profession_;
  ::std::string* name_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static SocialUser* default_instance_;
};
// -------------------------------------------------------------------

class SessionForwardSocialCmd : public ::google::protobuf::Message {
 public:
  SessionForwardSocialCmd();
  virtual ~SessionForwardSocialCmd();

  SessionForwardSocialCmd(const SessionForwardSocialCmd& from);

  inline SessionForwardSocialCmd& operator=(const SessionForwardSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SessionForwardSocialCmd& default_instance();

  void Swap(SessionForwardSocialCmd* other);

  // implements Message ----------------------------------------------

  SessionForwardSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SessionForwardSocialCmd& from);
  void MergeFrom(const SessionForwardSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_SESSION_FORWARD_SOCIAL_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional .Cmd.ECmdType type = 3 [default = ECMDTYPE_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::Cmd::ECmdType type() const;
  inline void set_type(::Cmd::ECmdType value);

  // optional .Cmd.SocialUser user = 4;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 4;
  inline const ::Cmd::SocialUser& user() const;
  inline ::Cmd::SocialUser* mutable_user();
  inline ::Cmd::SocialUser* release_user();
  inline void set_allocated_user(::Cmd::SocialUser* user);

  // optional bytes data = 5;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 5;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // optional uint32 len = 6 [default = 0];
  inline bool has_len() const;
  inline void clear_len();
  static const int kLenFieldNumber = 6;
  inline ::google::protobuf::uint32 len() const;
  inline void set_len(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.SessionForwardSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_len();
  inline void clear_has_len();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::SocialUser* user_;
  int type_;
  ::google::protobuf::uint32 len_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static SessionForwardSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class ForwardToUserSocialCmd : public ::google::protobuf::Message {
 public:
  ForwardToUserSocialCmd();
  virtual ~ForwardToUserSocialCmd();

  ForwardToUserSocialCmd(const ForwardToUserSocialCmd& from);

  inline ForwardToUserSocialCmd& operator=(const ForwardToUserSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ForwardToUserSocialCmd& default_instance();

  void Swap(ForwardToUserSocialCmd* other);

  // implements Message ----------------------------------------------

  ForwardToUserSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ForwardToUserSocialCmd& from);
  void MergeFrom(const ForwardToUserSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_FORWARD_TO_USER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional bytes data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // optional uint32 len = 5;
  inline bool has_len() const;
  inline void clear_len();
  static const int kLenFieldNumber = 5;
  inline ::google::protobuf::uint32 len() const;
  inline void set_len(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ForwardToUserSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_len();
  inline void clear_has_len();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::std::string* data_;
  ::google::protobuf::uint32 len_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static ForwardToUserSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class ForwardToUserSceneSocialCmd : public ::google::protobuf::Message {
 public:
  ForwardToUserSceneSocialCmd();
  virtual ~ForwardToUserSceneSocialCmd();

  ForwardToUserSceneSocialCmd(const ForwardToUserSceneSocialCmd& from);

  inline ForwardToUserSceneSocialCmd& operator=(const ForwardToUserSceneSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ForwardToUserSceneSocialCmd& default_instance();

  void Swap(ForwardToUserSceneSocialCmd* other);

  // implements Message ----------------------------------------------

  ForwardToUserSceneSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ForwardToUserSceneSocialCmd& from);
  void MergeFrom(const ForwardToUserSceneSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_FORWARD_TO_USER_SCENE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional bytes data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // optional uint32 len = 5;
  inline bool has_len() const;
  inline void clear_len();
  static const int kLenFieldNumber = 5;
  inline ::google::protobuf::uint32 len() const;
  inline void set_len(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ForwardToUserSceneSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_len();
  inline void clear_has_len();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::std::string* data_;
  ::google::protobuf::uint32 len_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static ForwardToUserSceneSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class ForwardToSceneUserSocialCmd : public ::google::protobuf::Message {
 public:
  ForwardToSceneUserSocialCmd();
  virtual ~ForwardToSceneUserSocialCmd();

  ForwardToSceneUserSocialCmd(const ForwardToSceneUserSocialCmd& from);

  inline ForwardToSceneUserSocialCmd& operator=(const ForwardToSceneUserSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ForwardToSceneUserSocialCmd& default_instance();

  void Swap(ForwardToSceneUserSocialCmd* other);

  // implements Message ----------------------------------------------

  ForwardToSceneUserSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ForwardToSceneUserSocialCmd& from);
  void MergeFrom(const ForwardToSceneUserSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_FORWARD_TO_SCENE_USER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional bytes data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // optional uint32 len = 5;
  inline bool has_len() const;
  inline void clear_len();
  static const int kLenFieldNumber = 5;
  inline ::google::protobuf::uint32 len() const;
  inline void set_len(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ForwardToSceneUserSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_len();
  inline void clear_has_len();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::std::string* data_;
  ::google::protobuf::uint32 len_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static ForwardToSceneUserSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class ForwardToSessionUserSocialCmd : public ::google::protobuf::Message {
 public:
  ForwardToSessionUserSocialCmd();
  virtual ~ForwardToSessionUserSocialCmd();

  ForwardToSessionUserSocialCmd(const ForwardToSessionUserSocialCmd& from);

  inline ForwardToSessionUserSocialCmd& operator=(const ForwardToSessionUserSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ForwardToSessionUserSocialCmd& default_instance();

  void Swap(ForwardToSessionUserSocialCmd* other);

  // implements Message ----------------------------------------------

  ForwardToSessionUserSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ForwardToSessionUserSocialCmd& from);
  void MergeFrom(const ForwardToSessionUserSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_FORWARD_TO_SESSION_USER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional bytes data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // optional uint32 len = 5 [default = 0];
  inline bool has_len() const;
  inline void clear_len();
  static const int kLenFieldNumber = 5;
  inline ::google::protobuf::uint32 len() const;
  inline void set_len(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ForwardToSessionUserSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_len();
  inline void clear_has_len();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::std::string* data_;
  ::google::protobuf::uint32 len_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static ForwardToSessionUserSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class OnlineStatusSocialCmd : public ::google::protobuf::Message {
 public:
  OnlineStatusSocialCmd();
  virtual ~OnlineStatusSocialCmd();

  OnlineStatusSocialCmd(const OnlineStatusSocialCmd& from);

  inline OnlineStatusSocialCmd& operator=(const OnlineStatusSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnlineStatusSocialCmd& default_instance();

  void Swap(OnlineStatusSocialCmd* other);

  // implements Message ----------------------------------------------

  OnlineStatusSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OnlineStatusSocialCmd& from);
  void MergeFrom(const OnlineStatusSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_ONLINESTATUS];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional .Cmd.SocialUser user = 3;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 3;
  inline const ::Cmd::SocialUser& user() const;
  inline ::Cmd::SocialUser* mutable_user();
  inline ::Cmd::SocialUser* release_user();
  inline void set_allocated_user(::Cmd::SocialUser* user);

  // optional bool online = 4 [default = false];
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 4;
  inline bool online() const;
  inline void set_online(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.OnlineStatusSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_online();
  inline void clear_has_online();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::SocialUser* user_;
  bool online_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static OnlineStatusSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class AddOfflineMsgSocialCmd : public ::google::protobuf::Message {
 public:
  AddOfflineMsgSocialCmd();
  virtual ~AddOfflineMsgSocialCmd();

  AddOfflineMsgSocialCmd(const AddOfflineMsgSocialCmd& from);

  inline AddOfflineMsgSocialCmd& operator=(const AddOfflineMsgSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddOfflineMsgSocialCmd& default_instance();

  void Swap(AddOfflineMsgSocialCmd* other);

  // implements Message ----------------------------------------------

  AddOfflineMsgSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddOfflineMsgSocialCmd& from);
  void MergeFrom(const AddOfflineMsgSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_ADD_OFFLINEMSG];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional .Cmd.OfflineMsg msg = 3;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 3;
  inline const ::Cmd::OfflineMsg& msg() const;
  inline ::Cmd::OfflineMsg* mutable_msg();
  inline ::Cmd::OfflineMsg* release_msg();
  inline void set_allocated_msg(::Cmd::OfflineMsg* msg);

  // @@protoc_insertion_point(class_scope:Cmd.AddOfflineMsgSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::OfflineMsg* msg_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static AddOfflineMsgSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class UserInfo : public ::google::protobuf::Message {
 public:
  UserInfo();
  virtual ~UserInfo();

  UserInfo(const UserInfo& from);

  inline UserInfo& operator=(const UserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserInfo& default_instance();

  void Swap(UserInfo* other);

  // implements Message ----------------------------------------------

  UserInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserInfo& from);
  void MergeFrom(const UserInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.SocialUser user = 1;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 1;
  inline const ::Cmd::SocialUser& user() const;
  inline ::Cmd::SocialUser* mutable_user();
  inline ::Cmd::SocialUser* release_user();
  inline void set_allocated_user(::Cmd::SocialUser* user);

  // repeated .Cmd.UserData datas = 2;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 2;
  inline const ::Cmd::UserData& datas(int index) const;
  inline ::Cmd::UserData* mutable_datas(int index);
  inline ::Cmd::UserData* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UserData >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::UserData >*
      mutable_datas();

  // repeated .Cmd.UserAttr attrs = 3;
  inline int attrs_size() const;
  inline void clear_attrs();
  static const int kAttrsFieldNumber = 3;
  inline const ::Cmd::UserAttr& attrs(int index) const;
  inline ::Cmd::UserAttr* mutable_attrs(int index);
  inline ::Cmd::UserAttr* add_attrs();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >&
      attrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >*
      mutable_attrs();

  // @@protoc_insertion_point(class_scope:Cmd.UserInfo)
 private:
  inline void set_has_user();
  inline void clear_has_user();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Cmd::SocialUser* user_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::UserData > datas_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr > attrs_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static UserInfo* default_instance_;
};
// -------------------------------------------------------------------

class UserInfoSyncSocialCmd : public ::google::protobuf::Message {
 public:
  UserInfoSyncSocialCmd();
  virtual ~UserInfoSyncSocialCmd();

  UserInfoSyncSocialCmd(const UserInfoSyncSocialCmd& from);

  inline UserInfoSyncSocialCmd& operator=(const UserInfoSyncSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserInfoSyncSocialCmd& default_instance();

  void Swap(UserInfoSyncSocialCmd* other);

  // implements Message ----------------------------------------------

  UserInfoSyncSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserInfoSyncSocialCmd& from);
  void MergeFrom(const UserInfoSyncSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_USER_SYNC_INFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional .Cmd.UserInfo info = 4;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 4;
  inline const ::Cmd::UserInfo& info() const;
  inline ::Cmd::UserInfo* mutable_info();
  inline ::Cmd::UserInfo* release_info();
  inline void set_allocated_info(::Cmd::UserInfo* info);

  // @@protoc_insertion_point(class_scope:Cmd.UserInfoSyncSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::UserInfo* info_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static UserInfoSyncSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class UserAddItemSocialCmd : public ::google::protobuf::Message {
 public:
  UserAddItemSocialCmd();
  virtual ~UserAddItemSocialCmd();

  UserAddItemSocialCmd(const UserAddItemSocialCmd& from);

  inline UserAddItemSocialCmd& operator=(const UserAddItemSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserAddItemSocialCmd& default_instance();

  void Swap(UserAddItemSocialCmd* other);

  // implements Message ----------------------------------------------

  UserAddItemSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserAddItemSocialCmd& from);
  void MergeFrom(const UserAddItemSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_USER_ADD_ITEM];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional .Cmd.SocialUser user = 3;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 3;
  inline const ::Cmd::SocialUser& user() const;
  inline ::Cmd::SocialUser* mutable_user();
  inline ::Cmd::SocialUser* release_user();
  inline void set_allocated_user(::Cmd::SocialUser* user);

  // repeated .Cmd.ItemInfo items = 4;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 4;
  inline const ::Cmd::ItemInfo& items(int index) const;
  inline ::Cmd::ItemInfo* mutable_items(int index);
  inline ::Cmd::ItemInfo* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo >*
      mutable_items();

  // optional uint32 doublereward = 5 [default = 0];
  inline bool has_doublereward() const;
  inline void clear_doublereward();
  static const int kDoublerewardFieldNumber = 5;
  inline ::google::protobuf::uint32 doublereward() const;
  inline void set_doublereward(::google::protobuf::uint32 value);

  // optional uint32 operatereward = 6 [default = 0];
  inline bool has_operatereward() const;
  inline void clear_operatereward();
  static const int kOperaterewardFieldNumber = 6;
  inline ::google::protobuf::uint32 operatereward() const;
  inline void set_operatereward(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.UserAddItemSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_doublereward();
  inline void clear_has_doublereward();
  inline void set_has_operatereward();
  inline void clear_has_operatereward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::SocialUser* user_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo > items_;
  ::google::protobuf::uint32 doublereward_;
  ::google::protobuf::uint32 operatereward_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static UserAddItemSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class UserDelSocialCmd : public ::google::protobuf::Message {
 public:
  UserDelSocialCmd();
  virtual ~UserDelSocialCmd();

  UserDelSocialCmd(const UserDelSocialCmd& from);

  inline UserDelSocialCmd& operator=(const UserDelSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserDelSocialCmd& default_instance();

  void Swap(UserDelSocialCmd* other);

  // implements Message ----------------------------------------------

  UserDelSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserDelSocialCmd& from);
  void MergeFrom(const UserDelSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_USER_DEL_CHAR];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.UserDelSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static UserDelSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class UserGuildInfoSocialCmd : public ::google::protobuf::Message {
 public:
  UserGuildInfoSocialCmd();
  virtual ~UserGuildInfoSocialCmd();

  UserGuildInfoSocialCmd(const UserGuildInfoSocialCmd& from);

  inline UserGuildInfoSocialCmd& operator=(const UserGuildInfoSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserGuildInfoSocialCmd& default_instance();

  void Swap(UserGuildInfoSocialCmd* other);

  // implements Message ----------------------------------------------

  UserGuildInfoSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserGuildInfoSocialCmd& from);
  void MergeFrom(const UserGuildInfoSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_USER_GUILD_INFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string portrait = 5;
  inline bool has_portrait() const;
  inline void clear_portrait();
  static const int kPortraitFieldNumber = 5;
  inline const ::std::string& portrait() const;
  inline void set_portrait(const ::std::string& value);
  inline void set_portrait(const char* value);
  inline void set_portrait(const char* value, size_t size);
  inline ::std::string* mutable_portrait();
  inline ::std::string* release_portrait();
  inline void set_allocated_portrait(::std::string* portrait);

  // @@protoc_insertion_point(class_scope:Cmd.UserGuildInfoSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_portrait();
  inline void clear_has_portrait();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::std::string* name_;
  ::std::string* portrait_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static UserGuildInfoSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class ChatWorldMsgSocialCmd : public ::google::protobuf::Message {
 public:
  ChatWorldMsgSocialCmd();
  virtual ~ChatWorldMsgSocialCmd();

  ChatWorldMsgSocialCmd(const ChatWorldMsgSocialCmd& from);

  inline ChatWorldMsgSocialCmd& operator=(const ChatWorldMsgSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatWorldMsgSocialCmd& default_instance();

  void Swap(ChatWorldMsgSocialCmd* other);

  // implements Message ----------------------------------------------

  ChatWorldMsgSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChatWorldMsgSocialCmd& from);
  void MergeFrom(const ChatWorldMsgSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_CHAT_WORLDMSG];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional .Cmd.SysMsg msg = 3;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 3;
  inline const ::Cmd::SysMsg& msg() const;
  inline ::Cmd::SysMsg* mutable_msg();
  inline ::Cmd::SysMsg* release_msg();
  inline void set_allocated_msg(::Cmd::SysMsg* msg);

  // @@protoc_insertion_point(class_scope:Cmd.ChatWorldMsgSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::SysMsg* msg_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static ChatWorldMsgSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class ChatUser : public ::google::protobuf::Message {
 public:
  ChatUser();
  virtual ~ChatUser();

  ChatUser(const ChatUser& from);

  inline ChatUser& operator=(const ChatUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatUser& default_instance();

  void Swap(ChatUser* other);

  // implements Message ----------------------------------------------

  ChatUser* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChatUser& from);
  void MergeFrom(const ChatUser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charid = 1 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 zoneid = 2 [default = 0];
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ChatUser)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 zoneid_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static ChatUser* default_instance_;
};
// -------------------------------------------------------------------

class ChatSocialCmd : public ::google::protobuf::Message {
 public:
  ChatSocialCmd();
  virtual ~ChatSocialCmd();

  ChatSocialCmd(const ChatSocialCmd& from);

  inline ChatSocialCmd& operator=(const ChatSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatSocialCmd& default_instance();

  void Swap(ChatSocialCmd* other);

  // implements Message ----------------------------------------------

  ChatSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChatSocialCmd& from);
  void MergeFrom(const ChatSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_CHAT_MSG];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional .Cmd.ChatRetCmd ret = 3;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 3;
  inline const ::Cmd::ChatRetCmd& ret() const;
  inline ::Cmd::ChatRetCmd* mutable_ret();
  inline ::Cmd::ChatRetCmd* release_ret();
  inline void set_allocated_ret(::Cmd::ChatRetCmd* ret);

  // repeated .Cmd.ChatUser targets = 4;
  inline int targets_size() const;
  inline void clear_targets();
  static const int kTargetsFieldNumber = 4;
  inline const ::Cmd::ChatUser& targets(int index) const;
  inline ::Cmd::ChatUser* mutable_targets(int index);
  inline ::Cmd::ChatUser* add_targets();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ChatUser >&
      targets() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ChatUser >*
      mutable_targets();

  // optional uint64 accid = 5 [default = 0];
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 5;
  inline ::google::protobuf::uint64 accid() const;
  inline void set_accid(::google::protobuf::uint64 value);

  // optional uint32 platformid = 6 [default = 0];
  inline bool has_platformid() const;
  inline void clear_platformid();
  static const int kPlatformidFieldNumber = 6;
  inline ::google::protobuf::uint32 platformid() const;
  inline void set_platformid(::google::protobuf::uint32 value);

  // optional bool to_global = 7 [default = false];
  inline bool has_to_global() const;
  inline void clear_to_global();
  static const int kToGlobalFieldNumber = 7;
  inline bool to_global() const;
  inline void set_to_global(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.ChatSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_accid();
  inline void clear_has_accid();
  inline void set_has_platformid();
  inline void clear_has_platformid();
  inline void set_has_to_global();
  inline void clear_has_to_global();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::ChatRetCmd* ret_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ChatUser > targets_;
  ::google::protobuf::uint64 accid_;
  ::google::protobuf::uint32 platformid_;
  bool to_global_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static ChatSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class CreateGuildSocialCmd : public ::google::protobuf::Message {
 public:
  CreateGuildSocialCmd();
  virtual ~CreateGuildSocialCmd();

  CreateGuildSocialCmd(const CreateGuildSocialCmd& from);

  inline CreateGuildSocialCmd& operator=(const CreateGuildSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateGuildSocialCmd& default_instance();

  void Swap(CreateGuildSocialCmd* other);

  // implements Message ----------------------------------------------

  CreateGuildSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateGuildSocialCmd& from);
  void MergeFrom(const CreateGuildSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_CREATEGUILD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional .Cmd.UserInfo user = 3;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 3;
  inline const ::Cmd::UserInfo& user() const;
  inline ::Cmd::UserInfo* mutable_user();
  inline ::Cmd::UserInfo* release_user();
  inline void set_allocated_user(::Cmd::UserInfo* user);

  // optional uint32 msgid = 4 [default = 0];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 4;
  inline ::google::protobuf::uint32 msgid() const;
  inline void set_msgid(::google::protobuf::uint32 value);

  // optional string name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:Cmd.CreateGuildSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::UserInfo* user_;
  ::std::string* name_;
  ::google::protobuf::uint32 msgid_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static CreateGuildSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildDonateSocialCmd : public ::google::protobuf::Message {
 public:
  GuildDonateSocialCmd();
  virtual ~GuildDonateSocialCmd();

  GuildDonateSocialCmd(const GuildDonateSocialCmd& from);

  inline GuildDonateSocialCmd& operator=(const GuildDonateSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildDonateSocialCmd& default_instance();

  void Swap(GuildDonateSocialCmd* other);

  // implements Message ----------------------------------------------

  GuildDonateSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildDonateSocialCmd& from);
  void MergeFrom(const GuildDonateSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_GUILDDONATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional .Cmd.SocialUser user = 3;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 3;
  inline const ::Cmd::SocialUser& user() const;
  inline ::Cmd::SocialUser* mutable_user();
  inline ::Cmd::SocialUser* release_user();
  inline void set_allocated_user(::Cmd::SocialUser* user);

  // optional .Cmd.DonateItem item = 4;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 4;
  inline const ::Cmd::DonateItem& item() const;
  inline ::Cmd::DonateItem* mutable_item();
  inline ::Cmd::DonateItem* release_item();
  inline void set_allocated_item(::Cmd::DonateItem* item);

  // optional uint32 msgid = 5 [default = 0];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 5;
  inline ::google::protobuf::uint32 msgid() const;
  inline void set_msgid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildDonateSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::SocialUser* user_;
  ::Cmd::DonateItem* item_;
  ::google::protobuf::uint32 msgid_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildDonateSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildApplySocialCmd : public ::google::protobuf::Message {
 public:
  GuildApplySocialCmd();
  virtual ~GuildApplySocialCmd();

  GuildApplySocialCmd(const GuildApplySocialCmd& from);

  inline GuildApplySocialCmd& operator=(const GuildApplySocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildApplySocialCmd& default_instance();

  void Swap(GuildApplySocialCmd* other);

  // implements Message ----------------------------------------------

  GuildApplySocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildApplySocialCmd& from);
  void MergeFrom(const GuildApplySocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_GUILD_APPLY];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional .Cmd.UserInfo user = 3;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 3;
  inline const ::Cmd::UserInfo& user() const;
  inline ::Cmd::UserInfo* mutable_user();
  inline ::Cmd::UserInfo* release_user();
  inline void set_allocated_user(::Cmd::UserInfo* user);

  // optional uint64 guildid = 4 [default = 0];
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 4;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildApplySocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_guildid();
  inline void clear_has_guildid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::UserInfo* user_;
  ::google::protobuf::uint64 guildid_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildApplySocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildProcessInviteSocialCmd : public ::google::protobuf::Message {
 public:
  GuildProcessInviteSocialCmd();
  virtual ~GuildProcessInviteSocialCmd();

  GuildProcessInviteSocialCmd(const GuildProcessInviteSocialCmd& from);

  inline GuildProcessInviteSocialCmd& operator=(const GuildProcessInviteSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildProcessInviteSocialCmd& default_instance();

  void Swap(GuildProcessInviteSocialCmd* other);

  // implements Message ----------------------------------------------

  GuildProcessInviteSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildProcessInviteSocialCmd& from);
  void MergeFrom(const GuildProcessInviteSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_GUILD_PROCESSINVITE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional .Cmd.UserInfo user = 3;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 3;
  inline const ::Cmd::UserInfo& user() const;
  inline ::Cmd::UserInfo* mutable_user();
  inline ::Cmd::UserInfo* release_user();
  inline void set_allocated_user(::Cmd::UserInfo* user);

  // optional .Cmd.EGuildAction action = 4 [default = EGUILDACTION_MIN];
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 4;
  inline ::Cmd::EGuildAction action() const;
  inline void set_action(::Cmd::EGuildAction value);

  // optional uint64 guildid = 5 [default = 0];
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 5;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildProcessInviteSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_action();
  inline void clear_has_action();
  inline void set_has_guildid();
  inline void clear_has_guildid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::UserInfo* user_;
  ::google::protobuf::uint64 guildid_;
  int action_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildProcessInviteSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildExchangeZoneSocialCmd : public ::google::protobuf::Message {
 public:
  GuildExchangeZoneSocialCmd();
  virtual ~GuildExchangeZoneSocialCmd();

  GuildExchangeZoneSocialCmd(const GuildExchangeZoneSocialCmd& from);

  inline GuildExchangeZoneSocialCmd& operator=(const GuildExchangeZoneSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildExchangeZoneSocialCmd& default_instance();

  void Swap(GuildExchangeZoneSocialCmd* other);

  // implements Message ----------------------------------------------

  GuildExchangeZoneSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildExchangeZoneSocialCmd& from);
  void MergeFrom(const GuildExchangeZoneSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_GUILD_EXCHANGEZONE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional .Cmd.SocialUser user = 3;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 3;
  inline const ::Cmd::SocialUser& user() const;
  inline ::Cmd::SocialUser* mutable_user();
  inline ::Cmd::SocialUser* release_user();
  inline void set_allocated_user(::Cmd::SocialUser* user);

  // optional uint32 zoneid = 4 [default = 0];
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 4;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildExchangeZoneSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::SocialUser* user_;
  ::google::protobuf::uint32 zoneid_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildExchangeZoneSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class TeamCreateSocialCmd : public ::google::protobuf::Message {
 public:
  TeamCreateSocialCmd();
  virtual ~TeamCreateSocialCmd();

  TeamCreateSocialCmd(const TeamCreateSocialCmd& from);

  inline TeamCreateSocialCmd& operator=(const TeamCreateSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamCreateSocialCmd& default_instance();

  void Swap(TeamCreateSocialCmd* other);

  // implements Message ----------------------------------------------

  TeamCreateSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamCreateSocialCmd& from);
  void MergeFrom(const TeamCreateSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_TEAM_CREATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional .Cmd.UserInfo user = 3;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 3;
  inline const ::Cmd::UserInfo& user() const;
  inline ::Cmd::UserInfo* mutable_user();
  inline ::Cmd::UserInfo* release_user();
  inline void set_allocated_user(::Cmd::UserInfo* user);

  // optional .Cmd.CreateTeam team = 4;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 4;
  inline const ::Cmd::CreateTeam& team() const;
  inline ::Cmd::CreateTeam* mutable_team();
  inline ::Cmd::CreateTeam* release_team();
  inline void set_allocated_team(::Cmd::CreateTeam* team);

  // @@protoc_insertion_point(class_scope:Cmd.TeamCreateSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_team();
  inline void clear_has_team();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::UserInfo* user_;
  ::Cmd::CreateTeam* team_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static TeamCreateSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class TeamInviteSocialCmd : public ::google::protobuf::Message {
 public:
  TeamInviteSocialCmd();
  virtual ~TeamInviteSocialCmd();

  TeamInviteSocialCmd(const TeamInviteSocialCmd& from);

  inline TeamInviteSocialCmd& operator=(const TeamInviteSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamInviteSocialCmd& default_instance();

  void Swap(TeamInviteSocialCmd* other);

  // implements Message ----------------------------------------------

  TeamInviteSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamInviteSocialCmd& from);
  void MergeFrom(const TeamInviteSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_TEAM_INVITE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional .Cmd.UserInfo invite = 3;
  inline bool has_invite() const;
  inline void clear_invite();
  static const int kInviteFieldNumber = 3;
  inline const ::Cmd::UserInfo& invite() const;
  inline ::Cmd::UserInfo* mutable_invite();
  inline ::Cmd::UserInfo* release_invite();
  inline void set_allocated_invite(::Cmd::UserInfo* invite);

  // optional .Cmd.SocialUser beinvite = 4;
  inline bool has_beinvite() const;
  inline void clear_beinvite();
  static const int kBeinviteFieldNumber = 4;
  inline const ::Cmd::SocialUser& beinvite() const;
  inline ::Cmd::SocialUser* mutable_beinvite();
  inline ::Cmd::SocialUser* release_beinvite();
  inline void set_allocated_beinvite(::Cmd::SocialUser* beinvite);

  // @@protoc_insertion_point(class_scope:Cmd.TeamInviteSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_invite();
  inline void clear_has_invite();
  inline void set_has_beinvite();
  inline void clear_has_beinvite();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::UserInfo* invite_;
  ::Cmd::SocialUser* beinvite_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static TeamInviteSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class TeamProcessInviteSocialCmd : public ::google::protobuf::Message {
 public:
  TeamProcessInviteSocialCmd();
  virtual ~TeamProcessInviteSocialCmd();

  TeamProcessInviteSocialCmd(const TeamProcessInviteSocialCmd& from);

  inline TeamProcessInviteSocialCmd& operator=(const TeamProcessInviteSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamProcessInviteSocialCmd& default_instance();

  void Swap(TeamProcessInviteSocialCmd* other);

  // implements Message ----------------------------------------------

  TeamProcessInviteSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamProcessInviteSocialCmd& from);
  void MergeFrom(const TeamProcessInviteSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_TEAM_PROCESSINVITE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional .Cmd.ETeamInviteType type = 3 [default = ETEAMINVITETYPE_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::Cmd::ETeamInviteType type() const;
  inline void set_type(::Cmd::ETeamInviteType value);

  // optional .Cmd.UserInfo user = 4;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 4;
  inline const ::Cmd::UserInfo& user() const;
  inline ::Cmd::UserInfo* mutable_user();
  inline ::Cmd::UserInfo* release_user();
  inline void set_allocated_user(::Cmd::UserInfo* user);

  // optional uint64 leaderid = 5 [default = 0];
  inline bool has_leaderid() const;
  inline void clear_leaderid();
  static const int kLeaderidFieldNumber = 5;
  inline ::google::protobuf::uint64 leaderid() const;
  inline void set_leaderid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.TeamProcessInviteSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_leaderid();
  inline void clear_has_leaderid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::UserInfo* user_;
  ::google::protobuf::uint64 leaderid_;
  int type_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static TeamProcessInviteSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class TeamApplySocialCmd : public ::google::protobuf::Message {
 public:
  TeamApplySocialCmd();
  virtual ~TeamApplySocialCmd();

  TeamApplySocialCmd(const TeamApplySocialCmd& from);

  inline TeamApplySocialCmd& operator=(const TeamApplySocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamApplySocialCmd& default_instance();

  void Swap(TeamApplySocialCmd* other);

  // implements Message ----------------------------------------------

  TeamApplySocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamApplySocialCmd& from);
  void MergeFrom(const TeamApplySocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_TEAM_APPLY];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional .Cmd.UserInfo apply = 3;
  inline bool has_apply() const;
  inline void clear_apply();
  static const int kApplyFieldNumber = 3;
  inline const ::Cmd::UserInfo& apply() const;
  inline ::Cmd::UserInfo* mutable_apply();
  inline ::Cmd::UserInfo* release_apply();
  inline void set_allocated_apply(::Cmd::UserInfo* apply);

  // optional uint64 teamid = 4 [default = 0];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 4;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.TeamApplySocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_apply();
  inline void clear_has_apply();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::UserInfo* apply_;
  ::google::protobuf::uint64 teamid_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static TeamApplySocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class TeamQuickEnterSocialCmd : public ::google::protobuf::Message {
 public:
  TeamQuickEnterSocialCmd();
  virtual ~TeamQuickEnterSocialCmd();

  TeamQuickEnterSocialCmd(const TeamQuickEnterSocialCmd& from);

  inline TeamQuickEnterSocialCmd& operator=(const TeamQuickEnterSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamQuickEnterSocialCmd& default_instance();

  void Swap(TeamQuickEnterSocialCmd* other);

  // implements Message ----------------------------------------------

  TeamQuickEnterSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamQuickEnterSocialCmd& from);
  void MergeFrom(const TeamQuickEnterSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_TEAM_QUICKENTER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional .Cmd.UserInfo user = 3;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 3;
  inline const ::Cmd::UserInfo& user() const;
  inline ::Cmd::UserInfo* mutable_user();
  inline ::Cmd::UserInfo* release_user();
  inline void set_allocated_user(::Cmd::UserInfo* user);

  // optional uint32 type = 4 [default = 0];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional bool set = 5 [default = false];
  inline bool has_set() const;
  inline void clear_set();
  static const int kSetFieldNumber = 5;
  inline bool set() const;
  inline void set_set(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.TeamQuickEnterSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_set();
  inline void clear_has_set();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::UserInfo* user_;
  ::google::protobuf::uint32 type_;
  bool set_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static TeamQuickEnterSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class DojoStateNtfSocialCmd : public ::google::protobuf::Message {
 public:
  DojoStateNtfSocialCmd();
  virtual ~DojoStateNtfSocialCmd();

  DojoStateNtfSocialCmd(const DojoStateNtfSocialCmd& from);

  inline DojoStateNtfSocialCmd& operator=(const DojoStateNtfSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DojoStateNtfSocialCmd& default_instance();

  void Swap(DojoStateNtfSocialCmd* other);

  // implements Message ----------------------------------------------

  DojoStateNtfSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DojoStateNtfSocialCmd& from);
  void MergeFrom(const DojoStateNtfSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_DOJO_STATE_NTF];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint64 teamid = 3;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 3;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional uint64 guildid = 4;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 4;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional .Cmd.EDOJOSTATE state = 5;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 5;
  inline ::Cmd::EDOJOSTATE state() const;
  inline void set_state(::Cmd::EDOJOSTATE value);

  // @@protoc_insertion_point(class_scope:Cmd.DojoStateNtfSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint64 guildid_;
  int state_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static DojoStateNtfSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class DojoCreateSocialCmd : public ::google::protobuf::Message {
 public:
  DojoCreateSocialCmd();
  virtual ~DojoCreateSocialCmd();

  DojoCreateSocialCmd(const DojoCreateSocialCmd& from);

  inline DojoCreateSocialCmd& operator=(const DojoCreateSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DojoCreateSocialCmd& default_instance();

  void Swap(DojoCreateSocialCmd* other);

  // implements Message ----------------------------------------------

  DojoCreateSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DojoCreateSocialCmd& from);
  void MergeFrom(const DojoCreateSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_DOJO_CREATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 dojoid = 4;
  inline bool has_dojoid() const;
  inline void clear_dojoid();
  static const int kDojoidFieldNumber = 4;
  inline ::google::protobuf::uint32 dojoid() const;
  inline void set_dojoid(::google::protobuf::uint32 value);

  // optional uint64 teamid = 5;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 5;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional uint64 guildid = 6;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 6;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.DojoCreateSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_dojoid();
  inline void clear_has_dojoid();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_guildid();
  inline void clear_has_guildid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint32 dojoid_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static DojoCreateSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class TowerLeaderInfoSyncSocialCmd : public ::google::protobuf::Message {
 public:
  TowerLeaderInfoSyncSocialCmd();
  virtual ~TowerLeaderInfoSyncSocialCmd();

  TowerLeaderInfoSyncSocialCmd(const TowerLeaderInfoSyncSocialCmd& from);

  inline TowerLeaderInfoSyncSocialCmd& operator=(const TowerLeaderInfoSyncSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerLeaderInfoSyncSocialCmd& default_instance();

  void Swap(TowerLeaderInfoSyncSocialCmd* other);

  // implements Message ----------------------------------------------

  TowerLeaderInfoSyncSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TowerLeaderInfoSyncSocialCmd& from);
  void MergeFrom(const TowerLeaderInfoSyncSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_TOWER_SYNC_LEADERINFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional .Cmd.SocialUser user = 3;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 3;
  inline const ::Cmd::SocialUser& user() const;
  inline ::Cmd::SocialUser* mutable_user();
  inline ::Cmd::SocialUser* release_user();
  inline void set_allocated_user(::Cmd::SocialUser* user);

  // optional .Cmd.UserTowerInfo info = 4;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 4;
  inline const ::Cmd::UserTowerInfo& info() const;
  inline ::Cmd::UserTowerInfo* mutable_info();
  inline ::Cmd::UserTowerInfo* release_info();
  inline void set_allocated_info(::Cmd::UserTowerInfo* info);

  // @@protoc_insertion_point(class_scope:Cmd.TowerLeaderInfoSyncSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::SocialUser* user_;
  ::Cmd::UserTowerInfo* info_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static TowerLeaderInfoSyncSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class TowerSceneCreateSocialCmd : public ::google::protobuf::Message {
 public:
  TowerSceneCreateSocialCmd();
  virtual ~TowerSceneCreateSocialCmd();

  TowerSceneCreateSocialCmd(const TowerSceneCreateSocialCmd& from);

  inline TowerSceneCreateSocialCmd& operator=(const TowerSceneCreateSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerSceneCreateSocialCmd& default_instance();

  void Swap(TowerSceneCreateSocialCmd* other);

  // implements Message ----------------------------------------------

  TowerSceneCreateSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TowerSceneCreateSocialCmd& from);
  void MergeFrom(const TowerSceneCreateSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_TOWER_SCENE_CREATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional .Cmd.SocialUser user = 3;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 3;
  inline const ::Cmd::SocialUser& user() const;
  inline ::Cmd::SocialUser* mutable_user();
  inline ::Cmd::SocialUser* release_user();
  inline void set_allocated_user(::Cmd::SocialUser* user);

  // optional uint64 teamid = 4 [default = 0];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 4;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional uint32 layer = 5 [default = 0];
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 5;
  inline ::google::protobuf::uint32 layer() const;
  inline void set_layer(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.TowerSceneCreateSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_layer();
  inline void clear_has_layer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::SocialUser* user_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint32 layer_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static TowerSceneCreateSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class TowerSceneSyncSocialCmd : public ::google::protobuf::Message {
 public:
  TowerSceneSyncSocialCmd();
  virtual ~TowerSceneSyncSocialCmd();

  TowerSceneSyncSocialCmd(const TowerSceneSyncSocialCmd& from);

  inline TowerSceneSyncSocialCmd& operator=(const TowerSceneSyncSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerSceneSyncSocialCmd& default_instance();

  void Swap(TowerSceneSyncSocialCmd* other);

  // implements Message ----------------------------------------------

  TowerSceneSyncSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TowerSceneSyncSocialCmd& from);
  void MergeFrom(const TowerSceneSyncSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_TOWER_SYNC_SCENEINFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint64 teamid = 3 [default = 0];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 3;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional .Cmd.EDOJOSTATE state = 4 [default = EDOJOSTATE_CLOSE];
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::Cmd::EDOJOSTATE state() const;
  inline void set_state(::Cmd::EDOJOSTATE value);

  // optional uint32 raidid = 5 [default = 0];
  inline bool has_raidid() const;
  inline void clear_raidid();
  static const int kRaididFieldNumber = 5;
  inline ::google::protobuf::uint32 raidid() const;
  inline void set_raidid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.TowerSceneSyncSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_raidid();
  inline void clear_has_raidid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 teamid_;
  int state_;
  ::google::protobuf::uint32 raidid_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static TowerSceneSyncSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class TowerLayerSyncSocialCmd : public ::google::protobuf::Message {
 public:
  TowerLayerSyncSocialCmd();
  virtual ~TowerLayerSyncSocialCmd();

  TowerLayerSyncSocialCmd(const TowerLayerSyncSocialCmd& from);

  inline TowerLayerSyncSocialCmd& operator=(const TowerLayerSyncSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerLayerSyncSocialCmd& default_instance();

  void Swap(TowerLayerSyncSocialCmd* other);

  // implements Message ----------------------------------------------

  TowerLayerSyncSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TowerLayerSyncSocialCmd& from);
  void MergeFrom(const TowerLayerSyncSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_TOWER_SYNC_LAYER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint64 teamid = 3 [default = 0];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 3;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional uint32 layer = 4 [default = 0];
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 4;
  inline ::google::protobuf::uint32 layer() const;
  inline void set_layer(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.TowerLayerSyncSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_layer();
  inline void clear_has_layer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint32 layer_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static TowerLayerSyncSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class LeaderSealFinishSocialCmd : public ::google::protobuf::Message {
 public:
  LeaderSealFinishSocialCmd();
  virtual ~LeaderSealFinishSocialCmd();

  LeaderSealFinishSocialCmd(const LeaderSealFinishSocialCmd& from);

  inline LeaderSealFinishSocialCmd& operator=(const LeaderSealFinishSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaderSealFinishSocialCmd& default_instance();

  void Swap(LeaderSealFinishSocialCmd* other);

  // implements Message ----------------------------------------------

  LeaderSealFinishSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LeaderSealFinishSocialCmd& from);
  void MergeFrom(const LeaderSealFinishSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_TEAM_SEAL_FIHISH];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint64 teamid = 3 [default = 0];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 3;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.LeaderSealFinishSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 teamid_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static LeaderSealFinishSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class GoTeamRaidSocialCmd : public ::google::protobuf::Message {
 public:
  GoTeamRaidSocialCmd();
  virtual ~GoTeamRaidSocialCmd();

  GoTeamRaidSocialCmd(const GoTeamRaidSocialCmd& from);

  inline GoTeamRaidSocialCmd& operator=(const GoTeamRaidSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GoTeamRaidSocialCmd& default_instance();

  void Swap(GoTeamRaidSocialCmd* other);

  // implements Message ----------------------------------------------

  GoTeamRaidSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GoTeamRaidSocialCmd& from);
  void MergeFrom(const GoTeamRaidSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_GO_TEAM_RAID];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint64 teamid = 3 [default = 0];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 3;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional uint64 charid = 4 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 4;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 myzoneid = 5 [default = 0];
  inline bool has_myzoneid() const;
  inline void clear_myzoneid();
  static const int kMyzoneidFieldNumber = 5;
  inline ::google::protobuf::uint32 myzoneid() const;
  inline void set_myzoneid(::google::protobuf::uint32 value);

  // optional uint32 raidzoneid = 6 [default = 0];
  inline bool has_raidzoneid() const;
  inline void clear_raidzoneid();
  static const int kRaidzoneidFieldNumber = 6;
  inline ::google::protobuf::uint32 raidzoneid() const;
  inline void set_raidzoneid(::google::protobuf::uint32 value);

  // optional uint32 raidid = 7 [default = 0];
  inline bool has_raidid() const;
  inline void clear_raidid();
  static const int kRaididFieldNumber = 7;
  inline ::google::protobuf::uint32 raidid() const;
  inline void set_raidid(::google::protobuf::uint32 value);

  // optional uint32 gomaptype = 8 [default = 0];
  inline bool has_gomaptype() const;
  inline void clear_gomaptype();
  static const int kGomaptypeFieldNumber = 8;
  inline ::google::protobuf::uint32 gomaptype() const;
  inline void set_gomaptype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GoTeamRaidSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_myzoneid();
  inline void clear_has_myzoneid();
  inline void set_has_raidzoneid();
  inline void clear_has_raidzoneid();
  inline void set_has_raidid();
  inline void clear_has_raidid();
  inline void set_has_gomaptype();
  inline void clear_has_gomaptype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 myzoneid_;
  ::google::protobuf::uint32 raidzoneid_;
  ::google::protobuf::uint32 raidid_;
  ::google::protobuf::uint32 gomaptype_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static GoTeamRaidSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class DelTeamRaidSocialCmd : public ::google::protobuf::Message {
 public:
  DelTeamRaidSocialCmd();
  virtual ~DelTeamRaidSocialCmd();

  DelTeamRaidSocialCmd(const DelTeamRaidSocialCmd& from);

  inline DelTeamRaidSocialCmd& operator=(const DelTeamRaidSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelTeamRaidSocialCmd& default_instance();

  void Swap(DelTeamRaidSocialCmd* other);

  // implements Message ----------------------------------------------

  DelTeamRaidSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DelTeamRaidSocialCmd& from);
  void MergeFrom(const DelTeamRaidSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_DEL_TEAM_RAID];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint64 teamid = 3 [default = 0];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 3;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional uint32 raidid = 4 [default = 0];
  inline bool has_raidid() const;
  inline void clear_raidid();
  static const int kRaididFieldNumber = 4;
  inline ::google::protobuf::uint32 raidid() const;
  inline void set_raidid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.DelTeamRaidSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_raidid();
  inline void clear_has_raidid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint32 raidid_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static DelTeamRaidSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class SendMailSocialCmd : public ::google::protobuf::Message {
 public:
  SendMailSocialCmd();
  virtual ~SendMailSocialCmd();

  SendMailSocialCmd(const SendMailSocialCmd& from);

  inline SendMailSocialCmd& operator=(const SendMailSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendMailSocialCmd& default_instance();

  void Swap(SendMailSocialCmd* other);

  // implements Message ----------------------------------------------

  SendMailSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendMailSocialCmd& from);
  void MergeFrom(const SendMailSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_SEND_MAIL];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint32 zoneid = 3;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 3;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional bytes data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // optional uint32 len = 5 [default = 0];
  inline bool has_len() const;
  inline void clear_len();
  static const int kLenFieldNumber = 5;
  inline ::google::protobuf::uint32 len() const;
  inline void set_len(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.SendMailSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_len();
  inline void clear_has_len();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::std::string* data_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 len_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static SendMailSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class ForwardToAllSessionSocialCmd : public ::google::protobuf::Message {
 public:
  ForwardToAllSessionSocialCmd();
  virtual ~ForwardToAllSessionSocialCmd();

  ForwardToAllSessionSocialCmd(const ForwardToAllSessionSocialCmd& from);

  inline ForwardToAllSessionSocialCmd& operator=(const ForwardToAllSessionSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ForwardToAllSessionSocialCmd& default_instance();

  void Swap(ForwardToAllSessionSocialCmd* other);

  // implements Message ----------------------------------------------

  ForwardToAllSessionSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ForwardToAllSessionSocialCmd& from);
  void MergeFrom(const ForwardToAllSessionSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_FORWARD_TO_ALL_SESSION];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint32 except = 3;
  inline bool has_except() const;
  inline void clear_except();
  static const int kExceptFieldNumber = 3;
  inline ::google::protobuf::uint32 except() const;
  inline void set_except(::google::protobuf::uint32 value);

  // optional bytes data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // optional uint32 len = 5 [default = 0];
  inline bool has_len() const;
  inline void clear_len();
  static const int kLenFieldNumber = 5;
  inline ::google::protobuf::uint32 len() const;
  inline void set_len(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ForwardToAllSessionSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_except();
  inline void clear_has_except();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_len();
  inline void clear_has_len();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::std::string* data_;
  ::google::protobuf::uint32 except_;
  ::google::protobuf::uint32 len_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static ForwardToAllSessionSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildLevelUpSocialCmd : public ::google::protobuf::Message {
 public:
  GuildLevelUpSocialCmd();
  virtual ~GuildLevelUpSocialCmd();

  GuildLevelUpSocialCmd(const GuildLevelUpSocialCmd& from);

  inline GuildLevelUpSocialCmd& operator=(const GuildLevelUpSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildLevelUpSocialCmd& default_instance();

  void Swap(GuildLevelUpSocialCmd* other);

  // implements Message ----------------------------------------------

  GuildLevelUpSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildLevelUpSocialCmd& from);
  void MergeFrom(const GuildLevelUpSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_GUILD_LEVELUP];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint64 guildid = 4 [default = 0];
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 4;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional uint32 addlevel = 5 [default = 0];
  inline bool has_addlevel() const;
  inline void clear_addlevel();
  static const int kAddlevelFieldNumber = 5;
  inline ::google::protobuf::uint32 addlevel() const;
  inline void set_addlevel(::google::protobuf::uint32 value);

  // optional string guildname = 6;
  inline bool has_guildname() const;
  inline void clear_guildname();
  static const int kGuildnameFieldNumber = 6;
  inline const ::std::string& guildname() const;
  inline void set_guildname(const ::std::string& value);
  inline void set_guildname(const char* value);
  inline void set_guildname(const char* value, size_t size);
  inline ::std::string* mutable_guildname();
  inline ::std::string* release_guildname();
  inline void set_allocated_guildname(::std::string* guildname);

  // @@protoc_insertion_point(class_scope:Cmd.GuildLevelUpSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_addlevel();
  inline void clear_has_addlevel();
  inline void set_has_guildname();
  inline void clear_has_guildname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 guildid_;
  ::std::string* guildname_;
  ::google::protobuf::uint32 addlevel_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildLevelUpSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class MoveGuildZoneSocialCmd : public ::google::protobuf::Message {
 public:
  MoveGuildZoneSocialCmd();
  virtual ~MoveGuildZoneSocialCmd();

  MoveGuildZoneSocialCmd(const MoveGuildZoneSocialCmd& from);

  inline MoveGuildZoneSocialCmd& operator=(const MoveGuildZoneSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveGuildZoneSocialCmd& default_instance();

  void Swap(MoveGuildZoneSocialCmd* other);

  // implements Message ----------------------------------------------

  MoveGuildZoneSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoveGuildZoneSocialCmd& from);
  void MergeFrom(const MoveGuildZoneSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_GM_MOVE_GUILD_ZONE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint32 orizone = 3 [default = 0];
  inline bool has_orizone() const;
  inline void clear_orizone();
  static const int kOrizoneFieldNumber = 3;
  inline ::google::protobuf::uint32 orizone() const;
  inline void set_orizone(::google::protobuf::uint32 value);

  // optional uint32 newzone = 4 [default = 0];
  inline bool has_newzone() const;
  inline void clear_newzone();
  static const int kNewzoneFieldNumber = 4;
  inline ::google::protobuf::uint32 newzone() const;
  inline void set_newzone(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.MoveGuildZoneSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_orizone();
  inline void clear_has_orizone();
  inline void set_has_newzone();
  inline void clear_has_newzone();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 orizone_;
  ::google::protobuf::uint32 newzone_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static MoveGuildZoneSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class SocialDataUpdateSocialCmd : public ::google::protobuf::Message {
 public:
  SocialDataUpdateSocialCmd();
  virtual ~SocialDataUpdateSocialCmd();

  SocialDataUpdateSocialCmd(const SocialDataUpdateSocialCmd& from);

  inline SocialDataUpdateSocialCmd& operator=(const SocialDataUpdateSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SocialDataUpdateSocialCmd& default_instance();

  void Swap(SocialDataUpdateSocialCmd* other);

  // implements Message ----------------------------------------------

  SocialDataUpdateSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SocialDataUpdateSocialCmd& from);
  void MergeFrom(const SocialDataUpdateSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_SOCIAL_DATA_UPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint64 targetid = 4 [default = 0];
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetidFieldNumber = 4;
  inline ::google::protobuf::uint64 targetid() const;
  inline void set_targetid(::google::protobuf::uint64 value);

  // optional .Cmd.SocialDataUpdate update = 5;
  inline bool has_update() const;
  inline void clear_update();
  static const int kUpdateFieldNumber = 5;
  inline const ::Cmd::SocialDataUpdate& update() const;
  inline ::Cmd::SocialDataUpdate* mutable_update();
  inline ::Cmd::SocialDataUpdate* release_update();
  inline void set_allocated_update(::Cmd::SocialDataUpdate* update);

  // optional bool to_global = 6 [default = false];
  inline bool has_to_global() const;
  inline void clear_to_global();
  static const int kToGlobalFieldNumber = 6;
  inline bool to_global() const;
  inline void set_to_global(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.SocialDataUpdateSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_targetid();
  inline void clear_has_targetid();
  inline void set_has_update();
  inline void clear_has_update();
  inline void set_has_to_global();
  inline void clear_has_to_global();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 targetid_;
  ::Cmd::SocialDataUpdate* update_;
  bool to_global_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static SocialDataUpdateSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class AddRelationSocialCmd : public ::google::protobuf::Message {
 public:
  AddRelationSocialCmd();
  virtual ~AddRelationSocialCmd();

  AddRelationSocialCmd(const AddRelationSocialCmd& from);

  inline AddRelationSocialCmd& operator=(const AddRelationSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddRelationSocialCmd& default_instance();

  void Swap(AddRelationSocialCmd* other);

  // implements Message ----------------------------------------------

  AddRelationSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddRelationSocialCmd& from);
  void MergeFrom(const AddRelationSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_SOCIAL_ADDRELATION];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional .Cmd.SocialUser user = 3;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 3;
  inline const ::Cmd::SocialUser& user() const;
  inline ::Cmd::SocialUser* mutable_user();
  inline ::Cmd::SocialUser* release_user();
  inline void set_allocated_user(::Cmd::SocialUser* user);

  // optional uint64 destid = 4 [default = 0];
  inline bool has_destid() const;
  inline void clear_destid();
  static const int kDestidFieldNumber = 4;
  inline ::google::protobuf::uint64 destid() const;
  inline void set_destid(::google::protobuf::uint64 value);

  // optional .Cmd.ESocialRelation relation = 5 [default = ESOCIALRELATION_MIN];
  inline bool has_relation() const;
  inline void clear_relation();
  static const int kRelationFieldNumber = 5;
  inline ::Cmd::ESocialRelation relation() const;
  inline void set_relation(::Cmd::ESocialRelation value);

  // optional bool to_global = 6 [default = false];
  inline bool has_to_global() const;
  inline void clear_to_global();
  static const int kToGlobalFieldNumber = 6;
  inline bool to_global() const;
  inline void set_to_global(bool value);

  // optional bool check = 7 [default = false];
  inline bool has_check() const;
  inline void clear_check();
  static const int kCheckFieldNumber = 7;
  inline bool check() const;
  inline void set_check(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.AddRelationSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_destid();
  inline void clear_has_destid();
  inline void set_has_relation();
  inline void clear_has_relation();
  inline void set_has_to_global();
  inline void clear_has_to_global();
  inline void set_has_check();
  inline void clear_has_check();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::SocialUser* user_;
  ::google::protobuf::uint64 destid_;
  int relation_;
  bool to_global_;
  bool check_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static AddRelationSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class RemoveRelationSocialCmd : public ::google::protobuf::Message {
 public:
  RemoveRelationSocialCmd();
  virtual ~RemoveRelationSocialCmd();

  RemoveRelationSocialCmd(const RemoveRelationSocialCmd& from);

  inline RemoveRelationSocialCmd& operator=(const RemoveRelationSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveRelationSocialCmd& default_instance();

  void Swap(RemoveRelationSocialCmd* other);

  // implements Message ----------------------------------------------

  RemoveRelationSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemoveRelationSocialCmd& from);
  void MergeFrom(const RemoveRelationSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_SOCIAL_REMOVERELATION];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional .Cmd.SocialUser user = 3;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 3;
  inline const ::Cmd::SocialUser& user() const;
  inline ::Cmd::SocialUser* mutable_user();
  inline ::Cmd::SocialUser* release_user();
  inline void set_allocated_user(::Cmd::SocialUser* user);

  // optional uint64 destid = 4 [default = 0];
  inline bool has_destid() const;
  inline void clear_destid();
  static const int kDestidFieldNumber = 4;
  inline ::google::protobuf::uint64 destid() const;
  inline void set_destid(::google::protobuf::uint64 value);

  // optional .Cmd.ESocialRelation relation = 5 [default = ESOCIALRELATION_MIN];
  inline bool has_relation() const;
  inline void clear_relation();
  static const int kRelationFieldNumber = 5;
  inline ::Cmd::ESocialRelation relation() const;
  inline void set_relation(::Cmd::ESocialRelation value);

  // optional bool to_global = 6 [default = false];
  inline bool has_to_global() const;
  inline void clear_to_global();
  static const int kToGlobalFieldNumber = 6;
  inline bool to_global() const;
  inline void set_to_global(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.RemoveRelationSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_destid();
  inline void clear_has_destid();
  inline void set_has_relation();
  inline void clear_has_relation();
  inline void set_has_to_global();
  inline void clear_has_to_global();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::SocialUser* user_;
  ::google::protobuf::uint64 destid_;
  int relation_;
  bool to_global_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static RemoveRelationSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class RemoveSocialitySocialCmd : public ::google::protobuf::Message {
 public:
  RemoveSocialitySocialCmd();
  virtual ~RemoveSocialitySocialCmd();

  RemoveSocialitySocialCmd(const RemoveSocialitySocialCmd& from);

  inline RemoveSocialitySocialCmd& operator=(const RemoveSocialitySocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveSocialitySocialCmd& default_instance();

  void Swap(RemoveSocialitySocialCmd* other);

  // implements Message ----------------------------------------------

  RemoveSocialitySocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemoveSocialitySocialCmd& from);
  void MergeFrom(const RemoveSocialitySocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_SOCIAL_REMOVESOCIAL];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional .Cmd.SocialUser user = 3;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 3;
  inline const ::Cmd::SocialUser& user() const;
  inline ::Cmd::SocialUser* mutable_user();
  inline ::Cmd::SocialUser* release_user();
  inline void set_allocated_user(::Cmd::SocialUser* user);

  // optional uint64 destid = 4 [default = 0];
  inline bool has_destid() const;
  inline void clear_destid();
  static const int kDestidFieldNumber = 4;
  inline ::google::protobuf::uint64 destid() const;
  inline void set_destid(::google::protobuf::uint64 value);

  // optional bool to_global = 5 [default = false];
  inline bool has_to_global() const;
  inline void clear_to_global();
  static const int kToGlobalFieldNumber = 5;
  inline bool to_global() const;
  inline void set_to_global(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.RemoveSocialitySocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_destid();
  inline void clear_has_destid();
  inline void set_has_to_global();
  inline void clear_has_to_global();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::SocialUser* user_;
  ::google::protobuf::uint64 destid_;
  bool to_global_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static RemoveSocialitySocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class SocialItem : public ::google::protobuf::Message {
 public:
  SocialItem();
  virtual ~SocialItem();

  SocialItem(const SocialItem& from);

  inline SocialItem& operator=(const SocialItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SocialItem& default_instance();

  void Swap(SocialItem* other);

  // implements Message ----------------------------------------------

  SocialItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SocialItem& from);
  void MergeFrom(const SocialItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charid = 1 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 relation = 2 [default = 0];
  inline bool has_relation() const;
  inline void clear_relation();
  static const int kRelationFieldNumber = 2;
  inline ::google::protobuf::uint32 relation() const;
  inline void set_relation(::google::protobuf::uint32 value);

  // optional string createtime = 3;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 3;
  inline const ::std::string& createtime() const;
  inline void set_createtime(const ::std::string& value);
  inline void set_createtime(const char* value);
  inline void set_createtime(const char* value, size_t size);
  inline ::std::string* mutable_createtime();
  inline ::std::string* release_createtime();
  inline void set_allocated_createtime(::std::string* createtime);

  // @@protoc_insertion_point(class_scope:Cmd.SocialItem)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_relation();
  inline void clear_has_relation();
  inline void set_has_createtime();
  inline void clear_has_createtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::std::string* createtime_;
  ::google::protobuf::uint32 relation_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static SocialItem* default_instance_;
};
// -------------------------------------------------------------------

class SyncSocialListSocialCmd : public ::google::protobuf::Message {
 public:
  SyncSocialListSocialCmd();
  virtual ~SyncSocialListSocialCmd();

  SyncSocialListSocialCmd(const SyncSocialListSocialCmd& from);

  inline SyncSocialListSocialCmd& operator=(const SyncSocialListSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncSocialListSocialCmd& default_instance();

  void Swap(SyncSocialListSocialCmd* other);

  // implements Message ----------------------------------------------

  SyncSocialListSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncSocialListSocialCmd& from);
  void MergeFrom(const SyncSocialListSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_SOCIAL_SYNC_LIST];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // repeated .Cmd.SocialItem items = 4;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 4;
  inline const ::Cmd::SocialItem& items(int index) const;
  inline ::Cmd::SocialItem* mutable_items(int index);
  inline ::Cmd::SocialItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SocialItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::SocialItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:Cmd.SyncSocialListSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::SocialItem > items_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static SyncSocialListSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class SocialListUpdateSocialCmd : public ::google::protobuf::Message {
 public:
  SocialListUpdateSocialCmd();
  virtual ~SocialListUpdateSocialCmd();

  SocialListUpdateSocialCmd(const SocialListUpdateSocialCmd& from);

  inline SocialListUpdateSocialCmd& operator=(const SocialListUpdateSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SocialListUpdateSocialCmd& default_instance();

  void Swap(SocialListUpdateSocialCmd* other);

  // implements Message ----------------------------------------------

  SocialListUpdateSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SocialListUpdateSocialCmd& from);
  void MergeFrom(const SocialListUpdateSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_SOCIAL_LIST_UPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // repeated .Cmd.SocialItem updates = 4;
  inline int updates_size() const;
  inline void clear_updates();
  static const int kUpdatesFieldNumber = 4;
  inline const ::Cmd::SocialItem& updates(int index) const;
  inline ::Cmd::SocialItem* mutable_updates(int index);
  inline ::Cmd::SocialItem* add_updates();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SocialItem >&
      updates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::SocialItem >*
      mutable_updates();

  // repeated uint64 dels = 5;
  inline int dels_size() const;
  inline void clear_dels();
  static const int kDelsFieldNumber = 5;
  inline ::google::protobuf::uint64 dels(int index) const;
  inline void set_dels(int index, ::google::protobuf::uint64 value);
  inline void add_dels(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      dels() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_dels();

  // @@protoc_insertion_point(class_scope:Cmd.SocialListUpdateSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::SocialItem > updates_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > dels_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static SocialListUpdateSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class UpdateRelationTimeSocialCmd : public ::google::protobuf::Message {
 public:
  UpdateRelationTimeSocialCmd();
  virtual ~UpdateRelationTimeSocialCmd();

  UpdateRelationTimeSocialCmd(const UpdateRelationTimeSocialCmd& from);

  inline UpdateRelationTimeSocialCmd& operator=(const UpdateRelationTimeSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateRelationTimeSocialCmd& default_instance();

  void Swap(UpdateRelationTimeSocialCmd* other);

  // implements Message ----------------------------------------------

  UpdateRelationTimeSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateRelationTimeSocialCmd& from);
  void MergeFrom(const UpdateRelationTimeSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_SOCIAL_UPDATE_RELATIONTIME];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint64 targetid = 4 [default = 0];
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetidFieldNumber = 4;
  inline ::google::protobuf::uint64 targetid() const;
  inline void set_targetid(::google::protobuf::uint64 value);

  // optional uint32 time = 5 [default = 0];
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // optional .Cmd.ESocialRelation relation = 6 [default = ESOCIALRELATION_CHAT];
  inline bool has_relation() const;
  inline void clear_relation();
  static const int kRelationFieldNumber = 6;
  inline ::Cmd::ESocialRelation relation() const;
  inline void set_relation(::Cmd::ESocialRelation value);

  // @@protoc_insertion_point(class_scope:Cmd.UpdateRelationTimeSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_targetid();
  inline void clear_has_targetid();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_relation();
  inline void clear_has_relation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 targetid_;
  ::google::protobuf::uint32 time_;
  int relation_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static UpdateRelationTimeSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class TeamerQuestUpdateSocialCmd : public ::google::protobuf::Message {
 public:
  TeamerQuestUpdateSocialCmd();
  virtual ~TeamerQuestUpdateSocialCmd();

  TeamerQuestUpdateSocialCmd(const TeamerQuestUpdateSocialCmd& from);

  inline TeamerQuestUpdateSocialCmd& operator=(const TeamerQuestUpdateSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamerQuestUpdateSocialCmd& default_instance();

  void Swap(TeamerQuestUpdateSocialCmd* other);

  // implements Message ----------------------------------------------

  TeamerQuestUpdateSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamerQuestUpdateSocialCmd& from);
  void MergeFrom(const TeamerQuestUpdateSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_TEAM_QUEST_UPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional .Cmd.MemberWantedQuest quest = 3;
  inline bool has_quest() const;
  inline void clear_quest();
  static const int kQuestFieldNumber = 3;
  inline const ::Cmd::MemberWantedQuest& quest() const;
  inline ::Cmd::MemberWantedQuest* mutable_quest();
  inline ::Cmd::MemberWantedQuest* release_quest();
  inline void set_allocated_quest(::Cmd::MemberWantedQuest* quest);

  // @@protoc_insertion_point(class_scope:Cmd.TeamerQuestUpdateSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_quest();
  inline void clear_has_quest();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::MemberWantedQuest* quest_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static TeamerQuestUpdateSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class GlobalForwardCmdSocialCmd : public ::google::protobuf::Message {
 public:
  GlobalForwardCmdSocialCmd();
  virtual ~GlobalForwardCmdSocialCmd();

  GlobalForwardCmdSocialCmd(const GlobalForwardCmdSocialCmd& from);

  inline GlobalForwardCmdSocialCmd& operator=(const GlobalForwardCmdSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GlobalForwardCmdSocialCmd& default_instance();

  void Swap(GlobalForwardCmdSocialCmd* other);

  // implements Message ----------------------------------------------

  GlobalForwardCmdSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GlobalForwardCmdSocialCmd& from);
  void MergeFrom(const GlobalForwardCmdSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_GLOBAL_FORWARD_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional bytes data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // optional uint32 len = 5;
  inline bool has_len() const;
  inline void clear_len();
  static const int kLenFieldNumber = 5;
  inline ::google::protobuf::uint32 len() const;
  inline void set_len(::google::protobuf::uint32 value);

  // optional .Cmd.EDir dir = 6;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 6;
  inline ::Cmd::EDir dir() const;
  inline void set_dir(::Cmd::EDir value);

  // @@protoc_insertion_point(class_scope:Cmd.GlobalForwardCmdSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_len();
  inline void clear_has_len();
  inline void set_has_dir();
  inline void clear_has_dir();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::std::string* data_;
  ::google::protobuf::uint32 len_;
  int dir_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static GlobalForwardCmdSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class AuthorizeInfoSyncSocialCmd : public ::google::protobuf::Message {
 public:
  AuthorizeInfoSyncSocialCmd();
  virtual ~AuthorizeInfoSyncSocialCmd();

  AuthorizeInfoSyncSocialCmd(const AuthorizeInfoSyncSocialCmd& from);

  inline AuthorizeInfoSyncSocialCmd& operator=(const AuthorizeInfoSyncSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthorizeInfoSyncSocialCmd& default_instance();

  void Swap(AuthorizeInfoSyncSocialCmd* other);

  // implements Message ----------------------------------------------

  AuthorizeInfoSyncSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthorizeInfoSyncSocialCmd& from);
  void MergeFrom(const AuthorizeInfoSyncSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_AUTHORIZE_SYNC_INFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional bool ignorepwd = 4 [default = false];
  inline bool has_ignorepwd() const;
  inline void clear_ignorepwd();
  static const int kIgnorepwdFieldNumber = 4;
  inline bool ignorepwd() const;
  inline void set_ignorepwd(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.AuthorizeInfoSyncSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_ignorepwd();
  inline void clear_has_ignorepwd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  bool ignorepwd_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static AuthorizeInfoSyncSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class SyncRedTipSocialCmd : public ::google::protobuf::Message {
 public:
  SyncRedTipSocialCmd();
  virtual ~SyncRedTipSocialCmd();

  SyncRedTipSocialCmd(const SyncRedTipSocialCmd& from);

  inline SyncRedTipSocialCmd& operator=(const SyncRedTipSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncRedTipSocialCmd& default_instance();

  void Swap(SyncRedTipSocialCmd* other);

  // implements Message ----------------------------------------------

  SyncRedTipSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncRedTipSocialCmd& from);
  void MergeFrom(const SyncRedTipSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_SYNC_REDTIP];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint64 dwid = 3 [default = 0];
  inline bool has_dwid() const;
  inline void clear_dwid();
  static const int kDwidFieldNumber = 3;
  inline ::google::protobuf::uint64 dwid() const;
  inline void set_dwid(::google::protobuf::uint64 value);

  // optional uint64 charid = 4 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 4;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional .Cmd.ERedSys red = 5 [default = EREDSYS_MIN];
  inline bool has_red() const;
  inline void clear_red();
  static const int kRedFieldNumber = 5;
  inline ::Cmd::ERedSys red() const;
  inline void set_red(::Cmd::ERedSys value);

  // optional bool add = 6 [default = false];
  inline bool has_add() const;
  inline void clear_add();
  static const int kAddFieldNumber = 6;
  inline bool add() const;
  inline void set_add(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.SyncRedTipSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_dwid();
  inline void clear_has_dwid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_red();
  inline void clear_has_red();
  inline void set_has_add();
  inline void clear_has_add();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 dwid_;
  ::google::protobuf::uint64 charid_;
  int red_;
  bool add_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static SyncRedTipSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class SendTutorRewardSocialCmd : public ::google::protobuf::Message {
 public:
  SendTutorRewardSocialCmd();
  virtual ~SendTutorRewardSocialCmd();

  SendTutorRewardSocialCmd(const SendTutorRewardSocialCmd& from);

  inline SendTutorRewardSocialCmd& operator=(const SendTutorRewardSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendTutorRewardSocialCmd& default_instance();

  void Swap(SendTutorRewardSocialCmd* other);

  // implements Message ----------------------------------------------

  SendTutorRewardSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendTutorRewardSocialCmd& from);
  void MergeFrom(const SendTutorRewardSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_SEND_TUTOR_REWARD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // repeated .Cmd.TutorReward rewards = 4;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 4;
  inline const ::Cmd::TutorReward& rewards(int index) const;
  inline ::Cmd::TutorReward* mutable_rewards(int index);
  inline ::Cmd::TutorReward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TutorReward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TutorReward >*
      mutable_rewards();

  // @@protoc_insertion_point(class_scope:Cmd.SendTutorRewardSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TutorReward > rewards_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static SendTutorRewardSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class SyncTutorRewardSocialCmd : public ::google::protobuf::Message {
 public:
  SyncTutorRewardSocialCmd();
  virtual ~SyncTutorRewardSocialCmd();

  SyncTutorRewardSocialCmd(const SyncTutorRewardSocialCmd& from);

  inline SyncTutorRewardSocialCmd& operator=(const SyncTutorRewardSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncTutorRewardSocialCmd& default_instance();

  void Swap(SyncTutorRewardSocialCmd* other);

  // implements Message ----------------------------------------------

  SyncTutorRewardSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncTutorRewardSocialCmd& from);
  void MergeFrom(const SyncTutorRewardSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_SYNC_TUTOR_REWARD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional bool searchuser = 3 [default = false];
  inline bool has_searchuser() const;
  inline void clear_searchuser();
  static const int kSearchuserFieldNumber = 3;
  inline bool searchuser() const;
  inline void set_searchuser(bool value);

  // optional uint64 charid = 4 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 4;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional .Cmd.TutorReward reward = 5;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 5;
  inline const ::Cmd::TutorReward& reward() const;
  inline ::Cmd::TutorReward* mutable_reward();
  inline ::Cmd::TutorReward* release_reward();
  inline void set_allocated_reward(::Cmd::TutorReward* reward);

  // optional uint64 redpointtip = 6 [default = 0];
  inline bool has_redpointtip() const;
  inline void clear_redpointtip();
  static const int kRedpointtipFieldNumber = 6;
  inline ::google::protobuf::uint64 redpointtip() const;
  inline void set_redpointtip(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.SyncTutorRewardSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_searchuser();
  inline void clear_has_searchuser();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_redpointtip();
  inline void clear_has_redpointtip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::Cmd::TutorReward* reward_;
  ::google::protobuf::uint64 redpointtip_;
  bool searchuser_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static SyncTutorRewardSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class GlobalForwardCmdSocialCmd2 : public ::google::protobuf::Message {
 public:
  GlobalForwardCmdSocialCmd2();
  virtual ~GlobalForwardCmdSocialCmd2();

  GlobalForwardCmdSocialCmd2(const GlobalForwardCmdSocialCmd2& from);

  inline GlobalForwardCmdSocialCmd2& operator=(const GlobalForwardCmdSocialCmd2& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GlobalForwardCmdSocialCmd2& default_instance();

  void Swap(GlobalForwardCmdSocialCmd2* other);

  // implements Message ----------------------------------------------

  GlobalForwardCmdSocialCmd2* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GlobalForwardCmdSocialCmd2& from);
  void MergeFrom(const GlobalForwardCmdSocialCmd2& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_GLOBAL_FORWARD_CMD2];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional bytes data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // optional uint32 len = 5;
  inline bool has_len() const;
  inline void clear_len();
  static const int kLenFieldNumber = 5;
  inline ::google::protobuf::uint32 len() const;
  inline void set_len(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GlobalForwardCmdSocialCmd2)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_len();
  inline void clear_has_len();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::std::string* data_;
  ::google::protobuf::uint32 len_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static GlobalForwardCmdSocialCmd2* default_instance_;
};
// -------------------------------------------------------------------

class CardSceneCreateSocialCmd : public ::google::protobuf::Message {
 public:
  CardSceneCreateSocialCmd();
  virtual ~CardSceneCreateSocialCmd();

  CardSceneCreateSocialCmd(const CardSceneCreateSocialCmd& from);

  inline CardSceneCreateSocialCmd& operator=(const CardSceneCreateSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CardSceneCreateSocialCmd& default_instance();

  void Swap(CardSceneCreateSocialCmd* other);

  // implements Message ----------------------------------------------

  CardSceneCreateSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CardSceneCreateSocialCmd& from);
  void MergeFrom(const CardSceneCreateSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_CREATE_PVECARDRAID];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint64 userid = 3;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 3;
  inline ::google::protobuf::uint64 userid() const;
  inline void set_userid(::google::protobuf::uint64 value);

  // optional uint64 teamid = 4 [default = 0];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 4;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional uint32 configid = 5 [default = 0];
  inline bool has_configid() const;
  inline void clear_configid();
  static const int kConfigidFieldNumber = 5;
  inline ::google::protobuf::uint32 configid() const;
  inline void set_configid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.CardSceneCreateSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_configid();
  inline void clear_has_configid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 userid_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint32 configid_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static CardSceneCreateSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class CardSceneSyncSocialCmd : public ::google::protobuf::Message {
 public:
  CardSceneSyncSocialCmd();
  virtual ~CardSceneSyncSocialCmd();

  CardSceneSyncSocialCmd(const CardSceneSyncSocialCmd& from);

  inline CardSceneSyncSocialCmd& operator=(const CardSceneSyncSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CardSceneSyncSocialCmd& default_instance();

  void Swap(CardSceneSyncSocialCmd* other);

  // implements Message ----------------------------------------------

  CardSceneSyncSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CardSceneSyncSocialCmd& from);
  void MergeFrom(const CardSceneSyncSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_PVECARD_SCENEINFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint64 teamid = 3 [default = 0];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 3;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional bool open = 4 [default = false];
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 4;
  inline bool open() const;
  inline void set_open(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.CardSceneSyncSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_open();
  inline void clear_has_open();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 teamid_;
  bool open_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static CardSceneSyncSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class ModifyDepositSocialCmd : public ::google::protobuf::Message {
 public:
  ModifyDepositSocialCmd();
  virtual ~ModifyDepositSocialCmd();

  ModifyDepositSocialCmd(const ModifyDepositSocialCmd& from);

  inline ModifyDepositSocialCmd& operator=(const ModifyDepositSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyDepositSocialCmd& default_instance();

  void Swap(ModifyDepositSocialCmd* other);

  // implements Message ----------------------------------------------

  ModifyDepositSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ModifyDepositSocialCmd& from);
  void MergeFrom(const ModifyDepositSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_MODIFY_DEPOSIT];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string command = 4;
  inline bool has_command() const;
  inline void clear_command();
  static const int kCommandFieldNumber = 4;
  inline const ::std::string& command() const;
  inline void set_command(const ::std::string& value);
  inline void set_command(const char* value);
  inline void set_command(const char* value, size_t size);
  inline ::std::string* mutable_command();
  inline ::std::string* release_command();
  inline void set_allocated_command(::std::string* command);

  // @@protoc_insertion_point(class_scope:Cmd.ModifyDepositSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_command();
  inline void clear_has_command();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::std::string* command_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static ModifyDepositSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class TeamRaidSceneCreateSocialCmd : public ::google::protobuf::Message {
 public:
  TeamRaidSceneCreateSocialCmd();
  virtual ~TeamRaidSceneCreateSocialCmd();

  TeamRaidSceneCreateSocialCmd(const TeamRaidSceneCreateSocialCmd& from);

  inline TeamRaidSceneCreateSocialCmd& operator=(const TeamRaidSceneCreateSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRaidSceneCreateSocialCmd& default_instance();

  void Swap(TeamRaidSceneCreateSocialCmd* other);

  // implements Message ----------------------------------------------

  TeamRaidSceneCreateSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRaidSceneCreateSocialCmd& from);
  void MergeFrom(const TeamRaidSceneCreateSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_CREATE_TEAMRAID];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional .Cmd.SocialUser user = 3;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 3;
  inline const ::Cmd::SocialUser& user() const;
  inline ::Cmd::SocialUser* mutable_user();
  inline ::Cmd::SocialUser* release_user();
  inline void set_allocated_user(::Cmd::SocialUser* user);

  // optional uint64 teamid = 4 [default = 0];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 4;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional uint32 raid_type = 5 [default = 0];
  inline bool has_raid_type() const;
  inline void clear_raid_type();
  static const int kRaidTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 raid_type() const;
  inline void set_raid_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.TeamRaidSceneCreateSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_raid_type();
  inline void clear_has_raid_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::SocialUser* user_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint32 raid_type_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static TeamRaidSceneCreateSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class TeamRaidSceneSyncSocialCmd : public ::google::protobuf::Message {
 public:
  TeamRaidSceneSyncSocialCmd();
  virtual ~TeamRaidSceneSyncSocialCmd();

  TeamRaidSceneSyncSocialCmd(const TeamRaidSceneSyncSocialCmd& from);

  inline TeamRaidSceneSyncSocialCmd& operator=(const TeamRaidSceneSyncSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRaidSceneSyncSocialCmd& default_instance();

  void Swap(TeamRaidSceneSyncSocialCmd* other);

  // implements Message ----------------------------------------------

  TeamRaidSceneSyncSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRaidSceneSyncSocialCmd& from);
  void MergeFrom(const TeamRaidSceneSyncSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_SYNC_TEAMRAID];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialParam param() const;
  inline void set_param(::Cmd::SocialParam value);

  // optional uint64 teamid = 3 [default = 0];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 3;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional bool open = 4 [default = false];
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 4;
  inline bool open() const;
  inline void set_open(bool value);

  // optional uint32 raid_type = 5 [default = 0];
  inline bool has_raid_type() const;
  inline void clear_raid_type();
  static const int kRaidTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 raid_type() const;
  inline void set_raid_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.TeamRaidSceneSyncSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_open();
  inline void clear_has_open();
  inline void set_has_raid_type();
  inline void clear_has_raid_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 teamid_;
  bool open_;
  ::google::protobuf::uint32 raid_type_;
  friend void  protobuf_AddDesc_SocialCmd_2eproto();
  friend void protobuf_AssignDesc_SocialCmd_2eproto();
  friend void protobuf_ShutdownFile_SocialCmd_2eproto();

  void InitAsDefaultInstance();
  static TeamRaidSceneSyncSocialCmd* default_instance_;
};
// ===================================================================


// ===================================================================

// SocialUser

// optional uint64 accid = 1 [default = 0];
inline bool SocialUser::has_accid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SocialUser::set_has_accid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SocialUser::clear_has_accid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SocialUser::clear_accid() {
  accid_ = GOOGLE_ULONGLONG(0);
  clear_has_accid();
}
inline ::google::protobuf::uint64 SocialUser::accid() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialUser.accid)
  return accid_;
}
inline void SocialUser::set_accid(::google::protobuf::uint64 value) {
  set_has_accid();
  accid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialUser.accid)
}

// optional uint64 charid = 2 [default = 0];
inline bool SocialUser::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SocialUser::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SocialUser::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SocialUser::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 SocialUser::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialUser.charid)
  return charid_;
}
inline void SocialUser::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialUser.charid)
}

// optional uint32 zoneid = 3 [default = 0];
inline bool SocialUser::has_zoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SocialUser::set_has_zoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SocialUser::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SocialUser::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 SocialUser::zoneid() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialUser.zoneid)
  return zoneid_;
}
inline void SocialUser::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialUser.zoneid)
}

// optional uint32 mapid = 4 [default = 0];
inline bool SocialUser::has_mapid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SocialUser::set_has_mapid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SocialUser::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SocialUser::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 SocialUser::mapid() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialUser.mapid)
  return mapid_;
}
inline void SocialUser::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialUser.mapid)
}

// optional uint32 baselv = 5 [default = 0];
inline bool SocialUser::has_baselv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SocialUser::set_has_baselv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SocialUser::clear_has_baselv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SocialUser::clear_baselv() {
  baselv_ = 0u;
  clear_has_baselv();
}
inline ::google::protobuf::uint32 SocialUser::baselv() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialUser.baselv)
  return baselv_;
}
inline void SocialUser::set_baselv(::google::protobuf::uint32 value) {
  set_has_baselv();
  baselv_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialUser.baselv)
}

// optional .Cmd.EProfession profession = 6 [default = EPROFESSION_MIN];
inline bool SocialUser::has_profession() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SocialUser::set_has_profession() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SocialUser::clear_has_profession() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SocialUser::clear_profession() {
  profession_ = 0;
  clear_has_profession();
}
inline ::Cmd::EProfession SocialUser::profession() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialUser.profession)
  return static_cast< ::Cmd::EProfession >(profession_);
}
inline void SocialUser::set_profession(::Cmd::EProfession value) {
  assert(::Cmd::EProfession_IsValid(value));
  set_has_profession();
  profession_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialUser.profession)
}

// optional string name = 7;
inline bool SocialUser::has_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SocialUser::set_has_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SocialUser::clear_has_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SocialUser::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& SocialUser::name() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialUser.name)
  return *name_;
}
inline void SocialUser::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.SocialUser.name)
}
inline void SocialUser::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.SocialUser.name)
}
inline void SocialUser::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.SocialUser.name)
}
inline ::std::string* SocialUser::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.SocialUser.name)
  return name_;
}
inline ::std::string* SocialUser::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SocialUser::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.SocialUser.name)
}

// -------------------------------------------------------------------

// SessionForwardSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool SessionForwardSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SessionForwardSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SessionForwardSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SessionForwardSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command SessionForwardSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SessionForwardSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SessionForwardSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SessionForwardSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_SESSION_FORWARD_SOCIAL_CMD];
inline bool SessionForwardSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SessionForwardSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SessionForwardSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SessionForwardSocialCmd::clear_param() {
  param_ = 1;
  clear_has_param();
}
inline ::Cmd::SocialParam SessionForwardSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SessionForwardSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void SessionForwardSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SessionForwardSocialCmd.param)
}

// optional .Cmd.ECmdType type = 3 [default = ECMDTYPE_MIN];
inline bool SessionForwardSocialCmd::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SessionForwardSocialCmd::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SessionForwardSocialCmd::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SessionForwardSocialCmd::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::ECmdType SessionForwardSocialCmd::type() const {
  // @@protoc_insertion_point(field_get:Cmd.SessionForwardSocialCmd.type)
  return static_cast< ::Cmd::ECmdType >(type_);
}
inline void SessionForwardSocialCmd::set_type(::Cmd::ECmdType value) {
  assert(::Cmd::ECmdType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SessionForwardSocialCmd.type)
}

// optional .Cmd.SocialUser user = 4;
inline bool SessionForwardSocialCmd::has_user() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SessionForwardSocialCmd::set_has_user() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SessionForwardSocialCmd::clear_has_user() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SessionForwardSocialCmd::clear_user() {
  if (user_ != NULL) user_->::Cmd::SocialUser::Clear();
  clear_has_user();
}
inline const ::Cmd::SocialUser& SessionForwardSocialCmd::user() const {
  // @@protoc_insertion_point(field_get:Cmd.SessionForwardSocialCmd.user)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
inline ::Cmd::SocialUser* SessionForwardSocialCmd::mutable_user() {
  set_has_user();
  if (user_ == NULL) user_ = new ::Cmd::SocialUser;
  // @@protoc_insertion_point(field_mutable:Cmd.SessionForwardSocialCmd.user)
  return user_;
}
inline ::Cmd::SocialUser* SessionForwardSocialCmd::release_user() {
  clear_has_user();
  ::Cmd::SocialUser* temp = user_;
  user_ = NULL;
  return temp;
}
inline void SessionForwardSocialCmd::set_allocated_user(::Cmd::SocialUser* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.SessionForwardSocialCmd.user)
}

// optional bytes data = 5;
inline bool SessionForwardSocialCmd::has_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SessionForwardSocialCmd::set_has_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SessionForwardSocialCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SessionForwardSocialCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& SessionForwardSocialCmd::data() const {
  // @@protoc_insertion_point(field_get:Cmd.SessionForwardSocialCmd.data)
  return *data_;
}
inline void SessionForwardSocialCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.SessionForwardSocialCmd.data)
}
inline void SessionForwardSocialCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.SessionForwardSocialCmd.data)
}
inline void SessionForwardSocialCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.SessionForwardSocialCmd.data)
}
inline ::std::string* SessionForwardSocialCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.SessionForwardSocialCmd.data)
  return data_;
}
inline ::std::string* SessionForwardSocialCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SessionForwardSocialCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.SessionForwardSocialCmd.data)
}

// optional uint32 len = 6 [default = 0];
inline bool SessionForwardSocialCmd::has_len() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SessionForwardSocialCmd::set_has_len() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SessionForwardSocialCmd::clear_has_len() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SessionForwardSocialCmd::clear_len() {
  len_ = 0u;
  clear_has_len();
}
inline ::google::protobuf::uint32 SessionForwardSocialCmd::len() const {
  // @@protoc_insertion_point(field_get:Cmd.SessionForwardSocialCmd.len)
  return len_;
}
inline void SessionForwardSocialCmd::set_len(::google::protobuf::uint32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SessionForwardSocialCmd.len)
}

// -------------------------------------------------------------------

// ForwardToUserSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool ForwardToUserSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ForwardToUserSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ForwardToUserSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ForwardToUserSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command ForwardToUserSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardToUserSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ForwardToUserSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardToUserSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_FORWARD_TO_USER];
inline bool ForwardToUserSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ForwardToUserSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ForwardToUserSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ForwardToUserSocialCmd::clear_param() {
  param_ = 2;
  clear_has_param();
}
inline ::Cmd::SocialParam ForwardToUserSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardToUserSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void ForwardToUserSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardToUserSocialCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool ForwardToUserSocialCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ForwardToUserSocialCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ForwardToUserSocialCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ForwardToUserSocialCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ForwardToUserSocialCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardToUserSocialCmd.charid)
  return charid_;
}
inline void ForwardToUserSocialCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardToUserSocialCmd.charid)
}

// optional bytes data = 4;
inline bool ForwardToUserSocialCmd::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ForwardToUserSocialCmd::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ForwardToUserSocialCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ForwardToUserSocialCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& ForwardToUserSocialCmd::data() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardToUserSocialCmd.data)
  return *data_;
}
inline void ForwardToUserSocialCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.ForwardToUserSocialCmd.data)
}
inline void ForwardToUserSocialCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.ForwardToUserSocialCmd.data)
}
inline void ForwardToUserSocialCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.ForwardToUserSocialCmd.data)
}
inline ::std::string* ForwardToUserSocialCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.ForwardToUserSocialCmd.data)
  return data_;
}
inline ::std::string* ForwardToUserSocialCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ForwardToUserSocialCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ForwardToUserSocialCmd.data)
}

// optional uint32 len = 5;
inline bool ForwardToUserSocialCmd::has_len() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ForwardToUserSocialCmd::set_has_len() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ForwardToUserSocialCmd::clear_has_len() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ForwardToUserSocialCmd::clear_len() {
  len_ = 0u;
  clear_has_len();
}
inline ::google::protobuf::uint32 ForwardToUserSocialCmd::len() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardToUserSocialCmd.len)
  return len_;
}
inline void ForwardToUserSocialCmd::set_len(::google::protobuf::uint32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardToUserSocialCmd.len)
}

// -------------------------------------------------------------------

// ForwardToUserSceneSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool ForwardToUserSceneSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ForwardToUserSceneSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ForwardToUserSceneSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ForwardToUserSceneSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command ForwardToUserSceneSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardToUserSceneSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ForwardToUserSceneSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardToUserSceneSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_FORWARD_TO_USER_SCENE];
inline bool ForwardToUserSceneSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ForwardToUserSceneSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ForwardToUserSceneSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ForwardToUserSceneSocialCmd::clear_param() {
  param_ = 3;
  clear_has_param();
}
inline ::Cmd::SocialParam ForwardToUserSceneSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardToUserSceneSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void ForwardToUserSceneSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardToUserSceneSocialCmd.param)
}

// optional uint64 charid = 3;
inline bool ForwardToUserSceneSocialCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ForwardToUserSceneSocialCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ForwardToUserSceneSocialCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ForwardToUserSceneSocialCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ForwardToUserSceneSocialCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardToUserSceneSocialCmd.charid)
  return charid_;
}
inline void ForwardToUserSceneSocialCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardToUserSceneSocialCmd.charid)
}

// optional bytes data = 4;
inline bool ForwardToUserSceneSocialCmd::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ForwardToUserSceneSocialCmd::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ForwardToUserSceneSocialCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ForwardToUserSceneSocialCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& ForwardToUserSceneSocialCmd::data() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardToUserSceneSocialCmd.data)
  return *data_;
}
inline void ForwardToUserSceneSocialCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.ForwardToUserSceneSocialCmd.data)
}
inline void ForwardToUserSceneSocialCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.ForwardToUserSceneSocialCmd.data)
}
inline void ForwardToUserSceneSocialCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.ForwardToUserSceneSocialCmd.data)
}
inline ::std::string* ForwardToUserSceneSocialCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.ForwardToUserSceneSocialCmd.data)
  return data_;
}
inline ::std::string* ForwardToUserSceneSocialCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ForwardToUserSceneSocialCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ForwardToUserSceneSocialCmd.data)
}

// optional uint32 len = 5;
inline bool ForwardToUserSceneSocialCmd::has_len() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ForwardToUserSceneSocialCmd::set_has_len() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ForwardToUserSceneSocialCmd::clear_has_len() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ForwardToUserSceneSocialCmd::clear_len() {
  len_ = 0u;
  clear_has_len();
}
inline ::google::protobuf::uint32 ForwardToUserSceneSocialCmd::len() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardToUserSceneSocialCmd.len)
  return len_;
}
inline void ForwardToUserSceneSocialCmd::set_len(::google::protobuf::uint32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardToUserSceneSocialCmd.len)
}

// -------------------------------------------------------------------

// ForwardToSceneUserSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool ForwardToSceneUserSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ForwardToSceneUserSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ForwardToSceneUserSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ForwardToSceneUserSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command ForwardToSceneUserSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardToSceneUserSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ForwardToSceneUserSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardToSceneUserSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_FORWARD_TO_SCENE_USER];
inline bool ForwardToSceneUserSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ForwardToSceneUserSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ForwardToSceneUserSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ForwardToSceneUserSocialCmd::clear_param() {
  param_ = 4;
  clear_has_param();
}
inline ::Cmd::SocialParam ForwardToSceneUserSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardToSceneUserSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void ForwardToSceneUserSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardToSceneUserSocialCmd.param)
}

// optional uint64 charid = 3;
inline bool ForwardToSceneUserSocialCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ForwardToSceneUserSocialCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ForwardToSceneUserSocialCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ForwardToSceneUserSocialCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ForwardToSceneUserSocialCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardToSceneUserSocialCmd.charid)
  return charid_;
}
inline void ForwardToSceneUserSocialCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardToSceneUserSocialCmd.charid)
}

// optional bytes data = 4;
inline bool ForwardToSceneUserSocialCmd::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ForwardToSceneUserSocialCmd::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ForwardToSceneUserSocialCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ForwardToSceneUserSocialCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& ForwardToSceneUserSocialCmd::data() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardToSceneUserSocialCmd.data)
  return *data_;
}
inline void ForwardToSceneUserSocialCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.ForwardToSceneUserSocialCmd.data)
}
inline void ForwardToSceneUserSocialCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.ForwardToSceneUserSocialCmd.data)
}
inline void ForwardToSceneUserSocialCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.ForwardToSceneUserSocialCmd.data)
}
inline ::std::string* ForwardToSceneUserSocialCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.ForwardToSceneUserSocialCmd.data)
  return data_;
}
inline ::std::string* ForwardToSceneUserSocialCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ForwardToSceneUserSocialCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ForwardToSceneUserSocialCmd.data)
}

// optional uint32 len = 5;
inline bool ForwardToSceneUserSocialCmd::has_len() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ForwardToSceneUserSocialCmd::set_has_len() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ForwardToSceneUserSocialCmd::clear_has_len() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ForwardToSceneUserSocialCmd::clear_len() {
  len_ = 0u;
  clear_has_len();
}
inline ::google::protobuf::uint32 ForwardToSceneUserSocialCmd::len() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardToSceneUserSocialCmd.len)
  return len_;
}
inline void ForwardToSceneUserSocialCmd::set_len(::google::protobuf::uint32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardToSceneUserSocialCmd.len)
}

// -------------------------------------------------------------------

// ForwardToSessionUserSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool ForwardToSessionUserSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ForwardToSessionUserSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ForwardToSessionUserSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ForwardToSessionUserSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command ForwardToSessionUserSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardToSessionUserSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ForwardToSessionUserSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardToSessionUserSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_FORWARD_TO_SESSION_USER];
inline bool ForwardToSessionUserSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ForwardToSessionUserSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ForwardToSessionUserSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ForwardToSessionUserSocialCmd::clear_param() {
  param_ = 68;
  clear_has_param();
}
inline ::Cmd::SocialParam ForwardToSessionUserSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardToSessionUserSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void ForwardToSessionUserSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardToSessionUserSocialCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool ForwardToSessionUserSocialCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ForwardToSessionUserSocialCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ForwardToSessionUserSocialCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ForwardToSessionUserSocialCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ForwardToSessionUserSocialCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardToSessionUserSocialCmd.charid)
  return charid_;
}
inline void ForwardToSessionUserSocialCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardToSessionUserSocialCmd.charid)
}

// optional bytes data = 4;
inline bool ForwardToSessionUserSocialCmd::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ForwardToSessionUserSocialCmd::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ForwardToSessionUserSocialCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ForwardToSessionUserSocialCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& ForwardToSessionUserSocialCmd::data() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardToSessionUserSocialCmd.data)
  return *data_;
}
inline void ForwardToSessionUserSocialCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.ForwardToSessionUserSocialCmd.data)
}
inline void ForwardToSessionUserSocialCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.ForwardToSessionUserSocialCmd.data)
}
inline void ForwardToSessionUserSocialCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.ForwardToSessionUserSocialCmd.data)
}
inline ::std::string* ForwardToSessionUserSocialCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.ForwardToSessionUserSocialCmd.data)
  return data_;
}
inline ::std::string* ForwardToSessionUserSocialCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ForwardToSessionUserSocialCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ForwardToSessionUserSocialCmd.data)
}

// optional uint32 len = 5 [default = 0];
inline bool ForwardToSessionUserSocialCmd::has_len() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ForwardToSessionUserSocialCmd::set_has_len() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ForwardToSessionUserSocialCmd::clear_has_len() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ForwardToSessionUserSocialCmd::clear_len() {
  len_ = 0u;
  clear_has_len();
}
inline ::google::protobuf::uint32 ForwardToSessionUserSocialCmd::len() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardToSessionUserSocialCmd.len)
  return len_;
}
inline void ForwardToSessionUserSocialCmd::set_len(::google::protobuf::uint32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardToSessionUserSocialCmd.len)
}

// -------------------------------------------------------------------

// OnlineStatusSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool OnlineStatusSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OnlineStatusSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OnlineStatusSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OnlineStatusSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command OnlineStatusSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.OnlineStatusSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void OnlineStatusSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OnlineStatusSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_ONLINESTATUS];
inline bool OnlineStatusSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OnlineStatusSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OnlineStatusSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OnlineStatusSocialCmd::clear_param() {
  param_ = 5;
  clear_has_param();
}
inline ::Cmd::SocialParam OnlineStatusSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.OnlineStatusSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void OnlineStatusSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OnlineStatusSocialCmd.param)
}

// optional .Cmd.SocialUser user = 3;
inline bool OnlineStatusSocialCmd::has_user() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OnlineStatusSocialCmd::set_has_user() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OnlineStatusSocialCmd::clear_has_user() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OnlineStatusSocialCmd::clear_user() {
  if (user_ != NULL) user_->::Cmd::SocialUser::Clear();
  clear_has_user();
}
inline const ::Cmd::SocialUser& OnlineStatusSocialCmd::user() const {
  // @@protoc_insertion_point(field_get:Cmd.OnlineStatusSocialCmd.user)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
inline ::Cmd::SocialUser* OnlineStatusSocialCmd::mutable_user() {
  set_has_user();
  if (user_ == NULL) user_ = new ::Cmd::SocialUser;
  // @@protoc_insertion_point(field_mutable:Cmd.OnlineStatusSocialCmd.user)
  return user_;
}
inline ::Cmd::SocialUser* OnlineStatusSocialCmd::release_user() {
  clear_has_user();
  ::Cmd::SocialUser* temp = user_;
  user_ = NULL;
  return temp;
}
inline void OnlineStatusSocialCmd::set_allocated_user(::Cmd::SocialUser* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.OnlineStatusSocialCmd.user)
}

// optional bool online = 4 [default = false];
inline bool OnlineStatusSocialCmd::has_online() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OnlineStatusSocialCmd::set_has_online() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OnlineStatusSocialCmd::clear_has_online() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OnlineStatusSocialCmd::clear_online() {
  online_ = false;
  clear_has_online();
}
inline bool OnlineStatusSocialCmd::online() const {
  // @@protoc_insertion_point(field_get:Cmd.OnlineStatusSocialCmd.online)
  return online_;
}
inline void OnlineStatusSocialCmd::set_online(bool value) {
  set_has_online();
  online_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OnlineStatusSocialCmd.online)
}

// -------------------------------------------------------------------

// AddOfflineMsgSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool AddOfflineMsgSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddOfflineMsgSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddOfflineMsgSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddOfflineMsgSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command AddOfflineMsgSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.AddOfflineMsgSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void AddOfflineMsgSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AddOfflineMsgSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_ADD_OFFLINEMSG];
inline bool AddOfflineMsgSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddOfflineMsgSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddOfflineMsgSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddOfflineMsgSocialCmd::clear_param() {
  param_ = 6;
  clear_has_param();
}
inline ::Cmd::SocialParam AddOfflineMsgSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.AddOfflineMsgSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void AddOfflineMsgSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AddOfflineMsgSocialCmd.param)
}

// optional .Cmd.OfflineMsg msg = 3;
inline bool AddOfflineMsgSocialCmd::has_msg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddOfflineMsgSocialCmd::set_has_msg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddOfflineMsgSocialCmd::clear_has_msg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddOfflineMsgSocialCmd::clear_msg() {
  if (msg_ != NULL) msg_->::Cmd::OfflineMsg::Clear();
  clear_has_msg();
}
inline const ::Cmd::OfflineMsg& AddOfflineMsgSocialCmd::msg() const {
  // @@protoc_insertion_point(field_get:Cmd.AddOfflineMsgSocialCmd.msg)
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
}
inline ::Cmd::OfflineMsg* AddOfflineMsgSocialCmd::mutable_msg() {
  set_has_msg();
  if (msg_ == NULL) msg_ = new ::Cmd::OfflineMsg;
  // @@protoc_insertion_point(field_mutable:Cmd.AddOfflineMsgSocialCmd.msg)
  return msg_;
}
inline ::Cmd::OfflineMsg* AddOfflineMsgSocialCmd::release_msg() {
  clear_has_msg();
  ::Cmd::OfflineMsg* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline void AddOfflineMsgSocialCmd::set_allocated_msg(::Cmd::OfflineMsg* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.AddOfflineMsgSocialCmd.msg)
}

// -------------------------------------------------------------------

// UserInfo

// optional .Cmd.SocialUser user = 1;
inline bool UserInfo::has_user() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserInfo::set_has_user() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserInfo::clear_has_user() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserInfo::clear_user() {
  if (user_ != NULL) user_->::Cmd::SocialUser::Clear();
  clear_has_user();
}
inline const ::Cmd::SocialUser& UserInfo::user() const {
  // @@protoc_insertion_point(field_get:Cmd.UserInfo.user)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
inline ::Cmd::SocialUser* UserInfo::mutable_user() {
  set_has_user();
  if (user_ == NULL) user_ = new ::Cmd::SocialUser;
  // @@protoc_insertion_point(field_mutable:Cmd.UserInfo.user)
  return user_;
}
inline ::Cmd::SocialUser* UserInfo::release_user() {
  clear_has_user();
  ::Cmd::SocialUser* temp = user_;
  user_ = NULL;
  return temp;
}
inline void UserInfo::set_allocated_user(::Cmd::SocialUser* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.UserInfo.user)
}

// repeated .Cmd.UserData datas = 2;
inline int UserInfo::datas_size() const {
  return datas_.size();
}
inline void UserInfo::clear_datas() {
  datas_.Clear();
}
inline const ::Cmd::UserData& UserInfo::datas(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UserInfo.datas)
  return datas_.Get(index);
}
inline ::Cmd::UserData* UserInfo::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.UserInfo.datas)
  return datas_.Mutable(index);
}
inline ::Cmd::UserData* UserInfo::add_datas() {
  // @@protoc_insertion_point(field_add:Cmd.UserInfo.datas)
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UserData >&
UserInfo::datas() const {
  // @@protoc_insertion_point(field_list:Cmd.UserInfo.datas)
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::UserData >*
UserInfo::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UserInfo.datas)
  return &datas_;
}

// repeated .Cmd.UserAttr attrs = 3;
inline int UserInfo::attrs_size() const {
  return attrs_.size();
}
inline void UserInfo::clear_attrs() {
  attrs_.Clear();
}
inline const ::Cmd::UserAttr& UserInfo::attrs(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UserInfo.attrs)
  return attrs_.Get(index);
}
inline ::Cmd::UserAttr* UserInfo::mutable_attrs(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.UserInfo.attrs)
  return attrs_.Mutable(index);
}
inline ::Cmd::UserAttr* UserInfo::add_attrs() {
  // @@protoc_insertion_point(field_add:Cmd.UserInfo.attrs)
  return attrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >&
UserInfo::attrs() const {
  // @@protoc_insertion_point(field_list:Cmd.UserInfo.attrs)
  return attrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >*
UserInfo::mutable_attrs() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UserInfo.attrs)
  return &attrs_;
}

// -------------------------------------------------------------------

// UserInfoSyncSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool UserInfoSyncSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserInfoSyncSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserInfoSyncSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserInfoSyncSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command UserInfoSyncSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UserInfoSyncSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UserInfoSyncSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserInfoSyncSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_USER_SYNC_INFO];
inline bool UserInfoSyncSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserInfoSyncSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserInfoSyncSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserInfoSyncSocialCmd::clear_param() {
  param_ = 10;
  clear_has_param();
}
inline ::Cmd::SocialParam UserInfoSyncSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UserInfoSyncSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void UserInfoSyncSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserInfoSyncSocialCmd.param)
}

// optional .Cmd.UserInfo info = 4;
inline bool UserInfoSyncSocialCmd::has_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserInfoSyncSocialCmd::set_has_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserInfoSyncSocialCmd::clear_has_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserInfoSyncSocialCmd::clear_info() {
  if (info_ != NULL) info_->::Cmd::UserInfo::Clear();
  clear_has_info();
}
inline const ::Cmd::UserInfo& UserInfoSyncSocialCmd::info() const {
  // @@protoc_insertion_point(field_get:Cmd.UserInfoSyncSocialCmd.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::Cmd::UserInfo* UserInfoSyncSocialCmd::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::Cmd::UserInfo;
  // @@protoc_insertion_point(field_mutable:Cmd.UserInfoSyncSocialCmd.info)
  return info_;
}
inline ::Cmd::UserInfo* UserInfoSyncSocialCmd::release_info() {
  clear_has_info();
  ::Cmd::UserInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void UserInfoSyncSocialCmd::set_allocated_info(::Cmd::UserInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.UserInfoSyncSocialCmd.info)
}

// -------------------------------------------------------------------

// UserAddItemSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool UserAddItemSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserAddItemSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserAddItemSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserAddItemSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command UserAddItemSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UserAddItemSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UserAddItemSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserAddItemSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_USER_ADD_ITEM];
inline bool UserAddItemSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserAddItemSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserAddItemSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserAddItemSocialCmd::clear_param() {
  param_ = 11;
  clear_has_param();
}
inline ::Cmd::SocialParam UserAddItemSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UserAddItemSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void UserAddItemSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserAddItemSocialCmd.param)
}

// optional .Cmd.SocialUser user = 3;
inline bool UserAddItemSocialCmd::has_user() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserAddItemSocialCmd::set_has_user() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserAddItemSocialCmd::clear_has_user() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserAddItemSocialCmd::clear_user() {
  if (user_ != NULL) user_->::Cmd::SocialUser::Clear();
  clear_has_user();
}
inline const ::Cmd::SocialUser& UserAddItemSocialCmd::user() const {
  // @@protoc_insertion_point(field_get:Cmd.UserAddItemSocialCmd.user)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
inline ::Cmd::SocialUser* UserAddItemSocialCmd::mutable_user() {
  set_has_user();
  if (user_ == NULL) user_ = new ::Cmd::SocialUser;
  // @@protoc_insertion_point(field_mutable:Cmd.UserAddItemSocialCmd.user)
  return user_;
}
inline ::Cmd::SocialUser* UserAddItemSocialCmd::release_user() {
  clear_has_user();
  ::Cmd::SocialUser* temp = user_;
  user_ = NULL;
  return temp;
}
inline void UserAddItemSocialCmd::set_allocated_user(::Cmd::SocialUser* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.UserAddItemSocialCmd.user)
}

// repeated .Cmd.ItemInfo items = 4;
inline int UserAddItemSocialCmd::items_size() const {
  return items_.size();
}
inline void UserAddItemSocialCmd::clear_items() {
  items_.Clear();
}
inline const ::Cmd::ItemInfo& UserAddItemSocialCmd::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UserAddItemSocialCmd.items)
  return items_.Get(index);
}
inline ::Cmd::ItemInfo* UserAddItemSocialCmd::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.UserAddItemSocialCmd.items)
  return items_.Mutable(index);
}
inline ::Cmd::ItemInfo* UserAddItemSocialCmd::add_items() {
  // @@protoc_insertion_point(field_add:Cmd.UserAddItemSocialCmd.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo >&
UserAddItemSocialCmd::items() const {
  // @@protoc_insertion_point(field_list:Cmd.UserAddItemSocialCmd.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo >*
UserAddItemSocialCmd::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UserAddItemSocialCmd.items)
  return &items_;
}

// optional uint32 doublereward = 5 [default = 0];
inline bool UserAddItemSocialCmd::has_doublereward() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserAddItemSocialCmd::set_has_doublereward() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserAddItemSocialCmd::clear_has_doublereward() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserAddItemSocialCmd::clear_doublereward() {
  doublereward_ = 0u;
  clear_has_doublereward();
}
inline ::google::protobuf::uint32 UserAddItemSocialCmd::doublereward() const {
  // @@protoc_insertion_point(field_get:Cmd.UserAddItemSocialCmd.doublereward)
  return doublereward_;
}
inline void UserAddItemSocialCmd::set_doublereward(::google::protobuf::uint32 value) {
  set_has_doublereward();
  doublereward_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserAddItemSocialCmd.doublereward)
}

// optional uint32 operatereward = 6 [default = 0];
inline bool UserAddItemSocialCmd::has_operatereward() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserAddItemSocialCmd::set_has_operatereward() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserAddItemSocialCmd::clear_has_operatereward() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserAddItemSocialCmd::clear_operatereward() {
  operatereward_ = 0u;
  clear_has_operatereward();
}
inline ::google::protobuf::uint32 UserAddItemSocialCmd::operatereward() const {
  // @@protoc_insertion_point(field_get:Cmd.UserAddItemSocialCmd.operatereward)
  return operatereward_;
}
inline void UserAddItemSocialCmd::set_operatereward(::google::protobuf::uint32 value) {
  set_has_operatereward();
  operatereward_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserAddItemSocialCmd.operatereward)
}

// -------------------------------------------------------------------

// UserDelSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool UserDelSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserDelSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserDelSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserDelSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command UserDelSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UserDelSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UserDelSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserDelSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_USER_DEL_CHAR];
inline bool UserDelSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserDelSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserDelSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserDelSocialCmd::clear_param() {
  param_ = 12;
  clear_has_param();
}
inline ::Cmd::SocialParam UserDelSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UserDelSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void UserDelSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserDelSocialCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool UserDelSocialCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserDelSocialCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserDelSocialCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserDelSocialCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 UserDelSocialCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.UserDelSocialCmd.charid)
  return charid_;
}
inline void UserDelSocialCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserDelSocialCmd.charid)
}

// -------------------------------------------------------------------

// UserGuildInfoSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool UserGuildInfoSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserGuildInfoSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserGuildInfoSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserGuildInfoSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command UserGuildInfoSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UserGuildInfoSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UserGuildInfoSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserGuildInfoSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_USER_GUILD_INFO];
inline bool UserGuildInfoSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserGuildInfoSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserGuildInfoSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserGuildInfoSocialCmd::clear_param() {
  param_ = 14;
  clear_has_param();
}
inline ::Cmd::SocialParam UserGuildInfoSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UserGuildInfoSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void UserGuildInfoSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserGuildInfoSocialCmd.param)
}

// optional uint64 charid = 3;
inline bool UserGuildInfoSocialCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserGuildInfoSocialCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserGuildInfoSocialCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserGuildInfoSocialCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 UserGuildInfoSocialCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.UserGuildInfoSocialCmd.charid)
  return charid_;
}
inline void UserGuildInfoSocialCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserGuildInfoSocialCmd.charid)
}

// optional string name = 4;
inline bool UserGuildInfoSocialCmd::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserGuildInfoSocialCmd::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserGuildInfoSocialCmd::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserGuildInfoSocialCmd::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& UserGuildInfoSocialCmd::name() const {
  // @@protoc_insertion_point(field_get:Cmd.UserGuildInfoSocialCmd.name)
  return *name_;
}
inline void UserGuildInfoSocialCmd::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.UserGuildInfoSocialCmd.name)
}
inline void UserGuildInfoSocialCmd::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.UserGuildInfoSocialCmd.name)
}
inline void UserGuildInfoSocialCmd::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.UserGuildInfoSocialCmd.name)
}
inline ::std::string* UserGuildInfoSocialCmd::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.UserGuildInfoSocialCmd.name)
  return name_;
}
inline ::std::string* UserGuildInfoSocialCmd::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserGuildInfoSocialCmd::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.UserGuildInfoSocialCmd.name)
}

// optional string portrait = 5;
inline bool UserGuildInfoSocialCmd::has_portrait() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserGuildInfoSocialCmd::set_has_portrait() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserGuildInfoSocialCmd::clear_has_portrait() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserGuildInfoSocialCmd::clear_portrait() {
  if (portrait_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_->clear();
  }
  clear_has_portrait();
}
inline const ::std::string& UserGuildInfoSocialCmd::portrait() const {
  // @@protoc_insertion_point(field_get:Cmd.UserGuildInfoSocialCmd.portrait)
  return *portrait_;
}
inline void UserGuildInfoSocialCmd::set_portrait(const ::std::string& value) {
  set_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_ = new ::std::string;
  }
  portrait_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.UserGuildInfoSocialCmd.portrait)
}
inline void UserGuildInfoSocialCmd::set_portrait(const char* value) {
  set_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_ = new ::std::string;
  }
  portrait_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.UserGuildInfoSocialCmd.portrait)
}
inline void UserGuildInfoSocialCmd::set_portrait(const char* value, size_t size) {
  set_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_ = new ::std::string;
  }
  portrait_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.UserGuildInfoSocialCmd.portrait)
}
inline ::std::string* UserGuildInfoSocialCmd::mutable_portrait() {
  set_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.UserGuildInfoSocialCmd.portrait)
  return portrait_;
}
inline ::std::string* UserGuildInfoSocialCmd::release_portrait() {
  clear_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = portrait_;
    portrait_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserGuildInfoSocialCmd::set_allocated_portrait(::std::string* portrait) {
  if (portrait_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete portrait_;
  }
  if (portrait) {
    set_has_portrait();
    portrait_ = portrait;
  } else {
    clear_has_portrait();
    portrait_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.UserGuildInfoSocialCmd.portrait)
}

// -------------------------------------------------------------------

// ChatWorldMsgSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool ChatWorldMsgSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatWorldMsgSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatWorldMsgSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatWorldMsgSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command ChatWorldMsgSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ChatWorldMsgSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ChatWorldMsgSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChatWorldMsgSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_CHAT_WORLDMSG];
inline bool ChatWorldMsgSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatWorldMsgSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatWorldMsgSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatWorldMsgSocialCmd::clear_param() {
  param_ = 21;
  clear_has_param();
}
inline ::Cmd::SocialParam ChatWorldMsgSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ChatWorldMsgSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void ChatWorldMsgSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChatWorldMsgSocialCmd.param)
}

// optional .Cmd.SysMsg msg = 3;
inline bool ChatWorldMsgSocialCmd::has_msg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChatWorldMsgSocialCmd::set_has_msg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChatWorldMsgSocialCmd::clear_has_msg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChatWorldMsgSocialCmd::clear_msg() {
  if (msg_ != NULL) msg_->::Cmd::SysMsg::Clear();
  clear_has_msg();
}
inline const ::Cmd::SysMsg& ChatWorldMsgSocialCmd::msg() const {
  // @@protoc_insertion_point(field_get:Cmd.ChatWorldMsgSocialCmd.msg)
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
}
inline ::Cmd::SysMsg* ChatWorldMsgSocialCmd::mutable_msg() {
  set_has_msg();
  if (msg_ == NULL) msg_ = new ::Cmd::SysMsg;
  // @@protoc_insertion_point(field_mutable:Cmd.ChatWorldMsgSocialCmd.msg)
  return msg_;
}
inline ::Cmd::SysMsg* ChatWorldMsgSocialCmd::release_msg() {
  clear_has_msg();
  ::Cmd::SysMsg* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline void ChatWorldMsgSocialCmd::set_allocated_msg(::Cmd::SysMsg* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ChatWorldMsgSocialCmd.msg)
}

// -------------------------------------------------------------------

// ChatUser

// optional uint64 charid = 1 [default = 0];
inline bool ChatUser::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatUser::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatUser::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatUser::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ChatUser::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChatUser.charid)
  return charid_;
}
inline void ChatUser::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChatUser.charid)
}

// optional uint32 zoneid = 2 [default = 0];
inline bool ChatUser::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatUser::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatUser::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatUser::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 ChatUser::zoneid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChatUser.zoneid)
  return zoneid_;
}
inline void ChatUser::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChatUser.zoneid)
}

// -------------------------------------------------------------------

// ChatSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool ChatSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command ChatSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ChatSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ChatSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChatSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_CHAT_MSG];
inline bool ChatSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatSocialCmd::clear_param() {
  param_ = 22;
  clear_has_param();
}
inline ::Cmd::SocialParam ChatSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ChatSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void ChatSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChatSocialCmd.param)
}

// optional .Cmd.ChatRetCmd ret = 3;
inline bool ChatSocialCmd::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChatSocialCmd::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChatSocialCmd::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChatSocialCmd::clear_ret() {
  if (ret_ != NULL) ret_->::Cmd::ChatRetCmd::Clear();
  clear_has_ret();
}
inline const ::Cmd::ChatRetCmd& ChatSocialCmd::ret() const {
  // @@protoc_insertion_point(field_get:Cmd.ChatSocialCmd.ret)
  return ret_ != NULL ? *ret_ : *default_instance_->ret_;
}
inline ::Cmd::ChatRetCmd* ChatSocialCmd::mutable_ret() {
  set_has_ret();
  if (ret_ == NULL) ret_ = new ::Cmd::ChatRetCmd;
  // @@protoc_insertion_point(field_mutable:Cmd.ChatSocialCmd.ret)
  return ret_;
}
inline ::Cmd::ChatRetCmd* ChatSocialCmd::release_ret() {
  clear_has_ret();
  ::Cmd::ChatRetCmd* temp = ret_;
  ret_ = NULL;
  return temp;
}
inline void ChatSocialCmd::set_allocated_ret(::Cmd::ChatRetCmd* ret) {
  delete ret_;
  ret_ = ret;
  if (ret) {
    set_has_ret();
  } else {
    clear_has_ret();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ChatSocialCmd.ret)
}

// repeated .Cmd.ChatUser targets = 4;
inline int ChatSocialCmd::targets_size() const {
  return targets_.size();
}
inline void ChatSocialCmd::clear_targets() {
  targets_.Clear();
}
inline const ::Cmd::ChatUser& ChatSocialCmd::targets(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.ChatSocialCmd.targets)
  return targets_.Get(index);
}
inline ::Cmd::ChatUser* ChatSocialCmd::mutable_targets(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.ChatSocialCmd.targets)
  return targets_.Mutable(index);
}
inline ::Cmd::ChatUser* ChatSocialCmd::add_targets() {
  // @@protoc_insertion_point(field_add:Cmd.ChatSocialCmd.targets)
  return targets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ChatUser >&
ChatSocialCmd::targets() const {
  // @@protoc_insertion_point(field_list:Cmd.ChatSocialCmd.targets)
  return targets_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ChatUser >*
ChatSocialCmd::mutable_targets() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.ChatSocialCmd.targets)
  return &targets_;
}

// optional uint64 accid = 5 [default = 0];
inline bool ChatSocialCmd::has_accid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChatSocialCmd::set_has_accid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChatSocialCmd::clear_has_accid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChatSocialCmd::clear_accid() {
  accid_ = GOOGLE_ULONGLONG(0);
  clear_has_accid();
}
inline ::google::protobuf::uint64 ChatSocialCmd::accid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChatSocialCmd.accid)
  return accid_;
}
inline void ChatSocialCmd::set_accid(::google::protobuf::uint64 value) {
  set_has_accid();
  accid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChatSocialCmd.accid)
}

// optional uint32 platformid = 6 [default = 0];
inline bool ChatSocialCmd::has_platformid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ChatSocialCmd::set_has_platformid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ChatSocialCmd::clear_has_platformid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ChatSocialCmd::clear_platformid() {
  platformid_ = 0u;
  clear_has_platformid();
}
inline ::google::protobuf::uint32 ChatSocialCmd::platformid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChatSocialCmd.platformid)
  return platformid_;
}
inline void ChatSocialCmd::set_platformid(::google::protobuf::uint32 value) {
  set_has_platformid();
  platformid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChatSocialCmd.platformid)
}

// optional bool to_global = 7 [default = false];
inline bool ChatSocialCmd::has_to_global() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ChatSocialCmd::set_has_to_global() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ChatSocialCmd::clear_has_to_global() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ChatSocialCmd::clear_to_global() {
  to_global_ = false;
  clear_has_to_global();
}
inline bool ChatSocialCmd::to_global() const {
  // @@protoc_insertion_point(field_get:Cmd.ChatSocialCmd.to_global)
  return to_global_;
}
inline void ChatSocialCmd::set_to_global(bool value) {
  set_has_to_global();
  to_global_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChatSocialCmd.to_global)
}

// -------------------------------------------------------------------

// CreateGuildSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool CreateGuildSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateGuildSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateGuildSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateGuildSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command CreateGuildSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.CreateGuildSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void CreateGuildSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CreateGuildSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_CREATEGUILD];
inline bool CreateGuildSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateGuildSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateGuildSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateGuildSocialCmd::clear_param() {
  param_ = 31;
  clear_has_param();
}
inline ::Cmd::SocialParam CreateGuildSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.CreateGuildSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void CreateGuildSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CreateGuildSocialCmd.param)
}

// optional .Cmd.UserInfo user = 3;
inline bool CreateGuildSocialCmd::has_user() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateGuildSocialCmd::set_has_user() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateGuildSocialCmd::clear_has_user() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateGuildSocialCmd::clear_user() {
  if (user_ != NULL) user_->::Cmd::UserInfo::Clear();
  clear_has_user();
}
inline const ::Cmd::UserInfo& CreateGuildSocialCmd::user() const {
  // @@protoc_insertion_point(field_get:Cmd.CreateGuildSocialCmd.user)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
inline ::Cmd::UserInfo* CreateGuildSocialCmd::mutable_user() {
  set_has_user();
  if (user_ == NULL) user_ = new ::Cmd::UserInfo;
  // @@protoc_insertion_point(field_mutable:Cmd.CreateGuildSocialCmd.user)
  return user_;
}
inline ::Cmd::UserInfo* CreateGuildSocialCmd::release_user() {
  clear_has_user();
  ::Cmd::UserInfo* temp = user_;
  user_ = NULL;
  return temp;
}
inline void CreateGuildSocialCmd::set_allocated_user(::Cmd::UserInfo* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.CreateGuildSocialCmd.user)
}

// optional uint32 msgid = 4 [default = 0];
inline bool CreateGuildSocialCmd::has_msgid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateGuildSocialCmd::set_has_msgid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateGuildSocialCmd::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateGuildSocialCmd::clear_msgid() {
  msgid_ = 0u;
  clear_has_msgid();
}
inline ::google::protobuf::uint32 CreateGuildSocialCmd::msgid() const {
  // @@protoc_insertion_point(field_get:Cmd.CreateGuildSocialCmd.msgid)
  return msgid_;
}
inline void CreateGuildSocialCmd::set_msgid(::google::protobuf::uint32 value) {
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CreateGuildSocialCmd.msgid)
}

// optional string name = 5;
inline bool CreateGuildSocialCmd::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreateGuildSocialCmd::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreateGuildSocialCmd::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreateGuildSocialCmd::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CreateGuildSocialCmd::name() const {
  // @@protoc_insertion_point(field_get:Cmd.CreateGuildSocialCmd.name)
  return *name_;
}
inline void CreateGuildSocialCmd::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.CreateGuildSocialCmd.name)
}
inline void CreateGuildSocialCmd::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.CreateGuildSocialCmd.name)
}
inline void CreateGuildSocialCmd::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.CreateGuildSocialCmd.name)
}
inline ::std::string* CreateGuildSocialCmd::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.CreateGuildSocialCmd.name)
  return name_;
}
inline ::std::string* CreateGuildSocialCmd::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreateGuildSocialCmd::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.CreateGuildSocialCmd.name)
}

// -------------------------------------------------------------------

// GuildDonateSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool GuildDonateSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildDonateSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildDonateSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildDonateSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command GuildDonateSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildDonateSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildDonateSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildDonateSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_GUILDDONATE];
inline bool GuildDonateSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildDonateSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildDonateSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildDonateSocialCmd::clear_param() {
  param_ = 32;
  clear_has_param();
}
inline ::Cmd::SocialParam GuildDonateSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildDonateSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void GuildDonateSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildDonateSocialCmd.param)
}

// optional .Cmd.SocialUser user = 3;
inline bool GuildDonateSocialCmd::has_user() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildDonateSocialCmd::set_has_user() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildDonateSocialCmd::clear_has_user() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildDonateSocialCmd::clear_user() {
  if (user_ != NULL) user_->::Cmd::SocialUser::Clear();
  clear_has_user();
}
inline const ::Cmd::SocialUser& GuildDonateSocialCmd::user() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildDonateSocialCmd.user)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
inline ::Cmd::SocialUser* GuildDonateSocialCmd::mutable_user() {
  set_has_user();
  if (user_ == NULL) user_ = new ::Cmd::SocialUser;
  // @@protoc_insertion_point(field_mutable:Cmd.GuildDonateSocialCmd.user)
  return user_;
}
inline ::Cmd::SocialUser* GuildDonateSocialCmd::release_user() {
  clear_has_user();
  ::Cmd::SocialUser* temp = user_;
  user_ = NULL;
  return temp;
}
inline void GuildDonateSocialCmd::set_allocated_user(::Cmd::SocialUser* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildDonateSocialCmd.user)
}

// optional .Cmd.DonateItem item = 4;
inline bool GuildDonateSocialCmd::has_item() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildDonateSocialCmd::set_has_item() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildDonateSocialCmd::clear_has_item() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildDonateSocialCmd::clear_item() {
  if (item_ != NULL) item_->::Cmd::DonateItem::Clear();
  clear_has_item();
}
inline const ::Cmd::DonateItem& GuildDonateSocialCmd::item() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildDonateSocialCmd.item)
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::Cmd::DonateItem* GuildDonateSocialCmd::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::Cmd::DonateItem;
  // @@protoc_insertion_point(field_mutable:Cmd.GuildDonateSocialCmd.item)
  return item_;
}
inline ::Cmd::DonateItem* GuildDonateSocialCmd::release_item() {
  clear_has_item();
  ::Cmd::DonateItem* temp = item_;
  item_ = NULL;
  return temp;
}
inline void GuildDonateSocialCmd::set_allocated_item(::Cmd::DonateItem* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildDonateSocialCmd.item)
}

// optional uint32 msgid = 5 [default = 0];
inline bool GuildDonateSocialCmd::has_msgid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildDonateSocialCmd::set_has_msgid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildDonateSocialCmd::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildDonateSocialCmd::clear_msgid() {
  msgid_ = 0u;
  clear_has_msgid();
}
inline ::google::protobuf::uint32 GuildDonateSocialCmd::msgid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildDonateSocialCmd.msgid)
  return msgid_;
}
inline void GuildDonateSocialCmd::set_msgid(::google::protobuf::uint32 value) {
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildDonateSocialCmd.msgid)
}

// -------------------------------------------------------------------

// GuildApplySocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool GuildApplySocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildApplySocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildApplySocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildApplySocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command GuildApplySocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildApplySocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildApplySocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildApplySocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_GUILD_APPLY];
inline bool GuildApplySocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildApplySocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildApplySocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildApplySocialCmd::clear_param() {
  param_ = 37;
  clear_has_param();
}
inline ::Cmd::SocialParam GuildApplySocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildApplySocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void GuildApplySocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildApplySocialCmd.param)
}

// optional .Cmd.UserInfo user = 3;
inline bool GuildApplySocialCmd::has_user() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildApplySocialCmd::set_has_user() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildApplySocialCmd::clear_has_user() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildApplySocialCmd::clear_user() {
  if (user_ != NULL) user_->::Cmd::UserInfo::Clear();
  clear_has_user();
}
inline const ::Cmd::UserInfo& GuildApplySocialCmd::user() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildApplySocialCmd.user)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
inline ::Cmd::UserInfo* GuildApplySocialCmd::mutable_user() {
  set_has_user();
  if (user_ == NULL) user_ = new ::Cmd::UserInfo;
  // @@protoc_insertion_point(field_mutable:Cmd.GuildApplySocialCmd.user)
  return user_;
}
inline ::Cmd::UserInfo* GuildApplySocialCmd::release_user() {
  clear_has_user();
  ::Cmd::UserInfo* temp = user_;
  user_ = NULL;
  return temp;
}
inline void GuildApplySocialCmd::set_allocated_user(::Cmd::UserInfo* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildApplySocialCmd.user)
}

// optional uint64 guildid = 4 [default = 0];
inline bool GuildApplySocialCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildApplySocialCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildApplySocialCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildApplySocialCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 GuildApplySocialCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildApplySocialCmd.guildid)
  return guildid_;
}
inline void GuildApplySocialCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildApplySocialCmd.guildid)
}

// -------------------------------------------------------------------

// GuildProcessInviteSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool GuildProcessInviteSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildProcessInviteSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildProcessInviteSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildProcessInviteSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command GuildProcessInviteSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildProcessInviteSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildProcessInviteSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildProcessInviteSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_GUILD_PROCESSINVITE];
inline bool GuildProcessInviteSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildProcessInviteSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildProcessInviteSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildProcessInviteSocialCmd::clear_param() {
  param_ = 38;
  clear_has_param();
}
inline ::Cmd::SocialParam GuildProcessInviteSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildProcessInviteSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void GuildProcessInviteSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildProcessInviteSocialCmd.param)
}

// optional .Cmd.UserInfo user = 3;
inline bool GuildProcessInviteSocialCmd::has_user() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildProcessInviteSocialCmd::set_has_user() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildProcessInviteSocialCmd::clear_has_user() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildProcessInviteSocialCmd::clear_user() {
  if (user_ != NULL) user_->::Cmd::UserInfo::Clear();
  clear_has_user();
}
inline const ::Cmd::UserInfo& GuildProcessInviteSocialCmd::user() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildProcessInviteSocialCmd.user)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
inline ::Cmd::UserInfo* GuildProcessInviteSocialCmd::mutable_user() {
  set_has_user();
  if (user_ == NULL) user_ = new ::Cmd::UserInfo;
  // @@protoc_insertion_point(field_mutable:Cmd.GuildProcessInviteSocialCmd.user)
  return user_;
}
inline ::Cmd::UserInfo* GuildProcessInviteSocialCmd::release_user() {
  clear_has_user();
  ::Cmd::UserInfo* temp = user_;
  user_ = NULL;
  return temp;
}
inline void GuildProcessInviteSocialCmd::set_allocated_user(::Cmd::UserInfo* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildProcessInviteSocialCmd.user)
}

// optional .Cmd.EGuildAction action = 4 [default = EGUILDACTION_MIN];
inline bool GuildProcessInviteSocialCmd::has_action() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildProcessInviteSocialCmd::set_has_action() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildProcessInviteSocialCmd::clear_has_action() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildProcessInviteSocialCmd::clear_action() {
  action_ = 0;
  clear_has_action();
}
inline ::Cmd::EGuildAction GuildProcessInviteSocialCmd::action() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildProcessInviteSocialCmd.action)
  return static_cast< ::Cmd::EGuildAction >(action_);
}
inline void GuildProcessInviteSocialCmd::set_action(::Cmd::EGuildAction value) {
  assert(::Cmd::EGuildAction_IsValid(value));
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildProcessInviteSocialCmd.action)
}

// optional uint64 guildid = 5 [default = 0];
inline bool GuildProcessInviteSocialCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildProcessInviteSocialCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildProcessInviteSocialCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildProcessInviteSocialCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 GuildProcessInviteSocialCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildProcessInviteSocialCmd.guildid)
  return guildid_;
}
inline void GuildProcessInviteSocialCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildProcessInviteSocialCmd.guildid)
}

// -------------------------------------------------------------------

// GuildExchangeZoneSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool GuildExchangeZoneSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildExchangeZoneSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildExchangeZoneSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildExchangeZoneSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command GuildExchangeZoneSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildExchangeZoneSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildExchangeZoneSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildExchangeZoneSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_GUILD_EXCHANGEZONE];
inline bool GuildExchangeZoneSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildExchangeZoneSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildExchangeZoneSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildExchangeZoneSocialCmd::clear_param() {
  param_ = 42;
  clear_has_param();
}
inline ::Cmd::SocialParam GuildExchangeZoneSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildExchangeZoneSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void GuildExchangeZoneSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildExchangeZoneSocialCmd.param)
}

// optional .Cmd.SocialUser user = 3;
inline bool GuildExchangeZoneSocialCmd::has_user() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildExchangeZoneSocialCmd::set_has_user() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildExchangeZoneSocialCmd::clear_has_user() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildExchangeZoneSocialCmd::clear_user() {
  if (user_ != NULL) user_->::Cmd::SocialUser::Clear();
  clear_has_user();
}
inline const ::Cmd::SocialUser& GuildExchangeZoneSocialCmd::user() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildExchangeZoneSocialCmd.user)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
inline ::Cmd::SocialUser* GuildExchangeZoneSocialCmd::mutable_user() {
  set_has_user();
  if (user_ == NULL) user_ = new ::Cmd::SocialUser;
  // @@protoc_insertion_point(field_mutable:Cmd.GuildExchangeZoneSocialCmd.user)
  return user_;
}
inline ::Cmd::SocialUser* GuildExchangeZoneSocialCmd::release_user() {
  clear_has_user();
  ::Cmd::SocialUser* temp = user_;
  user_ = NULL;
  return temp;
}
inline void GuildExchangeZoneSocialCmd::set_allocated_user(::Cmd::SocialUser* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildExchangeZoneSocialCmd.user)
}

// optional uint32 zoneid = 4 [default = 0];
inline bool GuildExchangeZoneSocialCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildExchangeZoneSocialCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildExchangeZoneSocialCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildExchangeZoneSocialCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 GuildExchangeZoneSocialCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildExchangeZoneSocialCmd.zoneid)
  return zoneid_;
}
inline void GuildExchangeZoneSocialCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildExchangeZoneSocialCmd.zoneid)
}

// -------------------------------------------------------------------

// TeamCreateSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool TeamCreateSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamCreateSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamCreateSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamCreateSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command TeamCreateSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamCreateSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TeamCreateSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamCreateSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_TEAM_CREATE];
inline bool TeamCreateSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamCreateSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamCreateSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamCreateSocialCmd::clear_param() {
  param_ = 51;
  clear_has_param();
}
inline ::Cmd::SocialParam TeamCreateSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamCreateSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void TeamCreateSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamCreateSocialCmd.param)
}

// optional .Cmd.UserInfo user = 3;
inline bool TeamCreateSocialCmd::has_user() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamCreateSocialCmd::set_has_user() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamCreateSocialCmd::clear_has_user() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamCreateSocialCmd::clear_user() {
  if (user_ != NULL) user_->::Cmd::UserInfo::Clear();
  clear_has_user();
}
inline const ::Cmd::UserInfo& TeamCreateSocialCmd::user() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamCreateSocialCmd.user)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
inline ::Cmd::UserInfo* TeamCreateSocialCmd::mutable_user() {
  set_has_user();
  if (user_ == NULL) user_ = new ::Cmd::UserInfo;
  // @@protoc_insertion_point(field_mutable:Cmd.TeamCreateSocialCmd.user)
  return user_;
}
inline ::Cmd::UserInfo* TeamCreateSocialCmd::release_user() {
  clear_has_user();
  ::Cmd::UserInfo* temp = user_;
  user_ = NULL;
  return temp;
}
inline void TeamCreateSocialCmd::set_allocated_user(::Cmd::UserInfo* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TeamCreateSocialCmd.user)
}

// optional .Cmd.CreateTeam team = 4;
inline bool TeamCreateSocialCmd::has_team() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamCreateSocialCmd::set_has_team() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamCreateSocialCmd::clear_has_team() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamCreateSocialCmd::clear_team() {
  if (team_ != NULL) team_->::Cmd::CreateTeam::Clear();
  clear_has_team();
}
inline const ::Cmd::CreateTeam& TeamCreateSocialCmd::team() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamCreateSocialCmd.team)
  return team_ != NULL ? *team_ : *default_instance_->team_;
}
inline ::Cmd::CreateTeam* TeamCreateSocialCmd::mutable_team() {
  set_has_team();
  if (team_ == NULL) team_ = new ::Cmd::CreateTeam;
  // @@protoc_insertion_point(field_mutable:Cmd.TeamCreateSocialCmd.team)
  return team_;
}
inline ::Cmd::CreateTeam* TeamCreateSocialCmd::release_team() {
  clear_has_team();
  ::Cmd::CreateTeam* temp = team_;
  team_ = NULL;
  return temp;
}
inline void TeamCreateSocialCmd::set_allocated_team(::Cmd::CreateTeam* team) {
  delete team_;
  team_ = team;
  if (team) {
    set_has_team();
  } else {
    clear_has_team();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TeamCreateSocialCmd.team)
}

// -------------------------------------------------------------------

// TeamInviteSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool TeamInviteSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamInviteSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamInviteSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamInviteSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command TeamInviteSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamInviteSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TeamInviteSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamInviteSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_TEAM_INVITE];
inline bool TeamInviteSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamInviteSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamInviteSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamInviteSocialCmd::clear_param() {
  param_ = 52;
  clear_has_param();
}
inline ::Cmd::SocialParam TeamInviteSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamInviteSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void TeamInviteSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamInviteSocialCmd.param)
}

// optional .Cmd.UserInfo invite = 3;
inline bool TeamInviteSocialCmd::has_invite() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamInviteSocialCmd::set_has_invite() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamInviteSocialCmd::clear_has_invite() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamInviteSocialCmd::clear_invite() {
  if (invite_ != NULL) invite_->::Cmd::UserInfo::Clear();
  clear_has_invite();
}
inline const ::Cmd::UserInfo& TeamInviteSocialCmd::invite() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamInviteSocialCmd.invite)
  return invite_ != NULL ? *invite_ : *default_instance_->invite_;
}
inline ::Cmd::UserInfo* TeamInviteSocialCmd::mutable_invite() {
  set_has_invite();
  if (invite_ == NULL) invite_ = new ::Cmd::UserInfo;
  // @@protoc_insertion_point(field_mutable:Cmd.TeamInviteSocialCmd.invite)
  return invite_;
}
inline ::Cmd::UserInfo* TeamInviteSocialCmd::release_invite() {
  clear_has_invite();
  ::Cmd::UserInfo* temp = invite_;
  invite_ = NULL;
  return temp;
}
inline void TeamInviteSocialCmd::set_allocated_invite(::Cmd::UserInfo* invite) {
  delete invite_;
  invite_ = invite;
  if (invite) {
    set_has_invite();
  } else {
    clear_has_invite();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TeamInviteSocialCmd.invite)
}

// optional .Cmd.SocialUser beinvite = 4;
inline bool TeamInviteSocialCmd::has_beinvite() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamInviteSocialCmd::set_has_beinvite() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamInviteSocialCmd::clear_has_beinvite() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamInviteSocialCmd::clear_beinvite() {
  if (beinvite_ != NULL) beinvite_->::Cmd::SocialUser::Clear();
  clear_has_beinvite();
}
inline const ::Cmd::SocialUser& TeamInviteSocialCmd::beinvite() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamInviteSocialCmd.beinvite)
  return beinvite_ != NULL ? *beinvite_ : *default_instance_->beinvite_;
}
inline ::Cmd::SocialUser* TeamInviteSocialCmd::mutable_beinvite() {
  set_has_beinvite();
  if (beinvite_ == NULL) beinvite_ = new ::Cmd::SocialUser;
  // @@protoc_insertion_point(field_mutable:Cmd.TeamInviteSocialCmd.beinvite)
  return beinvite_;
}
inline ::Cmd::SocialUser* TeamInviteSocialCmd::release_beinvite() {
  clear_has_beinvite();
  ::Cmd::SocialUser* temp = beinvite_;
  beinvite_ = NULL;
  return temp;
}
inline void TeamInviteSocialCmd::set_allocated_beinvite(::Cmd::SocialUser* beinvite) {
  delete beinvite_;
  beinvite_ = beinvite;
  if (beinvite) {
    set_has_beinvite();
  } else {
    clear_has_beinvite();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TeamInviteSocialCmd.beinvite)
}

// -------------------------------------------------------------------

// TeamProcessInviteSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool TeamProcessInviteSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamProcessInviteSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamProcessInviteSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamProcessInviteSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command TeamProcessInviteSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamProcessInviteSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TeamProcessInviteSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamProcessInviteSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_TEAM_PROCESSINVITE];
inline bool TeamProcessInviteSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamProcessInviteSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamProcessInviteSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamProcessInviteSocialCmd::clear_param() {
  param_ = 53;
  clear_has_param();
}
inline ::Cmd::SocialParam TeamProcessInviteSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamProcessInviteSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void TeamProcessInviteSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamProcessInviteSocialCmd.param)
}

// optional .Cmd.ETeamInviteType type = 3 [default = ETEAMINVITETYPE_MIN];
inline bool TeamProcessInviteSocialCmd::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamProcessInviteSocialCmd::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamProcessInviteSocialCmd::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamProcessInviteSocialCmd::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::ETeamInviteType TeamProcessInviteSocialCmd::type() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamProcessInviteSocialCmd.type)
  return static_cast< ::Cmd::ETeamInviteType >(type_);
}
inline void TeamProcessInviteSocialCmd::set_type(::Cmd::ETeamInviteType value) {
  assert(::Cmd::ETeamInviteType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamProcessInviteSocialCmd.type)
}

// optional .Cmd.UserInfo user = 4;
inline bool TeamProcessInviteSocialCmd::has_user() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamProcessInviteSocialCmd::set_has_user() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamProcessInviteSocialCmd::clear_has_user() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamProcessInviteSocialCmd::clear_user() {
  if (user_ != NULL) user_->::Cmd::UserInfo::Clear();
  clear_has_user();
}
inline const ::Cmd::UserInfo& TeamProcessInviteSocialCmd::user() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamProcessInviteSocialCmd.user)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
inline ::Cmd::UserInfo* TeamProcessInviteSocialCmd::mutable_user() {
  set_has_user();
  if (user_ == NULL) user_ = new ::Cmd::UserInfo;
  // @@protoc_insertion_point(field_mutable:Cmd.TeamProcessInviteSocialCmd.user)
  return user_;
}
inline ::Cmd::UserInfo* TeamProcessInviteSocialCmd::release_user() {
  clear_has_user();
  ::Cmd::UserInfo* temp = user_;
  user_ = NULL;
  return temp;
}
inline void TeamProcessInviteSocialCmd::set_allocated_user(::Cmd::UserInfo* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TeamProcessInviteSocialCmd.user)
}

// optional uint64 leaderid = 5 [default = 0];
inline bool TeamProcessInviteSocialCmd::has_leaderid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TeamProcessInviteSocialCmd::set_has_leaderid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TeamProcessInviteSocialCmd::clear_has_leaderid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TeamProcessInviteSocialCmd::clear_leaderid() {
  leaderid_ = GOOGLE_ULONGLONG(0);
  clear_has_leaderid();
}
inline ::google::protobuf::uint64 TeamProcessInviteSocialCmd::leaderid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamProcessInviteSocialCmd.leaderid)
  return leaderid_;
}
inline void TeamProcessInviteSocialCmd::set_leaderid(::google::protobuf::uint64 value) {
  set_has_leaderid();
  leaderid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamProcessInviteSocialCmd.leaderid)
}

// -------------------------------------------------------------------

// TeamApplySocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool TeamApplySocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamApplySocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamApplySocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamApplySocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command TeamApplySocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamApplySocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TeamApplySocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamApplySocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_TEAM_APPLY];
inline bool TeamApplySocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamApplySocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamApplySocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamApplySocialCmd::clear_param() {
  param_ = 54;
  clear_has_param();
}
inline ::Cmd::SocialParam TeamApplySocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamApplySocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void TeamApplySocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamApplySocialCmd.param)
}

// optional .Cmd.UserInfo apply = 3;
inline bool TeamApplySocialCmd::has_apply() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamApplySocialCmd::set_has_apply() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamApplySocialCmd::clear_has_apply() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamApplySocialCmd::clear_apply() {
  if (apply_ != NULL) apply_->::Cmd::UserInfo::Clear();
  clear_has_apply();
}
inline const ::Cmd::UserInfo& TeamApplySocialCmd::apply() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamApplySocialCmd.apply)
  return apply_ != NULL ? *apply_ : *default_instance_->apply_;
}
inline ::Cmd::UserInfo* TeamApplySocialCmd::mutable_apply() {
  set_has_apply();
  if (apply_ == NULL) apply_ = new ::Cmd::UserInfo;
  // @@protoc_insertion_point(field_mutable:Cmd.TeamApplySocialCmd.apply)
  return apply_;
}
inline ::Cmd::UserInfo* TeamApplySocialCmd::release_apply() {
  clear_has_apply();
  ::Cmd::UserInfo* temp = apply_;
  apply_ = NULL;
  return temp;
}
inline void TeamApplySocialCmd::set_allocated_apply(::Cmd::UserInfo* apply) {
  delete apply_;
  apply_ = apply;
  if (apply) {
    set_has_apply();
  } else {
    clear_has_apply();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TeamApplySocialCmd.apply)
}

// optional uint64 teamid = 4 [default = 0];
inline bool TeamApplySocialCmd::has_teamid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamApplySocialCmd::set_has_teamid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamApplySocialCmd::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamApplySocialCmd::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TeamApplySocialCmd::teamid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamApplySocialCmd.teamid)
  return teamid_;
}
inline void TeamApplySocialCmd::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamApplySocialCmd.teamid)
}

// -------------------------------------------------------------------

// TeamQuickEnterSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool TeamQuickEnterSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamQuickEnterSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamQuickEnterSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamQuickEnterSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command TeamQuickEnterSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamQuickEnterSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TeamQuickEnterSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamQuickEnterSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_TEAM_QUICKENTER];
inline bool TeamQuickEnterSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamQuickEnterSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamQuickEnterSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamQuickEnterSocialCmd::clear_param() {
  param_ = 55;
  clear_has_param();
}
inline ::Cmd::SocialParam TeamQuickEnterSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamQuickEnterSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void TeamQuickEnterSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamQuickEnterSocialCmd.param)
}

// optional .Cmd.UserInfo user = 3;
inline bool TeamQuickEnterSocialCmd::has_user() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamQuickEnterSocialCmd::set_has_user() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamQuickEnterSocialCmd::clear_has_user() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamQuickEnterSocialCmd::clear_user() {
  if (user_ != NULL) user_->::Cmd::UserInfo::Clear();
  clear_has_user();
}
inline const ::Cmd::UserInfo& TeamQuickEnterSocialCmd::user() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamQuickEnterSocialCmd.user)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
inline ::Cmd::UserInfo* TeamQuickEnterSocialCmd::mutable_user() {
  set_has_user();
  if (user_ == NULL) user_ = new ::Cmd::UserInfo;
  // @@protoc_insertion_point(field_mutable:Cmd.TeamQuickEnterSocialCmd.user)
  return user_;
}
inline ::Cmd::UserInfo* TeamQuickEnterSocialCmd::release_user() {
  clear_has_user();
  ::Cmd::UserInfo* temp = user_;
  user_ = NULL;
  return temp;
}
inline void TeamQuickEnterSocialCmd::set_allocated_user(::Cmd::UserInfo* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TeamQuickEnterSocialCmd.user)
}

// optional uint32 type = 4 [default = 0];
inline bool TeamQuickEnterSocialCmd::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamQuickEnterSocialCmd::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamQuickEnterSocialCmd::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamQuickEnterSocialCmd::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 TeamQuickEnterSocialCmd::type() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamQuickEnterSocialCmd.type)
  return type_;
}
inline void TeamQuickEnterSocialCmd::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamQuickEnterSocialCmd.type)
}

// optional bool set = 5 [default = false];
inline bool TeamQuickEnterSocialCmd::has_set() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TeamQuickEnterSocialCmd::set_has_set() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TeamQuickEnterSocialCmd::clear_has_set() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TeamQuickEnterSocialCmd::clear_set() {
  set_ = false;
  clear_has_set();
}
inline bool TeamQuickEnterSocialCmd::set() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamQuickEnterSocialCmd.set)
  return set_;
}
inline void TeamQuickEnterSocialCmd::set_set(bool value) {
  set_has_set();
  set_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamQuickEnterSocialCmd.set)
}

// -------------------------------------------------------------------

// DojoStateNtfSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool DojoStateNtfSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DojoStateNtfSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DojoStateNtfSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DojoStateNtfSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command DojoStateNtfSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoStateNtfSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void DojoStateNtfSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoStateNtfSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_DOJO_STATE_NTF];
inline bool DojoStateNtfSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DojoStateNtfSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DojoStateNtfSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DojoStateNtfSocialCmd::clear_param() {
  param_ = 57;
  clear_has_param();
}
inline ::Cmd::SocialParam DojoStateNtfSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoStateNtfSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void DojoStateNtfSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoStateNtfSocialCmd.param)
}

// optional uint64 teamid = 3;
inline bool DojoStateNtfSocialCmd::has_teamid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DojoStateNtfSocialCmd::set_has_teamid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DojoStateNtfSocialCmd::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DojoStateNtfSocialCmd::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 DojoStateNtfSocialCmd::teamid() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoStateNtfSocialCmd.teamid)
  return teamid_;
}
inline void DojoStateNtfSocialCmd::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoStateNtfSocialCmd.teamid)
}

// optional uint64 guildid = 4;
inline bool DojoStateNtfSocialCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DojoStateNtfSocialCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DojoStateNtfSocialCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DojoStateNtfSocialCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 DojoStateNtfSocialCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoStateNtfSocialCmd.guildid)
  return guildid_;
}
inline void DojoStateNtfSocialCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoStateNtfSocialCmd.guildid)
}

// optional .Cmd.EDOJOSTATE state = 5;
inline bool DojoStateNtfSocialCmd::has_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DojoStateNtfSocialCmd::set_has_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DojoStateNtfSocialCmd::clear_has_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DojoStateNtfSocialCmd::clear_state() {
  state_ = 1;
  clear_has_state();
}
inline ::Cmd::EDOJOSTATE DojoStateNtfSocialCmd::state() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoStateNtfSocialCmd.state)
  return static_cast< ::Cmd::EDOJOSTATE >(state_);
}
inline void DojoStateNtfSocialCmd::set_state(::Cmd::EDOJOSTATE value) {
  assert(::Cmd::EDOJOSTATE_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoStateNtfSocialCmd.state)
}

// -------------------------------------------------------------------

// DojoCreateSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool DojoCreateSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DojoCreateSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DojoCreateSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DojoCreateSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command DojoCreateSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoCreateSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void DojoCreateSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoCreateSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_DOJO_CREATE];
inline bool DojoCreateSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DojoCreateSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DojoCreateSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DojoCreateSocialCmd::clear_param() {
  param_ = 56;
  clear_has_param();
}
inline ::Cmd::SocialParam DojoCreateSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoCreateSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void DojoCreateSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoCreateSocialCmd.param)
}

// optional uint64 charid = 3;
inline bool DojoCreateSocialCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DojoCreateSocialCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DojoCreateSocialCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DojoCreateSocialCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 DojoCreateSocialCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoCreateSocialCmd.charid)
  return charid_;
}
inline void DojoCreateSocialCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoCreateSocialCmd.charid)
}

// optional uint32 dojoid = 4;
inline bool DojoCreateSocialCmd::has_dojoid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DojoCreateSocialCmd::set_has_dojoid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DojoCreateSocialCmd::clear_has_dojoid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DojoCreateSocialCmd::clear_dojoid() {
  dojoid_ = 0u;
  clear_has_dojoid();
}
inline ::google::protobuf::uint32 DojoCreateSocialCmd::dojoid() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoCreateSocialCmd.dojoid)
  return dojoid_;
}
inline void DojoCreateSocialCmd::set_dojoid(::google::protobuf::uint32 value) {
  set_has_dojoid();
  dojoid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoCreateSocialCmd.dojoid)
}

// optional uint64 teamid = 5;
inline bool DojoCreateSocialCmd::has_teamid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DojoCreateSocialCmd::set_has_teamid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DojoCreateSocialCmd::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DojoCreateSocialCmd::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 DojoCreateSocialCmd::teamid() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoCreateSocialCmd.teamid)
  return teamid_;
}
inline void DojoCreateSocialCmd::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoCreateSocialCmd.teamid)
}

// optional uint64 guildid = 6;
inline bool DojoCreateSocialCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DojoCreateSocialCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DojoCreateSocialCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DojoCreateSocialCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 DojoCreateSocialCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoCreateSocialCmd.guildid)
  return guildid_;
}
inline void DojoCreateSocialCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoCreateSocialCmd.guildid)
}

// -------------------------------------------------------------------

// TowerLeaderInfoSyncSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool TowerLeaderInfoSyncSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TowerLeaderInfoSyncSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TowerLeaderInfoSyncSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TowerLeaderInfoSyncSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command TowerLeaderInfoSyncSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerLeaderInfoSyncSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TowerLeaderInfoSyncSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TowerLeaderInfoSyncSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_TOWER_SYNC_LEADERINFO];
inline bool TowerLeaderInfoSyncSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TowerLeaderInfoSyncSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TowerLeaderInfoSyncSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TowerLeaderInfoSyncSocialCmd::clear_param() {
  param_ = 58;
  clear_has_param();
}
inline ::Cmd::SocialParam TowerLeaderInfoSyncSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerLeaderInfoSyncSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void TowerLeaderInfoSyncSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TowerLeaderInfoSyncSocialCmd.param)
}

// optional .Cmd.SocialUser user = 3;
inline bool TowerLeaderInfoSyncSocialCmd::has_user() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TowerLeaderInfoSyncSocialCmd::set_has_user() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TowerLeaderInfoSyncSocialCmd::clear_has_user() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TowerLeaderInfoSyncSocialCmd::clear_user() {
  if (user_ != NULL) user_->::Cmd::SocialUser::Clear();
  clear_has_user();
}
inline const ::Cmd::SocialUser& TowerLeaderInfoSyncSocialCmd::user() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerLeaderInfoSyncSocialCmd.user)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
inline ::Cmd::SocialUser* TowerLeaderInfoSyncSocialCmd::mutable_user() {
  set_has_user();
  if (user_ == NULL) user_ = new ::Cmd::SocialUser;
  // @@protoc_insertion_point(field_mutable:Cmd.TowerLeaderInfoSyncSocialCmd.user)
  return user_;
}
inline ::Cmd::SocialUser* TowerLeaderInfoSyncSocialCmd::release_user() {
  clear_has_user();
  ::Cmd::SocialUser* temp = user_;
  user_ = NULL;
  return temp;
}
inline void TowerLeaderInfoSyncSocialCmd::set_allocated_user(::Cmd::SocialUser* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TowerLeaderInfoSyncSocialCmd.user)
}

// optional .Cmd.UserTowerInfo info = 4;
inline bool TowerLeaderInfoSyncSocialCmd::has_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TowerLeaderInfoSyncSocialCmd::set_has_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TowerLeaderInfoSyncSocialCmd::clear_has_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TowerLeaderInfoSyncSocialCmd::clear_info() {
  if (info_ != NULL) info_->::Cmd::UserTowerInfo::Clear();
  clear_has_info();
}
inline const ::Cmd::UserTowerInfo& TowerLeaderInfoSyncSocialCmd::info() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerLeaderInfoSyncSocialCmd.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::Cmd::UserTowerInfo* TowerLeaderInfoSyncSocialCmd::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::Cmd::UserTowerInfo;
  // @@protoc_insertion_point(field_mutable:Cmd.TowerLeaderInfoSyncSocialCmd.info)
  return info_;
}
inline ::Cmd::UserTowerInfo* TowerLeaderInfoSyncSocialCmd::release_info() {
  clear_has_info();
  ::Cmd::UserTowerInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void TowerLeaderInfoSyncSocialCmd::set_allocated_info(::Cmd::UserTowerInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TowerLeaderInfoSyncSocialCmd.info)
}

// -------------------------------------------------------------------

// TowerSceneCreateSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool TowerSceneCreateSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TowerSceneCreateSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TowerSceneCreateSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TowerSceneCreateSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command TowerSceneCreateSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerSceneCreateSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TowerSceneCreateSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TowerSceneCreateSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_TOWER_SCENE_CREATE];
inline bool TowerSceneCreateSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TowerSceneCreateSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TowerSceneCreateSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TowerSceneCreateSocialCmd::clear_param() {
  param_ = 59;
  clear_has_param();
}
inline ::Cmd::SocialParam TowerSceneCreateSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerSceneCreateSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void TowerSceneCreateSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TowerSceneCreateSocialCmd.param)
}

// optional .Cmd.SocialUser user = 3;
inline bool TowerSceneCreateSocialCmd::has_user() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TowerSceneCreateSocialCmd::set_has_user() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TowerSceneCreateSocialCmd::clear_has_user() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TowerSceneCreateSocialCmd::clear_user() {
  if (user_ != NULL) user_->::Cmd::SocialUser::Clear();
  clear_has_user();
}
inline const ::Cmd::SocialUser& TowerSceneCreateSocialCmd::user() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerSceneCreateSocialCmd.user)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
inline ::Cmd::SocialUser* TowerSceneCreateSocialCmd::mutable_user() {
  set_has_user();
  if (user_ == NULL) user_ = new ::Cmd::SocialUser;
  // @@protoc_insertion_point(field_mutable:Cmd.TowerSceneCreateSocialCmd.user)
  return user_;
}
inline ::Cmd::SocialUser* TowerSceneCreateSocialCmd::release_user() {
  clear_has_user();
  ::Cmd::SocialUser* temp = user_;
  user_ = NULL;
  return temp;
}
inline void TowerSceneCreateSocialCmd::set_allocated_user(::Cmd::SocialUser* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TowerSceneCreateSocialCmd.user)
}

// optional uint64 teamid = 4 [default = 0];
inline bool TowerSceneCreateSocialCmd::has_teamid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TowerSceneCreateSocialCmd::set_has_teamid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TowerSceneCreateSocialCmd::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TowerSceneCreateSocialCmd::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TowerSceneCreateSocialCmd::teamid() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerSceneCreateSocialCmd.teamid)
  return teamid_;
}
inline void TowerSceneCreateSocialCmd::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TowerSceneCreateSocialCmd.teamid)
}

// optional uint32 layer = 5 [default = 0];
inline bool TowerSceneCreateSocialCmd::has_layer() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TowerSceneCreateSocialCmd::set_has_layer() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TowerSceneCreateSocialCmd::clear_has_layer() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TowerSceneCreateSocialCmd::clear_layer() {
  layer_ = 0u;
  clear_has_layer();
}
inline ::google::protobuf::uint32 TowerSceneCreateSocialCmd::layer() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerSceneCreateSocialCmd.layer)
  return layer_;
}
inline void TowerSceneCreateSocialCmd::set_layer(::google::protobuf::uint32 value) {
  set_has_layer();
  layer_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TowerSceneCreateSocialCmd.layer)
}

// -------------------------------------------------------------------

// TowerSceneSyncSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool TowerSceneSyncSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TowerSceneSyncSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TowerSceneSyncSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TowerSceneSyncSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command TowerSceneSyncSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerSceneSyncSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TowerSceneSyncSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TowerSceneSyncSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_TOWER_SYNC_SCENEINFO];
inline bool TowerSceneSyncSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TowerSceneSyncSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TowerSceneSyncSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TowerSceneSyncSocialCmd::clear_param() {
  param_ = 60;
  clear_has_param();
}
inline ::Cmd::SocialParam TowerSceneSyncSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerSceneSyncSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void TowerSceneSyncSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TowerSceneSyncSocialCmd.param)
}

// optional uint64 teamid = 3 [default = 0];
inline bool TowerSceneSyncSocialCmd::has_teamid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TowerSceneSyncSocialCmd::set_has_teamid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TowerSceneSyncSocialCmd::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TowerSceneSyncSocialCmd::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TowerSceneSyncSocialCmd::teamid() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerSceneSyncSocialCmd.teamid)
  return teamid_;
}
inline void TowerSceneSyncSocialCmd::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TowerSceneSyncSocialCmd.teamid)
}

// optional .Cmd.EDOJOSTATE state = 4 [default = EDOJOSTATE_CLOSE];
inline bool TowerSceneSyncSocialCmd::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TowerSceneSyncSocialCmd::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TowerSceneSyncSocialCmd::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TowerSceneSyncSocialCmd::clear_state() {
  state_ = 2;
  clear_has_state();
}
inline ::Cmd::EDOJOSTATE TowerSceneSyncSocialCmd::state() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerSceneSyncSocialCmd.state)
  return static_cast< ::Cmd::EDOJOSTATE >(state_);
}
inline void TowerSceneSyncSocialCmd::set_state(::Cmd::EDOJOSTATE value) {
  assert(::Cmd::EDOJOSTATE_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TowerSceneSyncSocialCmd.state)
}

// optional uint32 raidid = 5 [default = 0];
inline bool TowerSceneSyncSocialCmd::has_raidid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TowerSceneSyncSocialCmd::set_has_raidid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TowerSceneSyncSocialCmd::clear_has_raidid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TowerSceneSyncSocialCmd::clear_raidid() {
  raidid_ = 0u;
  clear_has_raidid();
}
inline ::google::protobuf::uint32 TowerSceneSyncSocialCmd::raidid() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerSceneSyncSocialCmd.raidid)
  return raidid_;
}
inline void TowerSceneSyncSocialCmd::set_raidid(::google::protobuf::uint32 value) {
  set_has_raidid();
  raidid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TowerSceneSyncSocialCmd.raidid)
}

// -------------------------------------------------------------------

// TowerLayerSyncSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool TowerLayerSyncSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TowerLayerSyncSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TowerLayerSyncSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TowerLayerSyncSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command TowerLayerSyncSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerLayerSyncSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TowerLayerSyncSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TowerLayerSyncSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_TOWER_SYNC_LAYER];
inline bool TowerLayerSyncSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TowerLayerSyncSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TowerLayerSyncSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TowerLayerSyncSocialCmd::clear_param() {
  param_ = 61;
  clear_has_param();
}
inline ::Cmd::SocialParam TowerLayerSyncSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerLayerSyncSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void TowerLayerSyncSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TowerLayerSyncSocialCmd.param)
}

// optional uint64 teamid = 3 [default = 0];
inline bool TowerLayerSyncSocialCmd::has_teamid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TowerLayerSyncSocialCmd::set_has_teamid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TowerLayerSyncSocialCmd::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TowerLayerSyncSocialCmd::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TowerLayerSyncSocialCmd::teamid() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerLayerSyncSocialCmd.teamid)
  return teamid_;
}
inline void TowerLayerSyncSocialCmd::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TowerLayerSyncSocialCmd.teamid)
}

// optional uint32 layer = 4 [default = 0];
inline bool TowerLayerSyncSocialCmd::has_layer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TowerLayerSyncSocialCmd::set_has_layer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TowerLayerSyncSocialCmd::clear_has_layer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TowerLayerSyncSocialCmd::clear_layer() {
  layer_ = 0u;
  clear_has_layer();
}
inline ::google::protobuf::uint32 TowerLayerSyncSocialCmd::layer() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerLayerSyncSocialCmd.layer)
  return layer_;
}
inline void TowerLayerSyncSocialCmd::set_layer(::google::protobuf::uint32 value) {
  set_has_layer();
  layer_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TowerLayerSyncSocialCmd.layer)
}

// -------------------------------------------------------------------

// LeaderSealFinishSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool LeaderSealFinishSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LeaderSealFinishSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LeaderSealFinishSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LeaderSealFinishSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command LeaderSealFinishSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.LeaderSealFinishSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void LeaderSealFinishSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LeaderSealFinishSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_TEAM_SEAL_FIHISH];
inline bool LeaderSealFinishSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LeaderSealFinishSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LeaderSealFinishSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LeaderSealFinishSocialCmd::clear_param() {
  param_ = 71;
  clear_has_param();
}
inline ::Cmd::SocialParam LeaderSealFinishSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.LeaderSealFinishSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void LeaderSealFinishSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LeaderSealFinishSocialCmd.param)
}

// optional uint64 teamid = 3 [default = 0];
inline bool LeaderSealFinishSocialCmd::has_teamid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LeaderSealFinishSocialCmd::set_has_teamid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LeaderSealFinishSocialCmd::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LeaderSealFinishSocialCmd::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 LeaderSealFinishSocialCmd::teamid() const {
  // @@protoc_insertion_point(field_get:Cmd.LeaderSealFinishSocialCmd.teamid)
  return teamid_;
}
inline void LeaderSealFinishSocialCmd::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LeaderSealFinishSocialCmd.teamid)
}

// -------------------------------------------------------------------

// GoTeamRaidSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool GoTeamRaidSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GoTeamRaidSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GoTeamRaidSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GoTeamRaidSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command GoTeamRaidSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GoTeamRaidSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GoTeamRaidSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GoTeamRaidSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_GO_TEAM_RAID];
inline bool GoTeamRaidSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GoTeamRaidSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GoTeamRaidSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GoTeamRaidSocialCmd::clear_param() {
  param_ = 62;
  clear_has_param();
}
inline ::Cmd::SocialParam GoTeamRaidSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GoTeamRaidSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void GoTeamRaidSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GoTeamRaidSocialCmd.param)
}

// optional uint64 teamid = 3 [default = 0];
inline bool GoTeamRaidSocialCmd::has_teamid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GoTeamRaidSocialCmd::set_has_teamid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GoTeamRaidSocialCmd::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GoTeamRaidSocialCmd::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 GoTeamRaidSocialCmd::teamid() const {
  // @@protoc_insertion_point(field_get:Cmd.GoTeamRaidSocialCmd.teamid)
  return teamid_;
}
inline void GoTeamRaidSocialCmd::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GoTeamRaidSocialCmd.teamid)
}

// optional uint64 charid = 4 [default = 0];
inline bool GoTeamRaidSocialCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GoTeamRaidSocialCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GoTeamRaidSocialCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GoTeamRaidSocialCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GoTeamRaidSocialCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.GoTeamRaidSocialCmd.charid)
  return charid_;
}
inline void GoTeamRaidSocialCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GoTeamRaidSocialCmd.charid)
}

// optional uint32 myzoneid = 5 [default = 0];
inline bool GoTeamRaidSocialCmd::has_myzoneid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GoTeamRaidSocialCmd::set_has_myzoneid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GoTeamRaidSocialCmd::clear_has_myzoneid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GoTeamRaidSocialCmd::clear_myzoneid() {
  myzoneid_ = 0u;
  clear_has_myzoneid();
}
inline ::google::protobuf::uint32 GoTeamRaidSocialCmd::myzoneid() const {
  // @@protoc_insertion_point(field_get:Cmd.GoTeamRaidSocialCmd.myzoneid)
  return myzoneid_;
}
inline void GoTeamRaidSocialCmd::set_myzoneid(::google::protobuf::uint32 value) {
  set_has_myzoneid();
  myzoneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GoTeamRaidSocialCmd.myzoneid)
}

// optional uint32 raidzoneid = 6 [default = 0];
inline bool GoTeamRaidSocialCmd::has_raidzoneid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GoTeamRaidSocialCmd::set_has_raidzoneid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GoTeamRaidSocialCmd::clear_has_raidzoneid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GoTeamRaidSocialCmd::clear_raidzoneid() {
  raidzoneid_ = 0u;
  clear_has_raidzoneid();
}
inline ::google::protobuf::uint32 GoTeamRaidSocialCmd::raidzoneid() const {
  // @@protoc_insertion_point(field_get:Cmd.GoTeamRaidSocialCmd.raidzoneid)
  return raidzoneid_;
}
inline void GoTeamRaidSocialCmd::set_raidzoneid(::google::protobuf::uint32 value) {
  set_has_raidzoneid();
  raidzoneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GoTeamRaidSocialCmd.raidzoneid)
}

// optional uint32 raidid = 7 [default = 0];
inline bool GoTeamRaidSocialCmd::has_raidid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GoTeamRaidSocialCmd::set_has_raidid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GoTeamRaidSocialCmd::clear_has_raidid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GoTeamRaidSocialCmd::clear_raidid() {
  raidid_ = 0u;
  clear_has_raidid();
}
inline ::google::protobuf::uint32 GoTeamRaidSocialCmd::raidid() const {
  // @@protoc_insertion_point(field_get:Cmd.GoTeamRaidSocialCmd.raidid)
  return raidid_;
}
inline void GoTeamRaidSocialCmd::set_raidid(::google::protobuf::uint32 value) {
  set_has_raidid();
  raidid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GoTeamRaidSocialCmd.raidid)
}

// optional uint32 gomaptype = 8 [default = 0];
inline bool GoTeamRaidSocialCmd::has_gomaptype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GoTeamRaidSocialCmd::set_has_gomaptype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GoTeamRaidSocialCmd::clear_has_gomaptype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GoTeamRaidSocialCmd::clear_gomaptype() {
  gomaptype_ = 0u;
  clear_has_gomaptype();
}
inline ::google::protobuf::uint32 GoTeamRaidSocialCmd::gomaptype() const {
  // @@protoc_insertion_point(field_get:Cmd.GoTeamRaidSocialCmd.gomaptype)
  return gomaptype_;
}
inline void GoTeamRaidSocialCmd::set_gomaptype(::google::protobuf::uint32 value) {
  set_has_gomaptype();
  gomaptype_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GoTeamRaidSocialCmd.gomaptype)
}

// -------------------------------------------------------------------

// DelTeamRaidSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool DelTeamRaidSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelTeamRaidSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelTeamRaidSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelTeamRaidSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command DelTeamRaidSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.DelTeamRaidSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void DelTeamRaidSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DelTeamRaidSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_DEL_TEAM_RAID];
inline bool DelTeamRaidSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DelTeamRaidSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DelTeamRaidSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DelTeamRaidSocialCmd::clear_param() {
  param_ = 63;
  clear_has_param();
}
inline ::Cmd::SocialParam DelTeamRaidSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.DelTeamRaidSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void DelTeamRaidSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DelTeamRaidSocialCmd.param)
}

// optional uint64 teamid = 3 [default = 0];
inline bool DelTeamRaidSocialCmd::has_teamid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DelTeamRaidSocialCmd::set_has_teamid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DelTeamRaidSocialCmd::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DelTeamRaidSocialCmd::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 DelTeamRaidSocialCmd::teamid() const {
  // @@protoc_insertion_point(field_get:Cmd.DelTeamRaidSocialCmd.teamid)
  return teamid_;
}
inline void DelTeamRaidSocialCmd::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DelTeamRaidSocialCmd.teamid)
}

// optional uint32 raidid = 4 [default = 0];
inline bool DelTeamRaidSocialCmd::has_raidid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DelTeamRaidSocialCmd::set_has_raidid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DelTeamRaidSocialCmd::clear_has_raidid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DelTeamRaidSocialCmd::clear_raidid() {
  raidid_ = 0u;
  clear_has_raidid();
}
inline ::google::protobuf::uint32 DelTeamRaidSocialCmd::raidid() const {
  // @@protoc_insertion_point(field_get:Cmd.DelTeamRaidSocialCmd.raidid)
  return raidid_;
}
inline void DelTeamRaidSocialCmd::set_raidid(::google::protobuf::uint32 value) {
  set_has_raidid();
  raidid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DelTeamRaidSocialCmd.raidid)
}

// -------------------------------------------------------------------

// SendMailSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool SendMailSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendMailSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendMailSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendMailSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command SendMailSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SendMailSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SendMailSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SendMailSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_SEND_MAIL];
inline bool SendMailSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendMailSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendMailSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendMailSocialCmd::clear_param() {
  param_ = 64;
  clear_has_param();
}
inline ::Cmd::SocialParam SendMailSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SendMailSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void SendMailSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SendMailSocialCmd.param)
}

// optional uint32 zoneid = 3;
inline bool SendMailSocialCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendMailSocialCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendMailSocialCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendMailSocialCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 SendMailSocialCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Cmd.SendMailSocialCmd.zoneid)
  return zoneid_;
}
inline void SendMailSocialCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SendMailSocialCmd.zoneid)
}

// optional bytes data = 4;
inline bool SendMailSocialCmd::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SendMailSocialCmd::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SendMailSocialCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SendMailSocialCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& SendMailSocialCmd::data() const {
  // @@protoc_insertion_point(field_get:Cmd.SendMailSocialCmd.data)
  return *data_;
}
inline void SendMailSocialCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.SendMailSocialCmd.data)
}
inline void SendMailSocialCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.SendMailSocialCmd.data)
}
inline void SendMailSocialCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.SendMailSocialCmd.data)
}
inline ::std::string* SendMailSocialCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.SendMailSocialCmd.data)
  return data_;
}
inline ::std::string* SendMailSocialCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SendMailSocialCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.SendMailSocialCmd.data)
}

// optional uint32 len = 5 [default = 0];
inline bool SendMailSocialCmd::has_len() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SendMailSocialCmd::set_has_len() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SendMailSocialCmd::clear_has_len() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SendMailSocialCmd::clear_len() {
  len_ = 0u;
  clear_has_len();
}
inline ::google::protobuf::uint32 SendMailSocialCmd::len() const {
  // @@protoc_insertion_point(field_get:Cmd.SendMailSocialCmd.len)
  return len_;
}
inline void SendMailSocialCmd::set_len(::google::protobuf::uint32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SendMailSocialCmd.len)
}

// -------------------------------------------------------------------

// ForwardToAllSessionSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool ForwardToAllSessionSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ForwardToAllSessionSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ForwardToAllSessionSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ForwardToAllSessionSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command ForwardToAllSessionSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardToAllSessionSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ForwardToAllSessionSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardToAllSessionSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_FORWARD_TO_ALL_SESSION];
inline bool ForwardToAllSessionSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ForwardToAllSessionSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ForwardToAllSessionSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ForwardToAllSessionSocialCmd::clear_param() {
  param_ = 67;
  clear_has_param();
}
inline ::Cmd::SocialParam ForwardToAllSessionSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardToAllSessionSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void ForwardToAllSessionSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardToAllSessionSocialCmd.param)
}

// optional uint32 except = 3;
inline bool ForwardToAllSessionSocialCmd::has_except() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ForwardToAllSessionSocialCmd::set_has_except() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ForwardToAllSessionSocialCmd::clear_has_except() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ForwardToAllSessionSocialCmd::clear_except() {
  except_ = 0u;
  clear_has_except();
}
inline ::google::protobuf::uint32 ForwardToAllSessionSocialCmd::except() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardToAllSessionSocialCmd.except)
  return except_;
}
inline void ForwardToAllSessionSocialCmd::set_except(::google::protobuf::uint32 value) {
  set_has_except();
  except_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardToAllSessionSocialCmd.except)
}

// optional bytes data = 4;
inline bool ForwardToAllSessionSocialCmd::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ForwardToAllSessionSocialCmd::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ForwardToAllSessionSocialCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ForwardToAllSessionSocialCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& ForwardToAllSessionSocialCmd::data() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardToAllSessionSocialCmd.data)
  return *data_;
}
inline void ForwardToAllSessionSocialCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.ForwardToAllSessionSocialCmd.data)
}
inline void ForwardToAllSessionSocialCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.ForwardToAllSessionSocialCmd.data)
}
inline void ForwardToAllSessionSocialCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.ForwardToAllSessionSocialCmd.data)
}
inline ::std::string* ForwardToAllSessionSocialCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.ForwardToAllSessionSocialCmd.data)
  return data_;
}
inline ::std::string* ForwardToAllSessionSocialCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ForwardToAllSessionSocialCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ForwardToAllSessionSocialCmd.data)
}

// optional uint32 len = 5 [default = 0];
inline bool ForwardToAllSessionSocialCmd::has_len() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ForwardToAllSessionSocialCmd::set_has_len() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ForwardToAllSessionSocialCmd::clear_has_len() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ForwardToAllSessionSocialCmd::clear_len() {
  len_ = 0u;
  clear_has_len();
}
inline ::google::protobuf::uint32 ForwardToAllSessionSocialCmd::len() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardToAllSessionSocialCmd.len)
  return len_;
}
inline void ForwardToAllSessionSocialCmd::set_len(::google::protobuf::uint32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardToAllSessionSocialCmd.len)
}

// -------------------------------------------------------------------

// GuildLevelUpSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool GuildLevelUpSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildLevelUpSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildLevelUpSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildLevelUpSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command GuildLevelUpSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildLevelUpSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildLevelUpSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildLevelUpSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_GUILD_LEVELUP];
inline bool GuildLevelUpSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildLevelUpSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildLevelUpSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildLevelUpSocialCmd::clear_param() {
  param_ = 44;
  clear_has_param();
}
inline ::Cmd::SocialParam GuildLevelUpSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildLevelUpSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void GuildLevelUpSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildLevelUpSocialCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool GuildLevelUpSocialCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildLevelUpSocialCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildLevelUpSocialCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildLevelUpSocialCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GuildLevelUpSocialCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildLevelUpSocialCmd.charid)
  return charid_;
}
inline void GuildLevelUpSocialCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildLevelUpSocialCmd.charid)
}

// optional uint64 guildid = 4 [default = 0];
inline bool GuildLevelUpSocialCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildLevelUpSocialCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildLevelUpSocialCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildLevelUpSocialCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 GuildLevelUpSocialCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildLevelUpSocialCmd.guildid)
  return guildid_;
}
inline void GuildLevelUpSocialCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildLevelUpSocialCmd.guildid)
}

// optional uint32 addlevel = 5 [default = 0];
inline bool GuildLevelUpSocialCmd::has_addlevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildLevelUpSocialCmd::set_has_addlevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildLevelUpSocialCmd::clear_has_addlevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildLevelUpSocialCmd::clear_addlevel() {
  addlevel_ = 0u;
  clear_has_addlevel();
}
inline ::google::protobuf::uint32 GuildLevelUpSocialCmd::addlevel() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildLevelUpSocialCmd.addlevel)
  return addlevel_;
}
inline void GuildLevelUpSocialCmd::set_addlevel(::google::protobuf::uint32 value) {
  set_has_addlevel();
  addlevel_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildLevelUpSocialCmd.addlevel)
}

// optional string guildname = 6;
inline bool GuildLevelUpSocialCmd::has_guildname() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildLevelUpSocialCmd::set_has_guildname() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildLevelUpSocialCmd::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildLevelUpSocialCmd::clear_guildname() {
  if (guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_->clear();
  }
  clear_has_guildname();
}
inline const ::std::string& GuildLevelUpSocialCmd::guildname() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildLevelUpSocialCmd.guildname)
  return *guildname_;
}
inline void GuildLevelUpSocialCmd::set_guildname(const ::std::string& value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildLevelUpSocialCmd.guildname)
}
inline void GuildLevelUpSocialCmd::set_guildname(const char* value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildLevelUpSocialCmd.guildname)
}
inline void GuildLevelUpSocialCmd::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildLevelUpSocialCmd.guildname)
}
inline ::std::string* GuildLevelUpSocialCmd::mutable_guildname() {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildLevelUpSocialCmd.guildname)
  return guildname_;
}
inline ::std::string* GuildLevelUpSocialCmd::release_guildname() {
  clear_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guildname_;
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildLevelUpSocialCmd::set_allocated_guildname(::std::string* guildname) {
  if (guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guildname_;
  }
  if (guildname) {
    set_has_guildname();
    guildname_ = guildname;
  } else {
    clear_has_guildname();
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildLevelUpSocialCmd.guildname)
}

// -------------------------------------------------------------------

// MoveGuildZoneSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool MoveGuildZoneSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoveGuildZoneSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoveGuildZoneSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoveGuildZoneSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command MoveGuildZoneSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.MoveGuildZoneSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void MoveGuildZoneSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MoveGuildZoneSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_GM_MOVE_GUILD_ZONE];
inline bool MoveGuildZoneSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoveGuildZoneSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoveGuildZoneSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoveGuildZoneSocialCmd::clear_param() {
  param_ = 70;
  clear_has_param();
}
inline ::Cmd::SocialParam MoveGuildZoneSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.MoveGuildZoneSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void MoveGuildZoneSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MoveGuildZoneSocialCmd.param)
}

// optional uint32 orizone = 3 [default = 0];
inline bool MoveGuildZoneSocialCmd::has_orizone() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MoveGuildZoneSocialCmd::set_has_orizone() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MoveGuildZoneSocialCmd::clear_has_orizone() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MoveGuildZoneSocialCmd::clear_orizone() {
  orizone_ = 0u;
  clear_has_orizone();
}
inline ::google::protobuf::uint32 MoveGuildZoneSocialCmd::orizone() const {
  // @@protoc_insertion_point(field_get:Cmd.MoveGuildZoneSocialCmd.orizone)
  return orizone_;
}
inline void MoveGuildZoneSocialCmd::set_orizone(::google::protobuf::uint32 value) {
  set_has_orizone();
  orizone_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MoveGuildZoneSocialCmd.orizone)
}

// optional uint32 newzone = 4 [default = 0];
inline bool MoveGuildZoneSocialCmd::has_newzone() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MoveGuildZoneSocialCmd::set_has_newzone() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MoveGuildZoneSocialCmd::clear_has_newzone() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MoveGuildZoneSocialCmd::clear_newzone() {
  newzone_ = 0u;
  clear_has_newzone();
}
inline ::google::protobuf::uint32 MoveGuildZoneSocialCmd::newzone() const {
  // @@protoc_insertion_point(field_get:Cmd.MoveGuildZoneSocialCmd.newzone)
  return newzone_;
}
inline void MoveGuildZoneSocialCmd::set_newzone(::google::protobuf::uint32 value) {
  set_has_newzone();
  newzone_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MoveGuildZoneSocialCmd.newzone)
}

// -------------------------------------------------------------------

// SocialDataUpdateSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool SocialDataUpdateSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SocialDataUpdateSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SocialDataUpdateSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SocialDataUpdateSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command SocialDataUpdateSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialDataUpdateSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SocialDataUpdateSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialDataUpdateSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_SOCIAL_DATA_UPDATE];
inline bool SocialDataUpdateSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SocialDataUpdateSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SocialDataUpdateSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SocialDataUpdateSocialCmd::clear_param() {
  param_ = 80;
  clear_has_param();
}
inline ::Cmd::SocialParam SocialDataUpdateSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialDataUpdateSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void SocialDataUpdateSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialDataUpdateSocialCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool SocialDataUpdateSocialCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SocialDataUpdateSocialCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SocialDataUpdateSocialCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SocialDataUpdateSocialCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 SocialDataUpdateSocialCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialDataUpdateSocialCmd.charid)
  return charid_;
}
inline void SocialDataUpdateSocialCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialDataUpdateSocialCmd.charid)
}

// optional uint64 targetid = 4 [default = 0];
inline bool SocialDataUpdateSocialCmd::has_targetid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SocialDataUpdateSocialCmd::set_has_targetid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SocialDataUpdateSocialCmd::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SocialDataUpdateSocialCmd::clear_targetid() {
  targetid_ = GOOGLE_ULONGLONG(0);
  clear_has_targetid();
}
inline ::google::protobuf::uint64 SocialDataUpdateSocialCmd::targetid() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialDataUpdateSocialCmd.targetid)
  return targetid_;
}
inline void SocialDataUpdateSocialCmd::set_targetid(::google::protobuf::uint64 value) {
  set_has_targetid();
  targetid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialDataUpdateSocialCmd.targetid)
}

// optional .Cmd.SocialDataUpdate update = 5;
inline bool SocialDataUpdateSocialCmd::has_update() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SocialDataUpdateSocialCmd::set_has_update() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SocialDataUpdateSocialCmd::clear_has_update() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SocialDataUpdateSocialCmd::clear_update() {
  if (update_ != NULL) update_->::Cmd::SocialDataUpdate::Clear();
  clear_has_update();
}
inline const ::Cmd::SocialDataUpdate& SocialDataUpdateSocialCmd::update() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialDataUpdateSocialCmd.update)
  return update_ != NULL ? *update_ : *default_instance_->update_;
}
inline ::Cmd::SocialDataUpdate* SocialDataUpdateSocialCmd::mutable_update() {
  set_has_update();
  if (update_ == NULL) update_ = new ::Cmd::SocialDataUpdate;
  // @@protoc_insertion_point(field_mutable:Cmd.SocialDataUpdateSocialCmd.update)
  return update_;
}
inline ::Cmd::SocialDataUpdate* SocialDataUpdateSocialCmd::release_update() {
  clear_has_update();
  ::Cmd::SocialDataUpdate* temp = update_;
  update_ = NULL;
  return temp;
}
inline void SocialDataUpdateSocialCmd::set_allocated_update(::Cmd::SocialDataUpdate* update) {
  delete update_;
  update_ = update;
  if (update) {
    set_has_update();
  } else {
    clear_has_update();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.SocialDataUpdateSocialCmd.update)
}

// optional bool to_global = 6 [default = false];
inline bool SocialDataUpdateSocialCmd::has_to_global() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SocialDataUpdateSocialCmd::set_has_to_global() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SocialDataUpdateSocialCmd::clear_has_to_global() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SocialDataUpdateSocialCmd::clear_to_global() {
  to_global_ = false;
  clear_has_to_global();
}
inline bool SocialDataUpdateSocialCmd::to_global() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialDataUpdateSocialCmd.to_global)
  return to_global_;
}
inline void SocialDataUpdateSocialCmd::set_to_global(bool value) {
  set_has_to_global();
  to_global_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialDataUpdateSocialCmd.to_global)
}

// -------------------------------------------------------------------

// AddRelationSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool AddRelationSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddRelationSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddRelationSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddRelationSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command AddRelationSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.AddRelationSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void AddRelationSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AddRelationSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_SOCIAL_ADDRELATION];
inline bool AddRelationSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddRelationSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddRelationSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddRelationSocialCmd::clear_param() {
  param_ = 81;
  clear_has_param();
}
inline ::Cmd::SocialParam AddRelationSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.AddRelationSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void AddRelationSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AddRelationSocialCmd.param)
}

// optional .Cmd.SocialUser user = 3;
inline bool AddRelationSocialCmd::has_user() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddRelationSocialCmd::set_has_user() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddRelationSocialCmd::clear_has_user() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddRelationSocialCmd::clear_user() {
  if (user_ != NULL) user_->::Cmd::SocialUser::Clear();
  clear_has_user();
}
inline const ::Cmd::SocialUser& AddRelationSocialCmd::user() const {
  // @@protoc_insertion_point(field_get:Cmd.AddRelationSocialCmd.user)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
inline ::Cmd::SocialUser* AddRelationSocialCmd::mutable_user() {
  set_has_user();
  if (user_ == NULL) user_ = new ::Cmd::SocialUser;
  // @@protoc_insertion_point(field_mutable:Cmd.AddRelationSocialCmd.user)
  return user_;
}
inline ::Cmd::SocialUser* AddRelationSocialCmd::release_user() {
  clear_has_user();
  ::Cmd::SocialUser* temp = user_;
  user_ = NULL;
  return temp;
}
inline void AddRelationSocialCmd::set_allocated_user(::Cmd::SocialUser* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.AddRelationSocialCmd.user)
}

// optional uint64 destid = 4 [default = 0];
inline bool AddRelationSocialCmd::has_destid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddRelationSocialCmd::set_has_destid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddRelationSocialCmd::clear_has_destid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddRelationSocialCmd::clear_destid() {
  destid_ = GOOGLE_ULONGLONG(0);
  clear_has_destid();
}
inline ::google::protobuf::uint64 AddRelationSocialCmd::destid() const {
  // @@protoc_insertion_point(field_get:Cmd.AddRelationSocialCmd.destid)
  return destid_;
}
inline void AddRelationSocialCmd::set_destid(::google::protobuf::uint64 value) {
  set_has_destid();
  destid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AddRelationSocialCmd.destid)
}

// optional .Cmd.ESocialRelation relation = 5 [default = ESOCIALRELATION_MIN];
inline bool AddRelationSocialCmd::has_relation() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AddRelationSocialCmd::set_has_relation() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AddRelationSocialCmd::clear_has_relation() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AddRelationSocialCmd::clear_relation() {
  relation_ = 1;
  clear_has_relation();
}
inline ::Cmd::ESocialRelation AddRelationSocialCmd::relation() const {
  // @@protoc_insertion_point(field_get:Cmd.AddRelationSocialCmd.relation)
  return static_cast< ::Cmd::ESocialRelation >(relation_);
}
inline void AddRelationSocialCmd::set_relation(::Cmd::ESocialRelation value) {
  assert(::Cmd::ESocialRelation_IsValid(value));
  set_has_relation();
  relation_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AddRelationSocialCmd.relation)
}

// optional bool to_global = 6 [default = false];
inline bool AddRelationSocialCmd::has_to_global() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AddRelationSocialCmd::set_has_to_global() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AddRelationSocialCmd::clear_has_to_global() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AddRelationSocialCmd::clear_to_global() {
  to_global_ = false;
  clear_has_to_global();
}
inline bool AddRelationSocialCmd::to_global() const {
  // @@protoc_insertion_point(field_get:Cmd.AddRelationSocialCmd.to_global)
  return to_global_;
}
inline void AddRelationSocialCmd::set_to_global(bool value) {
  set_has_to_global();
  to_global_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AddRelationSocialCmd.to_global)
}

// optional bool check = 7 [default = false];
inline bool AddRelationSocialCmd::has_check() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AddRelationSocialCmd::set_has_check() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AddRelationSocialCmd::clear_has_check() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AddRelationSocialCmd::clear_check() {
  check_ = false;
  clear_has_check();
}
inline bool AddRelationSocialCmd::check() const {
  // @@protoc_insertion_point(field_get:Cmd.AddRelationSocialCmd.check)
  return check_;
}
inline void AddRelationSocialCmd::set_check(bool value) {
  set_has_check();
  check_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AddRelationSocialCmd.check)
}

// -------------------------------------------------------------------

// RemoveRelationSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool RemoveRelationSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoveRelationSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemoveRelationSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemoveRelationSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command RemoveRelationSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.RemoveRelationSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void RemoveRelationSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RemoveRelationSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_SOCIAL_REMOVERELATION];
inline bool RemoveRelationSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RemoveRelationSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RemoveRelationSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RemoveRelationSocialCmd::clear_param() {
  param_ = 82;
  clear_has_param();
}
inline ::Cmd::SocialParam RemoveRelationSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.RemoveRelationSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void RemoveRelationSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RemoveRelationSocialCmd.param)
}

// optional .Cmd.SocialUser user = 3;
inline bool RemoveRelationSocialCmd::has_user() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RemoveRelationSocialCmd::set_has_user() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RemoveRelationSocialCmd::clear_has_user() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RemoveRelationSocialCmd::clear_user() {
  if (user_ != NULL) user_->::Cmd::SocialUser::Clear();
  clear_has_user();
}
inline const ::Cmd::SocialUser& RemoveRelationSocialCmd::user() const {
  // @@protoc_insertion_point(field_get:Cmd.RemoveRelationSocialCmd.user)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
inline ::Cmd::SocialUser* RemoveRelationSocialCmd::mutable_user() {
  set_has_user();
  if (user_ == NULL) user_ = new ::Cmd::SocialUser;
  // @@protoc_insertion_point(field_mutable:Cmd.RemoveRelationSocialCmd.user)
  return user_;
}
inline ::Cmd::SocialUser* RemoveRelationSocialCmd::release_user() {
  clear_has_user();
  ::Cmd::SocialUser* temp = user_;
  user_ = NULL;
  return temp;
}
inline void RemoveRelationSocialCmd::set_allocated_user(::Cmd::SocialUser* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.RemoveRelationSocialCmd.user)
}

// optional uint64 destid = 4 [default = 0];
inline bool RemoveRelationSocialCmd::has_destid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RemoveRelationSocialCmd::set_has_destid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RemoveRelationSocialCmd::clear_has_destid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RemoveRelationSocialCmd::clear_destid() {
  destid_ = GOOGLE_ULONGLONG(0);
  clear_has_destid();
}
inline ::google::protobuf::uint64 RemoveRelationSocialCmd::destid() const {
  // @@protoc_insertion_point(field_get:Cmd.RemoveRelationSocialCmd.destid)
  return destid_;
}
inline void RemoveRelationSocialCmd::set_destid(::google::protobuf::uint64 value) {
  set_has_destid();
  destid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RemoveRelationSocialCmd.destid)
}

// optional .Cmd.ESocialRelation relation = 5 [default = ESOCIALRELATION_MIN];
inline bool RemoveRelationSocialCmd::has_relation() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RemoveRelationSocialCmd::set_has_relation() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RemoveRelationSocialCmd::clear_has_relation() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RemoveRelationSocialCmd::clear_relation() {
  relation_ = 1;
  clear_has_relation();
}
inline ::Cmd::ESocialRelation RemoveRelationSocialCmd::relation() const {
  // @@protoc_insertion_point(field_get:Cmd.RemoveRelationSocialCmd.relation)
  return static_cast< ::Cmd::ESocialRelation >(relation_);
}
inline void RemoveRelationSocialCmd::set_relation(::Cmd::ESocialRelation value) {
  assert(::Cmd::ESocialRelation_IsValid(value));
  set_has_relation();
  relation_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RemoveRelationSocialCmd.relation)
}

// optional bool to_global = 6 [default = false];
inline bool RemoveRelationSocialCmd::has_to_global() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RemoveRelationSocialCmd::set_has_to_global() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RemoveRelationSocialCmd::clear_has_to_global() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RemoveRelationSocialCmd::clear_to_global() {
  to_global_ = false;
  clear_has_to_global();
}
inline bool RemoveRelationSocialCmd::to_global() const {
  // @@protoc_insertion_point(field_get:Cmd.RemoveRelationSocialCmd.to_global)
  return to_global_;
}
inline void RemoveRelationSocialCmd::set_to_global(bool value) {
  set_has_to_global();
  to_global_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RemoveRelationSocialCmd.to_global)
}

// -------------------------------------------------------------------

// RemoveSocialitySocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool RemoveSocialitySocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoveSocialitySocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemoveSocialitySocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemoveSocialitySocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command RemoveSocialitySocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.RemoveSocialitySocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void RemoveSocialitySocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RemoveSocialitySocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_SOCIAL_REMOVESOCIAL];
inline bool RemoveSocialitySocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RemoveSocialitySocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RemoveSocialitySocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RemoveSocialitySocialCmd::clear_param() {
  param_ = 84;
  clear_has_param();
}
inline ::Cmd::SocialParam RemoveSocialitySocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.RemoveSocialitySocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void RemoveSocialitySocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RemoveSocialitySocialCmd.param)
}

// optional .Cmd.SocialUser user = 3;
inline bool RemoveSocialitySocialCmd::has_user() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RemoveSocialitySocialCmd::set_has_user() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RemoveSocialitySocialCmd::clear_has_user() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RemoveSocialitySocialCmd::clear_user() {
  if (user_ != NULL) user_->::Cmd::SocialUser::Clear();
  clear_has_user();
}
inline const ::Cmd::SocialUser& RemoveSocialitySocialCmd::user() const {
  // @@protoc_insertion_point(field_get:Cmd.RemoveSocialitySocialCmd.user)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
inline ::Cmd::SocialUser* RemoveSocialitySocialCmd::mutable_user() {
  set_has_user();
  if (user_ == NULL) user_ = new ::Cmd::SocialUser;
  // @@protoc_insertion_point(field_mutable:Cmd.RemoveSocialitySocialCmd.user)
  return user_;
}
inline ::Cmd::SocialUser* RemoveSocialitySocialCmd::release_user() {
  clear_has_user();
  ::Cmd::SocialUser* temp = user_;
  user_ = NULL;
  return temp;
}
inline void RemoveSocialitySocialCmd::set_allocated_user(::Cmd::SocialUser* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.RemoveSocialitySocialCmd.user)
}

// optional uint64 destid = 4 [default = 0];
inline bool RemoveSocialitySocialCmd::has_destid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RemoveSocialitySocialCmd::set_has_destid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RemoveSocialitySocialCmd::clear_has_destid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RemoveSocialitySocialCmd::clear_destid() {
  destid_ = GOOGLE_ULONGLONG(0);
  clear_has_destid();
}
inline ::google::protobuf::uint64 RemoveSocialitySocialCmd::destid() const {
  // @@protoc_insertion_point(field_get:Cmd.RemoveSocialitySocialCmd.destid)
  return destid_;
}
inline void RemoveSocialitySocialCmd::set_destid(::google::protobuf::uint64 value) {
  set_has_destid();
  destid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RemoveSocialitySocialCmd.destid)
}

// optional bool to_global = 5 [default = false];
inline bool RemoveSocialitySocialCmd::has_to_global() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RemoveSocialitySocialCmd::set_has_to_global() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RemoveSocialitySocialCmd::clear_has_to_global() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RemoveSocialitySocialCmd::clear_to_global() {
  to_global_ = false;
  clear_has_to_global();
}
inline bool RemoveSocialitySocialCmd::to_global() const {
  // @@protoc_insertion_point(field_get:Cmd.RemoveSocialitySocialCmd.to_global)
  return to_global_;
}
inline void RemoveSocialitySocialCmd::set_to_global(bool value) {
  set_has_to_global();
  to_global_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RemoveSocialitySocialCmd.to_global)
}

// -------------------------------------------------------------------

// SocialItem

// optional uint64 charid = 1 [default = 0];
inline bool SocialItem::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SocialItem::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SocialItem::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SocialItem::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 SocialItem::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialItem.charid)
  return charid_;
}
inline void SocialItem::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialItem.charid)
}

// optional uint32 relation = 2 [default = 0];
inline bool SocialItem::has_relation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SocialItem::set_has_relation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SocialItem::clear_has_relation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SocialItem::clear_relation() {
  relation_ = 0u;
  clear_has_relation();
}
inline ::google::protobuf::uint32 SocialItem::relation() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialItem.relation)
  return relation_;
}
inline void SocialItem::set_relation(::google::protobuf::uint32 value) {
  set_has_relation();
  relation_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialItem.relation)
}

// optional string createtime = 3;
inline bool SocialItem::has_createtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SocialItem::set_has_createtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SocialItem::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SocialItem::clear_createtime() {
  if (createtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createtime_->clear();
  }
  clear_has_createtime();
}
inline const ::std::string& SocialItem::createtime() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialItem.createtime)
  return *createtime_;
}
inline void SocialItem::set_createtime(const ::std::string& value) {
  set_has_createtime();
  if (createtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createtime_ = new ::std::string;
  }
  createtime_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.SocialItem.createtime)
}
inline void SocialItem::set_createtime(const char* value) {
  set_has_createtime();
  if (createtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createtime_ = new ::std::string;
  }
  createtime_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.SocialItem.createtime)
}
inline void SocialItem::set_createtime(const char* value, size_t size) {
  set_has_createtime();
  if (createtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createtime_ = new ::std::string;
  }
  createtime_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.SocialItem.createtime)
}
inline ::std::string* SocialItem::mutable_createtime() {
  set_has_createtime();
  if (createtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createtime_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.SocialItem.createtime)
  return createtime_;
}
inline ::std::string* SocialItem::release_createtime() {
  clear_has_createtime();
  if (createtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = createtime_;
    createtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SocialItem::set_allocated_createtime(::std::string* createtime) {
  if (createtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete createtime_;
  }
  if (createtime) {
    set_has_createtime();
    createtime_ = createtime;
  } else {
    clear_has_createtime();
    createtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.SocialItem.createtime)
}

// -------------------------------------------------------------------

// SyncSocialListSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool SyncSocialListSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncSocialListSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncSocialListSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncSocialListSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command SyncSocialListSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncSocialListSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SyncSocialListSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncSocialListSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_SOCIAL_SYNC_LIST];
inline bool SyncSocialListSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncSocialListSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncSocialListSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncSocialListSocialCmd::clear_param() {
  param_ = 85;
  clear_has_param();
}
inline ::Cmd::SocialParam SyncSocialListSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncSocialListSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void SyncSocialListSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncSocialListSocialCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool SyncSocialListSocialCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SyncSocialListSocialCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SyncSocialListSocialCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SyncSocialListSocialCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 SyncSocialListSocialCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncSocialListSocialCmd.charid)
  return charid_;
}
inline void SyncSocialListSocialCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncSocialListSocialCmd.charid)
}

// repeated .Cmd.SocialItem items = 4;
inline int SyncSocialListSocialCmd::items_size() const {
  return items_.size();
}
inline void SyncSocialListSocialCmd::clear_items() {
  items_.Clear();
}
inline const ::Cmd::SocialItem& SyncSocialListSocialCmd::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SyncSocialListSocialCmd.items)
  return items_.Get(index);
}
inline ::Cmd::SocialItem* SyncSocialListSocialCmd::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.SyncSocialListSocialCmd.items)
  return items_.Mutable(index);
}
inline ::Cmd::SocialItem* SyncSocialListSocialCmd::add_items() {
  // @@protoc_insertion_point(field_add:Cmd.SyncSocialListSocialCmd.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SocialItem >&
SyncSocialListSocialCmd::items() const {
  // @@protoc_insertion_point(field_list:Cmd.SyncSocialListSocialCmd.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::SocialItem >*
SyncSocialListSocialCmd::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SyncSocialListSocialCmd.items)
  return &items_;
}

// -------------------------------------------------------------------

// SocialListUpdateSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool SocialListUpdateSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SocialListUpdateSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SocialListUpdateSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SocialListUpdateSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command SocialListUpdateSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialListUpdateSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SocialListUpdateSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialListUpdateSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_SOCIAL_LIST_UPDATE];
inline bool SocialListUpdateSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SocialListUpdateSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SocialListUpdateSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SocialListUpdateSocialCmd::clear_param() {
  param_ = 86;
  clear_has_param();
}
inline ::Cmd::SocialParam SocialListUpdateSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialListUpdateSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void SocialListUpdateSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialListUpdateSocialCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool SocialListUpdateSocialCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SocialListUpdateSocialCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SocialListUpdateSocialCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SocialListUpdateSocialCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 SocialListUpdateSocialCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialListUpdateSocialCmd.charid)
  return charid_;
}
inline void SocialListUpdateSocialCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialListUpdateSocialCmd.charid)
}

// repeated .Cmd.SocialItem updates = 4;
inline int SocialListUpdateSocialCmd::updates_size() const {
  return updates_.size();
}
inline void SocialListUpdateSocialCmd::clear_updates() {
  updates_.Clear();
}
inline const ::Cmd::SocialItem& SocialListUpdateSocialCmd::updates(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SocialListUpdateSocialCmd.updates)
  return updates_.Get(index);
}
inline ::Cmd::SocialItem* SocialListUpdateSocialCmd::mutable_updates(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.SocialListUpdateSocialCmd.updates)
  return updates_.Mutable(index);
}
inline ::Cmd::SocialItem* SocialListUpdateSocialCmd::add_updates() {
  // @@protoc_insertion_point(field_add:Cmd.SocialListUpdateSocialCmd.updates)
  return updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SocialItem >&
SocialListUpdateSocialCmd::updates() const {
  // @@protoc_insertion_point(field_list:Cmd.SocialListUpdateSocialCmd.updates)
  return updates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::SocialItem >*
SocialListUpdateSocialCmd::mutable_updates() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SocialListUpdateSocialCmd.updates)
  return &updates_;
}

// repeated uint64 dels = 5;
inline int SocialListUpdateSocialCmd::dels_size() const {
  return dels_.size();
}
inline void SocialListUpdateSocialCmd::clear_dels() {
  dels_.Clear();
}
inline ::google::protobuf::uint64 SocialListUpdateSocialCmd::dels(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SocialListUpdateSocialCmd.dels)
  return dels_.Get(index);
}
inline void SocialListUpdateSocialCmd::set_dels(int index, ::google::protobuf::uint64 value) {
  dels_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.SocialListUpdateSocialCmd.dels)
}
inline void SocialListUpdateSocialCmd::add_dels(::google::protobuf::uint64 value) {
  dels_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.SocialListUpdateSocialCmd.dels)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
SocialListUpdateSocialCmd::dels() const {
  // @@protoc_insertion_point(field_list:Cmd.SocialListUpdateSocialCmd.dels)
  return dels_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
SocialListUpdateSocialCmd::mutable_dels() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SocialListUpdateSocialCmd.dels)
  return &dels_;
}

// -------------------------------------------------------------------

// UpdateRelationTimeSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool UpdateRelationTimeSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateRelationTimeSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateRelationTimeSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateRelationTimeSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command UpdateRelationTimeSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateRelationTimeSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UpdateRelationTimeSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateRelationTimeSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_SOCIAL_UPDATE_RELATIONTIME];
inline bool UpdateRelationTimeSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateRelationTimeSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateRelationTimeSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateRelationTimeSocialCmd::clear_param() {
  param_ = 91;
  clear_has_param();
}
inline ::Cmd::SocialParam UpdateRelationTimeSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateRelationTimeSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void UpdateRelationTimeSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateRelationTimeSocialCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool UpdateRelationTimeSocialCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateRelationTimeSocialCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateRelationTimeSocialCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateRelationTimeSocialCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 UpdateRelationTimeSocialCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateRelationTimeSocialCmd.charid)
  return charid_;
}
inline void UpdateRelationTimeSocialCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateRelationTimeSocialCmd.charid)
}

// optional uint64 targetid = 4 [default = 0];
inline bool UpdateRelationTimeSocialCmd::has_targetid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateRelationTimeSocialCmd::set_has_targetid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateRelationTimeSocialCmd::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateRelationTimeSocialCmd::clear_targetid() {
  targetid_ = GOOGLE_ULONGLONG(0);
  clear_has_targetid();
}
inline ::google::protobuf::uint64 UpdateRelationTimeSocialCmd::targetid() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateRelationTimeSocialCmd.targetid)
  return targetid_;
}
inline void UpdateRelationTimeSocialCmd::set_targetid(::google::protobuf::uint64 value) {
  set_has_targetid();
  targetid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateRelationTimeSocialCmd.targetid)
}

// optional uint32 time = 5 [default = 0];
inline bool UpdateRelationTimeSocialCmd::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UpdateRelationTimeSocialCmd::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UpdateRelationTimeSocialCmd::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UpdateRelationTimeSocialCmd::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 UpdateRelationTimeSocialCmd::time() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateRelationTimeSocialCmd.time)
  return time_;
}
inline void UpdateRelationTimeSocialCmd::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateRelationTimeSocialCmd.time)
}

// optional .Cmd.ESocialRelation relation = 6 [default = ESOCIALRELATION_CHAT];
inline bool UpdateRelationTimeSocialCmd::has_relation() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UpdateRelationTimeSocialCmd::set_has_relation() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UpdateRelationTimeSocialCmd::clear_has_relation() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UpdateRelationTimeSocialCmd::clear_relation() {
  relation_ = 8;
  clear_has_relation();
}
inline ::Cmd::ESocialRelation UpdateRelationTimeSocialCmd::relation() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateRelationTimeSocialCmd.relation)
  return static_cast< ::Cmd::ESocialRelation >(relation_);
}
inline void UpdateRelationTimeSocialCmd::set_relation(::Cmd::ESocialRelation value) {
  assert(::Cmd::ESocialRelation_IsValid(value));
  set_has_relation();
  relation_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateRelationTimeSocialCmd.relation)
}

// -------------------------------------------------------------------

// TeamerQuestUpdateSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool TeamerQuestUpdateSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamerQuestUpdateSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamerQuestUpdateSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamerQuestUpdateSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command TeamerQuestUpdateSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamerQuestUpdateSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TeamerQuestUpdateSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamerQuestUpdateSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_TEAM_QUEST_UPDATE];
inline bool TeamerQuestUpdateSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamerQuestUpdateSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamerQuestUpdateSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamerQuestUpdateSocialCmd::clear_param() {
  param_ = 87;
  clear_has_param();
}
inline ::Cmd::SocialParam TeamerQuestUpdateSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamerQuestUpdateSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void TeamerQuestUpdateSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamerQuestUpdateSocialCmd.param)
}

// optional .Cmd.MemberWantedQuest quest = 3;
inline bool TeamerQuestUpdateSocialCmd::has_quest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamerQuestUpdateSocialCmd::set_has_quest() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamerQuestUpdateSocialCmd::clear_has_quest() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamerQuestUpdateSocialCmd::clear_quest() {
  if (quest_ != NULL) quest_->::Cmd::MemberWantedQuest::Clear();
  clear_has_quest();
}
inline const ::Cmd::MemberWantedQuest& TeamerQuestUpdateSocialCmd::quest() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamerQuestUpdateSocialCmd.quest)
  return quest_ != NULL ? *quest_ : *default_instance_->quest_;
}
inline ::Cmd::MemberWantedQuest* TeamerQuestUpdateSocialCmd::mutable_quest() {
  set_has_quest();
  if (quest_ == NULL) quest_ = new ::Cmd::MemberWantedQuest;
  // @@protoc_insertion_point(field_mutable:Cmd.TeamerQuestUpdateSocialCmd.quest)
  return quest_;
}
inline ::Cmd::MemberWantedQuest* TeamerQuestUpdateSocialCmd::release_quest() {
  clear_has_quest();
  ::Cmd::MemberWantedQuest* temp = quest_;
  quest_ = NULL;
  return temp;
}
inline void TeamerQuestUpdateSocialCmd::set_allocated_quest(::Cmd::MemberWantedQuest* quest) {
  delete quest_;
  quest_ = quest;
  if (quest) {
    set_has_quest();
  } else {
    clear_has_quest();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TeamerQuestUpdateSocialCmd.quest)
}

// -------------------------------------------------------------------

// GlobalForwardCmdSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool GlobalForwardCmdSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GlobalForwardCmdSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GlobalForwardCmdSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GlobalForwardCmdSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command GlobalForwardCmdSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GlobalForwardCmdSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GlobalForwardCmdSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GlobalForwardCmdSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_GLOBAL_FORWARD_CMD];
inline bool GlobalForwardCmdSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GlobalForwardCmdSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GlobalForwardCmdSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GlobalForwardCmdSocialCmd::clear_param() {
  param_ = 88;
  clear_has_param();
}
inline ::Cmd::SocialParam GlobalForwardCmdSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GlobalForwardCmdSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void GlobalForwardCmdSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GlobalForwardCmdSocialCmd.param)
}

// optional uint64 charid = 3;
inline bool GlobalForwardCmdSocialCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GlobalForwardCmdSocialCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GlobalForwardCmdSocialCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GlobalForwardCmdSocialCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GlobalForwardCmdSocialCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.GlobalForwardCmdSocialCmd.charid)
  return charid_;
}
inline void GlobalForwardCmdSocialCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GlobalForwardCmdSocialCmd.charid)
}

// optional bytes data = 4;
inline bool GlobalForwardCmdSocialCmd::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GlobalForwardCmdSocialCmd::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GlobalForwardCmdSocialCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GlobalForwardCmdSocialCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& GlobalForwardCmdSocialCmd::data() const {
  // @@protoc_insertion_point(field_get:Cmd.GlobalForwardCmdSocialCmd.data)
  return *data_;
}
inline void GlobalForwardCmdSocialCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GlobalForwardCmdSocialCmd.data)
}
inline void GlobalForwardCmdSocialCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GlobalForwardCmdSocialCmd.data)
}
inline void GlobalForwardCmdSocialCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GlobalForwardCmdSocialCmd.data)
}
inline ::std::string* GlobalForwardCmdSocialCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GlobalForwardCmdSocialCmd.data)
  return data_;
}
inline ::std::string* GlobalForwardCmdSocialCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GlobalForwardCmdSocialCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GlobalForwardCmdSocialCmd.data)
}

// optional uint32 len = 5;
inline bool GlobalForwardCmdSocialCmd::has_len() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GlobalForwardCmdSocialCmd::set_has_len() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GlobalForwardCmdSocialCmd::clear_has_len() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GlobalForwardCmdSocialCmd::clear_len() {
  len_ = 0u;
  clear_has_len();
}
inline ::google::protobuf::uint32 GlobalForwardCmdSocialCmd::len() const {
  // @@protoc_insertion_point(field_get:Cmd.GlobalForwardCmdSocialCmd.len)
  return len_;
}
inline void GlobalForwardCmdSocialCmd::set_len(::google::protobuf::uint32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GlobalForwardCmdSocialCmd.len)
}

// optional .Cmd.EDir dir = 6;
inline bool GlobalForwardCmdSocialCmd::has_dir() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GlobalForwardCmdSocialCmd::set_has_dir() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GlobalForwardCmdSocialCmd::clear_has_dir() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GlobalForwardCmdSocialCmd::clear_dir() {
  dir_ = 0;
  clear_has_dir();
}
inline ::Cmd::EDir GlobalForwardCmdSocialCmd::dir() const {
  // @@protoc_insertion_point(field_get:Cmd.GlobalForwardCmdSocialCmd.dir)
  return static_cast< ::Cmd::EDir >(dir_);
}
inline void GlobalForwardCmdSocialCmd::set_dir(::Cmd::EDir value) {
  assert(::Cmd::EDir_IsValid(value));
  set_has_dir();
  dir_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GlobalForwardCmdSocialCmd.dir)
}

// -------------------------------------------------------------------

// AuthorizeInfoSyncSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool AuthorizeInfoSyncSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthorizeInfoSyncSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthorizeInfoSyncSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthorizeInfoSyncSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command AuthorizeInfoSyncSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.AuthorizeInfoSyncSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void AuthorizeInfoSyncSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AuthorizeInfoSyncSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_AUTHORIZE_SYNC_INFO];
inline bool AuthorizeInfoSyncSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuthorizeInfoSyncSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuthorizeInfoSyncSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuthorizeInfoSyncSocialCmd::clear_param() {
  param_ = 90;
  clear_has_param();
}
inline ::Cmd::SocialParam AuthorizeInfoSyncSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.AuthorizeInfoSyncSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void AuthorizeInfoSyncSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AuthorizeInfoSyncSocialCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool AuthorizeInfoSyncSocialCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AuthorizeInfoSyncSocialCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AuthorizeInfoSyncSocialCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AuthorizeInfoSyncSocialCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 AuthorizeInfoSyncSocialCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.AuthorizeInfoSyncSocialCmd.charid)
  return charid_;
}
inline void AuthorizeInfoSyncSocialCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AuthorizeInfoSyncSocialCmd.charid)
}

// optional bool ignorepwd = 4 [default = false];
inline bool AuthorizeInfoSyncSocialCmd::has_ignorepwd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AuthorizeInfoSyncSocialCmd::set_has_ignorepwd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AuthorizeInfoSyncSocialCmd::clear_has_ignorepwd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AuthorizeInfoSyncSocialCmd::clear_ignorepwd() {
  ignorepwd_ = false;
  clear_has_ignorepwd();
}
inline bool AuthorizeInfoSyncSocialCmd::ignorepwd() const {
  // @@protoc_insertion_point(field_get:Cmd.AuthorizeInfoSyncSocialCmd.ignorepwd)
  return ignorepwd_;
}
inline void AuthorizeInfoSyncSocialCmd::set_ignorepwd(bool value) {
  set_has_ignorepwd();
  ignorepwd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AuthorizeInfoSyncSocialCmd.ignorepwd)
}

// -------------------------------------------------------------------

// SyncRedTipSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool SyncRedTipSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncRedTipSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncRedTipSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncRedTipSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command SyncRedTipSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncRedTipSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SyncRedTipSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncRedTipSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_SYNC_REDTIP];
inline bool SyncRedTipSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncRedTipSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncRedTipSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncRedTipSocialCmd::clear_param() {
  param_ = 92;
  clear_has_param();
}
inline ::Cmd::SocialParam SyncRedTipSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncRedTipSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void SyncRedTipSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncRedTipSocialCmd.param)
}

// optional uint64 dwid = 3 [default = 0];
inline bool SyncRedTipSocialCmd::has_dwid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SyncRedTipSocialCmd::set_has_dwid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SyncRedTipSocialCmd::clear_has_dwid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SyncRedTipSocialCmd::clear_dwid() {
  dwid_ = GOOGLE_ULONGLONG(0);
  clear_has_dwid();
}
inline ::google::protobuf::uint64 SyncRedTipSocialCmd::dwid() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncRedTipSocialCmd.dwid)
  return dwid_;
}
inline void SyncRedTipSocialCmd::set_dwid(::google::protobuf::uint64 value) {
  set_has_dwid();
  dwid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncRedTipSocialCmd.dwid)
}

// optional uint64 charid = 4 [default = 0];
inline bool SyncRedTipSocialCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SyncRedTipSocialCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SyncRedTipSocialCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SyncRedTipSocialCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 SyncRedTipSocialCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncRedTipSocialCmd.charid)
  return charid_;
}
inline void SyncRedTipSocialCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncRedTipSocialCmd.charid)
}

// optional .Cmd.ERedSys red = 5 [default = EREDSYS_MIN];
inline bool SyncRedTipSocialCmd::has_red() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SyncRedTipSocialCmd::set_has_red() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SyncRedTipSocialCmd::clear_has_red() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SyncRedTipSocialCmd::clear_red() {
  red_ = 0;
  clear_has_red();
}
inline ::Cmd::ERedSys SyncRedTipSocialCmd::red() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncRedTipSocialCmd.red)
  return static_cast< ::Cmd::ERedSys >(red_);
}
inline void SyncRedTipSocialCmd::set_red(::Cmd::ERedSys value) {
  assert(::Cmd::ERedSys_IsValid(value));
  set_has_red();
  red_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncRedTipSocialCmd.red)
}

// optional bool add = 6 [default = false];
inline bool SyncRedTipSocialCmd::has_add() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SyncRedTipSocialCmd::set_has_add() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SyncRedTipSocialCmd::clear_has_add() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SyncRedTipSocialCmd::clear_add() {
  add_ = false;
  clear_has_add();
}
inline bool SyncRedTipSocialCmd::add() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncRedTipSocialCmd.add)
  return add_;
}
inline void SyncRedTipSocialCmd::set_add(bool value) {
  set_has_add();
  add_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncRedTipSocialCmd.add)
}

// -------------------------------------------------------------------

// SendTutorRewardSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool SendTutorRewardSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendTutorRewardSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendTutorRewardSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendTutorRewardSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command SendTutorRewardSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SendTutorRewardSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SendTutorRewardSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SendTutorRewardSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_SEND_TUTOR_REWARD];
inline bool SendTutorRewardSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendTutorRewardSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendTutorRewardSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendTutorRewardSocialCmd::clear_param() {
  param_ = 93;
  clear_has_param();
}
inline ::Cmd::SocialParam SendTutorRewardSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SendTutorRewardSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void SendTutorRewardSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SendTutorRewardSocialCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool SendTutorRewardSocialCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendTutorRewardSocialCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendTutorRewardSocialCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendTutorRewardSocialCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 SendTutorRewardSocialCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.SendTutorRewardSocialCmd.charid)
  return charid_;
}
inline void SendTutorRewardSocialCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SendTutorRewardSocialCmd.charid)
}

// repeated .Cmd.TutorReward rewards = 4;
inline int SendTutorRewardSocialCmd::rewards_size() const {
  return rewards_.size();
}
inline void SendTutorRewardSocialCmd::clear_rewards() {
  rewards_.Clear();
}
inline const ::Cmd::TutorReward& SendTutorRewardSocialCmd::rewards(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SendTutorRewardSocialCmd.rewards)
  return rewards_.Get(index);
}
inline ::Cmd::TutorReward* SendTutorRewardSocialCmd::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.SendTutorRewardSocialCmd.rewards)
  return rewards_.Mutable(index);
}
inline ::Cmd::TutorReward* SendTutorRewardSocialCmd::add_rewards() {
  // @@protoc_insertion_point(field_add:Cmd.SendTutorRewardSocialCmd.rewards)
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TutorReward >&
SendTutorRewardSocialCmd::rewards() const {
  // @@protoc_insertion_point(field_list:Cmd.SendTutorRewardSocialCmd.rewards)
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TutorReward >*
SendTutorRewardSocialCmd::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SendTutorRewardSocialCmd.rewards)
  return &rewards_;
}

// -------------------------------------------------------------------

// SyncTutorRewardSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool SyncTutorRewardSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncTutorRewardSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncTutorRewardSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncTutorRewardSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command SyncTutorRewardSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncTutorRewardSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SyncTutorRewardSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncTutorRewardSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_SYNC_TUTOR_REWARD];
inline bool SyncTutorRewardSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncTutorRewardSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncTutorRewardSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncTutorRewardSocialCmd::clear_param() {
  param_ = 94;
  clear_has_param();
}
inline ::Cmd::SocialParam SyncTutorRewardSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncTutorRewardSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void SyncTutorRewardSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncTutorRewardSocialCmd.param)
}

// optional bool searchuser = 3 [default = false];
inline bool SyncTutorRewardSocialCmd::has_searchuser() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SyncTutorRewardSocialCmd::set_has_searchuser() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SyncTutorRewardSocialCmd::clear_has_searchuser() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SyncTutorRewardSocialCmd::clear_searchuser() {
  searchuser_ = false;
  clear_has_searchuser();
}
inline bool SyncTutorRewardSocialCmd::searchuser() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncTutorRewardSocialCmd.searchuser)
  return searchuser_;
}
inline void SyncTutorRewardSocialCmd::set_searchuser(bool value) {
  set_has_searchuser();
  searchuser_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncTutorRewardSocialCmd.searchuser)
}

// optional uint64 charid = 4 [default = 0];
inline bool SyncTutorRewardSocialCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SyncTutorRewardSocialCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SyncTutorRewardSocialCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SyncTutorRewardSocialCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 SyncTutorRewardSocialCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncTutorRewardSocialCmd.charid)
  return charid_;
}
inline void SyncTutorRewardSocialCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncTutorRewardSocialCmd.charid)
}

// optional .Cmd.TutorReward reward = 5;
inline bool SyncTutorRewardSocialCmd::has_reward() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SyncTutorRewardSocialCmd::set_has_reward() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SyncTutorRewardSocialCmd::clear_has_reward() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SyncTutorRewardSocialCmd::clear_reward() {
  if (reward_ != NULL) reward_->::Cmd::TutorReward::Clear();
  clear_has_reward();
}
inline const ::Cmd::TutorReward& SyncTutorRewardSocialCmd::reward() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncTutorRewardSocialCmd.reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::Cmd::TutorReward* SyncTutorRewardSocialCmd::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::Cmd::TutorReward;
  // @@protoc_insertion_point(field_mutable:Cmd.SyncTutorRewardSocialCmd.reward)
  return reward_;
}
inline ::Cmd::TutorReward* SyncTutorRewardSocialCmd::release_reward() {
  clear_has_reward();
  ::Cmd::TutorReward* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void SyncTutorRewardSocialCmd::set_allocated_reward(::Cmd::TutorReward* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.SyncTutorRewardSocialCmd.reward)
}

// optional uint64 redpointtip = 6 [default = 0];
inline bool SyncTutorRewardSocialCmd::has_redpointtip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SyncTutorRewardSocialCmd::set_has_redpointtip() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SyncTutorRewardSocialCmd::clear_has_redpointtip() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SyncTutorRewardSocialCmd::clear_redpointtip() {
  redpointtip_ = GOOGLE_ULONGLONG(0);
  clear_has_redpointtip();
}
inline ::google::protobuf::uint64 SyncTutorRewardSocialCmd::redpointtip() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncTutorRewardSocialCmd.redpointtip)
  return redpointtip_;
}
inline void SyncTutorRewardSocialCmd::set_redpointtip(::google::protobuf::uint64 value) {
  set_has_redpointtip();
  redpointtip_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncTutorRewardSocialCmd.redpointtip)
}

// -------------------------------------------------------------------

// GlobalForwardCmdSocialCmd2

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool GlobalForwardCmdSocialCmd2::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GlobalForwardCmdSocialCmd2::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GlobalForwardCmdSocialCmd2::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GlobalForwardCmdSocialCmd2::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command GlobalForwardCmdSocialCmd2::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GlobalForwardCmdSocialCmd2.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GlobalForwardCmdSocialCmd2::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GlobalForwardCmdSocialCmd2.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_GLOBAL_FORWARD_CMD2];
inline bool GlobalForwardCmdSocialCmd2::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GlobalForwardCmdSocialCmd2::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GlobalForwardCmdSocialCmd2::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GlobalForwardCmdSocialCmd2::clear_param() {
  param_ = 95;
  clear_has_param();
}
inline ::Cmd::SocialParam GlobalForwardCmdSocialCmd2::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GlobalForwardCmdSocialCmd2.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void GlobalForwardCmdSocialCmd2::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GlobalForwardCmdSocialCmd2.param)
}

// optional uint64 charid = 3;
inline bool GlobalForwardCmdSocialCmd2::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GlobalForwardCmdSocialCmd2::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GlobalForwardCmdSocialCmd2::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GlobalForwardCmdSocialCmd2::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GlobalForwardCmdSocialCmd2::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.GlobalForwardCmdSocialCmd2.charid)
  return charid_;
}
inline void GlobalForwardCmdSocialCmd2::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GlobalForwardCmdSocialCmd2.charid)
}

// optional bytes data = 4;
inline bool GlobalForwardCmdSocialCmd2::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GlobalForwardCmdSocialCmd2::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GlobalForwardCmdSocialCmd2::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GlobalForwardCmdSocialCmd2::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& GlobalForwardCmdSocialCmd2::data() const {
  // @@protoc_insertion_point(field_get:Cmd.GlobalForwardCmdSocialCmd2.data)
  return *data_;
}
inline void GlobalForwardCmdSocialCmd2::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GlobalForwardCmdSocialCmd2.data)
}
inline void GlobalForwardCmdSocialCmd2::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GlobalForwardCmdSocialCmd2.data)
}
inline void GlobalForwardCmdSocialCmd2::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GlobalForwardCmdSocialCmd2.data)
}
inline ::std::string* GlobalForwardCmdSocialCmd2::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GlobalForwardCmdSocialCmd2.data)
  return data_;
}
inline ::std::string* GlobalForwardCmdSocialCmd2::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GlobalForwardCmdSocialCmd2::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GlobalForwardCmdSocialCmd2.data)
}

// optional uint32 len = 5;
inline bool GlobalForwardCmdSocialCmd2::has_len() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GlobalForwardCmdSocialCmd2::set_has_len() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GlobalForwardCmdSocialCmd2::clear_has_len() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GlobalForwardCmdSocialCmd2::clear_len() {
  len_ = 0u;
  clear_has_len();
}
inline ::google::protobuf::uint32 GlobalForwardCmdSocialCmd2::len() const {
  // @@protoc_insertion_point(field_get:Cmd.GlobalForwardCmdSocialCmd2.len)
  return len_;
}
inline void GlobalForwardCmdSocialCmd2::set_len(::google::protobuf::uint32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GlobalForwardCmdSocialCmd2.len)
}

// -------------------------------------------------------------------

// CardSceneCreateSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool CardSceneCreateSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CardSceneCreateSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CardSceneCreateSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CardSceneCreateSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command CardSceneCreateSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.CardSceneCreateSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void CardSceneCreateSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CardSceneCreateSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_CREATE_PVECARDRAID];
inline bool CardSceneCreateSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CardSceneCreateSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CardSceneCreateSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CardSceneCreateSocialCmd::clear_param() {
  param_ = 65;
  clear_has_param();
}
inline ::Cmd::SocialParam CardSceneCreateSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.CardSceneCreateSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void CardSceneCreateSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CardSceneCreateSocialCmd.param)
}

// optional uint64 userid = 3;
inline bool CardSceneCreateSocialCmd::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CardSceneCreateSocialCmd::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CardSceneCreateSocialCmd::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CardSceneCreateSocialCmd::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
  clear_has_userid();
}
inline ::google::protobuf::uint64 CardSceneCreateSocialCmd::userid() const {
  // @@protoc_insertion_point(field_get:Cmd.CardSceneCreateSocialCmd.userid)
  return userid_;
}
inline void CardSceneCreateSocialCmd::set_userid(::google::protobuf::uint64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CardSceneCreateSocialCmd.userid)
}

// optional uint64 teamid = 4 [default = 0];
inline bool CardSceneCreateSocialCmd::has_teamid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CardSceneCreateSocialCmd::set_has_teamid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CardSceneCreateSocialCmd::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CardSceneCreateSocialCmd::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 CardSceneCreateSocialCmd::teamid() const {
  // @@protoc_insertion_point(field_get:Cmd.CardSceneCreateSocialCmd.teamid)
  return teamid_;
}
inline void CardSceneCreateSocialCmd::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CardSceneCreateSocialCmd.teamid)
}

// optional uint32 configid = 5 [default = 0];
inline bool CardSceneCreateSocialCmd::has_configid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CardSceneCreateSocialCmd::set_has_configid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CardSceneCreateSocialCmd::clear_has_configid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CardSceneCreateSocialCmd::clear_configid() {
  configid_ = 0u;
  clear_has_configid();
}
inline ::google::protobuf::uint32 CardSceneCreateSocialCmd::configid() const {
  // @@protoc_insertion_point(field_get:Cmd.CardSceneCreateSocialCmd.configid)
  return configid_;
}
inline void CardSceneCreateSocialCmd::set_configid(::google::protobuf::uint32 value) {
  set_has_configid();
  configid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CardSceneCreateSocialCmd.configid)
}

// -------------------------------------------------------------------

// CardSceneSyncSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool CardSceneSyncSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CardSceneSyncSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CardSceneSyncSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CardSceneSyncSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command CardSceneSyncSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.CardSceneSyncSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void CardSceneSyncSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CardSceneSyncSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_PVECARD_SCENEINFO];
inline bool CardSceneSyncSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CardSceneSyncSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CardSceneSyncSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CardSceneSyncSocialCmd::clear_param() {
  param_ = 66;
  clear_has_param();
}
inline ::Cmd::SocialParam CardSceneSyncSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.CardSceneSyncSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void CardSceneSyncSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CardSceneSyncSocialCmd.param)
}

// optional uint64 teamid = 3 [default = 0];
inline bool CardSceneSyncSocialCmd::has_teamid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CardSceneSyncSocialCmd::set_has_teamid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CardSceneSyncSocialCmd::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CardSceneSyncSocialCmd::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 CardSceneSyncSocialCmd::teamid() const {
  // @@protoc_insertion_point(field_get:Cmd.CardSceneSyncSocialCmd.teamid)
  return teamid_;
}
inline void CardSceneSyncSocialCmd::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CardSceneSyncSocialCmd.teamid)
}

// optional bool open = 4 [default = false];
inline bool CardSceneSyncSocialCmd::has_open() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CardSceneSyncSocialCmd::set_has_open() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CardSceneSyncSocialCmd::clear_has_open() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CardSceneSyncSocialCmd::clear_open() {
  open_ = false;
  clear_has_open();
}
inline bool CardSceneSyncSocialCmd::open() const {
  // @@protoc_insertion_point(field_get:Cmd.CardSceneSyncSocialCmd.open)
  return open_;
}
inline void CardSceneSyncSocialCmd::set_open(bool value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CardSceneSyncSocialCmd.open)
}

// -------------------------------------------------------------------

// ModifyDepositSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool ModifyDepositSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModifyDepositSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModifyDepositSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModifyDepositSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command ModifyDepositSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ModifyDepositSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ModifyDepositSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ModifyDepositSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_MODIFY_DEPOSIT];
inline bool ModifyDepositSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModifyDepositSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModifyDepositSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModifyDepositSocialCmd::clear_param() {
  param_ = 98;
  clear_has_param();
}
inline ::Cmd::SocialParam ModifyDepositSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ModifyDepositSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void ModifyDepositSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ModifyDepositSocialCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool ModifyDepositSocialCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ModifyDepositSocialCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ModifyDepositSocialCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ModifyDepositSocialCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ModifyDepositSocialCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.ModifyDepositSocialCmd.charid)
  return charid_;
}
inline void ModifyDepositSocialCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ModifyDepositSocialCmd.charid)
}

// optional string command = 4;
inline bool ModifyDepositSocialCmd::has_command() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ModifyDepositSocialCmd::set_has_command() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ModifyDepositSocialCmd::clear_has_command() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ModifyDepositSocialCmd::clear_command() {
  if (command_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    command_->clear();
  }
  clear_has_command();
}
inline const ::std::string& ModifyDepositSocialCmd::command() const {
  // @@protoc_insertion_point(field_get:Cmd.ModifyDepositSocialCmd.command)
  return *command_;
}
inline void ModifyDepositSocialCmd::set_command(const ::std::string& value) {
  set_has_command();
  if (command_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    command_ = new ::std::string;
  }
  command_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.ModifyDepositSocialCmd.command)
}
inline void ModifyDepositSocialCmd::set_command(const char* value) {
  set_has_command();
  if (command_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    command_ = new ::std::string;
  }
  command_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.ModifyDepositSocialCmd.command)
}
inline void ModifyDepositSocialCmd::set_command(const char* value, size_t size) {
  set_has_command();
  if (command_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    command_ = new ::std::string;
  }
  command_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.ModifyDepositSocialCmd.command)
}
inline ::std::string* ModifyDepositSocialCmd::mutable_command() {
  set_has_command();
  if (command_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    command_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.ModifyDepositSocialCmd.command)
  return command_;
}
inline ::std::string* ModifyDepositSocialCmd::release_command() {
  clear_has_command();
  if (command_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = command_;
    command_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ModifyDepositSocialCmd::set_allocated_command(::std::string* command) {
  if (command_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete command_;
  }
  if (command) {
    set_has_command();
    command_ = command;
  } else {
    clear_has_command();
    command_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ModifyDepositSocialCmd.command)
}

// -------------------------------------------------------------------

// TeamRaidSceneCreateSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool TeamRaidSceneCreateSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRaidSceneCreateSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRaidSceneCreateSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRaidSceneCreateSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command TeamRaidSceneCreateSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamRaidSceneCreateSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TeamRaidSceneCreateSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamRaidSceneCreateSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_CREATE_TEAMRAID];
inline bool TeamRaidSceneCreateSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRaidSceneCreateSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRaidSceneCreateSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRaidSceneCreateSocialCmd::clear_param() {
  param_ = 96;
  clear_has_param();
}
inline ::Cmd::SocialParam TeamRaidSceneCreateSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamRaidSceneCreateSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void TeamRaidSceneCreateSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamRaidSceneCreateSocialCmd.param)
}

// optional .Cmd.SocialUser user = 3;
inline bool TeamRaidSceneCreateSocialCmd::has_user() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamRaidSceneCreateSocialCmd::set_has_user() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamRaidSceneCreateSocialCmd::clear_has_user() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamRaidSceneCreateSocialCmd::clear_user() {
  if (user_ != NULL) user_->::Cmd::SocialUser::Clear();
  clear_has_user();
}
inline const ::Cmd::SocialUser& TeamRaidSceneCreateSocialCmd::user() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamRaidSceneCreateSocialCmd.user)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
inline ::Cmd::SocialUser* TeamRaidSceneCreateSocialCmd::mutable_user() {
  set_has_user();
  if (user_ == NULL) user_ = new ::Cmd::SocialUser;
  // @@protoc_insertion_point(field_mutable:Cmd.TeamRaidSceneCreateSocialCmd.user)
  return user_;
}
inline ::Cmd::SocialUser* TeamRaidSceneCreateSocialCmd::release_user() {
  clear_has_user();
  ::Cmd::SocialUser* temp = user_;
  user_ = NULL;
  return temp;
}
inline void TeamRaidSceneCreateSocialCmd::set_allocated_user(::Cmd::SocialUser* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TeamRaidSceneCreateSocialCmd.user)
}

// optional uint64 teamid = 4 [default = 0];
inline bool TeamRaidSceneCreateSocialCmd::has_teamid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamRaidSceneCreateSocialCmd::set_has_teamid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamRaidSceneCreateSocialCmd::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamRaidSceneCreateSocialCmd::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TeamRaidSceneCreateSocialCmd::teamid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamRaidSceneCreateSocialCmd.teamid)
  return teamid_;
}
inline void TeamRaidSceneCreateSocialCmd::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamRaidSceneCreateSocialCmd.teamid)
}

// optional uint32 raid_type = 5 [default = 0];
inline bool TeamRaidSceneCreateSocialCmd::has_raid_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TeamRaidSceneCreateSocialCmd::set_has_raid_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TeamRaidSceneCreateSocialCmd::clear_has_raid_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TeamRaidSceneCreateSocialCmd::clear_raid_type() {
  raid_type_ = 0u;
  clear_has_raid_type();
}
inline ::google::protobuf::uint32 TeamRaidSceneCreateSocialCmd::raid_type() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamRaidSceneCreateSocialCmd.raid_type)
  return raid_type_;
}
inline void TeamRaidSceneCreateSocialCmd::set_raid_type(::google::protobuf::uint32 value) {
  set_has_raid_type();
  raid_type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamRaidSceneCreateSocialCmd.raid_type)
}

// -------------------------------------------------------------------

// TeamRaidSceneSyncSocialCmd

// optional .Cmd.Command cmd = 1 [default = SOCIAL_PROTOCMD];
inline bool TeamRaidSceneSyncSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRaidSceneSyncSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRaidSceneSyncSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRaidSceneSyncSocialCmd::clear_cmd() {
  cmd_ = 208;
  clear_has_cmd();
}
inline ::Cmd::Command TeamRaidSceneSyncSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamRaidSceneSyncSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TeamRaidSceneSyncSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamRaidSceneSyncSocialCmd.cmd)
}

// optional .Cmd.SocialParam param = 2 [default = SOCIALPARAM_SYNC_TEAMRAID];
inline bool TeamRaidSceneSyncSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRaidSceneSyncSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRaidSceneSyncSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRaidSceneSyncSocialCmd::clear_param() {
  param_ = 97;
  clear_has_param();
}
inline ::Cmd::SocialParam TeamRaidSceneSyncSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamRaidSceneSyncSocialCmd.param)
  return static_cast< ::Cmd::SocialParam >(param_);
}
inline void TeamRaidSceneSyncSocialCmd::set_param(::Cmd::SocialParam value) {
  assert(::Cmd::SocialParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamRaidSceneSyncSocialCmd.param)
}

// optional uint64 teamid = 3 [default = 0];
inline bool TeamRaidSceneSyncSocialCmd::has_teamid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamRaidSceneSyncSocialCmd::set_has_teamid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamRaidSceneSyncSocialCmd::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamRaidSceneSyncSocialCmd::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TeamRaidSceneSyncSocialCmd::teamid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamRaidSceneSyncSocialCmd.teamid)
  return teamid_;
}
inline void TeamRaidSceneSyncSocialCmd::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamRaidSceneSyncSocialCmd.teamid)
}

// optional bool open = 4 [default = false];
inline bool TeamRaidSceneSyncSocialCmd::has_open() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamRaidSceneSyncSocialCmd::set_has_open() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamRaidSceneSyncSocialCmd::clear_has_open() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamRaidSceneSyncSocialCmd::clear_open() {
  open_ = false;
  clear_has_open();
}
inline bool TeamRaidSceneSyncSocialCmd::open() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamRaidSceneSyncSocialCmd.open)
  return open_;
}
inline void TeamRaidSceneSyncSocialCmd::set_open(bool value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamRaidSceneSyncSocialCmd.open)
}

// optional uint32 raid_type = 5 [default = 0];
inline bool TeamRaidSceneSyncSocialCmd::has_raid_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TeamRaidSceneSyncSocialCmd::set_has_raid_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TeamRaidSceneSyncSocialCmd::clear_has_raid_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TeamRaidSceneSyncSocialCmd::clear_raid_type() {
  raid_type_ = 0u;
  clear_has_raid_type();
}
inline ::google::protobuf::uint32 TeamRaidSceneSyncSocialCmd::raid_type() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamRaidSceneSyncSocialCmd.raid_type)
  return raid_type_;
}
inline void TeamRaidSceneSyncSocialCmd::set_raid_type(::google::protobuf::uint32 value) {
  set_has_raid_type();
  raid_type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamRaidSceneSyncSocialCmd.raid_type)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cmd

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Cmd::SocialParam> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::SocialParam>() {
  return ::Cmd::SocialParam_descriptor();
}
template <> struct is_proto_enum< ::Cmd::ECmdType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::ECmdType>() {
  return ::Cmd::ECmdType_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EDOJOSTATE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EDOJOSTATE>() {
  return ::Cmd::EDOJOSTATE_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EDir> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EDir>() {
  return ::Cmd::EDir_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SocialCmd_2eproto__INCLUDED
