// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GateSuper.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "GateSuper.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Cmd {

namespace {

const ::google::protobuf::Descriptor* GateToSuperUserNum_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GateToSuperUserNum_reflection_ = NULL;
const ::google::protobuf::Descriptor* PushMsgGateSuperCmd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PushMsgGateSuperCmd_reflection_ = NULL;
const ::google::protobuf::Descriptor* AlterMsgGateSuperCmd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AlterMsgGateSuperCmd_reflection_ = NULL;
const ::google::protobuf::Descriptor* PushTyrantDbGateSuperCmd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PushTyrantDbGateSuperCmd_reflection_ = NULL;
const ::google::protobuf::Descriptor* ForwardToGateUserCmd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ForwardToGateUserCmd_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* GateParam_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EPushMsg_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_GateSuper_2eproto() {
  protobuf_AddDesc_GateSuper_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "GateSuper.proto");
  GOOGLE_CHECK(file != NULL);
  GateToSuperUserNum_descriptor_ = file->message_type(0);
  static const int GateToSuperUserNum_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GateToSuperUserNum, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GateToSuperUserNum, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GateToSuperUserNum, num_),
  };
  GateToSuperUserNum_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GateToSuperUserNum_descriptor_,
      GateToSuperUserNum::default_instance_,
      GateToSuperUserNum_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GateToSuperUserNum, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GateToSuperUserNum, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GateToSuperUserNum));
  PushMsgGateSuperCmd_descriptor_ = file->message_type(1);
  static const int PushMsgGateSuperCmd_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushMsgGateSuperCmd, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushMsgGateSuperCmd, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushMsgGateSuperCmd, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushMsgGateSuperCmd, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushMsgGateSuperCmd, msg_),
  };
  PushMsgGateSuperCmd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PushMsgGateSuperCmd_descriptor_,
      PushMsgGateSuperCmd::default_instance_,
      PushMsgGateSuperCmd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushMsgGateSuperCmd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushMsgGateSuperCmd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PushMsgGateSuperCmd));
  AlterMsgGateSuperCmd_descriptor_ = file->message_type(2);
  static const int AlterMsgGateSuperCmd_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlterMsgGateSuperCmd, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlterMsgGateSuperCmd, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlterMsgGateSuperCmd, event_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlterMsgGateSuperCmd, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlterMsgGateSuperCmd, msg_),
  };
  AlterMsgGateSuperCmd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AlterMsgGateSuperCmd_descriptor_,
      AlterMsgGateSuperCmd::default_instance_,
      AlterMsgGateSuperCmd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlterMsgGateSuperCmd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlterMsgGateSuperCmd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AlterMsgGateSuperCmd));
  PushTyrantDbGateSuperCmd_descriptor_ = file->message_type(3);
  static const int PushTyrantDbGateSuperCmd_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushTyrantDbGateSuperCmd, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushTyrantDbGateSuperCmd, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushTyrantDbGateSuperCmd, accid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushTyrantDbGateSuperCmd, charid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushTyrantDbGateSuperCmd, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushTyrantDbGateSuperCmd, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushTyrantDbGateSuperCmd, itemcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushTyrantDbGateSuperCmd, productid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushTyrantDbGateSuperCmd, chargetype_),
  };
  PushTyrantDbGateSuperCmd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PushTyrantDbGateSuperCmd_descriptor_,
      PushTyrantDbGateSuperCmd::default_instance_,
      PushTyrantDbGateSuperCmd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushTyrantDbGateSuperCmd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushTyrantDbGateSuperCmd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PushTyrantDbGateSuperCmd));
  ForwardToGateUserCmd_descriptor_ = file->message_type(4);
  static const int ForwardToGateUserCmd_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForwardToGateUserCmd, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForwardToGateUserCmd, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForwardToGateUserCmd, accids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForwardToGateUserCmd, data_),
  };
  ForwardToGateUserCmd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ForwardToGateUserCmd_descriptor_,
      ForwardToGateUserCmd::default_instance_,
      ForwardToGateUserCmd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForwardToGateUserCmd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForwardToGateUserCmd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ForwardToGateUserCmd));
  GateParam_descriptor_ = file->enum_type(0);
  EPushMsg_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_GateSuper_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GateToSuperUserNum_descriptor_, &GateToSuperUserNum::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PushMsgGateSuperCmd_descriptor_, &PushMsgGateSuperCmd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AlterMsgGateSuperCmd_descriptor_, &AlterMsgGateSuperCmd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PushTyrantDbGateSuperCmd_descriptor_, &PushTyrantDbGateSuperCmd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ForwardToGateUserCmd_descriptor_, &ForwardToGateUserCmd::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_GateSuper_2eproto() {
  delete GateToSuperUserNum::default_instance_;
  delete GateToSuperUserNum_reflection_;
  delete PushMsgGateSuperCmd::default_instance_;
  delete PushMsgGateSuperCmd_reflection_;
  delete AlterMsgGateSuperCmd::default_instance_;
  delete AlterMsgGateSuperCmd_reflection_;
  delete PushTyrantDbGateSuperCmd::default_instance_;
  delete PushTyrantDbGateSuperCmd_reflection_;
  delete ForwardToGateUserCmd::default_instance_;
  delete ForwardToGateUserCmd_reflection_;
}

void protobuf_AddDesc_GateSuper_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Cmd::protobuf_AddDesc_xCmd_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017GateSuper.proto\022\003Cmd\032\nxCmd.proto\"\213\001\n\022G"
    "ateToSuperUserNum\022.\n\003cmd\030\001 \001(\0162\014.Cmd.Com"
    "mand:\023GATE_SUPER_PROTOCMD\0225\n\005param\030\002 \001(\016"
    "2\016.Cmd.GateParam:\026GATE_SUPER_USERNUM_CMD"
    "\022\016\n\003num\030\003 \001(\r:\0010\"\303\001\n\023PushMsgGateSuperCmd"
    "\022.\n\003cmd\030\001 \001(\0162\014.Cmd.Command:\023GATE_SUPER_"
    "PROTOCMD\0225\n\005param\030\002 \001(\0162\016.Cmd.GateParam:"
    "\026GATEPARAM_PUSHOVER_MSG\022)\n\004type\030\003 \001(\0162\r."
    "Cmd.EPushMsg:\014EPUSHMSG_MIN\022\r\n\005title\030\004 \001("
    "\t\022\013\n\003msg\030\005 \001(\t\"\302\001\n\024AlterMsgGateSuperCmd\022"
    ".\n\003cmd\030\001 \001(\0162\014.Cmd.Command:\023GATE_SUPER_P"
    "ROTOCMD\0222\n\005param\030\002 \001(\0162\016.Cmd.GateParam:\023"
    "GATEPARAM_ALTER_MSG\022*\n\005event\030\003 \001(\0162\r.Cmd"
    ".EPushMsg:\014EPUSHMSG_MIN\022\r\n\005title\030\004 \001(\t\022\013"
    "\n\003msg\030\005 \001(\t\"\375\001\n\030PushTyrantDbGateSuperCmd"
    "\022.\n\003cmd\030\001 \001(\0162\014.Cmd.Command:\023GATE_SUPER_"
    "PROTOCMD\0227\n\005param\030\002 \001(\0162\016.Cmd.GateParam:"
    "\030GATEPARAM_PUSH_TYRANT_DB\022\r\n\005accid\030\003 \001(\r"
    "\022\016\n\006charid\030\004 \001(\004\022\017\n\007orderid\030\005 \001(\t\022\016\n\006amo"
    "unt\030\006 \001(\r\022\021\n\titemcount\030\007 \001(\r\022\021\n\tproducti"
    "d\030\010 \001(\t\022\022\n\nchargetype\030\t \001(\t\"\242\001\n\024ForwardT"
    "oGateUserCmd\022.\n\003cmd\030\001 \001(\0162\014.Cmd.Command:"
    "\023GATE_SUPER_PROTOCMD\022<\n\005param\030\002 \001(\0162\016.Cm"
    "d.GateParam:\035GATEPARAM_FORWARD_TO_GATEUS"
    "ER\022\016\n\006accids\030\003 \003(\004\022\014\n\004data\030\004 \001(\014*\235\001\n\tGat"
    "eParam\022\032\n\026GATE_SUPER_USERNUM_CMD\020\001\022\032\n\026GA"
    "TEPARAM_PUSHOVER_MSG\020\002\022\027\n\023GATEPARAM_ALTE"
    "R_MSG\020\003\022\034\n\030GATEPARAM_PUSH_TYRANT_DB\020\004\022!\n"
    "\035GATEPARAM_FORWARD_TO_GATEUSER\020\005*\250\001\n\010EPu"
    "shMsg\022\020\n\014EPUSHMSG_MIN\020\000\022\020\n\014EPUSHMSG_MSG\020"
    "\001\022\026\n\022EPUSHMSG_CORE_DUMP\020\002\022\026\n\022EPUSHMSG_SH"
    "OP_SELL\020\003\022\031\n\025EPUSHMSG_MESSAGE_STAT\020\004\022\033\n\027"
    "EPUSHMSG_TEMP_PACK_FULL\020\005\022\020\n\014EPUSHMSG_MA"
    "X\020\006", 1323);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GateSuper.proto", &protobuf_RegisterTypes);
  GateToSuperUserNum::default_instance_ = new GateToSuperUserNum();
  PushMsgGateSuperCmd::default_instance_ = new PushMsgGateSuperCmd();
  AlterMsgGateSuperCmd::default_instance_ = new AlterMsgGateSuperCmd();
  PushTyrantDbGateSuperCmd::default_instance_ = new PushTyrantDbGateSuperCmd();
  ForwardToGateUserCmd::default_instance_ = new ForwardToGateUserCmd();
  GateToSuperUserNum::default_instance_->InitAsDefaultInstance();
  PushMsgGateSuperCmd::default_instance_->InitAsDefaultInstance();
  AlterMsgGateSuperCmd::default_instance_->InitAsDefaultInstance();
  PushTyrantDbGateSuperCmd::default_instance_->InitAsDefaultInstance();
  ForwardToGateUserCmd::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_GateSuper_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_GateSuper_2eproto {
  StaticDescriptorInitializer_GateSuper_2eproto() {
    protobuf_AddDesc_GateSuper_2eproto();
  }
} static_descriptor_initializer_GateSuper_2eproto_;
const ::google::protobuf::EnumDescriptor* GateParam_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GateParam_descriptor_;
}
bool GateParam_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EPushMsg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EPushMsg_descriptor_;
}
bool EPushMsg_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int GateToSuperUserNum::kCmdFieldNumber;
const int GateToSuperUserNum::kParamFieldNumber;
const int GateToSuperUserNum::kNumFieldNumber;
#endif  // !_MSC_VER

GateToSuperUserNum::GateToSuperUserNum()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.GateToSuperUserNum)
}

void GateToSuperUserNum::InitAsDefaultInstance() {
}

GateToSuperUserNum::GateToSuperUserNum(const GateToSuperUserNum& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.GateToSuperUserNum)
}

void GateToSuperUserNum::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 205;
  param_ = 1;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GateToSuperUserNum::~GateToSuperUserNum() {
  // @@protoc_insertion_point(destructor:Cmd.GateToSuperUserNum)
  SharedDtor();
}

void GateToSuperUserNum::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GateToSuperUserNum::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GateToSuperUserNum::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GateToSuperUserNum_descriptor_;
}

const GateToSuperUserNum& GateToSuperUserNum::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GateSuper_2eproto();
  return *default_instance_;
}

GateToSuperUserNum* GateToSuperUserNum::default_instance_ = NULL;

GateToSuperUserNum* GateToSuperUserNum::New() const {
  return new GateToSuperUserNum;
}

void GateToSuperUserNum::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    cmd_ = 205;
    param_ = 1;
    num_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GateToSuperUserNum::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.GateToSuperUserNum)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.Command cmd = 1 [default = GATE_SUPER_PROTOCMD];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::Command_IsValid(value)) {
            set_cmd(static_cast< ::Cmd::Command >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_param;
        break;
      }

      // optional .Cmd.GateParam param = 2 [default = GATE_SUPER_USERNUM_CMD];
      case 2: {
        if (tag == 16) {
         parse_param:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::GateParam_IsValid(value)) {
            set_param(static_cast< ::Cmd::GateParam >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_num;
        break;
      }

      // optional uint32 num = 3 [default = 0];
      case 3: {
        if (tag == 24) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.GateToSuperUserNum)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.GateToSuperUserNum)
  return false;
#undef DO_
}

void GateToSuperUserNum::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.GateToSuperUserNum)
  // optional .Cmd.Command cmd = 1 [default = GATE_SUPER_PROTOCMD];
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional .Cmd.GateParam param = 2 [default = GATE_SUPER_USERNUM_CMD];
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->param(), output);
  }

  // optional uint32 num = 3 [default = 0];
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.GateToSuperUserNum)
}

::google::protobuf::uint8* GateToSuperUserNum::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.GateToSuperUserNum)
  // optional .Cmd.Command cmd = 1 [default = GATE_SUPER_PROTOCMD];
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional .Cmd.GateParam param = 2 [default = GATE_SUPER_USERNUM_CMD];
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->param(), target);
  }

  // optional uint32 num = 3 [default = 0];
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.GateToSuperUserNum)
  return target;
}

int GateToSuperUserNum::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.Command cmd = 1 [default = GATE_SUPER_PROTOCMD];
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
    }

    // optional .Cmd.GateParam param = 2 [default = GATE_SUPER_USERNUM_CMD];
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->param());
    }

    // optional uint32 num = 3 [default = 0];
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GateToSuperUserNum::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GateToSuperUserNum* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GateToSuperUserNum*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GateToSuperUserNum::MergeFrom(const GateToSuperUserNum& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GateToSuperUserNum::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GateToSuperUserNum::CopyFrom(const GateToSuperUserNum& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GateToSuperUserNum::IsInitialized() const {

  return true;
}

void GateToSuperUserNum::Swap(GateToSuperUserNum* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(param_, other->param_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GateToSuperUserNum::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GateToSuperUserNum_descriptor_;
  metadata.reflection = GateToSuperUserNum_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PushMsgGateSuperCmd::kCmdFieldNumber;
const int PushMsgGateSuperCmd::kParamFieldNumber;
const int PushMsgGateSuperCmd::kTypeFieldNumber;
const int PushMsgGateSuperCmd::kTitleFieldNumber;
const int PushMsgGateSuperCmd::kMsgFieldNumber;
#endif  // !_MSC_VER

PushMsgGateSuperCmd::PushMsgGateSuperCmd()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.PushMsgGateSuperCmd)
}

void PushMsgGateSuperCmd::InitAsDefaultInstance() {
}

PushMsgGateSuperCmd::PushMsgGateSuperCmd(const PushMsgGateSuperCmd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.PushMsgGateSuperCmd)
}

void PushMsgGateSuperCmd::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  cmd_ = 205;
  param_ = 2;
  type_ = 0;
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PushMsgGateSuperCmd::~PushMsgGateSuperCmd() {
  // @@protoc_insertion_point(destructor:Cmd.PushMsgGateSuperCmd)
  SharedDtor();
}

void PushMsgGateSuperCmd::SharedDtor() {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_;
  }
  if (this != default_instance_) {
  }
}

void PushMsgGateSuperCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PushMsgGateSuperCmd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PushMsgGateSuperCmd_descriptor_;
}

const PushMsgGateSuperCmd& PushMsgGateSuperCmd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GateSuper_2eproto();
  return *default_instance_;
}

PushMsgGateSuperCmd* PushMsgGateSuperCmd::default_instance_ = NULL;

PushMsgGateSuperCmd* PushMsgGateSuperCmd::New() const {
  return new PushMsgGateSuperCmd;
}

void PushMsgGateSuperCmd::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    cmd_ = 205;
    param_ = 2;
    type_ = 0;
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        title_->clear();
      }
    }
    if (has_msg()) {
      if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        msg_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PushMsgGateSuperCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.PushMsgGateSuperCmd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.Command cmd = 1 [default = GATE_SUPER_PROTOCMD];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::Command_IsValid(value)) {
            set_cmd(static_cast< ::Cmd::Command >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_param;
        break;
      }

      // optional .Cmd.GateParam param = 2 [default = GATEPARAM_PUSHOVER_MSG];
      case 2: {
        if (tag == 16) {
         parse_param:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::GateParam_IsValid(value)) {
            set_param(static_cast< ::Cmd::GateParam >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // optional .Cmd.EPushMsg type = 3 [default = EPUSHMSG_MIN];
      case 3: {
        if (tag == 24) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::EPushMsg_IsValid(value)) {
            set_type(static_cast< ::Cmd::EPushMsg >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_title;
        break;
      }

      // optional string title = 4;
      case 4: {
        if (tag == 34) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "title");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_msg;
        break;
      }

      // optional string msg = 5;
      case 5: {
        if (tag == 42) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.PushMsgGateSuperCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.PushMsgGateSuperCmd)
  return false;
#undef DO_
}

void PushMsgGateSuperCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.PushMsgGateSuperCmd)
  // optional .Cmd.Command cmd = 1 [default = GATE_SUPER_PROTOCMD];
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional .Cmd.GateParam param = 2 [default = GATEPARAM_PUSHOVER_MSG];
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->param(), output);
  }

  // optional .Cmd.EPushMsg type = 3 [default = EPUSHMSG_MIN];
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // optional string title = 4;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->title(), output);
  }

  // optional string msg = 5;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->msg(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.PushMsgGateSuperCmd)
}

::google::protobuf::uint8* PushMsgGateSuperCmd::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.PushMsgGateSuperCmd)
  // optional .Cmd.Command cmd = 1 [default = GATE_SUPER_PROTOCMD];
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional .Cmd.GateParam param = 2 [default = GATEPARAM_PUSHOVER_MSG];
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->param(), target);
  }

  // optional .Cmd.EPushMsg type = 3 [default = EPUSHMSG_MIN];
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // optional string title = 4;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->title(), target);
  }

  // optional string msg = 5;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->msg(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.PushMsgGateSuperCmd)
  return target;
}

int PushMsgGateSuperCmd::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.Command cmd = 1 [default = GATE_SUPER_PROTOCMD];
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
    }

    // optional .Cmd.GateParam param = 2 [default = GATEPARAM_PUSHOVER_MSG];
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->param());
    }

    // optional .Cmd.EPushMsg type = 3 [default = EPUSHMSG_MIN];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional string title = 4;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string msg = 5;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PushMsgGateSuperCmd::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PushMsgGateSuperCmd* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PushMsgGateSuperCmd*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PushMsgGateSuperCmd::MergeFrom(const PushMsgGateSuperCmd& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_title()) {
      set_title(from.title());
    }
    if (from.has_msg()) {
      set_msg(from.msg());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PushMsgGateSuperCmd::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushMsgGateSuperCmd::CopyFrom(const PushMsgGateSuperCmd& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushMsgGateSuperCmd::IsInitialized() const {

  return true;
}

void PushMsgGateSuperCmd::Swap(PushMsgGateSuperCmd* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(param_, other->param_);
    std::swap(type_, other->type_);
    std::swap(title_, other->title_);
    std::swap(msg_, other->msg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PushMsgGateSuperCmd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PushMsgGateSuperCmd_descriptor_;
  metadata.reflection = PushMsgGateSuperCmd_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AlterMsgGateSuperCmd::kCmdFieldNumber;
const int AlterMsgGateSuperCmd::kParamFieldNumber;
const int AlterMsgGateSuperCmd::kEventFieldNumber;
const int AlterMsgGateSuperCmd::kTitleFieldNumber;
const int AlterMsgGateSuperCmd::kMsgFieldNumber;
#endif  // !_MSC_VER

AlterMsgGateSuperCmd::AlterMsgGateSuperCmd()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.AlterMsgGateSuperCmd)
}

void AlterMsgGateSuperCmd::InitAsDefaultInstance() {
}

AlterMsgGateSuperCmd::AlterMsgGateSuperCmd(const AlterMsgGateSuperCmd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.AlterMsgGateSuperCmd)
}

void AlterMsgGateSuperCmd::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  cmd_ = 205;
  param_ = 3;
  event_ = 0;
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AlterMsgGateSuperCmd::~AlterMsgGateSuperCmd() {
  // @@protoc_insertion_point(destructor:Cmd.AlterMsgGateSuperCmd)
  SharedDtor();
}

void AlterMsgGateSuperCmd::SharedDtor() {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_;
  }
  if (this != default_instance_) {
  }
}

void AlterMsgGateSuperCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlterMsgGateSuperCmd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AlterMsgGateSuperCmd_descriptor_;
}

const AlterMsgGateSuperCmd& AlterMsgGateSuperCmd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GateSuper_2eproto();
  return *default_instance_;
}

AlterMsgGateSuperCmd* AlterMsgGateSuperCmd::default_instance_ = NULL;

AlterMsgGateSuperCmd* AlterMsgGateSuperCmd::New() const {
  return new AlterMsgGateSuperCmd;
}

void AlterMsgGateSuperCmd::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    cmd_ = 205;
    param_ = 3;
    event_ = 0;
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        title_->clear();
      }
    }
    if (has_msg()) {
      if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        msg_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AlterMsgGateSuperCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.AlterMsgGateSuperCmd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.Command cmd = 1 [default = GATE_SUPER_PROTOCMD];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::Command_IsValid(value)) {
            set_cmd(static_cast< ::Cmd::Command >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_param;
        break;
      }

      // optional .Cmd.GateParam param = 2 [default = GATEPARAM_ALTER_MSG];
      case 2: {
        if (tag == 16) {
         parse_param:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::GateParam_IsValid(value)) {
            set_param(static_cast< ::Cmd::GateParam >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_event;
        break;
      }

      // optional .Cmd.EPushMsg event = 3 [default = EPUSHMSG_MIN];
      case 3: {
        if (tag == 24) {
         parse_event:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::EPushMsg_IsValid(value)) {
            set_event(static_cast< ::Cmd::EPushMsg >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_title;
        break;
      }

      // optional string title = 4;
      case 4: {
        if (tag == 34) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "title");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_msg;
        break;
      }

      // optional string msg = 5;
      case 5: {
        if (tag == 42) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.AlterMsgGateSuperCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.AlterMsgGateSuperCmd)
  return false;
#undef DO_
}

void AlterMsgGateSuperCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.AlterMsgGateSuperCmd)
  // optional .Cmd.Command cmd = 1 [default = GATE_SUPER_PROTOCMD];
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional .Cmd.GateParam param = 2 [default = GATEPARAM_ALTER_MSG];
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->param(), output);
  }

  // optional .Cmd.EPushMsg event = 3 [default = EPUSHMSG_MIN];
  if (has_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->event(), output);
  }

  // optional string title = 4;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->title(), output);
  }

  // optional string msg = 5;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->msg(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.AlterMsgGateSuperCmd)
}

::google::protobuf::uint8* AlterMsgGateSuperCmd::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.AlterMsgGateSuperCmd)
  // optional .Cmd.Command cmd = 1 [default = GATE_SUPER_PROTOCMD];
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional .Cmd.GateParam param = 2 [default = GATEPARAM_ALTER_MSG];
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->param(), target);
  }

  // optional .Cmd.EPushMsg event = 3 [default = EPUSHMSG_MIN];
  if (has_event()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->event(), target);
  }

  // optional string title = 4;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->title(), target);
  }

  // optional string msg = 5;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->msg(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.AlterMsgGateSuperCmd)
  return target;
}

int AlterMsgGateSuperCmd::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.Command cmd = 1 [default = GATE_SUPER_PROTOCMD];
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
    }

    // optional .Cmd.GateParam param = 2 [default = GATEPARAM_ALTER_MSG];
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->param());
    }

    // optional .Cmd.EPushMsg event = 3 [default = EPUSHMSG_MIN];
    if (has_event()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->event());
    }

    // optional string title = 4;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string msg = 5;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlterMsgGateSuperCmd::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AlterMsgGateSuperCmd* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AlterMsgGateSuperCmd*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AlterMsgGateSuperCmd::MergeFrom(const AlterMsgGateSuperCmd& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
    if (from.has_event()) {
      set_event(from.event());
    }
    if (from.has_title()) {
      set_title(from.title());
    }
    if (from.has_msg()) {
      set_msg(from.msg());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AlterMsgGateSuperCmd::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlterMsgGateSuperCmd::CopyFrom(const AlterMsgGateSuperCmd& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlterMsgGateSuperCmd::IsInitialized() const {

  return true;
}

void AlterMsgGateSuperCmd::Swap(AlterMsgGateSuperCmd* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(param_, other->param_);
    std::swap(event_, other->event_);
    std::swap(title_, other->title_);
    std::swap(msg_, other->msg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AlterMsgGateSuperCmd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AlterMsgGateSuperCmd_descriptor_;
  metadata.reflection = AlterMsgGateSuperCmd_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PushTyrantDbGateSuperCmd::kCmdFieldNumber;
const int PushTyrantDbGateSuperCmd::kParamFieldNumber;
const int PushTyrantDbGateSuperCmd::kAccidFieldNumber;
const int PushTyrantDbGateSuperCmd::kCharidFieldNumber;
const int PushTyrantDbGateSuperCmd::kOrderidFieldNumber;
const int PushTyrantDbGateSuperCmd::kAmountFieldNumber;
const int PushTyrantDbGateSuperCmd::kItemcountFieldNumber;
const int PushTyrantDbGateSuperCmd::kProductidFieldNumber;
const int PushTyrantDbGateSuperCmd::kChargetypeFieldNumber;
#endif  // !_MSC_VER

PushTyrantDbGateSuperCmd::PushTyrantDbGateSuperCmd()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.PushTyrantDbGateSuperCmd)
}

void PushTyrantDbGateSuperCmd::InitAsDefaultInstance() {
}

PushTyrantDbGateSuperCmd::PushTyrantDbGateSuperCmd(const PushTyrantDbGateSuperCmd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.PushTyrantDbGateSuperCmd)
}

void PushTyrantDbGateSuperCmd::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  cmd_ = 205;
  param_ = 4;
  accid_ = 0u;
  charid_ = GOOGLE_ULONGLONG(0);
  orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = 0u;
  itemcount_ = 0u;
  productid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chargetype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PushTyrantDbGateSuperCmd::~PushTyrantDbGateSuperCmd() {
  // @@protoc_insertion_point(destructor:Cmd.PushTyrantDbGateSuperCmd)
  SharedDtor();
}

void PushTyrantDbGateSuperCmd::SharedDtor() {
  if (orderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete orderid_;
  }
  if (productid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete productid_;
  }
  if (chargetype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete chargetype_;
  }
  if (this != default_instance_) {
  }
}

void PushTyrantDbGateSuperCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PushTyrantDbGateSuperCmd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PushTyrantDbGateSuperCmd_descriptor_;
}

const PushTyrantDbGateSuperCmd& PushTyrantDbGateSuperCmd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GateSuper_2eproto();
  return *default_instance_;
}

PushTyrantDbGateSuperCmd* PushTyrantDbGateSuperCmd::default_instance_ = NULL;

PushTyrantDbGateSuperCmd* PushTyrantDbGateSuperCmd::New() const {
  return new PushTyrantDbGateSuperCmd;
}

void PushTyrantDbGateSuperCmd::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PushTyrantDbGateSuperCmd*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(charid_, amount_);
    cmd_ = 205;
    param_ = 4;
    if (has_orderid()) {
      if (orderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        orderid_->clear();
      }
    }
    itemcount_ = 0u;
    if (has_productid()) {
      if (productid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        productid_->clear();
      }
    }
  }
  if (has_chargetype()) {
    if (chargetype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      chargetype_->clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PushTyrantDbGateSuperCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.PushTyrantDbGateSuperCmd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.Command cmd = 1 [default = GATE_SUPER_PROTOCMD];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::Command_IsValid(value)) {
            set_cmd(static_cast< ::Cmd::Command >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_param;
        break;
      }

      // optional .Cmd.GateParam param = 2 [default = GATEPARAM_PUSH_TYRANT_DB];
      case 2: {
        if (tag == 16) {
         parse_param:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::GateParam_IsValid(value)) {
            set_param(static_cast< ::Cmd::GateParam >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_accid;
        break;
      }

      // optional uint32 accid = 3;
      case 3: {
        if (tag == 24) {
         parse_accid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accid_)));
          set_has_accid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_charid;
        break;
      }

      // optional uint64 charid = 4;
      case 4: {
        if (tag == 32) {
         parse_charid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &charid_)));
          set_has_charid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_orderid;
        break;
      }

      // optional string orderid = 5;
      case 5: {
        if (tag == 42) {
         parse_orderid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orderid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->orderid().data(), this->orderid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "orderid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_amount;
        break;
      }

      // optional uint32 amount = 6;
      case 6: {
        if (tag == 48) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_itemcount;
        break;
      }

      // optional uint32 itemcount = 7;
      case 7: {
        if (tag == 56) {
         parse_itemcount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemcount_)));
          set_has_itemcount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_productid;
        break;
      }

      // optional string productid = 8;
      case 8: {
        if (tag == 66) {
         parse_productid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->productid().data(), this->productid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "productid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_chargetype;
        break;
      }

      // optional string chargetype = 9;
      case 9: {
        if (tag == 74) {
         parse_chargetype:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chargetype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chargetype().data(), this->chargetype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chargetype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.PushTyrantDbGateSuperCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.PushTyrantDbGateSuperCmd)
  return false;
#undef DO_
}

void PushTyrantDbGateSuperCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.PushTyrantDbGateSuperCmd)
  // optional .Cmd.Command cmd = 1 [default = GATE_SUPER_PROTOCMD];
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional .Cmd.GateParam param = 2 [default = GATEPARAM_PUSH_TYRANT_DB];
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->param(), output);
  }

  // optional uint32 accid = 3;
  if (has_accid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->accid(), output);
  }

  // optional uint64 charid = 4;
  if (has_charid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->charid(), output);
  }

  // optional string orderid = 5;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orderid().data(), this->orderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orderid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->orderid(), output);
  }

  // optional uint32 amount = 6;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->amount(), output);
  }

  // optional uint32 itemcount = 7;
  if (has_itemcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->itemcount(), output);
  }

  // optional string productid = 8;
  if (has_productid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->productid().data(), this->productid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "productid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->productid(), output);
  }

  // optional string chargetype = 9;
  if (has_chargetype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chargetype().data(), this->chargetype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chargetype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->chargetype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.PushTyrantDbGateSuperCmd)
}

::google::protobuf::uint8* PushTyrantDbGateSuperCmd::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.PushTyrantDbGateSuperCmd)
  // optional .Cmd.Command cmd = 1 [default = GATE_SUPER_PROTOCMD];
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional .Cmd.GateParam param = 2 [default = GATEPARAM_PUSH_TYRANT_DB];
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->param(), target);
  }

  // optional uint32 accid = 3;
  if (has_accid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->accid(), target);
  }

  // optional uint64 charid = 4;
  if (has_charid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->charid(), target);
  }

  // optional string orderid = 5;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orderid().data(), this->orderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orderid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->orderid(), target);
  }

  // optional uint32 amount = 6;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->amount(), target);
  }

  // optional uint32 itemcount = 7;
  if (has_itemcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->itemcount(), target);
  }

  // optional string productid = 8;
  if (has_productid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->productid().data(), this->productid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "productid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->productid(), target);
  }

  // optional string chargetype = 9;
  if (has_chargetype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chargetype().data(), this->chargetype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chargetype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->chargetype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.PushTyrantDbGateSuperCmd)
  return target;
}

int PushTyrantDbGateSuperCmd::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.Command cmd = 1 [default = GATE_SUPER_PROTOCMD];
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
    }

    // optional .Cmd.GateParam param = 2 [default = GATEPARAM_PUSH_TYRANT_DB];
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->param());
    }

    // optional uint32 accid = 3;
    if (has_accid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accid());
    }

    // optional uint64 charid = 4;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->charid());
    }

    // optional string orderid = 5;
    if (has_orderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->orderid());
    }

    // optional uint32 amount = 6;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->amount());
    }

    // optional uint32 itemcount = 7;
    if (has_itemcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemcount());
    }

    // optional string productid = 8;
    if (has_productid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->productid());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string chargetype = 9;
    if (has_chargetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->chargetype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PushTyrantDbGateSuperCmd::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PushTyrantDbGateSuperCmd* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PushTyrantDbGateSuperCmd*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PushTyrantDbGateSuperCmd::MergeFrom(const PushTyrantDbGateSuperCmd& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
    if (from.has_accid()) {
      set_accid(from.accid());
    }
    if (from.has_charid()) {
      set_charid(from.charid());
    }
    if (from.has_orderid()) {
      set_orderid(from.orderid());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
    if (from.has_itemcount()) {
      set_itemcount(from.itemcount());
    }
    if (from.has_productid()) {
      set_productid(from.productid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_chargetype()) {
      set_chargetype(from.chargetype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PushTyrantDbGateSuperCmd::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushTyrantDbGateSuperCmd::CopyFrom(const PushTyrantDbGateSuperCmd& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushTyrantDbGateSuperCmd::IsInitialized() const {

  return true;
}

void PushTyrantDbGateSuperCmd::Swap(PushTyrantDbGateSuperCmd* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(param_, other->param_);
    std::swap(accid_, other->accid_);
    std::swap(charid_, other->charid_);
    std::swap(orderid_, other->orderid_);
    std::swap(amount_, other->amount_);
    std::swap(itemcount_, other->itemcount_);
    std::swap(productid_, other->productid_);
    std::swap(chargetype_, other->chargetype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PushTyrantDbGateSuperCmd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PushTyrantDbGateSuperCmd_descriptor_;
  metadata.reflection = PushTyrantDbGateSuperCmd_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ForwardToGateUserCmd::kCmdFieldNumber;
const int ForwardToGateUserCmd::kParamFieldNumber;
const int ForwardToGateUserCmd::kAccidsFieldNumber;
const int ForwardToGateUserCmd::kDataFieldNumber;
#endif  // !_MSC_VER

ForwardToGateUserCmd::ForwardToGateUserCmd()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.ForwardToGateUserCmd)
}

void ForwardToGateUserCmd::InitAsDefaultInstance() {
}

ForwardToGateUserCmd::ForwardToGateUserCmd(const ForwardToGateUserCmd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.ForwardToGateUserCmd)
}

void ForwardToGateUserCmd::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  cmd_ = 205;
  param_ = 5;
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ForwardToGateUserCmd::~ForwardToGateUserCmd() {
  // @@protoc_insertion_point(destructor:Cmd.ForwardToGateUserCmd)
  SharedDtor();
}

void ForwardToGateUserCmd::SharedDtor() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void ForwardToGateUserCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ForwardToGateUserCmd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ForwardToGateUserCmd_descriptor_;
}

const ForwardToGateUserCmd& ForwardToGateUserCmd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GateSuper_2eproto();
  return *default_instance_;
}

ForwardToGateUserCmd* ForwardToGateUserCmd::default_instance_ = NULL;

ForwardToGateUserCmd* ForwardToGateUserCmd::New() const {
  return new ForwardToGateUserCmd;
}

void ForwardToGateUserCmd::Clear() {
  if (_has_bits_[0 / 32] & 11) {
    cmd_ = 205;
    param_ = 5;
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        data_->clear();
      }
    }
  }
  accids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ForwardToGateUserCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.ForwardToGateUserCmd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.Command cmd = 1 [default = GATE_SUPER_PROTOCMD];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::Command_IsValid(value)) {
            set_cmd(static_cast< ::Cmd::Command >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_param;
        break;
      }

      // optional .Cmd.GateParam param = 2 [default = GATEPARAM_FORWARD_TO_GATEUSER];
      case 2: {
        if (tag == 16) {
         parse_param:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::GateParam_IsValid(value)) {
            set_param(static_cast< ::Cmd::GateParam >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_accids;
        break;
      }

      // repeated uint64 accids = 3;
      case 3: {
        if (tag == 24) {
         parse_accids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 24, input, this->mutable_accids())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_accids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_accids;
        if (input->ExpectTag(34)) goto parse_data;
        break;
      }

      // optional bytes data = 4;
      case 4: {
        if (tag == 34) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.ForwardToGateUserCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.ForwardToGateUserCmd)
  return false;
#undef DO_
}

void ForwardToGateUserCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.ForwardToGateUserCmd)
  // optional .Cmd.Command cmd = 1 [default = GATE_SUPER_PROTOCMD];
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional .Cmd.GateParam param = 2 [default = GATEPARAM_FORWARD_TO_GATEUSER];
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->param(), output);
  }

  // repeated uint64 accids = 3;
  for (int i = 0; i < this->accids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      3, this->accids(i), output);
  }

  // optional bytes data = 4;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.ForwardToGateUserCmd)
}

::google::protobuf::uint8* ForwardToGateUserCmd::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.ForwardToGateUserCmd)
  // optional .Cmd.Command cmd = 1 [default = GATE_SUPER_PROTOCMD];
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional .Cmd.GateParam param = 2 [default = GATEPARAM_FORWARD_TO_GATEUSER];
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->param(), target);
  }

  // repeated uint64 accids = 3;
  for (int i = 0; i < this->accids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(3, this->accids(i), target);
  }

  // optional bytes data = 4;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.ForwardToGateUserCmd)
  return target;
}

int ForwardToGateUserCmd::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.Command cmd = 1 [default = GATE_SUPER_PROTOCMD];
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
    }

    // optional .Cmd.GateParam param = 2 [default = GATEPARAM_FORWARD_TO_GATEUSER];
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->param());
    }

    // optional bytes data = 4;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

  }
  // repeated uint64 accids = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->accids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->accids(i));
    }
    total_size += 1 * this->accids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ForwardToGateUserCmd::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ForwardToGateUserCmd* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ForwardToGateUserCmd*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ForwardToGateUserCmd::MergeFrom(const ForwardToGateUserCmd& from) {
  GOOGLE_CHECK_NE(&from, this);
  accids_.MergeFrom(from.accids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ForwardToGateUserCmd::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForwardToGateUserCmd::CopyFrom(const ForwardToGateUserCmd& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForwardToGateUserCmd::IsInitialized() const {

  return true;
}

void ForwardToGateUserCmd::Swap(ForwardToGateUserCmd* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(param_, other->param_);
    accids_.Swap(&other->accids_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ForwardToGateUserCmd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ForwardToGateUserCmd_descriptor_;
  metadata.reflection = ForwardToGateUserCmd_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cmd

// @@protoc_insertion_point(global_scope)
