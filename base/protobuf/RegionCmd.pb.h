// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RegionCmd.proto

#ifndef PROTOBUF_RegionCmd_2eproto__INCLUDED
#define PROTOBUF_RegionCmd_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "xCmd.pb.h"
// @@protoc_insertion_point(includes)

namespace Cmd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RegionCmd_2eproto();
void protobuf_AssignDesc_RegionCmd_2eproto();
void protobuf_ShutdownFile_RegionCmd_2eproto();

class RegistRegionCmd;

enum RegionParam {
  REGIST_REGION_CMD = 1
};
bool RegionParam_IsValid(int value);
const RegionParam RegionParam_MIN = REGIST_REGION_CMD;
const RegionParam RegionParam_MAX = REGIST_REGION_CMD;
const int RegionParam_ARRAYSIZE = RegionParam_MAX + 1;

const ::google::protobuf::EnumDescriptor* RegionParam_descriptor();
inline const ::std::string& RegionParam_Name(RegionParam value) {
  return ::google::protobuf::internal::NameOfEnum(
    RegionParam_descriptor(), value);
}
inline bool RegionParam_Parse(
    const ::std::string& name, RegionParam* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RegionParam>(
    RegionParam_descriptor(), name, value);
}
// ===================================================================

class RegistRegionCmd : public ::google::protobuf::Message {
 public:
  RegistRegionCmd();
  virtual ~RegistRegionCmd();

  RegistRegionCmd(const RegistRegionCmd& from);

  inline RegistRegionCmd& operator=(const RegistRegionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegistRegionCmd& default_instance();

  void Swap(RegistRegionCmd* other);

  // implements Message ----------------------------------------------

  RegistRegionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RegistRegionCmd& from);
  void MergeFrom(const RegistRegionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = REGION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.RegionParam param = 2 [default = REGIST_REGION_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::RegionParam param() const;
  inline void set_param(::Cmd::RegionParam value);

  // optional uint32 zoneid = 3 [default = 0];
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 3;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.RegistRegionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 zoneid_;
  friend void  protobuf_AddDesc_RegionCmd_2eproto();
  friend void protobuf_AssignDesc_RegionCmd_2eproto();
  friend void protobuf_ShutdownFile_RegionCmd_2eproto();

  void InitAsDefaultInstance();
  static RegistRegionCmd* default_instance_;
};
// ===================================================================


// ===================================================================

// RegistRegionCmd

// optional .Cmd.Command cmd = 1 [default = REGION_PROTOCMD];
inline bool RegistRegionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RegistRegionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RegistRegionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RegistRegionCmd::clear_cmd() {
  cmd_ = 206;
  clear_has_cmd();
}
inline ::Cmd::Command RegistRegionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.RegistRegionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void RegistRegionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RegistRegionCmd.cmd)
}

// optional .Cmd.RegionParam param = 2 [default = REGIST_REGION_CMD];
inline bool RegistRegionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RegistRegionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RegistRegionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RegistRegionCmd::clear_param() {
  param_ = 1;
  clear_has_param();
}
inline ::Cmd::RegionParam RegistRegionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.RegistRegionCmd.param)
  return static_cast< ::Cmd::RegionParam >(param_);
}
inline void RegistRegionCmd::set_param(::Cmd::RegionParam value) {
  assert(::Cmd::RegionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RegistRegionCmd.param)
}

// optional uint32 zoneid = 3 [default = 0];
inline bool RegistRegionCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RegistRegionCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RegistRegionCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RegistRegionCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RegistRegionCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Cmd.RegistRegionCmd.zoneid)
  return zoneid_;
}
inline void RegistRegionCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RegistRegionCmd.zoneid)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cmd

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Cmd::RegionParam> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::RegionParam>() {
  return ::Cmd::RegionParam_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RegionCmd_2eproto__INCLUDED
