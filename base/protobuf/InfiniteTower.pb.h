// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: InfiniteTower.proto

#ifndef PROTOBUF_InfiniteTower_2eproto__INCLUDED
#define PROTOBUF_InfiniteTower_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "xCmd.pb.h"
// @@protoc_insertion_point(includes)

namespace Cmd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_InfiniteTower_2eproto();
void protobuf_AssignDesc_InfiniteTower_2eproto();
void protobuf_ShutdownFile_InfiniteTower_2eproto();

class UserTowerLayer;
class UserTowerInfo;
class TeamTowerSummary;
class TeamTowerInfoCmd;
class TeamTowerSummaryCmd;
class TeamTowerInviteCmd;
class TeamTowerReplyCmd;
class EnterTower;
class UserTowerInfoCmd;
class TowerLayerSyncTowerCmd;
class TowerInfoCmd;

enum TowerParam {
  ETOWERPARAM_TEAMTOWERINFO = 1,
  ETOWERPARAM_TEAMTOWERSUMMARY = 2,
  ETOWERPARAM_INVITE = 3,
  ETOWERPARAM_REPLY = 4,
  ETOWERPARAM_ENTERTOWER = 5,
  ETOWERPARAM_USERTOWERINFO = 7,
  ETOWERPARAM_LAYER_SYNC = 8,
  ETOWERPARAM_TOWERINFO = 10
};
bool TowerParam_IsValid(int value);
const TowerParam TowerParam_MIN = ETOWERPARAM_TEAMTOWERINFO;
const TowerParam TowerParam_MAX = ETOWERPARAM_TOWERINFO;
const int TowerParam_ARRAYSIZE = TowerParam_MAX + 1;

const ::google::protobuf::EnumDescriptor* TowerParam_descriptor();
inline const ::std::string& TowerParam_Name(TowerParam value) {
  return ::google::protobuf::internal::NameOfEnum(
    TowerParam_descriptor(), value);
}
inline bool TowerParam_Parse(
    const ::std::string& name, TowerParam* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TowerParam>(
    TowerParam_descriptor(), name, value);
}
enum ETowerReply {
  ETOWERREPLY_AGREE = 1,
  ETOWERREPLY_DISAGREE = 2
};
bool ETowerReply_IsValid(int value);
const ETowerReply ETowerReply_MIN = ETOWERREPLY_AGREE;
const ETowerReply ETowerReply_MAX = ETOWERREPLY_DISAGREE;
const int ETowerReply_ARRAYSIZE = ETowerReply_MAX + 1;

const ::google::protobuf::EnumDescriptor* ETowerReply_descriptor();
inline const ::std::string& ETowerReply_Name(ETowerReply value) {
  return ::google::protobuf::internal::NameOfEnum(
    ETowerReply_descriptor(), value);
}
inline bool ETowerReply_Parse(
    const ::std::string& name, ETowerReply* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ETowerReply>(
    ETowerReply_descriptor(), name, value);
}
// ===================================================================

class UserTowerLayer : public ::google::protobuf::Message {
 public:
  UserTowerLayer();
  virtual ~UserTowerLayer();

  UserTowerLayer(const UserTowerLayer& from);

  inline UserTowerLayer& operator=(const UserTowerLayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserTowerLayer& default_instance();

  void Swap(UserTowerLayer* other);

  // implements Message ----------------------------------------------

  UserTowerLayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserTowerLayer& from);
  void MergeFrom(const UserTowerLayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 layer = 1 [default = 0];
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 1;
  inline ::google::protobuf::uint32 layer() const;
  inline void set_layer(::google::protobuf::uint32 value);

  // optional uint32 utime = 2 [default = 0];
  inline bool has_utime() const;
  inline void clear_utime();
  static const int kUtimeFieldNumber = 2;
  inline ::google::protobuf::uint32 utime() const;
  inline void set_utime(::google::protobuf::uint32 value);

  // optional bool rewarded = 3 [default = false];
  inline bool has_rewarded() const;
  inline void clear_rewarded();
  static const int kRewardedFieldNumber = 3;
  inline bool rewarded() const;
  inline void set_rewarded(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.UserTowerLayer)
 private:
  inline void set_has_layer();
  inline void clear_has_layer();
  inline void set_has_utime();
  inline void clear_has_utime();
  inline void set_has_rewarded();
  inline void clear_has_rewarded();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 layer_;
  ::google::protobuf::uint32 utime_;
  bool rewarded_;
  friend void  protobuf_AddDesc_InfiniteTower_2eproto();
  friend void protobuf_AssignDesc_InfiniteTower_2eproto();
  friend void protobuf_ShutdownFile_InfiniteTower_2eproto();

  void InitAsDefaultInstance();
  static UserTowerLayer* default_instance_;
};
// -------------------------------------------------------------------

class UserTowerInfo : public ::google::protobuf::Message {
 public:
  UserTowerInfo();
  virtual ~UserTowerInfo();

  UserTowerInfo(const UserTowerInfo& from);

  inline UserTowerInfo& operator=(const UserTowerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserTowerInfo& default_instance();

  void Swap(UserTowerInfo* other);

  // implements Message ----------------------------------------------

  UserTowerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserTowerInfo& from);
  void MergeFrom(const UserTowerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 oldmaxlayer = 1 [default = 0];
  inline bool has_oldmaxlayer() const;
  inline void clear_oldmaxlayer();
  static const int kOldmaxlayerFieldNumber = 1;
  inline ::google::protobuf::uint32 oldmaxlayer() const;
  inline void set_oldmaxlayer(::google::protobuf::uint32 value);

  // optional uint32 curmaxlayer = 2 [default = 0];
  inline bool has_curmaxlayer() const;
  inline void clear_curmaxlayer();
  static const int kCurmaxlayerFieldNumber = 2;
  inline ::google::protobuf::uint32 curmaxlayer() const;
  inline void set_curmaxlayer(::google::protobuf::uint32 value);

  // repeated .Cmd.UserTowerLayer layers = 3;
  inline int layers_size() const;
  inline void clear_layers();
  static const int kLayersFieldNumber = 3;
  inline const ::Cmd::UserTowerLayer& layers(int index) const;
  inline ::Cmd::UserTowerLayer* mutable_layers(int index);
  inline ::Cmd::UserTowerLayer* add_layers();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UserTowerLayer >&
      layers() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::UserTowerLayer >*
      mutable_layers();

  // optional uint32 maxlayer = 4 [default = 0];
  inline bool has_maxlayer() const;
  inline void clear_maxlayer();
  static const int kMaxlayerFieldNumber = 4;
  inline ::google::protobuf::uint32 maxlayer() const;
  inline void set_maxlayer(::google::protobuf::uint32 value);

  // optional uint32 record_layer = 5 [default = 0];
  inline bool has_record_layer() const;
  inline void clear_record_layer();
  static const int kRecordLayerFieldNumber = 5;
  inline ::google::protobuf::uint32 record_layer() const;
  inline void set_record_layer(::google::protobuf::uint32 value);

  // repeated .Cmd.UserTowerLayer everpasslayers = 6;
  inline int everpasslayers_size() const;
  inline void clear_everpasslayers();
  static const int kEverpasslayersFieldNumber = 6;
  inline const ::Cmd::UserTowerLayer& everpasslayers(int index) const;
  inline ::Cmd::UserTowerLayer* mutable_everpasslayers(int index);
  inline ::Cmd::UserTowerLayer* add_everpasslayers();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UserTowerLayer >&
      everpasslayers() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::UserTowerLayer >*
      mutable_everpasslayers();

  // @@protoc_insertion_point(class_scope:Cmd.UserTowerInfo)
 private:
  inline void set_has_oldmaxlayer();
  inline void clear_has_oldmaxlayer();
  inline void set_has_curmaxlayer();
  inline void clear_has_curmaxlayer();
  inline void set_has_maxlayer();
  inline void clear_has_maxlayer();
  inline void set_has_record_layer();
  inline void clear_has_record_layer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 oldmaxlayer_;
  ::google::protobuf::uint32 curmaxlayer_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::UserTowerLayer > layers_;
  ::google::protobuf::uint32 maxlayer_;
  ::google::protobuf::uint32 record_layer_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::UserTowerLayer > everpasslayers_;
  friend void  protobuf_AddDesc_InfiniteTower_2eproto();
  friend void protobuf_AssignDesc_InfiniteTower_2eproto();
  friend void protobuf_ShutdownFile_InfiniteTower_2eproto();

  void InitAsDefaultInstance();
  static UserTowerInfo* default_instance_;
};
// -------------------------------------------------------------------

class TeamTowerSummary : public ::google::protobuf::Message {
 public:
  TeamTowerSummary();
  virtual ~TeamTowerSummary();

  TeamTowerSummary(const TeamTowerSummary& from);

  inline TeamTowerSummary& operator=(const TeamTowerSummary& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamTowerSummary& default_instance();

  void Swap(TeamTowerSummary* other);

  // implements Message ----------------------------------------------

  TeamTowerSummary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamTowerSummary& from);
  void MergeFrom(const TeamTowerSummary& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 teamid = 1 [default = 0];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional uint32 layer = 2 [default = 0];
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 2;
  inline ::google::protobuf::uint32 layer() const;
  inline void set_layer(::google::protobuf::uint32 value);

  // optional .Cmd.UserTowerInfo leadertower = 4;
  inline bool has_leadertower() const;
  inline void clear_leadertower();
  static const int kLeadertowerFieldNumber = 4;
  inline const ::Cmd::UserTowerInfo& leadertower() const;
  inline ::Cmd::UserTowerInfo* mutable_leadertower();
  inline ::Cmd::UserTowerInfo* release_leadertower();
  inline void set_allocated_leadertower(::Cmd::UserTowerInfo* leadertower);

  // repeated uint64 members = 3;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 3;
  inline ::google::protobuf::uint64 members(int index) const;
  inline void set_members(int index, ::google::protobuf::uint64 value);
  inline void add_members(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      members() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_members();

  // @@protoc_insertion_point(class_scope:Cmd.TeamTowerSummary)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_layer();
  inline void clear_has_layer();
  inline void set_has_leadertower();
  inline void clear_has_leadertower();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 teamid_;
  ::Cmd::UserTowerInfo* leadertower_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > members_;
  ::google::protobuf::uint32 layer_;
  friend void  protobuf_AddDesc_InfiniteTower_2eproto();
  friend void protobuf_AssignDesc_InfiniteTower_2eproto();
  friend void protobuf_ShutdownFile_InfiniteTower_2eproto();

  void InitAsDefaultInstance();
  static TeamTowerSummary* default_instance_;
};
// -------------------------------------------------------------------

class TeamTowerInfoCmd : public ::google::protobuf::Message {
 public:
  TeamTowerInfoCmd();
  virtual ~TeamTowerInfoCmd();

  TeamTowerInfoCmd(const TeamTowerInfoCmd& from);

  inline TeamTowerInfoCmd& operator=(const TeamTowerInfoCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamTowerInfoCmd& default_instance();

  void Swap(TeamTowerInfoCmd* other);

  // implements Message ----------------------------------------------

  TeamTowerInfoCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamTowerInfoCmd& from);
  void MergeFrom(const TeamTowerInfoCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = INFINITE_TOWER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TowerParam param = 2 [default = ETOWERPARAM_TEAMTOWERINFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TowerParam param() const;
  inline void set_param(::Cmd::TowerParam value);

  // optional uint64 teamid = 3 [default = 0];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 3;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.TeamTowerInfoCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 teamid_;
  friend void  protobuf_AddDesc_InfiniteTower_2eproto();
  friend void protobuf_AssignDesc_InfiniteTower_2eproto();
  friend void protobuf_ShutdownFile_InfiniteTower_2eproto();

  void InitAsDefaultInstance();
  static TeamTowerInfoCmd* default_instance_;
};
// -------------------------------------------------------------------

class TeamTowerSummaryCmd : public ::google::protobuf::Message {
 public:
  TeamTowerSummaryCmd();
  virtual ~TeamTowerSummaryCmd();

  TeamTowerSummaryCmd(const TeamTowerSummaryCmd& from);

  inline TeamTowerSummaryCmd& operator=(const TeamTowerSummaryCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamTowerSummaryCmd& default_instance();

  void Swap(TeamTowerSummaryCmd* other);

  // implements Message ----------------------------------------------

  TeamTowerSummaryCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamTowerSummaryCmd& from);
  void MergeFrom(const TeamTowerSummaryCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = INFINITE_TOWER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TowerParam param = 2 [default = ETOWERPARAM_TEAMTOWERSUMMARY];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TowerParam param() const;
  inline void set_param(::Cmd::TowerParam value);

  // optional .Cmd.TeamTowerSummary teamtower = 3;
  inline bool has_teamtower() const;
  inline void clear_teamtower();
  static const int kTeamtowerFieldNumber = 3;
  inline const ::Cmd::TeamTowerSummary& teamtower() const;
  inline ::Cmd::TeamTowerSummary* mutable_teamtower();
  inline ::Cmd::TeamTowerSummary* release_teamtower();
  inline void set_allocated_teamtower(::Cmd::TeamTowerSummary* teamtower);

  // optional uint32 maxlayer = 4 [default = 0];
  inline bool has_maxlayer() const;
  inline void clear_maxlayer();
  static const int kMaxlayerFieldNumber = 4;
  inline ::google::protobuf::uint32 maxlayer() const;
  inline void set_maxlayer(::google::protobuf::uint32 value);

  // optional uint32 refreshtime = 5 [default = 0];
  inline bool has_refreshtime() const;
  inline void clear_refreshtime();
  static const int kRefreshtimeFieldNumber = 5;
  inline ::google::protobuf::uint32 refreshtime() const;
  inline void set_refreshtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.TeamTowerSummaryCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_teamtower();
  inline void clear_has_teamtower();
  inline void set_has_maxlayer();
  inline void clear_has_maxlayer();
  inline void set_has_refreshtime();
  inline void clear_has_refreshtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::TeamTowerSummary* teamtower_;
  ::google::protobuf::uint32 maxlayer_;
  ::google::protobuf::uint32 refreshtime_;
  friend void  protobuf_AddDesc_InfiniteTower_2eproto();
  friend void protobuf_AssignDesc_InfiniteTower_2eproto();
  friend void protobuf_ShutdownFile_InfiniteTower_2eproto();

  void InitAsDefaultInstance();
  static TeamTowerSummaryCmd* default_instance_;
};
// -------------------------------------------------------------------

class TeamTowerInviteCmd : public ::google::protobuf::Message {
 public:
  TeamTowerInviteCmd();
  virtual ~TeamTowerInviteCmd();

  TeamTowerInviteCmd(const TeamTowerInviteCmd& from);

  inline TeamTowerInviteCmd& operator=(const TeamTowerInviteCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamTowerInviteCmd& default_instance();

  void Swap(TeamTowerInviteCmd* other);

  // implements Message ----------------------------------------------

  TeamTowerInviteCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamTowerInviteCmd& from);
  void MergeFrom(const TeamTowerInviteCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = INFINITE_TOWER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TowerParam param = 2 [default = ETOWERPARAM_INVITE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TowerParam param() const;
  inline void set_param(::Cmd::TowerParam value);

  // optional bool iscancel = 3 [default = false];
  inline bool has_iscancel() const;
  inline void clear_iscancel();
  static const int kIscancelFieldNumber = 3;
  inline bool iscancel() const;
  inline void set_iscancel(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.TeamTowerInviteCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_iscancel();
  inline void clear_has_iscancel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  bool iscancel_;
  friend void  protobuf_AddDesc_InfiniteTower_2eproto();
  friend void protobuf_AssignDesc_InfiniteTower_2eproto();
  friend void protobuf_ShutdownFile_InfiniteTower_2eproto();

  void InitAsDefaultInstance();
  static TeamTowerInviteCmd* default_instance_;
};
// -------------------------------------------------------------------

class TeamTowerReplyCmd : public ::google::protobuf::Message {
 public:
  TeamTowerReplyCmd();
  virtual ~TeamTowerReplyCmd();

  TeamTowerReplyCmd(const TeamTowerReplyCmd& from);

  inline TeamTowerReplyCmd& operator=(const TeamTowerReplyCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamTowerReplyCmd& default_instance();

  void Swap(TeamTowerReplyCmd* other);

  // implements Message ----------------------------------------------

  TeamTowerReplyCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamTowerReplyCmd& from);
  void MergeFrom(const TeamTowerReplyCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = INFINITE_TOWER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TowerParam param = 2 [default = ETOWERPARAM_REPLY];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TowerParam param() const;
  inline void set_param(::Cmd::TowerParam value);

  // optional .Cmd.ETowerReply eReply = 3 [default = ETOWERREPLY_DISAGREE];
  inline bool has_ereply() const;
  inline void clear_ereply();
  static const int kEReplyFieldNumber = 3;
  inline ::Cmd::ETowerReply ereply() const;
  inline void set_ereply(::Cmd::ETowerReply value);

  // optional uint64 userid = 4 [default = 0];
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 4;
  inline ::google::protobuf::uint64 userid() const;
  inline void set_userid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.TeamTowerReplyCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_ereply();
  inline void clear_has_ereply();
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 userid_;
  int ereply_;
  friend void  protobuf_AddDesc_InfiniteTower_2eproto();
  friend void protobuf_AssignDesc_InfiniteTower_2eproto();
  friend void protobuf_ShutdownFile_InfiniteTower_2eproto();

  void InitAsDefaultInstance();
  static TeamTowerReplyCmd* default_instance_;
};
// -------------------------------------------------------------------

class EnterTower : public ::google::protobuf::Message {
 public:
  EnterTower();
  virtual ~EnterTower();

  EnterTower(const EnterTower& from);

  inline EnterTower& operator=(const EnterTower& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterTower& default_instance();

  void Swap(EnterTower* other);

  // implements Message ----------------------------------------------

  EnterTower* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterTower& from);
  void MergeFrom(const EnterTower& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = INFINITE_TOWER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TowerParam param = 2 [default = ETOWERPARAM_ENTERTOWER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TowerParam param() const;
  inline void set_param(::Cmd::TowerParam value);

  // optional uint32 layer = 3 [default = 0];
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 3;
  inline ::google::protobuf::uint32 layer() const;
  inline void set_layer(::google::protobuf::uint32 value);

  // optional uint64 userid = 4 [default = 0];
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 4;
  inline ::google::protobuf::uint64 userid() const;
  inline void set_userid(::google::protobuf::uint64 value);

  // optional uint32 zoneid = 5 [default = 0];
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 5;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 time = 6 [default = 0];
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // optional string sign = 7;
  inline bool has_sign() const;
  inline void clear_sign();
  static const int kSignFieldNumber = 7;
  inline const ::std::string& sign() const;
  inline void set_sign(const ::std::string& value);
  inline void set_sign(const char* value);
  inline void set_sign(const char* value, size_t size);
  inline ::std::string* mutable_sign();
  inline ::std::string* release_sign();
  inline void set_allocated_sign(::std::string* sign);

  // @@protoc_insertion_point(class_scope:Cmd.EnterTower)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_layer();
  inline void clear_has_layer();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_sign();
  inline void clear_has_sign();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 userid_;
  ::google::protobuf::uint32 layer_;
  ::google::protobuf::uint32 zoneid_;
  ::std::string* sign_;
  ::google::protobuf::uint32 time_;
  friend void  protobuf_AddDesc_InfiniteTower_2eproto();
  friend void protobuf_AssignDesc_InfiniteTower_2eproto();
  friend void protobuf_ShutdownFile_InfiniteTower_2eproto();

  void InitAsDefaultInstance();
  static EnterTower* default_instance_;
};
// -------------------------------------------------------------------

class UserTowerInfoCmd : public ::google::protobuf::Message {
 public:
  UserTowerInfoCmd();
  virtual ~UserTowerInfoCmd();

  UserTowerInfoCmd(const UserTowerInfoCmd& from);

  inline UserTowerInfoCmd& operator=(const UserTowerInfoCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserTowerInfoCmd& default_instance();

  void Swap(UserTowerInfoCmd* other);

  // implements Message ----------------------------------------------

  UserTowerInfoCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserTowerInfoCmd& from);
  void MergeFrom(const UserTowerInfoCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = INFINITE_TOWER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TowerParam param = 2 [default = ETOWERPARAM_USERTOWERINFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TowerParam param() const;
  inline void set_param(::Cmd::TowerParam value);

  // optional .Cmd.UserTowerInfo usertower = 3;
  inline bool has_usertower() const;
  inline void clear_usertower();
  static const int kUsertowerFieldNumber = 3;
  inline const ::Cmd::UserTowerInfo& usertower() const;
  inline ::Cmd::UserTowerInfo* mutable_usertower();
  inline ::Cmd::UserTowerInfo* release_usertower();
  inline void set_allocated_usertower(::Cmd::UserTowerInfo* usertower);

  // @@protoc_insertion_point(class_scope:Cmd.UserTowerInfoCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_usertower();
  inline void clear_has_usertower();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::UserTowerInfo* usertower_;
  friend void  protobuf_AddDesc_InfiniteTower_2eproto();
  friend void protobuf_AssignDesc_InfiniteTower_2eproto();
  friend void protobuf_ShutdownFile_InfiniteTower_2eproto();

  void InitAsDefaultInstance();
  static UserTowerInfoCmd* default_instance_;
};
// -------------------------------------------------------------------

class TowerLayerSyncTowerCmd : public ::google::protobuf::Message {
 public:
  TowerLayerSyncTowerCmd();
  virtual ~TowerLayerSyncTowerCmd();

  TowerLayerSyncTowerCmd(const TowerLayerSyncTowerCmd& from);

  inline TowerLayerSyncTowerCmd& operator=(const TowerLayerSyncTowerCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerLayerSyncTowerCmd& default_instance();

  void Swap(TowerLayerSyncTowerCmd* other);

  // implements Message ----------------------------------------------

  TowerLayerSyncTowerCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TowerLayerSyncTowerCmd& from);
  void MergeFrom(const TowerLayerSyncTowerCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = INFINITE_TOWER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TowerParam param = 2 [default = ETOWERPARAM_LAYER_SYNC];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TowerParam param() const;
  inline void set_param(::Cmd::TowerParam value);

  // optional uint32 layer = 3 [default = 0];
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 3;
  inline ::google::protobuf::uint32 layer() const;
  inline void set_layer(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.TowerLayerSyncTowerCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_layer();
  inline void clear_has_layer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 layer_;
  friend void  protobuf_AddDesc_InfiniteTower_2eproto();
  friend void protobuf_AssignDesc_InfiniteTower_2eproto();
  friend void protobuf_ShutdownFile_InfiniteTower_2eproto();

  void InitAsDefaultInstance();
  static TowerLayerSyncTowerCmd* default_instance_;
};
// -------------------------------------------------------------------

class TowerInfoCmd : public ::google::protobuf::Message {
 public:
  TowerInfoCmd();
  virtual ~TowerInfoCmd();

  TowerInfoCmd(const TowerInfoCmd& from);

  inline TowerInfoCmd& operator=(const TowerInfoCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerInfoCmd& default_instance();

  void Swap(TowerInfoCmd* other);

  // implements Message ----------------------------------------------

  TowerInfoCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TowerInfoCmd& from);
  void MergeFrom(const TowerInfoCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = INFINITE_TOWER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TowerParam param = 2 [default = ETOWERPARAM_TOWERINFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TowerParam param() const;
  inline void set_param(::Cmd::TowerParam value);

  // optional uint32 maxlayer = 3 [default = 0];
  inline bool has_maxlayer() const;
  inline void clear_maxlayer();
  static const int kMaxlayerFieldNumber = 3;
  inline ::google::protobuf::uint32 maxlayer() const;
  inline void set_maxlayer(::google::protobuf::uint32 value);

  // optional uint32 refreshtime = 4 [default = 0];
  inline bool has_refreshtime() const;
  inline void clear_refreshtime();
  static const int kRefreshtimeFieldNumber = 4;
  inline ::google::protobuf::uint32 refreshtime() const;
  inline void set_refreshtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.TowerInfoCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_maxlayer();
  inline void clear_has_maxlayer();
  inline void set_has_refreshtime();
  inline void clear_has_refreshtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 maxlayer_;
  ::google::protobuf::uint32 refreshtime_;
  friend void  protobuf_AddDesc_InfiniteTower_2eproto();
  friend void protobuf_AssignDesc_InfiniteTower_2eproto();
  friend void protobuf_ShutdownFile_InfiniteTower_2eproto();

  void InitAsDefaultInstance();
  static TowerInfoCmd* default_instance_;
};
// ===================================================================


// ===================================================================

// UserTowerLayer

// optional uint32 layer = 1 [default = 0];
inline bool UserTowerLayer::has_layer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserTowerLayer::set_has_layer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserTowerLayer::clear_has_layer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserTowerLayer::clear_layer() {
  layer_ = 0u;
  clear_has_layer();
}
inline ::google::protobuf::uint32 UserTowerLayer::layer() const {
  // @@protoc_insertion_point(field_get:Cmd.UserTowerLayer.layer)
  return layer_;
}
inline void UserTowerLayer::set_layer(::google::protobuf::uint32 value) {
  set_has_layer();
  layer_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserTowerLayer.layer)
}

// optional uint32 utime = 2 [default = 0];
inline bool UserTowerLayer::has_utime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserTowerLayer::set_has_utime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserTowerLayer::clear_has_utime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserTowerLayer::clear_utime() {
  utime_ = 0u;
  clear_has_utime();
}
inline ::google::protobuf::uint32 UserTowerLayer::utime() const {
  // @@protoc_insertion_point(field_get:Cmd.UserTowerLayer.utime)
  return utime_;
}
inline void UserTowerLayer::set_utime(::google::protobuf::uint32 value) {
  set_has_utime();
  utime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserTowerLayer.utime)
}

// optional bool rewarded = 3 [default = false];
inline bool UserTowerLayer::has_rewarded() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserTowerLayer::set_has_rewarded() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserTowerLayer::clear_has_rewarded() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserTowerLayer::clear_rewarded() {
  rewarded_ = false;
  clear_has_rewarded();
}
inline bool UserTowerLayer::rewarded() const {
  // @@protoc_insertion_point(field_get:Cmd.UserTowerLayer.rewarded)
  return rewarded_;
}
inline void UserTowerLayer::set_rewarded(bool value) {
  set_has_rewarded();
  rewarded_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserTowerLayer.rewarded)
}

// -------------------------------------------------------------------

// UserTowerInfo

// optional uint32 oldmaxlayer = 1 [default = 0];
inline bool UserTowerInfo::has_oldmaxlayer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserTowerInfo::set_has_oldmaxlayer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserTowerInfo::clear_has_oldmaxlayer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserTowerInfo::clear_oldmaxlayer() {
  oldmaxlayer_ = 0u;
  clear_has_oldmaxlayer();
}
inline ::google::protobuf::uint32 UserTowerInfo::oldmaxlayer() const {
  // @@protoc_insertion_point(field_get:Cmd.UserTowerInfo.oldmaxlayer)
  return oldmaxlayer_;
}
inline void UserTowerInfo::set_oldmaxlayer(::google::protobuf::uint32 value) {
  set_has_oldmaxlayer();
  oldmaxlayer_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserTowerInfo.oldmaxlayer)
}

// optional uint32 curmaxlayer = 2 [default = 0];
inline bool UserTowerInfo::has_curmaxlayer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserTowerInfo::set_has_curmaxlayer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserTowerInfo::clear_has_curmaxlayer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserTowerInfo::clear_curmaxlayer() {
  curmaxlayer_ = 0u;
  clear_has_curmaxlayer();
}
inline ::google::protobuf::uint32 UserTowerInfo::curmaxlayer() const {
  // @@protoc_insertion_point(field_get:Cmd.UserTowerInfo.curmaxlayer)
  return curmaxlayer_;
}
inline void UserTowerInfo::set_curmaxlayer(::google::protobuf::uint32 value) {
  set_has_curmaxlayer();
  curmaxlayer_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserTowerInfo.curmaxlayer)
}

// repeated .Cmd.UserTowerLayer layers = 3;
inline int UserTowerInfo::layers_size() const {
  return layers_.size();
}
inline void UserTowerInfo::clear_layers() {
  layers_.Clear();
}
inline const ::Cmd::UserTowerLayer& UserTowerInfo::layers(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UserTowerInfo.layers)
  return layers_.Get(index);
}
inline ::Cmd::UserTowerLayer* UserTowerInfo::mutable_layers(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.UserTowerInfo.layers)
  return layers_.Mutable(index);
}
inline ::Cmd::UserTowerLayer* UserTowerInfo::add_layers() {
  // @@protoc_insertion_point(field_add:Cmd.UserTowerInfo.layers)
  return layers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UserTowerLayer >&
UserTowerInfo::layers() const {
  // @@protoc_insertion_point(field_list:Cmd.UserTowerInfo.layers)
  return layers_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::UserTowerLayer >*
UserTowerInfo::mutable_layers() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UserTowerInfo.layers)
  return &layers_;
}

// optional uint32 maxlayer = 4 [default = 0];
inline bool UserTowerInfo::has_maxlayer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserTowerInfo::set_has_maxlayer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserTowerInfo::clear_has_maxlayer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserTowerInfo::clear_maxlayer() {
  maxlayer_ = 0u;
  clear_has_maxlayer();
}
inline ::google::protobuf::uint32 UserTowerInfo::maxlayer() const {
  // @@protoc_insertion_point(field_get:Cmd.UserTowerInfo.maxlayer)
  return maxlayer_;
}
inline void UserTowerInfo::set_maxlayer(::google::protobuf::uint32 value) {
  set_has_maxlayer();
  maxlayer_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserTowerInfo.maxlayer)
}

// optional uint32 record_layer = 5 [default = 0];
inline bool UserTowerInfo::has_record_layer() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserTowerInfo::set_has_record_layer() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserTowerInfo::clear_has_record_layer() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserTowerInfo::clear_record_layer() {
  record_layer_ = 0u;
  clear_has_record_layer();
}
inline ::google::protobuf::uint32 UserTowerInfo::record_layer() const {
  // @@protoc_insertion_point(field_get:Cmd.UserTowerInfo.record_layer)
  return record_layer_;
}
inline void UserTowerInfo::set_record_layer(::google::protobuf::uint32 value) {
  set_has_record_layer();
  record_layer_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserTowerInfo.record_layer)
}

// repeated .Cmd.UserTowerLayer everpasslayers = 6;
inline int UserTowerInfo::everpasslayers_size() const {
  return everpasslayers_.size();
}
inline void UserTowerInfo::clear_everpasslayers() {
  everpasslayers_.Clear();
}
inline const ::Cmd::UserTowerLayer& UserTowerInfo::everpasslayers(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UserTowerInfo.everpasslayers)
  return everpasslayers_.Get(index);
}
inline ::Cmd::UserTowerLayer* UserTowerInfo::mutable_everpasslayers(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.UserTowerInfo.everpasslayers)
  return everpasslayers_.Mutable(index);
}
inline ::Cmd::UserTowerLayer* UserTowerInfo::add_everpasslayers() {
  // @@protoc_insertion_point(field_add:Cmd.UserTowerInfo.everpasslayers)
  return everpasslayers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UserTowerLayer >&
UserTowerInfo::everpasslayers() const {
  // @@protoc_insertion_point(field_list:Cmd.UserTowerInfo.everpasslayers)
  return everpasslayers_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::UserTowerLayer >*
UserTowerInfo::mutable_everpasslayers() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UserTowerInfo.everpasslayers)
  return &everpasslayers_;
}

// -------------------------------------------------------------------

// TeamTowerSummary

// optional uint64 teamid = 1 [default = 0];
inline bool TeamTowerSummary::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamTowerSummary::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamTowerSummary::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamTowerSummary::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TeamTowerSummary::teamid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamTowerSummary.teamid)
  return teamid_;
}
inline void TeamTowerSummary::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamTowerSummary.teamid)
}

// optional uint32 layer = 2 [default = 0];
inline bool TeamTowerSummary::has_layer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamTowerSummary::set_has_layer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamTowerSummary::clear_has_layer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamTowerSummary::clear_layer() {
  layer_ = 0u;
  clear_has_layer();
}
inline ::google::protobuf::uint32 TeamTowerSummary::layer() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamTowerSummary.layer)
  return layer_;
}
inline void TeamTowerSummary::set_layer(::google::protobuf::uint32 value) {
  set_has_layer();
  layer_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamTowerSummary.layer)
}

// optional .Cmd.UserTowerInfo leadertower = 4;
inline bool TeamTowerSummary::has_leadertower() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamTowerSummary::set_has_leadertower() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamTowerSummary::clear_has_leadertower() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamTowerSummary::clear_leadertower() {
  if (leadertower_ != NULL) leadertower_->::Cmd::UserTowerInfo::Clear();
  clear_has_leadertower();
}
inline const ::Cmd::UserTowerInfo& TeamTowerSummary::leadertower() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamTowerSummary.leadertower)
  return leadertower_ != NULL ? *leadertower_ : *default_instance_->leadertower_;
}
inline ::Cmd::UserTowerInfo* TeamTowerSummary::mutable_leadertower() {
  set_has_leadertower();
  if (leadertower_ == NULL) leadertower_ = new ::Cmd::UserTowerInfo;
  // @@protoc_insertion_point(field_mutable:Cmd.TeamTowerSummary.leadertower)
  return leadertower_;
}
inline ::Cmd::UserTowerInfo* TeamTowerSummary::release_leadertower() {
  clear_has_leadertower();
  ::Cmd::UserTowerInfo* temp = leadertower_;
  leadertower_ = NULL;
  return temp;
}
inline void TeamTowerSummary::set_allocated_leadertower(::Cmd::UserTowerInfo* leadertower) {
  delete leadertower_;
  leadertower_ = leadertower;
  if (leadertower) {
    set_has_leadertower();
  } else {
    clear_has_leadertower();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TeamTowerSummary.leadertower)
}

// repeated uint64 members = 3;
inline int TeamTowerSummary::members_size() const {
  return members_.size();
}
inline void TeamTowerSummary::clear_members() {
  members_.Clear();
}
inline ::google::protobuf::uint64 TeamTowerSummary::members(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TeamTowerSummary.members)
  return members_.Get(index);
}
inline void TeamTowerSummary::set_members(int index, ::google::protobuf::uint64 value) {
  members_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.TeamTowerSummary.members)
}
inline void TeamTowerSummary::add_members(::google::protobuf::uint64 value) {
  members_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.TeamTowerSummary.members)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TeamTowerSummary::members() const {
  // @@protoc_insertion_point(field_list:Cmd.TeamTowerSummary.members)
  return members_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TeamTowerSummary::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TeamTowerSummary.members)
  return &members_;
}

// -------------------------------------------------------------------

// TeamTowerInfoCmd

// optional .Cmd.Command cmd = 1 [default = INFINITE_TOWER_PROTOCMD];
inline bool TeamTowerInfoCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamTowerInfoCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamTowerInfoCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamTowerInfoCmd::clear_cmd() {
  cmd_ = 20;
  clear_has_cmd();
}
inline ::Cmd::Command TeamTowerInfoCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamTowerInfoCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TeamTowerInfoCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamTowerInfoCmd.cmd)
}

// optional .Cmd.TowerParam param = 2 [default = ETOWERPARAM_TEAMTOWERINFO];
inline bool TeamTowerInfoCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamTowerInfoCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamTowerInfoCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamTowerInfoCmd::clear_param() {
  param_ = 1;
  clear_has_param();
}
inline ::Cmd::TowerParam TeamTowerInfoCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamTowerInfoCmd.param)
  return static_cast< ::Cmd::TowerParam >(param_);
}
inline void TeamTowerInfoCmd::set_param(::Cmd::TowerParam value) {
  assert(::Cmd::TowerParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamTowerInfoCmd.param)
}

// optional uint64 teamid = 3 [default = 0];
inline bool TeamTowerInfoCmd::has_teamid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamTowerInfoCmd::set_has_teamid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamTowerInfoCmd::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamTowerInfoCmd::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TeamTowerInfoCmd::teamid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamTowerInfoCmd.teamid)
  return teamid_;
}
inline void TeamTowerInfoCmd::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamTowerInfoCmd.teamid)
}

// -------------------------------------------------------------------

// TeamTowerSummaryCmd

// optional .Cmd.Command cmd = 1 [default = INFINITE_TOWER_PROTOCMD];
inline bool TeamTowerSummaryCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamTowerSummaryCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamTowerSummaryCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamTowerSummaryCmd::clear_cmd() {
  cmd_ = 20;
  clear_has_cmd();
}
inline ::Cmd::Command TeamTowerSummaryCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamTowerSummaryCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TeamTowerSummaryCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamTowerSummaryCmd.cmd)
}

// optional .Cmd.TowerParam param = 2 [default = ETOWERPARAM_TEAMTOWERSUMMARY];
inline bool TeamTowerSummaryCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamTowerSummaryCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamTowerSummaryCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamTowerSummaryCmd::clear_param() {
  param_ = 2;
  clear_has_param();
}
inline ::Cmd::TowerParam TeamTowerSummaryCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamTowerSummaryCmd.param)
  return static_cast< ::Cmd::TowerParam >(param_);
}
inline void TeamTowerSummaryCmd::set_param(::Cmd::TowerParam value) {
  assert(::Cmd::TowerParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamTowerSummaryCmd.param)
}

// optional .Cmd.TeamTowerSummary teamtower = 3;
inline bool TeamTowerSummaryCmd::has_teamtower() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamTowerSummaryCmd::set_has_teamtower() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamTowerSummaryCmd::clear_has_teamtower() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamTowerSummaryCmd::clear_teamtower() {
  if (teamtower_ != NULL) teamtower_->::Cmd::TeamTowerSummary::Clear();
  clear_has_teamtower();
}
inline const ::Cmd::TeamTowerSummary& TeamTowerSummaryCmd::teamtower() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamTowerSummaryCmd.teamtower)
  return teamtower_ != NULL ? *teamtower_ : *default_instance_->teamtower_;
}
inline ::Cmd::TeamTowerSummary* TeamTowerSummaryCmd::mutable_teamtower() {
  set_has_teamtower();
  if (teamtower_ == NULL) teamtower_ = new ::Cmd::TeamTowerSummary;
  // @@protoc_insertion_point(field_mutable:Cmd.TeamTowerSummaryCmd.teamtower)
  return teamtower_;
}
inline ::Cmd::TeamTowerSummary* TeamTowerSummaryCmd::release_teamtower() {
  clear_has_teamtower();
  ::Cmd::TeamTowerSummary* temp = teamtower_;
  teamtower_ = NULL;
  return temp;
}
inline void TeamTowerSummaryCmd::set_allocated_teamtower(::Cmd::TeamTowerSummary* teamtower) {
  delete teamtower_;
  teamtower_ = teamtower;
  if (teamtower) {
    set_has_teamtower();
  } else {
    clear_has_teamtower();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TeamTowerSummaryCmd.teamtower)
}

// optional uint32 maxlayer = 4 [default = 0];
inline bool TeamTowerSummaryCmd::has_maxlayer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamTowerSummaryCmd::set_has_maxlayer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamTowerSummaryCmd::clear_has_maxlayer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamTowerSummaryCmd::clear_maxlayer() {
  maxlayer_ = 0u;
  clear_has_maxlayer();
}
inline ::google::protobuf::uint32 TeamTowerSummaryCmd::maxlayer() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamTowerSummaryCmd.maxlayer)
  return maxlayer_;
}
inline void TeamTowerSummaryCmd::set_maxlayer(::google::protobuf::uint32 value) {
  set_has_maxlayer();
  maxlayer_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamTowerSummaryCmd.maxlayer)
}

// optional uint32 refreshtime = 5 [default = 0];
inline bool TeamTowerSummaryCmd::has_refreshtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TeamTowerSummaryCmd::set_has_refreshtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TeamTowerSummaryCmd::clear_has_refreshtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TeamTowerSummaryCmd::clear_refreshtime() {
  refreshtime_ = 0u;
  clear_has_refreshtime();
}
inline ::google::protobuf::uint32 TeamTowerSummaryCmd::refreshtime() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamTowerSummaryCmd.refreshtime)
  return refreshtime_;
}
inline void TeamTowerSummaryCmd::set_refreshtime(::google::protobuf::uint32 value) {
  set_has_refreshtime();
  refreshtime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamTowerSummaryCmd.refreshtime)
}

// -------------------------------------------------------------------

// TeamTowerInviteCmd

// optional .Cmd.Command cmd = 1 [default = INFINITE_TOWER_PROTOCMD];
inline bool TeamTowerInviteCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamTowerInviteCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamTowerInviteCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamTowerInviteCmd::clear_cmd() {
  cmd_ = 20;
  clear_has_cmd();
}
inline ::Cmd::Command TeamTowerInviteCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamTowerInviteCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TeamTowerInviteCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamTowerInviteCmd.cmd)
}

// optional .Cmd.TowerParam param = 2 [default = ETOWERPARAM_INVITE];
inline bool TeamTowerInviteCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamTowerInviteCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamTowerInviteCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamTowerInviteCmd::clear_param() {
  param_ = 3;
  clear_has_param();
}
inline ::Cmd::TowerParam TeamTowerInviteCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamTowerInviteCmd.param)
  return static_cast< ::Cmd::TowerParam >(param_);
}
inline void TeamTowerInviteCmd::set_param(::Cmd::TowerParam value) {
  assert(::Cmd::TowerParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamTowerInviteCmd.param)
}

// optional bool iscancel = 3 [default = false];
inline bool TeamTowerInviteCmd::has_iscancel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamTowerInviteCmd::set_has_iscancel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamTowerInviteCmd::clear_has_iscancel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamTowerInviteCmd::clear_iscancel() {
  iscancel_ = false;
  clear_has_iscancel();
}
inline bool TeamTowerInviteCmd::iscancel() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamTowerInviteCmd.iscancel)
  return iscancel_;
}
inline void TeamTowerInviteCmd::set_iscancel(bool value) {
  set_has_iscancel();
  iscancel_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamTowerInviteCmd.iscancel)
}

// -------------------------------------------------------------------

// TeamTowerReplyCmd

// optional .Cmd.Command cmd = 1 [default = INFINITE_TOWER_PROTOCMD];
inline bool TeamTowerReplyCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamTowerReplyCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamTowerReplyCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamTowerReplyCmd::clear_cmd() {
  cmd_ = 20;
  clear_has_cmd();
}
inline ::Cmd::Command TeamTowerReplyCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamTowerReplyCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TeamTowerReplyCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamTowerReplyCmd.cmd)
}

// optional .Cmd.TowerParam param = 2 [default = ETOWERPARAM_REPLY];
inline bool TeamTowerReplyCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamTowerReplyCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamTowerReplyCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamTowerReplyCmd::clear_param() {
  param_ = 4;
  clear_has_param();
}
inline ::Cmd::TowerParam TeamTowerReplyCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamTowerReplyCmd.param)
  return static_cast< ::Cmd::TowerParam >(param_);
}
inline void TeamTowerReplyCmd::set_param(::Cmd::TowerParam value) {
  assert(::Cmd::TowerParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamTowerReplyCmd.param)
}

// optional .Cmd.ETowerReply eReply = 3 [default = ETOWERREPLY_DISAGREE];
inline bool TeamTowerReplyCmd::has_ereply() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamTowerReplyCmd::set_has_ereply() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamTowerReplyCmd::clear_has_ereply() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamTowerReplyCmd::clear_ereply() {
  ereply_ = 2;
  clear_has_ereply();
}
inline ::Cmd::ETowerReply TeamTowerReplyCmd::ereply() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamTowerReplyCmd.eReply)
  return static_cast< ::Cmd::ETowerReply >(ereply_);
}
inline void TeamTowerReplyCmd::set_ereply(::Cmd::ETowerReply value) {
  assert(::Cmd::ETowerReply_IsValid(value));
  set_has_ereply();
  ereply_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamTowerReplyCmd.eReply)
}

// optional uint64 userid = 4 [default = 0];
inline bool TeamTowerReplyCmd::has_userid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamTowerReplyCmd::set_has_userid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamTowerReplyCmd::clear_has_userid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamTowerReplyCmd::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
  clear_has_userid();
}
inline ::google::protobuf::uint64 TeamTowerReplyCmd::userid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamTowerReplyCmd.userid)
  return userid_;
}
inline void TeamTowerReplyCmd::set_userid(::google::protobuf::uint64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamTowerReplyCmd.userid)
}

// -------------------------------------------------------------------

// EnterTower

// optional .Cmd.Command cmd = 1 [default = INFINITE_TOWER_PROTOCMD];
inline bool EnterTower::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterTower::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterTower::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterTower::clear_cmd() {
  cmd_ = 20;
  clear_has_cmd();
}
inline ::Cmd::Command EnterTower::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterTower.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void EnterTower::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterTower.cmd)
}

// optional .Cmd.TowerParam param = 2 [default = ETOWERPARAM_ENTERTOWER];
inline bool EnterTower::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterTower::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterTower::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterTower::clear_param() {
  param_ = 5;
  clear_has_param();
}
inline ::Cmd::TowerParam EnterTower::param() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterTower.param)
  return static_cast< ::Cmd::TowerParam >(param_);
}
inline void EnterTower::set_param(::Cmd::TowerParam value) {
  assert(::Cmd::TowerParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterTower.param)
}

// optional uint32 layer = 3 [default = 0];
inline bool EnterTower::has_layer() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnterTower::set_has_layer() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnterTower::clear_has_layer() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnterTower::clear_layer() {
  layer_ = 0u;
  clear_has_layer();
}
inline ::google::protobuf::uint32 EnterTower::layer() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterTower.layer)
  return layer_;
}
inline void EnterTower::set_layer(::google::protobuf::uint32 value) {
  set_has_layer();
  layer_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterTower.layer)
}

// optional uint64 userid = 4 [default = 0];
inline bool EnterTower::has_userid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EnterTower::set_has_userid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EnterTower::clear_has_userid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EnterTower::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
  clear_has_userid();
}
inline ::google::protobuf::uint64 EnterTower::userid() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterTower.userid)
  return userid_;
}
inline void EnterTower::set_userid(::google::protobuf::uint64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterTower.userid)
}

// optional uint32 zoneid = 5 [default = 0];
inline bool EnterTower::has_zoneid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EnterTower::set_has_zoneid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EnterTower::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EnterTower::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 EnterTower::zoneid() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterTower.zoneid)
  return zoneid_;
}
inline void EnterTower::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterTower.zoneid)
}

// optional uint32 time = 6 [default = 0];
inline bool EnterTower::has_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EnterTower::set_has_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void EnterTower::clear_has_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void EnterTower::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 EnterTower::time() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterTower.time)
  return time_;
}
inline void EnterTower::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterTower.time)
}

// optional string sign = 7;
inline bool EnterTower::has_sign() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void EnterTower::set_has_sign() {
  _has_bits_[0] |= 0x00000040u;
}
inline void EnterTower::clear_has_sign() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void EnterTower::clear_sign() {
  if (sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_->clear();
  }
  clear_has_sign();
}
inline const ::std::string& EnterTower::sign() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterTower.sign)
  return *sign_;
}
inline void EnterTower::set_sign(const ::std::string& value) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.EnterTower.sign)
}
inline void EnterTower::set_sign(const char* value) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.EnterTower.sign)
}
inline void EnterTower::set_sign(const char* value, size_t size) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.EnterTower.sign)
}
inline ::std::string* EnterTower::mutable_sign() {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.EnterTower.sign)
  return sign_;
}
inline ::std::string* EnterTower::release_sign() {
  clear_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sign_;
    sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void EnterTower::set_allocated_sign(::std::string* sign) {
  if (sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sign_;
  }
  if (sign) {
    set_has_sign();
    sign_ = sign;
  } else {
    clear_has_sign();
    sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.EnterTower.sign)
}

// -------------------------------------------------------------------

// UserTowerInfoCmd

// optional .Cmd.Command cmd = 1 [default = INFINITE_TOWER_PROTOCMD];
inline bool UserTowerInfoCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserTowerInfoCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserTowerInfoCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserTowerInfoCmd::clear_cmd() {
  cmd_ = 20;
  clear_has_cmd();
}
inline ::Cmd::Command UserTowerInfoCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UserTowerInfoCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UserTowerInfoCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserTowerInfoCmd.cmd)
}

// optional .Cmd.TowerParam param = 2 [default = ETOWERPARAM_USERTOWERINFO];
inline bool UserTowerInfoCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserTowerInfoCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserTowerInfoCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserTowerInfoCmd::clear_param() {
  param_ = 7;
  clear_has_param();
}
inline ::Cmd::TowerParam UserTowerInfoCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UserTowerInfoCmd.param)
  return static_cast< ::Cmd::TowerParam >(param_);
}
inline void UserTowerInfoCmd::set_param(::Cmd::TowerParam value) {
  assert(::Cmd::TowerParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserTowerInfoCmd.param)
}

// optional .Cmd.UserTowerInfo usertower = 3;
inline bool UserTowerInfoCmd::has_usertower() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserTowerInfoCmd::set_has_usertower() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserTowerInfoCmd::clear_has_usertower() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserTowerInfoCmd::clear_usertower() {
  if (usertower_ != NULL) usertower_->::Cmd::UserTowerInfo::Clear();
  clear_has_usertower();
}
inline const ::Cmd::UserTowerInfo& UserTowerInfoCmd::usertower() const {
  // @@protoc_insertion_point(field_get:Cmd.UserTowerInfoCmd.usertower)
  return usertower_ != NULL ? *usertower_ : *default_instance_->usertower_;
}
inline ::Cmd::UserTowerInfo* UserTowerInfoCmd::mutable_usertower() {
  set_has_usertower();
  if (usertower_ == NULL) usertower_ = new ::Cmd::UserTowerInfo;
  // @@protoc_insertion_point(field_mutable:Cmd.UserTowerInfoCmd.usertower)
  return usertower_;
}
inline ::Cmd::UserTowerInfo* UserTowerInfoCmd::release_usertower() {
  clear_has_usertower();
  ::Cmd::UserTowerInfo* temp = usertower_;
  usertower_ = NULL;
  return temp;
}
inline void UserTowerInfoCmd::set_allocated_usertower(::Cmd::UserTowerInfo* usertower) {
  delete usertower_;
  usertower_ = usertower;
  if (usertower) {
    set_has_usertower();
  } else {
    clear_has_usertower();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.UserTowerInfoCmd.usertower)
}

// -------------------------------------------------------------------

// TowerLayerSyncTowerCmd

// optional .Cmd.Command cmd = 1 [default = INFINITE_TOWER_PROTOCMD];
inline bool TowerLayerSyncTowerCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TowerLayerSyncTowerCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TowerLayerSyncTowerCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TowerLayerSyncTowerCmd::clear_cmd() {
  cmd_ = 20;
  clear_has_cmd();
}
inline ::Cmd::Command TowerLayerSyncTowerCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerLayerSyncTowerCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TowerLayerSyncTowerCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TowerLayerSyncTowerCmd.cmd)
}

// optional .Cmd.TowerParam param = 2 [default = ETOWERPARAM_LAYER_SYNC];
inline bool TowerLayerSyncTowerCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TowerLayerSyncTowerCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TowerLayerSyncTowerCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TowerLayerSyncTowerCmd::clear_param() {
  param_ = 8;
  clear_has_param();
}
inline ::Cmd::TowerParam TowerLayerSyncTowerCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerLayerSyncTowerCmd.param)
  return static_cast< ::Cmd::TowerParam >(param_);
}
inline void TowerLayerSyncTowerCmd::set_param(::Cmd::TowerParam value) {
  assert(::Cmd::TowerParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TowerLayerSyncTowerCmd.param)
}

// optional uint32 layer = 3 [default = 0];
inline bool TowerLayerSyncTowerCmd::has_layer() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TowerLayerSyncTowerCmd::set_has_layer() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TowerLayerSyncTowerCmd::clear_has_layer() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TowerLayerSyncTowerCmd::clear_layer() {
  layer_ = 0u;
  clear_has_layer();
}
inline ::google::protobuf::uint32 TowerLayerSyncTowerCmd::layer() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerLayerSyncTowerCmd.layer)
  return layer_;
}
inline void TowerLayerSyncTowerCmd::set_layer(::google::protobuf::uint32 value) {
  set_has_layer();
  layer_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TowerLayerSyncTowerCmd.layer)
}

// -------------------------------------------------------------------

// TowerInfoCmd

// optional .Cmd.Command cmd = 1 [default = INFINITE_TOWER_PROTOCMD];
inline bool TowerInfoCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TowerInfoCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TowerInfoCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TowerInfoCmd::clear_cmd() {
  cmd_ = 20;
  clear_has_cmd();
}
inline ::Cmd::Command TowerInfoCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerInfoCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TowerInfoCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TowerInfoCmd.cmd)
}

// optional .Cmd.TowerParam param = 2 [default = ETOWERPARAM_TOWERINFO];
inline bool TowerInfoCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TowerInfoCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TowerInfoCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TowerInfoCmd::clear_param() {
  param_ = 10;
  clear_has_param();
}
inline ::Cmd::TowerParam TowerInfoCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerInfoCmd.param)
  return static_cast< ::Cmd::TowerParam >(param_);
}
inline void TowerInfoCmd::set_param(::Cmd::TowerParam value) {
  assert(::Cmd::TowerParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TowerInfoCmd.param)
}

// optional uint32 maxlayer = 3 [default = 0];
inline bool TowerInfoCmd::has_maxlayer() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TowerInfoCmd::set_has_maxlayer() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TowerInfoCmd::clear_has_maxlayer() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TowerInfoCmd::clear_maxlayer() {
  maxlayer_ = 0u;
  clear_has_maxlayer();
}
inline ::google::protobuf::uint32 TowerInfoCmd::maxlayer() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerInfoCmd.maxlayer)
  return maxlayer_;
}
inline void TowerInfoCmd::set_maxlayer(::google::protobuf::uint32 value) {
  set_has_maxlayer();
  maxlayer_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TowerInfoCmd.maxlayer)
}

// optional uint32 refreshtime = 4 [default = 0];
inline bool TowerInfoCmd::has_refreshtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TowerInfoCmd::set_has_refreshtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TowerInfoCmd::clear_has_refreshtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TowerInfoCmd::clear_refreshtime() {
  refreshtime_ = 0u;
  clear_has_refreshtime();
}
inline ::google::protobuf::uint32 TowerInfoCmd::refreshtime() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerInfoCmd.refreshtime)
  return refreshtime_;
}
inline void TowerInfoCmd::set_refreshtime(::google::protobuf::uint32 value) {
  set_has_refreshtime();
  refreshtime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TowerInfoCmd.refreshtime)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cmd

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Cmd::TowerParam> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::TowerParam>() {
  return ::Cmd::TowerParam_descriptor();
}
template <> struct is_proto_enum< ::Cmd::ETowerReply> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::ETowerReply>() {
  return ::Cmd::ETowerReply_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_InfiniteTower_2eproto__INCLUDED
