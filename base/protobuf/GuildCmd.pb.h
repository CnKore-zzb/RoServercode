// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GuildCmd.proto

#ifndef PROTOBUF_GuildCmd_2eproto__INCLUDED
#define PROTOBUF_GuildCmd_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "xCmd.pb.h"
#include "ProtoCommon.pb.h"
#include "SceneItem.pb.h"
#include "SceneUser.pb.h"
#include "SceneUser2.pb.h"
#include "SceneQuest.pb.h"
#include "Dojo.pb.h"
// @@protoc_insertion_point(includes)

namespace Cmd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GuildCmd_2eproto();
void protobuf_AssignDesc_GuildCmd_2eproto();
void protobuf_ShutdownFile_GuildCmd_2eproto();

class GuildPrayCFG;
class GuildMemberPray;
class BlobGuildPray;
class BlobDonate;
class UserGuildBuilding;
class BlobGuildBuilding;
class GuildMember;
class BlobGuildMember;
class GuildApply;
class BlobGuildApply;
class GuildJob;
class GuildQuest;
class GuildBuildMaterial;
class GuildBuilding;
class GuildBuildingData;
class GuildChallenge;
class GuildChallengeData;
class GuildWelfareItem;
class GuildWelfare;
class GuildArtifactItem;
class GuildArtifactData;
class GuildArtifact;
class GQuest;
class BlobGQuest;
class BlobGGvg;
class GuildTreasure;
class TreasureItem;
class TreasureResult;
class BlobGuildTreasure;
class BlobGuildMisc;
class BlobGuildPack;
class BlobGuildEvent;
class GuildPhoto;
class PhotoFrame;
class BlobGuildPhoto;
class GuildSummaryData;
class GuildData;
class QueryGuildListGuildCmd;
class CreateGuildGuildCmd;
class EnterGuildGuildCmd;
class GuildMemberUpdateGuildCmd;
class GuildApplyUpdateGuildCmd;
class GuildDataUpdate;
class GuildDataUpdateGuildCmd;
class GuildMemberDataUpdate;
class GuildMemberDataUpdateGuildCmd;
class ApplyGuildGuildCmd;
class ProcessApplyGuildCmd;
class InviteMemberGuildCmd;
class ProcessInviteGuildCmd;
class SetGuildOptionGuildCmd;
class KickMemberGuildCmd;
class ChangeJobGuildCmd;
class ExitGuildGuildCmd;
class ExchangeChairGuildCmd;
class DismissGuildCmd;
class LevelupGuildCmd;
class DonateGuildCmd;
class DonateItem;
class DonateListGuildCmd;
class UpdateDonateItemGuildCmd;
class DonateFrameGuildCmd;
class EnterTerritoryGuildCmd;
class PrayGuildCmd;
class GuildInfoNtf;
class GuildPrayNtfGuildCmd;
class LevelupEffectGuildCmd;
class QueryPackGuildCmd;
class PackUpdateGuildCmd;
class ExchangeZoneGuildCmd;
class ExchangeZoneNtfGuildCmd;
class ExchangeZoneAnswerGuildCmd;
class GuildEvent;
class QueryEventListGuildCmd;
class NewEventGuildCmd;
class GuildReward;
class ApplyRewardConGuildCmd;
class FrameStatusGuildCmd;
class ModifyAuthGuildCmd;
class JobUpdateGuildCmd;
class RenameQueryGuildCmd;
class GuildCityInfo;
class QueryGuildCityInfoGuildCmd;
class CityActionGuildCmd;
class IconInfo;
class GuildIconSyncGuildCmd;
class GuildIconAddGuildCmd;
class GuildIconUploadGuildCmd;
class OpenFunctionGuildCmd;
class BuildGuildCmd;
class SubmitMaterialGuildCmd;
class BuildingNtfGuildCmd;
class BuildingSubmitCountGuildCmd;
class ChallengeUpdateNtfGuildCmd;
class WelfareNtfGuildCmd;
class GetWelfareGuildCmd;
class BuildingLvupEffect;
class BuildingLvupEffGuildCmd;
class ArtifactUpdateNtfGuildCmd;
class ArtifactProduceGuildCmd;
class ArtifactOptGuildCmd;
class QueryGQuestGuildCmd;
class TreasureActionGuildCmd;
class BuildingSubmitRankItem;
class QueryBuildingRankGuildCmd;
class QueryTreasureResultGuildCmd;
class CityShowInfo;
class QueryGCityShowInfoGuildCmd;
class GvgOpenFireGuildCmd;
class EnterPunishTimeNtfGuildCmd;
class OpenRealtimeVoiceGuildCmd;

enum GuildParam {
  GUILDPARAM_GUILDLIST = 1,
  GUILDPARAM_CREATEGUILD = 2,
  GUILDPARAM_ENTERGUILD = 3,
  GUILDPARAM_MEMBERUPDATE = 4,
  GUILDPARAM_APPLYUPDATE = 5,
  GUILDPARAM_GUILDDATAUPDATE = 6,
  GUILDPARAM_MEMBERDATAUPDATE = 7,
  GUILDPARAM_APPLYGUILD = 8,
  GUILDPARAM_PROCESSAPPLY = 9,
  GUILDPARAM_INVITEMEMBER = 10,
  GUILDPARAM_PROCESSINVITEMEMBER = 11,
  GUILDPARAM_SETOPTION = 12,
  GUILDPARAM_KICKMEMBER = 13,
  GUILDPARAM_CHANGEJOB = 14,
  GUILDPARAM_EXITGUILD = 15,
  GUILDPARAM_EXCHANGECHAIR = 16,
  GUILDPARAM_DISMISSGUILD = 17,
  GUILDPARAM_LEVELUPGUILD = 18,
  GUILDPARAM_DONATE = 19,
  GUILDPARAM_ENTERGUILDTERRITORY = 20,
  GUILDPARAM_PRAY = 21,
  GUILDPARAM_GUILDINFONTF = 22,
  GUILDPARAM_GUILDPRAYNTF = 23,
  GUILDPARAM_LEVELUPEFFECT = 24,
  GUILDPARAM_DONATELIST = 25,
  GUILDPARAM_UPDATEDONATEITEM = 26,
  GUILDPARAM_DONATEFRAMESTATUS = 27,
  GUILDPARAM_QUERYPACK = 28,
  GUILDPARAM_PACKUPDATE = 32,
  GUILDPARAM_EXCHANGEZONE = 29,
  GUILDPARAM_EXCHANGEZONE_NTF = 30,
  GUILDPARAM_EXCHANGEZONE_ANSWER = 31,
  GUILDPARAM_QUERY_EVENT_LIST = 33,
  GUILDPARAM_NEW_EVENT = 34,
  GUILDPARAM_APPLYCONFIG = 35,
  GUILDPARAM_FRAME_STATUS = 37,
  GUILDPARAM_MODIFY_AUTH = 38,
  GUILDPARAM_JOB_UPDATE = 39,
  GUILDPARAM_RENAME_QUERY = 40,
  GUILDPARAM_QUERY_CITYINFO = 41,
  GUILDPARAM_CITY_ACTION = 42,
  GUILDPARAM_GUILD_ICON_SYNC = 43,
  GUILDPARAM_GUILD_ICON_ADD = 44,
  GUILDPARAM_GUILD_ICON_UPLOAD = 45,
  GUILDPARAM_OPEN_FUNCTION = 47,
  GUILDPARAM_BUILD = 48,
  GUILDPARAM_SUBMIT_MATERIAL = 49,
  GUILDPARAM_BUILDING_NTF = 50,
  GUILDPARAM_BUILDING_SUBMIT_COUNT = 51,
  GUILDPARAM_CHALLENGE_UPDATE = 52,
  GUILDPARAM_WELFARE_NTF = 53,
  GUILDPARAM_GET_WELFARE = 54,
  GUILDPARAM_BUILDING_LVUP_EFF = 55,
  GUILDPARAM_ARTIFACT_UPDATE_NTF = 56,
  GUILDPARAM_ARTIFACT_PRODUCE = 57,
  GUILDPARAM_ARTIFACT_OPT = 58,
  GUILDPARAM_QUERY_GQUEST = 59,
  GUILDPARAM_TREASURE_ACTION = 60,
  GUILDPARAM_QUERY_BUILDING_RANK = 61,
  GUILDPARAM_TREASURE_QUERYRESULT = 62,
  GUILDPARAM_QUERY_CITYSHOW = 63,
  GUILDPARAM_OEPN_GVG = 64,
  GUILDPARAM_OPEN_REALTIME_VOICE = 65,
  GUILDPARAM_ENTERPUNISHTIME_NTF = 66
};
bool GuildParam_IsValid(int value);
const GuildParam GuildParam_MIN = GUILDPARAM_GUILDLIST;
const GuildParam GuildParam_MAX = GUILDPARAM_ENTERPUNISHTIME_NTF;
const int GuildParam_ARRAYSIZE = GuildParam_MAX + 1;

const ::google::protobuf::EnumDescriptor* GuildParam_descriptor();
inline const ::std::string& GuildParam_Name(GuildParam value) {
  return ::google::protobuf::internal::NameOfEnum(
    GuildParam_descriptor(), value);
}
inline bool GuildParam_Parse(
    const ::std::string& name, GuildParam* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GuildParam>(
    GuildParam_descriptor(), name, value);
}
enum EGuildGlobal {
  EGUILDGLOBAL_LISTCOUNT_PERPAGE = 20
};
bool EGuildGlobal_IsValid(int value);
const EGuildGlobal EGuildGlobal_MIN = EGUILDGLOBAL_LISTCOUNT_PERPAGE;
const EGuildGlobal EGuildGlobal_MAX = EGUILDGLOBAL_LISTCOUNT_PERPAGE;
const int EGuildGlobal_ARRAYSIZE = EGuildGlobal_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGuildGlobal_descriptor();
inline const ::std::string& EGuildGlobal_Name(EGuildGlobal value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGuildGlobal_descriptor(), value);
}
inline bool EGuildGlobal_Parse(
    const ::std::string& name, EGuildGlobal* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGuildGlobal>(
    EGuildGlobal_descriptor(), name, value);
}
enum EGuildJob {
  EGUILDJOB_MIN = 0,
  EGUILDJOB_CHAIRMAN = 1,
  EGUILDJOB_VICE_CHAIRMAN = 2,
  EGUILDJOB_MEMBER1 = 3,
  EGUILDJOB_MEMBER2 = 4,
  EGUILDJOB_MEMBER3 = 5,
  EGUILDJOB_APPLY = 6,
  EGUILDJOB_INVITE = 7,
  EGUILDJOB_MEMBER4 = 8,
  EGUILDJOB_MEMBER5 = 9,
  EGUILDJOB_MEMBER6 = 10,
  EGUILDJOB_MEMBER7 = 11,
  EGUILDJOB_MEMBER8 = 12,
  EGUILDJOB_MEMBER9 = 13,
  EGUILDJOB_MEMBER10 = 14,
  EGUILDJOB_MAX = 15
};
bool EGuildJob_IsValid(int value);
const EGuildJob EGuildJob_MIN = EGUILDJOB_MIN;
const EGuildJob EGuildJob_MAX = EGUILDJOB_MAX;
const int EGuildJob_ARRAYSIZE = EGuildJob_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGuildJob_descriptor();
inline const ::std::string& EGuildJob_Name(EGuildJob value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGuildJob_descriptor(), value);
}
inline bool EGuildJob_Parse(
    const ::std::string& name, EGuildJob* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGuildJob>(
    EGuildJob_descriptor(), name, value);
}
enum EPrayType {
  EPRAYTYPE_GODDESS = 0,
  EPRAYTYPE_GVG_ATK = 1,
  EPRAYTYPE_GVG_DEF = 2,
  EPRAYTYPE_GVG_ELE = 3,
  EPRAYTYPE_MAX = 4
};
bool EPrayType_IsValid(int value);
const EPrayType EPrayType_MIN = EPRAYTYPE_GODDESS;
const EPrayType EPrayType_MAX = EPRAYTYPE_MAX;
const int EPrayType_ARRAYSIZE = EPrayType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EPrayType_descriptor();
inline const ::std::string& EPrayType_Name(EPrayType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EPrayType_descriptor(), value);
}
inline bool EPrayType_Parse(
    const ::std::string& name, EPrayType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EPrayType>(
    EPrayType_descriptor(), name, value);
}
enum EGuildFunction {
  EGUILDFUNCTION_MIN = 0,
  EGUILDFUNCTION_BUILDING = 1,
  EGUILDFUNCTION_MAX = 2
};
bool EGuildFunction_IsValid(int value);
const EGuildFunction EGuildFunction_MIN = EGUILDFUNCTION_MIN;
const EGuildFunction EGuildFunction_MAX = EGUILDFUNCTION_MAX;
const int EGuildFunction_ARRAYSIZE = EGuildFunction_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGuildFunction_descriptor();
inline const ::std::string& EGuildFunction_Name(EGuildFunction value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGuildFunction_descriptor(), value);
}
inline bool EGuildFunction_Parse(
    const ::std::string& name, EGuildFunction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGuildFunction>(
    EGuildFunction_descriptor(), name, value);
}
enum EAuth {
  EAUTH_MIN = 0,
  EAUTH_INVITE = 1,
  EAUTH_AGREE = 2,
  EAUTH_DELETE_APPLYLIST = 3,
  EAUTH_EDIT_BOARD = 4,
  EAUTH_EDIT_RECRUIT = 5,
  EAUTH_CHANGE_PORTRAIT = 6,
  EAUTH_LEVELUP_GUILD = 7,
  EAUTH_LEVELUP_CON = 8,
  EAUTH_LEVELUP_TECH = 9,
  EAUTH_PUBLISH_QUEST = 10,
  EAUTH_KICK_MEMBER = 11,
  EAUTH_KICK_VICE = 12,
  EAUTH_CHANGE_JOB = 13,
  EAUTH_CHANGE_JOBNAME = 14,
  EAUTH_LEADER_GIVE = 15,
  EAUTH_DISMISS_GUILD = 16,
  EAUTH_EXCHANGE_ZONE = 17,
  EAUTH_OPEN_RAID = 18,
  EAUTH_UPLOAD_PHOTO = 19,
  EAUTH_GUILD_RENAME = 20,
  EAUTH_GIVEUP_CITY = 21,
  EAUTH_OPEN_BUILDING = 22,
  EAUTH_BUILD = 23,
  EAUTH_ARTIFACT_QUEST = 24,
  EAUTH_ARTIFACT_PRODUCE = 25,
  EAUTH_ARTIFACT_OPT = 26,
  EAUTH_TREASURE_OPT = 27,
  EAUTH_GUILD_SHOP = 28,
  EAUTH_VOICE = 29,
  EAUTH_MAX = 30
};
bool EAuth_IsValid(int value);
const EAuth EAuth_MIN = EAUTH_MIN;
const EAuth EAuth_MAX = EAUTH_MAX;
const int EAuth_ARRAYSIZE = EAuth_MAX + 1;

const ::google::protobuf::EnumDescriptor* EAuth_descriptor();
inline const ::std::string& EAuth_Name(EAuth value) {
  return ::google::protobuf::internal::NameOfEnum(
    EAuth_descriptor(), value);
}
inline bool EAuth_Parse(
    const ::std::string& name, EAuth* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EAuth>(
    EAuth_descriptor(), name, value);
}
enum EGuildBuilding {
  EGUILDBUILDING_MIN = 0,
  EGUILDBUILDING_VENDING_MACHINE = 1,
  EGUILDBUILDING_BAR = 2,
  EGUILDBUILDING_CAT_LITTER_BOX = 3,
  EGUILDBUILDING_MAGIC_SEWING = 4,
  EGUILDBUILDING_HIGH_REFINE = 5,
  EGUILDBUILDING_ARTIFACT_HEAD = 6,
  EGUILDBUILDING_CAT_PILLOW = 7,
  EGUILDBUILDING_MAX = 8
};
bool EGuildBuilding_IsValid(int value);
const EGuildBuilding EGuildBuilding_MIN = EGUILDBUILDING_MIN;
const EGuildBuilding EGuildBuilding_MAX = EGUILDBUILDING_MAX;
const int EGuildBuilding_ARRAYSIZE = EGuildBuilding_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGuildBuilding_descriptor();
inline const ::std::string& EGuildBuilding_Name(EGuildBuilding value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGuildBuilding_descriptor(), value);
}
inline bool EGuildBuilding_Parse(
    const ::std::string& name, EGuildBuilding* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGuildBuilding>(
    EGuildBuilding_descriptor(), name, value);
}
enum EGuildWelfare {
  EGUILDWELFARE_MIN = 0,
  EGUILDWELFARE_BUILDING = 1,
  EGUILDWELFARE_CHALLENGE = 2,
  EGUILDWELFARE_TREASURE = 3,
  EGUILDWELFARE_MAX = 4
};
bool EGuildWelfare_IsValid(int value);
const EGuildWelfare EGuildWelfare_MIN = EGUILDWELFARE_MIN;
const EGuildWelfare EGuildWelfare_MAX = EGUILDWELFARE_MAX;
const int EGuildWelfare_ARRAYSIZE = EGuildWelfare_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGuildWelfare_descriptor();
inline const ::std::string& EGuildWelfare_Name(EGuildWelfare value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGuildWelfare_descriptor(), value);
}
inline bool EGuildWelfare_Parse(
    const ::std::string& name, EGuildWelfare* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGuildWelfare>(
    EGuildWelfare_descriptor(), name, value);
}
enum ETreasureState {
  ETREASURESTATE_MIN = 0,
  ETREASURESTATE_UNGETED = 1,
  ETREASURESTATE_GETED = 2,
  ETREASURESTATE_UNENABLE = 3,
  ETREASURESTATE_MAX = 4
};
bool ETreasureState_IsValid(int value);
const ETreasureState ETreasureState_MIN = ETREASURESTATE_MIN;
const ETreasureState ETreasureState_MAX = ETREASURESTATE_MAX;
const int ETreasureState_ARRAYSIZE = ETreasureState_MAX + 1;

const ::google::protobuf::EnumDescriptor* ETreasureState_descriptor();
inline const ::std::string& ETreasureState_Name(ETreasureState value) {
  return ::google::protobuf::internal::NameOfEnum(
    ETreasureState_descriptor(), value);
}
inline bool ETreasureState_Parse(
    const ::std::string& name, ETreasureState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ETreasureState>(
    ETreasureState_descriptor(), name, value);
}
enum EGuildData {
  EGUILDDATA_MIN = 0,
  EGUILDDATA_ID = 1,
  EGUILDDATA_NAME = 2,
  EGUILDDATA_LEVEL = 3,
  EGUILDDATA_BOARDINFO = 6,
  EGUILDDATA_RECRUITINFO = 7,
  EGUILDDATA_PORTRAIT = 8,
  EGUILDDATA_QUEST_RESETTIME = 9,
  EGUILDDATA_ASSET = 10,
  EGUILDDATA_DISMISSTIME = 11,
  EGUILDDATA_MEMBER = 18,
  EGUILDDATA_APPLY = 19,
  EGUILDDATA_MISC = 20,
  EGUILDDATA_PACK = 21,
  EGUILDDATA_ZONEID = 22,
  EGUILDDATA_ZONETIME = 23,
  EGUILDDATA_NEXTZONE = 24,
  EGUILDDATA_DONATETIME1 = 25,
  EGUILDDATA_DONATETIME2 = 26,
  EGUILDDATA_EVENT = 27,
  EGUILDDATA_DONATETIME3 = 28,
  EGUILDDATA_DONATETIME4 = 29,
  EGUILDDATA_ASSET_DAY = 37,
  EGUILDDATA_PHOTO = 38,
  EGUILDDATA_CITYID = 43,
  EGUILDDATA_CITY_GIVEUP_CD = 44,
  EGUILDDATA_OPEN_FUNCTION = 45,
  EGUILDDATA_TREASURE_GVG_COUNT = 46,
  EGUILDDATA_TREASURE_GUILD_COUNT = 47,
  EGUILDDATA_TREASURE_BCOIN_COUNT = 48,
  EGUILDDATA_SUPERGVG = 49,
  EGUILDDATA_SUPERGVG_LV = 50,
  EGUILDDATA_MAX = 51
};
bool EGuildData_IsValid(int value);
const EGuildData EGuildData_MIN = EGUILDDATA_MIN;
const EGuildData EGuildData_MAX = EGUILDDATA_MAX;
const int EGuildData_ARRAYSIZE = EGuildData_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGuildData_descriptor();
inline const ::std::string& EGuildData_Name(EGuildData value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGuildData_descriptor(), value);
}
inline bool EGuildData_Parse(
    const ::std::string& name, EGuildData* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGuildData>(
    EGuildData_descriptor(), name, value);
}
enum EGuildList {
  EGUILDLIST_MEMBER = 1,
  EGUILDLIST_APPLY = 2
};
bool EGuildList_IsValid(int value);
const EGuildList EGuildList_MIN = EGUILDLIST_MEMBER;
const EGuildList EGuildList_MAX = EGUILDLIST_APPLY;
const int EGuildList_ARRAYSIZE = EGuildList_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGuildList_descriptor();
inline const ::std::string& EGuildList_Name(EGuildList value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGuildList_descriptor(), value);
}
inline bool EGuildList_Parse(
    const ::std::string& name, EGuildList* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGuildList>(
    EGuildList_descriptor(), name, value);
}
enum EGuildMemberData {
  EGUILDMEMBERDATA_MIN = 0,
  EGUILDMEMBERDATA_BASELEVEL = 1,
  EGUILDMEMBERDATA_WEEKCONTRIBUTION = 2,
  EGUILDMEMBERDATA_CONTRIBUTION = 3,
  EGUILDMEMBERDATA_TOTALCONTRIBUTION = 14,
  EGUILDMEMBERDATA_ENTERTIME = 4,
  EGUILDMEMBERDATA_OFFLINETIME = 5,
  EGUILDMEMBERDATA_PROFESSION = 6,
  EGUILDMEMBERDATA_PORTRAIT = 7,
  EGUILDMEMBERDATA_FRAME = 8,
  EGUILDMEMBERDATA_HAIR = 9,
  EGUILDMEMBERDATA_HAIRCOLOR = 10,
  EGUILDMEMBERDATA_BODY = 11,
  EGUILDMEMBERDATA_JOB = 12,
  EGUILDMEMBERDATA_LEVELUPEFFECT = 15,
  EGUILDMEMBERDATA_WEEKASSET = 16,
  EGUILDMEMBERDATA_ASSET = 17,
  EGUILDMEMBERDATA_ZONEID = 18,
  EGUILDMEMBERDATA_NAME = 19,
  EGUILDMEMBERDATA_ONLINETIME = 20,
  EGUILDMEMBERDATA_HEAD = 21,
  EGUILDMEMBERDATA_FACE = 22,
  EGUILDMEMBERDATA_MOUTH = 23,
  EGUILDMEMBERDATA_EYE = 24,
  EGUILDMEMBERDATA_BUILDINGEFFECT = 25,
  EGUILDMEMBERDATA_GENDER = 26,
  EGUILDMEMBERDATA_REALTIMEVOICE = 27,
  EGUILDMEMBERDATA_WEEKBCOIN = 28,
  EGUILDMEMBERDATA_TOTALBCOIN = 29,
  EGUILDMEMBERDATA_MAX = 30
};
bool EGuildMemberData_IsValid(int value);
const EGuildMemberData EGuildMemberData_MIN = EGUILDMEMBERDATA_MIN;
const EGuildMemberData EGuildMemberData_MAX = EGUILDMEMBERDATA_MAX;
const int EGuildMemberData_ARRAYSIZE = EGuildMemberData_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGuildMemberData_descriptor();
inline const ::std::string& EGuildMemberData_Name(EGuildMemberData value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGuildMemberData_descriptor(), value);
}
inline bool EGuildMemberData_Parse(
    const ::std::string& name, EGuildMemberData* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGuildMemberData>(
    EGuildMemberData_descriptor(), name, value);
}
enum EGuildAction {
  EGUILDACTION_MIN = 0,
  EGUILDACTION_AGREE = 1,
  EGUILDACTION_DISAGREE = 2,
  EGUILDACTION_MAX = 3
};
bool EGuildAction_IsValid(int value);
const EGuildAction EGuildAction_MIN = EGUILDACTION_MIN;
const EGuildAction EGuildAction_MAX = EGUILDACTION_MAX;
const int EGuildAction_ARRAYSIZE = EGuildAction_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGuildAction_descriptor();
inline const ::std::string& EGuildAction_Name(EGuildAction value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGuildAction_descriptor(), value);
}
inline bool EGuildAction_Parse(
    const ::std::string& name, EGuildAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGuildAction>(
    EGuildAction_descriptor(), name, value);
}
enum EModify {
  EMODIFY_MIN = 0,
  EMODIFY_AUTH = 1,
  EMODIFY_EDITAUTH = 2,
  EMODIFY_MAX = 3
};
bool EModify_IsValid(int value);
const EModify EModify_MIN = EMODIFY_MIN;
const EModify EModify_MAX = EMODIFY_MAX;
const int EModify_ARRAYSIZE = EModify_MAX + 1;

const ::google::protobuf::EnumDescriptor* EModify_descriptor();
inline const ::std::string& EModify_Name(EModify value) {
  return ::google::protobuf::internal::NameOfEnum(
    EModify_descriptor(), value);
}
inline bool EModify_Parse(
    const ::std::string& name, EModify* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EModify>(
    EModify_descriptor(), name, value);
}
enum EGuildCityStatus {
  EGUILDCITYSTATUS_MIN = 0,
  EGUILDCITYSTATUS_NONE = 1,
  EGUILDCITYSTATUS_OCCUPY = 2,
  EGUILDCITYSTATUS_GIVEUP = 3,
  EGUILDCITYSTATUS_FINISH = 4,
  EGUILDCITYSTATUS_MAX = 5
};
bool EGuildCityStatus_IsValid(int value);
const EGuildCityStatus EGuildCityStatus_MIN = EGUILDCITYSTATUS_MIN;
const EGuildCityStatus EGuildCityStatus_MAX = EGUILDCITYSTATUS_MAX;
const int EGuildCityStatus_ARRAYSIZE = EGuildCityStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGuildCityStatus_descriptor();
inline const ::std::string& EGuildCityStatus_Name(EGuildCityStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGuildCityStatus_descriptor(), value);
}
inline bool EGuildCityStatus_Parse(
    const ::std::string& name, EGuildCityStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGuildCityStatus>(
    EGuildCityStatus_descriptor(), name, value);
}
enum ECityAction {
  ECITYACTION_MIN = 0,
  ECITYACTION_GIVEUP = 1,
  ECITYACTION_CANCEL_GIVEUP = 2,
  ECITYACTION_MAX = 3
};
bool ECityAction_IsValid(int value);
const ECityAction ECityAction_MIN = ECITYACTION_MIN;
const ECityAction ECityAction_MAX = ECITYACTION_MAX;
const int ECityAction_ARRAYSIZE = ECityAction_MAX + 1;

const ::google::protobuf::EnumDescriptor* ECityAction_descriptor();
inline const ::std::string& ECityAction_Name(ECityAction value) {
  return ::google::protobuf::internal::NameOfEnum(
    ECityAction_descriptor(), value);
}
inline bool ECityAction_Parse(
    const ::std::string& name, ECityAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ECityAction>(
    ECityAction_descriptor(), name, value);
}
enum EIconState {
  EICON_INIT = 0,
  EICON_PASS = 1,
  EICON_FORBID = 2
};
bool EIconState_IsValid(int value);
const EIconState EIconState_MIN = EICON_INIT;
const EIconState EIconState_MAX = EICON_FORBID;
const int EIconState_ARRAYSIZE = EIconState_MAX + 1;

const ::google::protobuf::EnumDescriptor* EIconState_descriptor();
inline const ::std::string& EIconState_Name(EIconState value) {
  return ::google::protobuf::internal::NameOfEnum(
    EIconState_descriptor(), value);
}
inline bool EIconState_Parse(
    const ::std::string& name, EIconState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EIconState>(
    EIconState_descriptor(), name, value);
}
enum EArtifactOptType {
  EARTIFACTOPTTYPE_MIN = 0,
  EARTIFACTOPTTYPE_DISTRIBUTE = 1,
  EARTIFACTOPTTYPE_RETRIEVE = 2,
  EARTIFACTOPTTYPE_RETRIEVE_CANCEL = 3,
  EARTIFACTOPTTYPE_GIVEBACK = 4,
  EARTIFACTOPTTYPE_MAX = 5
};
bool EArtifactOptType_IsValid(int value);
const EArtifactOptType EArtifactOptType_MIN = EARTIFACTOPTTYPE_MIN;
const EArtifactOptType EArtifactOptType_MAX = EARTIFACTOPTTYPE_MAX;
const int EArtifactOptType_ARRAYSIZE = EArtifactOptType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EArtifactOptType_descriptor();
inline const ::std::string& EArtifactOptType_Name(EArtifactOptType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EArtifactOptType_descriptor(), value);
}
inline bool EArtifactOptType_Parse(
    const ::std::string& name, EArtifactOptType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EArtifactOptType>(
    EArtifactOptType_descriptor(), name, value);
}
enum EGuildTreasureType {
  EGUILDTREASURETYPE_MIN = 0,
  EGUILDTREASURETYPE_GVG = 1,
  EGUILDTREASURETYPE_GUILD_BCOIN = 2,
  EGUILDTREASURETYPE_GUILD_ASSET = 3,
  EGUILDTREASURETYPE_PREVIEW = 4,
  EGUILDTREASURETYPE_MAX = 5
};
bool EGuildTreasureType_IsValid(int value);
const EGuildTreasureType EGuildTreasureType_MIN = EGUILDTREASURETYPE_MIN;
const EGuildTreasureType EGuildTreasureType_MAX = EGUILDTREASURETYPE_MAX;
const int EGuildTreasureType_ARRAYSIZE = EGuildTreasureType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGuildTreasureType_descriptor();
inline const ::std::string& EGuildTreasureType_Name(EGuildTreasureType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGuildTreasureType_descriptor(), value);
}
inline bool EGuildTreasureType_Parse(
    const ::std::string& name, EGuildTreasureType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGuildTreasureType>(
    EGuildTreasureType_descriptor(), name, value);
}
enum ETreasureAction {
  ETREASUREACTION_MIN = 0,
  ETREASUREACTION_GVG_FRAME_ON = 1,
  ETREASUREACTION_GUILD_FRAME_ON = 2,
  ETREASUREACTION_FRAME_OFF = 3,
  ETREASUREACTION_LEFT = 4,
  ETREASUREACTION_RIGHT = 5,
  ETREASUREACTION_OPEN_GVG = 6,
  ETREASUREACTION_OPEN_GUILD = 7,
  ETREASUREACTION_MAX = 8
};
bool ETreasureAction_IsValid(int value);
const ETreasureAction ETreasureAction_MIN = ETREASUREACTION_MIN;
const ETreasureAction ETreasureAction_MAX = ETREASUREACTION_MAX;
const int ETreasureAction_ARRAYSIZE = ETreasureAction_MAX + 1;

const ::google::protobuf::EnumDescriptor* ETreasureAction_descriptor();
inline const ::std::string& ETreasureAction_Name(ETreasureAction value) {
  return ::google::protobuf::internal::NameOfEnum(
    ETreasureAction_descriptor(), value);
}
inline bool ETreasureAction_Parse(
    const ::std::string& name, ETreasureAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ETreasureAction>(
    ETreasureAction_descriptor(), name, value);
}
enum ETreasurePoint {
  ETREASUREPOINT_MIN = 0,
  ETREASUREPOINT_LEFT = 1,
  ETREASUREPOINT_RIGHT = 2,
  ETREASUREPOINT_NONE = 3,
  ETREASUREPOINT_ALL = 4
};
bool ETreasurePoint_IsValid(int value);
const ETreasurePoint ETreasurePoint_MIN = ETREASUREPOINT_MIN;
const ETreasurePoint ETreasurePoint_MAX = ETREASUREPOINT_ALL;
const int ETreasurePoint_ARRAYSIZE = ETreasurePoint_MAX + 1;

const ::google::protobuf::EnumDescriptor* ETreasurePoint_descriptor();
inline const ::std::string& ETreasurePoint_Name(ETreasurePoint value) {
  return ::google::protobuf::internal::NameOfEnum(
    ETreasurePoint_descriptor(), value);
}
inline bool ETreasurePoint_Parse(
    const ::std::string& name, ETreasurePoint* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ETreasurePoint>(
    ETreasurePoint_descriptor(), name, value);
}
enum EGCityState {
  EGCITYSTATE_MIN = 0,
  EGCITYSTATE_CRIFIRE = 1,
  EGCITYSTATE_ATTFIRE = 2,
  EGCITYSTATE_DEFFIRE = 3,
  EGCITYSTATE_NORMALFIRE = 4,
  EGCITYSTATE_PERFECT = 5,
  EGCITYSTATE_NOOWNER = 6,
  EGCITYSTATE_OCCUPY = 7
};
bool EGCityState_IsValid(int value);
const EGCityState EGCityState_MIN = EGCITYSTATE_MIN;
const EGCityState EGCityState_MAX = EGCITYSTATE_OCCUPY;
const int EGCityState_ARRAYSIZE = EGCityState_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGCityState_descriptor();
inline const ::std::string& EGCityState_Name(EGCityState value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGCityState_descriptor(), value);
}
inline bool EGCityState_Parse(
    const ::std::string& name, EGCityState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGCityState>(
    EGCityState_descriptor(), name, value);
}
// ===================================================================

class GuildPrayCFG : public ::google::protobuf::Message {
 public:
  GuildPrayCFG();
  virtual ~GuildPrayCFG();

  GuildPrayCFG(const GuildPrayCFG& from);

  inline GuildPrayCFG& operator=(const GuildPrayCFG& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildPrayCFG& default_instance();

  void Swap(GuildPrayCFG* other);

  // implements Message ----------------------------------------------

  GuildPrayCFG* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildPrayCFG& from);
  void MergeFrom(const GuildPrayCFG& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 prayid = 1 [default = 0];
  inline bool has_prayid() const;
  inline void clear_prayid();
  static const int kPrayidFieldNumber = 1;
  inline ::google::protobuf::uint32 prayid() const;
  inline void set_prayid(::google::protobuf::uint32 value);

  // optional uint32 praylv = 2 [default = 0];
  inline bool has_praylv() const;
  inline void clear_praylv();
  static const int kPraylvFieldNumber = 2;
  inline ::google::protobuf::uint32 praylv() const;
  inline void set_praylv(::google::protobuf::uint32 value);

  // optional .Cmd.EPrayType type = 3 [default = EPRAYTYPE_GODDESS];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::Cmd::EPrayType type() const;
  inline void set_type(::Cmd::EPrayType value);

  // repeated .Cmd.UserAttr attrs = 4;
  inline int attrs_size() const;
  inline void clear_attrs();
  static const int kAttrsFieldNumber = 4;
  inline const ::Cmd::UserAttr& attrs(int index) const;
  inline ::Cmd::UserAttr* mutable_attrs(int index);
  inline ::Cmd::UserAttr* add_attrs();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >&
      attrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >*
      mutable_attrs();

  // repeated .Cmd.ItemInfo costs = 5;
  inline int costs_size() const;
  inline void clear_costs();
  static const int kCostsFieldNumber = 5;
  inline const ::Cmd::ItemInfo& costs(int index) const;
  inline ::Cmd::ItemInfo* mutable_costs(int index);
  inline ::Cmd::ItemInfo* add_costs();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo >&
      costs() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo >*
      mutable_costs();

  // @@protoc_insertion_point(class_scope:Cmd.GuildPrayCFG)
 private:
  inline void set_has_prayid();
  inline void clear_has_prayid();
  inline void set_has_praylv();
  inline void clear_has_praylv();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 prayid_;
  ::google::protobuf::uint32 praylv_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr > attrs_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo > costs_;
  int type_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildPrayCFG* default_instance_;
};
// -------------------------------------------------------------------

class GuildMemberPray : public ::google::protobuf::Message {
 public:
  GuildMemberPray();
  virtual ~GuildMemberPray();

  GuildMemberPray(const GuildMemberPray& from);

  inline GuildMemberPray& operator=(const GuildMemberPray& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMemberPray& default_instance();

  void Swap(GuildMemberPray* other);

  // implements Message ----------------------------------------------

  GuildMemberPray* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMemberPray& from);
  void MergeFrom(const GuildMemberPray& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 pray = 1 [default = 0];
  inline bool has_pray() const;
  inline void clear_pray();
  static const int kPrayFieldNumber = 1;
  inline ::google::protobuf::uint32 pray() const;
  inline void set_pray(::google::protobuf::uint32 value);

  // optional uint32 lv = 2 [default = 0];
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 2;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);

  // optional .Cmd.GuildPrayCFG cur = 3;
  inline bool has_cur() const;
  inline void clear_cur();
  static const int kCurFieldNumber = 3;
  inline const ::Cmd::GuildPrayCFG& cur() const;
  inline ::Cmd::GuildPrayCFG* mutable_cur();
  inline ::Cmd::GuildPrayCFG* release_cur();
  inline void set_allocated_cur(::Cmd::GuildPrayCFG* cur);

  // optional .Cmd.GuildPrayCFG next = 4;
  inline bool has_next() const;
  inline void clear_next();
  static const int kNextFieldNumber = 4;
  inline const ::Cmd::GuildPrayCFG& next() const;
  inline ::Cmd::GuildPrayCFG* mutable_next();
  inline ::Cmd::GuildPrayCFG* release_next();
  inline void set_allocated_next(::Cmd::GuildPrayCFG* next);

  // @@protoc_insertion_point(class_scope:Cmd.GuildMemberPray)
 private:
  inline void set_has_pray();
  inline void clear_has_pray();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_cur();
  inline void clear_has_cur();
  inline void set_has_next();
  inline void clear_has_next();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 pray_;
  ::google::protobuf::uint32 lv_;
  ::Cmd::GuildPrayCFG* cur_;
  ::Cmd::GuildPrayCFG* next_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildMemberPray* default_instance_;
};
// -------------------------------------------------------------------

class BlobGuildPray : public ::google::protobuf::Message {
 public:
  BlobGuildPray();
  virtual ~BlobGuildPray();

  BlobGuildPray(const BlobGuildPray& from);

  inline BlobGuildPray& operator=(const BlobGuildPray& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlobGuildPray& default_instance();

  void Swap(BlobGuildPray* other);

  // implements Message ----------------------------------------------

  BlobGuildPray* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlobGuildPray& from);
  void MergeFrom(const BlobGuildPray& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Cmd.GuildMemberPray prays = 1;
  inline int prays_size() const;
  inline void clear_prays();
  static const int kPraysFieldNumber = 1;
  inline const ::Cmd::GuildMemberPray& prays(int index) const;
  inline ::Cmd::GuildMemberPray* mutable_prays(int index);
  inline ::Cmd::GuildMemberPray* add_prays();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMemberPray >&
      prays() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMemberPray >*
      mutable_prays();

  // @@protoc_insertion_point(class_scope:Cmd.BlobGuildPray)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMemberPray > prays_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static BlobGuildPray* default_instance_;
};
// -------------------------------------------------------------------

class BlobDonate : public ::google::protobuf::Message {
 public:
  BlobDonate();
  virtual ~BlobDonate();

  BlobDonate(const BlobDonate& from);

  inline BlobDonate& operator=(const BlobDonate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlobDonate& default_instance();

  void Swap(BlobDonate* other);

  // implements Message ----------------------------------------------

  BlobDonate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlobDonate& from);
  void MergeFrom(const BlobDonate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Cmd.DonateItem items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::Cmd::DonateItem& items(int index) const;
  inline ::Cmd::DonateItem* mutable_items(int index);
  inline ::Cmd::DonateItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::DonateItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::DonateItem >*
      mutable_items();

  // repeated uint32 steps = 2;
  inline int steps_size() const;
  inline void clear_steps();
  static const int kStepsFieldNumber = 2;
  inline ::google::protobuf::uint32 steps(int index) const;
  inline void set_steps(int index, ::google::protobuf::uint32 value);
  inline void add_steps(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      steps() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_steps();

  // optional uint32 donatetime1 = 3 [default = 0];
  inline bool has_donatetime1() const;
  inline void clear_donatetime1();
  static const int kDonatetime1FieldNumber = 3;
  inline ::google::protobuf::uint32 donatetime1() const;
  inline void set_donatetime1(::google::protobuf::uint32 value);

  // optional uint32 donatetime2 = 4 [default = 0];
  inline bool has_donatetime2() const;
  inline void clear_donatetime2();
  static const int kDonatetime2FieldNumber = 4;
  inline ::google::protobuf::uint32 donatetime2() const;
  inline void set_donatetime2(::google::protobuf::uint32 value);

  // optional uint32 donatetime3 = 5 [default = 0];
  inline bool has_donatetime3() const;
  inline void clear_donatetime3();
  static const int kDonatetime3FieldNumber = 5;
  inline ::google::protobuf::uint32 donatetime3() const;
  inline void set_donatetime3(::google::protobuf::uint32 value);

  // optional uint32 donatetime4 = 6 [default = 0];
  inline bool has_donatetime4() const;
  inline void clear_donatetime4();
  static const int kDonatetime4FieldNumber = 6;
  inline ::google::protobuf::uint32 donatetime4() const;
  inline void set_donatetime4(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.BlobDonate)
 private:
  inline void set_has_donatetime1();
  inline void clear_has_donatetime1();
  inline void set_has_donatetime2();
  inline void clear_has_donatetime2();
  inline void set_has_donatetime3();
  inline void clear_has_donatetime3();
  inline void set_has_donatetime4();
  inline void clear_has_donatetime4();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::DonateItem > items_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > steps_;
  ::google::protobuf::uint32 donatetime1_;
  ::google::protobuf::uint32 donatetime2_;
  ::google::protobuf::uint32 donatetime3_;
  ::google::protobuf::uint32 donatetime4_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static BlobDonate* default_instance_;
};
// -------------------------------------------------------------------

class UserGuildBuilding : public ::google::protobuf::Message {
 public:
  UserGuildBuilding();
  virtual ~UserGuildBuilding();

  UserGuildBuilding(const UserGuildBuilding& from);

  inline UserGuildBuilding& operator=(const UserGuildBuilding& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserGuildBuilding& default_instance();

  void Swap(UserGuildBuilding* other);

  // implements Message ----------------------------------------------

  UserGuildBuilding* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserGuildBuilding& from);
  void MergeFrom(const UserGuildBuilding& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.EGuildBuilding type = 1 [default = EGUILDBUILDING_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Cmd::EGuildBuilding type() const;
  inline void set_type(::Cmd::EGuildBuilding value);

  // optional uint32 submitcount = 2 [default = 0];
  inline bool has_submitcount() const;
  inline void clear_submitcount();
  static const int kSubmitcountFieldNumber = 2;
  inline ::google::protobuf::uint32 submitcount() const;
  inline void set_submitcount(::google::protobuf::uint32 value);

  // optional uint32 nextwelfaretime = 3 [default = 0];
  inline bool has_nextwelfaretime() const;
  inline void clear_nextwelfaretime();
  static const int kNextwelfaretimeFieldNumber = 3;
  inline ::google::protobuf::uint32 nextwelfaretime() const;
  inline void set_nextwelfaretime(::google::protobuf::uint32 value);

  // optional bool levelupeffect = 4 [default = false];
  inline bool has_levelupeffect() const;
  inline void clear_levelupeffect();
  static const int kLevelupeffectFieldNumber = 4;
  inline bool levelupeffect() const;
  inline void set_levelupeffect(bool value);

  // optional uint32 submitcounttotal = 5 [default = 0];
  inline bool has_submitcounttotal() const;
  inline void clear_submitcounttotal();
  static const int kSubmitcounttotalFieldNumber = 5;
  inline ::google::protobuf::uint32 submitcounttotal() const;
  inline void set_submitcounttotal(::google::protobuf::uint32 value);

  // optional uint32 submittime = 6 [default = 0];
  inline bool has_submittime() const;
  inline void clear_submittime();
  static const int kSubmittimeFieldNumber = 6;
  inline ::google::protobuf::uint32 submittime() const;
  inline void set_submittime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.UserGuildBuilding)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_submitcount();
  inline void clear_has_submitcount();
  inline void set_has_nextwelfaretime();
  inline void clear_has_nextwelfaretime();
  inline void set_has_levelupeffect();
  inline void clear_has_levelupeffect();
  inline void set_has_submitcounttotal();
  inline void clear_has_submitcounttotal();
  inline void set_has_submittime();
  inline void clear_has_submittime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 submitcount_;
  ::google::protobuf::uint32 nextwelfaretime_;
  bool levelupeffect_;
  ::google::protobuf::uint32 submitcounttotal_;
  ::google::protobuf::uint32 submittime_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static UserGuildBuilding* default_instance_;
};
// -------------------------------------------------------------------

class BlobGuildBuilding : public ::google::protobuf::Message {
 public:
  BlobGuildBuilding();
  virtual ~BlobGuildBuilding();

  BlobGuildBuilding(const BlobGuildBuilding& from);

  inline BlobGuildBuilding& operator=(const BlobGuildBuilding& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlobGuildBuilding& default_instance();

  void Swap(BlobGuildBuilding* other);

  // implements Message ----------------------------------------------

  BlobGuildBuilding* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlobGuildBuilding& from);
  void MergeFrom(const BlobGuildBuilding& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Cmd.UserGuildBuilding buildings = 1;
  inline int buildings_size() const;
  inline void clear_buildings();
  static const int kBuildingsFieldNumber = 1;
  inline const ::Cmd::UserGuildBuilding& buildings(int index) const;
  inline ::Cmd::UserGuildBuilding* mutable_buildings(int index);
  inline ::Cmd::UserGuildBuilding* add_buildings();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UserGuildBuilding >&
      buildings() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::UserGuildBuilding >*
      mutable_buildings();

  // @@protoc_insertion_point(class_scope:Cmd.BlobGuildBuilding)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::UserGuildBuilding > buildings_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static BlobGuildBuilding* default_instance_;
};
// -------------------------------------------------------------------

class GuildMember : public ::google::protobuf::Message {
 public:
  GuildMember();
  virtual ~GuildMember();

  GuildMember(const GuildMember& from);

  inline GuildMember& operator=(const GuildMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMember& default_instance();

  void Swap(GuildMember* other);

  // implements Message ----------------------------------------------

  GuildMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMember& from);
  void MergeFrom(const GuildMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charid = 1 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 baselevel = 2 [default = 0];
  inline bool has_baselevel() const;
  inline void clear_baselevel();
  static const int kBaselevelFieldNumber = 2;
  inline ::google::protobuf::uint32 baselevel() const;
  inline void set_baselevel(::google::protobuf::uint32 value);

  // optional uint32 portrait = 3 [default = 0];
  inline bool has_portrait() const;
  inline void clear_portrait();
  static const int kPortraitFieldNumber = 3;
  inline ::google::protobuf::uint32 portrait() const;
  inline void set_portrait(::google::protobuf::uint32 value);

  // optional uint32 frame = 4 [default = 0];
  inline bool has_frame() const;
  inline void clear_frame();
  static const int kFrameFieldNumber = 4;
  inline ::google::protobuf::uint32 frame() const;
  inline void set_frame(::google::protobuf::uint32 value);

  // optional uint32 weekcontribution = 5 [default = 0];
  inline bool has_weekcontribution() const;
  inline void clear_weekcontribution();
  static const int kWeekcontributionFieldNumber = 5;
  inline ::google::protobuf::uint32 weekcontribution() const;
  inline void set_weekcontribution(::google::protobuf::uint32 value);

  // optional uint32 contribution = 6 [default = 0];
  inline bool has_contribution() const;
  inline void clear_contribution();
  static const int kContributionFieldNumber = 6;
  inline ::google::protobuf::uint32 contribution() const;
  inline void set_contribution(::google::protobuf::uint32 value);

  // optional uint32 totalcontribution = 19 [default = 0];
  inline bool has_totalcontribution() const;
  inline void clear_totalcontribution();
  static const int kTotalcontributionFieldNumber = 19;
  inline ::google::protobuf::uint32 totalcontribution() const;
  inline void set_totalcontribution(::google::protobuf::uint32 value);

  // optional uint32 entertime = 7 [default = 0];
  inline bool has_entertime() const;
  inline void clear_entertime();
  static const int kEntertimeFieldNumber = 7;
  inline ::google::protobuf::uint32 entertime() const;
  inline void set_entertime(::google::protobuf::uint32 value);

  // optional uint32 offlinetime = 8 [default = 0];
  inline bool has_offlinetime() const;
  inline void clear_offlinetime();
  static const int kOfflinetimeFieldNumber = 8;
  inline ::google::protobuf::uint32 offlinetime() const;
  inline void set_offlinetime(::google::protobuf::uint32 value);

  // optional uint32 giftpoint = 9 [default = 0];
  inline bool has_giftpoint() const;
  inline void clear_giftpoint();
  static const int kGiftpointFieldNumber = 9;
  inline ::google::protobuf::uint32 giftpoint() const;
  inline void set_giftpoint(::google::protobuf::uint32 value);

  // optional uint32 hair = 16 [default = 0];
  inline bool has_hair() const;
  inline void clear_hair();
  static const int kHairFieldNumber = 16;
  inline ::google::protobuf::uint32 hair() const;
  inline void set_hair(::google::protobuf::uint32 value);

  // optional uint32 haircolor = 17 [default = 0];
  inline bool has_haircolor() const;
  inline void clear_haircolor();
  static const int kHaircolorFieldNumber = 17;
  inline ::google::protobuf::uint32 haircolor() const;
  inline void set_haircolor(::google::protobuf::uint32 value);

  // optional uint32 body = 18 [default = 0];
  inline bool has_body() const;
  inline void clear_body();
  static const int kBodyFieldNumber = 18;
  inline ::google::protobuf::uint32 body() const;
  inline void set_body(::google::protobuf::uint32 value);

  // optional uint32 weekasset = 22 [default = 0];
  inline bool has_weekasset() const;
  inline void clear_weekasset();
  static const int kWeekassetFieldNumber = 22;
  inline ::google::protobuf::uint32 weekasset() const;
  inline void set_weekasset(::google::protobuf::uint32 value);

  // optional uint32 asset = 23 [default = 0];
  inline bool has_asset() const;
  inline void clear_asset();
  static const int kAssetFieldNumber = 23;
  inline ::google::protobuf::uint32 asset() const;
  inline void set_asset(::google::protobuf::uint32 value);

  // optional uint32 zoneid = 24 [default = 0];
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 24;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 head = 25 [default = 0];
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 25;
  inline ::google::protobuf::uint32 head() const;
  inline void set_head(::google::protobuf::uint32 value);

  // optional uint32 face = 28 [default = 0];
  inline bool has_face() const;
  inline void clear_face();
  static const int kFaceFieldNumber = 28;
  inline ::google::protobuf::uint32 face() const;
  inline void set_face(::google::protobuf::uint32 value);

  // optional uint32 mouth = 29 [default = 0];
  inline bool has_mouth() const;
  inline void clear_mouth();
  static const int kMouthFieldNumber = 29;
  inline ::google::protobuf::uint32 mouth() const;
  inline void set_mouth(::google::protobuf::uint32 value);

  // optional uint32 eye = 30 [default = 0];
  inline bool has_eye() const;
  inline void clear_eye();
  static const int kEyeFieldNumber = 30;
  inline ::google::protobuf::uint32 eye() const;
  inline void set_eye(::google::protobuf::uint32 value);

  // optional .Cmd.EGender gender = 10 [default = EGENDER_MIN];
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 10;
  inline ::Cmd::EGender gender() const;
  inline void set_gender(::Cmd::EGender value);

  // optional .Cmd.EProfession profession = 11 [default = EPROFESSION_MIN];
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 11;
  inline ::Cmd::EProfession profession() const;
  inline void set_profession(::Cmd::EProfession value);

  // optional .Cmd.EGuildJob job = 12 [default = EGUILDJOB_MIN];
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 12;
  inline ::Cmd::EGuildJob job() const;
  inline void set_job(::Cmd::EGuildJob value);

  // optional string name = 13;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 13;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional bytes var = 14;
  inline bool has_var() const;
  inline void clear_var();
  static const int kVarFieldNumber = 14;
  inline const ::std::string& var() const;
  inline void set_var(const ::std::string& value);
  inline void set_var(const char* value);
  inline void set_var(const void* value, size_t size);
  inline ::std::string* mutable_var();
  inline ::std::string* release_var();
  inline void set_allocated_var(::std::string* var);

  // optional .Cmd.BlobGuildPray pray = 15;
  inline bool has_pray() const;
  inline void clear_pray();
  static const int kPrayFieldNumber = 15;
  inline const ::Cmd::BlobGuildPray& pray() const;
  inline ::Cmd::BlobGuildPray* mutable_pray();
  inline ::Cmd::BlobGuildPray* release_pray();
  inline void set_allocated_pray(::Cmd::BlobGuildPray* pray);

  // optional .Cmd.BlobDonate donate = 21;
  inline bool has_donate() const;
  inline void clear_donate();
  static const int kDonateFieldNumber = 21;
  inline const ::Cmd::BlobDonate& donate() const;
  inline ::Cmd::BlobDonate* mutable_donate();
  inline ::Cmd::BlobDonate* release_donate();
  inline void set_allocated_donate(::Cmd::BlobDonate* donate);

  // optional bool levelupeffect = 20 [default = false];
  inline bool has_levelupeffect() const;
  inline void clear_levelupeffect();
  static const int kLevelupeffectFieldNumber = 20;
  inline bool levelupeffect() const;
  inline void set_levelupeffect(bool value);

  // optional bool exchangezone = 26 [default = false];
  inline bool has_exchangezone() const;
  inline void clear_exchangezone();
  static const int kExchangezoneFieldNumber = 26;
  inline bool exchangezone() const;
  inline void set_exchangezone(bool value);

  // optional uint32 accid = 27;
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 27;
  inline ::google::protobuf::uint32 accid() const;
  inline void set_accid(::google::protobuf::uint32 value);

  // optional .Cmd.BlobGuildBuilding building = 31;
  inline bool has_building() const;
  inline void clear_building();
  static const int kBuildingFieldNumber = 31;
  inline const ::Cmd::BlobGuildBuilding& building() const;
  inline ::Cmd::BlobGuildBuilding* mutable_building();
  inline ::Cmd::BlobGuildBuilding* release_building();
  inline void set_allocated_building(::Cmd::BlobGuildBuilding* building);

  // optional uint64 challenge = 32 [default = 0];
  inline bool has_challenge() const;
  inline void clear_challenge();
  static const int kChallengeFieldNumber = 32;
  inline ::google::protobuf::uint64 challenge() const;
  inline void set_challenge(::google::protobuf::uint64 value);

  // optional uint32 lastexittime = 33 [default = 0];
  inline bool has_lastexittime() const;
  inline void clear_lastexittime();
  static const int kLastexittimeFieldNumber = 33;
  inline ::google::protobuf::uint32 lastexittime() const;
  inline void set_lastexittime(::google::protobuf::uint32 value);

  // optional uint64 redtip = 34 [default = 0];
  inline bool has_redtip() const;
  inline void clear_redtip();
  static const int kRedtipFieldNumber = 34;
  inline ::google::protobuf::uint64 redtip() const;
  inline void set_redtip(::google::protobuf::uint64 value);

  // optional bool buildingeffect = 35 [default = false];
  inline bool has_buildingeffect() const;
  inline void clear_buildingeffect();
  static const int kBuildingeffectFieldNumber = 35;
  inline bool buildingeffect() const;
  inline void set_buildingeffect(bool value);

  // optional bool realtimevoice = 36 [default = false];
  inline bool has_realtimevoice() const;
  inline void clear_realtimevoice();
  static const int kRealtimevoiceFieldNumber = 36;
  inline bool realtimevoice() const;
  inline void set_realtimevoice(bool value);

  // optional uint32 weekbcoin = 37 [default = 0];
  inline bool has_weekbcoin() const;
  inline void clear_weekbcoin();
  static const int kWeekbcoinFieldNumber = 37;
  inline ::google::protobuf::uint32 weekbcoin() const;
  inline void set_weekbcoin(::google::protobuf::uint32 value);

  // optional uint32 totalcoin = 38 [default = 0];
  inline bool has_totalcoin() const;
  inline void clear_totalcoin();
  static const int kTotalcoinFieldNumber = 38;
  inline ::google::protobuf::uint32 totalcoin() const;
  inline void set_totalcoin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildMember)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_baselevel();
  inline void clear_has_baselevel();
  inline void set_has_portrait();
  inline void clear_has_portrait();
  inline void set_has_frame();
  inline void clear_has_frame();
  inline void set_has_weekcontribution();
  inline void clear_has_weekcontribution();
  inline void set_has_contribution();
  inline void clear_has_contribution();
  inline void set_has_totalcontribution();
  inline void clear_has_totalcontribution();
  inline void set_has_entertime();
  inline void clear_has_entertime();
  inline void set_has_offlinetime();
  inline void clear_has_offlinetime();
  inline void set_has_giftpoint();
  inline void clear_has_giftpoint();
  inline void set_has_hair();
  inline void clear_has_hair();
  inline void set_has_haircolor();
  inline void clear_has_haircolor();
  inline void set_has_body();
  inline void clear_has_body();
  inline void set_has_weekasset();
  inline void clear_has_weekasset();
  inline void set_has_asset();
  inline void clear_has_asset();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_head();
  inline void clear_has_head();
  inline void set_has_face();
  inline void clear_has_face();
  inline void set_has_mouth();
  inline void clear_has_mouth();
  inline void set_has_eye();
  inline void clear_has_eye();
  inline void set_has_gender();
  inline void clear_has_gender();
  inline void set_has_profession();
  inline void clear_has_profession();
  inline void set_has_job();
  inline void clear_has_job();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_var();
  inline void clear_has_var();
  inline void set_has_pray();
  inline void clear_has_pray();
  inline void set_has_donate();
  inline void clear_has_donate();
  inline void set_has_levelupeffect();
  inline void clear_has_levelupeffect();
  inline void set_has_exchangezone();
  inline void clear_has_exchangezone();
  inline void set_has_accid();
  inline void clear_has_accid();
  inline void set_has_building();
  inline void clear_has_building();
  inline void set_has_challenge();
  inline void clear_has_challenge();
  inline void set_has_lastexittime();
  inline void clear_has_lastexittime();
  inline void set_has_redtip();
  inline void clear_has_redtip();
  inline void set_has_buildingeffect();
  inline void clear_has_buildingeffect();
  inline void set_has_realtimevoice();
  inline void clear_has_realtimevoice();
  inline void set_has_weekbcoin();
  inline void clear_has_weekbcoin();
  inline void set_has_totalcoin();
  inline void clear_has_totalcoin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 baselevel_;
  ::google::protobuf::uint32 portrait_;
  ::google::protobuf::uint32 frame_;
  ::google::protobuf::uint32 weekcontribution_;
  ::google::protobuf::uint32 contribution_;
  ::google::protobuf::uint32 totalcontribution_;
  ::google::protobuf::uint32 entertime_;
  ::google::protobuf::uint32 offlinetime_;
  ::google::protobuf::uint32 giftpoint_;
  ::google::protobuf::uint32 hair_;
  ::google::protobuf::uint32 haircolor_;
  ::google::protobuf::uint32 body_;
  ::google::protobuf::uint32 weekasset_;
  ::google::protobuf::uint32 asset_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 head_;
  ::google::protobuf::uint32 face_;
  ::google::protobuf::uint32 mouth_;
  ::google::protobuf::uint32 eye_;
  int gender_;
  int profession_;
  int job_;
  ::std::string* name_;
  ::std::string* var_;
  ::Cmd::BlobGuildPray* pray_;
  ::Cmd::BlobDonate* donate_;
  ::Cmd::BlobGuildBuilding* building_;
  ::google::protobuf::uint32 accid_;
  bool levelupeffect_;
  bool exchangezone_;
  bool buildingeffect_;
  bool realtimevoice_;
  ::google::protobuf::uint64 challenge_;
  ::google::protobuf::uint64 redtip_;
  ::google::protobuf::uint32 lastexittime_;
  ::google::protobuf::uint32 weekbcoin_;
  ::google::protobuf::uint32 totalcoin_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildMember* default_instance_;
};
// -------------------------------------------------------------------

class BlobGuildMember : public ::google::protobuf::Message {
 public:
  BlobGuildMember();
  virtual ~BlobGuildMember();

  BlobGuildMember(const BlobGuildMember& from);

  inline BlobGuildMember& operator=(const BlobGuildMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlobGuildMember& default_instance();

  void Swap(BlobGuildMember* other);

  // implements Message ----------------------------------------------

  BlobGuildMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlobGuildMember& from);
  void MergeFrom(const BlobGuildMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Cmd.GuildMember members = 1;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 1;
  inline const ::Cmd::GuildMember& members(int index) const;
  inline ::Cmd::GuildMember* mutable_members(int index);
  inline ::Cmd::GuildMember* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMember >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMember >*
      mutable_members();

  // @@protoc_insertion_point(class_scope:Cmd.BlobGuildMember)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMember > members_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static BlobGuildMember* default_instance_;
};
// -------------------------------------------------------------------

class GuildApply : public ::google::protobuf::Message {
 public:
  GuildApply();
  virtual ~GuildApply();

  GuildApply(const GuildApply& from);

  inline GuildApply& operator=(const GuildApply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildApply& default_instance();

  void Swap(GuildApply* other);

  // implements Message ----------------------------------------------

  GuildApply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildApply& from);
  void MergeFrom(const GuildApply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charid = 1 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 zoneid = 12 [default = 0];
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 12;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 baselevel = 2 [default = 0];
  inline bool has_baselevel() const;
  inline void clear_baselevel();
  static const int kBaselevelFieldNumber = 2;
  inline ::google::protobuf::uint32 baselevel() const;
  inline void set_baselevel(::google::protobuf::uint32 value);

  // optional uint32 portrait = 3 [default = 0];
  inline bool has_portrait() const;
  inline void clear_portrait();
  static const int kPortraitFieldNumber = 3;
  inline ::google::protobuf::uint32 portrait() const;
  inline void set_portrait(::google::protobuf::uint32 value);

  // optional uint32 frame = 4 [default = 0];
  inline bool has_frame() const;
  inline void clear_frame();
  static const int kFrameFieldNumber = 4;
  inline ::google::protobuf::uint32 frame() const;
  inline void set_frame(::google::protobuf::uint32 value);

  // optional uint32 entertime = 5 [default = 0];
  inline bool has_entertime() const;
  inline void clear_entertime();
  static const int kEntertimeFieldNumber = 5;
  inline ::google::protobuf::uint32 entertime() const;
  inline void set_entertime(::google::protobuf::uint32 value);

  // optional uint32 hair = 9 [default = 0];
  inline bool has_hair() const;
  inline void clear_hair();
  static const int kHairFieldNumber = 9;
  inline ::google::protobuf::uint32 hair() const;
  inline void set_hair(::google::protobuf::uint32 value);

  // optional uint32 haircolor = 10 [default = 0];
  inline bool has_haircolor() const;
  inline void clear_haircolor();
  static const int kHaircolorFieldNumber = 10;
  inline ::google::protobuf::uint32 haircolor() const;
  inline void set_haircolor(::google::protobuf::uint32 value);

  // optional uint32 body = 11 [default = 0];
  inline bool has_body() const;
  inline void clear_body();
  static const int kBodyFieldNumber = 11;
  inline ::google::protobuf::uint32 body() const;
  inline void set_body(::google::protobuf::uint32 value);

  // optional uint32 head = 14 [default = 0];
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 14;
  inline ::google::protobuf::uint32 head() const;
  inline void set_head(::google::protobuf::uint32 value);

  // optional uint32 face = 15 [default = 0];
  inline bool has_face() const;
  inline void clear_face();
  static const int kFaceFieldNumber = 15;
  inline ::google::protobuf::uint32 face() const;
  inline void set_face(::google::protobuf::uint32 value);

  // optional uint32 mouth = 16 [default = 0];
  inline bool has_mouth() const;
  inline void clear_mouth();
  static const int kMouthFieldNumber = 16;
  inline ::google::protobuf::uint32 mouth() const;
  inline void set_mouth(::google::protobuf::uint32 value);

  // optional uint32 eye = 17 [default = 0];
  inline bool has_eye() const;
  inline void clear_eye();
  static const int kEyeFieldNumber = 17;
  inline ::google::protobuf::uint32 eye() const;
  inline void set_eye(::google::protobuf::uint32 value);

  // optional .Cmd.EGender gender = 6 [default = EGENDER_MIN];
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 6;
  inline ::Cmd::EGender gender() const;
  inline void set_gender(::Cmd::EGender value);

  // optional .Cmd.EProfession profession = 7 [default = EPROFESSION_MIN];
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 7;
  inline ::Cmd::EProfession profession() const;
  inline void set_profession(::Cmd::EProfession value);

  // optional string name = 8;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 8;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint64 accid = 13;
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 13;
  inline ::google::protobuf::uint64 accid() const;
  inline void set_accid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildApply)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_baselevel();
  inline void clear_has_baselevel();
  inline void set_has_portrait();
  inline void clear_has_portrait();
  inline void set_has_frame();
  inline void clear_has_frame();
  inline void set_has_entertime();
  inline void clear_has_entertime();
  inline void set_has_hair();
  inline void clear_has_hair();
  inline void set_has_haircolor();
  inline void clear_has_haircolor();
  inline void set_has_body();
  inline void clear_has_body();
  inline void set_has_head();
  inline void clear_has_head();
  inline void set_has_face();
  inline void clear_has_face();
  inline void set_has_mouth();
  inline void clear_has_mouth();
  inline void set_has_eye();
  inline void clear_has_eye();
  inline void set_has_gender();
  inline void clear_has_gender();
  inline void set_has_profession();
  inline void clear_has_profession();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_accid();
  inline void clear_has_accid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 baselevel_;
  ::google::protobuf::uint32 portrait_;
  ::google::protobuf::uint32 frame_;
  ::google::protobuf::uint32 entertime_;
  ::google::protobuf::uint32 hair_;
  ::google::protobuf::uint32 haircolor_;
  ::google::protobuf::uint32 body_;
  ::google::protobuf::uint32 head_;
  ::google::protobuf::uint32 face_;
  ::google::protobuf::uint32 mouth_;
  ::google::protobuf::uint32 eye_;
  int gender_;
  int profession_;
  ::std::string* name_;
  ::google::protobuf::uint64 accid_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildApply* default_instance_;
};
// -------------------------------------------------------------------

class BlobGuildApply : public ::google::protobuf::Message {
 public:
  BlobGuildApply();
  virtual ~BlobGuildApply();

  BlobGuildApply(const BlobGuildApply& from);

  inline BlobGuildApply& operator=(const BlobGuildApply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlobGuildApply& default_instance();

  void Swap(BlobGuildApply* other);

  // implements Message ----------------------------------------------

  BlobGuildApply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlobGuildApply& from);
  void MergeFrom(const BlobGuildApply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Cmd.GuildApply applys = 1;
  inline int applys_size() const;
  inline void clear_applys();
  static const int kApplysFieldNumber = 1;
  inline const ::Cmd::GuildApply& applys(int index) const;
  inline ::Cmd::GuildApply* mutable_applys(int index);
  inline ::Cmd::GuildApply* add_applys();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildApply >&
      applys() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildApply >*
      mutable_applys();

  // @@protoc_insertion_point(class_scope:Cmd.BlobGuildApply)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildApply > applys_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static BlobGuildApply* default_instance_;
};
// -------------------------------------------------------------------

class GuildJob : public ::google::protobuf::Message {
 public:
  GuildJob();
  virtual ~GuildJob();

  GuildJob(const GuildJob& from);

  inline GuildJob& operator=(const GuildJob& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildJob& default_instance();

  void Swap(GuildJob* other);

  // implements Message ----------------------------------------------

  GuildJob* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildJob& from);
  void MergeFrom(const GuildJob& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.EGuildJob job = 1 [default = EGUILDJOB_MIN];
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 1;
  inline ::Cmd::EGuildJob job() const;
  inline void set_job(::Cmd::EGuildJob value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 auth = 3 [default = 0];
  inline bool has_auth() const;
  inline void clear_auth();
  static const int kAuthFieldNumber = 3;
  inline ::google::protobuf::uint32 auth() const;
  inline void set_auth(::google::protobuf::uint32 value);

  // optional uint32 editauth = 4 [default = 0];
  inline bool has_editauth() const;
  inline void clear_editauth();
  static const int kEditauthFieldNumber = 4;
  inline ::google::protobuf::uint32 editauth() const;
  inline void set_editauth(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildJob)
 private:
  inline void set_has_job();
  inline void clear_has_job();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_auth();
  inline void clear_has_auth();
  inline void set_has_editauth();
  inline void clear_has_editauth();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  int job_;
  ::google::protobuf::uint32 auth_;
  ::google::protobuf::uint32 editauth_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildJob* default_instance_;
};
// -------------------------------------------------------------------

class GuildQuest : public ::google::protobuf::Message {
 public:
  GuildQuest();
  virtual ~GuildQuest();

  GuildQuest(const GuildQuest& from);

  inline GuildQuest& operator=(const GuildQuest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildQuest& default_instance();

  void Swap(GuildQuest* other);

  // implements Message ----------------------------------------------

  GuildQuest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildQuest& from);
  void MergeFrom(const GuildQuest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 questid = 1 [default = 0];
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestidFieldNumber = 1;
  inline ::google::protobuf::uint32 questid() const;
  inline void set_questid(::google::protobuf::uint32 value);

  // optional uint32 time = 2 [default = 0];
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildQuest)
 private:
  inline void set_has_questid();
  inline void clear_has_questid();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 questid_;
  ::google::protobuf::uint32 time_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildQuest* default_instance_;
};
// -------------------------------------------------------------------

class GuildBuildMaterial : public ::google::protobuf::Message {
 public:
  GuildBuildMaterial();
  virtual ~GuildBuildMaterial();

  GuildBuildMaterial(const GuildBuildMaterial& from);

  inline GuildBuildMaterial& operator=(const GuildBuildMaterial& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildBuildMaterial& default_instance();

  void Swap(GuildBuildMaterial* other);

  // implements Message ----------------------------------------------

  GuildBuildMaterial* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildBuildMaterial& from);
  void MergeFrom(const GuildBuildMaterial& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 count = 2 [default = 0];
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // optional uint32 itemid = 3 [default = 0];
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 3;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // optional uint32 itemcount = 4 [default = 0];
  inline bool has_itemcount() const;
  inline void clear_itemcount();
  static const int kItemcountFieldNumber = 4;
  inline ::google::protobuf::uint32 itemcount() const;
  inline void set_itemcount(::google::protobuf::uint32 value);

  // optional uint32 rewardid = 5 [default = 0];
  inline bool has_rewardid() const;
  inline void clear_rewardid();
  static const int kRewardidFieldNumber = 5;
  inline ::google::protobuf::uint32 rewardid() const;
  inline void set_rewardid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildBuildMaterial)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_itemcount();
  inline void clear_has_itemcount();
  inline void set_has_rewardid();
  inline void clear_has_rewardid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 itemcount_;
  ::google::protobuf::uint32 rewardid_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildBuildMaterial* default_instance_;
};
// -------------------------------------------------------------------

class GuildBuilding : public ::google::protobuf::Message {
 public:
  GuildBuilding();
  virtual ~GuildBuilding();

  GuildBuilding(const GuildBuilding& from);

  inline GuildBuilding& operator=(const GuildBuilding& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildBuilding& default_instance();

  void Swap(GuildBuilding* other);

  // implements Message ----------------------------------------------

  GuildBuilding* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildBuilding& from);
  void MergeFrom(const GuildBuilding& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.EGuildBuilding type = 1 [default = EGUILDBUILDING_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Cmd::EGuildBuilding type() const;
  inline void set_type(::Cmd::EGuildBuilding value);

  // optional uint32 level = 2 [default = 0];
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // repeated .Cmd.GuildBuildMaterial materials = 3;
  inline int materials_size() const;
  inline void clear_materials();
  static const int kMaterialsFieldNumber = 3;
  inline const ::Cmd::GuildBuildMaterial& materials(int index) const;
  inline ::Cmd::GuildBuildMaterial* mutable_materials(int index);
  inline ::Cmd::GuildBuildMaterial* add_materials();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildBuildMaterial >&
      materials() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildBuildMaterial >*
      mutable_materials();

  // optional bool isbuilding = 4 [default = false];
  inline bool has_isbuilding() const;
  inline void clear_isbuilding();
  static const int kIsbuildingFieldNumber = 4;
  inline bool isbuilding() const;
  inline void set_isbuilding(bool value);

  // optional uint32 nextwelfaretime = 5 [default = 0];
  inline bool has_nextwelfaretime() const;
  inline void clear_nextwelfaretime();
  static const int kNextwelfaretimeFieldNumber = 5;
  inline ::google::protobuf::uint32 nextwelfaretime() const;
  inline void set_nextwelfaretime(::google::protobuf::uint32 value);

  // optional uint32 nextbuildtime = 8 [default = 0];
  inline bool has_nextbuildtime() const;
  inline void clear_nextbuildtime();
  static const int kNextbuildtimeFieldNumber = 8;
  inline ::google::protobuf::uint32 nextbuildtime() const;
  inline void set_nextbuildtime(::google::protobuf::uint32 value);

  // optional uint32 progress = 6 [default = 0];
  inline bool has_progress() const;
  inline void clear_progress();
  static const int kProgressFieldNumber = 6;
  inline ::google::protobuf::uint32 progress() const;
  inline void set_progress(::google::protobuf::uint32 value);

  // repeated .Cmd.GuildBuildMaterial restmaterials = 7;
  inline int restmaterials_size() const;
  inline void clear_restmaterials();
  static const int kRestmaterialsFieldNumber = 7;
  inline const ::Cmd::GuildBuildMaterial& restmaterials(int index) const;
  inline ::Cmd::GuildBuildMaterial* mutable_restmaterials(int index);
  inline ::Cmd::GuildBuildMaterial* add_restmaterials();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildBuildMaterial >&
      restmaterials() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildBuildMaterial >*
      mutable_restmaterials();

  // @@protoc_insertion_point(class_scope:Cmd.GuildBuilding)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_isbuilding();
  inline void clear_has_isbuilding();
  inline void set_has_nextwelfaretime();
  inline void clear_has_nextwelfaretime();
  inline void set_has_nextbuildtime();
  inline void clear_has_nextbuildtime();
  inline void set_has_progress();
  inline void clear_has_progress();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildBuildMaterial > materials_;
  bool isbuilding_;
  ::google::protobuf::uint32 nextwelfaretime_;
  ::google::protobuf::uint32 nextbuildtime_;
  ::google::protobuf::uint32 progress_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildBuildMaterial > restmaterials_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildBuilding* default_instance_;
};
// -------------------------------------------------------------------

class GuildBuildingData : public ::google::protobuf::Message {
 public:
  GuildBuildingData();
  virtual ~GuildBuildingData();

  GuildBuildingData(const GuildBuildingData& from);

  inline GuildBuildingData& operator=(const GuildBuildingData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildBuildingData& default_instance();

  void Swap(GuildBuildingData* other);

  // implements Message ----------------------------------------------

  GuildBuildingData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildBuildingData& from);
  void MergeFrom(const GuildBuildingData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Cmd.GuildBuilding buildings = 1;
  inline int buildings_size() const;
  inline void clear_buildings();
  static const int kBuildingsFieldNumber = 1;
  inline const ::Cmd::GuildBuilding& buildings(int index) const;
  inline ::Cmd::GuildBuilding* mutable_buildings(int index);
  inline ::Cmd::GuildBuilding* add_buildings();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildBuilding >&
      buildings() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildBuilding >*
      mutable_buildings();

  // optional uint32 version = 2 [default = 0];
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 2;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildBuildingData)
 private:
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildBuilding > buildings_;
  ::google::protobuf::uint32 version_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildBuildingData* default_instance_;
};
// -------------------------------------------------------------------

class GuildChallenge : public ::google::protobuf::Message {
 public:
  GuildChallenge();
  virtual ~GuildChallenge();

  GuildChallenge(const GuildChallenge& from);

  inline GuildChallenge& operator=(const GuildChallenge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildChallenge& default_instance();

  void Swap(GuildChallenge* other);

  // implements Message ----------------------------------------------

  GuildChallenge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildChallenge& from);
  void MergeFrom(const GuildChallenge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 progress = 2 [default = 0];
  inline bool has_progress() const;
  inline void clear_progress();
  static const int kProgressFieldNumber = 2;
  inline ::google::protobuf::uint32 progress() const;
  inline void set_progress(::google::protobuf::uint32 value);

  // optional bool reward = 3 [default = false];
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 3;
  inline bool reward() const;
  inline void set_reward(bool value);

  // optional bool extrareward = 4 [default = false];
  inline bool has_extrareward() const;
  inline void clear_extrareward();
  static const int kExtrarewardFieldNumber = 4;
  inline bool extrareward() const;
  inline void set_extrareward(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildChallenge)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_progress();
  inline void clear_has_progress();
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_extrareward();
  inline void clear_has_extrareward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 progress_;
  bool reward_;
  bool extrareward_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildChallenge* default_instance_;
};
// -------------------------------------------------------------------

class GuildChallengeData : public ::google::protobuf::Message {
 public:
  GuildChallengeData();
  virtual ~GuildChallengeData();

  GuildChallengeData(const GuildChallengeData& from);

  inline GuildChallengeData& operator=(const GuildChallengeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildChallengeData& default_instance();

  void Swap(GuildChallengeData* other);

  // implements Message ----------------------------------------------

  GuildChallengeData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildChallengeData& from);
  void MergeFrom(const GuildChallengeData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Cmd.GuildChallenge challenges = 1;
  inline int challenges_size() const;
  inline void clear_challenges();
  static const int kChallengesFieldNumber = 1;
  inline const ::Cmd::GuildChallenge& challenges(int index) const;
  inline ::Cmd::GuildChallenge* mutable_challenges(int index);
  inline ::Cmd::GuildChallenge* add_challenges();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallenge >&
      challenges() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallenge >*
      mutable_challenges();

  // @@protoc_insertion_point(class_scope:Cmd.GuildChallengeData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallenge > challenges_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildChallengeData* default_instance_;
};
// -------------------------------------------------------------------

class GuildWelfareItem : public ::google::protobuf::Message {
 public:
  GuildWelfareItem();
  virtual ~GuildWelfareItem();

  GuildWelfareItem(const GuildWelfareItem& from);

  inline GuildWelfareItem& operator=(const GuildWelfareItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildWelfareItem& default_instance();

  void Swap(GuildWelfareItem* other);

  // implements Message ----------------------------------------------

  GuildWelfareItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildWelfareItem& from);
  void MergeFrom(const GuildWelfareItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.EGuildWelfare type = 1 [default = EGUILDWELFARE_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Cmd::EGuildWelfare type() const;
  inline void set_type(::Cmd::EGuildWelfare value);

  // optional uint64 id = 2 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional .Cmd.ESource source = 3 [default = ESOURCE_MIN];
  inline bool has_source() const;
  inline void clear_source();
  static const int kSourceFieldNumber = 3;
  inline ::Cmd::ESource source() const;
  inline void set_source(::Cmd::ESource value);

  // optional uint32 rewardid = 4 [default = 0];
  inline bool has_rewardid() const;
  inline void clear_rewardid();
  static const int kRewardidFieldNumber = 4;
  inline ::google::protobuf::uint32 rewardid() const;
  inline void set_rewardid(::google::protobuf::uint32 value);

  // optional uint32 createtime = 5 [default = 0];
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 5;
  inline ::google::protobuf::uint32 createtime() const;
  inline void set_createtime(::google::protobuf::uint32 value);

  // optional uint32 overduetime = 6 [default = 0];
  inline bool has_overduetime() const;
  inline void clear_overduetime();
  static const int kOverduetimeFieldNumber = 6;
  inline ::google::protobuf::uint32 overduetime() const;
  inline void set_overduetime(::google::protobuf::uint32 value);

  // repeated uint64 charids = 7;
  inline int charids_size() const;
  inline void clear_charids();
  static const int kCharidsFieldNumber = 7;
  inline ::google::protobuf::uint64 charids(int index) const;
  inline void set_charids(int index, ::google::protobuf::uint64 value);
  inline void add_charids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      charids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_charids();

  // optional string ownername = 8;
  inline bool has_ownername() const;
  inline void clear_ownername();
  static const int kOwnernameFieldNumber = 8;
  inline const ::std::string& ownername() const;
  inline void set_ownername(const ::std::string& value);
  inline void set_ownername(const char* value);
  inline void set_ownername(const char* value, size_t size);
  inline ::std::string* mutable_ownername();
  inline ::std::string* release_ownername();
  inline void set_allocated_ownername(::std::string* ownername);

  // optional uint32 sourceid = 9 [default = 0];
  inline bool has_sourceid() const;
  inline void clear_sourceid();
  static const int kSourceidFieldNumber = 9;
  inline ::google::protobuf::uint32 sourceid() const;
  inline void set_sourceid(::google::protobuf::uint32 value);

  // optional uint32 eventguid = 10 [default = 0];
  inline bool has_eventguid() const;
  inline void clear_eventguid();
  static const int kEventguidFieldNumber = 10;
  inline ::google::protobuf::uint32 eventguid() const;
  inline void set_eventguid(::google::protobuf::uint32 value);

  // optional uint32 index = 11 [default = 0];
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 11;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildWelfareItem)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_source();
  inline void clear_has_source();
  inline void set_has_rewardid();
  inline void clear_has_rewardid();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_overduetime();
  inline void clear_has_overduetime();
  inline void set_has_ownername();
  inline void clear_has_ownername();
  inline void set_has_sourceid();
  inline void clear_has_sourceid();
  inline void set_has_eventguid();
  inline void clear_has_eventguid();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  int type_;
  int source_;
  ::google::protobuf::uint32 rewardid_;
  ::google::protobuf::uint32 createtime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > charids_;
  ::google::protobuf::uint32 overduetime_;
  ::google::protobuf::uint32 sourceid_;
  ::std::string* ownername_;
  ::google::protobuf::uint32 eventguid_;
  ::google::protobuf::uint32 index_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildWelfareItem* default_instance_;
};
// -------------------------------------------------------------------

class GuildWelfare : public ::google::protobuf::Message {
 public:
  GuildWelfare();
  virtual ~GuildWelfare();

  GuildWelfare(const GuildWelfare& from);

  inline GuildWelfare& operator=(const GuildWelfare& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildWelfare& default_instance();

  void Swap(GuildWelfare* other);

  // implements Message ----------------------------------------------

  GuildWelfare* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildWelfare& from);
  void MergeFrom(const GuildWelfare& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Cmd.GuildWelfareItem items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::Cmd::GuildWelfareItem& items(int index) const;
  inline ::Cmd::GuildWelfareItem* mutable_items(int index);
  inline ::Cmd::GuildWelfareItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildWelfareItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildWelfareItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:Cmd.GuildWelfare)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildWelfareItem > items_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildWelfare* default_instance_;
};
// -------------------------------------------------------------------

class GuildArtifactItem : public ::google::protobuf::Message {
 public:
  GuildArtifactItem();
  virtual ~GuildArtifactItem();

  GuildArtifactItem(const GuildArtifactItem& from);

  inline GuildArtifactItem& operator=(const GuildArtifactItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildArtifactItem& default_instance();

  void Swap(GuildArtifactItem* other);

  // implements Message ----------------------------------------------

  GuildArtifactItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildArtifactItem& from);
  void MergeFrom(const GuildArtifactItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline const ::std::string& guid() const;
  inline void set_guid(const ::std::string& value);
  inline void set_guid(const char* value);
  inline void set_guid(const char* value, size_t size);
  inline ::std::string* mutable_guid();
  inline ::std::string* release_guid();
  inline void set_allocated_guid(::std::string* guid);

  // optional uint32 itemid = 2 [default = 0];
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 2;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // optional uint32 distributecount = 3 [default = 0];
  inline bool has_distributecount() const;
  inline void clear_distributecount();
  static const int kDistributecountFieldNumber = 3;
  inline ::google::protobuf::uint32 distributecount() const;
  inline void set_distributecount(::google::protobuf::uint32 value);

  // optional uint32 retrievetime = 4 [default = 0];
  inline bool has_retrievetime() const;
  inline void clear_retrievetime();
  static const int kRetrievetimeFieldNumber = 4;
  inline ::google::protobuf::uint32 retrievetime() const;
  inline void set_retrievetime(::google::protobuf::uint32 value);

  // optional uint64 ownerid = 5 [default = 0];
  inline bool has_ownerid() const;
  inline void clear_ownerid();
  static const int kOwneridFieldNumber = 5;
  inline ::google::protobuf::uint64 ownerid() const;
  inline void set_ownerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildArtifactItem)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_distributecount();
  inline void clear_has_distributecount();
  inline void set_has_retrievetime();
  inline void clear_has_retrievetime();
  inline void set_has_ownerid();
  inline void clear_has_ownerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* guid_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 distributecount_;
  ::google::protobuf::uint64 ownerid_;
  ::google::protobuf::uint32 retrievetime_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildArtifactItem* default_instance_;
};
// -------------------------------------------------------------------

class GuildArtifactData : public ::google::protobuf::Message {
 public:
  GuildArtifactData();
  virtual ~GuildArtifactData();

  GuildArtifactData(const GuildArtifactData& from);

  inline GuildArtifactData& operator=(const GuildArtifactData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildArtifactData& default_instance();

  void Swap(GuildArtifactData* other);

  // implements Message ----------------------------------------------

  GuildArtifactData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildArtifactData& from);
  void MergeFrom(const GuildArtifactData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1 [default = 0];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 producecount = 2 [default = 0];
  inline bool has_producecount() const;
  inline void clear_producecount();
  static const int kProducecountFieldNumber = 2;
  inline ::google::protobuf::uint32 producecount() const;
  inline void set_producecount(::google::protobuf::uint32 value);

  // optional uint32 maxlevel = 3 [default = 0];
  inline bool has_maxlevel() const;
  inline void clear_maxlevel();
  static const int kMaxlevelFieldNumber = 3;
  inline ::google::protobuf::uint32 maxlevel() const;
  inline void set_maxlevel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildArtifactData)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_producecount();
  inline void clear_has_producecount();
  inline void set_has_maxlevel();
  inline void clear_has_maxlevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 producecount_;
  ::google::protobuf::uint32 maxlevel_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildArtifactData* default_instance_;
};
// -------------------------------------------------------------------

class GuildArtifact : public ::google::protobuf::Message {
 public:
  GuildArtifact();
  virtual ~GuildArtifact();

  GuildArtifact(const GuildArtifact& from);

  inline GuildArtifact& operator=(const GuildArtifact& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildArtifact& default_instance();

  void Swap(GuildArtifact* other);

  // implements Message ----------------------------------------------

  GuildArtifact* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildArtifact& from);
  void MergeFrom(const GuildArtifact& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Cmd.GuildArtifactItem items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::Cmd::GuildArtifactItem& items(int index) const;
  inline ::Cmd::GuildArtifactItem* mutable_items(int index);
  inline ::Cmd::GuildArtifactItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactItem >*
      mutable_items();

  // repeated .Cmd.GuildArtifactData datas = 2;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 2;
  inline const ::Cmd::GuildArtifactData& datas(int index) const;
  inline ::Cmd::GuildArtifactData* mutable_datas(int index);
  inline ::Cmd::GuildArtifactData* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactData >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactData >*
      mutable_datas();

  // @@protoc_insertion_point(class_scope:Cmd.GuildArtifact)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactItem > items_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactData > datas_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildArtifact* default_instance_;
};
// -------------------------------------------------------------------

class GQuest : public ::google::protobuf::Message {
 public:
  GQuest();
  virtual ~GQuest();

  GQuest(const GQuest& from);

  inline GQuest& operator=(const GQuest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GQuest& default_instance();

  void Swap(GQuest* other);

  // implements Message ----------------------------------------------

  GQuest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GQuest& from);
  void MergeFrom(const GQuest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charid = 1 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // repeated .Cmd.QuestData datas = 2;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 2;
  inline const ::Cmd::QuestData& datas(int index) const;
  inline ::Cmd::QuestData* mutable_datas(int index);
  inline ::Cmd::QuestData* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::QuestData >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::QuestData >*
      mutable_datas();

  // @@protoc_insertion_point(class_scope:Cmd.GQuest)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::QuestData > datas_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GQuest* default_instance_;
};
// -------------------------------------------------------------------

class BlobGQuest : public ::google::protobuf::Message {
 public:
  BlobGQuest();
  virtual ~BlobGQuest();

  BlobGQuest(const BlobGQuest& from);

  inline BlobGQuest& operator=(const BlobGQuest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlobGQuest& default_instance();

  void Swap(BlobGQuest* other);

  // implements Message ----------------------------------------------

  BlobGQuest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlobGQuest& from);
  void MergeFrom(const BlobGQuest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Cmd.GQuest quests = 1;
  inline int quests_size() const;
  inline void clear_quests();
  static const int kQuestsFieldNumber = 1;
  inline const ::Cmd::GQuest& quests(int index) const;
  inline ::Cmd::GQuest* mutable_quests(int index);
  inline ::Cmd::GQuest* add_quests();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GQuest >&
      quests() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GQuest >*
      mutable_quests();

  // repeated uint32 accepts = 2;
  inline int accepts_size() const;
  inline void clear_accepts();
  static const int kAcceptsFieldNumber = 2;
  inline ::google::protobuf::uint32 accepts(int index) const;
  inline void set_accepts(int index, ::google::protobuf::uint32 value);
  inline void add_accepts(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      accepts() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_accepts();

  // repeated uint32 submit = 3;
  inline int submit_size() const;
  inline void clear_submit();
  static const int kSubmitFieldNumber = 3;
  inline ::google::protobuf::uint32 submit(int index) const;
  inline void set_submit(int index, ::google::protobuf::uint32 value);
  inline void add_submit(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      submit() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_submit();

  // @@protoc_insertion_point(class_scope:Cmd.BlobGQuest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GQuest > quests_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > accepts_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > submit_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static BlobGQuest* default_instance_;
};
// -------------------------------------------------------------------

class BlobGGvg : public ::google::protobuf::Message {
 public:
  BlobGGvg();
  virtual ~BlobGGvg();

  BlobGGvg(const BlobGGvg& from);

  inline BlobGGvg& operator=(const BlobGGvg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlobGGvg& default_instance();

  void Swap(BlobGGvg* other);

  // implements Message ----------------------------------------------

  BlobGGvg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlobGGvg& from);
  void MergeFrom(const BlobGGvg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 partin_time = 1 [default = 0];
  inline bool has_partin_time() const;
  inline void clear_partin_time();
  static const int kPartinTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 partin_time() const;
  inline void set_partin_time(::google::protobuf::uint32 value);

  // repeated uint64 partin_users = 2;
  inline int partin_users_size() const;
  inline void clear_partin_users();
  static const int kPartinUsersFieldNumber = 2;
  inline ::google::protobuf::uint64 partin_users(int index) const;
  inline void set_partin_users(int index, ::google::protobuf::uint64 value);
  inline void add_partin_users(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      partin_users() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_partin_users();

  // optional uint32 sugvgtime = 3 [default = 0];
  inline bool has_sugvgtime() const;
  inline void clear_sugvgtime();
  static const int kSugvgtimeFieldNumber = 3;
  inline ::google::protobuf::uint32 sugvgtime() const;
  inline void set_sugvgtime(::google::protobuf::uint32 value);

  // optional uint32 sugvgcnt = 4 [default = 0];
  inline bool has_sugvgcnt() const;
  inline void clear_sugvgcnt();
  static const int kSugvgcntFieldNumber = 4;
  inline ::google::protobuf::uint32 sugvgcnt() const;
  inline void set_sugvgcnt(::google::protobuf::uint32 value);

  // optional uint32 sugvgscore = 5 [default = 0];
  inline bool has_sugvgscore() const;
  inline void clear_sugvgscore();
  static const int kSugvgscoreFieldNumber = 5;
  inline ::google::protobuf::uint32 sugvgscore() const;
  inline void set_sugvgscore(::google::protobuf::uint32 value);

  // optional uint32 version = 6 [default = 0];
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 6;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.BlobGGvg)
 private:
  inline void set_has_partin_time();
  inline void clear_has_partin_time();
  inline void set_has_sugvgtime();
  inline void clear_has_sugvgtime();
  inline void set_has_sugvgcnt();
  inline void clear_has_sugvgcnt();
  inline void set_has_sugvgscore();
  inline void clear_has_sugvgscore();
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > partin_users_;
  ::google::protobuf::uint32 partin_time_;
  ::google::protobuf::uint32 sugvgtime_;
  ::google::protobuf::uint32 sugvgcnt_;
  ::google::protobuf::uint32 sugvgscore_;
  ::google::protobuf::uint32 version_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static BlobGGvg* default_instance_;
};
// -------------------------------------------------------------------

class GuildTreasure : public ::google::protobuf::Message {
 public:
  GuildTreasure();
  virtual ~GuildTreasure();

  GuildTreasure(const GuildTreasure& from);

  inline GuildTreasure& operator=(const GuildTreasure& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildTreasure& default_instance();

  void Swap(GuildTreasure* other);

  // implements Message ----------------------------------------------

  GuildTreasure* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildTreasure& from);
  void MergeFrom(const GuildTreasure& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 count = 2 [default = 0];
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildTreasure)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 count_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildTreasure* default_instance_;
};
// -------------------------------------------------------------------

class TreasureItem : public ::google::protobuf::Message {
 public:
  TreasureItem();
  virtual ~TreasureItem();

  TreasureItem(const TreasureItem& from);

  inline TreasureItem& operator=(const TreasureItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TreasureItem& default_instance();

  void Swap(TreasureItem* other);

  // implements Message ----------------------------------------------

  TreasureItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TreasureItem& from);
  void MergeFrom(const TreasureItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charid = 1 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // repeated .Cmd.ItemData datas = 2;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 2;
  inline const ::Cmd::ItemData& datas(int index) const;
  inline ::Cmd::ItemData* mutable_datas(int index);
  inline ::Cmd::ItemData* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
      mutable_datas();

  // @@protoc_insertion_point(class_scope:Cmd.TreasureItem)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData > datas_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static TreasureItem* default_instance_;
};
// -------------------------------------------------------------------

class TreasureResult : public ::google::protobuf::Message {
 public:
  TreasureResult();
  virtual ~TreasureResult();

  TreasureResult(const TreasureResult& from);

  inline TreasureResult& operator=(const TreasureResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TreasureResult& default_instance();

  void Swap(TreasureResult* other);

  // implements Message ----------------------------------------------

  TreasureResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TreasureResult& from);
  void MergeFrom(const TreasureResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 ownerid = 1 [default = 0];
  inline bool has_ownerid() const;
  inline void clear_ownerid();
  static const int kOwneridFieldNumber = 1;
  inline ::google::protobuf::uint64 ownerid() const;
  inline void set_ownerid(::google::protobuf::uint64 value);

  // optional uint32 eventguid = 2 [default = 0];
  inline bool has_eventguid() const;
  inline void clear_eventguid();
  static const int kEventguidFieldNumber = 2;
  inline ::google::protobuf::uint32 eventguid() const;
  inline void set_eventguid(::google::protobuf::uint32 value);

  // optional uint32 treasureid = 3 [default = 0];
  inline bool has_treasureid() const;
  inline void clear_treasureid();
  static const int kTreasureidFieldNumber = 3;
  inline ::google::protobuf::uint32 treasureid() const;
  inline void set_treasureid(::google::protobuf::uint32 value);

  // optional uint32 totalmember = 5 [default = 0];
  inline bool has_totalmember() const;
  inline void clear_totalmember();
  static const int kTotalmemberFieldNumber = 5;
  inline ::google::protobuf::uint32 totalmember() const;
  inline void set_totalmember(::google::protobuf::uint32 value);

  // optional .Cmd.ETreasureState state = 6 [default = ETREASURESTATE_MIN];
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 6;
  inline ::Cmd::ETreasureState state() const;
  inline void set_state(::Cmd::ETreasureState value);

  // repeated .Cmd.TreasureItem items = 4;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 4;
  inline const ::Cmd::TreasureItem& items(int index) const;
  inline ::Cmd::TreasureItem* mutable_items(int index);
  inline ::Cmd::TreasureItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TreasureItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TreasureItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:Cmd.TreasureResult)
 private:
  inline void set_has_ownerid();
  inline void clear_has_ownerid();
  inline void set_has_eventguid();
  inline void clear_has_eventguid();
  inline void set_has_treasureid();
  inline void clear_has_treasureid();
  inline void set_has_totalmember();
  inline void clear_has_totalmember();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 ownerid_;
  ::google::protobuf::uint32 eventguid_;
  ::google::protobuf::uint32 treasureid_;
  ::google::protobuf::uint32 totalmember_;
  int state_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TreasureItem > items_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static TreasureResult* default_instance_;
};
// -------------------------------------------------------------------

class BlobGuildTreasure : public ::google::protobuf::Message {
 public:
  BlobGuildTreasure();
  virtual ~BlobGuildTreasure();

  BlobGuildTreasure(const BlobGuildTreasure& from);

  inline BlobGuildTreasure& operator=(const BlobGuildTreasure& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlobGuildTreasure& default_instance();

  void Swap(BlobGuildTreasure* other);

  // implements Message ----------------------------------------------

  BlobGuildTreasure* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlobGuildTreasure& from);
  void MergeFrom(const BlobGuildTreasure& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Cmd.GuildTreasure treasures = 1;
  inline int treasures_size() const;
  inline void clear_treasures();
  static const int kTreasuresFieldNumber = 1;
  inline const ::Cmd::GuildTreasure& treasures(int index) const;
  inline ::Cmd::GuildTreasure* mutable_treasures(int index);
  inline ::Cmd::GuildTreasure* add_treasures();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildTreasure >&
      treasures() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildTreasure >*
      mutable_treasures();

  // repeated .Cmd.TreasureResult result = 2;
  inline int result_size() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline const ::Cmd::TreasureResult& result(int index) const;
  inline ::Cmd::TreasureResult* mutable_result(int index);
  inline ::Cmd::TreasureResult* add_result();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TreasureResult >&
      result() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TreasureResult >*
      mutable_result();

  // @@protoc_insertion_point(class_scope:Cmd.BlobGuildTreasure)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildTreasure > treasures_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TreasureResult > result_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static BlobGuildTreasure* default_instance_;
};
// -------------------------------------------------------------------

class BlobGuildMisc : public ::google::protobuf::Message {
 public:
  BlobGuildMisc();
  virtual ~BlobGuildMisc();

  BlobGuildMisc(const BlobGuildMisc& from);

  inline BlobGuildMisc& operator=(const BlobGuildMisc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlobGuildMisc& default_instance();

  void Swap(BlobGuildMisc* other);

  // implements Message ----------------------------------------------

  BlobGuildMisc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlobGuildMisc& from);
  void MergeFrom(const BlobGuildMisc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes var = 1;
  inline bool has_var() const;
  inline void clear_var();
  static const int kVarFieldNumber = 1;
  inline const ::std::string& var() const;
  inline void set_var(const ::std::string& value);
  inline void set_var(const char* value);
  inline void set_var(const void* value, size_t size);
  inline ::std::string* mutable_var();
  inline ::std::string* release_var();
  inline void set_allocated_var(::std::string* var);

  // repeated .Cmd.GuildJob job = 2;
  inline int job_size() const;
  inline void clear_job();
  static const int kJobFieldNumber = 2;
  inline const ::Cmd::GuildJob& job(int index) const;
  inline ::Cmd::GuildJob* mutable_job(int index);
  inline ::Cmd::GuildJob* add_job();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildJob >&
      job() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildJob >*
      mutable_job();

  // optional uint32 donatetime1 = 3 [default = 0];
  inline bool has_donatetime1() const;
  inline void clear_donatetime1();
  static const int kDonatetime1FieldNumber = 3;
  inline ::google::protobuf::uint32 donatetime1() const;
  inline void set_donatetime1(::google::protobuf::uint32 value);

  // optional uint32 donatetime2 = 4 [default = 0];
  inline bool has_donatetime2() const;
  inline void clear_donatetime2();
  static const int kDonatetime2FieldNumber = 4;
  inline ::google::protobuf::uint32 donatetime2() const;
  inline void set_donatetime2(::google::protobuf::uint32 value);

  // repeated .Cmd.GuildQuest quest = 5;
  inline int quest_size() const;
  inline void clear_quest();
  static const int kQuestFieldNumber = 5;
  inline const ::Cmd::GuildQuest& quest(int index) const;
  inline ::Cmd::GuildQuest* mutable_quest(int index);
  inline ::Cmd::GuildQuest* add_quest();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildQuest >&
      quest() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildQuest >*
      mutable_quest();

  // optional uint32 nextquesttime = 6 [default = 0];
  inline bool has_nextquesttime() const;
  inline void clear_nextquesttime();
  static const int kNextquesttimeFieldNumber = 6;
  inline ::google::protobuf::uint32 nextquesttime() const;
  inline void set_nextquesttime(::google::protobuf::uint32 value);

  // repeated .Cmd.DojoMsgBlob dojomsg = 7;
  inline int dojomsg_size() const;
  inline void clear_dojomsg();
  static const int kDojomsgFieldNumber = 7;
  inline const ::Cmd::DojoMsgBlob& dojomsg(int index) const;
  inline ::Cmd::DojoMsgBlob* mutable_dojomsg(int index);
  inline ::Cmd::DojoMsgBlob* add_dojomsg();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::DojoMsgBlob >&
      dojomsg() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::DojoMsgBlob >*
      mutable_dojomsg();

  // optional uint32 donatetime3 = 8 [default = 0];
  inline bool has_donatetime3() const;
  inline void clear_donatetime3();
  static const int kDonatetime3FieldNumber = 8;
  inline ::google::protobuf::uint32 donatetime3() const;
  inline void set_donatetime3(::google::protobuf::uint32 value);

  // optional uint32 donatetime4 = 9 [default = 0];
  inline bool has_donatetime4() const;
  inline void clear_donatetime4();
  static const int kDonatetime4FieldNumber = 9;
  inline ::google::protobuf::uint32 donatetime4() const;
  inline void set_donatetime4(::google::protobuf::uint32 value);

  // optional uint32 renametime = 10 [default = 0];
  inline bool has_renametime() const;
  inline void clear_renametime();
  static const int kRenametimeFieldNumber = 10;
  inline ::google::protobuf::uint32 renametime() const;
  inline void set_renametime(::google::protobuf::uint32 value);

  // optional uint32 city_giveup_time = 11 [default = 0];
  inline bool has_city_giveup_time() const;
  inline void clear_city_giveup_time();
  static const int kCityGiveupTimeFieldNumber = 11;
  inline ::google::protobuf::uint32 city_giveup_time() const;
  inline void set_city_giveup_time(::google::protobuf::uint32 value);

  // optional uint32 auth_version = 12 [default = 0];
  inline bool has_auth_version() const;
  inline void clear_auth_version();
  static const int kAuthVersionFieldNumber = 12;
  inline ::google::protobuf::uint32 auth_version() const;
  inline void set_auth_version(::google::protobuf::uint32 value);

  // optional .Cmd.GuildBuildingData building = 13;
  inline bool has_building() const;
  inline void clear_building();
  static const int kBuildingFieldNumber = 13;
  inline const ::Cmd::GuildBuildingData& building() const;
  inline ::Cmd::GuildBuildingData* mutable_building();
  inline ::Cmd::GuildBuildingData* release_building();
  inline void set_allocated_building(::Cmd::GuildBuildingData* building);

  // optional uint64 openfunction = 14 [default = 0];
  inline bool has_openfunction() const;
  inline void clear_openfunction();
  static const int kOpenfunctionFieldNumber = 14;
  inline ::google::protobuf::uint64 openfunction() const;
  inline void set_openfunction(::google::protobuf::uint64 value);

  // optional .Cmd.GuildChallengeData challenge = 15;
  inline bool has_challenge() const;
  inline void clear_challenge();
  static const int kChallengeFieldNumber = 15;
  inline const ::Cmd::GuildChallengeData& challenge() const;
  inline ::Cmd::GuildChallengeData* mutable_challenge();
  inline ::Cmd::GuildChallengeData* release_challenge();
  inline void set_allocated_challenge(::Cmd::GuildChallengeData* challenge);

  // optional .Cmd.GuildWelfare welfare = 16;
  inline bool has_welfare() const;
  inline void clear_welfare();
  static const int kWelfareFieldNumber = 16;
  inline const ::Cmd::GuildWelfare& welfare() const;
  inline ::Cmd::GuildWelfare* mutable_welfare();
  inline ::Cmd::GuildWelfare* release_welfare();
  inline void set_allocated_welfare(::Cmd::GuildWelfare* welfare);

  // optional .Cmd.GuildArtifact artifact = 17;
  inline bool has_artifact() const;
  inline void clear_artifact();
  static const int kArtifactFieldNumber = 17;
  inline const ::Cmd::GuildArtifact& artifact() const;
  inline ::Cmd::GuildArtifact* mutable_artifact();
  inline ::Cmd::GuildArtifact* release_artifact();
  inline void set_allocated_artifact(::Cmd::GuildArtifact* artifact);

  // optional .Cmd.BlobGQuest quests = 18;
  inline bool has_quests() const;
  inline void clear_quests();
  static const int kQuestsFieldNumber = 18;
  inline const ::Cmd::BlobGQuest& quests() const;
  inline ::Cmd::BlobGQuest* mutable_quests();
  inline ::Cmd::BlobGQuest* release_quests();
  inline void set_allocated_quests(::Cmd::BlobGQuest* quests);

  // optional .Cmd.BlobGuildTreasure treasures = 19;
  inline bool has_treasures() const;
  inline void clear_treasures();
  static const int kTreasuresFieldNumber = 19;
  inline const ::Cmd::BlobGuildTreasure& treasures() const;
  inline ::Cmd::BlobGuildTreasure* mutable_treasures();
  inline ::Cmd::BlobGuildTreasure* release_treasures();
  inline void set_allocated_treasures(::Cmd::BlobGuildTreasure* treasures);

  // optional .Cmd.BlobGGvg gvg = 20;
  inline bool has_gvg() const;
  inline void clear_gvg();
  static const int kGvgFieldNumber = 20;
  inline const ::Cmd::BlobGGvg& gvg() const;
  inline ::Cmd::BlobGGvg* mutable_gvg();
  inline ::Cmd::BlobGGvg* release_gvg();
  inline void set_allocated_gvg(::Cmd::BlobGGvg* gvg);

  // @@protoc_insertion_point(class_scope:Cmd.BlobGuildMisc)
 private:
  inline void set_has_var();
  inline void clear_has_var();
  inline void set_has_donatetime1();
  inline void clear_has_donatetime1();
  inline void set_has_donatetime2();
  inline void clear_has_donatetime2();
  inline void set_has_nextquesttime();
  inline void clear_has_nextquesttime();
  inline void set_has_donatetime3();
  inline void clear_has_donatetime3();
  inline void set_has_donatetime4();
  inline void clear_has_donatetime4();
  inline void set_has_renametime();
  inline void clear_has_renametime();
  inline void set_has_city_giveup_time();
  inline void clear_has_city_giveup_time();
  inline void set_has_auth_version();
  inline void clear_has_auth_version();
  inline void set_has_building();
  inline void clear_has_building();
  inline void set_has_openfunction();
  inline void clear_has_openfunction();
  inline void set_has_challenge();
  inline void clear_has_challenge();
  inline void set_has_welfare();
  inline void clear_has_welfare();
  inline void set_has_artifact();
  inline void clear_has_artifact();
  inline void set_has_quests();
  inline void clear_has_quests();
  inline void set_has_treasures();
  inline void clear_has_treasures();
  inline void set_has_gvg();
  inline void clear_has_gvg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* var_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildJob > job_;
  ::google::protobuf::uint32 donatetime1_;
  ::google::protobuf::uint32 donatetime2_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildQuest > quest_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::DojoMsgBlob > dojomsg_;
  ::google::protobuf::uint32 nextquesttime_;
  ::google::protobuf::uint32 donatetime3_;
  ::google::protobuf::uint32 donatetime4_;
  ::google::protobuf::uint32 renametime_;
  ::google::protobuf::uint32 city_giveup_time_;
  ::google::protobuf::uint32 auth_version_;
  ::Cmd::GuildBuildingData* building_;
  ::google::protobuf::uint64 openfunction_;
  ::Cmd::GuildChallengeData* challenge_;
  ::Cmd::GuildWelfare* welfare_;
  ::Cmd::GuildArtifact* artifact_;
  ::Cmd::BlobGQuest* quests_;
  ::Cmd::BlobGuildTreasure* treasures_;
  ::Cmd::BlobGGvg* gvg_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static BlobGuildMisc* default_instance_;
};
// -------------------------------------------------------------------

class BlobGuildPack : public ::google::protobuf::Message {
 public:
  BlobGuildPack();
  virtual ~BlobGuildPack();

  BlobGuildPack(const BlobGuildPack& from);

  inline BlobGuildPack& operator=(const BlobGuildPack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlobGuildPack& default_instance();

  void Swap(BlobGuildPack* other);

  // implements Message ----------------------------------------------

  BlobGuildPack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlobGuildPack& from);
  void MergeFrom(const BlobGuildPack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 version = 1 [default = 0];
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // repeated .Cmd.ItemInfo item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::Cmd::ItemInfo& item(int index) const;
  inline ::Cmd::ItemInfo* mutable_item(int index);
  inline ::Cmd::ItemInfo* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo >*
      mutable_item();

  // repeated .Cmd.ItemData data = 3;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::Cmd::ItemData& data(int index) const;
  inline ::Cmd::ItemData* mutable_data(int index);
  inline ::Cmd::ItemData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:Cmd.BlobGuildPack)
 private:
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo > item_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData > data_;
  ::google::protobuf::uint32 version_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static BlobGuildPack* default_instance_;
};
// -------------------------------------------------------------------

class BlobGuildEvent : public ::google::protobuf::Message {
 public:
  BlobGuildEvent();
  virtual ~BlobGuildEvent();

  BlobGuildEvent(const BlobGuildEvent& from);

  inline BlobGuildEvent& operator=(const BlobGuildEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlobGuildEvent& default_instance();

  void Swap(BlobGuildEvent* other);

  // implements Message ----------------------------------------------

  BlobGuildEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlobGuildEvent& from);
  void MergeFrom(const BlobGuildEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 version = 1 [default = 0];
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // repeated .Cmd.GuildEvent events = 2;
  inline int events_size() const;
  inline void clear_events();
  static const int kEventsFieldNumber = 2;
  inline const ::Cmd::GuildEvent& events(int index) const;
  inline ::Cmd::GuildEvent* mutable_events(int index);
  inline ::Cmd::GuildEvent* add_events();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildEvent >&
      events() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildEvent >*
      mutable_events();

  // @@protoc_insertion_point(class_scope:Cmd.BlobGuildEvent)
 private:
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildEvent > events_;
  ::google::protobuf::uint32 version_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static BlobGuildEvent* default_instance_;
};
// -------------------------------------------------------------------

class GuildPhoto : public ::google::protobuf::Message {
 public:
  GuildPhoto();
  virtual ~GuildPhoto();

  GuildPhoto(const GuildPhoto& from);

  inline GuildPhoto& operator=(const GuildPhoto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildPhoto& default_instance();

  void Swap(GuildPhoto* other);

  // implements Message ----------------------------------------------

  GuildPhoto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildPhoto& from);
  void MergeFrom(const GuildPhoto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 accid_svr = 8 [default = 0];
  inline bool has_accid_svr() const;
  inline void clear_accid_svr();
  static const int kAccidSvrFieldNumber = 8;
  inline ::google::protobuf::uint64 accid_svr() const;
  inline void set_accid_svr(::google::protobuf::uint64 value);

  // optional uint64 accid = 7 [default = 0];
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 7;
  inline ::google::protobuf::uint64 accid() const;
  inline void set_accid(::google::protobuf::uint64 value);

  // optional uint64 charid = 1 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 anglez = 2 [default = 0];
  inline bool has_anglez() const;
  inline void clear_anglez();
  static const int kAnglezFieldNumber = 2;
  inline ::google::protobuf::uint32 anglez() const;
  inline void set_anglez(::google::protobuf::uint32 value);

  // optional uint32 time = 3 [default = 0];
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // optional uint32 mapid = 4 [default = 0];
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 4;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // optional uint32 sourceid = 5 [default = 0];
  inline bool has_sourceid() const;
  inline void clear_sourceid();
  static const int kSourceidFieldNumber = 5;
  inline ::google::protobuf::uint32 sourceid() const;
  inline void set_sourceid(::google::protobuf::uint32 value);

  // optional .Cmd.ESource source = 6 [default = ESOURCE_MIN];
  inline bool has_source() const;
  inline void clear_source();
  static const int kSourceFieldNumber = 6;
  inline ::Cmd::ESource source() const;
  inline void set_source(::Cmd::ESource value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildPhoto)
 private:
  inline void set_has_accid_svr();
  inline void clear_has_accid_svr();
  inline void set_has_accid();
  inline void clear_has_accid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_anglez();
  inline void clear_has_anglez();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_sourceid();
  inline void clear_has_sourceid();
  inline void set_has_source();
  inline void clear_has_source();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 accid_svr_;
  ::google::protobuf::uint64 accid_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 anglez_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 sourceid_;
  int source_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildPhoto* default_instance_;
};
// -------------------------------------------------------------------

class PhotoFrame : public ::google::protobuf::Message {
 public:
  PhotoFrame();
  virtual ~PhotoFrame();

  PhotoFrame(const PhotoFrame& from);

  inline PhotoFrame& operator=(const PhotoFrame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PhotoFrame& default_instance();

  void Swap(PhotoFrame* other);

  // implements Message ----------------------------------------------

  PhotoFrame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PhotoFrame& from);
  void MergeFrom(const PhotoFrame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 frameid = 1 [default = 0];
  inline bool has_frameid() const;
  inline void clear_frameid();
  static const int kFrameidFieldNumber = 1;
  inline ::google::protobuf::uint32 frameid() const;
  inline void set_frameid(::google::protobuf::uint32 value);

  // repeated .Cmd.GuildPhoto photo = 2;
  inline int photo_size() const;
  inline void clear_photo();
  static const int kPhotoFieldNumber = 2;
  inline const ::Cmd::GuildPhoto& photo(int index) const;
  inline ::Cmd::GuildPhoto* mutable_photo(int index);
  inline ::Cmd::GuildPhoto* add_photo();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildPhoto >&
      photo() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildPhoto >*
      mutable_photo();

  // @@protoc_insertion_point(class_scope:Cmd.PhotoFrame)
 private:
  inline void set_has_frameid();
  inline void clear_has_frameid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildPhoto > photo_;
  ::google::protobuf::uint32 frameid_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static PhotoFrame* default_instance_;
};
// -------------------------------------------------------------------

class BlobGuildPhoto : public ::google::protobuf::Message {
 public:
  BlobGuildPhoto();
  virtual ~BlobGuildPhoto();

  BlobGuildPhoto(const BlobGuildPhoto& from);

  inline BlobGuildPhoto& operator=(const BlobGuildPhoto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlobGuildPhoto& default_instance();

  void Swap(BlobGuildPhoto* other);

  // implements Message ----------------------------------------------

  BlobGuildPhoto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlobGuildPhoto& from);
  void MergeFrom(const BlobGuildPhoto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Cmd.PhotoFrame frames = 1;
  inline int frames_size() const;
  inline void clear_frames();
  static const int kFramesFieldNumber = 1;
  inline const ::Cmd::PhotoFrame& frames(int index) const;
  inline ::Cmd::PhotoFrame* mutable_frames(int index);
  inline ::Cmd::PhotoFrame* add_frames();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::PhotoFrame >&
      frames() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::PhotoFrame >*
      mutable_frames();

  // @@protoc_insertion_point(class_scope:Cmd.BlobGuildPhoto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::PhotoFrame > frames_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static BlobGuildPhoto* default_instance_;
};
// -------------------------------------------------------------------

class GuildSummaryData : public ::google::protobuf::Message {
 public:
  GuildSummaryData();
  virtual ~GuildSummaryData();

  GuildSummaryData(const GuildSummaryData& from);

  inline GuildSummaryData& operator=(const GuildSummaryData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildSummaryData& default_instance();

  void Swap(GuildSummaryData* other);

  // implements Message ----------------------------------------------

  GuildSummaryData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildSummaryData& from);
  void MergeFrom(const GuildSummaryData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 guid = 1 [default = 0];
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional uint32 level = 2 [default = 0];
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 zoneid = 10 [default = 0];
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 10;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 curmember = 3 [default = 0];
  inline bool has_curmember() const;
  inline void clear_curmember();
  static const int kCurmemberFieldNumber = 3;
  inline ::google::protobuf::uint32 curmember() const;
  inline void set_curmember(::google::protobuf::uint32 value);

  // optional uint32 maxmember = 4 [default = 0];
  inline bool has_maxmember() const;
  inline void clear_maxmember();
  static const int kMaxmemberFieldNumber = 4;
  inline ::google::protobuf::uint32 maxmember() const;
  inline void set_maxmember(::google::protobuf::uint32 value);

  // optional uint32 cityid = 11 [default = 0];
  inline bool has_cityid() const;
  inline void clear_cityid();
  static const int kCityidFieldNumber = 11;
  inline ::google::protobuf::uint32 cityid() const;
  inline void set_cityid(::google::protobuf::uint32 value);

  // optional .Cmd.EGender chairmangender = 5 [default = EGENDER_MIN];
  inline bool has_chairmangender() const;
  inline void clear_chairmangender();
  static const int kChairmangenderFieldNumber = 5;
  inline ::Cmd::EGender chairmangender() const;
  inline void set_chairmangender(::Cmd::EGender value);

  // optional string chairmanname = 6;
  inline bool has_chairmanname() const;
  inline void clear_chairmanname();
  static const int kChairmannameFieldNumber = 6;
  inline const ::std::string& chairmanname() const;
  inline void set_chairmanname(const ::std::string& value);
  inline void set_chairmanname(const char* value);
  inline void set_chairmanname(const char* value, size_t size);
  inline ::std::string* mutable_chairmanname();
  inline ::std::string* release_chairmanname();
  inline void set_allocated_chairmanname(::std::string* chairmanname);

  // optional string guildname = 7;
  inline bool has_guildname() const;
  inline void clear_guildname();
  static const int kGuildnameFieldNumber = 7;
  inline const ::std::string& guildname() const;
  inline void set_guildname(const ::std::string& value);
  inline void set_guildname(const char* value);
  inline void set_guildname(const char* value, size_t size);
  inline ::std::string* mutable_guildname();
  inline ::std::string* release_guildname();
  inline void set_allocated_guildname(::std::string* guildname);

  // optional string recruitinfo = 8;
  inline bool has_recruitinfo() const;
  inline void clear_recruitinfo();
  static const int kRecruitinfoFieldNumber = 8;
  inline const ::std::string& recruitinfo() const;
  inline void set_recruitinfo(const ::std::string& value);
  inline void set_recruitinfo(const char* value);
  inline void set_recruitinfo(const char* value, size_t size);
  inline ::std::string* mutable_recruitinfo();
  inline ::std::string* release_recruitinfo();
  inline void set_allocated_recruitinfo(::std::string* recruitinfo);

  // optional string portrait = 9;
  inline bool has_portrait() const;
  inline void clear_portrait();
  static const int kPortraitFieldNumber = 9;
  inline const ::std::string& portrait() const;
  inline void set_portrait(const ::std::string& value);
  inline void set_portrait(const char* value);
  inline void set_portrait(const char* value, size_t size);
  inline ::std::string* mutable_portrait();
  inline ::std::string* release_portrait();
  inline void set_allocated_portrait(::std::string* portrait);

  // @@protoc_insertion_point(class_scope:Cmd.GuildSummaryData)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_curmember();
  inline void clear_has_curmember();
  inline void set_has_maxmember();
  inline void clear_has_maxmember();
  inline void set_has_cityid();
  inline void clear_has_cityid();
  inline void set_has_chairmangender();
  inline void clear_has_chairmangender();
  inline void set_has_chairmanname();
  inline void clear_has_chairmanname();
  inline void set_has_guildname();
  inline void clear_has_guildname();
  inline void set_has_recruitinfo();
  inline void clear_has_recruitinfo();
  inline void set_has_portrait();
  inline void clear_has_portrait();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 curmember_;
  ::google::protobuf::uint32 maxmember_;
  ::google::protobuf::uint32 cityid_;
  int chairmangender_;
  ::std::string* chairmanname_;
  ::std::string* guildname_;
  ::std::string* recruitinfo_;
  ::std::string* portrait_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildSummaryData* default_instance_;
};
// -------------------------------------------------------------------

class GuildData : public ::google::protobuf::Message {
 public:
  GuildData();
  virtual ~GuildData();

  GuildData(const GuildData& from);

  inline GuildData& operator=(const GuildData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildData& default_instance();

  void Swap(GuildData* other);

  // implements Message ----------------------------------------------

  GuildData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildData& from);
  void MergeFrom(const GuildData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.GuildSummaryData summary = 1;
  inline bool has_summary() const;
  inline void clear_summary();
  static const int kSummaryFieldNumber = 1;
  inline const ::Cmd::GuildSummaryData& summary() const;
  inline ::Cmd::GuildSummaryData* mutable_summary();
  inline ::Cmd::GuildSummaryData* release_summary();
  inline void set_allocated_summary(::Cmd::GuildSummaryData* summary);

  // optional uint32 questresettime = 4 [default = 0];
  inline bool has_questresettime() const;
  inline void clear_questresettime();
  static const int kQuestresettimeFieldNumber = 4;
  inline ::google::protobuf::uint32 questresettime() const;
  inline void set_questresettime(::google::protobuf::uint32 value);

  // optional uint32 asset = 5 [default = 0];
  inline bool has_asset() const;
  inline void clear_asset();
  static const int kAssetFieldNumber = 5;
  inline ::google::protobuf::uint32 asset() const;
  inline void set_asset(::google::protobuf::uint32 value);

  // optional uint32 dismisstime = 6 [default = 0];
  inline bool has_dismisstime() const;
  inline void clear_dismisstime();
  static const int kDismisstimeFieldNumber = 6;
  inline ::google::protobuf::uint32 dismisstime() const;
  inline void set_dismisstime(::google::protobuf::uint32 value);

  // optional uint32 zonetime = 7 [default = 0];
  inline bool has_zonetime() const;
  inline void clear_zonetime();
  static const int kZonetimeFieldNumber = 7;
  inline ::google::protobuf::uint32 zonetime() const;
  inline void set_zonetime(::google::protobuf::uint32 value);

  // optional uint32 createtime = 8 [default = 0];
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 8;
  inline ::google::protobuf::uint32 createtime() const;
  inline void set_createtime(::google::protobuf::uint32 value);

  // optional uint32 nextzone = 9 [default = 0];
  inline bool has_nextzone() const;
  inline void clear_nextzone();
  static const int kNextzoneFieldNumber = 9;
  inline ::google::protobuf::uint32 nextzone() const;
  inline void set_nextzone(::google::protobuf::uint32 value);

  // optional uint32 donatetime1 = 10 [default = 0];
  inline bool has_donatetime1() const;
  inline void clear_donatetime1();
  static const int kDonatetime1FieldNumber = 10;
  inline ::google::protobuf::uint32 donatetime1() const;
  inline void set_donatetime1(::google::protobuf::uint32 value);

  // optional uint32 donatetime2 = 11 [default = 0];
  inline bool has_donatetime2() const;
  inline void clear_donatetime2();
  static const int kDonatetime2FieldNumber = 11;
  inline ::google::protobuf::uint32 donatetime2() const;
  inline void set_donatetime2(::google::protobuf::uint32 value);

  // optional string name = 12;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 12;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string boardinfo = 13;
  inline bool has_boardinfo() const;
  inline void clear_boardinfo();
  static const int kBoardinfoFieldNumber = 13;
  inline const ::std::string& boardinfo() const;
  inline void set_boardinfo(const ::std::string& value);
  inline void set_boardinfo(const char* value);
  inline void set_boardinfo(const char* value, size_t size);
  inline ::std::string* mutable_boardinfo();
  inline ::std::string* release_boardinfo();
  inline void set_allocated_boardinfo(::std::string* boardinfo);

  // optional string recruitinfo = 14;
  inline bool has_recruitinfo() const;
  inline void clear_recruitinfo();
  static const int kRecruitinfoFieldNumber = 14;
  inline const ::std::string& recruitinfo() const;
  inline void set_recruitinfo(const ::std::string& value);
  inline void set_recruitinfo(const char* value);
  inline void set_recruitinfo(const char* value, size_t size);
  inline ::std::string* mutable_recruitinfo();
  inline ::std::string* release_recruitinfo();
  inline void set_allocated_recruitinfo(::std::string* recruitinfo);

  // repeated .Cmd.GuildMember members = 15;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 15;
  inline const ::Cmd::GuildMember& members(int index) const;
  inline ::Cmd::GuildMember* mutable_members(int index);
  inline ::Cmd::GuildMember* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMember >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMember >*
      mutable_members();

  // repeated .Cmd.GuildApply applys = 16;
  inline int applys_size() const;
  inline void clear_applys();
  static const int kApplysFieldNumber = 16;
  inline const ::Cmd::GuildApply& applys(int index) const;
  inline ::Cmd::GuildApply* mutable_applys(int index);
  inline ::Cmd::GuildApply* add_applys();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildApply >&
      applys() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildApply >*
      mutable_applys();

  // repeated .Cmd.GuildJob jobs = 17;
  inline int jobs_size() const;
  inline void clear_jobs();
  static const int kJobsFieldNumber = 17;
  inline const ::Cmd::GuildJob& jobs(int index) const;
  inline ::Cmd::GuildJob* mutable_jobs(int index);
  inline ::Cmd::GuildJob* add_jobs();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildJob >&
      jobs() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildJob >*
      mutable_jobs();

  // optional uint32 assettoday = 18 [default = 0];
  inline bool has_assettoday() const;
  inline void clear_assettoday();
  static const int kAssettodayFieldNumber = 18;
  inline ::google::protobuf::uint32 assettoday() const;
  inline void set_assettoday(::google::protobuf::uint32 value);

  // optional uint32 citygiveuptime = 19 [default = 0];
  inline bool has_citygiveuptime() const;
  inline void clear_citygiveuptime();
  static const int kCitygiveuptimeFieldNumber = 19;
  inline ::google::protobuf::uint32 citygiveuptime() const;
  inline void set_citygiveuptime(::google::protobuf::uint32 value);

  // optional uint32 openfunction = 20 [default = 0];
  inline bool has_openfunction() const;
  inline void clear_openfunction();
  static const int kOpenfunctionFieldNumber = 20;
  inline ::google::protobuf::uint32 openfunction() const;
  inline void set_openfunction(::google::protobuf::uint32 value);

  // repeated .Cmd.GuildChallenge challenges = 21;
  inline int challenges_size() const;
  inline void clear_challenges();
  static const int kChallengesFieldNumber = 21;
  inline const ::Cmd::GuildChallenge& challenges(int index) const;
  inline ::Cmd::GuildChallenge* mutable_challenges(int index);
  inline ::Cmd::GuildChallenge* add_challenges();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallenge >&
      challenges() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallenge >*
      mutable_challenges();

  // optional uint32 gvg_treasure_count = 22 [default = 0];
  inline bool has_gvg_treasure_count() const;
  inline void clear_gvg_treasure_count();
  static const int kGvgTreasureCountFieldNumber = 22;
  inline ::google::protobuf::uint32 gvg_treasure_count() const;
  inline void set_gvg_treasure_count(::google::protobuf::uint32 value);

  // optional uint32 guild_treasure_count = 23 [default = 0];
  inline bool has_guild_treasure_count() const;
  inline void clear_guild_treasure_count();
  static const int kGuildTreasureCountFieldNumber = 23;
  inline ::google::protobuf::uint32 guild_treasure_count() const;
  inline void set_guild_treasure_count(::google::protobuf::uint32 value);

  // optional uint32 bcoin_treasure_count = 24 [default = 0];
  inline bool has_bcoin_treasure_count() const;
  inline void clear_bcoin_treasure_count();
  static const int kBcoinTreasureCountFieldNumber = 24;
  inline ::google::protobuf::uint32 bcoin_treasure_count() const;
  inline void set_bcoin_treasure_count(::google::protobuf::uint32 value);

  // optional bool insupergvg = 25 [default = false];
  inline bool has_insupergvg() const;
  inline void clear_insupergvg();
  static const int kInsupergvgFieldNumber = 25;
  inline bool insupergvg() const;
  inline void set_insupergvg(bool value);

  // optional uint32 supergvg_lv = 26 [default = 0];
  inline bool has_supergvg_lv() const;
  inline void clear_supergvg_lv();
  static const int kSupergvgLvFieldNumber = 26;
  inline ::google::protobuf::uint32 supergvg_lv() const;
  inline void set_supergvg_lv(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildData)
 private:
  inline void set_has_summary();
  inline void clear_has_summary();
  inline void set_has_questresettime();
  inline void clear_has_questresettime();
  inline void set_has_asset();
  inline void clear_has_asset();
  inline void set_has_dismisstime();
  inline void clear_has_dismisstime();
  inline void set_has_zonetime();
  inline void clear_has_zonetime();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_nextzone();
  inline void clear_has_nextzone();
  inline void set_has_donatetime1();
  inline void clear_has_donatetime1();
  inline void set_has_donatetime2();
  inline void clear_has_donatetime2();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_boardinfo();
  inline void clear_has_boardinfo();
  inline void set_has_recruitinfo();
  inline void clear_has_recruitinfo();
  inline void set_has_assettoday();
  inline void clear_has_assettoday();
  inline void set_has_citygiveuptime();
  inline void clear_has_citygiveuptime();
  inline void set_has_openfunction();
  inline void clear_has_openfunction();
  inline void set_has_gvg_treasure_count();
  inline void clear_has_gvg_treasure_count();
  inline void set_has_guild_treasure_count();
  inline void clear_has_guild_treasure_count();
  inline void set_has_bcoin_treasure_count();
  inline void clear_has_bcoin_treasure_count();
  inline void set_has_insupergvg();
  inline void clear_has_insupergvg();
  inline void set_has_supergvg_lv();
  inline void clear_has_supergvg_lv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Cmd::GuildSummaryData* summary_;
  ::google::protobuf::uint32 questresettime_;
  ::google::protobuf::uint32 asset_;
  ::google::protobuf::uint32 dismisstime_;
  ::google::protobuf::uint32 zonetime_;
  ::google::protobuf::uint32 createtime_;
  ::google::protobuf::uint32 nextzone_;
  ::google::protobuf::uint32 donatetime1_;
  ::google::protobuf::uint32 donatetime2_;
  ::std::string* name_;
  ::std::string* boardinfo_;
  ::std::string* recruitinfo_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMember > members_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildApply > applys_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildJob > jobs_;
  ::google::protobuf::uint32 assettoday_;
  ::google::protobuf::uint32 citygiveuptime_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallenge > challenges_;
  ::google::protobuf::uint32 openfunction_;
  ::google::protobuf::uint32 gvg_treasure_count_;
  ::google::protobuf::uint32 guild_treasure_count_;
  ::google::protobuf::uint32 bcoin_treasure_count_;
  bool insupergvg_;
  ::google::protobuf::uint32 supergvg_lv_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildData* default_instance_;
};
// -------------------------------------------------------------------

class QueryGuildListGuildCmd : public ::google::protobuf::Message {
 public:
  QueryGuildListGuildCmd();
  virtual ~QueryGuildListGuildCmd();

  QueryGuildListGuildCmd(const QueryGuildListGuildCmd& from);

  inline QueryGuildListGuildCmd& operator=(const QueryGuildListGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryGuildListGuildCmd& default_instance();

  void Swap(QueryGuildListGuildCmd* other);

  // implements Message ----------------------------------------------

  QueryGuildListGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryGuildListGuildCmd& from);
  void MergeFrom(const QueryGuildListGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_GUILDLIST];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional string keyword = 3;
  inline bool has_keyword() const;
  inline void clear_keyword();
  static const int kKeywordFieldNumber = 3;
  inline const ::std::string& keyword() const;
  inline void set_keyword(const ::std::string& value);
  inline void set_keyword(const char* value);
  inline void set_keyword(const char* value, size_t size);
  inline ::std::string* mutable_keyword();
  inline ::std::string* release_keyword();
  inline void set_allocated_keyword(::std::string* keyword);

  // optional uint32 page = 4 [default = 0];
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 4;
  inline ::google::protobuf::uint32 page() const;
  inline void set_page(::google::protobuf::uint32 value);

  // repeated .Cmd.GuildSummaryData list = 5;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 5;
  inline const ::Cmd::GuildSummaryData& list(int index) const;
  inline ::Cmd::GuildSummaryData* mutable_list(int index);
  inline ::Cmd::GuildSummaryData* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildSummaryData >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildSummaryData >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:Cmd.QueryGuildListGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_keyword();
  inline void clear_has_keyword();
  inline void set_has_page();
  inline void clear_has_page();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::std::string* keyword_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildSummaryData > list_;
  ::google::protobuf::uint32 page_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static QueryGuildListGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class CreateGuildGuildCmd : public ::google::protobuf::Message {
 public:
  CreateGuildGuildCmd();
  virtual ~CreateGuildGuildCmd();

  CreateGuildGuildCmd(const CreateGuildGuildCmd& from);

  inline CreateGuildGuildCmd& operator=(const CreateGuildGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateGuildGuildCmd& default_instance();

  void Swap(CreateGuildGuildCmd* other);

  // implements Message ----------------------------------------------

  CreateGuildGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateGuildGuildCmd& from);
  void MergeFrom(const CreateGuildGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_CREATEGUILD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:Cmd.CreateGuildGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::std::string* name_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static CreateGuildGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class EnterGuildGuildCmd : public ::google::protobuf::Message {
 public:
  EnterGuildGuildCmd();
  virtual ~EnterGuildGuildCmd();

  EnterGuildGuildCmd(const EnterGuildGuildCmd& from);

  inline EnterGuildGuildCmd& operator=(const EnterGuildGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterGuildGuildCmd& default_instance();

  void Swap(EnterGuildGuildCmd* other);

  // implements Message ----------------------------------------------

  EnterGuildGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterGuildGuildCmd& from);
  void MergeFrom(const EnterGuildGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_ENTERGUILD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional .Cmd.GuildData data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::Cmd::GuildData& data() const;
  inline ::Cmd::GuildData* mutable_data();
  inline ::Cmd::GuildData* release_data();
  inline void set_allocated_data(::Cmd::GuildData* data);

  // @@protoc_insertion_point(class_scope:Cmd.EnterGuildGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::GuildData* data_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static EnterGuildGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildMemberUpdateGuildCmd : public ::google::protobuf::Message {
 public:
  GuildMemberUpdateGuildCmd();
  virtual ~GuildMemberUpdateGuildCmd();

  GuildMemberUpdateGuildCmd(const GuildMemberUpdateGuildCmd& from);

  inline GuildMemberUpdateGuildCmd& operator=(const GuildMemberUpdateGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMemberUpdateGuildCmd& default_instance();

  void Swap(GuildMemberUpdateGuildCmd* other);

  // implements Message ----------------------------------------------

  GuildMemberUpdateGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMemberUpdateGuildCmd& from);
  void MergeFrom(const GuildMemberUpdateGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_MEMBERUPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // repeated .Cmd.GuildMember updates = 3;
  inline int updates_size() const;
  inline void clear_updates();
  static const int kUpdatesFieldNumber = 3;
  inline const ::Cmd::GuildMember& updates(int index) const;
  inline ::Cmd::GuildMember* mutable_updates(int index);
  inline ::Cmd::GuildMember* add_updates();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMember >&
      updates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMember >*
      mutable_updates();

  // repeated uint64 dels = 4;
  inline int dels_size() const;
  inline void clear_dels();
  static const int kDelsFieldNumber = 4;
  inline ::google::protobuf::uint64 dels(int index) const;
  inline void set_dels(int index, ::google::protobuf::uint64 value);
  inline void add_dels(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      dels() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_dels();

  // @@protoc_insertion_point(class_scope:Cmd.GuildMemberUpdateGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMember > updates_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > dels_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildMemberUpdateGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildApplyUpdateGuildCmd : public ::google::protobuf::Message {
 public:
  GuildApplyUpdateGuildCmd();
  virtual ~GuildApplyUpdateGuildCmd();

  GuildApplyUpdateGuildCmd(const GuildApplyUpdateGuildCmd& from);

  inline GuildApplyUpdateGuildCmd& operator=(const GuildApplyUpdateGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildApplyUpdateGuildCmd& default_instance();

  void Swap(GuildApplyUpdateGuildCmd* other);

  // implements Message ----------------------------------------------

  GuildApplyUpdateGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildApplyUpdateGuildCmd& from);
  void MergeFrom(const GuildApplyUpdateGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_APPLYUPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // repeated .Cmd.GuildApply updates = 3;
  inline int updates_size() const;
  inline void clear_updates();
  static const int kUpdatesFieldNumber = 3;
  inline const ::Cmd::GuildApply& updates(int index) const;
  inline ::Cmd::GuildApply* mutable_updates(int index);
  inline ::Cmd::GuildApply* add_updates();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildApply >&
      updates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildApply >*
      mutable_updates();

  // repeated uint64 dels = 4;
  inline int dels_size() const;
  inline void clear_dels();
  static const int kDelsFieldNumber = 4;
  inline ::google::protobuf::uint64 dels(int index) const;
  inline void set_dels(int index, ::google::protobuf::uint64 value);
  inline void add_dels(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      dels() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_dels();

  // @@protoc_insertion_point(class_scope:Cmd.GuildApplyUpdateGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildApply > updates_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > dels_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildApplyUpdateGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildDataUpdate : public ::google::protobuf::Message {
 public:
  GuildDataUpdate();
  virtual ~GuildDataUpdate();

  GuildDataUpdate(const GuildDataUpdate& from);

  inline GuildDataUpdate& operator=(const GuildDataUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildDataUpdate& default_instance();

  void Swap(GuildDataUpdate* other);

  // implements Message ----------------------------------------------

  GuildDataUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildDataUpdate& from);
  void MergeFrom(const GuildDataUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.EGuildData type = 1 [default = EGUILDDATA_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Cmd::EGuildData type() const;
  inline void set_type(::Cmd::EGuildData value);

  // optional uint64 value = 2 [default = 0];
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);

  // optional string data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const char* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Cmd.GuildDataUpdate)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 value_;
  ::std::string* data_;
  int type_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildDataUpdate* default_instance_;
};
// -------------------------------------------------------------------

class GuildDataUpdateGuildCmd : public ::google::protobuf::Message {
 public:
  GuildDataUpdateGuildCmd();
  virtual ~GuildDataUpdateGuildCmd();

  GuildDataUpdateGuildCmd(const GuildDataUpdateGuildCmd& from);

  inline GuildDataUpdateGuildCmd& operator=(const GuildDataUpdateGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildDataUpdateGuildCmd& default_instance();

  void Swap(GuildDataUpdateGuildCmd* other);

  // implements Message ----------------------------------------------

  GuildDataUpdateGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildDataUpdateGuildCmd& from);
  void MergeFrom(const GuildDataUpdateGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_GUILDDATAUPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // repeated .Cmd.GuildDataUpdate updates = 3;
  inline int updates_size() const;
  inline void clear_updates();
  static const int kUpdatesFieldNumber = 3;
  inline const ::Cmd::GuildDataUpdate& updates(int index) const;
  inline ::Cmd::GuildDataUpdate* mutable_updates(int index);
  inline ::Cmd::GuildDataUpdate* add_updates();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildDataUpdate >&
      updates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildDataUpdate >*
      mutable_updates();

  // @@protoc_insertion_point(class_scope:Cmd.GuildDataUpdateGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildDataUpdate > updates_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildDataUpdateGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildMemberDataUpdate : public ::google::protobuf::Message {
 public:
  GuildMemberDataUpdate();
  virtual ~GuildMemberDataUpdate();

  GuildMemberDataUpdate(const GuildMemberDataUpdate& from);

  inline GuildMemberDataUpdate& operator=(const GuildMemberDataUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMemberDataUpdate& default_instance();

  void Swap(GuildMemberDataUpdate* other);

  // implements Message ----------------------------------------------

  GuildMemberDataUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMemberDataUpdate& from);
  void MergeFrom(const GuildMemberDataUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.EGuildMemberData type = 1 [default = EGUILDMEMBERDATA_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Cmd::EGuildMemberData type() const;
  inline void set_type(::Cmd::EGuildMemberData value);

  // optional uint64 value = 2 [default = 0];
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);

  // optional string data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const char* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Cmd.GuildMemberDataUpdate)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 value_;
  ::std::string* data_;
  int type_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildMemberDataUpdate* default_instance_;
};
// -------------------------------------------------------------------

class GuildMemberDataUpdateGuildCmd : public ::google::protobuf::Message {
 public:
  GuildMemberDataUpdateGuildCmd();
  virtual ~GuildMemberDataUpdateGuildCmd();

  GuildMemberDataUpdateGuildCmd(const GuildMemberDataUpdateGuildCmd& from);

  inline GuildMemberDataUpdateGuildCmd& operator=(const GuildMemberDataUpdateGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMemberDataUpdateGuildCmd& default_instance();

  void Swap(GuildMemberDataUpdateGuildCmd* other);

  // implements Message ----------------------------------------------

  GuildMemberDataUpdateGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMemberDataUpdateGuildCmd& from);
  void MergeFrom(const GuildMemberDataUpdateGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_MEMBERDATAUPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional .Cmd.EGuildList type = 3 [default = EGUILDLIST_MEMBER];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::Cmd::EGuildList type() const;
  inline void set_type(::Cmd::EGuildList value);

  // optional uint64 charid = 4 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 4;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // repeated .Cmd.GuildMemberDataUpdate updates = 5;
  inline int updates_size() const;
  inline void clear_updates();
  static const int kUpdatesFieldNumber = 5;
  inline const ::Cmd::GuildMemberDataUpdate& updates(int index) const;
  inline ::Cmd::GuildMemberDataUpdate* mutable_updates(int index);
  inline ::Cmd::GuildMemberDataUpdate* add_updates();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMemberDataUpdate >&
      updates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMemberDataUpdate >*
      mutable_updates();

  // @@protoc_insertion_point(class_scope:Cmd.GuildMemberDataUpdateGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMemberDataUpdate > updates_;
  int type_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildMemberDataUpdateGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class ApplyGuildGuildCmd : public ::google::protobuf::Message {
 public:
  ApplyGuildGuildCmd();
  virtual ~ApplyGuildGuildCmd();

  ApplyGuildGuildCmd(const ApplyGuildGuildCmd& from);

  inline ApplyGuildGuildCmd& operator=(const ApplyGuildGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ApplyGuildGuildCmd& default_instance();

  void Swap(ApplyGuildGuildCmd* other);

  // implements Message ----------------------------------------------

  ApplyGuildGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ApplyGuildGuildCmd& from);
  void MergeFrom(const ApplyGuildGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_APPLYGUILD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional uint64 guid = 3 [default = 0];
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 3;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.ApplyGuildGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_guid();
  inline void clear_has_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 guid_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static ApplyGuildGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class ProcessApplyGuildCmd : public ::google::protobuf::Message {
 public:
  ProcessApplyGuildCmd();
  virtual ~ProcessApplyGuildCmd();

  ProcessApplyGuildCmd(const ProcessApplyGuildCmd& from);

  inline ProcessApplyGuildCmd& operator=(const ProcessApplyGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProcessApplyGuildCmd& default_instance();

  void Swap(ProcessApplyGuildCmd* other);

  // implements Message ----------------------------------------------

  ProcessApplyGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProcessApplyGuildCmd& from);
  void MergeFrom(const ProcessApplyGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_PROCESSAPPLY];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional .Cmd.EGuildAction action = 3 [default = EGUILDACTION_MIN];
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 3;
  inline ::Cmd::EGuildAction action() const;
  inline void set_action(::Cmd::EGuildAction value);

  // optional uint64 charid = 4 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 4;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.ProcessApplyGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_action();
  inline void clear_has_action();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  int action_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static ProcessApplyGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class InviteMemberGuildCmd : public ::google::protobuf::Message {
 public:
  InviteMemberGuildCmd();
  virtual ~InviteMemberGuildCmd();

  InviteMemberGuildCmd(const InviteMemberGuildCmd& from);

  inline InviteMemberGuildCmd& operator=(const InviteMemberGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InviteMemberGuildCmd& default_instance();

  void Swap(InviteMemberGuildCmd* other);

  // implements Message ----------------------------------------------

  InviteMemberGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InviteMemberGuildCmd& from);
  void MergeFrom(const InviteMemberGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_INVITEMEMBER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint64 guildid = 4 [default = 0];
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 4;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional string guildname = 5;
  inline bool has_guildname() const;
  inline void clear_guildname();
  static const int kGuildnameFieldNumber = 5;
  inline const ::std::string& guildname() const;
  inline void set_guildname(const ::std::string& value);
  inline void set_guildname(const char* value);
  inline void set_guildname(const char* value, size_t size);
  inline ::std::string* mutable_guildname();
  inline ::std::string* release_guildname();
  inline void set_allocated_guildname(::std::string* guildname);

  // optional string invitename = 6;
  inline bool has_invitename() const;
  inline void clear_invitename();
  static const int kInvitenameFieldNumber = 6;
  inline const ::std::string& invitename() const;
  inline void set_invitename(const ::std::string& value);
  inline void set_invitename(const char* value);
  inline void set_invitename(const char* value, size_t size);
  inline ::std::string* mutable_invitename();
  inline ::std::string* release_invitename();
  inline void set_allocated_invitename(::std::string* invitename);

  // @@protoc_insertion_point(class_scope:Cmd.InviteMemberGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_guildname();
  inline void clear_has_guildname();
  inline void set_has_invitename();
  inline void clear_has_invitename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 guildid_;
  ::std::string* guildname_;
  ::std::string* invitename_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static InviteMemberGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class ProcessInviteGuildCmd : public ::google::protobuf::Message {
 public:
  ProcessInviteGuildCmd();
  virtual ~ProcessInviteGuildCmd();

  ProcessInviteGuildCmd(const ProcessInviteGuildCmd& from);

  inline ProcessInviteGuildCmd& operator=(const ProcessInviteGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProcessInviteGuildCmd& default_instance();

  void Swap(ProcessInviteGuildCmd* other);

  // implements Message ----------------------------------------------

  ProcessInviteGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProcessInviteGuildCmd& from);
  void MergeFrom(const ProcessInviteGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_PROCESSINVITEMEMBER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional .Cmd.EGuildAction action = 3 [default = EGUILDACTION_MIN];
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 3;
  inline ::Cmd::EGuildAction action() const;
  inline void set_action(::Cmd::EGuildAction value);

  // optional uint64 guid = 4 [default = 0];
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 4;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.ProcessInviteGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_action();
  inline void clear_has_action();
  inline void set_has_guid();
  inline void clear_has_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 guid_;
  int action_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static ProcessInviteGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class SetGuildOptionGuildCmd : public ::google::protobuf::Message {
 public:
  SetGuildOptionGuildCmd();
  virtual ~SetGuildOptionGuildCmd();

  SetGuildOptionGuildCmd(const SetGuildOptionGuildCmd& from);

  inline SetGuildOptionGuildCmd& operator=(const SetGuildOptionGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetGuildOptionGuildCmd& default_instance();

  void Swap(SetGuildOptionGuildCmd* other);

  // implements Message ----------------------------------------------

  SetGuildOptionGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetGuildOptionGuildCmd& from);
  void MergeFrom(const SetGuildOptionGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_SETOPTION];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional string board = 3;
  inline bool has_board() const;
  inline void clear_board();
  static const int kBoardFieldNumber = 3;
  inline const ::std::string& board() const;
  inline void set_board(const ::std::string& value);
  inline void set_board(const char* value);
  inline void set_board(const char* value, size_t size);
  inline ::std::string* mutable_board();
  inline ::std::string* release_board();
  inline void set_allocated_board(::std::string* board);

  // optional string recruit = 4;
  inline bool has_recruit() const;
  inline void clear_recruit();
  static const int kRecruitFieldNumber = 4;
  inline const ::std::string& recruit() const;
  inline void set_recruit(const ::std::string& value);
  inline void set_recruit(const char* value);
  inline void set_recruit(const char* value, size_t size);
  inline ::std::string* mutable_recruit();
  inline ::std::string* release_recruit();
  inline void set_allocated_recruit(::std::string* recruit);

  // optional string portrait = 5;
  inline bool has_portrait() const;
  inline void clear_portrait();
  static const int kPortraitFieldNumber = 5;
  inline const ::std::string& portrait() const;
  inline void set_portrait(const ::std::string& value);
  inline void set_portrait(const char* value);
  inline void set_portrait(const char* value, size_t size);
  inline ::std::string* mutable_portrait();
  inline ::std::string* release_portrait();
  inline void set_allocated_portrait(::std::string* portrait);

  // repeated .Cmd.GuildJob jobs = 6;
  inline int jobs_size() const;
  inline void clear_jobs();
  static const int kJobsFieldNumber = 6;
  inline const ::Cmd::GuildJob& jobs(int index) const;
  inline ::Cmd::GuildJob* mutable_jobs(int index);
  inline ::Cmd::GuildJob* add_jobs();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildJob >&
      jobs() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildJob >*
      mutable_jobs();

  // @@protoc_insertion_point(class_scope:Cmd.SetGuildOptionGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_board();
  inline void clear_has_board();
  inline void set_has_recruit();
  inline void clear_has_recruit();
  inline void set_has_portrait();
  inline void clear_has_portrait();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::std::string* board_;
  ::std::string* recruit_;
  ::std::string* portrait_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildJob > jobs_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static SetGuildOptionGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class KickMemberGuildCmd : public ::google::protobuf::Message {
 public:
  KickMemberGuildCmd();
  virtual ~KickMemberGuildCmd();

  KickMemberGuildCmd(const KickMemberGuildCmd& from);

  inline KickMemberGuildCmd& operator=(const KickMemberGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KickMemberGuildCmd& default_instance();

  void Swap(KickMemberGuildCmd* other);

  // implements Message ----------------------------------------------

  KickMemberGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KickMemberGuildCmd& from);
  void MergeFrom(const KickMemberGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_KICKMEMBER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.KickMemberGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static KickMemberGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class ChangeJobGuildCmd : public ::google::protobuf::Message {
 public:
  ChangeJobGuildCmd();
  virtual ~ChangeJobGuildCmd();

  ChangeJobGuildCmd(const ChangeJobGuildCmd& from);

  inline ChangeJobGuildCmd& operator=(const ChangeJobGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeJobGuildCmd& default_instance();

  void Swap(ChangeJobGuildCmd* other);

  // implements Message ----------------------------------------------

  ChangeJobGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeJobGuildCmd& from);
  void MergeFrom(const ChangeJobGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_CHANGEJOB];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional .Cmd.EGuildJob job = 4 [default = EGUILDJOB_MIN];
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 4;
  inline ::Cmd::EGuildJob job() const;
  inline void set_job(::Cmd::EGuildJob value);

  // @@protoc_insertion_point(class_scope:Cmd.ChangeJobGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_job();
  inline void clear_has_job();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  int job_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static ChangeJobGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class ExitGuildGuildCmd : public ::google::protobuf::Message {
 public:
  ExitGuildGuildCmd();
  virtual ~ExitGuildGuildCmd();

  ExitGuildGuildCmd(const ExitGuildGuildCmd& from);

  inline ExitGuildGuildCmd& operator=(const ExitGuildGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitGuildGuildCmd& default_instance();

  void Swap(ExitGuildGuildCmd* other);

  // implements Message ----------------------------------------------

  ExitGuildGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExitGuildGuildCmd& from);
  void MergeFrom(const ExitGuildGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_EXITGUILD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // @@protoc_insertion_point(class_scope:Cmd.ExitGuildGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static ExitGuildGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class ExchangeChairGuildCmd : public ::google::protobuf::Message {
 public:
  ExchangeChairGuildCmd();
  virtual ~ExchangeChairGuildCmd();

  ExchangeChairGuildCmd(const ExchangeChairGuildCmd& from);

  inline ExchangeChairGuildCmd& operator=(const ExchangeChairGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExchangeChairGuildCmd& default_instance();

  void Swap(ExchangeChairGuildCmd* other);

  // implements Message ----------------------------------------------

  ExchangeChairGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExchangeChairGuildCmd& from);
  void MergeFrom(const ExchangeChairGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_EXCHANGECHAIR];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional uint64 newcharid = 3 [default = 0];
  inline bool has_newcharid() const;
  inline void clear_newcharid();
  static const int kNewcharidFieldNumber = 3;
  inline ::google::protobuf::uint64 newcharid() const;
  inline void set_newcharid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.ExchangeChairGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_newcharid();
  inline void clear_has_newcharid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 newcharid_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static ExchangeChairGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class DismissGuildCmd : public ::google::protobuf::Message {
 public:
  DismissGuildCmd();
  virtual ~DismissGuildCmd();

  DismissGuildCmd(const DismissGuildCmd& from);

  inline DismissGuildCmd& operator=(const DismissGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DismissGuildCmd& default_instance();

  void Swap(DismissGuildCmd* other);

  // implements Message ----------------------------------------------

  DismissGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DismissGuildCmd& from);
  void MergeFrom(const DismissGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_DISMISSGUILD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional bool set = 3 [default = false];
  inline bool has_set() const;
  inline void clear_set();
  static const int kSetFieldNumber = 3;
  inline bool set() const;
  inline void set_set(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.DismissGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_set();
  inline void clear_has_set();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  bool set_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static DismissGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class LevelupGuildCmd : public ::google::protobuf::Message {
 public:
  LevelupGuildCmd();
  virtual ~LevelupGuildCmd();

  LevelupGuildCmd(const LevelupGuildCmd& from);

  inline LevelupGuildCmd& operator=(const LevelupGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LevelupGuildCmd& default_instance();

  void Swap(LevelupGuildCmd* other);

  // implements Message ----------------------------------------------

  LevelupGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LevelupGuildCmd& from);
  void MergeFrom(const LevelupGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_LEVELUPGUILD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // @@protoc_insertion_point(class_scope:Cmd.LevelupGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static LevelupGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class DonateGuildCmd : public ::google::protobuf::Message {
 public:
  DonateGuildCmd();
  virtual ~DonateGuildCmd();

  DonateGuildCmd(const DonateGuildCmd& from);

  inline DonateGuildCmd& operator=(const DonateGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DonateGuildCmd& default_instance();

  void Swap(DonateGuildCmd* other);

  // implements Message ----------------------------------------------

  DonateGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DonateGuildCmd& from);
  void MergeFrom(const DonateGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_DONATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional uint32 configid = 3 [default = 0];
  inline bool has_configid() const;
  inline void clear_configid();
  static const int kConfigidFieldNumber = 3;
  inline ::google::protobuf::uint32 configid() const;
  inline void set_configid(::google::protobuf::uint32 value);

  // optional uint32 time = 4 [default = 0];
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.DonateGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_configid();
  inline void clear_has_configid();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 configid_;
  ::google::protobuf::uint32 time_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static DonateGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class DonateItem : public ::google::protobuf::Message {
 public:
  DonateItem();
  virtual ~DonateItem();

  DonateItem(const DonateItem& from);

  inline DonateItem& operator=(const DonateItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DonateItem& default_instance();

  void Swap(DonateItem* other);

  // implements Message ----------------------------------------------

  DonateItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DonateItem& from);
  void MergeFrom(const DonateItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 configid = 1 [default = 0];
  inline bool has_configid() const;
  inline void clear_configid();
  static const int kConfigidFieldNumber = 1;
  inline ::google::protobuf::uint32 configid() const;
  inline void set_configid(::google::protobuf::uint32 value);

  // optional uint32 count = 2 [default = 0];
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // optional uint32 time = 3 [default = 0];
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // optional uint32 itemid = 4 [default = 0];
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 4;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // optional uint32 itemcount = 5 [default = 0];
  inline bool has_itemcount() const;
  inline void clear_itemcount();
  static const int kItemcountFieldNumber = 5;
  inline ::google::protobuf::uint32 itemcount() const;
  inline void set_itemcount(::google::protobuf::uint32 value);

  // optional uint32 contribute = 6 [default = 0];
  inline bool has_contribute() const;
  inline void clear_contribute();
  static const int kContributeFieldNumber = 6;
  inline ::google::protobuf::uint32 contribute() const;
  inline void set_contribute(::google::protobuf::uint32 value);

  // optional uint32 medal = 7 [default = 0];
  inline bool has_medal() const;
  inline void clear_medal();
  static const int kMedalFieldNumber = 7;
  inline ::google::protobuf::uint32 medal() const;
  inline void set_medal(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.DonateItem)
 private:
  inline void set_has_configid();
  inline void clear_has_configid();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_itemcount();
  inline void clear_has_itemcount();
  inline void set_has_contribute();
  inline void clear_has_contribute();
  inline void set_has_medal();
  inline void clear_has_medal();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 configid_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 itemcount_;
  ::google::protobuf::uint32 contribute_;
  ::google::protobuf::uint32 medal_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static DonateItem* default_instance_;
};
// -------------------------------------------------------------------

class DonateListGuildCmd : public ::google::protobuf::Message {
 public:
  DonateListGuildCmd();
  virtual ~DonateListGuildCmd();

  DonateListGuildCmd(const DonateListGuildCmd& from);

  inline DonateListGuildCmd& operator=(const DonateListGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DonateListGuildCmd& default_instance();

  void Swap(DonateListGuildCmd* other);

  // implements Message ----------------------------------------------

  DonateListGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DonateListGuildCmd& from);
  void MergeFrom(const DonateListGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_DONATELIST];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // repeated .Cmd.DonateItem items = 3;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 3;
  inline const ::Cmd::DonateItem& items(int index) const;
  inline ::Cmd::DonateItem* mutable_items(int index);
  inline ::Cmd::DonateItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::DonateItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::DonateItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:Cmd.DonateListGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::DonateItem > items_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static DonateListGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class UpdateDonateItemGuildCmd : public ::google::protobuf::Message {
 public:
  UpdateDonateItemGuildCmd();
  virtual ~UpdateDonateItemGuildCmd();

  UpdateDonateItemGuildCmd(const UpdateDonateItemGuildCmd& from);

  inline UpdateDonateItemGuildCmd& operator=(const UpdateDonateItemGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateDonateItemGuildCmd& default_instance();

  void Swap(UpdateDonateItemGuildCmd* other);

  // implements Message ----------------------------------------------

  UpdateDonateItemGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateDonateItemGuildCmd& from);
  void MergeFrom(const UpdateDonateItemGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_UPDATEDONATEITEM];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional .Cmd.DonateItem item = 3;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 3;
  inline const ::Cmd::DonateItem& item() const;
  inline ::Cmd::DonateItem* mutable_item();
  inline ::Cmd::DonateItem* release_item();
  inline void set_allocated_item(::Cmd::DonateItem* item);

  // optional .Cmd.DonateItem del = 4;
  inline bool has_del() const;
  inline void clear_del();
  static const int kDelFieldNumber = 4;
  inline const ::Cmd::DonateItem& del() const;
  inline ::Cmd::DonateItem* mutable_del();
  inline ::Cmd::DonateItem* release_del();
  inline void set_allocated_del(::Cmd::DonateItem* del);

  // @@protoc_insertion_point(class_scope:Cmd.UpdateDonateItemGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_del();
  inline void clear_has_del();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::DonateItem* item_;
  ::Cmd::DonateItem* del_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static UpdateDonateItemGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class DonateFrameGuildCmd : public ::google::protobuf::Message {
 public:
  DonateFrameGuildCmd();
  virtual ~DonateFrameGuildCmd();

  DonateFrameGuildCmd(const DonateFrameGuildCmd& from);

  inline DonateFrameGuildCmd& operator=(const DonateFrameGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DonateFrameGuildCmd& default_instance();

  void Swap(DonateFrameGuildCmd* other);

  // implements Message ----------------------------------------------

  DonateFrameGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DonateFrameGuildCmd& from);
  void MergeFrom(const DonateFrameGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_DONATEFRAMESTATUS];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional bool open = 3 [default = false];
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 3;
  inline bool open() const;
  inline void set_open(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.DonateFrameGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_open();
  inline void clear_has_open();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  bool open_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static DonateFrameGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class EnterTerritoryGuildCmd : public ::google::protobuf::Message {
 public:
  EnterTerritoryGuildCmd();
  virtual ~EnterTerritoryGuildCmd();

  EnterTerritoryGuildCmd(const EnterTerritoryGuildCmd& from);

  inline EnterTerritoryGuildCmd& operator=(const EnterTerritoryGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterTerritoryGuildCmd& default_instance();

  void Swap(EnterTerritoryGuildCmd* other);

  // implements Message ----------------------------------------------

  EnterTerritoryGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterTerritoryGuildCmd& from);
  void MergeFrom(const EnterTerritoryGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_ENTERGUILDTERRITORY];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional uint64 handid = 3 [default = 0];
  inline bool has_handid() const;
  inline void clear_handid();
  static const int kHandidFieldNumber = 3;
  inline ::google::protobuf::uint64 handid() const;
  inline void set_handid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.EnterTerritoryGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_handid();
  inline void clear_has_handid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 handid_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static EnterTerritoryGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class PrayGuildCmd : public ::google::protobuf::Message {
 public:
  PrayGuildCmd();
  virtual ~PrayGuildCmd();

  PrayGuildCmd(const PrayGuildCmd& from);

  inline PrayGuildCmd& operator=(const PrayGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PrayGuildCmd& default_instance();

  void Swap(PrayGuildCmd* other);

  // implements Message ----------------------------------------------

  PrayGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrayGuildCmd& from);
  void MergeFrom(const PrayGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_PRAY];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional uint64 npcid = 3 [default = 0];
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcidFieldNumber = 3;
  inline ::google::protobuf::uint64 npcid() const;
  inline void set_npcid(::google::protobuf::uint64 value);

  // optional uint32 pray = 4 [default = 0];
  inline bool has_pray() const;
  inline void clear_pray();
  static const int kPrayFieldNumber = 4;
  inline ::google::protobuf::uint32 pray() const;
  inline void set_pray(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.PrayGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_npcid();
  inline void clear_has_npcid();
  inline void set_has_pray();
  inline void clear_has_pray();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 npcid_;
  ::google::protobuf::uint32 pray_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static PrayGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildInfoNtf : public ::google::protobuf::Message {
 public:
  GuildInfoNtf();
  virtual ~GuildInfoNtf();

  GuildInfoNtf(const GuildInfoNtf& from);

  inline GuildInfoNtf& operator=(const GuildInfoNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildInfoNtf& default_instance();

  void Swap(GuildInfoNtf* other);

  // implements Message ----------------------------------------------

  GuildInfoNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildInfoNtf& from);
  void MergeFrom(const GuildInfoNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_GUILDINFONTF];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint64 id = 4 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 4;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional string name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string icon = 6;
  inline bool has_icon() const;
  inline void clear_icon();
  static const int kIconFieldNumber = 6;
  inline const ::std::string& icon() const;
  inline void set_icon(const ::std::string& value);
  inline void set_icon(const char* value);
  inline void set_icon(const char* value, size_t size);
  inline ::std::string* mutable_icon();
  inline ::std::string* release_icon();
  inline void set_allocated_icon(::std::string* icon);

  // optional string job = 7;
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 7;
  inline const ::std::string& job() const;
  inline void set_job(const ::std::string& value);
  inline void set_job(const char* value);
  inline void set_job(const char* value, size_t size);
  inline ::std::string* mutable_job();
  inline ::std::string* release_job();
  inline void set_allocated_job(::std::string* job);

  // @@protoc_insertion_point(class_scope:Cmd.GuildInfoNtf)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_icon();
  inline void clear_has_icon();
  inline void set_has_job();
  inline void clear_has_job();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 id_;
  ::std::string* name_;
  ::std::string* icon_;
  ::std::string* job_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildInfoNtf* default_instance_;
};
// -------------------------------------------------------------------

class GuildPrayNtfGuildCmd : public ::google::protobuf::Message {
 public:
  GuildPrayNtfGuildCmd();
  virtual ~GuildPrayNtfGuildCmd();

  GuildPrayNtfGuildCmd(const GuildPrayNtfGuildCmd& from);

  inline GuildPrayNtfGuildCmd& operator=(const GuildPrayNtfGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildPrayNtfGuildCmd& default_instance();

  void Swap(GuildPrayNtfGuildCmd* other);

  // implements Message ----------------------------------------------

  GuildPrayNtfGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildPrayNtfGuildCmd& from);
  void MergeFrom(const GuildPrayNtfGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_GUILDPRAYNTF];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // repeated .Cmd.GuildMemberPray prays = 3;
  inline int prays_size() const;
  inline void clear_prays();
  static const int kPraysFieldNumber = 3;
  inline const ::Cmd::GuildMemberPray& prays(int index) const;
  inline ::Cmd::GuildMemberPray* mutable_prays(int index);
  inline ::Cmd::GuildMemberPray* add_prays();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMemberPray >&
      prays() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMemberPray >*
      mutable_prays();

  // @@protoc_insertion_point(class_scope:Cmd.GuildPrayNtfGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMemberPray > prays_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildPrayNtfGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class LevelupEffectGuildCmd : public ::google::protobuf::Message {
 public:
  LevelupEffectGuildCmd();
  virtual ~LevelupEffectGuildCmd();

  LevelupEffectGuildCmd(const LevelupEffectGuildCmd& from);

  inline LevelupEffectGuildCmd& operator=(const LevelupEffectGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LevelupEffectGuildCmd& default_instance();

  void Swap(LevelupEffectGuildCmd* other);

  // implements Message ----------------------------------------------

  LevelupEffectGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LevelupEffectGuildCmd& from);
  void MergeFrom(const LevelupEffectGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_LEVELUPEFFECT];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // @@protoc_insertion_point(class_scope:Cmd.LevelupEffectGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static LevelupEffectGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class QueryPackGuildCmd : public ::google::protobuf::Message {
 public:
  QueryPackGuildCmd();
  virtual ~QueryPackGuildCmd();

  QueryPackGuildCmd(const QueryPackGuildCmd& from);

  inline QueryPackGuildCmd& operator=(const QueryPackGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryPackGuildCmd& default_instance();

  void Swap(QueryPackGuildCmd* other);

  // implements Message ----------------------------------------------

  QueryPackGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryPackGuildCmd& from);
  void MergeFrom(const QueryPackGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_QUERYPACK];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // repeated .Cmd.ItemData items = 3;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 3;
  inline const ::Cmd::ItemData& items(int index) const;
  inline ::Cmd::ItemData* mutable_items(int index);
  inline ::Cmd::ItemData* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:Cmd.QueryPackGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData > items_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static QueryPackGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class PackUpdateGuildCmd : public ::google::protobuf::Message {
 public:
  PackUpdateGuildCmd();
  virtual ~PackUpdateGuildCmd();

  PackUpdateGuildCmd(const PackUpdateGuildCmd& from);

  inline PackUpdateGuildCmd& operator=(const PackUpdateGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PackUpdateGuildCmd& default_instance();

  void Swap(PackUpdateGuildCmd* other);

  // implements Message ----------------------------------------------

  PackUpdateGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PackUpdateGuildCmd& from);
  void MergeFrom(const PackUpdateGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_PACKUPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // repeated .Cmd.ItemData updates = 3;
  inline int updates_size() const;
  inline void clear_updates();
  static const int kUpdatesFieldNumber = 3;
  inline const ::Cmd::ItemData& updates(int index) const;
  inline ::Cmd::ItemData* mutable_updates(int index);
  inline ::Cmd::ItemData* add_updates();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
      updates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
      mutable_updates();

  // repeated string dels = 4;
  inline int dels_size() const;
  inline void clear_dels();
  static const int kDelsFieldNumber = 4;
  inline const ::std::string& dels(int index) const;
  inline ::std::string* mutable_dels(int index);
  inline void set_dels(int index, const ::std::string& value);
  inline void set_dels(int index, const char* value);
  inline void set_dels(int index, const char* value, size_t size);
  inline ::std::string* add_dels();
  inline void add_dels(const ::std::string& value);
  inline void add_dels(const char* value);
  inline void add_dels(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& dels() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_dels();

  // @@protoc_insertion_point(class_scope:Cmd.PackUpdateGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData > updates_;
  ::google::protobuf::RepeatedPtrField< ::std::string> dels_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static PackUpdateGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class ExchangeZoneGuildCmd : public ::google::protobuf::Message {
 public:
  ExchangeZoneGuildCmd();
  virtual ~ExchangeZoneGuildCmd();

  ExchangeZoneGuildCmd(const ExchangeZoneGuildCmd& from);

  inline ExchangeZoneGuildCmd& operator=(const ExchangeZoneGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExchangeZoneGuildCmd& default_instance();

  void Swap(ExchangeZoneGuildCmd* other);

  // implements Message ----------------------------------------------

  ExchangeZoneGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExchangeZoneGuildCmd& from);
  void MergeFrom(const ExchangeZoneGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_EXCHANGEZONE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional uint32 zoneid = 3 [default = 0];
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 3;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional bool set = 4 [default = false];
  inline bool has_set() const;
  inline void clear_set();
  static const int kSetFieldNumber = 4;
  inline bool set() const;
  inline void set_set(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.ExchangeZoneGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_set();
  inline void clear_has_set();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 zoneid_;
  bool set_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static ExchangeZoneGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class ExchangeZoneNtfGuildCmd : public ::google::protobuf::Message {
 public:
  ExchangeZoneNtfGuildCmd();
  virtual ~ExchangeZoneNtfGuildCmd();

  ExchangeZoneNtfGuildCmd(const ExchangeZoneNtfGuildCmd& from);

  inline ExchangeZoneNtfGuildCmd& operator=(const ExchangeZoneNtfGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExchangeZoneNtfGuildCmd& default_instance();

  void Swap(ExchangeZoneNtfGuildCmd* other);

  // implements Message ----------------------------------------------

  ExchangeZoneNtfGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExchangeZoneNtfGuildCmd& from);
  void MergeFrom(const ExchangeZoneNtfGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_EXCHANGEZONE_NTF];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional uint32 nextzoneid = 3 [default = 0];
  inline bool has_nextzoneid() const;
  inline void clear_nextzoneid();
  static const int kNextzoneidFieldNumber = 3;
  inline ::google::protobuf::uint32 nextzoneid() const;
  inline void set_nextzoneid(::google::protobuf::uint32 value);

  // optional uint32 curzoneid = 4 [default = 0];
  inline bool has_curzoneid() const;
  inline void clear_curzoneid();
  static const int kCurzoneidFieldNumber = 4;
  inline ::google::protobuf::uint32 curzoneid() const;
  inline void set_curzoneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ExchangeZoneNtfGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_nextzoneid();
  inline void clear_has_nextzoneid();
  inline void set_has_curzoneid();
  inline void clear_has_curzoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 nextzoneid_;
  ::google::protobuf::uint32 curzoneid_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static ExchangeZoneNtfGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class ExchangeZoneAnswerGuildCmd : public ::google::protobuf::Message {
 public:
  ExchangeZoneAnswerGuildCmd();
  virtual ~ExchangeZoneAnswerGuildCmd();

  ExchangeZoneAnswerGuildCmd(const ExchangeZoneAnswerGuildCmd& from);

  inline ExchangeZoneAnswerGuildCmd& operator=(const ExchangeZoneAnswerGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExchangeZoneAnswerGuildCmd& default_instance();

  void Swap(ExchangeZoneAnswerGuildCmd* other);

  // implements Message ----------------------------------------------

  ExchangeZoneAnswerGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExchangeZoneAnswerGuildCmd& from);
  void MergeFrom(const ExchangeZoneAnswerGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_EXCHANGEZONE_ANSWER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional bool agree = 3 [default = false];
  inline bool has_agree() const;
  inline void clear_agree();
  static const int kAgreeFieldNumber = 3;
  inline bool agree() const;
  inline void set_agree(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.ExchangeZoneAnswerGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_agree();
  inline void clear_has_agree();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  bool agree_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static ExchangeZoneAnswerGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildEvent : public ::google::protobuf::Message {
 public:
  GuildEvent();
  virtual ~GuildEvent();

  GuildEvent(const GuildEvent& from);

  inline GuildEvent& operator=(const GuildEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildEvent& default_instance();

  void Swap(GuildEvent* other);

  // implements Message ----------------------------------------------

  GuildEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildEvent& from);
  void MergeFrom(const GuildEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 guid = 1 [default = 0];
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint32 guid() const;
  inline void set_guid(::google::protobuf::uint32 value);

  // optional uint32 eventid = 2 [default = 0];
  inline bool has_eventid() const;
  inline void clear_eventid();
  static const int kEventidFieldNumber = 2;
  inline ::google::protobuf::uint32 eventid() const;
  inline void set_eventid(::google::protobuf::uint32 value);

  // optional uint32 time = 3 [default = 0];
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // repeated string param = 4;
  inline int param_size() const;
  inline void clear_param();
  static const int kParamFieldNumber = 4;
  inline const ::std::string& param(int index) const;
  inline ::std::string* mutable_param(int index);
  inline void set_param(int index, const ::std::string& value);
  inline void set_param(int index, const char* value);
  inline void set_param(int index, const char* value, size_t size);
  inline ::std::string* add_param();
  inline void add_param(const ::std::string& value);
  inline void add_param(const char* value);
  inline void add_param(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& param() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_param();

  // @@protoc_insertion_point(class_scope:Cmd.GuildEvent)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_eventid();
  inline void clear_has_eventid();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 guid_;
  ::google::protobuf::uint32 eventid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> param_;
  ::google::protobuf::uint32 time_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildEvent* default_instance_;
};
// -------------------------------------------------------------------

class QueryEventListGuildCmd : public ::google::protobuf::Message {
 public:
  QueryEventListGuildCmd();
  virtual ~QueryEventListGuildCmd();

  QueryEventListGuildCmd(const QueryEventListGuildCmd& from);

  inline QueryEventListGuildCmd& operator=(const QueryEventListGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryEventListGuildCmd& default_instance();

  void Swap(QueryEventListGuildCmd* other);

  // implements Message ----------------------------------------------

  QueryEventListGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryEventListGuildCmd& from);
  void MergeFrom(const QueryEventListGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_QUERY_EVENT_LIST];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // repeated .Cmd.GuildEvent events = 3;
  inline int events_size() const;
  inline void clear_events();
  static const int kEventsFieldNumber = 3;
  inline const ::Cmd::GuildEvent& events(int index) const;
  inline ::Cmd::GuildEvent* mutable_events(int index);
  inline ::Cmd::GuildEvent* add_events();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildEvent >&
      events() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildEvent >*
      mutable_events();

  // @@protoc_insertion_point(class_scope:Cmd.QueryEventListGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildEvent > events_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static QueryEventListGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class NewEventGuildCmd : public ::google::protobuf::Message {
 public:
  NewEventGuildCmd();
  virtual ~NewEventGuildCmd();

  NewEventGuildCmd(const NewEventGuildCmd& from);

  inline NewEventGuildCmd& operator=(const NewEventGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewEventGuildCmd& default_instance();

  void Swap(NewEventGuildCmd* other);

  // implements Message ----------------------------------------------

  NewEventGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NewEventGuildCmd& from);
  void MergeFrom(const NewEventGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_NEW_EVENT];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional bool del = 3 [default = false];
  inline bool has_del() const;
  inline void clear_del();
  static const int kDelFieldNumber = 3;
  inline bool del() const;
  inline void set_del(bool value);

  // optional .Cmd.GuildEvent event = 4;
  inline bool has_event() const;
  inline void clear_event();
  static const int kEventFieldNumber = 4;
  inline const ::Cmd::GuildEvent& event() const;
  inline ::Cmd::GuildEvent* mutable_event();
  inline ::Cmd::GuildEvent* release_event();
  inline void set_allocated_event(::Cmd::GuildEvent* event);

  // @@protoc_insertion_point(class_scope:Cmd.NewEventGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_del();
  inline void clear_has_del();
  inline void set_has_event();
  inline void clear_has_event();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::GuildEvent* event_;
  bool del_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static NewEventGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildReward : public ::google::protobuf::Message {
 public:
  GuildReward();
  virtual ~GuildReward();

  GuildReward(const GuildReward& from);

  inline GuildReward& operator=(const GuildReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildReward& default_instance();

  void Swap(GuildReward* other);

  // implements Message ----------------------------------------------

  GuildReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildReward& from);
  void MergeFrom(const GuildReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 num = 2 [default = 0];
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildReward)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildReward* default_instance_;
};
// -------------------------------------------------------------------

class ApplyRewardConGuildCmd : public ::google::protobuf::Message {
 public:
  ApplyRewardConGuildCmd();
  virtual ~ApplyRewardConGuildCmd();

  ApplyRewardConGuildCmd(const ApplyRewardConGuildCmd& from);

  inline ApplyRewardConGuildCmd& operator=(const ApplyRewardConGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ApplyRewardConGuildCmd& default_instance();

  void Swap(ApplyRewardConGuildCmd* other);

  // implements Message ----------------------------------------------

  ApplyRewardConGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ApplyRewardConGuildCmd& from);
  void MergeFrom(const ApplyRewardConGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_APPLYCONFIG];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional uint32 configid = 3 [default = 0];
  inline bool has_configid() const;
  inline void clear_configid();
  static const int kConfigidFieldNumber = 3;
  inline ::google::protobuf::uint32 configid() const;
  inline void set_configid(::google::protobuf::uint32 value);

  // repeated .Cmd.GuildReward con = 4;
  inline int con_size() const;
  inline void clear_con();
  static const int kConFieldNumber = 4;
  inline const ::Cmd::GuildReward& con(int index) const;
  inline ::Cmd::GuildReward* mutable_con(int index);
  inline ::Cmd::GuildReward* add_con();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildReward >&
      con() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildReward >*
      mutable_con();

  // repeated .Cmd.GuildReward asset = 5;
  inline int asset_size() const;
  inline void clear_asset();
  static const int kAssetFieldNumber = 5;
  inline const ::Cmd::GuildReward& asset(int index) const;
  inline ::Cmd::GuildReward* mutable_asset(int index);
  inline ::Cmd::GuildReward* add_asset();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildReward >&
      asset() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildReward >*
      mutable_asset();

  // @@protoc_insertion_point(class_scope:Cmd.ApplyRewardConGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_configid();
  inline void clear_has_configid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildReward > con_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildReward > asset_;
  ::google::protobuf::uint32 configid_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static ApplyRewardConGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class FrameStatusGuildCmd : public ::google::protobuf::Message {
 public:
  FrameStatusGuildCmd();
  virtual ~FrameStatusGuildCmd();

  FrameStatusGuildCmd(const FrameStatusGuildCmd& from);

  inline FrameStatusGuildCmd& operator=(const FrameStatusGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameStatusGuildCmd& default_instance();

  void Swap(FrameStatusGuildCmd* other);

  // implements Message ----------------------------------------------

  FrameStatusGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FrameStatusGuildCmd& from);
  void MergeFrom(const FrameStatusGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_FRAME_STATUS];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional bool open = 3 [default = false];
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 3;
  inline bool open() const;
  inline void set_open(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.FrameStatusGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_open();
  inline void clear_has_open();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  bool open_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static FrameStatusGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class ModifyAuthGuildCmd : public ::google::protobuf::Message {
 public:
  ModifyAuthGuildCmd();
  virtual ~ModifyAuthGuildCmd();

  ModifyAuthGuildCmd(const ModifyAuthGuildCmd& from);

  inline ModifyAuthGuildCmd& operator=(const ModifyAuthGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyAuthGuildCmd& default_instance();

  void Swap(ModifyAuthGuildCmd* other);

  // implements Message ----------------------------------------------

  ModifyAuthGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ModifyAuthGuildCmd& from);
  void MergeFrom(const ModifyAuthGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_MODIFY_AUTH];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional bool add = 3 [default = false];
  inline bool has_add() const;
  inline void clear_add();
  static const int kAddFieldNumber = 3;
  inline bool add() const;
  inline void set_add(bool value);

  // optional .Cmd.EModify modify = 4 [default = EMODIFY_MIN];
  inline bool has_modify() const;
  inline void clear_modify();
  static const int kModifyFieldNumber = 4;
  inline ::Cmd::EModify modify() const;
  inline void set_modify(::Cmd::EModify value);

  // optional .Cmd.EGuildJob job = 5 [default = EGUILDJOB_MIN];
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 5;
  inline ::Cmd::EGuildJob job() const;
  inline void set_job(::Cmd::EGuildJob value);

  // optional .Cmd.EAuth auth = 6 [default = EAUTH_MIN];
  inline bool has_auth() const;
  inline void clear_auth();
  static const int kAuthFieldNumber = 6;
  inline ::Cmd::EAuth auth() const;
  inline void set_auth(::Cmd::EAuth value);

  // @@protoc_insertion_point(class_scope:Cmd.ModifyAuthGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_add();
  inline void clear_has_add();
  inline void set_has_modify();
  inline void clear_has_modify();
  inline void set_has_job();
  inline void clear_has_job();
  inline void set_has_auth();
  inline void clear_has_auth();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  bool add_;
  int modify_;
  int job_;
  int auth_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static ModifyAuthGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class JobUpdateGuildCmd : public ::google::protobuf::Message {
 public:
  JobUpdateGuildCmd();
  virtual ~JobUpdateGuildCmd();

  JobUpdateGuildCmd(const JobUpdateGuildCmd& from);

  inline JobUpdateGuildCmd& operator=(const JobUpdateGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JobUpdateGuildCmd& default_instance();

  void Swap(JobUpdateGuildCmd* other);

  // implements Message ----------------------------------------------

  JobUpdateGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JobUpdateGuildCmd& from);
  void MergeFrom(const JobUpdateGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_JOB_UPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional .Cmd.GuildJob job = 3;
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 3;
  inline const ::Cmd::GuildJob& job() const;
  inline ::Cmd::GuildJob* mutable_job();
  inline ::Cmd::GuildJob* release_job();
  inline void set_allocated_job(::Cmd::GuildJob* job);

  // @@protoc_insertion_point(class_scope:Cmd.JobUpdateGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_job();
  inline void clear_has_job();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::GuildJob* job_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static JobUpdateGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class RenameQueryGuildCmd : public ::google::protobuf::Message {
 public:
  RenameQueryGuildCmd();
  virtual ~RenameQueryGuildCmd();

  RenameQueryGuildCmd(const RenameQueryGuildCmd& from);

  inline RenameQueryGuildCmd& operator=(const RenameQueryGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RenameQueryGuildCmd& default_instance();

  void Swap(RenameQueryGuildCmd* other);

  // implements Message ----------------------------------------------

  RenameQueryGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RenameQueryGuildCmd& from);
  void MergeFrom(const RenameQueryGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_RENAME_QUERY];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional .Cmd.ERenameErrCode code = 4 [default = ERENAME_SUCCESS];
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 4;
  inline ::Cmd::ERenameErrCode code() const;
  inline void set_code(::Cmd::ERenameErrCode value);

  // @@protoc_insertion_point(class_scope:Cmd.RenameQueryGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_code();
  inline void clear_has_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::std::string* name_;
  int code_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static RenameQueryGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildCityInfo : public ::google::protobuf::Message {
 public:
  GuildCityInfo();
  virtual ~GuildCityInfo();

  GuildCityInfo(const GuildCityInfo& from);

  inline GuildCityInfo& operator=(const GuildCityInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildCityInfo& default_instance();

  void Swap(GuildCityInfo* other);

  // implements Message ----------------------------------------------

  GuildCityInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildCityInfo& from);
  void MergeFrom(const GuildCityInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 flag = 2 [default = 0];
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 2;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);

  // optional uint32 lv = 3 [default = 0];
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 3;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);

  // optional uint32 membercount = 4 [default = 0];
  inline bool has_membercount() const;
  inline void clear_membercount();
  static const int kMembercountFieldNumber = 4;
  inline ::google::protobuf::uint32 membercount() const;
  inline void set_membercount(::google::protobuf::uint32 value);

  // optional string name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string portrait = 6;
  inline bool has_portrait() const;
  inline void clear_portrait();
  static const int kPortraitFieldNumber = 6;
  inline const ::std::string& portrait() const;
  inline void set_portrait(const ::std::string& value);
  inline void set_portrait(const char* value);
  inline void set_portrait(const char* value, size_t size);
  inline ::std::string* mutable_portrait();
  inline ::std::string* release_portrait();
  inline void set_allocated_portrait(::std::string* portrait);

  // optional uint64 oldguild = 7 [default = 0];
  inline bool has_oldguild() const;
  inline void clear_oldguild();
  static const int kOldguildFieldNumber = 7;
  inline ::google::protobuf::uint64 oldguild() const;
  inline void set_oldguild(::google::protobuf::uint64 value);

  // optional uint32 times = 8 [default = 0];
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 8;
  inline ::google::protobuf::uint32 times() const;
  inline void set_times(::google::protobuf::uint32 value);

  // optional string leadername = 9;
  inline bool has_leadername() const;
  inline void clear_leadername();
  static const int kLeadernameFieldNumber = 9;
  inline const ::std::string& leadername() const;
  inline void set_leadername(const ::std::string& value);
  inline void set_leadername(const char* value);
  inline void set_leadername(const char* value, size_t size);
  inline ::std::string* mutable_leadername();
  inline ::std::string* release_leadername();
  inline void set_allocated_leadername(::std::string* leadername);

  // @@protoc_insertion_point(class_scope:Cmd.GuildCityInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_membercount();
  inline void clear_has_membercount();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_portrait();
  inline void clear_has_portrait();
  inline void set_has_oldguild();
  inline void clear_has_oldguild();
  inline void set_has_times();
  inline void clear_has_times();
  inline void set_has_leadername();
  inline void clear_has_leadername();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 flag_;
  ::google::protobuf::uint32 lv_;
  ::std::string* name_;
  ::std::string* portrait_;
  ::google::protobuf::uint32 membercount_;
  ::google::protobuf::uint32 times_;
  ::google::protobuf::uint64 oldguild_;
  ::std::string* leadername_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildCityInfo* default_instance_;
};
// -------------------------------------------------------------------

class QueryGuildCityInfoGuildCmd : public ::google::protobuf::Message {
 public:
  QueryGuildCityInfoGuildCmd();
  virtual ~QueryGuildCityInfoGuildCmd();

  QueryGuildCityInfoGuildCmd(const QueryGuildCityInfoGuildCmd& from);

  inline QueryGuildCityInfoGuildCmd& operator=(const QueryGuildCityInfoGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryGuildCityInfoGuildCmd& default_instance();

  void Swap(QueryGuildCityInfoGuildCmd* other);

  // implements Message ----------------------------------------------

  QueryGuildCityInfoGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryGuildCityInfoGuildCmd& from);
  void MergeFrom(const QueryGuildCityInfoGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_QUERY_CITYINFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // repeated .Cmd.GuildCityInfo infos = 3;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 3;
  inline const ::Cmd::GuildCityInfo& infos(int index) const;
  inline ::Cmd::GuildCityInfo* mutable_infos(int index);
  inline ::Cmd::GuildCityInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildCityInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildCityInfo >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:Cmd.QueryGuildCityInfoGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildCityInfo > infos_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static QueryGuildCityInfoGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class CityActionGuildCmd : public ::google::protobuf::Message {
 public:
  CityActionGuildCmd();
  virtual ~CityActionGuildCmd();

  CityActionGuildCmd(const CityActionGuildCmd& from);

  inline CityActionGuildCmd& operator=(const CityActionGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CityActionGuildCmd& default_instance();

  void Swap(CityActionGuildCmd* other);

  // implements Message ----------------------------------------------

  CityActionGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CityActionGuildCmd& from);
  void MergeFrom(const CityActionGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_CITY_ACTION];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional .Cmd.ECityAction action = 3 [default = ECITYACTION_MIN];
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 3;
  inline ::Cmd::ECityAction action() const;
  inline void set_action(::Cmd::ECityAction value);

  // @@protoc_insertion_point(class_scope:Cmd.CityActionGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_action();
  inline void clear_has_action();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  int action_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static CityActionGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class IconInfo : public ::google::protobuf::Message {
 public:
  IconInfo();
  virtual ~IconInfo();

  IconInfo(const IconInfo& from);

  inline IconInfo& operator=(const IconInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IconInfo& default_instance();

  void Swap(IconInfo* other);

  // implements Message ----------------------------------------------

  IconInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IconInfo& from);
  void MergeFrom(const IconInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // optional .Cmd.EIconState state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::Cmd::EIconState state() const;
  inline void set_state(::Cmd::EIconState value);

  // optional uint32 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // optional bool isread = 4 [default = true];
  inline bool has_isread() const;
  inline void clear_isread();
  static const int kIsreadFieldNumber = 4;
  inline bool isread() const;
  inline void set_isread(bool value);

  // optional string type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline const ::std::string& type() const;
  inline void set_type(const ::std::string& value);
  inline void set_type(const char* value);
  inline void set_type(const char* value, size_t size);
  inline ::std::string* mutable_type();
  inline ::std::string* release_type();
  inline void set_allocated_type(::std::string* type);

  // @@protoc_insertion_point(class_scope:Cmd.IconInfo)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_isread();
  inline void clear_has_isread();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 index_;
  int state_;
  ::google::protobuf::uint32 time_;
  bool isread_;
  ::std::string* type_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static IconInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuildIconSyncGuildCmd : public ::google::protobuf::Message {
 public:
  GuildIconSyncGuildCmd();
  virtual ~GuildIconSyncGuildCmd();

  GuildIconSyncGuildCmd(const GuildIconSyncGuildCmd& from);

  inline GuildIconSyncGuildCmd& operator=(const GuildIconSyncGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildIconSyncGuildCmd& default_instance();

  void Swap(GuildIconSyncGuildCmd* other);

  // implements Message ----------------------------------------------

  GuildIconSyncGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildIconSyncGuildCmd& from);
  void MergeFrom(const GuildIconSyncGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_GUILD_ICON_SYNC];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // repeated .Cmd.IconInfo infos = 3;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 3;
  inline const ::Cmd::IconInfo& infos(int index) const;
  inline ::Cmd::IconInfo* mutable_infos(int index);
  inline ::Cmd::IconInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::IconInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::IconInfo >*
      mutable_infos();

  // repeated uint32 dels = 4;
  inline int dels_size() const;
  inline void clear_dels();
  static const int kDelsFieldNumber = 4;
  inline ::google::protobuf::uint32 dels(int index) const;
  inline void set_dels(int index, ::google::protobuf::uint32 value);
  inline void add_dels(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      dels() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_dels();

  // @@protoc_insertion_point(class_scope:Cmd.GuildIconSyncGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::IconInfo > infos_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > dels_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildIconSyncGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildIconAddGuildCmd : public ::google::protobuf::Message {
 public:
  GuildIconAddGuildCmd();
  virtual ~GuildIconAddGuildCmd();

  GuildIconAddGuildCmd(const GuildIconAddGuildCmd& from);

  inline GuildIconAddGuildCmd& operator=(const GuildIconAddGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildIconAddGuildCmd& default_instance();

  void Swap(GuildIconAddGuildCmd* other);

  // implements Message ----------------------------------------------

  GuildIconAddGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildIconAddGuildCmd& from);
  void MergeFrom(const GuildIconAddGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_GUILD_ICON_ADD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional uint32 index = 3 [default = 0];
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // optional .Cmd.EIconState state = 4 [default = EICON_INIT];
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::Cmd::EIconState state() const;
  inline void set_state(::Cmd::EIconState value);

  // optional uint32 createtime = 5 [default = 0];
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 5;
  inline ::google::protobuf::uint32 createtime() const;
  inline void set_createtime(::google::protobuf::uint32 value);

  // optional bool isdelete = 6 [default = false];
  inline bool has_isdelete() const;
  inline void clear_isdelete();
  static const int kIsdeleteFieldNumber = 6;
  inline bool isdelete() const;
  inline void set_isdelete(bool value);

  // optional string type = 7;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 7;
  inline const ::std::string& type() const;
  inline void set_type(const ::std::string& value);
  inline void set_type(const char* value);
  inline void set_type(const char* value, size_t size);
  inline ::std::string* mutable_type();
  inline ::std::string* release_type();
  inline void set_allocated_type(::std::string* type);

  // @@protoc_insertion_point(class_scope:Cmd.GuildIconAddGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_isdelete();
  inline void clear_has_isdelete();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 index_;
  int state_;
  ::google::protobuf::uint32 createtime_;
  bool isdelete_;
  ::std::string* type_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildIconAddGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildIconUploadGuildCmd : public ::google::protobuf::Message {
 public:
  GuildIconUploadGuildCmd();
  virtual ~GuildIconUploadGuildCmd();

  GuildIconUploadGuildCmd(const GuildIconUploadGuildCmd& from);

  inline GuildIconUploadGuildCmd& operator=(const GuildIconUploadGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildIconUploadGuildCmd& default_instance();

  void Swap(GuildIconUploadGuildCmd* other);

  // implements Message ----------------------------------------------

  GuildIconUploadGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildIconUploadGuildCmd& from);
  void MergeFrom(const GuildIconUploadGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_GUILD_ICON_UPLOAD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional uint32 index = 3 [default = 0];
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // optional string policy = 4;
  inline bool has_policy() const;
  inline void clear_policy();
  static const int kPolicyFieldNumber = 4;
  inline const ::std::string& policy() const;
  inline void set_policy(const ::std::string& value);
  inline void set_policy(const char* value);
  inline void set_policy(const char* value, size_t size);
  inline ::std::string* mutable_policy();
  inline ::std::string* release_policy();
  inline void set_allocated_policy(::std::string* policy);

  // optional string signature = 5;
  inline bool has_signature() const;
  inline void clear_signature();
  static const int kSignatureFieldNumber = 5;
  inline const ::std::string& signature() const;
  inline void set_signature(const ::std::string& value);
  inline void set_signature(const char* value);
  inline void set_signature(const char* value, size_t size);
  inline ::std::string* mutable_signature();
  inline ::std::string* release_signature();
  inline void set_allocated_signature(::std::string* signature);

  // optional string type = 6;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline const ::std::string& type() const;
  inline void set_type(const ::std::string& value);
  inline void set_type(const char* value);
  inline void set_type(const char* value, size_t size);
  inline ::std::string* mutable_type();
  inline ::std::string* release_type();
  inline void set_allocated_type(::std::string* type);

  // @@protoc_insertion_point(class_scope:Cmd.GuildIconUploadGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_policy();
  inline void clear_has_policy();
  inline void set_has_signature();
  inline void clear_has_signature();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::std::string* policy_;
  ::std::string* signature_;
  ::std::string* type_;
  ::google::protobuf::uint32 index_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildIconUploadGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class OpenFunctionGuildCmd : public ::google::protobuf::Message {
 public:
  OpenFunctionGuildCmd();
  virtual ~OpenFunctionGuildCmd();

  OpenFunctionGuildCmd(const OpenFunctionGuildCmd& from);

  inline OpenFunctionGuildCmd& operator=(const OpenFunctionGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenFunctionGuildCmd& default_instance();

  void Swap(OpenFunctionGuildCmd* other);

  // implements Message ----------------------------------------------

  OpenFunctionGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenFunctionGuildCmd& from);
  void MergeFrom(const OpenFunctionGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_OPEN_FUNCTION];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional .Cmd.EGuildFunction func = 3 [default = EGUILDFUNCTION_MIN];
  inline bool has_func() const;
  inline void clear_func();
  static const int kFuncFieldNumber = 3;
  inline ::Cmd::EGuildFunction func() const;
  inline void set_func(::Cmd::EGuildFunction value);

  // @@protoc_insertion_point(class_scope:Cmd.OpenFunctionGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_func();
  inline void clear_has_func();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  int func_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static OpenFunctionGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class BuildGuildCmd : public ::google::protobuf::Message {
 public:
  BuildGuildCmd();
  virtual ~BuildGuildCmd();

  BuildGuildCmd(const BuildGuildCmd& from);

  inline BuildGuildCmd& operator=(const BuildGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildGuildCmd& default_instance();

  void Swap(BuildGuildCmd* other);

  // implements Message ----------------------------------------------

  BuildGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildGuildCmd& from);
  void MergeFrom(const BuildGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_BUILD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional .Cmd.EGuildBuilding building = 3 [default = EGUILDBUILDING_MIN];
  inline bool has_building() const;
  inline void clear_building();
  static const int kBuildingFieldNumber = 3;
  inline ::Cmd::EGuildBuilding building() const;
  inline void set_building(::Cmd::EGuildBuilding value);

  // @@protoc_insertion_point(class_scope:Cmd.BuildGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_building();
  inline void clear_has_building();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  int building_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static BuildGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class SubmitMaterialGuildCmd : public ::google::protobuf::Message {
 public:
  SubmitMaterialGuildCmd();
  virtual ~SubmitMaterialGuildCmd();

  SubmitMaterialGuildCmd(const SubmitMaterialGuildCmd& from);

  inline SubmitMaterialGuildCmd& operator=(const SubmitMaterialGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SubmitMaterialGuildCmd& default_instance();

  void Swap(SubmitMaterialGuildCmd* other);

  // implements Message ----------------------------------------------

  SubmitMaterialGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubmitMaterialGuildCmd& from);
  void MergeFrom(const SubmitMaterialGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_SUBMIT_MATERIAL];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional .Cmd.EGuildBuilding building = 3 [default = EGUILDBUILDING_MIN];
  inline bool has_building() const;
  inline void clear_building();
  static const int kBuildingFieldNumber = 3;
  inline ::Cmd::EGuildBuilding building() const;
  inline void set_building(::Cmd::EGuildBuilding value);

  // optional uint32 materialid = 4 [default = 0];
  inline bool has_materialid() const;
  inline void clear_materialid();
  static const int kMaterialidFieldNumber = 4;
  inline ::google::protobuf::uint32 materialid() const;
  inline void set_materialid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.SubmitMaterialGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_building();
  inline void clear_has_building();
  inline void set_has_materialid();
  inline void clear_has_materialid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  int building_;
  ::google::protobuf::uint32 materialid_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static SubmitMaterialGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class BuildingNtfGuildCmd : public ::google::protobuf::Message {
 public:
  BuildingNtfGuildCmd();
  virtual ~BuildingNtfGuildCmd();

  BuildingNtfGuildCmd(const BuildingNtfGuildCmd& from);

  inline BuildingNtfGuildCmd& operator=(const BuildingNtfGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildingNtfGuildCmd& default_instance();

  void Swap(BuildingNtfGuildCmd* other);

  // implements Message ----------------------------------------------

  BuildingNtfGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildingNtfGuildCmd& from);
  void MergeFrom(const BuildingNtfGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_BUILDING_NTF];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // repeated .Cmd.GuildBuilding buildings = 3;
  inline int buildings_size() const;
  inline void clear_buildings();
  static const int kBuildingsFieldNumber = 3;
  inline const ::Cmd::GuildBuilding& buildings(int index) const;
  inline ::Cmd::GuildBuilding* mutable_buildings(int index);
  inline ::Cmd::GuildBuilding* add_buildings();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildBuilding >&
      buildings() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildBuilding >*
      mutable_buildings();

  // @@protoc_insertion_point(class_scope:Cmd.BuildingNtfGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildBuilding > buildings_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static BuildingNtfGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class BuildingSubmitCountGuildCmd : public ::google::protobuf::Message {
 public:
  BuildingSubmitCountGuildCmd();
  virtual ~BuildingSubmitCountGuildCmd();

  BuildingSubmitCountGuildCmd(const BuildingSubmitCountGuildCmd& from);

  inline BuildingSubmitCountGuildCmd& operator=(const BuildingSubmitCountGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildingSubmitCountGuildCmd& default_instance();

  void Swap(BuildingSubmitCountGuildCmd* other);

  // implements Message ----------------------------------------------

  BuildingSubmitCountGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildingSubmitCountGuildCmd& from);
  void MergeFrom(const BuildingSubmitCountGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_BUILDING_SUBMIT_COUNT];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional .Cmd.EGuildBuilding type = 3 [default = EGUILDBUILDING_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::Cmd::EGuildBuilding type() const;
  inline void set_type(::Cmd::EGuildBuilding value);

  // optional uint32 count = 4 [default = 0];
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 4;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.BuildingSubmitCountGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  int type_;
  ::google::protobuf::uint32 count_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static BuildingSubmitCountGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class ChallengeUpdateNtfGuildCmd : public ::google::protobuf::Message {
 public:
  ChallengeUpdateNtfGuildCmd();
  virtual ~ChallengeUpdateNtfGuildCmd();

  ChallengeUpdateNtfGuildCmd(const ChallengeUpdateNtfGuildCmd& from);

  inline ChallengeUpdateNtfGuildCmd& operator=(const ChallengeUpdateNtfGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChallengeUpdateNtfGuildCmd& default_instance();

  void Swap(ChallengeUpdateNtfGuildCmd* other);

  // implements Message ----------------------------------------------

  ChallengeUpdateNtfGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChallengeUpdateNtfGuildCmd& from);
  void MergeFrom(const ChallengeUpdateNtfGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_CHALLENGE_UPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // repeated .Cmd.GuildChallenge updates = 3;
  inline int updates_size() const;
  inline void clear_updates();
  static const int kUpdatesFieldNumber = 3;
  inline const ::Cmd::GuildChallenge& updates(int index) const;
  inline ::Cmd::GuildChallenge* mutable_updates(int index);
  inline ::Cmd::GuildChallenge* add_updates();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallenge >&
      updates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallenge >*
      mutable_updates();

  // repeated .Cmd.GuildChallenge dels = 4;
  inline int dels_size() const;
  inline void clear_dels();
  static const int kDelsFieldNumber = 4;
  inline const ::Cmd::GuildChallenge& dels(int index) const;
  inline ::Cmd::GuildChallenge* mutable_dels(int index);
  inline ::Cmd::GuildChallenge* add_dels();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallenge >&
      dels() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallenge >*
      mutable_dels();

  // optional uint32 refreshtime = 5;
  inline bool has_refreshtime() const;
  inline void clear_refreshtime();
  static const int kRefreshtimeFieldNumber = 5;
  inline ::google::protobuf::uint32 refreshtime() const;
  inline void set_refreshtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ChallengeUpdateNtfGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_refreshtime();
  inline void clear_has_refreshtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallenge > updates_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallenge > dels_;
  ::google::protobuf::uint32 refreshtime_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static ChallengeUpdateNtfGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class WelfareNtfGuildCmd : public ::google::protobuf::Message {
 public:
  WelfareNtfGuildCmd();
  virtual ~WelfareNtfGuildCmd();

  WelfareNtfGuildCmd(const WelfareNtfGuildCmd& from);

  inline WelfareNtfGuildCmd& operator=(const WelfareNtfGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WelfareNtfGuildCmd& default_instance();

  void Swap(WelfareNtfGuildCmd* other);

  // implements Message ----------------------------------------------

  WelfareNtfGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WelfareNtfGuildCmd& from);
  void MergeFrom(const WelfareNtfGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_WELFARE_NTF];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional bool welfare = 3 [default = false];
  inline bool has_welfare() const;
  inline void clear_welfare();
  static const int kWelfareFieldNumber = 3;
  inline bool welfare() const;
  inline void set_welfare(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.WelfareNtfGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_welfare();
  inline void clear_has_welfare();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  bool welfare_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static WelfareNtfGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class GetWelfareGuildCmd : public ::google::protobuf::Message {
 public:
  GetWelfareGuildCmd();
  virtual ~GetWelfareGuildCmd();

  GetWelfareGuildCmd(const GetWelfareGuildCmd& from);

  inline GetWelfareGuildCmd& operator=(const GetWelfareGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetWelfareGuildCmd& default_instance();

  void Swap(GetWelfareGuildCmd* other);

  // implements Message ----------------------------------------------

  GetWelfareGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetWelfareGuildCmd& from);
  void MergeFrom(const GetWelfareGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_GET_WELFARE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // @@protoc_insertion_point(class_scope:Cmd.GetWelfareGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GetWelfareGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class BuildingLvupEffect : public ::google::protobuf::Message {
 public:
  BuildingLvupEffect();
  virtual ~BuildingLvupEffect();

  BuildingLvupEffect(const BuildingLvupEffect& from);

  inline BuildingLvupEffect& operator=(const BuildingLvupEffect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildingLvupEffect& default_instance();

  void Swap(BuildingLvupEffect* other);

  // implements Message ----------------------------------------------

  BuildingLvupEffect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildingLvupEffect& from);
  void MergeFrom(const BuildingLvupEffect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.EGuildBuilding type = 1 [default = EGUILDBUILDING_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Cmd::EGuildBuilding type() const;
  inline void set_type(::Cmd::EGuildBuilding value);

  // optional uint32 level = 2 [default = 0];
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.BuildingLvupEffect)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static BuildingLvupEffect* default_instance_;
};
// -------------------------------------------------------------------

class BuildingLvupEffGuildCmd : public ::google::protobuf::Message {
 public:
  BuildingLvupEffGuildCmd();
  virtual ~BuildingLvupEffGuildCmd();

  BuildingLvupEffGuildCmd(const BuildingLvupEffGuildCmd& from);

  inline BuildingLvupEffGuildCmd& operator=(const BuildingLvupEffGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildingLvupEffGuildCmd& default_instance();

  void Swap(BuildingLvupEffGuildCmd* other);

  // implements Message ----------------------------------------------

  BuildingLvupEffGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildingLvupEffGuildCmd& from);
  void MergeFrom(const BuildingLvupEffGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_BUILDING_LVUP_EFF];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // repeated .Cmd.BuildingLvupEffect effects = 3;
  inline int effects_size() const;
  inline void clear_effects();
  static const int kEffectsFieldNumber = 3;
  inline const ::Cmd::BuildingLvupEffect& effects(int index) const;
  inline ::Cmd::BuildingLvupEffect* mutable_effects(int index);
  inline ::Cmd::BuildingLvupEffect* add_effects();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::BuildingLvupEffect >&
      effects() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::BuildingLvupEffect >*
      mutable_effects();

  // @@protoc_insertion_point(class_scope:Cmd.BuildingLvupEffGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::BuildingLvupEffect > effects_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static BuildingLvupEffGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class ArtifactUpdateNtfGuildCmd : public ::google::protobuf::Message {
 public:
  ArtifactUpdateNtfGuildCmd();
  virtual ~ArtifactUpdateNtfGuildCmd();

  ArtifactUpdateNtfGuildCmd(const ArtifactUpdateNtfGuildCmd& from);

  inline ArtifactUpdateNtfGuildCmd& operator=(const ArtifactUpdateNtfGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArtifactUpdateNtfGuildCmd& default_instance();

  void Swap(ArtifactUpdateNtfGuildCmd* other);

  // implements Message ----------------------------------------------

  ArtifactUpdateNtfGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArtifactUpdateNtfGuildCmd& from);
  void MergeFrom(const ArtifactUpdateNtfGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_ARTIFACT_UPDATE_NTF];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // repeated .Cmd.GuildArtifactItem itemupdates = 3;
  inline int itemupdates_size() const;
  inline void clear_itemupdates();
  static const int kItemupdatesFieldNumber = 3;
  inline const ::Cmd::GuildArtifactItem& itemupdates(int index) const;
  inline ::Cmd::GuildArtifactItem* mutable_itemupdates(int index);
  inline ::Cmd::GuildArtifactItem* add_itemupdates();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactItem >&
      itemupdates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactItem >*
      mutable_itemupdates();

  // repeated string itemdels = 4;
  inline int itemdels_size() const;
  inline void clear_itemdels();
  static const int kItemdelsFieldNumber = 4;
  inline const ::std::string& itemdels(int index) const;
  inline ::std::string* mutable_itemdels(int index);
  inline void set_itemdels(int index, const ::std::string& value);
  inline void set_itemdels(int index, const char* value);
  inline void set_itemdels(int index, const char* value, size_t size);
  inline ::std::string* add_itemdels();
  inline void add_itemdels(const ::std::string& value);
  inline void add_itemdels(const char* value);
  inline void add_itemdels(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& itemdels() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_itemdels();

  // repeated .Cmd.GuildArtifactData dataupdates = 5;
  inline int dataupdates_size() const;
  inline void clear_dataupdates();
  static const int kDataupdatesFieldNumber = 5;
  inline const ::Cmd::GuildArtifactData& dataupdates(int index) const;
  inline ::Cmd::GuildArtifactData* mutable_dataupdates(int index);
  inline ::Cmd::GuildArtifactData* add_dataupdates();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactData >&
      dataupdates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactData >*
      mutable_dataupdates();

  // @@protoc_insertion_point(class_scope:Cmd.ArtifactUpdateNtfGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactItem > itemupdates_;
  ::google::protobuf::RepeatedPtrField< ::std::string> itemdels_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactData > dataupdates_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static ArtifactUpdateNtfGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class ArtifactProduceGuildCmd : public ::google::protobuf::Message {
 public:
  ArtifactProduceGuildCmd();
  virtual ~ArtifactProduceGuildCmd();

  ArtifactProduceGuildCmd(const ArtifactProduceGuildCmd& from);

  inline ArtifactProduceGuildCmd& operator=(const ArtifactProduceGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArtifactProduceGuildCmd& default_instance();

  void Swap(ArtifactProduceGuildCmd* other);

  // implements Message ----------------------------------------------

  ArtifactProduceGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArtifactProduceGuildCmd& from);
  void MergeFrom(const ArtifactProduceGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_ARTIFACT_PRODUCE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional uint32 id = 3 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ArtifactProduceGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static ArtifactProduceGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class ArtifactOptGuildCmd : public ::google::protobuf::Message {
 public:
  ArtifactOptGuildCmd();
  virtual ~ArtifactOptGuildCmd();

  ArtifactOptGuildCmd(const ArtifactOptGuildCmd& from);

  inline ArtifactOptGuildCmd& operator=(const ArtifactOptGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArtifactOptGuildCmd& default_instance();

  void Swap(ArtifactOptGuildCmd* other);

  // implements Message ----------------------------------------------

  ArtifactOptGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArtifactOptGuildCmd& from);
  void MergeFrom(const ArtifactOptGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_ARTIFACT_OPT];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional .Cmd.EArtifactOptType opt = 3 [default = EARTIFACTOPTTYPE_MIN];
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 3;
  inline ::Cmd::EArtifactOptType opt() const;
  inline void set_opt(::Cmd::EArtifactOptType value);

  // repeated string guid = 4;
  inline int guid_size() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 4;
  inline const ::std::string& guid(int index) const;
  inline ::std::string* mutable_guid(int index);
  inline void set_guid(int index, const ::std::string& value);
  inline void set_guid(int index, const char* value);
  inline void set_guid(int index, const char* value, size_t size);
  inline ::std::string* add_guid();
  inline void add_guid(const ::std::string& value);
  inline void add_guid(const char* value);
  inline void add_guid(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& guid() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_guid();

  // optional uint64 charid = 5 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 5;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.ArtifactOptGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_opt();
  inline void clear_has_opt();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::std::string> guid_;
  ::google::protobuf::uint64 charid_;
  int opt_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static ArtifactOptGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class QueryGQuestGuildCmd : public ::google::protobuf::Message {
 public:
  QueryGQuestGuildCmd();
  virtual ~QueryGQuestGuildCmd();

  QueryGQuestGuildCmd(const QueryGQuestGuildCmd& from);

  inline QueryGQuestGuildCmd& operator=(const QueryGQuestGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryGQuestGuildCmd& default_instance();

  void Swap(QueryGQuestGuildCmd* other);

  // implements Message ----------------------------------------------

  QueryGQuestGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryGQuestGuildCmd& from);
  void MergeFrom(const QueryGQuestGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_QUERY_GQUEST];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // repeated uint32 submit_quests = 3;
  inline int submit_quests_size() const;
  inline void clear_submit_quests();
  static const int kSubmitQuestsFieldNumber = 3;
  inline ::google::protobuf::uint32 submit_quests(int index) const;
  inline void set_submit_quests(int index, ::google::protobuf::uint32 value);
  inline void add_submit_quests(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      submit_quests() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_submit_quests();

  // @@protoc_insertion_point(class_scope:Cmd.QueryGQuestGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > submit_quests_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static QueryGQuestGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class TreasureActionGuildCmd : public ::google::protobuf::Message {
 public:
  TreasureActionGuildCmd();
  virtual ~TreasureActionGuildCmd();

  TreasureActionGuildCmd(const TreasureActionGuildCmd& from);

  inline TreasureActionGuildCmd& operator=(const TreasureActionGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TreasureActionGuildCmd& default_instance();

  void Swap(TreasureActionGuildCmd* other);

  // implements Message ----------------------------------------------

  TreasureActionGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TreasureActionGuildCmd& from);
  void MergeFrom(const TreasureActionGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_TREASURE_ACTION];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 guild_treasure_count = 4 [default = 0];
  inline bool has_guild_treasure_count() const;
  inline void clear_guild_treasure_count();
  static const int kGuildTreasureCountFieldNumber = 4;
  inline ::google::protobuf::uint32 guild_treasure_count() const;
  inline void set_guild_treasure_count(::google::protobuf::uint32 value);

  // optional uint32 bcoin_treasure_count = 5 [default = 0];
  inline bool has_bcoin_treasure_count() const;
  inline void clear_bcoin_treasure_count();
  static const int kBcoinTreasureCountFieldNumber = 5;
  inline ::google::protobuf::uint32 bcoin_treasure_count() const;
  inline void set_bcoin_treasure_count(::google::protobuf::uint32 value);

  // optional .Cmd.ETreasureAction action = 6 [default = ETREASUREACTION_MIN];
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 6;
  inline ::Cmd::ETreasureAction action() const;
  inline void set_action(::Cmd::ETreasureAction value);

  // optional .Cmd.ETreasurePoint point = 7 [default = ETREASUREPOINT_MIN];
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 7;
  inline ::Cmd::ETreasurePoint point() const;
  inline void set_point(::Cmd::ETreasurePoint value);

  // optional .Cmd.GuildTreasure treasure = 8;
  inline bool has_treasure() const;
  inline void clear_treasure();
  static const int kTreasureFieldNumber = 8;
  inline const ::Cmd::GuildTreasure& treasure() const;
  inline ::Cmd::GuildTreasure* mutable_treasure();
  inline ::Cmd::GuildTreasure* release_treasure();
  inline void set_allocated_treasure(::Cmd::GuildTreasure* treasure);

  // @@protoc_insertion_point(class_scope:Cmd.TreasureActionGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_guild_treasure_count();
  inline void clear_has_guild_treasure_count();
  inline void set_has_bcoin_treasure_count();
  inline void clear_has_bcoin_treasure_count();
  inline void set_has_action();
  inline void clear_has_action();
  inline void set_has_point();
  inline void clear_has_point();
  inline void set_has_treasure();
  inline void clear_has_treasure();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 guild_treasure_count_;
  ::google::protobuf::uint32 bcoin_treasure_count_;
  int action_;
  int point_;
  ::Cmd::GuildTreasure* treasure_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static TreasureActionGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class BuildingSubmitRankItem : public ::google::protobuf::Message {
 public:
  BuildingSubmitRankItem();
  virtual ~BuildingSubmitRankItem();

  BuildingSubmitRankItem(const BuildingSubmitRankItem& from);

  inline BuildingSubmitRankItem& operator=(const BuildingSubmitRankItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildingSubmitRankItem& default_instance();

  void Swap(BuildingSubmitRankItem* other);

  // implements Message ----------------------------------------------

  BuildingSubmitRankItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildingSubmitRankItem& from);
  void MergeFrom(const BuildingSubmitRankItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charid = 1 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 submitcounttotal = 2 [default = 0];
  inline bool has_submitcounttotal() const;
  inline void clear_submitcounttotal();
  static const int kSubmitcounttotalFieldNumber = 2;
  inline ::google::protobuf::uint32 submitcounttotal() const;
  inline void set_submitcounttotal(::google::protobuf::uint32 value);

  // optional uint32 submittime = 3 [default = 0];
  inline bool has_submittime() const;
  inline void clear_submittime();
  static const int kSubmittimeFieldNumber = 3;
  inline ::google::protobuf::uint32 submittime() const;
  inline void set_submittime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.BuildingSubmitRankItem)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_submitcounttotal();
  inline void clear_has_submitcounttotal();
  inline void set_has_submittime();
  inline void clear_has_submittime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 submitcounttotal_;
  ::google::protobuf::uint32 submittime_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static BuildingSubmitRankItem* default_instance_;
};
// -------------------------------------------------------------------

class QueryBuildingRankGuildCmd : public ::google::protobuf::Message {
 public:
  QueryBuildingRankGuildCmd();
  virtual ~QueryBuildingRankGuildCmd();

  QueryBuildingRankGuildCmd(const QueryBuildingRankGuildCmd& from);

  inline QueryBuildingRankGuildCmd& operator=(const QueryBuildingRankGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryBuildingRankGuildCmd& default_instance();

  void Swap(QueryBuildingRankGuildCmd* other);

  // implements Message ----------------------------------------------

  QueryBuildingRankGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryBuildingRankGuildCmd& from);
  void MergeFrom(const QueryBuildingRankGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_QUERY_BUILDING_RANK];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional .Cmd.EGuildBuilding type = 3 [default = EGUILDBUILDING_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::Cmd::EGuildBuilding type() const;
  inline void set_type(::Cmd::EGuildBuilding value);

  // repeated .Cmd.BuildingSubmitRankItem items = 4;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 4;
  inline const ::Cmd::BuildingSubmitRankItem& items(int index) const;
  inline ::Cmd::BuildingSubmitRankItem* mutable_items(int index);
  inline ::Cmd::BuildingSubmitRankItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::BuildingSubmitRankItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::BuildingSubmitRankItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:Cmd.QueryBuildingRankGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::BuildingSubmitRankItem > items_;
  int type_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static QueryBuildingRankGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class QueryTreasureResultGuildCmd : public ::google::protobuf::Message {
 public:
  QueryTreasureResultGuildCmd();
  virtual ~QueryTreasureResultGuildCmd();

  QueryTreasureResultGuildCmd(const QueryTreasureResultGuildCmd& from);

  inline QueryTreasureResultGuildCmd& operator=(const QueryTreasureResultGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryTreasureResultGuildCmd& default_instance();

  void Swap(QueryTreasureResultGuildCmd* other);

  // implements Message ----------------------------------------------

  QueryTreasureResultGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryTreasureResultGuildCmd& from);
  void MergeFrom(const QueryTreasureResultGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_TREASURE_QUERYRESULT];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional uint32 eventguid = 3 [default = 0];
  inline bool has_eventguid() const;
  inline void clear_eventguid();
  static const int kEventguidFieldNumber = 3;
  inline ::google::protobuf::uint32 eventguid() const;
  inline void set_eventguid(::google::protobuf::uint32 value);

  // optional .Cmd.TreasureResult result = 4;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 4;
  inline const ::Cmd::TreasureResult& result() const;
  inline ::Cmd::TreasureResult* mutable_result();
  inline ::Cmd::TreasureResult* release_result();
  inline void set_allocated_result(::Cmd::TreasureResult* result);

  // @@protoc_insertion_point(class_scope:Cmd.QueryTreasureResultGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_eventguid();
  inline void clear_has_eventguid();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::TreasureResult* result_;
  ::google::protobuf::uint32 eventguid_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static QueryTreasureResultGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class CityShowInfo : public ::google::protobuf::Message {
 public:
  CityShowInfo();
  virtual ~CityShowInfo();

  CityShowInfo(const CityShowInfo& from);

  inline CityShowInfo& operator=(const CityShowInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CityShowInfo& default_instance();

  void Swap(CityShowInfo* other);

  // implements Message ----------------------------------------------

  CityShowInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CityShowInfo& from);
  void MergeFrom(const CityShowInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cityid = 1 [default = 0];
  inline bool has_cityid() const;
  inline void clear_cityid();
  static const int kCityidFieldNumber = 1;
  inline ::google::protobuf::uint32 cityid() const;
  inline void set_cityid(::google::protobuf::uint32 value);

  // optional .Cmd.EGCityState state = 2 [default = EGCITYSTATE_MIN];
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::Cmd::EGCityState state() const;
  inline void set_state(::Cmd::EGCityState value);

  // optional uint64 guildid = 3 [default = 0];
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 3;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional string name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string portrait = 5;
  inline bool has_portrait() const;
  inline void clear_portrait();
  static const int kPortraitFieldNumber = 5;
  inline const ::std::string& portrait() const;
  inline void set_portrait(const ::std::string& value);
  inline void set_portrait(const char* value);
  inline void set_portrait(const char* value, size_t size);
  inline ::std::string* mutable_portrait();
  inline ::std::string* release_portrait();
  inline void set_allocated_portrait(::std::string* portrait);

  // optional uint32 lv = 6 [default = 0];
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 6;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);

  // optional uint32 membercount = 7 [default = 0];
  inline bool has_membercount() const;
  inline void clear_membercount();
  static const int kMembercountFieldNumber = 7;
  inline ::google::protobuf::uint32 membercount() const;
  inline void set_membercount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.CityShowInfo)
 private:
  inline void set_has_cityid();
  inline void clear_has_cityid();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_portrait();
  inline void clear_has_portrait();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_membercount();
  inline void clear_has_membercount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 cityid_;
  int state_;
  ::google::protobuf::uint64 guildid_;
  ::std::string* name_;
  ::std::string* portrait_;
  ::google::protobuf::uint32 lv_;
  ::google::protobuf::uint32 membercount_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static CityShowInfo* default_instance_;
};
// -------------------------------------------------------------------

class QueryGCityShowInfoGuildCmd : public ::google::protobuf::Message {
 public:
  QueryGCityShowInfoGuildCmd();
  virtual ~QueryGCityShowInfoGuildCmd();

  QueryGCityShowInfoGuildCmd(const QueryGCityShowInfoGuildCmd& from);

  inline QueryGCityShowInfoGuildCmd& operator=(const QueryGCityShowInfoGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryGCityShowInfoGuildCmd& default_instance();

  void Swap(QueryGCityShowInfoGuildCmd* other);

  // implements Message ----------------------------------------------

  QueryGCityShowInfoGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryGCityShowInfoGuildCmd& from);
  void MergeFrom(const QueryGCityShowInfoGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_QUERY_CITYSHOW];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // repeated .Cmd.CityShowInfo infos = 3;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 3;
  inline const ::Cmd::CityShowInfo& infos(int index) const;
  inline ::Cmd::CityShowInfo* mutable_infos(int index);
  inline ::Cmd::CityShowInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::CityShowInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::CityShowInfo >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:Cmd.QueryGCityShowInfoGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::CityShowInfo > infos_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static QueryGCityShowInfoGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class GvgOpenFireGuildCmd : public ::google::protobuf::Message {
 public:
  GvgOpenFireGuildCmd();
  virtual ~GvgOpenFireGuildCmd();

  GvgOpenFireGuildCmd(const GvgOpenFireGuildCmd& from);

  inline GvgOpenFireGuildCmd& operator=(const GvgOpenFireGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GvgOpenFireGuildCmd& default_instance();

  void Swap(GvgOpenFireGuildCmd* other);

  // implements Message ----------------------------------------------

  GvgOpenFireGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GvgOpenFireGuildCmd& from);
  void MergeFrom(const GvgOpenFireGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_OEPN_GVG];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional bool fire = 3 [default = false];
  inline bool has_fire() const;
  inline void clear_fire();
  static const int kFireFieldNumber = 3;
  inline bool fire() const;
  inline void set_fire(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.GvgOpenFireGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_fire();
  inline void clear_has_fire();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  bool fire_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static GvgOpenFireGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class EnterPunishTimeNtfGuildCmd : public ::google::protobuf::Message {
 public:
  EnterPunishTimeNtfGuildCmd();
  virtual ~EnterPunishTimeNtfGuildCmd();

  EnterPunishTimeNtfGuildCmd(const EnterPunishTimeNtfGuildCmd& from);

  inline EnterPunishTimeNtfGuildCmd& operator=(const EnterPunishTimeNtfGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterPunishTimeNtfGuildCmd& default_instance();

  void Swap(EnterPunishTimeNtfGuildCmd* other);

  // implements Message ----------------------------------------------

  EnterPunishTimeNtfGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterPunishTimeNtfGuildCmd& from);
  void MergeFrom(const EnterPunishTimeNtfGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_ENTERPUNISHTIME_NTF];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional uint32 exittime = 3 [default = 0];
  inline bool has_exittime() const;
  inline void clear_exittime();
  static const int kExittimeFieldNumber = 3;
  inline ::google::protobuf::uint32 exittime() const;
  inline void set_exittime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.EnterPunishTimeNtfGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_exittime();
  inline void clear_has_exittime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 exittime_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static EnterPunishTimeNtfGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class OpenRealtimeVoiceGuildCmd : public ::google::protobuf::Message {
 public:
  OpenRealtimeVoiceGuildCmd();
  virtual ~OpenRealtimeVoiceGuildCmd();

  OpenRealtimeVoiceGuildCmd(const OpenRealtimeVoiceGuildCmd& from);

  inline OpenRealtimeVoiceGuildCmd& operator=(const OpenRealtimeVoiceGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenRealtimeVoiceGuildCmd& default_instance();

  void Swap(OpenRealtimeVoiceGuildCmd* other);

  // implements Message ----------------------------------------------

  OpenRealtimeVoiceGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenRealtimeVoiceGuildCmd& from);
  void MergeFrom(const OpenRealtimeVoiceGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_OPEN_REALTIME_VOICE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildParam param() const;
  inline void set_param(::Cmd::GuildParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional bool open = 4 [default = false];
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 4;
  inline bool open() const;
  inline void set_open(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.OpenRealtimeVoiceGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_open();
  inline void clear_has_open();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  bool open_;
  friend void  protobuf_AddDesc_GuildCmd_2eproto();
  friend void protobuf_AssignDesc_GuildCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildCmd_2eproto();

  void InitAsDefaultInstance();
  static OpenRealtimeVoiceGuildCmd* default_instance_;
};
// ===================================================================


// ===================================================================

// GuildPrayCFG

// optional uint32 prayid = 1 [default = 0];
inline bool GuildPrayCFG::has_prayid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildPrayCFG::set_has_prayid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildPrayCFG::clear_has_prayid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildPrayCFG::clear_prayid() {
  prayid_ = 0u;
  clear_has_prayid();
}
inline ::google::protobuf::uint32 GuildPrayCFG::prayid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildPrayCFG.prayid)
  return prayid_;
}
inline void GuildPrayCFG::set_prayid(::google::protobuf::uint32 value) {
  set_has_prayid();
  prayid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildPrayCFG.prayid)
}

// optional uint32 praylv = 2 [default = 0];
inline bool GuildPrayCFG::has_praylv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildPrayCFG::set_has_praylv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildPrayCFG::clear_has_praylv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildPrayCFG::clear_praylv() {
  praylv_ = 0u;
  clear_has_praylv();
}
inline ::google::protobuf::uint32 GuildPrayCFG::praylv() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildPrayCFG.praylv)
  return praylv_;
}
inline void GuildPrayCFG::set_praylv(::google::protobuf::uint32 value) {
  set_has_praylv();
  praylv_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildPrayCFG.praylv)
}

// optional .Cmd.EPrayType type = 3 [default = EPRAYTYPE_GODDESS];
inline bool GuildPrayCFG::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildPrayCFG::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildPrayCFG::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildPrayCFG::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::EPrayType GuildPrayCFG::type() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildPrayCFG.type)
  return static_cast< ::Cmd::EPrayType >(type_);
}
inline void GuildPrayCFG::set_type(::Cmd::EPrayType value) {
  assert(::Cmd::EPrayType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildPrayCFG.type)
}

// repeated .Cmd.UserAttr attrs = 4;
inline int GuildPrayCFG::attrs_size() const {
  return attrs_.size();
}
inline void GuildPrayCFG::clear_attrs() {
  attrs_.Clear();
}
inline const ::Cmd::UserAttr& GuildPrayCFG::attrs(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildPrayCFG.attrs)
  return attrs_.Get(index);
}
inline ::Cmd::UserAttr* GuildPrayCFG::mutable_attrs(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildPrayCFG.attrs)
  return attrs_.Mutable(index);
}
inline ::Cmd::UserAttr* GuildPrayCFG::add_attrs() {
  // @@protoc_insertion_point(field_add:Cmd.GuildPrayCFG.attrs)
  return attrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >&
GuildPrayCFG::attrs() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildPrayCFG.attrs)
  return attrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >*
GuildPrayCFG::mutable_attrs() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildPrayCFG.attrs)
  return &attrs_;
}

// repeated .Cmd.ItemInfo costs = 5;
inline int GuildPrayCFG::costs_size() const {
  return costs_.size();
}
inline void GuildPrayCFG::clear_costs() {
  costs_.Clear();
}
inline const ::Cmd::ItemInfo& GuildPrayCFG::costs(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildPrayCFG.costs)
  return costs_.Get(index);
}
inline ::Cmd::ItemInfo* GuildPrayCFG::mutable_costs(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildPrayCFG.costs)
  return costs_.Mutable(index);
}
inline ::Cmd::ItemInfo* GuildPrayCFG::add_costs() {
  // @@protoc_insertion_point(field_add:Cmd.GuildPrayCFG.costs)
  return costs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo >&
GuildPrayCFG::costs() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildPrayCFG.costs)
  return costs_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo >*
GuildPrayCFG::mutable_costs() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildPrayCFG.costs)
  return &costs_;
}

// -------------------------------------------------------------------

// GuildMemberPray

// optional uint32 pray = 1 [default = 0];
inline bool GuildMemberPray::has_pray() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMemberPray::set_has_pray() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMemberPray::clear_has_pray() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMemberPray::clear_pray() {
  pray_ = 0u;
  clear_has_pray();
}
inline ::google::protobuf::uint32 GuildMemberPray::pray() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMemberPray.pray)
  return pray_;
}
inline void GuildMemberPray::set_pray(::google::protobuf::uint32 value) {
  set_has_pray();
  pray_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMemberPray.pray)
}

// optional uint32 lv = 2 [default = 0];
inline bool GuildMemberPray::has_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMemberPray::set_has_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMemberPray::clear_has_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMemberPray::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 GuildMemberPray::lv() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMemberPray.lv)
  return lv_;
}
inline void GuildMemberPray::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMemberPray.lv)
}

// optional .Cmd.GuildPrayCFG cur = 3;
inline bool GuildMemberPray::has_cur() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildMemberPray::set_has_cur() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildMemberPray::clear_has_cur() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildMemberPray::clear_cur() {
  if (cur_ != NULL) cur_->::Cmd::GuildPrayCFG::Clear();
  clear_has_cur();
}
inline const ::Cmd::GuildPrayCFG& GuildMemberPray::cur() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMemberPray.cur)
  return cur_ != NULL ? *cur_ : *default_instance_->cur_;
}
inline ::Cmd::GuildPrayCFG* GuildMemberPray::mutable_cur() {
  set_has_cur();
  if (cur_ == NULL) cur_ = new ::Cmd::GuildPrayCFG;
  // @@protoc_insertion_point(field_mutable:Cmd.GuildMemberPray.cur)
  return cur_;
}
inline ::Cmd::GuildPrayCFG* GuildMemberPray::release_cur() {
  clear_has_cur();
  ::Cmd::GuildPrayCFG* temp = cur_;
  cur_ = NULL;
  return temp;
}
inline void GuildMemberPray::set_allocated_cur(::Cmd::GuildPrayCFG* cur) {
  delete cur_;
  cur_ = cur;
  if (cur) {
    set_has_cur();
  } else {
    clear_has_cur();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildMemberPray.cur)
}

// optional .Cmd.GuildPrayCFG next = 4;
inline bool GuildMemberPray::has_next() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildMemberPray::set_has_next() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildMemberPray::clear_has_next() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildMemberPray::clear_next() {
  if (next_ != NULL) next_->::Cmd::GuildPrayCFG::Clear();
  clear_has_next();
}
inline const ::Cmd::GuildPrayCFG& GuildMemberPray::next() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMemberPray.next)
  return next_ != NULL ? *next_ : *default_instance_->next_;
}
inline ::Cmd::GuildPrayCFG* GuildMemberPray::mutable_next() {
  set_has_next();
  if (next_ == NULL) next_ = new ::Cmd::GuildPrayCFG;
  // @@protoc_insertion_point(field_mutable:Cmd.GuildMemberPray.next)
  return next_;
}
inline ::Cmd::GuildPrayCFG* GuildMemberPray::release_next() {
  clear_has_next();
  ::Cmd::GuildPrayCFG* temp = next_;
  next_ = NULL;
  return temp;
}
inline void GuildMemberPray::set_allocated_next(::Cmd::GuildPrayCFG* next) {
  delete next_;
  next_ = next;
  if (next) {
    set_has_next();
  } else {
    clear_has_next();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildMemberPray.next)
}

// -------------------------------------------------------------------

// BlobGuildPray

// repeated .Cmd.GuildMemberPray prays = 1;
inline int BlobGuildPray::prays_size() const {
  return prays_.size();
}
inline void BlobGuildPray::clear_prays() {
  prays_.Clear();
}
inline const ::Cmd::GuildMemberPray& BlobGuildPray::prays(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildPray.prays)
  return prays_.Get(index);
}
inline ::Cmd::GuildMemberPray* BlobGuildPray::mutable_prays(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BlobGuildPray.prays)
  return prays_.Mutable(index);
}
inline ::Cmd::GuildMemberPray* BlobGuildPray::add_prays() {
  // @@protoc_insertion_point(field_add:Cmd.BlobGuildPray.prays)
  return prays_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMemberPray >&
BlobGuildPray::prays() const {
  // @@protoc_insertion_point(field_list:Cmd.BlobGuildPray.prays)
  return prays_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMemberPray >*
BlobGuildPray::mutable_prays() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BlobGuildPray.prays)
  return &prays_;
}

// -------------------------------------------------------------------

// BlobDonate

// repeated .Cmd.DonateItem items = 1;
inline int BlobDonate::items_size() const {
  return items_.size();
}
inline void BlobDonate::clear_items() {
  items_.Clear();
}
inline const ::Cmd::DonateItem& BlobDonate::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BlobDonate.items)
  return items_.Get(index);
}
inline ::Cmd::DonateItem* BlobDonate::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BlobDonate.items)
  return items_.Mutable(index);
}
inline ::Cmd::DonateItem* BlobDonate::add_items() {
  // @@protoc_insertion_point(field_add:Cmd.BlobDonate.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::DonateItem >&
BlobDonate::items() const {
  // @@protoc_insertion_point(field_list:Cmd.BlobDonate.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::DonateItem >*
BlobDonate::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BlobDonate.items)
  return &items_;
}

// repeated uint32 steps = 2;
inline int BlobDonate::steps_size() const {
  return steps_.size();
}
inline void BlobDonate::clear_steps() {
  steps_.Clear();
}
inline ::google::protobuf::uint32 BlobDonate::steps(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BlobDonate.steps)
  return steps_.Get(index);
}
inline void BlobDonate::set_steps(int index, ::google::protobuf::uint32 value) {
  steps_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.BlobDonate.steps)
}
inline void BlobDonate::add_steps(::google::protobuf::uint32 value) {
  steps_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.BlobDonate.steps)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BlobDonate::steps() const {
  // @@protoc_insertion_point(field_list:Cmd.BlobDonate.steps)
  return steps_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BlobDonate::mutable_steps() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BlobDonate.steps)
  return &steps_;
}

// optional uint32 donatetime1 = 3 [default = 0];
inline bool BlobDonate::has_donatetime1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BlobDonate::set_has_donatetime1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BlobDonate::clear_has_donatetime1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BlobDonate::clear_donatetime1() {
  donatetime1_ = 0u;
  clear_has_donatetime1();
}
inline ::google::protobuf::uint32 BlobDonate::donatetime1() const {
  // @@protoc_insertion_point(field_get:Cmd.BlobDonate.donatetime1)
  return donatetime1_;
}
inline void BlobDonate::set_donatetime1(::google::protobuf::uint32 value) {
  set_has_donatetime1();
  donatetime1_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BlobDonate.donatetime1)
}

// optional uint32 donatetime2 = 4 [default = 0];
inline bool BlobDonate::has_donatetime2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BlobDonate::set_has_donatetime2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BlobDonate::clear_has_donatetime2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BlobDonate::clear_donatetime2() {
  donatetime2_ = 0u;
  clear_has_donatetime2();
}
inline ::google::protobuf::uint32 BlobDonate::donatetime2() const {
  // @@protoc_insertion_point(field_get:Cmd.BlobDonate.donatetime2)
  return donatetime2_;
}
inline void BlobDonate::set_donatetime2(::google::protobuf::uint32 value) {
  set_has_donatetime2();
  donatetime2_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BlobDonate.donatetime2)
}

// optional uint32 donatetime3 = 5 [default = 0];
inline bool BlobDonate::has_donatetime3() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BlobDonate::set_has_donatetime3() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BlobDonate::clear_has_donatetime3() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BlobDonate::clear_donatetime3() {
  donatetime3_ = 0u;
  clear_has_donatetime3();
}
inline ::google::protobuf::uint32 BlobDonate::donatetime3() const {
  // @@protoc_insertion_point(field_get:Cmd.BlobDonate.donatetime3)
  return donatetime3_;
}
inline void BlobDonate::set_donatetime3(::google::protobuf::uint32 value) {
  set_has_donatetime3();
  donatetime3_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BlobDonate.donatetime3)
}

// optional uint32 donatetime4 = 6 [default = 0];
inline bool BlobDonate::has_donatetime4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BlobDonate::set_has_donatetime4() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BlobDonate::clear_has_donatetime4() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BlobDonate::clear_donatetime4() {
  donatetime4_ = 0u;
  clear_has_donatetime4();
}
inline ::google::protobuf::uint32 BlobDonate::donatetime4() const {
  // @@protoc_insertion_point(field_get:Cmd.BlobDonate.donatetime4)
  return donatetime4_;
}
inline void BlobDonate::set_donatetime4(::google::protobuf::uint32 value) {
  set_has_donatetime4();
  donatetime4_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BlobDonate.donatetime4)
}

// -------------------------------------------------------------------

// UserGuildBuilding

// optional .Cmd.EGuildBuilding type = 1 [default = EGUILDBUILDING_MIN];
inline bool UserGuildBuilding::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserGuildBuilding::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserGuildBuilding::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserGuildBuilding::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::EGuildBuilding UserGuildBuilding::type() const {
  // @@protoc_insertion_point(field_get:Cmd.UserGuildBuilding.type)
  return static_cast< ::Cmd::EGuildBuilding >(type_);
}
inline void UserGuildBuilding::set_type(::Cmd::EGuildBuilding value) {
  assert(::Cmd::EGuildBuilding_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserGuildBuilding.type)
}

// optional uint32 submitcount = 2 [default = 0];
inline bool UserGuildBuilding::has_submitcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserGuildBuilding::set_has_submitcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserGuildBuilding::clear_has_submitcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserGuildBuilding::clear_submitcount() {
  submitcount_ = 0u;
  clear_has_submitcount();
}
inline ::google::protobuf::uint32 UserGuildBuilding::submitcount() const {
  // @@protoc_insertion_point(field_get:Cmd.UserGuildBuilding.submitcount)
  return submitcount_;
}
inline void UserGuildBuilding::set_submitcount(::google::protobuf::uint32 value) {
  set_has_submitcount();
  submitcount_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserGuildBuilding.submitcount)
}

// optional uint32 nextwelfaretime = 3 [default = 0];
inline bool UserGuildBuilding::has_nextwelfaretime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserGuildBuilding::set_has_nextwelfaretime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserGuildBuilding::clear_has_nextwelfaretime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserGuildBuilding::clear_nextwelfaretime() {
  nextwelfaretime_ = 0u;
  clear_has_nextwelfaretime();
}
inline ::google::protobuf::uint32 UserGuildBuilding::nextwelfaretime() const {
  // @@protoc_insertion_point(field_get:Cmd.UserGuildBuilding.nextwelfaretime)
  return nextwelfaretime_;
}
inline void UserGuildBuilding::set_nextwelfaretime(::google::protobuf::uint32 value) {
  set_has_nextwelfaretime();
  nextwelfaretime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserGuildBuilding.nextwelfaretime)
}

// optional bool levelupeffect = 4 [default = false];
inline bool UserGuildBuilding::has_levelupeffect() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserGuildBuilding::set_has_levelupeffect() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserGuildBuilding::clear_has_levelupeffect() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserGuildBuilding::clear_levelupeffect() {
  levelupeffect_ = false;
  clear_has_levelupeffect();
}
inline bool UserGuildBuilding::levelupeffect() const {
  // @@protoc_insertion_point(field_get:Cmd.UserGuildBuilding.levelupeffect)
  return levelupeffect_;
}
inline void UserGuildBuilding::set_levelupeffect(bool value) {
  set_has_levelupeffect();
  levelupeffect_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserGuildBuilding.levelupeffect)
}

// optional uint32 submitcounttotal = 5 [default = 0];
inline bool UserGuildBuilding::has_submitcounttotal() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserGuildBuilding::set_has_submitcounttotal() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserGuildBuilding::clear_has_submitcounttotal() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserGuildBuilding::clear_submitcounttotal() {
  submitcounttotal_ = 0u;
  clear_has_submitcounttotal();
}
inline ::google::protobuf::uint32 UserGuildBuilding::submitcounttotal() const {
  // @@protoc_insertion_point(field_get:Cmd.UserGuildBuilding.submitcounttotal)
  return submitcounttotal_;
}
inline void UserGuildBuilding::set_submitcounttotal(::google::protobuf::uint32 value) {
  set_has_submitcounttotal();
  submitcounttotal_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserGuildBuilding.submitcounttotal)
}

// optional uint32 submittime = 6 [default = 0];
inline bool UserGuildBuilding::has_submittime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserGuildBuilding::set_has_submittime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserGuildBuilding::clear_has_submittime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserGuildBuilding::clear_submittime() {
  submittime_ = 0u;
  clear_has_submittime();
}
inline ::google::protobuf::uint32 UserGuildBuilding::submittime() const {
  // @@protoc_insertion_point(field_get:Cmd.UserGuildBuilding.submittime)
  return submittime_;
}
inline void UserGuildBuilding::set_submittime(::google::protobuf::uint32 value) {
  set_has_submittime();
  submittime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserGuildBuilding.submittime)
}

// -------------------------------------------------------------------

// BlobGuildBuilding

// repeated .Cmd.UserGuildBuilding buildings = 1;
inline int BlobGuildBuilding::buildings_size() const {
  return buildings_.size();
}
inline void BlobGuildBuilding::clear_buildings() {
  buildings_.Clear();
}
inline const ::Cmd::UserGuildBuilding& BlobGuildBuilding::buildings(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildBuilding.buildings)
  return buildings_.Get(index);
}
inline ::Cmd::UserGuildBuilding* BlobGuildBuilding::mutable_buildings(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BlobGuildBuilding.buildings)
  return buildings_.Mutable(index);
}
inline ::Cmd::UserGuildBuilding* BlobGuildBuilding::add_buildings() {
  // @@protoc_insertion_point(field_add:Cmd.BlobGuildBuilding.buildings)
  return buildings_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UserGuildBuilding >&
BlobGuildBuilding::buildings() const {
  // @@protoc_insertion_point(field_list:Cmd.BlobGuildBuilding.buildings)
  return buildings_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::UserGuildBuilding >*
BlobGuildBuilding::mutable_buildings() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BlobGuildBuilding.buildings)
  return &buildings_;
}

// -------------------------------------------------------------------

// GuildMember

// optional uint64 charid = 1 [default = 0];
inline bool GuildMember::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMember::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMember::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMember::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GuildMember::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.charid)
  return charid_;
}
inline void GuildMember::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.charid)
}

// optional uint32 baselevel = 2 [default = 0];
inline bool GuildMember::has_baselevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMember::set_has_baselevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMember::clear_has_baselevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMember::clear_baselevel() {
  baselevel_ = 0u;
  clear_has_baselevel();
}
inline ::google::protobuf::uint32 GuildMember::baselevel() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.baselevel)
  return baselevel_;
}
inline void GuildMember::set_baselevel(::google::protobuf::uint32 value) {
  set_has_baselevel();
  baselevel_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.baselevel)
}

// optional uint32 portrait = 3 [default = 0];
inline bool GuildMember::has_portrait() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildMember::set_has_portrait() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildMember::clear_has_portrait() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildMember::clear_portrait() {
  portrait_ = 0u;
  clear_has_portrait();
}
inline ::google::protobuf::uint32 GuildMember::portrait() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.portrait)
  return portrait_;
}
inline void GuildMember::set_portrait(::google::protobuf::uint32 value) {
  set_has_portrait();
  portrait_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.portrait)
}

// optional uint32 frame = 4 [default = 0];
inline bool GuildMember::has_frame() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildMember::set_has_frame() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildMember::clear_has_frame() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildMember::clear_frame() {
  frame_ = 0u;
  clear_has_frame();
}
inline ::google::protobuf::uint32 GuildMember::frame() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.frame)
  return frame_;
}
inline void GuildMember::set_frame(::google::protobuf::uint32 value) {
  set_has_frame();
  frame_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.frame)
}

// optional uint32 weekcontribution = 5 [default = 0];
inline bool GuildMember::has_weekcontribution() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildMember::set_has_weekcontribution() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildMember::clear_has_weekcontribution() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildMember::clear_weekcontribution() {
  weekcontribution_ = 0u;
  clear_has_weekcontribution();
}
inline ::google::protobuf::uint32 GuildMember::weekcontribution() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.weekcontribution)
  return weekcontribution_;
}
inline void GuildMember::set_weekcontribution(::google::protobuf::uint32 value) {
  set_has_weekcontribution();
  weekcontribution_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.weekcontribution)
}

// optional uint32 contribution = 6 [default = 0];
inline bool GuildMember::has_contribution() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildMember::set_has_contribution() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildMember::clear_has_contribution() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildMember::clear_contribution() {
  contribution_ = 0u;
  clear_has_contribution();
}
inline ::google::protobuf::uint32 GuildMember::contribution() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.contribution)
  return contribution_;
}
inline void GuildMember::set_contribution(::google::protobuf::uint32 value) {
  set_has_contribution();
  contribution_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.contribution)
}

// optional uint32 totalcontribution = 19 [default = 0];
inline bool GuildMember::has_totalcontribution() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildMember::set_has_totalcontribution() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildMember::clear_has_totalcontribution() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildMember::clear_totalcontribution() {
  totalcontribution_ = 0u;
  clear_has_totalcontribution();
}
inline ::google::protobuf::uint32 GuildMember::totalcontribution() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.totalcontribution)
  return totalcontribution_;
}
inline void GuildMember::set_totalcontribution(::google::protobuf::uint32 value) {
  set_has_totalcontribution();
  totalcontribution_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.totalcontribution)
}

// optional uint32 entertime = 7 [default = 0];
inline bool GuildMember::has_entertime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuildMember::set_has_entertime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuildMember::clear_has_entertime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuildMember::clear_entertime() {
  entertime_ = 0u;
  clear_has_entertime();
}
inline ::google::protobuf::uint32 GuildMember::entertime() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.entertime)
  return entertime_;
}
inline void GuildMember::set_entertime(::google::protobuf::uint32 value) {
  set_has_entertime();
  entertime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.entertime)
}

// optional uint32 offlinetime = 8 [default = 0];
inline bool GuildMember::has_offlinetime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GuildMember::set_has_offlinetime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GuildMember::clear_has_offlinetime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GuildMember::clear_offlinetime() {
  offlinetime_ = 0u;
  clear_has_offlinetime();
}
inline ::google::protobuf::uint32 GuildMember::offlinetime() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.offlinetime)
  return offlinetime_;
}
inline void GuildMember::set_offlinetime(::google::protobuf::uint32 value) {
  set_has_offlinetime();
  offlinetime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.offlinetime)
}

// optional uint32 giftpoint = 9 [default = 0];
inline bool GuildMember::has_giftpoint() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GuildMember::set_has_giftpoint() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GuildMember::clear_has_giftpoint() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GuildMember::clear_giftpoint() {
  giftpoint_ = 0u;
  clear_has_giftpoint();
}
inline ::google::protobuf::uint32 GuildMember::giftpoint() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.giftpoint)
  return giftpoint_;
}
inline void GuildMember::set_giftpoint(::google::protobuf::uint32 value) {
  set_has_giftpoint();
  giftpoint_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.giftpoint)
}

// optional uint32 hair = 16 [default = 0];
inline bool GuildMember::has_hair() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GuildMember::set_has_hair() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GuildMember::clear_has_hair() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GuildMember::clear_hair() {
  hair_ = 0u;
  clear_has_hair();
}
inline ::google::protobuf::uint32 GuildMember::hair() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.hair)
  return hair_;
}
inline void GuildMember::set_hair(::google::protobuf::uint32 value) {
  set_has_hair();
  hair_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.hair)
}

// optional uint32 haircolor = 17 [default = 0];
inline bool GuildMember::has_haircolor() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GuildMember::set_has_haircolor() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GuildMember::clear_has_haircolor() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GuildMember::clear_haircolor() {
  haircolor_ = 0u;
  clear_has_haircolor();
}
inline ::google::protobuf::uint32 GuildMember::haircolor() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.haircolor)
  return haircolor_;
}
inline void GuildMember::set_haircolor(::google::protobuf::uint32 value) {
  set_has_haircolor();
  haircolor_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.haircolor)
}

// optional uint32 body = 18 [default = 0];
inline bool GuildMember::has_body() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GuildMember::set_has_body() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GuildMember::clear_has_body() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GuildMember::clear_body() {
  body_ = 0u;
  clear_has_body();
}
inline ::google::protobuf::uint32 GuildMember::body() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.body)
  return body_;
}
inline void GuildMember::set_body(::google::protobuf::uint32 value) {
  set_has_body();
  body_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.body)
}

// optional uint32 weekasset = 22 [default = 0];
inline bool GuildMember::has_weekasset() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GuildMember::set_has_weekasset() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GuildMember::clear_has_weekasset() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GuildMember::clear_weekasset() {
  weekasset_ = 0u;
  clear_has_weekasset();
}
inline ::google::protobuf::uint32 GuildMember::weekasset() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.weekasset)
  return weekasset_;
}
inline void GuildMember::set_weekasset(::google::protobuf::uint32 value) {
  set_has_weekasset();
  weekasset_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.weekasset)
}

// optional uint32 asset = 23 [default = 0];
inline bool GuildMember::has_asset() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GuildMember::set_has_asset() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GuildMember::clear_has_asset() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GuildMember::clear_asset() {
  asset_ = 0u;
  clear_has_asset();
}
inline ::google::protobuf::uint32 GuildMember::asset() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.asset)
  return asset_;
}
inline void GuildMember::set_asset(::google::protobuf::uint32 value) {
  set_has_asset();
  asset_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.asset)
}

// optional uint32 zoneid = 24 [default = 0];
inline bool GuildMember::has_zoneid() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GuildMember::set_has_zoneid() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GuildMember::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GuildMember::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 GuildMember::zoneid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.zoneid)
  return zoneid_;
}
inline void GuildMember::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.zoneid)
}

// optional uint32 head = 25 [default = 0];
inline bool GuildMember::has_head() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void GuildMember::set_has_head() {
  _has_bits_[0] |= 0x00010000u;
}
inline void GuildMember::clear_has_head() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void GuildMember::clear_head() {
  head_ = 0u;
  clear_has_head();
}
inline ::google::protobuf::uint32 GuildMember::head() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.head)
  return head_;
}
inline void GuildMember::set_head(::google::protobuf::uint32 value) {
  set_has_head();
  head_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.head)
}

// optional uint32 face = 28 [default = 0];
inline bool GuildMember::has_face() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void GuildMember::set_has_face() {
  _has_bits_[0] |= 0x00020000u;
}
inline void GuildMember::clear_has_face() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void GuildMember::clear_face() {
  face_ = 0u;
  clear_has_face();
}
inline ::google::protobuf::uint32 GuildMember::face() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.face)
  return face_;
}
inline void GuildMember::set_face(::google::protobuf::uint32 value) {
  set_has_face();
  face_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.face)
}

// optional uint32 mouth = 29 [default = 0];
inline bool GuildMember::has_mouth() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void GuildMember::set_has_mouth() {
  _has_bits_[0] |= 0x00040000u;
}
inline void GuildMember::clear_has_mouth() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void GuildMember::clear_mouth() {
  mouth_ = 0u;
  clear_has_mouth();
}
inline ::google::protobuf::uint32 GuildMember::mouth() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.mouth)
  return mouth_;
}
inline void GuildMember::set_mouth(::google::protobuf::uint32 value) {
  set_has_mouth();
  mouth_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.mouth)
}

// optional uint32 eye = 30 [default = 0];
inline bool GuildMember::has_eye() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void GuildMember::set_has_eye() {
  _has_bits_[0] |= 0x00080000u;
}
inline void GuildMember::clear_has_eye() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void GuildMember::clear_eye() {
  eye_ = 0u;
  clear_has_eye();
}
inline ::google::protobuf::uint32 GuildMember::eye() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.eye)
  return eye_;
}
inline void GuildMember::set_eye(::google::protobuf::uint32 value) {
  set_has_eye();
  eye_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.eye)
}

// optional .Cmd.EGender gender = 10 [default = EGENDER_MIN];
inline bool GuildMember::has_gender() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void GuildMember::set_has_gender() {
  _has_bits_[0] |= 0x00100000u;
}
inline void GuildMember::clear_has_gender() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void GuildMember::clear_gender() {
  gender_ = 0;
  clear_has_gender();
}
inline ::Cmd::EGender GuildMember::gender() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.gender)
  return static_cast< ::Cmd::EGender >(gender_);
}
inline void GuildMember::set_gender(::Cmd::EGender value) {
  assert(::Cmd::EGender_IsValid(value));
  set_has_gender();
  gender_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.gender)
}

// optional .Cmd.EProfession profession = 11 [default = EPROFESSION_MIN];
inline bool GuildMember::has_profession() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void GuildMember::set_has_profession() {
  _has_bits_[0] |= 0x00200000u;
}
inline void GuildMember::clear_has_profession() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void GuildMember::clear_profession() {
  profession_ = 0;
  clear_has_profession();
}
inline ::Cmd::EProfession GuildMember::profession() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.profession)
  return static_cast< ::Cmd::EProfession >(profession_);
}
inline void GuildMember::set_profession(::Cmd::EProfession value) {
  assert(::Cmd::EProfession_IsValid(value));
  set_has_profession();
  profession_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.profession)
}

// optional .Cmd.EGuildJob job = 12 [default = EGUILDJOB_MIN];
inline bool GuildMember::has_job() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void GuildMember::set_has_job() {
  _has_bits_[0] |= 0x00400000u;
}
inline void GuildMember::clear_has_job() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void GuildMember::clear_job() {
  job_ = 0;
  clear_has_job();
}
inline ::Cmd::EGuildJob GuildMember::job() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.job)
  return static_cast< ::Cmd::EGuildJob >(job_);
}
inline void GuildMember::set_job(::Cmd::EGuildJob value) {
  assert(::Cmd::EGuildJob_IsValid(value));
  set_has_job();
  job_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.job)
}

// optional string name = 13;
inline bool GuildMember::has_name() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void GuildMember::set_has_name() {
  _has_bits_[0] |= 0x00800000u;
}
inline void GuildMember::clear_has_name() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void GuildMember::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GuildMember::name() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.name)
  return *name_;
}
inline void GuildMember::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.name)
}
inline void GuildMember::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildMember.name)
}
inline void GuildMember::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildMember.name)
}
inline ::std::string* GuildMember::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildMember.name)
  return name_;
}
inline ::std::string* GuildMember::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildMember::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildMember.name)
}

// optional bytes var = 14;
inline bool GuildMember::has_var() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void GuildMember::set_has_var() {
  _has_bits_[0] |= 0x01000000u;
}
inline void GuildMember::clear_has_var() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void GuildMember::clear_var() {
  if (var_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    var_->clear();
  }
  clear_has_var();
}
inline const ::std::string& GuildMember::var() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.var)
  return *var_;
}
inline void GuildMember::set_var(const ::std::string& value) {
  set_has_var();
  if (var_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    var_ = new ::std::string;
  }
  var_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.var)
}
inline void GuildMember::set_var(const char* value) {
  set_has_var();
  if (var_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    var_ = new ::std::string;
  }
  var_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildMember.var)
}
inline void GuildMember::set_var(const void* value, size_t size) {
  set_has_var();
  if (var_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    var_ = new ::std::string;
  }
  var_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildMember.var)
}
inline ::std::string* GuildMember::mutable_var() {
  set_has_var();
  if (var_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    var_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildMember.var)
  return var_;
}
inline ::std::string* GuildMember::release_var() {
  clear_has_var();
  if (var_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = var_;
    var_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildMember::set_allocated_var(::std::string* var) {
  if (var_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete var_;
  }
  if (var) {
    set_has_var();
    var_ = var;
  } else {
    clear_has_var();
    var_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildMember.var)
}

// optional .Cmd.BlobGuildPray pray = 15;
inline bool GuildMember::has_pray() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void GuildMember::set_has_pray() {
  _has_bits_[0] |= 0x02000000u;
}
inline void GuildMember::clear_has_pray() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void GuildMember::clear_pray() {
  if (pray_ != NULL) pray_->::Cmd::BlobGuildPray::Clear();
  clear_has_pray();
}
inline const ::Cmd::BlobGuildPray& GuildMember::pray() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.pray)
  return pray_ != NULL ? *pray_ : *default_instance_->pray_;
}
inline ::Cmd::BlobGuildPray* GuildMember::mutable_pray() {
  set_has_pray();
  if (pray_ == NULL) pray_ = new ::Cmd::BlobGuildPray;
  // @@protoc_insertion_point(field_mutable:Cmd.GuildMember.pray)
  return pray_;
}
inline ::Cmd::BlobGuildPray* GuildMember::release_pray() {
  clear_has_pray();
  ::Cmd::BlobGuildPray* temp = pray_;
  pray_ = NULL;
  return temp;
}
inline void GuildMember::set_allocated_pray(::Cmd::BlobGuildPray* pray) {
  delete pray_;
  pray_ = pray;
  if (pray) {
    set_has_pray();
  } else {
    clear_has_pray();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildMember.pray)
}

// optional .Cmd.BlobDonate donate = 21;
inline bool GuildMember::has_donate() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void GuildMember::set_has_donate() {
  _has_bits_[0] |= 0x04000000u;
}
inline void GuildMember::clear_has_donate() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void GuildMember::clear_donate() {
  if (donate_ != NULL) donate_->::Cmd::BlobDonate::Clear();
  clear_has_donate();
}
inline const ::Cmd::BlobDonate& GuildMember::donate() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.donate)
  return donate_ != NULL ? *donate_ : *default_instance_->donate_;
}
inline ::Cmd::BlobDonate* GuildMember::mutable_donate() {
  set_has_donate();
  if (donate_ == NULL) donate_ = new ::Cmd::BlobDonate;
  // @@protoc_insertion_point(field_mutable:Cmd.GuildMember.donate)
  return donate_;
}
inline ::Cmd::BlobDonate* GuildMember::release_donate() {
  clear_has_donate();
  ::Cmd::BlobDonate* temp = donate_;
  donate_ = NULL;
  return temp;
}
inline void GuildMember::set_allocated_donate(::Cmd::BlobDonate* donate) {
  delete donate_;
  donate_ = donate;
  if (donate) {
    set_has_donate();
  } else {
    clear_has_donate();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildMember.donate)
}

// optional bool levelupeffect = 20 [default = false];
inline bool GuildMember::has_levelupeffect() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void GuildMember::set_has_levelupeffect() {
  _has_bits_[0] |= 0x08000000u;
}
inline void GuildMember::clear_has_levelupeffect() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void GuildMember::clear_levelupeffect() {
  levelupeffect_ = false;
  clear_has_levelupeffect();
}
inline bool GuildMember::levelupeffect() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.levelupeffect)
  return levelupeffect_;
}
inline void GuildMember::set_levelupeffect(bool value) {
  set_has_levelupeffect();
  levelupeffect_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.levelupeffect)
}

// optional bool exchangezone = 26 [default = false];
inline bool GuildMember::has_exchangezone() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void GuildMember::set_has_exchangezone() {
  _has_bits_[0] |= 0x10000000u;
}
inline void GuildMember::clear_has_exchangezone() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void GuildMember::clear_exchangezone() {
  exchangezone_ = false;
  clear_has_exchangezone();
}
inline bool GuildMember::exchangezone() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.exchangezone)
  return exchangezone_;
}
inline void GuildMember::set_exchangezone(bool value) {
  set_has_exchangezone();
  exchangezone_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.exchangezone)
}

// optional uint32 accid = 27;
inline bool GuildMember::has_accid() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void GuildMember::set_has_accid() {
  _has_bits_[0] |= 0x20000000u;
}
inline void GuildMember::clear_has_accid() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void GuildMember::clear_accid() {
  accid_ = 0u;
  clear_has_accid();
}
inline ::google::protobuf::uint32 GuildMember::accid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.accid)
  return accid_;
}
inline void GuildMember::set_accid(::google::protobuf::uint32 value) {
  set_has_accid();
  accid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.accid)
}

// optional .Cmd.BlobGuildBuilding building = 31;
inline bool GuildMember::has_building() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void GuildMember::set_has_building() {
  _has_bits_[0] |= 0x40000000u;
}
inline void GuildMember::clear_has_building() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void GuildMember::clear_building() {
  if (building_ != NULL) building_->::Cmd::BlobGuildBuilding::Clear();
  clear_has_building();
}
inline const ::Cmd::BlobGuildBuilding& GuildMember::building() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.building)
  return building_ != NULL ? *building_ : *default_instance_->building_;
}
inline ::Cmd::BlobGuildBuilding* GuildMember::mutable_building() {
  set_has_building();
  if (building_ == NULL) building_ = new ::Cmd::BlobGuildBuilding;
  // @@protoc_insertion_point(field_mutable:Cmd.GuildMember.building)
  return building_;
}
inline ::Cmd::BlobGuildBuilding* GuildMember::release_building() {
  clear_has_building();
  ::Cmd::BlobGuildBuilding* temp = building_;
  building_ = NULL;
  return temp;
}
inline void GuildMember::set_allocated_building(::Cmd::BlobGuildBuilding* building) {
  delete building_;
  building_ = building;
  if (building) {
    set_has_building();
  } else {
    clear_has_building();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildMember.building)
}

// optional uint64 challenge = 32 [default = 0];
inline bool GuildMember::has_challenge() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void GuildMember::set_has_challenge() {
  _has_bits_[0] |= 0x80000000u;
}
inline void GuildMember::clear_has_challenge() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void GuildMember::clear_challenge() {
  challenge_ = GOOGLE_ULONGLONG(0);
  clear_has_challenge();
}
inline ::google::protobuf::uint64 GuildMember::challenge() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.challenge)
  return challenge_;
}
inline void GuildMember::set_challenge(::google::protobuf::uint64 value) {
  set_has_challenge();
  challenge_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.challenge)
}

// optional uint32 lastexittime = 33 [default = 0];
inline bool GuildMember::has_lastexittime() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void GuildMember::set_has_lastexittime() {
  _has_bits_[1] |= 0x00000001u;
}
inline void GuildMember::clear_has_lastexittime() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void GuildMember::clear_lastexittime() {
  lastexittime_ = 0u;
  clear_has_lastexittime();
}
inline ::google::protobuf::uint32 GuildMember::lastexittime() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.lastexittime)
  return lastexittime_;
}
inline void GuildMember::set_lastexittime(::google::protobuf::uint32 value) {
  set_has_lastexittime();
  lastexittime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.lastexittime)
}

// optional uint64 redtip = 34 [default = 0];
inline bool GuildMember::has_redtip() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void GuildMember::set_has_redtip() {
  _has_bits_[1] |= 0x00000002u;
}
inline void GuildMember::clear_has_redtip() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void GuildMember::clear_redtip() {
  redtip_ = GOOGLE_ULONGLONG(0);
  clear_has_redtip();
}
inline ::google::protobuf::uint64 GuildMember::redtip() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.redtip)
  return redtip_;
}
inline void GuildMember::set_redtip(::google::protobuf::uint64 value) {
  set_has_redtip();
  redtip_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.redtip)
}

// optional bool buildingeffect = 35 [default = false];
inline bool GuildMember::has_buildingeffect() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void GuildMember::set_has_buildingeffect() {
  _has_bits_[1] |= 0x00000004u;
}
inline void GuildMember::clear_has_buildingeffect() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void GuildMember::clear_buildingeffect() {
  buildingeffect_ = false;
  clear_has_buildingeffect();
}
inline bool GuildMember::buildingeffect() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.buildingeffect)
  return buildingeffect_;
}
inline void GuildMember::set_buildingeffect(bool value) {
  set_has_buildingeffect();
  buildingeffect_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.buildingeffect)
}

// optional bool realtimevoice = 36 [default = false];
inline bool GuildMember::has_realtimevoice() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void GuildMember::set_has_realtimevoice() {
  _has_bits_[1] |= 0x00000008u;
}
inline void GuildMember::clear_has_realtimevoice() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void GuildMember::clear_realtimevoice() {
  realtimevoice_ = false;
  clear_has_realtimevoice();
}
inline bool GuildMember::realtimevoice() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.realtimevoice)
  return realtimevoice_;
}
inline void GuildMember::set_realtimevoice(bool value) {
  set_has_realtimevoice();
  realtimevoice_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.realtimevoice)
}

// optional uint32 weekbcoin = 37 [default = 0];
inline bool GuildMember::has_weekbcoin() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void GuildMember::set_has_weekbcoin() {
  _has_bits_[1] |= 0x00000010u;
}
inline void GuildMember::clear_has_weekbcoin() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void GuildMember::clear_weekbcoin() {
  weekbcoin_ = 0u;
  clear_has_weekbcoin();
}
inline ::google::protobuf::uint32 GuildMember::weekbcoin() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.weekbcoin)
  return weekbcoin_;
}
inline void GuildMember::set_weekbcoin(::google::protobuf::uint32 value) {
  set_has_weekbcoin();
  weekbcoin_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.weekbcoin)
}

// optional uint32 totalcoin = 38 [default = 0];
inline bool GuildMember::has_totalcoin() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void GuildMember::set_has_totalcoin() {
  _has_bits_[1] |= 0x00000020u;
}
inline void GuildMember::clear_has_totalcoin() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void GuildMember::clear_totalcoin() {
  totalcoin_ = 0u;
  clear_has_totalcoin();
}
inline ::google::protobuf::uint32 GuildMember::totalcoin() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMember.totalcoin)
  return totalcoin_;
}
inline void GuildMember::set_totalcoin(::google::protobuf::uint32 value) {
  set_has_totalcoin();
  totalcoin_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMember.totalcoin)
}

// -------------------------------------------------------------------

// BlobGuildMember

// repeated .Cmd.GuildMember members = 1;
inline int BlobGuildMember::members_size() const {
  return members_.size();
}
inline void BlobGuildMember::clear_members() {
  members_.Clear();
}
inline const ::Cmd::GuildMember& BlobGuildMember::members(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildMember.members)
  return members_.Get(index);
}
inline ::Cmd::GuildMember* BlobGuildMember::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BlobGuildMember.members)
  return members_.Mutable(index);
}
inline ::Cmd::GuildMember* BlobGuildMember::add_members() {
  // @@protoc_insertion_point(field_add:Cmd.BlobGuildMember.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMember >&
BlobGuildMember::members() const {
  // @@protoc_insertion_point(field_list:Cmd.BlobGuildMember.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMember >*
BlobGuildMember::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BlobGuildMember.members)
  return &members_;
}

// -------------------------------------------------------------------

// GuildApply

// optional uint64 charid = 1 [default = 0];
inline bool GuildApply::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildApply::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildApply::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildApply::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GuildApply::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildApply.charid)
  return charid_;
}
inline void GuildApply::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildApply.charid)
}

// optional uint32 zoneid = 12 [default = 0];
inline bool GuildApply::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildApply::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildApply::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildApply::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 GuildApply::zoneid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildApply.zoneid)
  return zoneid_;
}
inline void GuildApply::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildApply.zoneid)
}

// optional uint32 baselevel = 2 [default = 0];
inline bool GuildApply::has_baselevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildApply::set_has_baselevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildApply::clear_has_baselevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildApply::clear_baselevel() {
  baselevel_ = 0u;
  clear_has_baselevel();
}
inline ::google::protobuf::uint32 GuildApply::baselevel() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildApply.baselevel)
  return baselevel_;
}
inline void GuildApply::set_baselevel(::google::protobuf::uint32 value) {
  set_has_baselevel();
  baselevel_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildApply.baselevel)
}

// optional uint32 portrait = 3 [default = 0];
inline bool GuildApply::has_portrait() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildApply::set_has_portrait() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildApply::clear_has_portrait() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildApply::clear_portrait() {
  portrait_ = 0u;
  clear_has_portrait();
}
inline ::google::protobuf::uint32 GuildApply::portrait() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildApply.portrait)
  return portrait_;
}
inline void GuildApply::set_portrait(::google::protobuf::uint32 value) {
  set_has_portrait();
  portrait_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildApply.portrait)
}

// optional uint32 frame = 4 [default = 0];
inline bool GuildApply::has_frame() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildApply::set_has_frame() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildApply::clear_has_frame() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildApply::clear_frame() {
  frame_ = 0u;
  clear_has_frame();
}
inline ::google::protobuf::uint32 GuildApply::frame() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildApply.frame)
  return frame_;
}
inline void GuildApply::set_frame(::google::protobuf::uint32 value) {
  set_has_frame();
  frame_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildApply.frame)
}

// optional uint32 entertime = 5 [default = 0];
inline bool GuildApply::has_entertime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildApply::set_has_entertime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildApply::clear_has_entertime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildApply::clear_entertime() {
  entertime_ = 0u;
  clear_has_entertime();
}
inline ::google::protobuf::uint32 GuildApply::entertime() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildApply.entertime)
  return entertime_;
}
inline void GuildApply::set_entertime(::google::protobuf::uint32 value) {
  set_has_entertime();
  entertime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildApply.entertime)
}

// optional uint32 hair = 9 [default = 0];
inline bool GuildApply::has_hair() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildApply::set_has_hair() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildApply::clear_has_hair() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildApply::clear_hair() {
  hair_ = 0u;
  clear_has_hair();
}
inline ::google::protobuf::uint32 GuildApply::hair() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildApply.hair)
  return hair_;
}
inline void GuildApply::set_hair(::google::protobuf::uint32 value) {
  set_has_hair();
  hair_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildApply.hair)
}

// optional uint32 haircolor = 10 [default = 0];
inline bool GuildApply::has_haircolor() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuildApply::set_has_haircolor() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuildApply::clear_has_haircolor() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuildApply::clear_haircolor() {
  haircolor_ = 0u;
  clear_has_haircolor();
}
inline ::google::protobuf::uint32 GuildApply::haircolor() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildApply.haircolor)
  return haircolor_;
}
inline void GuildApply::set_haircolor(::google::protobuf::uint32 value) {
  set_has_haircolor();
  haircolor_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildApply.haircolor)
}

// optional uint32 body = 11 [default = 0];
inline bool GuildApply::has_body() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GuildApply::set_has_body() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GuildApply::clear_has_body() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GuildApply::clear_body() {
  body_ = 0u;
  clear_has_body();
}
inline ::google::protobuf::uint32 GuildApply::body() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildApply.body)
  return body_;
}
inline void GuildApply::set_body(::google::protobuf::uint32 value) {
  set_has_body();
  body_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildApply.body)
}

// optional uint32 head = 14 [default = 0];
inline bool GuildApply::has_head() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GuildApply::set_has_head() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GuildApply::clear_has_head() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GuildApply::clear_head() {
  head_ = 0u;
  clear_has_head();
}
inline ::google::protobuf::uint32 GuildApply::head() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildApply.head)
  return head_;
}
inline void GuildApply::set_head(::google::protobuf::uint32 value) {
  set_has_head();
  head_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildApply.head)
}

// optional uint32 face = 15 [default = 0];
inline bool GuildApply::has_face() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GuildApply::set_has_face() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GuildApply::clear_has_face() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GuildApply::clear_face() {
  face_ = 0u;
  clear_has_face();
}
inline ::google::protobuf::uint32 GuildApply::face() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildApply.face)
  return face_;
}
inline void GuildApply::set_face(::google::protobuf::uint32 value) {
  set_has_face();
  face_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildApply.face)
}

// optional uint32 mouth = 16 [default = 0];
inline bool GuildApply::has_mouth() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GuildApply::set_has_mouth() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GuildApply::clear_has_mouth() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GuildApply::clear_mouth() {
  mouth_ = 0u;
  clear_has_mouth();
}
inline ::google::protobuf::uint32 GuildApply::mouth() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildApply.mouth)
  return mouth_;
}
inline void GuildApply::set_mouth(::google::protobuf::uint32 value) {
  set_has_mouth();
  mouth_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildApply.mouth)
}

// optional uint32 eye = 17 [default = 0];
inline bool GuildApply::has_eye() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GuildApply::set_has_eye() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GuildApply::clear_has_eye() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GuildApply::clear_eye() {
  eye_ = 0u;
  clear_has_eye();
}
inline ::google::protobuf::uint32 GuildApply::eye() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildApply.eye)
  return eye_;
}
inline void GuildApply::set_eye(::google::protobuf::uint32 value) {
  set_has_eye();
  eye_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildApply.eye)
}

// optional .Cmd.EGender gender = 6 [default = EGENDER_MIN];
inline bool GuildApply::has_gender() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GuildApply::set_has_gender() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GuildApply::clear_has_gender() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GuildApply::clear_gender() {
  gender_ = 0;
  clear_has_gender();
}
inline ::Cmd::EGender GuildApply::gender() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildApply.gender)
  return static_cast< ::Cmd::EGender >(gender_);
}
inline void GuildApply::set_gender(::Cmd::EGender value) {
  assert(::Cmd::EGender_IsValid(value));
  set_has_gender();
  gender_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildApply.gender)
}

// optional .Cmd.EProfession profession = 7 [default = EPROFESSION_MIN];
inline bool GuildApply::has_profession() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GuildApply::set_has_profession() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GuildApply::clear_has_profession() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GuildApply::clear_profession() {
  profession_ = 0;
  clear_has_profession();
}
inline ::Cmd::EProfession GuildApply::profession() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildApply.profession)
  return static_cast< ::Cmd::EProfession >(profession_);
}
inline void GuildApply::set_profession(::Cmd::EProfession value) {
  assert(::Cmd::EProfession_IsValid(value));
  set_has_profession();
  profession_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildApply.profession)
}

// optional string name = 8;
inline bool GuildApply::has_name() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GuildApply::set_has_name() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GuildApply::clear_has_name() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GuildApply::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GuildApply::name() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildApply.name)
  return *name_;
}
inline void GuildApply::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildApply.name)
}
inline void GuildApply::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildApply.name)
}
inline void GuildApply::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildApply.name)
}
inline ::std::string* GuildApply::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildApply.name)
  return name_;
}
inline ::std::string* GuildApply::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildApply::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildApply.name)
}

// optional uint64 accid = 13;
inline bool GuildApply::has_accid() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void GuildApply::set_has_accid() {
  _has_bits_[0] |= 0x00010000u;
}
inline void GuildApply::clear_has_accid() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void GuildApply::clear_accid() {
  accid_ = GOOGLE_ULONGLONG(0);
  clear_has_accid();
}
inline ::google::protobuf::uint64 GuildApply::accid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildApply.accid)
  return accid_;
}
inline void GuildApply::set_accid(::google::protobuf::uint64 value) {
  set_has_accid();
  accid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildApply.accid)
}

// -------------------------------------------------------------------

// BlobGuildApply

// repeated .Cmd.GuildApply applys = 1;
inline int BlobGuildApply::applys_size() const {
  return applys_.size();
}
inline void BlobGuildApply::clear_applys() {
  applys_.Clear();
}
inline const ::Cmd::GuildApply& BlobGuildApply::applys(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildApply.applys)
  return applys_.Get(index);
}
inline ::Cmd::GuildApply* BlobGuildApply::mutable_applys(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BlobGuildApply.applys)
  return applys_.Mutable(index);
}
inline ::Cmd::GuildApply* BlobGuildApply::add_applys() {
  // @@protoc_insertion_point(field_add:Cmd.BlobGuildApply.applys)
  return applys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildApply >&
BlobGuildApply::applys() const {
  // @@protoc_insertion_point(field_list:Cmd.BlobGuildApply.applys)
  return applys_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildApply >*
BlobGuildApply::mutable_applys() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BlobGuildApply.applys)
  return &applys_;
}

// -------------------------------------------------------------------

// GuildJob

// optional .Cmd.EGuildJob job = 1 [default = EGUILDJOB_MIN];
inline bool GuildJob::has_job() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildJob::set_has_job() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildJob::clear_has_job() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildJob::clear_job() {
  job_ = 0;
  clear_has_job();
}
inline ::Cmd::EGuildJob GuildJob::job() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildJob.job)
  return static_cast< ::Cmd::EGuildJob >(job_);
}
inline void GuildJob::set_job(::Cmd::EGuildJob value) {
  assert(::Cmd::EGuildJob_IsValid(value));
  set_has_job();
  job_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildJob.job)
}

// optional string name = 2;
inline bool GuildJob::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildJob::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildJob::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildJob::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GuildJob::name() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildJob.name)
  return *name_;
}
inline void GuildJob::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildJob.name)
}
inline void GuildJob::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildJob.name)
}
inline void GuildJob::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildJob.name)
}
inline ::std::string* GuildJob::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildJob.name)
  return name_;
}
inline ::std::string* GuildJob::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildJob::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildJob.name)
}

// optional uint32 auth = 3 [default = 0];
inline bool GuildJob::has_auth() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildJob::set_has_auth() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildJob::clear_has_auth() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildJob::clear_auth() {
  auth_ = 0u;
  clear_has_auth();
}
inline ::google::protobuf::uint32 GuildJob::auth() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildJob.auth)
  return auth_;
}
inline void GuildJob::set_auth(::google::protobuf::uint32 value) {
  set_has_auth();
  auth_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildJob.auth)
}

// optional uint32 editauth = 4 [default = 0];
inline bool GuildJob::has_editauth() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildJob::set_has_editauth() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildJob::clear_has_editauth() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildJob::clear_editauth() {
  editauth_ = 0u;
  clear_has_editauth();
}
inline ::google::protobuf::uint32 GuildJob::editauth() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildJob.editauth)
  return editauth_;
}
inline void GuildJob::set_editauth(::google::protobuf::uint32 value) {
  set_has_editauth();
  editauth_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildJob.editauth)
}

// -------------------------------------------------------------------

// GuildQuest

// optional uint32 questid = 1 [default = 0];
inline bool GuildQuest::has_questid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildQuest::set_has_questid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildQuest::clear_has_questid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildQuest::clear_questid() {
  questid_ = 0u;
  clear_has_questid();
}
inline ::google::protobuf::uint32 GuildQuest::questid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildQuest.questid)
  return questid_;
}
inline void GuildQuest::set_questid(::google::protobuf::uint32 value) {
  set_has_questid();
  questid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildQuest.questid)
}

// optional uint32 time = 2 [default = 0];
inline bool GuildQuest::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildQuest::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildQuest::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildQuest::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 GuildQuest::time() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildQuest.time)
  return time_;
}
inline void GuildQuest::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildQuest.time)
}

// -------------------------------------------------------------------

// GuildBuildMaterial

// optional uint32 id = 1 [default = 0];
inline bool GuildBuildMaterial::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildBuildMaterial::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildBuildMaterial::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildBuildMaterial::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GuildBuildMaterial::id() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildBuildMaterial.id)
  return id_;
}
inline void GuildBuildMaterial::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildBuildMaterial.id)
}

// optional uint32 count = 2 [default = 0];
inline bool GuildBuildMaterial::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildBuildMaterial::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildBuildMaterial::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildBuildMaterial::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 GuildBuildMaterial::count() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildBuildMaterial.count)
  return count_;
}
inline void GuildBuildMaterial::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildBuildMaterial.count)
}

// optional uint32 itemid = 3 [default = 0];
inline bool GuildBuildMaterial::has_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildBuildMaterial::set_has_itemid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildBuildMaterial::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildBuildMaterial::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 GuildBuildMaterial::itemid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildBuildMaterial.itemid)
  return itemid_;
}
inline void GuildBuildMaterial::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildBuildMaterial.itemid)
}

// optional uint32 itemcount = 4 [default = 0];
inline bool GuildBuildMaterial::has_itemcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildBuildMaterial::set_has_itemcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildBuildMaterial::clear_has_itemcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildBuildMaterial::clear_itemcount() {
  itemcount_ = 0u;
  clear_has_itemcount();
}
inline ::google::protobuf::uint32 GuildBuildMaterial::itemcount() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildBuildMaterial.itemcount)
  return itemcount_;
}
inline void GuildBuildMaterial::set_itemcount(::google::protobuf::uint32 value) {
  set_has_itemcount();
  itemcount_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildBuildMaterial.itemcount)
}

// optional uint32 rewardid = 5 [default = 0];
inline bool GuildBuildMaterial::has_rewardid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildBuildMaterial::set_has_rewardid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildBuildMaterial::clear_has_rewardid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildBuildMaterial::clear_rewardid() {
  rewardid_ = 0u;
  clear_has_rewardid();
}
inline ::google::protobuf::uint32 GuildBuildMaterial::rewardid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildBuildMaterial.rewardid)
  return rewardid_;
}
inline void GuildBuildMaterial::set_rewardid(::google::protobuf::uint32 value) {
  set_has_rewardid();
  rewardid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildBuildMaterial.rewardid)
}

// -------------------------------------------------------------------

// GuildBuilding

// optional .Cmd.EGuildBuilding type = 1 [default = EGUILDBUILDING_MIN];
inline bool GuildBuilding::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildBuilding::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildBuilding::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildBuilding::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::EGuildBuilding GuildBuilding::type() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildBuilding.type)
  return static_cast< ::Cmd::EGuildBuilding >(type_);
}
inline void GuildBuilding::set_type(::Cmd::EGuildBuilding value) {
  assert(::Cmd::EGuildBuilding_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildBuilding.type)
}

// optional uint32 level = 2 [default = 0];
inline bool GuildBuilding::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildBuilding::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildBuilding::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildBuilding::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 GuildBuilding::level() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildBuilding.level)
  return level_;
}
inline void GuildBuilding::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildBuilding.level)
}

// repeated .Cmd.GuildBuildMaterial materials = 3;
inline int GuildBuilding::materials_size() const {
  return materials_.size();
}
inline void GuildBuilding::clear_materials() {
  materials_.Clear();
}
inline const ::Cmd::GuildBuildMaterial& GuildBuilding::materials(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildBuilding.materials)
  return materials_.Get(index);
}
inline ::Cmd::GuildBuildMaterial* GuildBuilding::mutable_materials(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildBuilding.materials)
  return materials_.Mutable(index);
}
inline ::Cmd::GuildBuildMaterial* GuildBuilding::add_materials() {
  // @@protoc_insertion_point(field_add:Cmd.GuildBuilding.materials)
  return materials_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildBuildMaterial >&
GuildBuilding::materials() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildBuilding.materials)
  return materials_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildBuildMaterial >*
GuildBuilding::mutable_materials() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildBuilding.materials)
  return &materials_;
}

// optional bool isbuilding = 4 [default = false];
inline bool GuildBuilding::has_isbuilding() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildBuilding::set_has_isbuilding() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildBuilding::clear_has_isbuilding() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildBuilding::clear_isbuilding() {
  isbuilding_ = false;
  clear_has_isbuilding();
}
inline bool GuildBuilding::isbuilding() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildBuilding.isbuilding)
  return isbuilding_;
}
inline void GuildBuilding::set_isbuilding(bool value) {
  set_has_isbuilding();
  isbuilding_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildBuilding.isbuilding)
}

// optional uint32 nextwelfaretime = 5 [default = 0];
inline bool GuildBuilding::has_nextwelfaretime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildBuilding::set_has_nextwelfaretime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildBuilding::clear_has_nextwelfaretime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildBuilding::clear_nextwelfaretime() {
  nextwelfaretime_ = 0u;
  clear_has_nextwelfaretime();
}
inline ::google::protobuf::uint32 GuildBuilding::nextwelfaretime() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildBuilding.nextwelfaretime)
  return nextwelfaretime_;
}
inline void GuildBuilding::set_nextwelfaretime(::google::protobuf::uint32 value) {
  set_has_nextwelfaretime();
  nextwelfaretime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildBuilding.nextwelfaretime)
}

// optional uint32 nextbuildtime = 8 [default = 0];
inline bool GuildBuilding::has_nextbuildtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildBuilding::set_has_nextbuildtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildBuilding::clear_has_nextbuildtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildBuilding::clear_nextbuildtime() {
  nextbuildtime_ = 0u;
  clear_has_nextbuildtime();
}
inline ::google::protobuf::uint32 GuildBuilding::nextbuildtime() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildBuilding.nextbuildtime)
  return nextbuildtime_;
}
inline void GuildBuilding::set_nextbuildtime(::google::protobuf::uint32 value) {
  set_has_nextbuildtime();
  nextbuildtime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildBuilding.nextbuildtime)
}

// optional uint32 progress = 6 [default = 0];
inline bool GuildBuilding::has_progress() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildBuilding::set_has_progress() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildBuilding::clear_has_progress() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildBuilding::clear_progress() {
  progress_ = 0u;
  clear_has_progress();
}
inline ::google::protobuf::uint32 GuildBuilding::progress() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildBuilding.progress)
  return progress_;
}
inline void GuildBuilding::set_progress(::google::protobuf::uint32 value) {
  set_has_progress();
  progress_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildBuilding.progress)
}

// repeated .Cmd.GuildBuildMaterial restmaterials = 7;
inline int GuildBuilding::restmaterials_size() const {
  return restmaterials_.size();
}
inline void GuildBuilding::clear_restmaterials() {
  restmaterials_.Clear();
}
inline const ::Cmd::GuildBuildMaterial& GuildBuilding::restmaterials(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildBuilding.restmaterials)
  return restmaterials_.Get(index);
}
inline ::Cmd::GuildBuildMaterial* GuildBuilding::mutable_restmaterials(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildBuilding.restmaterials)
  return restmaterials_.Mutable(index);
}
inline ::Cmd::GuildBuildMaterial* GuildBuilding::add_restmaterials() {
  // @@protoc_insertion_point(field_add:Cmd.GuildBuilding.restmaterials)
  return restmaterials_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildBuildMaterial >&
GuildBuilding::restmaterials() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildBuilding.restmaterials)
  return restmaterials_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildBuildMaterial >*
GuildBuilding::mutable_restmaterials() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildBuilding.restmaterials)
  return &restmaterials_;
}

// -------------------------------------------------------------------

// GuildBuildingData

// repeated .Cmd.GuildBuilding buildings = 1;
inline int GuildBuildingData::buildings_size() const {
  return buildings_.size();
}
inline void GuildBuildingData::clear_buildings() {
  buildings_.Clear();
}
inline const ::Cmd::GuildBuilding& GuildBuildingData::buildings(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildBuildingData.buildings)
  return buildings_.Get(index);
}
inline ::Cmd::GuildBuilding* GuildBuildingData::mutable_buildings(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildBuildingData.buildings)
  return buildings_.Mutable(index);
}
inline ::Cmd::GuildBuilding* GuildBuildingData::add_buildings() {
  // @@protoc_insertion_point(field_add:Cmd.GuildBuildingData.buildings)
  return buildings_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildBuilding >&
GuildBuildingData::buildings() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildBuildingData.buildings)
  return buildings_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildBuilding >*
GuildBuildingData::mutable_buildings() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildBuildingData.buildings)
  return &buildings_;
}

// optional uint32 version = 2 [default = 0];
inline bool GuildBuildingData::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildBuildingData::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildBuildingData::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildBuildingData::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 GuildBuildingData::version() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildBuildingData.version)
  return version_;
}
inline void GuildBuildingData::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildBuildingData.version)
}

// -------------------------------------------------------------------

// GuildChallenge

// optional uint32 id = 1 [default = 0];
inline bool GuildChallenge::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildChallenge::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildChallenge::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildChallenge::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GuildChallenge::id() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildChallenge.id)
  return id_;
}
inline void GuildChallenge::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildChallenge.id)
}

// optional uint32 progress = 2 [default = 0];
inline bool GuildChallenge::has_progress() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildChallenge::set_has_progress() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildChallenge::clear_has_progress() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildChallenge::clear_progress() {
  progress_ = 0u;
  clear_has_progress();
}
inline ::google::protobuf::uint32 GuildChallenge::progress() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildChallenge.progress)
  return progress_;
}
inline void GuildChallenge::set_progress(::google::protobuf::uint32 value) {
  set_has_progress();
  progress_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildChallenge.progress)
}

// optional bool reward = 3 [default = false];
inline bool GuildChallenge::has_reward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildChallenge::set_has_reward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildChallenge::clear_has_reward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildChallenge::clear_reward() {
  reward_ = false;
  clear_has_reward();
}
inline bool GuildChallenge::reward() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildChallenge.reward)
  return reward_;
}
inline void GuildChallenge::set_reward(bool value) {
  set_has_reward();
  reward_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildChallenge.reward)
}

// optional bool extrareward = 4 [default = false];
inline bool GuildChallenge::has_extrareward() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildChallenge::set_has_extrareward() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildChallenge::clear_has_extrareward() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildChallenge::clear_extrareward() {
  extrareward_ = false;
  clear_has_extrareward();
}
inline bool GuildChallenge::extrareward() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildChallenge.extrareward)
  return extrareward_;
}
inline void GuildChallenge::set_extrareward(bool value) {
  set_has_extrareward();
  extrareward_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildChallenge.extrareward)
}

// -------------------------------------------------------------------

// GuildChallengeData

// repeated .Cmd.GuildChallenge challenges = 1;
inline int GuildChallengeData::challenges_size() const {
  return challenges_.size();
}
inline void GuildChallengeData::clear_challenges() {
  challenges_.Clear();
}
inline const ::Cmd::GuildChallenge& GuildChallengeData::challenges(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildChallengeData.challenges)
  return challenges_.Get(index);
}
inline ::Cmd::GuildChallenge* GuildChallengeData::mutable_challenges(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildChallengeData.challenges)
  return challenges_.Mutable(index);
}
inline ::Cmd::GuildChallenge* GuildChallengeData::add_challenges() {
  // @@protoc_insertion_point(field_add:Cmd.GuildChallengeData.challenges)
  return challenges_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallenge >&
GuildChallengeData::challenges() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildChallengeData.challenges)
  return challenges_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallenge >*
GuildChallengeData::mutable_challenges() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildChallengeData.challenges)
  return &challenges_;
}

// -------------------------------------------------------------------

// GuildWelfareItem

// optional .Cmd.EGuildWelfare type = 1 [default = EGUILDWELFARE_MIN];
inline bool GuildWelfareItem::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildWelfareItem::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildWelfareItem::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildWelfareItem::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::EGuildWelfare GuildWelfareItem::type() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildWelfareItem.type)
  return static_cast< ::Cmd::EGuildWelfare >(type_);
}
inline void GuildWelfareItem::set_type(::Cmd::EGuildWelfare value) {
  assert(::Cmd::EGuildWelfare_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildWelfareItem.type)
}

// optional uint64 id = 2 [default = 0];
inline bool GuildWelfareItem::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildWelfareItem::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildWelfareItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildWelfareItem::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 GuildWelfareItem::id() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildWelfareItem.id)
  return id_;
}
inline void GuildWelfareItem::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildWelfareItem.id)
}

// optional .Cmd.ESource source = 3 [default = ESOURCE_MIN];
inline bool GuildWelfareItem::has_source() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildWelfareItem::set_has_source() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildWelfareItem::clear_has_source() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildWelfareItem::clear_source() {
  source_ = 0;
  clear_has_source();
}
inline ::Cmd::ESource GuildWelfareItem::source() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildWelfareItem.source)
  return static_cast< ::Cmd::ESource >(source_);
}
inline void GuildWelfareItem::set_source(::Cmd::ESource value) {
  assert(::Cmd::ESource_IsValid(value));
  set_has_source();
  source_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildWelfareItem.source)
}

// optional uint32 rewardid = 4 [default = 0];
inline bool GuildWelfareItem::has_rewardid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildWelfareItem::set_has_rewardid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildWelfareItem::clear_has_rewardid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildWelfareItem::clear_rewardid() {
  rewardid_ = 0u;
  clear_has_rewardid();
}
inline ::google::protobuf::uint32 GuildWelfareItem::rewardid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildWelfareItem.rewardid)
  return rewardid_;
}
inline void GuildWelfareItem::set_rewardid(::google::protobuf::uint32 value) {
  set_has_rewardid();
  rewardid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildWelfareItem.rewardid)
}

// optional uint32 createtime = 5 [default = 0];
inline bool GuildWelfareItem::has_createtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildWelfareItem::set_has_createtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildWelfareItem::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildWelfareItem::clear_createtime() {
  createtime_ = 0u;
  clear_has_createtime();
}
inline ::google::protobuf::uint32 GuildWelfareItem::createtime() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildWelfareItem.createtime)
  return createtime_;
}
inline void GuildWelfareItem::set_createtime(::google::protobuf::uint32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildWelfareItem.createtime)
}

// optional uint32 overduetime = 6 [default = 0];
inline bool GuildWelfareItem::has_overduetime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildWelfareItem::set_has_overduetime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildWelfareItem::clear_has_overduetime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildWelfareItem::clear_overduetime() {
  overduetime_ = 0u;
  clear_has_overduetime();
}
inline ::google::protobuf::uint32 GuildWelfareItem::overduetime() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildWelfareItem.overduetime)
  return overduetime_;
}
inline void GuildWelfareItem::set_overduetime(::google::protobuf::uint32 value) {
  set_has_overduetime();
  overduetime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildWelfareItem.overduetime)
}

// repeated uint64 charids = 7;
inline int GuildWelfareItem::charids_size() const {
  return charids_.size();
}
inline void GuildWelfareItem::clear_charids() {
  charids_.Clear();
}
inline ::google::protobuf::uint64 GuildWelfareItem::charids(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildWelfareItem.charids)
  return charids_.Get(index);
}
inline void GuildWelfareItem::set_charids(int index, ::google::protobuf::uint64 value) {
  charids_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.GuildWelfareItem.charids)
}
inline void GuildWelfareItem::add_charids(::google::protobuf::uint64 value) {
  charids_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.GuildWelfareItem.charids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GuildWelfareItem::charids() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildWelfareItem.charids)
  return charids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GuildWelfareItem::mutable_charids() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildWelfareItem.charids)
  return &charids_;
}

// optional string ownername = 8;
inline bool GuildWelfareItem::has_ownername() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuildWelfareItem::set_has_ownername() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuildWelfareItem::clear_has_ownername() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuildWelfareItem::clear_ownername() {
  if (ownername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ownername_->clear();
  }
  clear_has_ownername();
}
inline const ::std::string& GuildWelfareItem::ownername() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildWelfareItem.ownername)
  return *ownername_;
}
inline void GuildWelfareItem::set_ownername(const ::std::string& value) {
  set_has_ownername();
  if (ownername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ownername_ = new ::std::string;
  }
  ownername_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildWelfareItem.ownername)
}
inline void GuildWelfareItem::set_ownername(const char* value) {
  set_has_ownername();
  if (ownername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ownername_ = new ::std::string;
  }
  ownername_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildWelfareItem.ownername)
}
inline void GuildWelfareItem::set_ownername(const char* value, size_t size) {
  set_has_ownername();
  if (ownername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ownername_ = new ::std::string;
  }
  ownername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildWelfareItem.ownername)
}
inline ::std::string* GuildWelfareItem::mutable_ownername() {
  set_has_ownername();
  if (ownername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ownername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildWelfareItem.ownername)
  return ownername_;
}
inline ::std::string* GuildWelfareItem::release_ownername() {
  clear_has_ownername();
  if (ownername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ownername_;
    ownername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildWelfareItem::set_allocated_ownername(::std::string* ownername) {
  if (ownername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ownername_;
  }
  if (ownername) {
    set_has_ownername();
    ownername_ = ownername;
  } else {
    clear_has_ownername();
    ownername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildWelfareItem.ownername)
}

// optional uint32 sourceid = 9 [default = 0];
inline bool GuildWelfareItem::has_sourceid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GuildWelfareItem::set_has_sourceid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GuildWelfareItem::clear_has_sourceid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GuildWelfareItem::clear_sourceid() {
  sourceid_ = 0u;
  clear_has_sourceid();
}
inline ::google::protobuf::uint32 GuildWelfareItem::sourceid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildWelfareItem.sourceid)
  return sourceid_;
}
inline void GuildWelfareItem::set_sourceid(::google::protobuf::uint32 value) {
  set_has_sourceid();
  sourceid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildWelfareItem.sourceid)
}

// optional uint32 eventguid = 10 [default = 0];
inline bool GuildWelfareItem::has_eventguid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GuildWelfareItem::set_has_eventguid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GuildWelfareItem::clear_has_eventguid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GuildWelfareItem::clear_eventguid() {
  eventguid_ = 0u;
  clear_has_eventguid();
}
inline ::google::protobuf::uint32 GuildWelfareItem::eventguid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildWelfareItem.eventguid)
  return eventguid_;
}
inline void GuildWelfareItem::set_eventguid(::google::protobuf::uint32 value) {
  set_has_eventguid();
  eventguid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildWelfareItem.eventguid)
}

// optional uint32 index = 11 [default = 0];
inline bool GuildWelfareItem::has_index() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GuildWelfareItem::set_has_index() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GuildWelfareItem::clear_has_index() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GuildWelfareItem::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 GuildWelfareItem::index() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildWelfareItem.index)
  return index_;
}
inline void GuildWelfareItem::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildWelfareItem.index)
}

// -------------------------------------------------------------------

// GuildWelfare

// repeated .Cmd.GuildWelfareItem items = 1;
inline int GuildWelfare::items_size() const {
  return items_.size();
}
inline void GuildWelfare::clear_items() {
  items_.Clear();
}
inline const ::Cmd::GuildWelfareItem& GuildWelfare::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildWelfare.items)
  return items_.Get(index);
}
inline ::Cmd::GuildWelfareItem* GuildWelfare::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildWelfare.items)
  return items_.Mutable(index);
}
inline ::Cmd::GuildWelfareItem* GuildWelfare::add_items() {
  // @@protoc_insertion_point(field_add:Cmd.GuildWelfare.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildWelfareItem >&
GuildWelfare::items() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildWelfare.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildWelfareItem >*
GuildWelfare::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildWelfare.items)
  return &items_;
}

// -------------------------------------------------------------------

// GuildArtifactItem

// optional string guid = 1;
inline bool GuildArtifactItem::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildArtifactItem::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildArtifactItem::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildArtifactItem::clear_guid() {
  if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_->clear();
  }
  clear_has_guid();
}
inline const ::std::string& GuildArtifactItem::guid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildArtifactItem.guid)
  return *guid_;
}
inline void GuildArtifactItem::set_guid(const ::std::string& value) {
  set_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_ = new ::std::string;
  }
  guid_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildArtifactItem.guid)
}
inline void GuildArtifactItem::set_guid(const char* value) {
  set_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_ = new ::std::string;
  }
  guid_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildArtifactItem.guid)
}
inline void GuildArtifactItem::set_guid(const char* value, size_t size) {
  set_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_ = new ::std::string;
  }
  guid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildArtifactItem.guid)
}
inline ::std::string* GuildArtifactItem::mutable_guid() {
  set_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildArtifactItem.guid)
  return guid_;
}
inline ::std::string* GuildArtifactItem::release_guid() {
  clear_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guid_;
    guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildArtifactItem::set_allocated_guid(::std::string* guid) {
  if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guid_;
  }
  if (guid) {
    set_has_guid();
    guid_ = guid;
  } else {
    clear_has_guid();
    guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildArtifactItem.guid)
}

// optional uint32 itemid = 2 [default = 0];
inline bool GuildArtifactItem::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildArtifactItem::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildArtifactItem::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildArtifactItem::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 GuildArtifactItem::itemid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildArtifactItem.itemid)
  return itemid_;
}
inline void GuildArtifactItem::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildArtifactItem.itemid)
}

// optional uint32 distributecount = 3 [default = 0];
inline bool GuildArtifactItem::has_distributecount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildArtifactItem::set_has_distributecount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildArtifactItem::clear_has_distributecount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildArtifactItem::clear_distributecount() {
  distributecount_ = 0u;
  clear_has_distributecount();
}
inline ::google::protobuf::uint32 GuildArtifactItem::distributecount() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildArtifactItem.distributecount)
  return distributecount_;
}
inline void GuildArtifactItem::set_distributecount(::google::protobuf::uint32 value) {
  set_has_distributecount();
  distributecount_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildArtifactItem.distributecount)
}

// optional uint32 retrievetime = 4 [default = 0];
inline bool GuildArtifactItem::has_retrievetime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildArtifactItem::set_has_retrievetime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildArtifactItem::clear_has_retrievetime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildArtifactItem::clear_retrievetime() {
  retrievetime_ = 0u;
  clear_has_retrievetime();
}
inline ::google::protobuf::uint32 GuildArtifactItem::retrievetime() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildArtifactItem.retrievetime)
  return retrievetime_;
}
inline void GuildArtifactItem::set_retrievetime(::google::protobuf::uint32 value) {
  set_has_retrievetime();
  retrievetime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildArtifactItem.retrievetime)
}

// optional uint64 ownerid = 5 [default = 0];
inline bool GuildArtifactItem::has_ownerid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildArtifactItem::set_has_ownerid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildArtifactItem::clear_has_ownerid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildArtifactItem::clear_ownerid() {
  ownerid_ = GOOGLE_ULONGLONG(0);
  clear_has_ownerid();
}
inline ::google::protobuf::uint64 GuildArtifactItem::ownerid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildArtifactItem.ownerid)
  return ownerid_;
}
inline void GuildArtifactItem::set_ownerid(::google::protobuf::uint64 value) {
  set_has_ownerid();
  ownerid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildArtifactItem.ownerid)
}

// -------------------------------------------------------------------

// GuildArtifactData

// optional uint32 type = 1 [default = 0];
inline bool GuildArtifactData::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildArtifactData::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildArtifactData::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildArtifactData::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 GuildArtifactData::type() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildArtifactData.type)
  return type_;
}
inline void GuildArtifactData::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildArtifactData.type)
}

// optional uint32 producecount = 2 [default = 0];
inline bool GuildArtifactData::has_producecount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildArtifactData::set_has_producecount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildArtifactData::clear_has_producecount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildArtifactData::clear_producecount() {
  producecount_ = 0u;
  clear_has_producecount();
}
inline ::google::protobuf::uint32 GuildArtifactData::producecount() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildArtifactData.producecount)
  return producecount_;
}
inline void GuildArtifactData::set_producecount(::google::protobuf::uint32 value) {
  set_has_producecount();
  producecount_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildArtifactData.producecount)
}

// optional uint32 maxlevel = 3 [default = 0];
inline bool GuildArtifactData::has_maxlevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildArtifactData::set_has_maxlevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildArtifactData::clear_has_maxlevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildArtifactData::clear_maxlevel() {
  maxlevel_ = 0u;
  clear_has_maxlevel();
}
inline ::google::protobuf::uint32 GuildArtifactData::maxlevel() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildArtifactData.maxlevel)
  return maxlevel_;
}
inline void GuildArtifactData::set_maxlevel(::google::protobuf::uint32 value) {
  set_has_maxlevel();
  maxlevel_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildArtifactData.maxlevel)
}

// -------------------------------------------------------------------

// GuildArtifact

// repeated .Cmd.GuildArtifactItem items = 1;
inline int GuildArtifact::items_size() const {
  return items_.size();
}
inline void GuildArtifact::clear_items() {
  items_.Clear();
}
inline const ::Cmd::GuildArtifactItem& GuildArtifact::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildArtifact.items)
  return items_.Get(index);
}
inline ::Cmd::GuildArtifactItem* GuildArtifact::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildArtifact.items)
  return items_.Mutable(index);
}
inline ::Cmd::GuildArtifactItem* GuildArtifact::add_items() {
  // @@protoc_insertion_point(field_add:Cmd.GuildArtifact.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactItem >&
GuildArtifact::items() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildArtifact.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactItem >*
GuildArtifact::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildArtifact.items)
  return &items_;
}

// repeated .Cmd.GuildArtifactData datas = 2;
inline int GuildArtifact::datas_size() const {
  return datas_.size();
}
inline void GuildArtifact::clear_datas() {
  datas_.Clear();
}
inline const ::Cmd::GuildArtifactData& GuildArtifact::datas(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildArtifact.datas)
  return datas_.Get(index);
}
inline ::Cmd::GuildArtifactData* GuildArtifact::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildArtifact.datas)
  return datas_.Mutable(index);
}
inline ::Cmd::GuildArtifactData* GuildArtifact::add_datas() {
  // @@protoc_insertion_point(field_add:Cmd.GuildArtifact.datas)
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactData >&
GuildArtifact::datas() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildArtifact.datas)
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactData >*
GuildArtifact::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildArtifact.datas)
  return &datas_;
}

// -------------------------------------------------------------------

// GQuest

// optional uint64 charid = 1 [default = 0];
inline bool GQuest::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GQuest::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GQuest::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GQuest::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GQuest::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.GQuest.charid)
  return charid_;
}
inline void GQuest::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GQuest.charid)
}

// repeated .Cmd.QuestData datas = 2;
inline int GQuest::datas_size() const {
  return datas_.size();
}
inline void GQuest::clear_datas() {
  datas_.Clear();
}
inline const ::Cmd::QuestData& GQuest::datas(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GQuest.datas)
  return datas_.Get(index);
}
inline ::Cmd::QuestData* GQuest::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GQuest.datas)
  return datas_.Mutable(index);
}
inline ::Cmd::QuestData* GQuest::add_datas() {
  // @@protoc_insertion_point(field_add:Cmd.GQuest.datas)
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::QuestData >&
GQuest::datas() const {
  // @@protoc_insertion_point(field_list:Cmd.GQuest.datas)
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::QuestData >*
GQuest::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GQuest.datas)
  return &datas_;
}

// -------------------------------------------------------------------

// BlobGQuest

// repeated .Cmd.GQuest quests = 1;
inline int BlobGQuest::quests_size() const {
  return quests_.size();
}
inline void BlobGQuest::clear_quests() {
  quests_.Clear();
}
inline const ::Cmd::GQuest& BlobGQuest::quests(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGQuest.quests)
  return quests_.Get(index);
}
inline ::Cmd::GQuest* BlobGQuest::mutable_quests(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BlobGQuest.quests)
  return quests_.Mutable(index);
}
inline ::Cmd::GQuest* BlobGQuest::add_quests() {
  // @@protoc_insertion_point(field_add:Cmd.BlobGQuest.quests)
  return quests_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GQuest >&
BlobGQuest::quests() const {
  // @@protoc_insertion_point(field_list:Cmd.BlobGQuest.quests)
  return quests_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GQuest >*
BlobGQuest::mutable_quests() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BlobGQuest.quests)
  return &quests_;
}

// repeated uint32 accepts = 2;
inline int BlobGQuest::accepts_size() const {
  return accepts_.size();
}
inline void BlobGQuest::clear_accepts() {
  accepts_.Clear();
}
inline ::google::protobuf::uint32 BlobGQuest::accepts(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGQuest.accepts)
  return accepts_.Get(index);
}
inline void BlobGQuest::set_accepts(int index, ::google::protobuf::uint32 value) {
  accepts_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.BlobGQuest.accepts)
}
inline void BlobGQuest::add_accepts(::google::protobuf::uint32 value) {
  accepts_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.BlobGQuest.accepts)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BlobGQuest::accepts() const {
  // @@protoc_insertion_point(field_list:Cmd.BlobGQuest.accepts)
  return accepts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BlobGQuest::mutable_accepts() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BlobGQuest.accepts)
  return &accepts_;
}

// repeated uint32 submit = 3;
inline int BlobGQuest::submit_size() const {
  return submit_.size();
}
inline void BlobGQuest::clear_submit() {
  submit_.Clear();
}
inline ::google::protobuf::uint32 BlobGQuest::submit(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGQuest.submit)
  return submit_.Get(index);
}
inline void BlobGQuest::set_submit(int index, ::google::protobuf::uint32 value) {
  submit_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.BlobGQuest.submit)
}
inline void BlobGQuest::add_submit(::google::protobuf::uint32 value) {
  submit_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.BlobGQuest.submit)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BlobGQuest::submit() const {
  // @@protoc_insertion_point(field_list:Cmd.BlobGQuest.submit)
  return submit_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BlobGQuest::mutable_submit() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BlobGQuest.submit)
  return &submit_;
}

// -------------------------------------------------------------------

// BlobGGvg

// optional uint32 partin_time = 1 [default = 0];
inline bool BlobGGvg::has_partin_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BlobGGvg::set_has_partin_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BlobGGvg::clear_has_partin_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BlobGGvg::clear_partin_time() {
  partin_time_ = 0u;
  clear_has_partin_time();
}
inline ::google::protobuf::uint32 BlobGGvg::partin_time() const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGGvg.partin_time)
  return partin_time_;
}
inline void BlobGGvg::set_partin_time(::google::protobuf::uint32 value) {
  set_has_partin_time();
  partin_time_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BlobGGvg.partin_time)
}

// repeated uint64 partin_users = 2;
inline int BlobGGvg::partin_users_size() const {
  return partin_users_.size();
}
inline void BlobGGvg::clear_partin_users() {
  partin_users_.Clear();
}
inline ::google::protobuf::uint64 BlobGGvg::partin_users(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGGvg.partin_users)
  return partin_users_.Get(index);
}
inline void BlobGGvg::set_partin_users(int index, ::google::protobuf::uint64 value) {
  partin_users_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.BlobGGvg.partin_users)
}
inline void BlobGGvg::add_partin_users(::google::protobuf::uint64 value) {
  partin_users_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.BlobGGvg.partin_users)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
BlobGGvg::partin_users() const {
  // @@protoc_insertion_point(field_list:Cmd.BlobGGvg.partin_users)
  return partin_users_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
BlobGGvg::mutable_partin_users() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BlobGGvg.partin_users)
  return &partin_users_;
}

// optional uint32 sugvgtime = 3 [default = 0];
inline bool BlobGGvg::has_sugvgtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BlobGGvg::set_has_sugvgtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BlobGGvg::clear_has_sugvgtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BlobGGvg::clear_sugvgtime() {
  sugvgtime_ = 0u;
  clear_has_sugvgtime();
}
inline ::google::protobuf::uint32 BlobGGvg::sugvgtime() const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGGvg.sugvgtime)
  return sugvgtime_;
}
inline void BlobGGvg::set_sugvgtime(::google::protobuf::uint32 value) {
  set_has_sugvgtime();
  sugvgtime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BlobGGvg.sugvgtime)
}

// optional uint32 sugvgcnt = 4 [default = 0];
inline bool BlobGGvg::has_sugvgcnt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BlobGGvg::set_has_sugvgcnt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BlobGGvg::clear_has_sugvgcnt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BlobGGvg::clear_sugvgcnt() {
  sugvgcnt_ = 0u;
  clear_has_sugvgcnt();
}
inline ::google::protobuf::uint32 BlobGGvg::sugvgcnt() const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGGvg.sugvgcnt)
  return sugvgcnt_;
}
inline void BlobGGvg::set_sugvgcnt(::google::protobuf::uint32 value) {
  set_has_sugvgcnt();
  sugvgcnt_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BlobGGvg.sugvgcnt)
}

// optional uint32 sugvgscore = 5 [default = 0];
inline bool BlobGGvg::has_sugvgscore() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BlobGGvg::set_has_sugvgscore() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BlobGGvg::clear_has_sugvgscore() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BlobGGvg::clear_sugvgscore() {
  sugvgscore_ = 0u;
  clear_has_sugvgscore();
}
inline ::google::protobuf::uint32 BlobGGvg::sugvgscore() const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGGvg.sugvgscore)
  return sugvgscore_;
}
inline void BlobGGvg::set_sugvgscore(::google::protobuf::uint32 value) {
  set_has_sugvgscore();
  sugvgscore_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BlobGGvg.sugvgscore)
}

// optional uint32 version = 6 [default = 0];
inline bool BlobGGvg::has_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BlobGGvg::set_has_version() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BlobGGvg::clear_has_version() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BlobGGvg::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 BlobGGvg::version() const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGGvg.version)
  return version_;
}
inline void BlobGGvg::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BlobGGvg.version)
}

// -------------------------------------------------------------------

// GuildTreasure

// optional uint32 id = 1 [default = 0];
inline bool GuildTreasure::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildTreasure::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildTreasure::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildTreasure::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GuildTreasure::id() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildTreasure.id)
  return id_;
}
inline void GuildTreasure::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildTreasure.id)
}

// optional uint32 count = 2 [default = 0];
inline bool GuildTreasure::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildTreasure::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildTreasure::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildTreasure::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 GuildTreasure::count() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildTreasure.count)
  return count_;
}
inline void GuildTreasure::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildTreasure.count)
}

// -------------------------------------------------------------------

// TreasureItem

// optional uint64 charid = 1 [default = 0];
inline bool TreasureItem::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TreasureItem::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TreasureItem::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TreasureItem::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 TreasureItem::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.TreasureItem.charid)
  return charid_;
}
inline void TreasureItem::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TreasureItem.charid)
}

// optional string name = 3;
inline bool TreasureItem::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TreasureItem::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TreasureItem::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TreasureItem::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& TreasureItem::name() const {
  // @@protoc_insertion_point(field_get:Cmd.TreasureItem.name)
  return *name_;
}
inline void TreasureItem::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.TreasureItem.name)
}
inline void TreasureItem::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.TreasureItem.name)
}
inline void TreasureItem::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.TreasureItem.name)
}
inline ::std::string* TreasureItem::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.TreasureItem.name)
  return name_;
}
inline ::std::string* TreasureItem::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TreasureItem::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TreasureItem.name)
}

// repeated .Cmd.ItemData datas = 2;
inline int TreasureItem::datas_size() const {
  return datas_.size();
}
inline void TreasureItem::clear_datas() {
  datas_.Clear();
}
inline const ::Cmd::ItemData& TreasureItem::datas(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TreasureItem.datas)
  return datas_.Get(index);
}
inline ::Cmd::ItemData* TreasureItem::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.TreasureItem.datas)
  return datas_.Mutable(index);
}
inline ::Cmd::ItemData* TreasureItem::add_datas() {
  // @@protoc_insertion_point(field_add:Cmd.TreasureItem.datas)
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
TreasureItem::datas() const {
  // @@protoc_insertion_point(field_list:Cmd.TreasureItem.datas)
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
TreasureItem::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TreasureItem.datas)
  return &datas_;
}

// -------------------------------------------------------------------

// TreasureResult

// optional uint64 ownerid = 1 [default = 0];
inline bool TreasureResult::has_ownerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TreasureResult::set_has_ownerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TreasureResult::clear_has_ownerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TreasureResult::clear_ownerid() {
  ownerid_ = GOOGLE_ULONGLONG(0);
  clear_has_ownerid();
}
inline ::google::protobuf::uint64 TreasureResult::ownerid() const {
  // @@protoc_insertion_point(field_get:Cmd.TreasureResult.ownerid)
  return ownerid_;
}
inline void TreasureResult::set_ownerid(::google::protobuf::uint64 value) {
  set_has_ownerid();
  ownerid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TreasureResult.ownerid)
}

// optional uint32 eventguid = 2 [default = 0];
inline bool TreasureResult::has_eventguid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TreasureResult::set_has_eventguid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TreasureResult::clear_has_eventguid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TreasureResult::clear_eventguid() {
  eventguid_ = 0u;
  clear_has_eventguid();
}
inline ::google::protobuf::uint32 TreasureResult::eventguid() const {
  // @@protoc_insertion_point(field_get:Cmd.TreasureResult.eventguid)
  return eventguid_;
}
inline void TreasureResult::set_eventguid(::google::protobuf::uint32 value) {
  set_has_eventguid();
  eventguid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TreasureResult.eventguid)
}

// optional uint32 treasureid = 3 [default = 0];
inline bool TreasureResult::has_treasureid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TreasureResult::set_has_treasureid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TreasureResult::clear_has_treasureid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TreasureResult::clear_treasureid() {
  treasureid_ = 0u;
  clear_has_treasureid();
}
inline ::google::protobuf::uint32 TreasureResult::treasureid() const {
  // @@protoc_insertion_point(field_get:Cmd.TreasureResult.treasureid)
  return treasureid_;
}
inline void TreasureResult::set_treasureid(::google::protobuf::uint32 value) {
  set_has_treasureid();
  treasureid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TreasureResult.treasureid)
}

// optional uint32 totalmember = 5 [default = 0];
inline bool TreasureResult::has_totalmember() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TreasureResult::set_has_totalmember() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TreasureResult::clear_has_totalmember() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TreasureResult::clear_totalmember() {
  totalmember_ = 0u;
  clear_has_totalmember();
}
inline ::google::protobuf::uint32 TreasureResult::totalmember() const {
  // @@protoc_insertion_point(field_get:Cmd.TreasureResult.totalmember)
  return totalmember_;
}
inline void TreasureResult::set_totalmember(::google::protobuf::uint32 value) {
  set_has_totalmember();
  totalmember_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TreasureResult.totalmember)
}

// optional .Cmd.ETreasureState state = 6 [default = ETREASURESTATE_MIN];
inline bool TreasureResult::has_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TreasureResult::set_has_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TreasureResult::clear_has_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TreasureResult::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::Cmd::ETreasureState TreasureResult::state() const {
  // @@protoc_insertion_point(field_get:Cmd.TreasureResult.state)
  return static_cast< ::Cmd::ETreasureState >(state_);
}
inline void TreasureResult::set_state(::Cmd::ETreasureState value) {
  assert(::Cmd::ETreasureState_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TreasureResult.state)
}

// repeated .Cmd.TreasureItem items = 4;
inline int TreasureResult::items_size() const {
  return items_.size();
}
inline void TreasureResult::clear_items() {
  items_.Clear();
}
inline const ::Cmd::TreasureItem& TreasureResult::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TreasureResult.items)
  return items_.Get(index);
}
inline ::Cmd::TreasureItem* TreasureResult::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.TreasureResult.items)
  return items_.Mutable(index);
}
inline ::Cmd::TreasureItem* TreasureResult::add_items() {
  // @@protoc_insertion_point(field_add:Cmd.TreasureResult.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TreasureItem >&
TreasureResult::items() const {
  // @@protoc_insertion_point(field_list:Cmd.TreasureResult.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TreasureItem >*
TreasureResult::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TreasureResult.items)
  return &items_;
}

// -------------------------------------------------------------------

// BlobGuildTreasure

// repeated .Cmd.GuildTreasure treasures = 1;
inline int BlobGuildTreasure::treasures_size() const {
  return treasures_.size();
}
inline void BlobGuildTreasure::clear_treasures() {
  treasures_.Clear();
}
inline const ::Cmd::GuildTreasure& BlobGuildTreasure::treasures(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildTreasure.treasures)
  return treasures_.Get(index);
}
inline ::Cmd::GuildTreasure* BlobGuildTreasure::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BlobGuildTreasure.treasures)
  return treasures_.Mutable(index);
}
inline ::Cmd::GuildTreasure* BlobGuildTreasure::add_treasures() {
  // @@protoc_insertion_point(field_add:Cmd.BlobGuildTreasure.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildTreasure >&
BlobGuildTreasure::treasures() const {
  // @@protoc_insertion_point(field_list:Cmd.BlobGuildTreasure.treasures)
  return treasures_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildTreasure >*
BlobGuildTreasure::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BlobGuildTreasure.treasures)
  return &treasures_;
}

// repeated .Cmd.TreasureResult result = 2;
inline int BlobGuildTreasure::result_size() const {
  return result_.size();
}
inline void BlobGuildTreasure::clear_result() {
  result_.Clear();
}
inline const ::Cmd::TreasureResult& BlobGuildTreasure::result(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildTreasure.result)
  return result_.Get(index);
}
inline ::Cmd::TreasureResult* BlobGuildTreasure::mutable_result(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BlobGuildTreasure.result)
  return result_.Mutable(index);
}
inline ::Cmd::TreasureResult* BlobGuildTreasure::add_result() {
  // @@protoc_insertion_point(field_add:Cmd.BlobGuildTreasure.result)
  return result_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TreasureResult >&
BlobGuildTreasure::result() const {
  // @@protoc_insertion_point(field_list:Cmd.BlobGuildTreasure.result)
  return result_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TreasureResult >*
BlobGuildTreasure::mutable_result() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BlobGuildTreasure.result)
  return &result_;
}

// -------------------------------------------------------------------

// BlobGuildMisc

// optional bytes var = 1;
inline bool BlobGuildMisc::has_var() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BlobGuildMisc::set_has_var() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BlobGuildMisc::clear_has_var() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BlobGuildMisc::clear_var() {
  if (var_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    var_->clear();
  }
  clear_has_var();
}
inline const ::std::string& BlobGuildMisc::var() const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildMisc.var)
  return *var_;
}
inline void BlobGuildMisc::set_var(const ::std::string& value) {
  set_has_var();
  if (var_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    var_ = new ::std::string;
  }
  var_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.BlobGuildMisc.var)
}
inline void BlobGuildMisc::set_var(const char* value) {
  set_has_var();
  if (var_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    var_ = new ::std::string;
  }
  var_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.BlobGuildMisc.var)
}
inline void BlobGuildMisc::set_var(const void* value, size_t size) {
  set_has_var();
  if (var_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    var_ = new ::std::string;
  }
  var_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.BlobGuildMisc.var)
}
inline ::std::string* BlobGuildMisc::mutable_var() {
  set_has_var();
  if (var_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    var_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.BlobGuildMisc.var)
  return var_;
}
inline ::std::string* BlobGuildMisc::release_var() {
  clear_has_var();
  if (var_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = var_;
    var_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BlobGuildMisc::set_allocated_var(::std::string* var) {
  if (var_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete var_;
  }
  if (var) {
    set_has_var();
    var_ = var;
  } else {
    clear_has_var();
    var_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.BlobGuildMisc.var)
}

// repeated .Cmd.GuildJob job = 2;
inline int BlobGuildMisc::job_size() const {
  return job_.size();
}
inline void BlobGuildMisc::clear_job() {
  job_.Clear();
}
inline const ::Cmd::GuildJob& BlobGuildMisc::job(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildMisc.job)
  return job_.Get(index);
}
inline ::Cmd::GuildJob* BlobGuildMisc::mutable_job(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BlobGuildMisc.job)
  return job_.Mutable(index);
}
inline ::Cmd::GuildJob* BlobGuildMisc::add_job() {
  // @@protoc_insertion_point(field_add:Cmd.BlobGuildMisc.job)
  return job_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildJob >&
BlobGuildMisc::job() const {
  // @@protoc_insertion_point(field_list:Cmd.BlobGuildMisc.job)
  return job_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildJob >*
BlobGuildMisc::mutable_job() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BlobGuildMisc.job)
  return &job_;
}

// optional uint32 donatetime1 = 3 [default = 0];
inline bool BlobGuildMisc::has_donatetime1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BlobGuildMisc::set_has_donatetime1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BlobGuildMisc::clear_has_donatetime1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BlobGuildMisc::clear_donatetime1() {
  donatetime1_ = 0u;
  clear_has_donatetime1();
}
inline ::google::protobuf::uint32 BlobGuildMisc::donatetime1() const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildMisc.donatetime1)
  return donatetime1_;
}
inline void BlobGuildMisc::set_donatetime1(::google::protobuf::uint32 value) {
  set_has_donatetime1();
  donatetime1_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BlobGuildMisc.donatetime1)
}

// optional uint32 donatetime2 = 4 [default = 0];
inline bool BlobGuildMisc::has_donatetime2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BlobGuildMisc::set_has_donatetime2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BlobGuildMisc::clear_has_donatetime2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BlobGuildMisc::clear_donatetime2() {
  donatetime2_ = 0u;
  clear_has_donatetime2();
}
inline ::google::protobuf::uint32 BlobGuildMisc::donatetime2() const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildMisc.donatetime2)
  return donatetime2_;
}
inline void BlobGuildMisc::set_donatetime2(::google::protobuf::uint32 value) {
  set_has_donatetime2();
  donatetime2_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BlobGuildMisc.donatetime2)
}

// repeated .Cmd.GuildQuest quest = 5;
inline int BlobGuildMisc::quest_size() const {
  return quest_.size();
}
inline void BlobGuildMisc::clear_quest() {
  quest_.Clear();
}
inline const ::Cmd::GuildQuest& BlobGuildMisc::quest(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildMisc.quest)
  return quest_.Get(index);
}
inline ::Cmd::GuildQuest* BlobGuildMisc::mutable_quest(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BlobGuildMisc.quest)
  return quest_.Mutable(index);
}
inline ::Cmd::GuildQuest* BlobGuildMisc::add_quest() {
  // @@protoc_insertion_point(field_add:Cmd.BlobGuildMisc.quest)
  return quest_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildQuest >&
BlobGuildMisc::quest() const {
  // @@protoc_insertion_point(field_list:Cmd.BlobGuildMisc.quest)
  return quest_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildQuest >*
BlobGuildMisc::mutable_quest() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BlobGuildMisc.quest)
  return &quest_;
}

// optional uint32 nextquesttime = 6 [default = 0];
inline bool BlobGuildMisc::has_nextquesttime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BlobGuildMisc::set_has_nextquesttime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BlobGuildMisc::clear_has_nextquesttime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BlobGuildMisc::clear_nextquesttime() {
  nextquesttime_ = 0u;
  clear_has_nextquesttime();
}
inline ::google::protobuf::uint32 BlobGuildMisc::nextquesttime() const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildMisc.nextquesttime)
  return nextquesttime_;
}
inline void BlobGuildMisc::set_nextquesttime(::google::protobuf::uint32 value) {
  set_has_nextquesttime();
  nextquesttime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BlobGuildMisc.nextquesttime)
}

// repeated .Cmd.DojoMsgBlob dojomsg = 7;
inline int BlobGuildMisc::dojomsg_size() const {
  return dojomsg_.size();
}
inline void BlobGuildMisc::clear_dojomsg() {
  dojomsg_.Clear();
}
inline const ::Cmd::DojoMsgBlob& BlobGuildMisc::dojomsg(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildMisc.dojomsg)
  return dojomsg_.Get(index);
}
inline ::Cmd::DojoMsgBlob* BlobGuildMisc::mutable_dojomsg(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BlobGuildMisc.dojomsg)
  return dojomsg_.Mutable(index);
}
inline ::Cmd::DojoMsgBlob* BlobGuildMisc::add_dojomsg() {
  // @@protoc_insertion_point(field_add:Cmd.BlobGuildMisc.dojomsg)
  return dojomsg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::DojoMsgBlob >&
BlobGuildMisc::dojomsg() const {
  // @@protoc_insertion_point(field_list:Cmd.BlobGuildMisc.dojomsg)
  return dojomsg_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::DojoMsgBlob >*
BlobGuildMisc::mutable_dojomsg() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BlobGuildMisc.dojomsg)
  return &dojomsg_;
}

// optional uint32 donatetime3 = 8 [default = 0];
inline bool BlobGuildMisc::has_donatetime3() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BlobGuildMisc::set_has_donatetime3() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BlobGuildMisc::clear_has_donatetime3() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BlobGuildMisc::clear_donatetime3() {
  donatetime3_ = 0u;
  clear_has_donatetime3();
}
inline ::google::protobuf::uint32 BlobGuildMisc::donatetime3() const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildMisc.donatetime3)
  return donatetime3_;
}
inline void BlobGuildMisc::set_donatetime3(::google::protobuf::uint32 value) {
  set_has_donatetime3();
  donatetime3_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BlobGuildMisc.donatetime3)
}

// optional uint32 donatetime4 = 9 [default = 0];
inline bool BlobGuildMisc::has_donatetime4() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BlobGuildMisc::set_has_donatetime4() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BlobGuildMisc::clear_has_donatetime4() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BlobGuildMisc::clear_donatetime4() {
  donatetime4_ = 0u;
  clear_has_donatetime4();
}
inline ::google::protobuf::uint32 BlobGuildMisc::donatetime4() const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildMisc.donatetime4)
  return donatetime4_;
}
inline void BlobGuildMisc::set_donatetime4(::google::protobuf::uint32 value) {
  set_has_donatetime4();
  donatetime4_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BlobGuildMisc.donatetime4)
}

// optional uint32 renametime = 10 [default = 0];
inline bool BlobGuildMisc::has_renametime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BlobGuildMisc::set_has_renametime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BlobGuildMisc::clear_has_renametime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BlobGuildMisc::clear_renametime() {
  renametime_ = 0u;
  clear_has_renametime();
}
inline ::google::protobuf::uint32 BlobGuildMisc::renametime() const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildMisc.renametime)
  return renametime_;
}
inline void BlobGuildMisc::set_renametime(::google::protobuf::uint32 value) {
  set_has_renametime();
  renametime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BlobGuildMisc.renametime)
}

// optional uint32 city_giveup_time = 11 [default = 0];
inline bool BlobGuildMisc::has_city_giveup_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BlobGuildMisc::set_has_city_giveup_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BlobGuildMisc::clear_has_city_giveup_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BlobGuildMisc::clear_city_giveup_time() {
  city_giveup_time_ = 0u;
  clear_has_city_giveup_time();
}
inline ::google::protobuf::uint32 BlobGuildMisc::city_giveup_time() const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildMisc.city_giveup_time)
  return city_giveup_time_;
}
inline void BlobGuildMisc::set_city_giveup_time(::google::protobuf::uint32 value) {
  set_has_city_giveup_time();
  city_giveup_time_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BlobGuildMisc.city_giveup_time)
}

// optional uint32 auth_version = 12 [default = 0];
inline bool BlobGuildMisc::has_auth_version() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BlobGuildMisc::set_has_auth_version() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BlobGuildMisc::clear_has_auth_version() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BlobGuildMisc::clear_auth_version() {
  auth_version_ = 0u;
  clear_has_auth_version();
}
inline ::google::protobuf::uint32 BlobGuildMisc::auth_version() const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildMisc.auth_version)
  return auth_version_;
}
inline void BlobGuildMisc::set_auth_version(::google::protobuf::uint32 value) {
  set_has_auth_version();
  auth_version_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BlobGuildMisc.auth_version)
}

// optional .Cmd.GuildBuildingData building = 13;
inline bool BlobGuildMisc::has_building() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BlobGuildMisc::set_has_building() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BlobGuildMisc::clear_has_building() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BlobGuildMisc::clear_building() {
  if (building_ != NULL) building_->::Cmd::GuildBuildingData::Clear();
  clear_has_building();
}
inline const ::Cmd::GuildBuildingData& BlobGuildMisc::building() const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildMisc.building)
  return building_ != NULL ? *building_ : *default_instance_->building_;
}
inline ::Cmd::GuildBuildingData* BlobGuildMisc::mutable_building() {
  set_has_building();
  if (building_ == NULL) building_ = new ::Cmd::GuildBuildingData;
  // @@protoc_insertion_point(field_mutable:Cmd.BlobGuildMisc.building)
  return building_;
}
inline ::Cmd::GuildBuildingData* BlobGuildMisc::release_building() {
  clear_has_building();
  ::Cmd::GuildBuildingData* temp = building_;
  building_ = NULL;
  return temp;
}
inline void BlobGuildMisc::set_allocated_building(::Cmd::GuildBuildingData* building) {
  delete building_;
  building_ = building;
  if (building) {
    set_has_building();
  } else {
    clear_has_building();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.BlobGuildMisc.building)
}

// optional uint64 openfunction = 14 [default = 0];
inline bool BlobGuildMisc::has_openfunction() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void BlobGuildMisc::set_has_openfunction() {
  _has_bits_[0] |= 0x00002000u;
}
inline void BlobGuildMisc::clear_has_openfunction() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void BlobGuildMisc::clear_openfunction() {
  openfunction_ = GOOGLE_ULONGLONG(0);
  clear_has_openfunction();
}
inline ::google::protobuf::uint64 BlobGuildMisc::openfunction() const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildMisc.openfunction)
  return openfunction_;
}
inline void BlobGuildMisc::set_openfunction(::google::protobuf::uint64 value) {
  set_has_openfunction();
  openfunction_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BlobGuildMisc.openfunction)
}

// optional .Cmd.GuildChallengeData challenge = 15;
inline bool BlobGuildMisc::has_challenge() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void BlobGuildMisc::set_has_challenge() {
  _has_bits_[0] |= 0x00004000u;
}
inline void BlobGuildMisc::clear_has_challenge() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void BlobGuildMisc::clear_challenge() {
  if (challenge_ != NULL) challenge_->::Cmd::GuildChallengeData::Clear();
  clear_has_challenge();
}
inline const ::Cmd::GuildChallengeData& BlobGuildMisc::challenge() const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildMisc.challenge)
  return challenge_ != NULL ? *challenge_ : *default_instance_->challenge_;
}
inline ::Cmd::GuildChallengeData* BlobGuildMisc::mutable_challenge() {
  set_has_challenge();
  if (challenge_ == NULL) challenge_ = new ::Cmd::GuildChallengeData;
  // @@protoc_insertion_point(field_mutable:Cmd.BlobGuildMisc.challenge)
  return challenge_;
}
inline ::Cmd::GuildChallengeData* BlobGuildMisc::release_challenge() {
  clear_has_challenge();
  ::Cmd::GuildChallengeData* temp = challenge_;
  challenge_ = NULL;
  return temp;
}
inline void BlobGuildMisc::set_allocated_challenge(::Cmd::GuildChallengeData* challenge) {
  delete challenge_;
  challenge_ = challenge;
  if (challenge) {
    set_has_challenge();
  } else {
    clear_has_challenge();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.BlobGuildMisc.challenge)
}

// optional .Cmd.GuildWelfare welfare = 16;
inline bool BlobGuildMisc::has_welfare() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void BlobGuildMisc::set_has_welfare() {
  _has_bits_[0] |= 0x00008000u;
}
inline void BlobGuildMisc::clear_has_welfare() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void BlobGuildMisc::clear_welfare() {
  if (welfare_ != NULL) welfare_->::Cmd::GuildWelfare::Clear();
  clear_has_welfare();
}
inline const ::Cmd::GuildWelfare& BlobGuildMisc::welfare() const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildMisc.welfare)
  return welfare_ != NULL ? *welfare_ : *default_instance_->welfare_;
}
inline ::Cmd::GuildWelfare* BlobGuildMisc::mutable_welfare() {
  set_has_welfare();
  if (welfare_ == NULL) welfare_ = new ::Cmd::GuildWelfare;
  // @@protoc_insertion_point(field_mutable:Cmd.BlobGuildMisc.welfare)
  return welfare_;
}
inline ::Cmd::GuildWelfare* BlobGuildMisc::release_welfare() {
  clear_has_welfare();
  ::Cmd::GuildWelfare* temp = welfare_;
  welfare_ = NULL;
  return temp;
}
inline void BlobGuildMisc::set_allocated_welfare(::Cmd::GuildWelfare* welfare) {
  delete welfare_;
  welfare_ = welfare;
  if (welfare) {
    set_has_welfare();
  } else {
    clear_has_welfare();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.BlobGuildMisc.welfare)
}

// optional .Cmd.GuildArtifact artifact = 17;
inline bool BlobGuildMisc::has_artifact() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void BlobGuildMisc::set_has_artifact() {
  _has_bits_[0] |= 0x00010000u;
}
inline void BlobGuildMisc::clear_has_artifact() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void BlobGuildMisc::clear_artifact() {
  if (artifact_ != NULL) artifact_->::Cmd::GuildArtifact::Clear();
  clear_has_artifact();
}
inline const ::Cmd::GuildArtifact& BlobGuildMisc::artifact() const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildMisc.artifact)
  return artifact_ != NULL ? *artifact_ : *default_instance_->artifact_;
}
inline ::Cmd::GuildArtifact* BlobGuildMisc::mutable_artifact() {
  set_has_artifact();
  if (artifact_ == NULL) artifact_ = new ::Cmd::GuildArtifact;
  // @@protoc_insertion_point(field_mutable:Cmd.BlobGuildMisc.artifact)
  return artifact_;
}
inline ::Cmd::GuildArtifact* BlobGuildMisc::release_artifact() {
  clear_has_artifact();
  ::Cmd::GuildArtifact* temp = artifact_;
  artifact_ = NULL;
  return temp;
}
inline void BlobGuildMisc::set_allocated_artifact(::Cmd::GuildArtifact* artifact) {
  delete artifact_;
  artifact_ = artifact;
  if (artifact) {
    set_has_artifact();
  } else {
    clear_has_artifact();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.BlobGuildMisc.artifact)
}

// optional .Cmd.BlobGQuest quests = 18;
inline bool BlobGuildMisc::has_quests() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void BlobGuildMisc::set_has_quests() {
  _has_bits_[0] |= 0x00020000u;
}
inline void BlobGuildMisc::clear_has_quests() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void BlobGuildMisc::clear_quests() {
  if (quests_ != NULL) quests_->::Cmd::BlobGQuest::Clear();
  clear_has_quests();
}
inline const ::Cmd::BlobGQuest& BlobGuildMisc::quests() const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildMisc.quests)
  return quests_ != NULL ? *quests_ : *default_instance_->quests_;
}
inline ::Cmd::BlobGQuest* BlobGuildMisc::mutable_quests() {
  set_has_quests();
  if (quests_ == NULL) quests_ = new ::Cmd::BlobGQuest;
  // @@protoc_insertion_point(field_mutable:Cmd.BlobGuildMisc.quests)
  return quests_;
}
inline ::Cmd::BlobGQuest* BlobGuildMisc::release_quests() {
  clear_has_quests();
  ::Cmd::BlobGQuest* temp = quests_;
  quests_ = NULL;
  return temp;
}
inline void BlobGuildMisc::set_allocated_quests(::Cmd::BlobGQuest* quests) {
  delete quests_;
  quests_ = quests;
  if (quests) {
    set_has_quests();
  } else {
    clear_has_quests();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.BlobGuildMisc.quests)
}

// optional .Cmd.BlobGuildTreasure treasures = 19;
inline bool BlobGuildMisc::has_treasures() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void BlobGuildMisc::set_has_treasures() {
  _has_bits_[0] |= 0x00040000u;
}
inline void BlobGuildMisc::clear_has_treasures() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void BlobGuildMisc::clear_treasures() {
  if (treasures_ != NULL) treasures_->::Cmd::BlobGuildTreasure::Clear();
  clear_has_treasures();
}
inline const ::Cmd::BlobGuildTreasure& BlobGuildMisc::treasures() const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildMisc.treasures)
  return treasures_ != NULL ? *treasures_ : *default_instance_->treasures_;
}
inline ::Cmd::BlobGuildTreasure* BlobGuildMisc::mutable_treasures() {
  set_has_treasures();
  if (treasures_ == NULL) treasures_ = new ::Cmd::BlobGuildTreasure;
  // @@protoc_insertion_point(field_mutable:Cmd.BlobGuildMisc.treasures)
  return treasures_;
}
inline ::Cmd::BlobGuildTreasure* BlobGuildMisc::release_treasures() {
  clear_has_treasures();
  ::Cmd::BlobGuildTreasure* temp = treasures_;
  treasures_ = NULL;
  return temp;
}
inline void BlobGuildMisc::set_allocated_treasures(::Cmd::BlobGuildTreasure* treasures) {
  delete treasures_;
  treasures_ = treasures;
  if (treasures) {
    set_has_treasures();
  } else {
    clear_has_treasures();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.BlobGuildMisc.treasures)
}

// optional .Cmd.BlobGGvg gvg = 20;
inline bool BlobGuildMisc::has_gvg() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void BlobGuildMisc::set_has_gvg() {
  _has_bits_[0] |= 0x00080000u;
}
inline void BlobGuildMisc::clear_has_gvg() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void BlobGuildMisc::clear_gvg() {
  if (gvg_ != NULL) gvg_->::Cmd::BlobGGvg::Clear();
  clear_has_gvg();
}
inline const ::Cmd::BlobGGvg& BlobGuildMisc::gvg() const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildMisc.gvg)
  return gvg_ != NULL ? *gvg_ : *default_instance_->gvg_;
}
inline ::Cmd::BlobGGvg* BlobGuildMisc::mutable_gvg() {
  set_has_gvg();
  if (gvg_ == NULL) gvg_ = new ::Cmd::BlobGGvg;
  // @@protoc_insertion_point(field_mutable:Cmd.BlobGuildMisc.gvg)
  return gvg_;
}
inline ::Cmd::BlobGGvg* BlobGuildMisc::release_gvg() {
  clear_has_gvg();
  ::Cmd::BlobGGvg* temp = gvg_;
  gvg_ = NULL;
  return temp;
}
inline void BlobGuildMisc::set_allocated_gvg(::Cmd::BlobGGvg* gvg) {
  delete gvg_;
  gvg_ = gvg;
  if (gvg) {
    set_has_gvg();
  } else {
    clear_has_gvg();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.BlobGuildMisc.gvg)
}

// -------------------------------------------------------------------

// BlobGuildPack

// optional uint32 version = 1 [default = 0];
inline bool BlobGuildPack::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BlobGuildPack::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BlobGuildPack::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BlobGuildPack::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 BlobGuildPack::version() const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildPack.version)
  return version_;
}
inline void BlobGuildPack::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BlobGuildPack.version)
}

// repeated .Cmd.ItemInfo item = 2;
inline int BlobGuildPack::item_size() const {
  return item_.size();
}
inline void BlobGuildPack::clear_item() {
  item_.Clear();
}
inline const ::Cmd::ItemInfo& BlobGuildPack::item(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildPack.item)
  return item_.Get(index);
}
inline ::Cmd::ItemInfo* BlobGuildPack::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BlobGuildPack.item)
  return item_.Mutable(index);
}
inline ::Cmd::ItemInfo* BlobGuildPack::add_item() {
  // @@protoc_insertion_point(field_add:Cmd.BlobGuildPack.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo >&
BlobGuildPack::item() const {
  // @@protoc_insertion_point(field_list:Cmd.BlobGuildPack.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo >*
BlobGuildPack::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BlobGuildPack.item)
  return &item_;
}

// repeated .Cmd.ItemData data = 3;
inline int BlobGuildPack::data_size() const {
  return data_.size();
}
inline void BlobGuildPack::clear_data() {
  data_.Clear();
}
inline const ::Cmd::ItemData& BlobGuildPack::data(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildPack.data)
  return data_.Get(index);
}
inline ::Cmd::ItemData* BlobGuildPack::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BlobGuildPack.data)
  return data_.Mutable(index);
}
inline ::Cmd::ItemData* BlobGuildPack::add_data() {
  // @@protoc_insertion_point(field_add:Cmd.BlobGuildPack.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
BlobGuildPack::data() const {
  // @@protoc_insertion_point(field_list:Cmd.BlobGuildPack.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
BlobGuildPack::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BlobGuildPack.data)
  return &data_;
}

// -------------------------------------------------------------------

// BlobGuildEvent

// optional uint32 version = 1 [default = 0];
inline bool BlobGuildEvent::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BlobGuildEvent::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BlobGuildEvent::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BlobGuildEvent::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 BlobGuildEvent::version() const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildEvent.version)
  return version_;
}
inline void BlobGuildEvent::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BlobGuildEvent.version)
}

// repeated .Cmd.GuildEvent events = 2;
inline int BlobGuildEvent::events_size() const {
  return events_.size();
}
inline void BlobGuildEvent::clear_events() {
  events_.Clear();
}
inline const ::Cmd::GuildEvent& BlobGuildEvent::events(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildEvent.events)
  return events_.Get(index);
}
inline ::Cmd::GuildEvent* BlobGuildEvent::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BlobGuildEvent.events)
  return events_.Mutable(index);
}
inline ::Cmd::GuildEvent* BlobGuildEvent::add_events() {
  // @@protoc_insertion_point(field_add:Cmd.BlobGuildEvent.events)
  return events_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildEvent >&
BlobGuildEvent::events() const {
  // @@protoc_insertion_point(field_list:Cmd.BlobGuildEvent.events)
  return events_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildEvent >*
BlobGuildEvent::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BlobGuildEvent.events)
  return &events_;
}

// -------------------------------------------------------------------

// GuildPhoto

// optional uint64 accid_svr = 8 [default = 0];
inline bool GuildPhoto::has_accid_svr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildPhoto::set_has_accid_svr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildPhoto::clear_has_accid_svr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildPhoto::clear_accid_svr() {
  accid_svr_ = GOOGLE_ULONGLONG(0);
  clear_has_accid_svr();
}
inline ::google::protobuf::uint64 GuildPhoto::accid_svr() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildPhoto.accid_svr)
  return accid_svr_;
}
inline void GuildPhoto::set_accid_svr(::google::protobuf::uint64 value) {
  set_has_accid_svr();
  accid_svr_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildPhoto.accid_svr)
}

// optional uint64 accid = 7 [default = 0];
inline bool GuildPhoto::has_accid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildPhoto::set_has_accid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildPhoto::clear_has_accid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildPhoto::clear_accid() {
  accid_ = GOOGLE_ULONGLONG(0);
  clear_has_accid();
}
inline ::google::protobuf::uint64 GuildPhoto::accid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildPhoto.accid)
  return accid_;
}
inline void GuildPhoto::set_accid(::google::protobuf::uint64 value) {
  set_has_accid();
  accid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildPhoto.accid)
}

// optional uint64 charid = 1 [default = 0];
inline bool GuildPhoto::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildPhoto::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildPhoto::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildPhoto::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GuildPhoto::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildPhoto.charid)
  return charid_;
}
inline void GuildPhoto::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildPhoto.charid)
}

// optional uint32 anglez = 2 [default = 0];
inline bool GuildPhoto::has_anglez() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildPhoto::set_has_anglez() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildPhoto::clear_has_anglez() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildPhoto::clear_anglez() {
  anglez_ = 0u;
  clear_has_anglez();
}
inline ::google::protobuf::uint32 GuildPhoto::anglez() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildPhoto.anglez)
  return anglez_;
}
inline void GuildPhoto::set_anglez(::google::protobuf::uint32 value) {
  set_has_anglez();
  anglez_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildPhoto.anglez)
}

// optional uint32 time = 3 [default = 0];
inline bool GuildPhoto::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildPhoto::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildPhoto::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildPhoto::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 GuildPhoto::time() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildPhoto.time)
  return time_;
}
inline void GuildPhoto::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildPhoto.time)
}

// optional uint32 mapid = 4 [default = 0];
inline bool GuildPhoto::has_mapid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildPhoto::set_has_mapid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildPhoto::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildPhoto::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 GuildPhoto::mapid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildPhoto.mapid)
  return mapid_;
}
inline void GuildPhoto::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildPhoto.mapid)
}

// optional uint32 sourceid = 5 [default = 0];
inline bool GuildPhoto::has_sourceid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildPhoto::set_has_sourceid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildPhoto::clear_has_sourceid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildPhoto::clear_sourceid() {
  sourceid_ = 0u;
  clear_has_sourceid();
}
inline ::google::protobuf::uint32 GuildPhoto::sourceid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildPhoto.sourceid)
  return sourceid_;
}
inline void GuildPhoto::set_sourceid(::google::protobuf::uint32 value) {
  set_has_sourceid();
  sourceid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildPhoto.sourceid)
}

// optional .Cmd.ESource source = 6 [default = ESOURCE_MIN];
inline bool GuildPhoto::has_source() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuildPhoto::set_has_source() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuildPhoto::clear_has_source() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuildPhoto::clear_source() {
  source_ = 0;
  clear_has_source();
}
inline ::Cmd::ESource GuildPhoto::source() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildPhoto.source)
  return static_cast< ::Cmd::ESource >(source_);
}
inline void GuildPhoto::set_source(::Cmd::ESource value) {
  assert(::Cmd::ESource_IsValid(value));
  set_has_source();
  source_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildPhoto.source)
}

// -------------------------------------------------------------------

// PhotoFrame

// optional uint32 frameid = 1 [default = 0];
inline bool PhotoFrame::has_frameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PhotoFrame::set_has_frameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PhotoFrame::clear_has_frameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PhotoFrame::clear_frameid() {
  frameid_ = 0u;
  clear_has_frameid();
}
inline ::google::protobuf::uint32 PhotoFrame::frameid() const {
  // @@protoc_insertion_point(field_get:Cmd.PhotoFrame.frameid)
  return frameid_;
}
inline void PhotoFrame::set_frameid(::google::protobuf::uint32 value) {
  set_has_frameid();
  frameid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PhotoFrame.frameid)
}

// repeated .Cmd.GuildPhoto photo = 2;
inline int PhotoFrame::photo_size() const {
  return photo_.size();
}
inline void PhotoFrame::clear_photo() {
  photo_.Clear();
}
inline const ::Cmd::GuildPhoto& PhotoFrame::photo(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.PhotoFrame.photo)
  return photo_.Get(index);
}
inline ::Cmd::GuildPhoto* PhotoFrame::mutable_photo(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.PhotoFrame.photo)
  return photo_.Mutable(index);
}
inline ::Cmd::GuildPhoto* PhotoFrame::add_photo() {
  // @@protoc_insertion_point(field_add:Cmd.PhotoFrame.photo)
  return photo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildPhoto >&
PhotoFrame::photo() const {
  // @@protoc_insertion_point(field_list:Cmd.PhotoFrame.photo)
  return photo_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildPhoto >*
PhotoFrame::mutable_photo() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.PhotoFrame.photo)
  return &photo_;
}

// -------------------------------------------------------------------

// BlobGuildPhoto

// repeated .Cmd.PhotoFrame frames = 1;
inline int BlobGuildPhoto::frames_size() const {
  return frames_.size();
}
inline void BlobGuildPhoto::clear_frames() {
  frames_.Clear();
}
inline const ::Cmd::PhotoFrame& BlobGuildPhoto::frames(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BlobGuildPhoto.frames)
  return frames_.Get(index);
}
inline ::Cmd::PhotoFrame* BlobGuildPhoto::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BlobGuildPhoto.frames)
  return frames_.Mutable(index);
}
inline ::Cmd::PhotoFrame* BlobGuildPhoto::add_frames() {
  // @@protoc_insertion_point(field_add:Cmd.BlobGuildPhoto.frames)
  return frames_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::PhotoFrame >&
BlobGuildPhoto::frames() const {
  // @@protoc_insertion_point(field_list:Cmd.BlobGuildPhoto.frames)
  return frames_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::PhotoFrame >*
BlobGuildPhoto::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BlobGuildPhoto.frames)
  return &frames_;
}

// -------------------------------------------------------------------

// GuildSummaryData

// optional uint64 guid = 1 [default = 0];
inline bool GuildSummaryData::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildSummaryData::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildSummaryData::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildSummaryData::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 GuildSummaryData::guid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildSummaryData.guid)
  return guid_;
}
inline void GuildSummaryData::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildSummaryData.guid)
}

// optional uint32 level = 2 [default = 0];
inline bool GuildSummaryData::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildSummaryData::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildSummaryData::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildSummaryData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 GuildSummaryData::level() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildSummaryData.level)
  return level_;
}
inline void GuildSummaryData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildSummaryData.level)
}

// optional uint32 zoneid = 10 [default = 0];
inline bool GuildSummaryData::has_zoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildSummaryData::set_has_zoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildSummaryData::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildSummaryData::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 GuildSummaryData::zoneid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildSummaryData.zoneid)
  return zoneid_;
}
inline void GuildSummaryData::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildSummaryData.zoneid)
}

// optional uint32 curmember = 3 [default = 0];
inline bool GuildSummaryData::has_curmember() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildSummaryData::set_has_curmember() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildSummaryData::clear_has_curmember() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildSummaryData::clear_curmember() {
  curmember_ = 0u;
  clear_has_curmember();
}
inline ::google::protobuf::uint32 GuildSummaryData::curmember() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildSummaryData.curmember)
  return curmember_;
}
inline void GuildSummaryData::set_curmember(::google::protobuf::uint32 value) {
  set_has_curmember();
  curmember_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildSummaryData.curmember)
}

// optional uint32 maxmember = 4 [default = 0];
inline bool GuildSummaryData::has_maxmember() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildSummaryData::set_has_maxmember() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildSummaryData::clear_has_maxmember() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildSummaryData::clear_maxmember() {
  maxmember_ = 0u;
  clear_has_maxmember();
}
inline ::google::protobuf::uint32 GuildSummaryData::maxmember() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildSummaryData.maxmember)
  return maxmember_;
}
inline void GuildSummaryData::set_maxmember(::google::protobuf::uint32 value) {
  set_has_maxmember();
  maxmember_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildSummaryData.maxmember)
}

// optional uint32 cityid = 11 [default = 0];
inline bool GuildSummaryData::has_cityid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildSummaryData::set_has_cityid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildSummaryData::clear_has_cityid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildSummaryData::clear_cityid() {
  cityid_ = 0u;
  clear_has_cityid();
}
inline ::google::protobuf::uint32 GuildSummaryData::cityid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildSummaryData.cityid)
  return cityid_;
}
inline void GuildSummaryData::set_cityid(::google::protobuf::uint32 value) {
  set_has_cityid();
  cityid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildSummaryData.cityid)
}

// optional .Cmd.EGender chairmangender = 5 [default = EGENDER_MIN];
inline bool GuildSummaryData::has_chairmangender() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildSummaryData::set_has_chairmangender() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildSummaryData::clear_has_chairmangender() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildSummaryData::clear_chairmangender() {
  chairmangender_ = 0;
  clear_has_chairmangender();
}
inline ::Cmd::EGender GuildSummaryData::chairmangender() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildSummaryData.chairmangender)
  return static_cast< ::Cmd::EGender >(chairmangender_);
}
inline void GuildSummaryData::set_chairmangender(::Cmd::EGender value) {
  assert(::Cmd::EGender_IsValid(value));
  set_has_chairmangender();
  chairmangender_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildSummaryData.chairmangender)
}

// optional string chairmanname = 6;
inline bool GuildSummaryData::has_chairmanname() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuildSummaryData::set_has_chairmanname() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuildSummaryData::clear_has_chairmanname() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuildSummaryData::clear_chairmanname() {
  if (chairmanname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chairmanname_->clear();
  }
  clear_has_chairmanname();
}
inline const ::std::string& GuildSummaryData::chairmanname() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildSummaryData.chairmanname)
  return *chairmanname_;
}
inline void GuildSummaryData::set_chairmanname(const ::std::string& value) {
  set_has_chairmanname();
  if (chairmanname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chairmanname_ = new ::std::string;
  }
  chairmanname_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildSummaryData.chairmanname)
}
inline void GuildSummaryData::set_chairmanname(const char* value) {
  set_has_chairmanname();
  if (chairmanname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chairmanname_ = new ::std::string;
  }
  chairmanname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildSummaryData.chairmanname)
}
inline void GuildSummaryData::set_chairmanname(const char* value, size_t size) {
  set_has_chairmanname();
  if (chairmanname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chairmanname_ = new ::std::string;
  }
  chairmanname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildSummaryData.chairmanname)
}
inline ::std::string* GuildSummaryData::mutable_chairmanname() {
  set_has_chairmanname();
  if (chairmanname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chairmanname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildSummaryData.chairmanname)
  return chairmanname_;
}
inline ::std::string* GuildSummaryData::release_chairmanname() {
  clear_has_chairmanname();
  if (chairmanname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = chairmanname_;
    chairmanname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildSummaryData::set_allocated_chairmanname(::std::string* chairmanname) {
  if (chairmanname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete chairmanname_;
  }
  if (chairmanname) {
    set_has_chairmanname();
    chairmanname_ = chairmanname;
  } else {
    clear_has_chairmanname();
    chairmanname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildSummaryData.chairmanname)
}

// optional string guildname = 7;
inline bool GuildSummaryData::has_guildname() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GuildSummaryData::set_has_guildname() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GuildSummaryData::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GuildSummaryData::clear_guildname() {
  if (guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_->clear();
  }
  clear_has_guildname();
}
inline const ::std::string& GuildSummaryData::guildname() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildSummaryData.guildname)
  return *guildname_;
}
inline void GuildSummaryData::set_guildname(const ::std::string& value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildSummaryData.guildname)
}
inline void GuildSummaryData::set_guildname(const char* value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildSummaryData.guildname)
}
inline void GuildSummaryData::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildSummaryData.guildname)
}
inline ::std::string* GuildSummaryData::mutable_guildname() {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildSummaryData.guildname)
  return guildname_;
}
inline ::std::string* GuildSummaryData::release_guildname() {
  clear_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guildname_;
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildSummaryData::set_allocated_guildname(::std::string* guildname) {
  if (guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guildname_;
  }
  if (guildname) {
    set_has_guildname();
    guildname_ = guildname;
  } else {
    clear_has_guildname();
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildSummaryData.guildname)
}

// optional string recruitinfo = 8;
inline bool GuildSummaryData::has_recruitinfo() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GuildSummaryData::set_has_recruitinfo() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GuildSummaryData::clear_has_recruitinfo() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GuildSummaryData::clear_recruitinfo() {
  if (recruitinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recruitinfo_->clear();
  }
  clear_has_recruitinfo();
}
inline const ::std::string& GuildSummaryData::recruitinfo() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildSummaryData.recruitinfo)
  return *recruitinfo_;
}
inline void GuildSummaryData::set_recruitinfo(const ::std::string& value) {
  set_has_recruitinfo();
  if (recruitinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recruitinfo_ = new ::std::string;
  }
  recruitinfo_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildSummaryData.recruitinfo)
}
inline void GuildSummaryData::set_recruitinfo(const char* value) {
  set_has_recruitinfo();
  if (recruitinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recruitinfo_ = new ::std::string;
  }
  recruitinfo_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildSummaryData.recruitinfo)
}
inline void GuildSummaryData::set_recruitinfo(const char* value, size_t size) {
  set_has_recruitinfo();
  if (recruitinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recruitinfo_ = new ::std::string;
  }
  recruitinfo_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildSummaryData.recruitinfo)
}
inline ::std::string* GuildSummaryData::mutable_recruitinfo() {
  set_has_recruitinfo();
  if (recruitinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recruitinfo_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildSummaryData.recruitinfo)
  return recruitinfo_;
}
inline ::std::string* GuildSummaryData::release_recruitinfo() {
  clear_has_recruitinfo();
  if (recruitinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = recruitinfo_;
    recruitinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildSummaryData::set_allocated_recruitinfo(::std::string* recruitinfo) {
  if (recruitinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete recruitinfo_;
  }
  if (recruitinfo) {
    set_has_recruitinfo();
    recruitinfo_ = recruitinfo;
  } else {
    clear_has_recruitinfo();
    recruitinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildSummaryData.recruitinfo)
}

// optional string portrait = 9;
inline bool GuildSummaryData::has_portrait() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GuildSummaryData::set_has_portrait() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GuildSummaryData::clear_has_portrait() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GuildSummaryData::clear_portrait() {
  if (portrait_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_->clear();
  }
  clear_has_portrait();
}
inline const ::std::string& GuildSummaryData::portrait() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildSummaryData.portrait)
  return *portrait_;
}
inline void GuildSummaryData::set_portrait(const ::std::string& value) {
  set_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_ = new ::std::string;
  }
  portrait_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildSummaryData.portrait)
}
inline void GuildSummaryData::set_portrait(const char* value) {
  set_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_ = new ::std::string;
  }
  portrait_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildSummaryData.portrait)
}
inline void GuildSummaryData::set_portrait(const char* value, size_t size) {
  set_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_ = new ::std::string;
  }
  portrait_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildSummaryData.portrait)
}
inline ::std::string* GuildSummaryData::mutable_portrait() {
  set_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildSummaryData.portrait)
  return portrait_;
}
inline ::std::string* GuildSummaryData::release_portrait() {
  clear_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = portrait_;
    portrait_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildSummaryData::set_allocated_portrait(::std::string* portrait) {
  if (portrait_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete portrait_;
  }
  if (portrait) {
    set_has_portrait();
    portrait_ = portrait;
  } else {
    clear_has_portrait();
    portrait_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildSummaryData.portrait)
}

// -------------------------------------------------------------------

// GuildData

// optional .Cmd.GuildSummaryData summary = 1;
inline bool GuildData::has_summary() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildData::set_has_summary() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildData::clear_has_summary() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildData::clear_summary() {
  if (summary_ != NULL) summary_->::Cmd::GuildSummaryData::Clear();
  clear_has_summary();
}
inline const ::Cmd::GuildSummaryData& GuildData::summary() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildData.summary)
  return summary_ != NULL ? *summary_ : *default_instance_->summary_;
}
inline ::Cmd::GuildSummaryData* GuildData::mutable_summary() {
  set_has_summary();
  if (summary_ == NULL) summary_ = new ::Cmd::GuildSummaryData;
  // @@protoc_insertion_point(field_mutable:Cmd.GuildData.summary)
  return summary_;
}
inline ::Cmd::GuildSummaryData* GuildData::release_summary() {
  clear_has_summary();
  ::Cmd::GuildSummaryData* temp = summary_;
  summary_ = NULL;
  return temp;
}
inline void GuildData::set_allocated_summary(::Cmd::GuildSummaryData* summary) {
  delete summary_;
  summary_ = summary;
  if (summary) {
    set_has_summary();
  } else {
    clear_has_summary();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildData.summary)
}

// optional uint32 questresettime = 4 [default = 0];
inline bool GuildData::has_questresettime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildData::set_has_questresettime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildData::clear_has_questresettime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildData::clear_questresettime() {
  questresettime_ = 0u;
  clear_has_questresettime();
}
inline ::google::protobuf::uint32 GuildData::questresettime() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildData.questresettime)
  return questresettime_;
}
inline void GuildData::set_questresettime(::google::protobuf::uint32 value) {
  set_has_questresettime();
  questresettime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildData.questresettime)
}

// optional uint32 asset = 5 [default = 0];
inline bool GuildData::has_asset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildData::set_has_asset() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildData::clear_has_asset() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildData::clear_asset() {
  asset_ = 0u;
  clear_has_asset();
}
inline ::google::protobuf::uint32 GuildData::asset() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildData.asset)
  return asset_;
}
inline void GuildData::set_asset(::google::protobuf::uint32 value) {
  set_has_asset();
  asset_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildData.asset)
}

// optional uint32 dismisstime = 6 [default = 0];
inline bool GuildData::has_dismisstime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildData::set_has_dismisstime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildData::clear_has_dismisstime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildData::clear_dismisstime() {
  dismisstime_ = 0u;
  clear_has_dismisstime();
}
inline ::google::protobuf::uint32 GuildData::dismisstime() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildData.dismisstime)
  return dismisstime_;
}
inline void GuildData::set_dismisstime(::google::protobuf::uint32 value) {
  set_has_dismisstime();
  dismisstime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildData.dismisstime)
}

// optional uint32 zonetime = 7 [default = 0];
inline bool GuildData::has_zonetime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildData::set_has_zonetime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildData::clear_has_zonetime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildData::clear_zonetime() {
  zonetime_ = 0u;
  clear_has_zonetime();
}
inline ::google::protobuf::uint32 GuildData::zonetime() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildData.zonetime)
  return zonetime_;
}
inline void GuildData::set_zonetime(::google::protobuf::uint32 value) {
  set_has_zonetime();
  zonetime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildData.zonetime)
}

// optional uint32 createtime = 8 [default = 0];
inline bool GuildData::has_createtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildData::set_has_createtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildData::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildData::clear_createtime() {
  createtime_ = 0u;
  clear_has_createtime();
}
inline ::google::protobuf::uint32 GuildData::createtime() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildData.createtime)
  return createtime_;
}
inline void GuildData::set_createtime(::google::protobuf::uint32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildData.createtime)
}

// optional uint32 nextzone = 9 [default = 0];
inline bool GuildData::has_nextzone() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildData::set_has_nextzone() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildData::clear_has_nextzone() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildData::clear_nextzone() {
  nextzone_ = 0u;
  clear_has_nextzone();
}
inline ::google::protobuf::uint32 GuildData::nextzone() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildData.nextzone)
  return nextzone_;
}
inline void GuildData::set_nextzone(::google::protobuf::uint32 value) {
  set_has_nextzone();
  nextzone_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildData.nextzone)
}

// optional uint32 donatetime1 = 10 [default = 0];
inline bool GuildData::has_donatetime1() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuildData::set_has_donatetime1() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuildData::clear_has_donatetime1() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuildData::clear_donatetime1() {
  donatetime1_ = 0u;
  clear_has_donatetime1();
}
inline ::google::protobuf::uint32 GuildData::donatetime1() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildData.donatetime1)
  return donatetime1_;
}
inline void GuildData::set_donatetime1(::google::protobuf::uint32 value) {
  set_has_donatetime1();
  donatetime1_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildData.donatetime1)
}

// optional uint32 donatetime2 = 11 [default = 0];
inline bool GuildData::has_donatetime2() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GuildData::set_has_donatetime2() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GuildData::clear_has_donatetime2() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GuildData::clear_donatetime2() {
  donatetime2_ = 0u;
  clear_has_donatetime2();
}
inline ::google::protobuf::uint32 GuildData::donatetime2() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildData.donatetime2)
  return donatetime2_;
}
inline void GuildData::set_donatetime2(::google::protobuf::uint32 value) {
  set_has_donatetime2();
  donatetime2_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildData.donatetime2)
}

// optional string name = 12;
inline bool GuildData::has_name() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GuildData::set_has_name() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GuildData::clear_has_name() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GuildData::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GuildData::name() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildData.name)
  return *name_;
}
inline void GuildData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildData.name)
}
inline void GuildData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildData.name)
}
inline void GuildData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildData.name)
}
inline ::std::string* GuildData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildData.name)
  return name_;
}
inline ::std::string* GuildData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildData.name)
}

// optional string boardinfo = 13;
inline bool GuildData::has_boardinfo() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GuildData::set_has_boardinfo() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GuildData::clear_has_boardinfo() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GuildData::clear_boardinfo() {
  if (boardinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    boardinfo_->clear();
  }
  clear_has_boardinfo();
}
inline const ::std::string& GuildData::boardinfo() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildData.boardinfo)
  return *boardinfo_;
}
inline void GuildData::set_boardinfo(const ::std::string& value) {
  set_has_boardinfo();
  if (boardinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    boardinfo_ = new ::std::string;
  }
  boardinfo_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildData.boardinfo)
}
inline void GuildData::set_boardinfo(const char* value) {
  set_has_boardinfo();
  if (boardinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    boardinfo_ = new ::std::string;
  }
  boardinfo_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildData.boardinfo)
}
inline void GuildData::set_boardinfo(const char* value, size_t size) {
  set_has_boardinfo();
  if (boardinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    boardinfo_ = new ::std::string;
  }
  boardinfo_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildData.boardinfo)
}
inline ::std::string* GuildData::mutable_boardinfo() {
  set_has_boardinfo();
  if (boardinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    boardinfo_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildData.boardinfo)
  return boardinfo_;
}
inline ::std::string* GuildData::release_boardinfo() {
  clear_has_boardinfo();
  if (boardinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = boardinfo_;
    boardinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildData::set_allocated_boardinfo(::std::string* boardinfo) {
  if (boardinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete boardinfo_;
  }
  if (boardinfo) {
    set_has_boardinfo();
    boardinfo_ = boardinfo;
  } else {
    clear_has_boardinfo();
    boardinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildData.boardinfo)
}

// optional string recruitinfo = 14;
inline bool GuildData::has_recruitinfo() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GuildData::set_has_recruitinfo() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GuildData::clear_has_recruitinfo() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GuildData::clear_recruitinfo() {
  if (recruitinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recruitinfo_->clear();
  }
  clear_has_recruitinfo();
}
inline const ::std::string& GuildData::recruitinfo() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildData.recruitinfo)
  return *recruitinfo_;
}
inline void GuildData::set_recruitinfo(const ::std::string& value) {
  set_has_recruitinfo();
  if (recruitinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recruitinfo_ = new ::std::string;
  }
  recruitinfo_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildData.recruitinfo)
}
inline void GuildData::set_recruitinfo(const char* value) {
  set_has_recruitinfo();
  if (recruitinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recruitinfo_ = new ::std::string;
  }
  recruitinfo_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildData.recruitinfo)
}
inline void GuildData::set_recruitinfo(const char* value, size_t size) {
  set_has_recruitinfo();
  if (recruitinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recruitinfo_ = new ::std::string;
  }
  recruitinfo_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildData.recruitinfo)
}
inline ::std::string* GuildData::mutable_recruitinfo() {
  set_has_recruitinfo();
  if (recruitinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recruitinfo_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildData.recruitinfo)
  return recruitinfo_;
}
inline ::std::string* GuildData::release_recruitinfo() {
  clear_has_recruitinfo();
  if (recruitinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = recruitinfo_;
    recruitinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildData::set_allocated_recruitinfo(::std::string* recruitinfo) {
  if (recruitinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete recruitinfo_;
  }
  if (recruitinfo) {
    set_has_recruitinfo();
    recruitinfo_ = recruitinfo;
  } else {
    clear_has_recruitinfo();
    recruitinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildData.recruitinfo)
}

// repeated .Cmd.GuildMember members = 15;
inline int GuildData::members_size() const {
  return members_.size();
}
inline void GuildData::clear_members() {
  members_.Clear();
}
inline const ::Cmd::GuildMember& GuildData::members(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildData.members)
  return members_.Get(index);
}
inline ::Cmd::GuildMember* GuildData::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildData.members)
  return members_.Mutable(index);
}
inline ::Cmd::GuildMember* GuildData::add_members() {
  // @@protoc_insertion_point(field_add:Cmd.GuildData.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMember >&
GuildData::members() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildData.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMember >*
GuildData::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildData.members)
  return &members_;
}

// repeated .Cmd.GuildApply applys = 16;
inline int GuildData::applys_size() const {
  return applys_.size();
}
inline void GuildData::clear_applys() {
  applys_.Clear();
}
inline const ::Cmd::GuildApply& GuildData::applys(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildData.applys)
  return applys_.Get(index);
}
inline ::Cmd::GuildApply* GuildData::mutable_applys(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildData.applys)
  return applys_.Mutable(index);
}
inline ::Cmd::GuildApply* GuildData::add_applys() {
  // @@protoc_insertion_point(field_add:Cmd.GuildData.applys)
  return applys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildApply >&
GuildData::applys() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildData.applys)
  return applys_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildApply >*
GuildData::mutable_applys() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildData.applys)
  return &applys_;
}

// repeated .Cmd.GuildJob jobs = 17;
inline int GuildData::jobs_size() const {
  return jobs_.size();
}
inline void GuildData::clear_jobs() {
  jobs_.Clear();
}
inline const ::Cmd::GuildJob& GuildData::jobs(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildData.jobs)
  return jobs_.Get(index);
}
inline ::Cmd::GuildJob* GuildData::mutable_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildData.jobs)
  return jobs_.Mutable(index);
}
inline ::Cmd::GuildJob* GuildData::add_jobs() {
  // @@protoc_insertion_point(field_add:Cmd.GuildData.jobs)
  return jobs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildJob >&
GuildData::jobs() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildData.jobs)
  return jobs_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildJob >*
GuildData::mutable_jobs() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildData.jobs)
  return &jobs_;
}

// optional uint32 assettoday = 18 [default = 0];
inline bool GuildData::has_assettoday() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GuildData::set_has_assettoday() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GuildData::clear_has_assettoday() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GuildData::clear_assettoday() {
  assettoday_ = 0u;
  clear_has_assettoday();
}
inline ::google::protobuf::uint32 GuildData::assettoday() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildData.assettoday)
  return assettoday_;
}
inline void GuildData::set_assettoday(::google::protobuf::uint32 value) {
  set_has_assettoday();
  assettoday_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildData.assettoday)
}

// optional uint32 citygiveuptime = 19 [default = 0];
inline bool GuildData::has_citygiveuptime() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void GuildData::set_has_citygiveuptime() {
  _has_bits_[0] |= 0x00010000u;
}
inline void GuildData::clear_has_citygiveuptime() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void GuildData::clear_citygiveuptime() {
  citygiveuptime_ = 0u;
  clear_has_citygiveuptime();
}
inline ::google::protobuf::uint32 GuildData::citygiveuptime() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildData.citygiveuptime)
  return citygiveuptime_;
}
inline void GuildData::set_citygiveuptime(::google::protobuf::uint32 value) {
  set_has_citygiveuptime();
  citygiveuptime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildData.citygiveuptime)
}

// optional uint32 openfunction = 20 [default = 0];
inline bool GuildData::has_openfunction() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void GuildData::set_has_openfunction() {
  _has_bits_[0] |= 0x00020000u;
}
inline void GuildData::clear_has_openfunction() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void GuildData::clear_openfunction() {
  openfunction_ = 0u;
  clear_has_openfunction();
}
inline ::google::protobuf::uint32 GuildData::openfunction() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildData.openfunction)
  return openfunction_;
}
inline void GuildData::set_openfunction(::google::protobuf::uint32 value) {
  set_has_openfunction();
  openfunction_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildData.openfunction)
}

// repeated .Cmd.GuildChallenge challenges = 21;
inline int GuildData::challenges_size() const {
  return challenges_.size();
}
inline void GuildData::clear_challenges() {
  challenges_.Clear();
}
inline const ::Cmd::GuildChallenge& GuildData::challenges(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildData.challenges)
  return challenges_.Get(index);
}
inline ::Cmd::GuildChallenge* GuildData::mutable_challenges(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildData.challenges)
  return challenges_.Mutable(index);
}
inline ::Cmd::GuildChallenge* GuildData::add_challenges() {
  // @@protoc_insertion_point(field_add:Cmd.GuildData.challenges)
  return challenges_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallenge >&
GuildData::challenges() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildData.challenges)
  return challenges_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallenge >*
GuildData::mutable_challenges() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildData.challenges)
  return &challenges_;
}

// optional uint32 gvg_treasure_count = 22 [default = 0];
inline bool GuildData::has_gvg_treasure_count() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void GuildData::set_has_gvg_treasure_count() {
  _has_bits_[0] |= 0x00080000u;
}
inline void GuildData::clear_has_gvg_treasure_count() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void GuildData::clear_gvg_treasure_count() {
  gvg_treasure_count_ = 0u;
  clear_has_gvg_treasure_count();
}
inline ::google::protobuf::uint32 GuildData::gvg_treasure_count() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildData.gvg_treasure_count)
  return gvg_treasure_count_;
}
inline void GuildData::set_gvg_treasure_count(::google::protobuf::uint32 value) {
  set_has_gvg_treasure_count();
  gvg_treasure_count_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildData.gvg_treasure_count)
}

// optional uint32 guild_treasure_count = 23 [default = 0];
inline bool GuildData::has_guild_treasure_count() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void GuildData::set_has_guild_treasure_count() {
  _has_bits_[0] |= 0x00100000u;
}
inline void GuildData::clear_has_guild_treasure_count() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void GuildData::clear_guild_treasure_count() {
  guild_treasure_count_ = 0u;
  clear_has_guild_treasure_count();
}
inline ::google::protobuf::uint32 GuildData::guild_treasure_count() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildData.guild_treasure_count)
  return guild_treasure_count_;
}
inline void GuildData::set_guild_treasure_count(::google::protobuf::uint32 value) {
  set_has_guild_treasure_count();
  guild_treasure_count_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildData.guild_treasure_count)
}

// optional uint32 bcoin_treasure_count = 24 [default = 0];
inline bool GuildData::has_bcoin_treasure_count() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void GuildData::set_has_bcoin_treasure_count() {
  _has_bits_[0] |= 0x00200000u;
}
inline void GuildData::clear_has_bcoin_treasure_count() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void GuildData::clear_bcoin_treasure_count() {
  bcoin_treasure_count_ = 0u;
  clear_has_bcoin_treasure_count();
}
inline ::google::protobuf::uint32 GuildData::bcoin_treasure_count() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildData.bcoin_treasure_count)
  return bcoin_treasure_count_;
}
inline void GuildData::set_bcoin_treasure_count(::google::protobuf::uint32 value) {
  set_has_bcoin_treasure_count();
  bcoin_treasure_count_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildData.bcoin_treasure_count)
}

// optional bool insupergvg = 25 [default = false];
inline bool GuildData::has_insupergvg() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void GuildData::set_has_insupergvg() {
  _has_bits_[0] |= 0x00400000u;
}
inline void GuildData::clear_has_insupergvg() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void GuildData::clear_insupergvg() {
  insupergvg_ = false;
  clear_has_insupergvg();
}
inline bool GuildData::insupergvg() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildData.insupergvg)
  return insupergvg_;
}
inline void GuildData::set_insupergvg(bool value) {
  set_has_insupergvg();
  insupergvg_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildData.insupergvg)
}

// optional uint32 supergvg_lv = 26 [default = 0];
inline bool GuildData::has_supergvg_lv() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void GuildData::set_has_supergvg_lv() {
  _has_bits_[0] |= 0x00800000u;
}
inline void GuildData::clear_has_supergvg_lv() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void GuildData::clear_supergvg_lv() {
  supergvg_lv_ = 0u;
  clear_has_supergvg_lv();
}
inline ::google::protobuf::uint32 GuildData::supergvg_lv() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildData.supergvg_lv)
  return supergvg_lv_;
}
inline void GuildData::set_supergvg_lv(::google::protobuf::uint32 value) {
  set_has_supergvg_lv();
  supergvg_lv_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildData.supergvg_lv)
}

// -------------------------------------------------------------------

// QueryGuildListGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool QueryGuildListGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryGuildListGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryGuildListGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryGuildListGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command QueryGuildListGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryGuildListGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryGuildListGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryGuildListGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_GUILDLIST];
inline bool QueryGuildListGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryGuildListGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryGuildListGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryGuildListGuildCmd::clear_param() {
  param_ = 1;
  clear_has_param();
}
inline ::Cmd::GuildParam QueryGuildListGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryGuildListGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void QueryGuildListGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryGuildListGuildCmd.param)
}

// optional string keyword = 3;
inline bool QueryGuildListGuildCmd::has_keyword() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryGuildListGuildCmd::set_has_keyword() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryGuildListGuildCmd::clear_has_keyword() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryGuildListGuildCmd::clear_keyword() {
  if (keyword_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    keyword_->clear();
  }
  clear_has_keyword();
}
inline const ::std::string& QueryGuildListGuildCmd::keyword() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryGuildListGuildCmd.keyword)
  return *keyword_;
}
inline void QueryGuildListGuildCmd::set_keyword(const ::std::string& value) {
  set_has_keyword();
  if (keyword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    keyword_ = new ::std::string;
  }
  keyword_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.QueryGuildListGuildCmd.keyword)
}
inline void QueryGuildListGuildCmd::set_keyword(const char* value) {
  set_has_keyword();
  if (keyword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    keyword_ = new ::std::string;
  }
  keyword_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.QueryGuildListGuildCmd.keyword)
}
inline void QueryGuildListGuildCmd::set_keyword(const char* value, size_t size) {
  set_has_keyword();
  if (keyword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    keyword_ = new ::std::string;
  }
  keyword_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.QueryGuildListGuildCmd.keyword)
}
inline ::std::string* QueryGuildListGuildCmd::mutable_keyword() {
  set_has_keyword();
  if (keyword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    keyword_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.QueryGuildListGuildCmd.keyword)
  return keyword_;
}
inline ::std::string* QueryGuildListGuildCmd::release_keyword() {
  clear_has_keyword();
  if (keyword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = keyword_;
    keyword_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void QueryGuildListGuildCmd::set_allocated_keyword(::std::string* keyword) {
  if (keyword_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete keyword_;
  }
  if (keyword) {
    set_has_keyword();
    keyword_ = keyword;
  } else {
    clear_has_keyword();
    keyword_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.QueryGuildListGuildCmd.keyword)
}

// optional uint32 page = 4 [default = 0];
inline bool QueryGuildListGuildCmd::has_page() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryGuildListGuildCmd::set_has_page() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryGuildListGuildCmd::clear_has_page() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryGuildListGuildCmd::clear_page() {
  page_ = 0u;
  clear_has_page();
}
inline ::google::protobuf::uint32 QueryGuildListGuildCmd::page() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryGuildListGuildCmd.page)
  return page_;
}
inline void QueryGuildListGuildCmd::set_page(::google::protobuf::uint32 value) {
  set_has_page();
  page_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryGuildListGuildCmd.page)
}

// repeated .Cmd.GuildSummaryData list = 5;
inline int QueryGuildListGuildCmd::list_size() const {
  return list_.size();
}
inline void QueryGuildListGuildCmd::clear_list() {
  list_.Clear();
}
inline const ::Cmd::GuildSummaryData& QueryGuildListGuildCmd::list(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QueryGuildListGuildCmd.list)
  return list_.Get(index);
}
inline ::Cmd::GuildSummaryData* QueryGuildListGuildCmd::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.QueryGuildListGuildCmd.list)
  return list_.Mutable(index);
}
inline ::Cmd::GuildSummaryData* QueryGuildListGuildCmd::add_list() {
  // @@protoc_insertion_point(field_add:Cmd.QueryGuildListGuildCmd.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildSummaryData >&
QueryGuildListGuildCmd::list() const {
  // @@protoc_insertion_point(field_list:Cmd.QueryGuildListGuildCmd.list)
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildSummaryData >*
QueryGuildListGuildCmd::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QueryGuildListGuildCmd.list)
  return &list_;
}

// -------------------------------------------------------------------

// CreateGuildGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool CreateGuildGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateGuildGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateGuildGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateGuildGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command CreateGuildGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.CreateGuildGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void CreateGuildGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CreateGuildGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_CREATEGUILD];
inline bool CreateGuildGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateGuildGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateGuildGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateGuildGuildCmd::clear_param() {
  param_ = 2;
  clear_has_param();
}
inline ::Cmd::GuildParam CreateGuildGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.CreateGuildGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void CreateGuildGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CreateGuildGuildCmd.param)
}

// optional string name = 3;
inline bool CreateGuildGuildCmd::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateGuildGuildCmd::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateGuildGuildCmd::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateGuildGuildCmd::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CreateGuildGuildCmd::name() const {
  // @@protoc_insertion_point(field_get:Cmd.CreateGuildGuildCmd.name)
  return *name_;
}
inline void CreateGuildGuildCmd::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.CreateGuildGuildCmd.name)
}
inline void CreateGuildGuildCmd::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.CreateGuildGuildCmd.name)
}
inline void CreateGuildGuildCmd::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.CreateGuildGuildCmd.name)
}
inline ::std::string* CreateGuildGuildCmd::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.CreateGuildGuildCmd.name)
  return name_;
}
inline ::std::string* CreateGuildGuildCmd::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreateGuildGuildCmd::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.CreateGuildGuildCmd.name)
}

// -------------------------------------------------------------------

// EnterGuildGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool EnterGuildGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterGuildGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterGuildGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterGuildGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command EnterGuildGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterGuildGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void EnterGuildGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterGuildGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_ENTERGUILD];
inline bool EnterGuildGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterGuildGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterGuildGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterGuildGuildCmd::clear_param() {
  param_ = 3;
  clear_has_param();
}
inline ::Cmd::GuildParam EnterGuildGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterGuildGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void EnterGuildGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterGuildGuildCmd.param)
}

// optional .Cmd.GuildData data = 3;
inline bool EnterGuildGuildCmd::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnterGuildGuildCmd::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnterGuildGuildCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnterGuildGuildCmd::clear_data() {
  if (data_ != NULL) data_->::Cmd::GuildData::Clear();
  clear_has_data();
}
inline const ::Cmd::GuildData& EnterGuildGuildCmd::data() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterGuildGuildCmd.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Cmd::GuildData* EnterGuildGuildCmd::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Cmd::GuildData;
  // @@protoc_insertion_point(field_mutable:Cmd.EnterGuildGuildCmd.data)
  return data_;
}
inline ::Cmd::GuildData* EnterGuildGuildCmd::release_data() {
  clear_has_data();
  ::Cmd::GuildData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void EnterGuildGuildCmd::set_allocated_data(::Cmd::GuildData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.EnterGuildGuildCmd.data)
}

// -------------------------------------------------------------------

// GuildMemberUpdateGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool GuildMemberUpdateGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMemberUpdateGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMemberUpdateGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMemberUpdateGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command GuildMemberUpdateGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMemberUpdateGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildMemberUpdateGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMemberUpdateGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_MEMBERUPDATE];
inline bool GuildMemberUpdateGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMemberUpdateGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMemberUpdateGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMemberUpdateGuildCmd::clear_param() {
  param_ = 4;
  clear_has_param();
}
inline ::Cmd::GuildParam GuildMemberUpdateGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMemberUpdateGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void GuildMemberUpdateGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMemberUpdateGuildCmd.param)
}

// repeated .Cmd.GuildMember updates = 3;
inline int GuildMemberUpdateGuildCmd::updates_size() const {
  return updates_.size();
}
inline void GuildMemberUpdateGuildCmd::clear_updates() {
  updates_.Clear();
}
inline const ::Cmd::GuildMember& GuildMemberUpdateGuildCmd::updates(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMemberUpdateGuildCmd.updates)
  return updates_.Get(index);
}
inline ::Cmd::GuildMember* GuildMemberUpdateGuildCmd::mutable_updates(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildMemberUpdateGuildCmd.updates)
  return updates_.Mutable(index);
}
inline ::Cmd::GuildMember* GuildMemberUpdateGuildCmd::add_updates() {
  // @@protoc_insertion_point(field_add:Cmd.GuildMemberUpdateGuildCmd.updates)
  return updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMember >&
GuildMemberUpdateGuildCmd::updates() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildMemberUpdateGuildCmd.updates)
  return updates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMember >*
GuildMemberUpdateGuildCmd::mutable_updates() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildMemberUpdateGuildCmd.updates)
  return &updates_;
}

// repeated uint64 dels = 4;
inline int GuildMemberUpdateGuildCmd::dels_size() const {
  return dels_.size();
}
inline void GuildMemberUpdateGuildCmd::clear_dels() {
  dels_.Clear();
}
inline ::google::protobuf::uint64 GuildMemberUpdateGuildCmd::dels(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMemberUpdateGuildCmd.dels)
  return dels_.Get(index);
}
inline void GuildMemberUpdateGuildCmd::set_dels(int index, ::google::protobuf::uint64 value) {
  dels_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.GuildMemberUpdateGuildCmd.dels)
}
inline void GuildMemberUpdateGuildCmd::add_dels(::google::protobuf::uint64 value) {
  dels_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.GuildMemberUpdateGuildCmd.dels)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GuildMemberUpdateGuildCmd::dels() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildMemberUpdateGuildCmd.dels)
  return dels_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GuildMemberUpdateGuildCmd::mutable_dels() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildMemberUpdateGuildCmd.dels)
  return &dels_;
}

// -------------------------------------------------------------------

// GuildApplyUpdateGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool GuildApplyUpdateGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildApplyUpdateGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildApplyUpdateGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildApplyUpdateGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command GuildApplyUpdateGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildApplyUpdateGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildApplyUpdateGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildApplyUpdateGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_APPLYUPDATE];
inline bool GuildApplyUpdateGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildApplyUpdateGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildApplyUpdateGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildApplyUpdateGuildCmd::clear_param() {
  param_ = 5;
  clear_has_param();
}
inline ::Cmd::GuildParam GuildApplyUpdateGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildApplyUpdateGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void GuildApplyUpdateGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildApplyUpdateGuildCmd.param)
}

// repeated .Cmd.GuildApply updates = 3;
inline int GuildApplyUpdateGuildCmd::updates_size() const {
  return updates_.size();
}
inline void GuildApplyUpdateGuildCmd::clear_updates() {
  updates_.Clear();
}
inline const ::Cmd::GuildApply& GuildApplyUpdateGuildCmd::updates(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildApplyUpdateGuildCmd.updates)
  return updates_.Get(index);
}
inline ::Cmd::GuildApply* GuildApplyUpdateGuildCmd::mutable_updates(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildApplyUpdateGuildCmd.updates)
  return updates_.Mutable(index);
}
inline ::Cmd::GuildApply* GuildApplyUpdateGuildCmd::add_updates() {
  // @@protoc_insertion_point(field_add:Cmd.GuildApplyUpdateGuildCmd.updates)
  return updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildApply >&
GuildApplyUpdateGuildCmd::updates() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildApplyUpdateGuildCmd.updates)
  return updates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildApply >*
GuildApplyUpdateGuildCmd::mutable_updates() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildApplyUpdateGuildCmd.updates)
  return &updates_;
}

// repeated uint64 dels = 4;
inline int GuildApplyUpdateGuildCmd::dels_size() const {
  return dels_.size();
}
inline void GuildApplyUpdateGuildCmd::clear_dels() {
  dels_.Clear();
}
inline ::google::protobuf::uint64 GuildApplyUpdateGuildCmd::dels(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildApplyUpdateGuildCmd.dels)
  return dels_.Get(index);
}
inline void GuildApplyUpdateGuildCmd::set_dels(int index, ::google::protobuf::uint64 value) {
  dels_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.GuildApplyUpdateGuildCmd.dels)
}
inline void GuildApplyUpdateGuildCmd::add_dels(::google::protobuf::uint64 value) {
  dels_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.GuildApplyUpdateGuildCmd.dels)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GuildApplyUpdateGuildCmd::dels() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildApplyUpdateGuildCmd.dels)
  return dels_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GuildApplyUpdateGuildCmd::mutable_dels() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildApplyUpdateGuildCmd.dels)
  return &dels_;
}

// -------------------------------------------------------------------

// GuildDataUpdate

// optional .Cmd.EGuildData type = 1 [default = EGUILDDATA_MIN];
inline bool GuildDataUpdate::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildDataUpdate::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildDataUpdate::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildDataUpdate::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::EGuildData GuildDataUpdate::type() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildDataUpdate.type)
  return static_cast< ::Cmd::EGuildData >(type_);
}
inline void GuildDataUpdate::set_type(::Cmd::EGuildData value) {
  assert(::Cmd::EGuildData_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildDataUpdate.type)
}

// optional uint64 value = 2 [default = 0];
inline bool GuildDataUpdate::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildDataUpdate::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildDataUpdate::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildDataUpdate::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 GuildDataUpdate::value() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildDataUpdate.value)
  return value_;
}
inline void GuildDataUpdate::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildDataUpdate.value)
}

// optional string data = 3;
inline bool GuildDataUpdate::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildDataUpdate::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildDataUpdate::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildDataUpdate::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& GuildDataUpdate::data() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildDataUpdate.data)
  return *data_;
}
inline void GuildDataUpdate::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildDataUpdate.data)
}
inline void GuildDataUpdate::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildDataUpdate.data)
}
inline void GuildDataUpdate::set_data(const char* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildDataUpdate.data)
}
inline ::std::string* GuildDataUpdate::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildDataUpdate.data)
  return data_;
}
inline ::std::string* GuildDataUpdate::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildDataUpdate::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildDataUpdate.data)
}

// -------------------------------------------------------------------

// GuildDataUpdateGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool GuildDataUpdateGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildDataUpdateGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildDataUpdateGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildDataUpdateGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command GuildDataUpdateGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildDataUpdateGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildDataUpdateGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildDataUpdateGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_GUILDDATAUPDATE];
inline bool GuildDataUpdateGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildDataUpdateGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildDataUpdateGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildDataUpdateGuildCmd::clear_param() {
  param_ = 6;
  clear_has_param();
}
inline ::Cmd::GuildParam GuildDataUpdateGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildDataUpdateGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void GuildDataUpdateGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildDataUpdateGuildCmd.param)
}

// repeated .Cmd.GuildDataUpdate updates = 3;
inline int GuildDataUpdateGuildCmd::updates_size() const {
  return updates_.size();
}
inline void GuildDataUpdateGuildCmd::clear_updates() {
  updates_.Clear();
}
inline const ::Cmd::GuildDataUpdate& GuildDataUpdateGuildCmd::updates(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildDataUpdateGuildCmd.updates)
  return updates_.Get(index);
}
inline ::Cmd::GuildDataUpdate* GuildDataUpdateGuildCmd::mutable_updates(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildDataUpdateGuildCmd.updates)
  return updates_.Mutable(index);
}
inline ::Cmd::GuildDataUpdate* GuildDataUpdateGuildCmd::add_updates() {
  // @@protoc_insertion_point(field_add:Cmd.GuildDataUpdateGuildCmd.updates)
  return updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildDataUpdate >&
GuildDataUpdateGuildCmd::updates() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildDataUpdateGuildCmd.updates)
  return updates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildDataUpdate >*
GuildDataUpdateGuildCmd::mutable_updates() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildDataUpdateGuildCmd.updates)
  return &updates_;
}

// -------------------------------------------------------------------

// GuildMemberDataUpdate

// optional .Cmd.EGuildMemberData type = 1 [default = EGUILDMEMBERDATA_MIN];
inline bool GuildMemberDataUpdate::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMemberDataUpdate::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMemberDataUpdate::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMemberDataUpdate::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::EGuildMemberData GuildMemberDataUpdate::type() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMemberDataUpdate.type)
  return static_cast< ::Cmd::EGuildMemberData >(type_);
}
inline void GuildMemberDataUpdate::set_type(::Cmd::EGuildMemberData value) {
  assert(::Cmd::EGuildMemberData_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMemberDataUpdate.type)
}

// optional uint64 value = 2 [default = 0];
inline bool GuildMemberDataUpdate::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMemberDataUpdate::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMemberDataUpdate::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMemberDataUpdate::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 GuildMemberDataUpdate::value() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMemberDataUpdate.value)
  return value_;
}
inline void GuildMemberDataUpdate::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMemberDataUpdate.value)
}

// optional string data = 3;
inline bool GuildMemberDataUpdate::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildMemberDataUpdate::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildMemberDataUpdate::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildMemberDataUpdate::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& GuildMemberDataUpdate::data() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMemberDataUpdate.data)
  return *data_;
}
inline void GuildMemberDataUpdate::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildMemberDataUpdate.data)
}
inline void GuildMemberDataUpdate::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildMemberDataUpdate.data)
}
inline void GuildMemberDataUpdate::set_data(const char* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildMemberDataUpdate.data)
}
inline ::std::string* GuildMemberDataUpdate::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildMemberDataUpdate.data)
  return data_;
}
inline ::std::string* GuildMemberDataUpdate::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildMemberDataUpdate::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildMemberDataUpdate.data)
}

// -------------------------------------------------------------------

// GuildMemberDataUpdateGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool GuildMemberDataUpdateGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMemberDataUpdateGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMemberDataUpdateGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMemberDataUpdateGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command GuildMemberDataUpdateGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMemberDataUpdateGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildMemberDataUpdateGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMemberDataUpdateGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_MEMBERDATAUPDATE];
inline bool GuildMemberDataUpdateGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMemberDataUpdateGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMemberDataUpdateGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMemberDataUpdateGuildCmd::clear_param() {
  param_ = 7;
  clear_has_param();
}
inline ::Cmd::GuildParam GuildMemberDataUpdateGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMemberDataUpdateGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void GuildMemberDataUpdateGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMemberDataUpdateGuildCmd.param)
}

// optional .Cmd.EGuildList type = 3 [default = EGUILDLIST_MEMBER];
inline bool GuildMemberDataUpdateGuildCmd::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildMemberDataUpdateGuildCmd::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildMemberDataUpdateGuildCmd::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildMemberDataUpdateGuildCmd::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::Cmd::EGuildList GuildMemberDataUpdateGuildCmd::type() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMemberDataUpdateGuildCmd.type)
  return static_cast< ::Cmd::EGuildList >(type_);
}
inline void GuildMemberDataUpdateGuildCmd::set_type(::Cmd::EGuildList value) {
  assert(::Cmd::EGuildList_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMemberDataUpdateGuildCmd.type)
}

// optional uint64 charid = 4 [default = 0];
inline bool GuildMemberDataUpdateGuildCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildMemberDataUpdateGuildCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildMemberDataUpdateGuildCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildMemberDataUpdateGuildCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GuildMemberDataUpdateGuildCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMemberDataUpdateGuildCmd.charid)
  return charid_;
}
inline void GuildMemberDataUpdateGuildCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMemberDataUpdateGuildCmd.charid)
}

// repeated .Cmd.GuildMemberDataUpdate updates = 5;
inline int GuildMemberDataUpdateGuildCmd::updates_size() const {
  return updates_.size();
}
inline void GuildMemberDataUpdateGuildCmd::clear_updates() {
  updates_.Clear();
}
inline const ::Cmd::GuildMemberDataUpdate& GuildMemberDataUpdateGuildCmd::updates(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMemberDataUpdateGuildCmd.updates)
  return updates_.Get(index);
}
inline ::Cmd::GuildMemberDataUpdate* GuildMemberDataUpdateGuildCmd::mutable_updates(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildMemberDataUpdateGuildCmd.updates)
  return updates_.Mutable(index);
}
inline ::Cmd::GuildMemberDataUpdate* GuildMemberDataUpdateGuildCmd::add_updates() {
  // @@protoc_insertion_point(field_add:Cmd.GuildMemberDataUpdateGuildCmd.updates)
  return updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMemberDataUpdate >&
GuildMemberDataUpdateGuildCmd::updates() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildMemberDataUpdateGuildCmd.updates)
  return updates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMemberDataUpdate >*
GuildMemberDataUpdateGuildCmd::mutable_updates() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildMemberDataUpdateGuildCmd.updates)
  return &updates_;
}

// -------------------------------------------------------------------

// ApplyGuildGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool ApplyGuildGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyGuildGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ApplyGuildGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ApplyGuildGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command ApplyGuildGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ApplyGuildGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ApplyGuildGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ApplyGuildGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_APPLYGUILD];
inline bool ApplyGuildGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApplyGuildGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ApplyGuildGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ApplyGuildGuildCmd::clear_param() {
  param_ = 8;
  clear_has_param();
}
inline ::Cmd::GuildParam ApplyGuildGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ApplyGuildGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void ApplyGuildGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ApplyGuildGuildCmd.param)
}

// optional uint64 guid = 3 [default = 0];
inline bool ApplyGuildGuildCmd::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ApplyGuildGuildCmd::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ApplyGuildGuildCmd::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ApplyGuildGuildCmd::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 ApplyGuildGuildCmd::guid() const {
  // @@protoc_insertion_point(field_get:Cmd.ApplyGuildGuildCmd.guid)
  return guid_;
}
inline void ApplyGuildGuildCmd::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ApplyGuildGuildCmd.guid)
}

// -------------------------------------------------------------------

// ProcessApplyGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool ProcessApplyGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProcessApplyGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProcessApplyGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProcessApplyGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command ProcessApplyGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ProcessApplyGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ProcessApplyGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ProcessApplyGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_PROCESSAPPLY];
inline bool ProcessApplyGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProcessApplyGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProcessApplyGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProcessApplyGuildCmd::clear_param() {
  param_ = 9;
  clear_has_param();
}
inline ::Cmd::GuildParam ProcessApplyGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ProcessApplyGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void ProcessApplyGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ProcessApplyGuildCmd.param)
}

// optional .Cmd.EGuildAction action = 3 [default = EGUILDACTION_MIN];
inline bool ProcessApplyGuildCmd::has_action() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProcessApplyGuildCmd::set_has_action() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProcessApplyGuildCmd::clear_has_action() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProcessApplyGuildCmd::clear_action() {
  action_ = 0;
  clear_has_action();
}
inline ::Cmd::EGuildAction ProcessApplyGuildCmd::action() const {
  // @@protoc_insertion_point(field_get:Cmd.ProcessApplyGuildCmd.action)
  return static_cast< ::Cmd::EGuildAction >(action_);
}
inline void ProcessApplyGuildCmd::set_action(::Cmd::EGuildAction value) {
  assert(::Cmd::EGuildAction_IsValid(value));
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ProcessApplyGuildCmd.action)
}

// optional uint64 charid = 4 [default = 0];
inline bool ProcessApplyGuildCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProcessApplyGuildCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProcessApplyGuildCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProcessApplyGuildCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ProcessApplyGuildCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.ProcessApplyGuildCmd.charid)
  return charid_;
}
inline void ProcessApplyGuildCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ProcessApplyGuildCmd.charid)
}

// -------------------------------------------------------------------

// InviteMemberGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool InviteMemberGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InviteMemberGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InviteMemberGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InviteMemberGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command InviteMemberGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.InviteMemberGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void InviteMemberGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.InviteMemberGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_INVITEMEMBER];
inline bool InviteMemberGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InviteMemberGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InviteMemberGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InviteMemberGuildCmd::clear_param() {
  param_ = 10;
  clear_has_param();
}
inline ::Cmd::GuildParam InviteMemberGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.InviteMemberGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void InviteMemberGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.InviteMemberGuildCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool InviteMemberGuildCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InviteMemberGuildCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InviteMemberGuildCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InviteMemberGuildCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 InviteMemberGuildCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.InviteMemberGuildCmd.charid)
  return charid_;
}
inline void InviteMemberGuildCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.InviteMemberGuildCmd.charid)
}

// optional uint64 guildid = 4 [default = 0];
inline bool InviteMemberGuildCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InviteMemberGuildCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InviteMemberGuildCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InviteMemberGuildCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 InviteMemberGuildCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.InviteMemberGuildCmd.guildid)
  return guildid_;
}
inline void InviteMemberGuildCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.InviteMemberGuildCmd.guildid)
}

// optional string guildname = 5;
inline bool InviteMemberGuildCmd::has_guildname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InviteMemberGuildCmd::set_has_guildname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InviteMemberGuildCmd::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InviteMemberGuildCmd::clear_guildname() {
  if (guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_->clear();
  }
  clear_has_guildname();
}
inline const ::std::string& InviteMemberGuildCmd::guildname() const {
  // @@protoc_insertion_point(field_get:Cmd.InviteMemberGuildCmd.guildname)
  return *guildname_;
}
inline void InviteMemberGuildCmd::set_guildname(const ::std::string& value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.InviteMemberGuildCmd.guildname)
}
inline void InviteMemberGuildCmd::set_guildname(const char* value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.InviteMemberGuildCmd.guildname)
}
inline void InviteMemberGuildCmd::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.InviteMemberGuildCmd.guildname)
}
inline ::std::string* InviteMemberGuildCmd::mutable_guildname() {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.InviteMemberGuildCmd.guildname)
  return guildname_;
}
inline ::std::string* InviteMemberGuildCmd::release_guildname() {
  clear_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guildname_;
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void InviteMemberGuildCmd::set_allocated_guildname(::std::string* guildname) {
  if (guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guildname_;
  }
  if (guildname) {
    set_has_guildname();
    guildname_ = guildname;
  } else {
    clear_has_guildname();
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.InviteMemberGuildCmd.guildname)
}

// optional string invitename = 6;
inline bool InviteMemberGuildCmd::has_invitename() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void InviteMemberGuildCmd::set_has_invitename() {
  _has_bits_[0] |= 0x00000020u;
}
inline void InviteMemberGuildCmd::clear_has_invitename() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void InviteMemberGuildCmd::clear_invitename() {
  if (invitename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitename_->clear();
  }
  clear_has_invitename();
}
inline const ::std::string& InviteMemberGuildCmd::invitename() const {
  // @@protoc_insertion_point(field_get:Cmd.InviteMemberGuildCmd.invitename)
  return *invitename_;
}
inline void InviteMemberGuildCmd::set_invitename(const ::std::string& value) {
  set_has_invitename();
  if (invitename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitename_ = new ::std::string;
  }
  invitename_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.InviteMemberGuildCmd.invitename)
}
inline void InviteMemberGuildCmd::set_invitename(const char* value) {
  set_has_invitename();
  if (invitename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitename_ = new ::std::string;
  }
  invitename_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.InviteMemberGuildCmd.invitename)
}
inline void InviteMemberGuildCmd::set_invitename(const char* value, size_t size) {
  set_has_invitename();
  if (invitename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitename_ = new ::std::string;
  }
  invitename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.InviteMemberGuildCmd.invitename)
}
inline ::std::string* InviteMemberGuildCmd::mutable_invitename() {
  set_has_invitename();
  if (invitename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.InviteMemberGuildCmd.invitename)
  return invitename_;
}
inline ::std::string* InviteMemberGuildCmd::release_invitename() {
  clear_has_invitename();
  if (invitename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = invitename_;
    invitename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void InviteMemberGuildCmd::set_allocated_invitename(::std::string* invitename) {
  if (invitename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete invitename_;
  }
  if (invitename) {
    set_has_invitename();
    invitename_ = invitename;
  } else {
    clear_has_invitename();
    invitename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.InviteMemberGuildCmd.invitename)
}

// -------------------------------------------------------------------

// ProcessInviteGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool ProcessInviteGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProcessInviteGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProcessInviteGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProcessInviteGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command ProcessInviteGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ProcessInviteGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ProcessInviteGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ProcessInviteGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_PROCESSINVITEMEMBER];
inline bool ProcessInviteGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProcessInviteGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProcessInviteGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProcessInviteGuildCmd::clear_param() {
  param_ = 11;
  clear_has_param();
}
inline ::Cmd::GuildParam ProcessInviteGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ProcessInviteGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void ProcessInviteGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ProcessInviteGuildCmd.param)
}

// optional .Cmd.EGuildAction action = 3 [default = EGUILDACTION_MIN];
inline bool ProcessInviteGuildCmd::has_action() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProcessInviteGuildCmd::set_has_action() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProcessInviteGuildCmd::clear_has_action() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProcessInviteGuildCmd::clear_action() {
  action_ = 0;
  clear_has_action();
}
inline ::Cmd::EGuildAction ProcessInviteGuildCmd::action() const {
  // @@protoc_insertion_point(field_get:Cmd.ProcessInviteGuildCmd.action)
  return static_cast< ::Cmd::EGuildAction >(action_);
}
inline void ProcessInviteGuildCmd::set_action(::Cmd::EGuildAction value) {
  assert(::Cmd::EGuildAction_IsValid(value));
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ProcessInviteGuildCmd.action)
}

// optional uint64 guid = 4 [default = 0];
inline bool ProcessInviteGuildCmd::has_guid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProcessInviteGuildCmd::set_has_guid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProcessInviteGuildCmd::clear_has_guid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProcessInviteGuildCmd::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 ProcessInviteGuildCmd::guid() const {
  // @@protoc_insertion_point(field_get:Cmd.ProcessInviteGuildCmd.guid)
  return guid_;
}
inline void ProcessInviteGuildCmd::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ProcessInviteGuildCmd.guid)
}

// -------------------------------------------------------------------

// SetGuildOptionGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool SetGuildOptionGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetGuildOptionGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetGuildOptionGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetGuildOptionGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command SetGuildOptionGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SetGuildOptionGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SetGuildOptionGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SetGuildOptionGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_SETOPTION];
inline bool SetGuildOptionGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetGuildOptionGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetGuildOptionGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetGuildOptionGuildCmd::clear_param() {
  param_ = 12;
  clear_has_param();
}
inline ::Cmd::GuildParam SetGuildOptionGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SetGuildOptionGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void SetGuildOptionGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SetGuildOptionGuildCmd.param)
}

// optional string board = 3;
inline bool SetGuildOptionGuildCmd::has_board() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetGuildOptionGuildCmd::set_has_board() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetGuildOptionGuildCmd::clear_has_board() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetGuildOptionGuildCmd::clear_board() {
  if (board_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    board_->clear();
  }
  clear_has_board();
}
inline const ::std::string& SetGuildOptionGuildCmd::board() const {
  // @@protoc_insertion_point(field_get:Cmd.SetGuildOptionGuildCmd.board)
  return *board_;
}
inline void SetGuildOptionGuildCmd::set_board(const ::std::string& value) {
  set_has_board();
  if (board_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    board_ = new ::std::string;
  }
  board_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.SetGuildOptionGuildCmd.board)
}
inline void SetGuildOptionGuildCmd::set_board(const char* value) {
  set_has_board();
  if (board_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    board_ = new ::std::string;
  }
  board_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.SetGuildOptionGuildCmd.board)
}
inline void SetGuildOptionGuildCmd::set_board(const char* value, size_t size) {
  set_has_board();
  if (board_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    board_ = new ::std::string;
  }
  board_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.SetGuildOptionGuildCmd.board)
}
inline ::std::string* SetGuildOptionGuildCmd::mutable_board() {
  set_has_board();
  if (board_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    board_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.SetGuildOptionGuildCmd.board)
  return board_;
}
inline ::std::string* SetGuildOptionGuildCmd::release_board() {
  clear_has_board();
  if (board_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = board_;
    board_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SetGuildOptionGuildCmd::set_allocated_board(::std::string* board) {
  if (board_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete board_;
  }
  if (board) {
    set_has_board();
    board_ = board;
  } else {
    clear_has_board();
    board_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.SetGuildOptionGuildCmd.board)
}

// optional string recruit = 4;
inline bool SetGuildOptionGuildCmd::has_recruit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SetGuildOptionGuildCmd::set_has_recruit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SetGuildOptionGuildCmd::clear_has_recruit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SetGuildOptionGuildCmd::clear_recruit() {
  if (recruit_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recruit_->clear();
  }
  clear_has_recruit();
}
inline const ::std::string& SetGuildOptionGuildCmd::recruit() const {
  // @@protoc_insertion_point(field_get:Cmd.SetGuildOptionGuildCmd.recruit)
  return *recruit_;
}
inline void SetGuildOptionGuildCmd::set_recruit(const ::std::string& value) {
  set_has_recruit();
  if (recruit_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recruit_ = new ::std::string;
  }
  recruit_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.SetGuildOptionGuildCmd.recruit)
}
inline void SetGuildOptionGuildCmd::set_recruit(const char* value) {
  set_has_recruit();
  if (recruit_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recruit_ = new ::std::string;
  }
  recruit_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.SetGuildOptionGuildCmd.recruit)
}
inline void SetGuildOptionGuildCmd::set_recruit(const char* value, size_t size) {
  set_has_recruit();
  if (recruit_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recruit_ = new ::std::string;
  }
  recruit_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.SetGuildOptionGuildCmd.recruit)
}
inline ::std::string* SetGuildOptionGuildCmd::mutable_recruit() {
  set_has_recruit();
  if (recruit_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recruit_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.SetGuildOptionGuildCmd.recruit)
  return recruit_;
}
inline ::std::string* SetGuildOptionGuildCmd::release_recruit() {
  clear_has_recruit();
  if (recruit_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = recruit_;
    recruit_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SetGuildOptionGuildCmd::set_allocated_recruit(::std::string* recruit) {
  if (recruit_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete recruit_;
  }
  if (recruit) {
    set_has_recruit();
    recruit_ = recruit;
  } else {
    clear_has_recruit();
    recruit_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.SetGuildOptionGuildCmd.recruit)
}

// optional string portrait = 5;
inline bool SetGuildOptionGuildCmd::has_portrait() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SetGuildOptionGuildCmd::set_has_portrait() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SetGuildOptionGuildCmd::clear_has_portrait() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SetGuildOptionGuildCmd::clear_portrait() {
  if (portrait_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_->clear();
  }
  clear_has_portrait();
}
inline const ::std::string& SetGuildOptionGuildCmd::portrait() const {
  // @@protoc_insertion_point(field_get:Cmd.SetGuildOptionGuildCmd.portrait)
  return *portrait_;
}
inline void SetGuildOptionGuildCmd::set_portrait(const ::std::string& value) {
  set_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_ = new ::std::string;
  }
  portrait_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.SetGuildOptionGuildCmd.portrait)
}
inline void SetGuildOptionGuildCmd::set_portrait(const char* value) {
  set_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_ = new ::std::string;
  }
  portrait_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.SetGuildOptionGuildCmd.portrait)
}
inline void SetGuildOptionGuildCmd::set_portrait(const char* value, size_t size) {
  set_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_ = new ::std::string;
  }
  portrait_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.SetGuildOptionGuildCmd.portrait)
}
inline ::std::string* SetGuildOptionGuildCmd::mutable_portrait() {
  set_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.SetGuildOptionGuildCmd.portrait)
  return portrait_;
}
inline ::std::string* SetGuildOptionGuildCmd::release_portrait() {
  clear_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = portrait_;
    portrait_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SetGuildOptionGuildCmd::set_allocated_portrait(::std::string* portrait) {
  if (portrait_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete portrait_;
  }
  if (portrait) {
    set_has_portrait();
    portrait_ = portrait;
  } else {
    clear_has_portrait();
    portrait_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.SetGuildOptionGuildCmd.portrait)
}

// repeated .Cmd.GuildJob jobs = 6;
inline int SetGuildOptionGuildCmd::jobs_size() const {
  return jobs_.size();
}
inline void SetGuildOptionGuildCmd::clear_jobs() {
  jobs_.Clear();
}
inline const ::Cmd::GuildJob& SetGuildOptionGuildCmd::jobs(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SetGuildOptionGuildCmd.jobs)
  return jobs_.Get(index);
}
inline ::Cmd::GuildJob* SetGuildOptionGuildCmd::mutable_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.SetGuildOptionGuildCmd.jobs)
  return jobs_.Mutable(index);
}
inline ::Cmd::GuildJob* SetGuildOptionGuildCmd::add_jobs() {
  // @@protoc_insertion_point(field_add:Cmd.SetGuildOptionGuildCmd.jobs)
  return jobs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildJob >&
SetGuildOptionGuildCmd::jobs() const {
  // @@protoc_insertion_point(field_list:Cmd.SetGuildOptionGuildCmd.jobs)
  return jobs_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildJob >*
SetGuildOptionGuildCmd::mutable_jobs() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SetGuildOptionGuildCmd.jobs)
  return &jobs_;
}

// -------------------------------------------------------------------

// KickMemberGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool KickMemberGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KickMemberGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KickMemberGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KickMemberGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command KickMemberGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.KickMemberGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void KickMemberGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.KickMemberGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_KICKMEMBER];
inline bool KickMemberGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KickMemberGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KickMemberGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KickMemberGuildCmd::clear_param() {
  param_ = 13;
  clear_has_param();
}
inline ::Cmd::GuildParam KickMemberGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.KickMemberGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void KickMemberGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.KickMemberGuildCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool KickMemberGuildCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void KickMemberGuildCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void KickMemberGuildCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void KickMemberGuildCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 KickMemberGuildCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.KickMemberGuildCmd.charid)
  return charid_;
}
inline void KickMemberGuildCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.KickMemberGuildCmd.charid)
}

// -------------------------------------------------------------------

// ChangeJobGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool ChangeJobGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeJobGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeJobGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeJobGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command ChangeJobGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeJobGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ChangeJobGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeJobGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_CHANGEJOB];
inline bool ChangeJobGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeJobGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeJobGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeJobGuildCmd::clear_param() {
  param_ = 14;
  clear_has_param();
}
inline ::Cmd::GuildParam ChangeJobGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeJobGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void ChangeJobGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeJobGuildCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool ChangeJobGuildCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChangeJobGuildCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChangeJobGuildCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChangeJobGuildCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ChangeJobGuildCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeJobGuildCmd.charid)
  return charid_;
}
inline void ChangeJobGuildCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeJobGuildCmd.charid)
}

// optional .Cmd.EGuildJob job = 4 [default = EGUILDJOB_MIN];
inline bool ChangeJobGuildCmd::has_job() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChangeJobGuildCmd::set_has_job() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChangeJobGuildCmd::clear_has_job() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChangeJobGuildCmd::clear_job() {
  job_ = 0;
  clear_has_job();
}
inline ::Cmd::EGuildJob ChangeJobGuildCmd::job() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeJobGuildCmd.job)
  return static_cast< ::Cmd::EGuildJob >(job_);
}
inline void ChangeJobGuildCmd::set_job(::Cmd::EGuildJob value) {
  assert(::Cmd::EGuildJob_IsValid(value));
  set_has_job();
  job_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeJobGuildCmd.job)
}

// -------------------------------------------------------------------

// ExitGuildGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool ExitGuildGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExitGuildGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExitGuildGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExitGuildGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command ExitGuildGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ExitGuildGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ExitGuildGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ExitGuildGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_EXITGUILD];
inline bool ExitGuildGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExitGuildGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExitGuildGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExitGuildGuildCmd::clear_param() {
  param_ = 15;
  clear_has_param();
}
inline ::Cmd::GuildParam ExitGuildGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ExitGuildGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void ExitGuildGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ExitGuildGuildCmd.param)
}

// -------------------------------------------------------------------

// ExchangeChairGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool ExchangeChairGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExchangeChairGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExchangeChairGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExchangeChairGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command ExchangeChairGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ExchangeChairGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ExchangeChairGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ExchangeChairGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_EXCHANGECHAIR];
inline bool ExchangeChairGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExchangeChairGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExchangeChairGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExchangeChairGuildCmd::clear_param() {
  param_ = 16;
  clear_has_param();
}
inline ::Cmd::GuildParam ExchangeChairGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ExchangeChairGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void ExchangeChairGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ExchangeChairGuildCmd.param)
}

// optional uint64 newcharid = 3 [default = 0];
inline bool ExchangeChairGuildCmd::has_newcharid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExchangeChairGuildCmd::set_has_newcharid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExchangeChairGuildCmd::clear_has_newcharid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExchangeChairGuildCmd::clear_newcharid() {
  newcharid_ = GOOGLE_ULONGLONG(0);
  clear_has_newcharid();
}
inline ::google::protobuf::uint64 ExchangeChairGuildCmd::newcharid() const {
  // @@protoc_insertion_point(field_get:Cmd.ExchangeChairGuildCmd.newcharid)
  return newcharid_;
}
inline void ExchangeChairGuildCmd::set_newcharid(::google::protobuf::uint64 value) {
  set_has_newcharid();
  newcharid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ExchangeChairGuildCmd.newcharid)
}

// -------------------------------------------------------------------

// DismissGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool DismissGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DismissGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DismissGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DismissGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command DismissGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.DismissGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void DismissGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DismissGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_DISMISSGUILD];
inline bool DismissGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DismissGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DismissGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DismissGuildCmd::clear_param() {
  param_ = 17;
  clear_has_param();
}
inline ::Cmd::GuildParam DismissGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.DismissGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void DismissGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DismissGuildCmd.param)
}

// optional bool set = 3 [default = false];
inline bool DismissGuildCmd::has_set() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DismissGuildCmd::set_has_set() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DismissGuildCmd::clear_has_set() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DismissGuildCmd::clear_set() {
  set_ = false;
  clear_has_set();
}
inline bool DismissGuildCmd::set() const {
  // @@protoc_insertion_point(field_get:Cmd.DismissGuildCmd.set)
  return set_;
}
inline void DismissGuildCmd::set_set(bool value) {
  set_has_set();
  set_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DismissGuildCmd.set)
}

// -------------------------------------------------------------------

// LevelupGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool LevelupGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LevelupGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LevelupGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LevelupGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command LevelupGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.LevelupGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void LevelupGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LevelupGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_LEVELUPGUILD];
inline bool LevelupGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LevelupGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LevelupGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LevelupGuildCmd::clear_param() {
  param_ = 18;
  clear_has_param();
}
inline ::Cmd::GuildParam LevelupGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.LevelupGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void LevelupGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LevelupGuildCmd.param)
}

// -------------------------------------------------------------------

// DonateGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool DonateGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DonateGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DonateGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DonateGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command DonateGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.DonateGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void DonateGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DonateGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_DONATE];
inline bool DonateGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DonateGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DonateGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DonateGuildCmd::clear_param() {
  param_ = 19;
  clear_has_param();
}
inline ::Cmd::GuildParam DonateGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.DonateGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void DonateGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DonateGuildCmd.param)
}

// optional uint32 configid = 3 [default = 0];
inline bool DonateGuildCmd::has_configid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DonateGuildCmd::set_has_configid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DonateGuildCmd::clear_has_configid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DonateGuildCmd::clear_configid() {
  configid_ = 0u;
  clear_has_configid();
}
inline ::google::protobuf::uint32 DonateGuildCmd::configid() const {
  // @@protoc_insertion_point(field_get:Cmd.DonateGuildCmd.configid)
  return configid_;
}
inline void DonateGuildCmd::set_configid(::google::protobuf::uint32 value) {
  set_has_configid();
  configid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DonateGuildCmd.configid)
}

// optional uint32 time = 4 [default = 0];
inline bool DonateGuildCmd::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DonateGuildCmd::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DonateGuildCmd::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DonateGuildCmd::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 DonateGuildCmd::time() const {
  // @@protoc_insertion_point(field_get:Cmd.DonateGuildCmd.time)
  return time_;
}
inline void DonateGuildCmd::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DonateGuildCmd.time)
}

// -------------------------------------------------------------------

// DonateItem

// optional uint32 configid = 1 [default = 0];
inline bool DonateItem::has_configid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DonateItem::set_has_configid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DonateItem::clear_has_configid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DonateItem::clear_configid() {
  configid_ = 0u;
  clear_has_configid();
}
inline ::google::protobuf::uint32 DonateItem::configid() const {
  // @@protoc_insertion_point(field_get:Cmd.DonateItem.configid)
  return configid_;
}
inline void DonateItem::set_configid(::google::protobuf::uint32 value) {
  set_has_configid();
  configid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DonateItem.configid)
}

// optional uint32 count = 2 [default = 0];
inline bool DonateItem::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DonateItem::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DonateItem::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DonateItem::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 DonateItem::count() const {
  // @@protoc_insertion_point(field_get:Cmd.DonateItem.count)
  return count_;
}
inline void DonateItem::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DonateItem.count)
}

// optional uint32 time = 3 [default = 0];
inline bool DonateItem::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DonateItem::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DonateItem::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DonateItem::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 DonateItem::time() const {
  // @@protoc_insertion_point(field_get:Cmd.DonateItem.time)
  return time_;
}
inline void DonateItem::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DonateItem.time)
}

// optional uint32 itemid = 4 [default = 0];
inline bool DonateItem::has_itemid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DonateItem::set_has_itemid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DonateItem::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DonateItem::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 DonateItem::itemid() const {
  // @@protoc_insertion_point(field_get:Cmd.DonateItem.itemid)
  return itemid_;
}
inline void DonateItem::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DonateItem.itemid)
}

// optional uint32 itemcount = 5 [default = 0];
inline bool DonateItem::has_itemcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DonateItem::set_has_itemcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DonateItem::clear_has_itemcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DonateItem::clear_itemcount() {
  itemcount_ = 0u;
  clear_has_itemcount();
}
inline ::google::protobuf::uint32 DonateItem::itemcount() const {
  // @@protoc_insertion_point(field_get:Cmd.DonateItem.itemcount)
  return itemcount_;
}
inline void DonateItem::set_itemcount(::google::protobuf::uint32 value) {
  set_has_itemcount();
  itemcount_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DonateItem.itemcount)
}

// optional uint32 contribute = 6 [default = 0];
inline bool DonateItem::has_contribute() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DonateItem::set_has_contribute() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DonateItem::clear_has_contribute() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DonateItem::clear_contribute() {
  contribute_ = 0u;
  clear_has_contribute();
}
inline ::google::protobuf::uint32 DonateItem::contribute() const {
  // @@protoc_insertion_point(field_get:Cmd.DonateItem.contribute)
  return contribute_;
}
inline void DonateItem::set_contribute(::google::protobuf::uint32 value) {
  set_has_contribute();
  contribute_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DonateItem.contribute)
}

// optional uint32 medal = 7 [default = 0];
inline bool DonateItem::has_medal() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DonateItem::set_has_medal() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DonateItem::clear_has_medal() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DonateItem::clear_medal() {
  medal_ = 0u;
  clear_has_medal();
}
inline ::google::protobuf::uint32 DonateItem::medal() const {
  // @@protoc_insertion_point(field_get:Cmd.DonateItem.medal)
  return medal_;
}
inline void DonateItem::set_medal(::google::protobuf::uint32 value) {
  set_has_medal();
  medal_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DonateItem.medal)
}

// -------------------------------------------------------------------

// DonateListGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool DonateListGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DonateListGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DonateListGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DonateListGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command DonateListGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.DonateListGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void DonateListGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DonateListGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_DONATELIST];
inline bool DonateListGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DonateListGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DonateListGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DonateListGuildCmd::clear_param() {
  param_ = 25;
  clear_has_param();
}
inline ::Cmd::GuildParam DonateListGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.DonateListGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void DonateListGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DonateListGuildCmd.param)
}

// repeated .Cmd.DonateItem items = 3;
inline int DonateListGuildCmd::items_size() const {
  return items_.size();
}
inline void DonateListGuildCmd::clear_items() {
  items_.Clear();
}
inline const ::Cmd::DonateItem& DonateListGuildCmd::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.DonateListGuildCmd.items)
  return items_.Get(index);
}
inline ::Cmd::DonateItem* DonateListGuildCmd::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.DonateListGuildCmd.items)
  return items_.Mutable(index);
}
inline ::Cmd::DonateItem* DonateListGuildCmd::add_items() {
  // @@protoc_insertion_point(field_add:Cmd.DonateListGuildCmd.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::DonateItem >&
DonateListGuildCmd::items() const {
  // @@protoc_insertion_point(field_list:Cmd.DonateListGuildCmd.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::DonateItem >*
DonateListGuildCmd::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.DonateListGuildCmd.items)
  return &items_;
}

// -------------------------------------------------------------------

// UpdateDonateItemGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool UpdateDonateItemGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateDonateItemGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateDonateItemGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateDonateItemGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command UpdateDonateItemGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateDonateItemGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UpdateDonateItemGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateDonateItemGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_UPDATEDONATEITEM];
inline bool UpdateDonateItemGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateDonateItemGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateDonateItemGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateDonateItemGuildCmd::clear_param() {
  param_ = 26;
  clear_has_param();
}
inline ::Cmd::GuildParam UpdateDonateItemGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateDonateItemGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void UpdateDonateItemGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateDonateItemGuildCmd.param)
}

// optional .Cmd.DonateItem item = 3;
inline bool UpdateDonateItemGuildCmd::has_item() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateDonateItemGuildCmd::set_has_item() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateDonateItemGuildCmd::clear_has_item() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateDonateItemGuildCmd::clear_item() {
  if (item_ != NULL) item_->::Cmd::DonateItem::Clear();
  clear_has_item();
}
inline const ::Cmd::DonateItem& UpdateDonateItemGuildCmd::item() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateDonateItemGuildCmd.item)
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::Cmd::DonateItem* UpdateDonateItemGuildCmd::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::Cmd::DonateItem;
  // @@protoc_insertion_point(field_mutable:Cmd.UpdateDonateItemGuildCmd.item)
  return item_;
}
inline ::Cmd::DonateItem* UpdateDonateItemGuildCmd::release_item() {
  clear_has_item();
  ::Cmd::DonateItem* temp = item_;
  item_ = NULL;
  return temp;
}
inline void UpdateDonateItemGuildCmd::set_allocated_item(::Cmd::DonateItem* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.UpdateDonateItemGuildCmd.item)
}

// optional .Cmd.DonateItem del = 4;
inline bool UpdateDonateItemGuildCmd::has_del() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateDonateItemGuildCmd::set_has_del() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateDonateItemGuildCmd::clear_has_del() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateDonateItemGuildCmd::clear_del() {
  if (del_ != NULL) del_->::Cmd::DonateItem::Clear();
  clear_has_del();
}
inline const ::Cmd::DonateItem& UpdateDonateItemGuildCmd::del() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateDonateItemGuildCmd.del)
  return del_ != NULL ? *del_ : *default_instance_->del_;
}
inline ::Cmd::DonateItem* UpdateDonateItemGuildCmd::mutable_del() {
  set_has_del();
  if (del_ == NULL) del_ = new ::Cmd::DonateItem;
  // @@protoc_insertion_point(field_mutable:Cmd.UpdateDonateItemGuildCmd.del)
  return del_;
}
inline ::Cmd::DonateItem* UpdateDonateItemGuildCmd::release_del() {
  clear_has_del();
  ::Cmd::DonateItem* temp = del_;
  del_ = NULL;
  return temp;
}
inline void UpdateDonateItemGuildCmd::set_allocated_del(::Cmd::DonateItem* del) {
  delete del_;
  del_ = del;
  if (del) {
    set_has_del();
  } else {
    clear_has_del();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.UpdateDonateItemGuildCmd.del)
}

// -------------------------------------------------------------------

// DonateFrameGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool DonateFrameGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DonateFrameGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DonateFrameGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DonateFrameGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command DonateFrameGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.DonateFrameGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void DonateFrameGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DonateFrameGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_DONATEFRAMESTATUS];
inline bool DonateFrameGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DonateFrameGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DonateFrameGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DonateFrameGuildCmd::clear_param() {
  param_ = 27;
  clear_has_param();
}
inline ::Cmd::GuildParam DonateFrameGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.DonateFrameGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void DonateFrameGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DonateFrameGuildCmd.param)
}

// optional bool open = 3 [default = false];
inline bool DonateFrameGuildCmd::has_open() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DonateFrameGuildCmd::set_has_open() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DonateFrameGuildCmd::clear_has_open() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DonateFrameGuildCmd::clear_open() {
  open_ = false;
  clear_has_open();
}
inline bool DonateFrameGuildCmd::open() const {
  // @@protoc_insertion_point(field_get:Cmd.DonateFrameGuildCmd.open)
  return open_;
}
inline void DonateFrameGuildCmd::set_open(bool value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DonateFrameGuildCmd.open)
}

// -------------------------------------------------------------------

// EnterTerritoryGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool EnterTerritoryGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterTerritoryGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterTerritoryGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterTerritoryGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command EnterTerritoryGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterTerritoryGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void EnterTerritoryGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterTerritoryGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_ENTERGUILDTERRITORY];
inline bool EnterTerritoryGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterTerritoryGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterTerritoryGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterTerritoryGuildCmd::clear_param() {
  param_ = 20;
  clear_has_param();
}
inline ::Cmd::GuildParam EnterTerritoryGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterTerritoryGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void EnterTerritoryGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterTerritoryGuildCmd.param)
}

// optional uint64 handid = 3 [default = 0];
inline bool EnterTerritoryGuildCmd::has_handid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnterTerritoryGuildCmd::set_has_handid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnterTerritoryGuildCmd::clear_has_handid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnterTerritoryGuildCmd::clear_handid() {
  handid_ = GOOGLE_ULONGLONG(0);
  clear_has_handid();
}
inline ::google::protobuf::uint64 EnterTerritoryGuildCmd::handid() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterTerritoryGuildCmd.handid)
  return handid_;
}
inline void EnterTerritoryGuildCmd::set_handid(::google::protobuf::uint64 value) {
  set_has_handid();
  handid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterTerritoryGuildCmd.handid)
}

// -------------------------------------------------------------------

// PrayGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool PrayGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PrayGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PrayGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PrayGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command PrayGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.PrayGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void PrayGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PrayGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_PRAY];
inline bool PrayGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PrayGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PrayGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PrayGuildCmd::clear_param() {
  param_ = 21;
  clear_has_param();
}
inline ::Cmd::GuildParam PrayGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.PrayGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void PrayGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PrayGuildCmd.param)
}

// optional uint64 npcid = 3 [default = 0];
inline bool PrayGuildCmd::has_npcid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PrayGuildCmd::set_has_npcid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PrayGuildCmd::clear_has_npcid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PrayGuildCmd::clear_npcid() {
  npcid_ = GOOGLE_ULONGLONG(0);
  clear_has_npcid();
}
inline ::google::protobuf::uint64 PrayGuildCmd::npcid() const {
  // @@protoc_insertion_point(field_get:Cmd.PrayGuildCmd.npcid)
  return npcid_;
}
inline void PrayGuildCmd::set_npcid(::google::protobuf::uint64 value) {
  set_has_npcid();
  npcid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PrayGuildCmd.npcid)
}

// optional uint32 pray = 4 [default = 0];
inline bool PrayGuildCmd::has_pray() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PrayGuildCmd::set_has_pray() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PrayGuildCmd::clear_has_pray() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PrayGuildCmd::clear_pray() {
  pray_ = 0u;
  clear_has_pray();
}
inline ::google::protobuf::uint32 PrayGuildCmd::pray() const {
  // @@protoc_insertion_point(field_get:Cmd.PrayGuildCmd.pray)
  return pray_;
}
inline void PrayGuildCmd::set_pray(::google::protobuf::uint32 value) {
  set_has_pray();
  pray_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PrayGuildCmd.pray)
}

// -------------------------------------------------------------------

// GuildInfoNtf

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool GuildInfoNtf::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildInfoNtf::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildInfoNtf::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildInfoNtf::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command GuildInfoNtf::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildInfoNtf.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildInfoNtf::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildInfoNtf.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_GUILDINFONTF];
inline bool GuildInfoNtf::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildInfoNtf::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildInfoNtf::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildInfoNtf::clear_param() {
  param_ = 22;
  clear_has_param();
}
inline ::Cmd::GuildParam GuildInfoNtf::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildInfoNtf.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void GuildInfoNtf::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildInfoNtf.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool GuildInfoNtf::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildInfoNtf::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildInfoNtf::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildInfoNtf::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GuildInfoNtf::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildInfoNtf.charid)
  return charid_;
}
inline void GuildInfoNtf::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildInfoNtf.charid)
}

// optional uint64 id = 4 [default = 0];
inline bool GuildInfoNtf::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildInfoNtf::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildInfoNtf::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildInfoNtf::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 GuildInfoNtf::id() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildInfoNtf.id)
  return id_;
}
inline void GuildInfoNtf::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildInfoNtf.id)
}

// optional string name = 5;
inline bool GuildInfoNtf::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildInfoNtf::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildInfoNtf::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildInfoNtf::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GuildInfoNtf::name() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildInfoNtf.name)
  return *name_;
}
inline void GuildInfoNtf::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildInfoNtf.name)
}
inline void GuildInfoNtf::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildInfoNtf.name)
}
inline void GuildInfoNtf::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildInfoNtf.name)
}
inline ::std::string* GuildInfoNtf::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildInfoNtf.name)
  return name_;
}
inline ::std::string* GuildInfoNtf::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildInfoNtf::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildInfoNtf.name)
}

// optional string icon = 6;
inline bool GuildInfoNtf::has_icon() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildInfoNtf::set_has_icon() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildInfoNtf::clear_has_icon() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildInfoNtf::clear_icon() {
  if (icon_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    icon_->clear();
  }
  clear_has_icon();
}
inline const ::std::string& GuildInfoNtf::icon() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildInfoNtf.icon)
  return *icon_;
}
inline void GuildInfoNtf::set_icon(const ::std::string& value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildInfoNtf.icon)
}
inline void GuildInfoNtf::set_icon(const char* value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildInfoNtf.icon)
}
inline void GuildInfoNtf::set_icon(const char* value, size_t size) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    icon_ = new ::std::string;
  }
  icon_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildInfoNtf.icon)
}
inline ::std::string* GuildInfoNtf::mutable_icon() {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    icon_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildInfoNtf.icon)
  return icon_;
}
inline ::std::string* GuildInfoNtf::release_icon() {
  clear_has_icon();
  if (icon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = icon_;
    icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildInfoNtf::set_allocated_icon(::std::string* icon) {
  if (icon_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete icon_;
  }
  if (icon) {
    set_has_icon();
    icon_ = icon;
  } else {
    clear_has_icon();
    icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildInfoNtf.icon)
}

// optional string job = 7;
inline bool GuildInfoNtf::has_job() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildInfoNtf::set_has_job() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildInfoNtf::clear_has_job() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildInfoNtf::clear_job() {
  if (job_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    job_->clear();
  }
  clear_has_job();
}
inline const ::std::string& GuildInfoNtf::job() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildInfoNtf.job)
  return *job_;
}
inline void GuildInfoNtf::set_job(const ::std::string& value) {
  set_has_job();
  if (job_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    job_ = new ::std::string;
  }
  job_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildInfoNtf.job)
}
inline void GuildInfoNtf::set_job(const char* value) {
  set_has_job();
  if (job_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    job_ = new ::std::string;
  }
  job_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildInfoNtf.job)
}
inline void GuildInfoNtf::set_job(const char* value, size_t size) {
  set_has_job();
  if (job_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    job_ = new ::std::string;
  }
  job_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildInfoNtf.job)
}
inline ::std::string* GuildInfoNtf::mutable_job() {
  set_has_job();
  if (job_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    job_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildInfoNtf.job)
  return job_;
}
inline ::std::string* GuildInfoNtf::release_job() {
  clear_has_job();
  if (job_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = job_;
    job_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildInfoNtf::set_allocated_job(::std::string* job) {
  if (job_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete job_;
  }
  if (job) {
    set_has_job();
    job_ = job;
  } else {
    clear_has_job();
    job_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildInfoNtf.job)
}

// -------------------------------------------------------------------

// GuildPrayNtfGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool GuildPrayNtfGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildPrayNtfGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildPrayNtfGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildPrayNtfGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command GuildPrayNtfGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildPrayNtfGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildPrayNtfGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildPrayNtfGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_GUILDPRAYNTF];
inline bool GuildPrayNtfGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildPrayNtfGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildPrayNtfGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildPrayNtfGuildCmd::clear_param() {
  param_ = 23;
  clear_has_param();
}
inline ::Cmd::GuildParam GuildPrayNtfGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildPrayNtfGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void GuildPrayNtfGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildPrayNtfGuildCmd.param)
}

// repeated .Cmd.GuildMemberPray prays = 3;
inline int GuildPrayNtfGuildCmd::prays_size() const {
  return prays_.size();
}
inline void GuildPrayNtfGuildCmd::clear_prays() {
  prays_.Clear();
}
inline const ::Cmd::GuildMemberPray& GuildPrayNtfGuildCmd::prays(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildPrayNtfGuildCmd.prays)
  return prays_.Get(index);
}
inline ::Cmd::GuildMemberPray* GuildPrayNtfGuildCmd::mutable_prays(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildPrayNtfGuildCmd.prays)
  return prays_.Mutable(index);
}
inline ::Cmd::GuildMemberPray* GuildPrayNtfGuildCmd::add_prays() {
  // @@protoc_insertion_point(field_add:Cmd.GuildPrayNtfGuildCmd.prays)
  return prays_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMemberPray >&
GuildPrayNtfGuildCmd::prays() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildPrayNtfGuildCmd.prays)
  return prays_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMemberPray >*
GuildPrayNtfGuildCmd::mutable_prays() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildPrayNtfGuildCmd.prays)
  return &prays_;
}

// -------------------------------------------------------------------

// LevelupEffectGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool LevelupEffectGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LevelupEffectGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LevelupEffectGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LevelupEffectGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command LevelupEffectGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.LevelupEffectGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void LevelupEffectGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LevelupEffectGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_LEVELUPEFFECT];
inline bool LevelupEffectGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LevelupEffectGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LevelupEffectGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LevelupEffectGuildCmd::clear_param() {
  param_ = 24;
  clear_has_param();
}
inline ::Cmd::GuildParam LevelupEffectGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.LevelupEffectGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void LevelupEffectGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LevelupEffectGuildCmd.param)
}

// -------------------------------------------------------------------

// QueryPackGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool QueryPackGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryPackGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryPackGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryPackGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command QueryPackGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryPackGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryPackGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryPackGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_QUERYPACK];
inline bool QueryPackGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryPackGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryPackGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryPackGuildCmd::clear_param() {
  param_ = 28;
  clear_has_param();
}
inline ::Cmd::GuildParam QueryPackGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryPackGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void QueryPackGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryPackGuildCmd.param)
}

// repeated .Cmd.ItemData items = 3;
inline int QueryPackGuildCmd::items_size() const {
  return items_.size();
}
inline void QueryPackGuildCmd::clear_items() {
  items_.Clear();
}
inline const ::Cmd::ItemData& QueryPackGuildCmd::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QueryPackGuildCmd.items)
  return items_.Get(index);
}
inline ::Cmd::ItemData* QueryPackGuildCmd::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.QueryPackGuildCmd.items)
  return items_.Mutable(index);
}
inline ::Cmd::ItemData* QueryPackGuildCmd::add_items() {
  // @@protoc_insertion_point(field_add:Cmd.QueryPackGuildCmd.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
QueryPackGuildCmd::items() const {
  // @@protoc_insertion_point(field_list:Cmd.QueryPackGuildCmd.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
QueryPackGuildCmd::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QueryPackGuildCmd.items)
  return &items_;
}

// -------------------------------------------------------------------

// PackUpdateGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool PackUpdateGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PackUpdateGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PackUpdateGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PackUpdateGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command PackUpdateGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.PackUpdateGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void PackUpdateGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PackUpdateGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_PACKUPDATE];
inline bool PackUpdateGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PackUpdateGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PackUpdateGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PackUpdateGuildCmd::clear_param() {
  param_ = 32;
  clear_has_param();
}
inline ::Cmd::GuildParam PackUpdateGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.PackUpdateGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void PackUpdateGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PackUpdateGuildCmd.param)
}

// repeated .Cmd.ItemData updates = 3;
inline int PackUpdateGuildCmd::updates_size() const {
  return updates_.size();
}
inline void PackUpdateGuildCmd::clear_updates() {
  updates_.Clear();
}
inline const ::Cmd::ItemData& PackUpdateGuildCmd::updates(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.PackUpdateGuildCmd.updates)
  return updates_.Get(index);
}
inline ::Cmd::ItemData* PackUpdateGuildCmd::mutable_updates(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.PackUpdateGuildCmd.updates)
  return updates_.Mutable(index);
}
inline ::Cmd::ItemData* PackUpdateGuildCmd::add_updates() {
  // @@protoc_insertion_point(field_add:Cmd.PackUpdateGuildCmd.updates)
  return updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
PackUpdateGuildCmd::updates() const {
  // @@protoc_insertion_point(field_list:Cmd.PackUpdateGuildCmd.updates)
  return updates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
PackUpdateGuildCmd::mutable_updates() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.PackUpdateGuildCmd.updates)
  return &updates_;
}

// repeated string dels = 4;
inline int PackUpdateGuildCmd::dels_size() const {
  return dels_.size();
}
inline void PackUpdateGuildCmd::clear_dels() {
  dels_.Clear();
}
inline const ::std::string& PackUpdateGuildCmd::dels(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.PackUpdateGuildCmd.dels)
  return dels_.Get(index);
}
inline ::std::string* PackUpdateGuildCmd::mutable_dels(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.PackUpdateGuildCmd.dels)
  return dels_.Mutable(index);
}
inline void PackUpdateGuildCmd::set_dels(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Cmd.PackUpdateGuildCmd.dels)
  dels_.Mutable(index)->assign(value);
}
inline void PackUpdateGuildCmd::set_dels(int index, const char* value) {
  dels_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.PackUpdateGuildCmd.dels)
}
inline void PackUpdateGuildCmd::set_dels(int index, const char* value, size_t size) {
  dels_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.PackUpdateGuildCmd.dels)
}
inline ::std::string* PackUpdateGuildCmd::add_dels() {
  return dels_.Add();
}
inline void PackUpdateGuildCmd::add_dels(const ::std::string& value) {
  dels_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Cmd.PackUpdateGuildCmd.dels)
}
inline void PackUpdateGuildCmd::add_dels(const char* value) {
  dels_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Cmd.PackUpdateGuildCmd.dels)
}
inline void PackUpdateGuildCmd::add_dels(const char* value, size_t size) {
  dels_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Cmd.PackUpdateGuildCmd.dels)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PackUpdateGuildCmd::dels() const {
  // @@protoc_insertion_point(field_list:Cmd.PackUpdateGuildCmd.dels)
  return dels_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PackUpdateGuildCmd::mutable_dels() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.PackUpdateGuildCmd.dels)
  return &dels_;
}

// -------------------------------------------------------------------

// ExchangeZoneGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool ExchangeZoneGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExchangeZoneGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExchangeZoneGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExchangeZoneGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command ExchangeZoneGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ExchangeZoneGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ExchangeZoneGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ExchangeZoneGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_EXCHANGEZONE];
inline bool ExchangeZoneGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExchangeZoneGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExchangeZoneGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExchangeZoneGuildCmd::clear_param() {
  param_ = 29;
  clear_has_param();
}
inline ::Cmd::GuildParam ExchangeZoneGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ExchangeZoneGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void ExchangeZoneGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ExchangeZoneGuildCmd.param)
}

// optional uint32 zoneid = 3 [default = 0];
inline bool ExchangeZoneGuildCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExchangeZoneGuildCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExchangeZoneGuildCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExchangeZoneGuildCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 ExchangeZoneGuildCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Cmd.ExchangeZoneGuildCmd.zoneid)
  return zoneid_;
}
inline void ExchangeZoneGuildCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ExchangeZoneGuildCmd.zoneid)
}

// optional bool set = 4 [default = false];
inline bool ExchangeZoneGuildCmd::has_set() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ExchangeZoneGuildCmd::set_has_set() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ExchangeZoneGuildCmd::clear_has_set() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ExchangeZoneGuildCmd::clear_set() {
  set_ = false;
  clear_has_set();
}
inline bool ExchangeZoneGuildCmd::set() const {
  // @@protoc_insertion_point(field_get:Cmd.ExchangeZoneGuildCmd.set)
  return set_;
}
inline void ExchangeZoneGuildCmd::set_set(bool value) {
  set_has_set();
  set_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ExchangeZoneGuildCmd.set)
}

// -------------------------------------------------------------------

// ExchangeZoneNtfGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool ExchangeZoneNtfGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExchangeZoneNtfGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExchangeZoneNtfGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExchangeZoneNtfGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command ExchangeZoneNtfGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ExchangeZoneNtfGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ExchangeZoneNtfGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ExchangeZoneNtfGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_EXCHANGEZONE_NTF];
inline bool ExchangeZoneNtfGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExchangeZoneNtfGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExchangeZoneNtfGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExchangeZoneNtfGuildCmd::clear_param() {
  param_ = 30;
  clear_has_param();
}
inline ::Cmd::GuildParam ExchangeZoneNtfGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ExchangeZoneNtfGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void ExchangeZoneNtfGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ExchangeZoneNtfGuildCmd.param)
}

// optional uint32 nextzoneid = 3 [default = 0];
inline bool ExchangeZoneNtfGuildCmd::has_nextzoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExchangeZoneNtfGuildCmd::set_has_nextzoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExchangeZoneNtfGuildCmd::clear_has_nextzoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExchangeZoneNtfGuildCmd::clear_nextzoneid() {
  nextzoneid_ = 0u;
  clear_has_nextzoneid();
}
inline ::google::protobuf::uint32 ExchangeZoneNtfGuildCmd::nextzoneid() const {
  // @@protoc_insertion_point(field_get:Cmd.ExchangeZoneNtfGuildCmd.nextzoneid)
  return nextzoneid_;
}
inline void ExchangeZoneNtfGuildCmd::set_nextzoneid(::google::protobuf::uint32 value) {
  set_has_nextzoneid();
  nextzoneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ExchangeZoneNtfGuildCmd.nextzoneid)
}

// optional uint32 curzoneid = 4 [default = 0];
inline bool ExchangeZoneNtfGuildCmd::has_curzoneid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ExchangeZoneNtfGuildCmd::set_has_curzoneid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ExchangeZoneNtfGuildCmd::clear_has_curzoneid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ExchangeZoneNtfGuildCmd::clear_curzoneid() {
  curzoneid_ = 0u;
  clear_has_curzoneid();
}
inline ::google::protobuf::uint32 ExchangeZoneNtfGuildCmd::curzoneid() const {
  // @@protoc_insertion_point(field_get:Cmd.ExchangeZoneNtfGuildCmd.curzoneid)
  return curzoneid_;
}
inline void ExchangeZoneNtfGuildCmd::set_curzoneid(::google::protobuf::uint32 value) {
  set_has_curzoneid();
  curzoneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ExchangeZoneNtfGuildCmd.curzoneid)
}

// -------------------------------------------------------------------

// ExchangeZoneAnswerGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool ExchangeZoneAnswerGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExchangeZoneAnswerGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExchangeZoneAnswerGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExchangeZoneAnswerGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command ExchangeZoneAnswerGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ExchangeZoneAnswerGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ExchangeZoneAnswerGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ExchangeZoneAnswerGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_EXCHANGEZONE_ANSWER];
inline bool ExchangeZoneAnswerGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExchangeZoneAnswerGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExchangeZoneAnswerGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExchangeZoneAnswerGuildCmd::clear_param() {
  param_ = 31;
  clear_has_param();
}
inline ::Cmd::GuildParam ExchangeZoneAnswerGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ExchangeZoneAnswerGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void ExchangeZoneAnswerGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ExchangeZoneAnswerGuildCmd.param)
}

// optional bool agree = 3 [default = false];
inline bool ExchangeZoneAnswerGuildCmd::has_agree() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExchangeZoneAnswerGuildCmd::set_has_agree() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExchangeZoneAnswerGuildCmd::clear_has_agree() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExchangeZoneAnswerGuildCmd::clear_agree() {
  agree_ = false;
  clear_has_agree();
}
inline bool ExchangeZoneAnswerGuildCmd::agree() const {
  // @@protoc_insertion_point(field_get:Cmd.ExchangeZoneAnswerGuildCmd.agree)
  return agree_;
}
inline void ExchangeZoneAnswerGuildCmd::set_agree(bool value) {
  set_has_agree();
  agree_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ExchangeZoneAnswerGuildCmd.agree)
}

// -------------------------------------------------------------------

// GuildEvent

// optional uint32 guid = 1 [default = 0];
inline bool GuildEvent::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildEvent::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildEvent::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildEvent::clear_guid() {
  guid_ = 0u;
  clear_has_guid();
}
inline ::google::protobuf::uint32 GuildEvent::guid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildEvent.guid)
  return guid_;
}
inline void GuildEvent::set_guid(::google::protobuf::uint32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildEvent.guid)
}

// optional uint32 eventid = 2 [default = 0];
inline bool GuildEvent::has_eventid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildEvent::set_has_eventid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildEvent::clear_has_eventid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildEvent::clear_eventid() {
  eventid_ = 0u;
  clear_has_eventid();
}
inline ::google::protobuf::uint32 GuildEvent::eventid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildEvent.eventid)
  return eventid_;
}
inline void GuildEvent::set_eventid(::google::protobuf::uint32 value) {
  set_has_eventid();
  eventid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildEvent.eventid)
}

// optional uint32 time = 3 [default = 0];
inline bool GuildEvent::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildEvent::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildEvent::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildEvent::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 GuildEvent::time() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildEvent.time)
  return time_;
}
inline void GuildEvent::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildEvent.time)
}

// repeated string param = 4;
inline int GuildEvent::param_size() const {
  return param_.size();
}
inline void GuildEvent::clear_param() {
  param_.Clear();
}
inline const ::std::string& GuildEvent::param(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildEvent.param)
  return param_.Get(index);
}
inline ::std::string* GuildEvent::mutable_param(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildEvent.param)
  return param_.Mutable(index);
}
inline void GuildEvent::set_param(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Cmd.GuildEvent.param)
  param_.Mutable(index)->assign(value);
}
inline void GuildEvent::set_param(int index, const char* value) {
  param_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildEvent.param)
}
inline void GuildEvent::set_param(int index, const char* value, size_t size) {
  param_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildEvent.param)
}
inline ::std::string* GuildEvent::add_param() {
  return param_.Add();
}
inline void GuildEvent::add_param(const ::std::string& value) {
  param_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Cmd.GuildEvent.param)
}
inline void GuildEvent::add_param(const char* value) {
  param_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Cmd.GuildEvent.param)
}
inline void GuildEvent::add_param(const char* value, size_t size) {
  param_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Cmd.GuildEvent.param)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GuildEvent::param() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildEvent.param)
  return param_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GuildEvent::mutable_param() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildEvent.param)
  return &param_;
}

// -------------------------------------------------------------------

// QueryEventListGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool QueryEventListGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryEventListGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryEventListGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryEventListGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command QueryEventListGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryEventListGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryEventListGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryEventListGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_QUERY_EVENT_LIST];
inline bool QueryEventListGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryEventListGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryEventListGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryEventListGuildCmd::clear_param() {
  param_ = 33;
  clear_has_param();
}
inline ::Cmd::GuildParam QueryEventListGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryEventListGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void QueryEventListGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryEventListGuildCmd.param)
}

// repeated .Cmd.GuildEvent events = 3;
inline int QueryEventListGuildCmd::events_size() const {
  return events_.size();
}
inline void QueryEventListGuildCmd::clear_events() {
  events_.Clear();
}
inline const ::Cmd::GuildEvent& QueryEventListGuildCmd::events(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QueryEventListGuildCmd.events)
  return events_.Get(index);
}
inline ::Cmd::GuildEvent* QueryEventListGuildCmd::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.QueryEventListGuildCmd.events)
  return events_.Mutable(index);
}
inline ::Cmd::GuildEvent* QueryEventListGuildCmd::add_events() {
  // @@protoc_insertion_point(field_add:Cmd.QueryEventListGuildCmd.events)
  return events_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildEvent >&
QueryEventListGuildCmd::events() const {
  // @@protoc_insertion_point(field_list:Cmd.QueryEventListGuildCmd.events)
  return events_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildEvent >*
QueryEventListGuildCmd::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QueryEventListGuildCmd.events)
  return &events_;
}

// -------------------------------------------------------------------

// NewEventGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool NewEventGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewEventGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewEventGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewEventGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command NewEventGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.NewEventGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void NewEventGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.NewEventGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_NEW_EVENT];
inline bool NewEventGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewEventGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewEventGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewEventGuildCmd::clear_param() {
  param_ = 34;
  clear_has_param();
}
inline ::Cmd::GuildParam NewEventGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.NewEventGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void NewEventGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.NewEventGuildCmd.param)
}

// optional bool del = 3 [default = false];
inline bool NewEventGuildCmd::has_del() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NewEventGuildCmd::set_has_del() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NewEventGuildCmd::clear_has_del() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NewEventGuildCmd::clear_del() {
  del_ = false;
  clear_has_del();
}
inline bool NewEventGuildCmd::del() const {
  // @@protoc_insertion_point(field_get:Cmd.NewEventGuildCmd.del)
  return del_;
}
inline void NewEventGuildCmd::set_del(bool value) {
  set_has_del();
  del_ = value;
  // @@protoc_insertion_point(field_set:Cmd.NewEventGuildCmd.del)
}

// optional .Cmd.GuildEvent event = 4;
inline bool NewEventGuildCmd::has_event() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NewEventGuildCmd::set_has_event() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NewEventGuildCmd::clear_has_event() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NewEventGuildCmd::clear_event() {
  if (event_ != NULL) event_->::Cmd::GuildEvent::Clear();
  clear_has_event();
}
inline const ::Cmd::GuildEvent& NewEventGuildCmd::event() const {
  // @@protoc_insertion_point(field_get:Cmd.NewEventGuildCmd.event)
  return event_ != NULL ? *event_ : *default_instance_->event_;
}
inline ::Cmd::GuildEvent* NewEventGuildCmd::mutable_event() {
  set_has_event();
  if (event_ == NULL) event_ = new ::Cmd::GuildEvent;
  // @@protoc_insertion_point(field_mutable:Cmd.NewEventGuildCmd.event)
  return event_;
}
inline ::Cmd::GuildEvent* NewEventGuildCmd::release_event() {
  clear_has_event();
  ::Cmd::GuildEvent* temp = event_;
  event_ = NULL;
  return temp;
}
inline void NewEventGuildCmd::set_allocated_event(::Cmd::GuildEvent* event) {
  delete event_;
  event_ = event;
  if (event) {
    set_has_event();
  } else {
    clear_has_event();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.NewEventGuildCmd.event)
}

// -------------------------------------------------------------------

// GuildReward

// optional uint32 id = 1 [default = 0];
inline bool GuildReward::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildReward::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildReward::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildReward::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GuildReward::id() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildReward.id)
  return id_;
}
inline void GuildReward::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildReward.id)
}

// optional uint32 num = 2 [default = 0];
inline bool GuildReward::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildReward::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildReward::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildReward::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 GuildReward::num() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildReward.num)
  return num_;
}
inline void GuildReward::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildReward.num)
}

// -------------------------------------------------------------------

// ApplyRewardConGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool ApplyRewardConGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyRewardConGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ApplyRewardConGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ApplyRewardConGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command ApplyRewardConGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ApplyRewardConGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ApplyRewardConGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ApplyRewardConGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_APPLYCONFIG];
inline bool ApplyRewardConGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApplyRewardConGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ApplyRewardConGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ApplyRewardConGuildCmd::clear_param() {
  param_ = 35;
  clear_has_param();
}
inline ::Cmd::GuildParam ApplyRewardConGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ApplyRewardConGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void ApplyRewardConGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ApplyRewardConGuildCmd.param)
}

// optional uint32 configid = 3 [default = 0];
inline bool ApplyRewardConGuildCmd::has_configid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ApplyRewardConGuildCmd::set_has_configid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ApplyRewardConGuildCmd::clear_has_configid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ApplyRewardConGuildCmd::clear_configid() {
  configid_ = 0u;
  clear_has_configid();
}
inline ::google::protobuf::uint32 ApplyRewardConGuildCmd::configid() const {
  // @@protoc_insertion_point(field_get:Cmd.ApplyRewardConGuildCmd.configid)
  return configid_;
}
inline void ApplyRewardConGuildCmd::set_configid(::google::protobuf::uint32 value) {
  set_has_configid();
  configid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ApplyRewardConGuildCmd.configid)
}

// repeated .Cmd.GuildReward con = 4;
inline int ApplyRewardConGuildCmd::con_size() const {
  return con_.size();
}
inline void ApplyRewardConGuildCmd::clear_con() {
  con_.Clear();
}
inline const ::Cmd::GuildReward& ApplyRewardConGuildCmd::con(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.ApplyRewardConGuildCmd.con)
  return con_.Get(index);
}
inline ::Cmd::GuildReward* ApplyRewardConGuildCmd::mutable_con(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.ApplyRewardConGuildCmd.con)
  return con_.Mutable(index);
}
inline ::Cmd::GuildReward* ApplyRewardConGuildCmd::add_con() {
  // @@protoc_insertion_point(field_add:Cmd.ApplyRewardConGuildCmd.con)
  return con_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildReward >&
ApplyRewardConGuildCmd::con() const {
  // @@protoc_insertion_point(field_list:Cmd.ApplyRewardConGuildCmd.con)
  return con_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildReward >*
ApplyRewardConGuildCmd::mutable_con() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.ApplyRewardConGuildCmd.con)
  return &con_;
}

// repeated .Cmd.GuildReward asset = 5;
inline int ApplyRewardConGuildCmd::asset_size() const {
  return asset_.size();
}
inline void ApplyRewardConGuildCmd::clear_asset() {
  asset_.Clear();
}
inline const ::Cmd::GuildReward& ApplyRewardConGuildCmd::asset(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.ApplyRewardConGuildCmd.asset)
  return asset_.Get(index);
}
inline ::Cmd::GuildReward* ApplyRewardConGuildCmd::mutable_asset(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.ApplyRewardConGuildCmd.asset)
  return asset_.Mutable(index);
}
inline ::Cmd::GuildReward* ApplyRewardConGuildCmd::add_asset() {
  // @@protoc_insertion_point(field_add:Cmd.ApplyRewardConGuildCmd.asset)
  return asset_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildReward >&
ApplyRewardConGuildCmd::asset() const {
  // @@protoc_insertion_point(field_list:Cmd.ApplyRewardConGuildCmd.asset)
  return asset_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildReward >*
ApplyRewardConGuildCmd::mutable_asset() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.ApplyRewardConGuildCmd.asset)
  return &asset_;
}

// -------------------------------------------------------------------

// FrameStatusGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool FrameStatusGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameStatusGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameStatusGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameStatusGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command FrameStatusGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.FrameStatusGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void FrameStatusGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FrameStatusGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_FRAME_STATUS];
inline bool FrameStatusGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FrameStatusGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FrameStatusGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FrameStatusGuildCmd::clear_param() {
  param_ = 37;
  clear_has_param();
}
inline ::Cmd::GuildParam FrameStatusGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.FrameStatusGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void FrameStatusGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FrameStatusGuildCmd.param)
}

// optional bool open = 3 [default = false];
inline bool FrameStatusGuildCmd::has_open() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FrameStatusGuildCmd::set_has_open() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FrameStatusGuildCmd::clear_has_open() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FrameStatusGuildCmd::clear_open() {
  open_ = false;
  clear_has_open();
}
inline bool FrameStatusGuildCmd::open() const {
  // @@protoc_insertion_point(field_get:Cmd.FrameStatusGuildCmd.open)
  return open_;
}
inline void FrameStatusGuildCmd::set_open(bool value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FrameStatusGuildCmd.open)
}

// -------------------------------------------------------------------

// ModifyAuthGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool ModifyAuthGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModifyAuthGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModifyAuthGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModifyAuthGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command ModifyAuthGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ModifyAuthGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ModifyAuthGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ModifyAuthGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_MODIFY_AUTH];
inline bool ModifyAuthGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModifyAuthGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModifyAuthGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModifyAuthGuildCmd::clear_param() {
  param_ = 38;
  clear_has_param();
}
inline ::Cmd::GuildParam ModifyAuthGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ModifyAuthGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void ModifyAuthGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ModifyAuthGuildCmd.param)
}

// optional bool add = 3 [default = false];
inline bool ModifyAuthGuildCmd::has_add() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ModifyAuthGuildCmd::set_has_add() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ModifyAuthGuildCmd::clear_has_add() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ModifyAuthGuildCmd::clear_add() {
  add_ = false;
  clear_has_add();
}
inline bool ModifyAuthGuildCmd::add() const {
  // @@protoc_insertion_point(field_get:Cmd.ModifyAuthGuildCmd.add)
  return add_;
}
inline void ModifyAuthGuildCmd::set_add(bool value) {
  set_has_add();
  add_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ModifyAuthGuildCmd.add)
}

// optional .Cmd.EModify modify = 4 [default = EMODIFY_MIN];
inline bool ModifyAuthGuildCmd::has_modify() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ModifyAuthGuildCmd::set_has_modify() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ModifyAuthGuildCmd::clear_has_modify() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ModifyAuthGuildCmd::clear_modify() {
  modify_ = 0;
  clear_has_modify();
}
inline ::Cmd::EModify ModifyAuthGuildCmd::modify() const {
  // @@protoc_insertion_point(field_get:Cmd.ModifyAuthGuildCmd.modify)
  return static_cast< ::Cmd::EModify >(modify_);
}
inline void ModifyAuthGuildCmd::set_modify(::Cmd::EModify value) {
  assert(::Cmd::EModify_IsValid(value));
  set_has_modify();
  modify_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ModifyAuthGuildCmd.modify)
}

// optional .Cmd.EGuildJob job = 5 [default = EGUILDJOB_MIN];
inline bool ModifyAuthGuildCmd::has_job() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ModifyAuthGuildCmd::set_has_job() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ModifyAuthGuildCmd::clear_has_job() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ModifyAuthGuildCmd::clear_job() {
  job_ = 0;
  clear_has_job();
}
inline ::Cmd::EGuildJob ModifyAuthGuildCmd::job() const {
  // @@protoc_insertion_point(field_get:Cmd.ModifyAuthGuildCmd.job)
  return static_cast< ::Cmd::EGuildJob >(job_);
}
inline void ModifyAuthGuildCmd::set_job(::Cmd::EGuildJob value) {
  assert(::Cmd::EGuildJob_IsValid(value));
  set_has_job();
  job_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ModifyAuthGuildCmd.job)
}

// optional .Cmd.EAuth auth = 6 [default = EAUTH_MIN];
inline bool ModifyAuthGuildCmd::has_auth() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ModifyAuthGuildCmd::set_has_auth() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ModifyAuthGuildCmd::clear_has_auth() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ModifyAuthGuildCmd::clear_auth() {
  auth_ = 0;
  clear_has_auth();
}
inline ::Cmd::EAuth ModifyAuthGuildCmd::auth() const {
  // @@protoc_insertion_point(field_get:Cmd.ModifyAuthGuildCmd.auth)
  return static_cast< ::Cmd::EAuth >(auth_);
}
inline void ModifyAuthGuildCmd::set_auth(::Cmd::EAuth value) {
  assert(::Cmd::EAuth_IsValid(value));
  set_has_auth();
  auth_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ModifyAuthGuildCmd.auth)
}

// -------------------------------------------------------------------

// JobUpdateGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool JobUpdateGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobUpdateGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JobUpdateGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JobUpdateGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command JobUpdateGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.JobUpdateGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void JobUpdateGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.JobUpdateGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_JOB_UPDATE];
inline bool JobUpdateGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JobUpdateGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JobUpdateGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JobUpdateGuildCmd::clear_param() {
  param_ = 39;
  clear_has_param();
}
inline ::Cmd::GuildParam JobUpdateGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.JobUpdateGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void JobUpdateGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.JobUpdateGuildCmd.param)
}

// optional .Cmd.GuildJob job = 3;
inline bool JobUpdateGuildCmd::has_job() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JobUpdateGuildCmd::set_has_job() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JobUpdateGuildCmd::clear_has_job() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JobUpdateGuildCmd::clear_job() {
  if (job_ != NULL) job_->::Cmd::GuildJob::Clear();
  clear_has_job();
}
inline const ::Cmd::GuildJob& JobUpdateGuildCmd::job() const {
  // @@protoc_insertion_point(field_get:Cmd.JobUpdateGuildCmd.job)
  return job_ != NULL ? *job_ : *default_instance_->job_;
}
inline ::Cmd::GuildJob* JobUpdateGuildCmd::mutable_job() {
  set_has_job();
  if (job_ == NULL) job_ = new ::Cmd::GuildJob;
  // @@protoc_insertion_point(field_mutable:Cmd.JobUpdateGuildCmd.job)
  return job_;
}
inline ::Cmd::GuildJob* JobUpdateGuildCmd::release_job() {
  clear_has_job();
  ::Cmd::GuildJob* temp = job_;
  job_ = NULL;
  return temp;
}
inline void JobUpdateGuildCmd::set_allocated_job(::Cmd::GuildJob* job) {
  delete job_;
  job_ = job;
  if (job) {
    set_has_job();
  } else {
    clear_has_job();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.JobUpdateGuildCmd.job)
}

// -------------------------------------------------------------------

// RenameQueryGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool RenameQueryGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RenameQueryGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RenameQueryGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RenameQueryGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command RenameQueryGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.RenameQueryGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void RenameQueryGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RenameQueryGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_RENAME_QUERY];
inline bool RenameQueryGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RenameQueryGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RenameQueryGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RenameQueryGuildCmd::clear_param() {
  param_ = 40;
  clear_has_param();
}
inline ::Cmd::GuildParam RenameQueryGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.RenameQueryGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void RenameQueryGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RenameQueryGuildCmd.param)
}

// optional string name = 3;
inline bool RenameQueryGuildCmd::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RenameQueryGuildCmd::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RenameQueryGuildCmd::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RenameQueryGuildCmd::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RenameQueryGuildCmd::name() const {
  // @@protoc_insertion_point(field_get:Cmd.RenameQueryGuildCmd.name)
  return *name_;
}
inline void RenameQueryGuildCmd::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.RenameQueryGuildCmd.name)
}
inline void RenameQueryGuildCmd::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.RenameQueryGuildCmd.name)
}
inline void RenameQueryGuildCmd::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.RenameQueryGuildCmd.name)
}
inline ::std::string* RenameQueryGuildCmd::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.RenameQueryGuildCmd.name)
  return name_;
}
inline ::std::string* RenameQueryGuildCmd::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RenameQueryGuildCmd::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.RenameQueryGuildCmd.name)
}

// optional .Cmd.ERenameErrCode code = 4 [default = ERENAME_SUCCESS];
inline bool RenameQueryGuildCmd::has_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RenameQueryGuildCmd::set_has_code() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RenameQueryGuildCmd::clear_has_code() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RenameQueryGuildCmd::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::Cmd::ERenameErrCode RenameQueryGuildCmd::code() const {
  // @@protoc_insertion_point(field_get:Cmd.RenameQueryGuildCmd.code)
  return static_cast< ::Cmd::ERenameErrCode >(code_);
}
inline void RenameQueryGuildCmd::set_code(::Cmd::ERenameErrCode value) {
  assert(::Cmd::ERenameErrCode_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RenameQueryGuildCmd.code)
}

// -------------------------------------------------------------------

// GuildCityInfo

// optional uint64 id = 1 [default = 0];
inline bool GuildCityInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildCityInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildCityInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildCityInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 GuildCityInfo::id() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildCityInfo.id)
  return id_;
}
inline void GuildCityInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildCityInfo.id)
}

// optional uint32 flag = 2 [default = 0];
inline bool GuildCityInfo::has_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildCityInfo::set_has_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildCityInfo::clear_has_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildCityInfo::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 GuildCityInfo::flag() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildCityInfo.flag)
  return flag_;
}
inline void GuildCityInfo::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildCityInfo.flag)
}

// optional uint32 lv = 3 [default = 0];
inline bool GuildCityInfo::has_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildCityInfo::set_has_lv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildCityInfo::clear_has_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildCityInfo::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 GuildCityInfo::lv() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildCityInfo.lv)
  return lv_;
}
inline void GuildCityInfo::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildCityInfo.lv)
}

// optional uint32 membercount = 4 [default = 0];
inline bool GuildCityInfo::has_membercount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildCityInfo::set_has_membercount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildCityInfo::clear_has_membercount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildCityInfo::clear_membercount() {
  membercount_ = 0u;
  clear_has_membercount();
}
inline ::google::protobuf::uint32 GuildCityInfo::membercount() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildCityInfo.membercount)
  return membercount_;
}
inline void GuildCityInfo::set_membercount(::google::protobuf::uint32 value) {
  set_has_membercount();
  membercount_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildCityInfo.membercount)
}

// optional string name = 5;
inline bool GuildCityInfo::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildCityInfo::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildCityInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildCityInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GuildCityInfo::name() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildCityInfo.name)
  return *name_;
}
inline void GuildCityInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildCityInfo.name)
}
inline void GuildCityInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildCityInfo.name)
}
inline void GuildCityInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildCityInfo.name)
}
inline ::std::string* GuildCityInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildCityInfo.name)
  return name_;
}
inline ::std::string* GuildCityInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildCityInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildCityInfo.name)
}

// optional string portrait = 6;
inline bool GuildCityInfo::has_portrait() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildCityInfo::set_has_portrait() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildCityInfo::clear_has_portrait() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildCityInfo::clear_portrait() {
  if (portrait_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_->clear();
  }
  clear_has_portrait();
}
inline const ::std::string& GuildCityInfo::portrait() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildCityInfo.portrait)
  return *portrait_;
}
inline void GuildCityInfo::set_portrait(const ::std::string& value) {
  set_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_ = new ::std::string;
  }
  portrait_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildCityInfo.portrait)
}
inline void GuildCityInfo::set_portrait(const char* value) {
  set_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_ = new ::std::string;
  }
  portrait_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildCityInfo.portrait)
}
inline void GuildCityInfo::set_portrait(const char* value, size_t size) {
  set_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_ = new ::std::string;
  }
  portrait_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildCityInfo.portrait)
}
inline ::std::string* GuildCityInfo::mutable_portrait() {
  set_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildCityInfo.portrait)
  return portrait_;
}
inline ::std::string* GuildCityInfo::release_portrait() {
  clear_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = portrait_;
    portrait_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildCityInfo::set_allocated_portrait(::std::string* portrait) {
  if (portrait_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete portrait_;
  }
  if (portrait) {
    set_has_portrait();
    portrait_ = portrait;
  } else {
    clear_has_portrait();
    portrait_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildCityInfo.portrait)
}

// optional uint64 oldguild = 7 [default = 0];
inline bool GuildCityInfo::has_oldguild() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildCityInfo::set_has_oldguild() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildCityInfo::clear_has_oldguild() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildCityInfo::clear_oldguild() {
  oldguild_ = GOOGLE_ULONGLONG(0);
  clear_has_oldguild();
}
inline ::google::protobuf::uint64 GuildCityInfo::oldguild() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildCityInfo.oldguild)
  return oldguild_;
}
inline void GuildCityInfo::set_oldguild(::google::protobuf::uint64 value) {
  set_has_oldguild();
  oldguild_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildCityInfo.oldguild)
}

// optional uint32 times = 8 [default = 0];
inline bool GuildCityInfo::has_times() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuildCityInfo::set_has_times() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuildCityInfo::clear_has_times() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuildCityInfo::clear_times() {
  times_ = 0u;
  clear_has_times();
}
inline ::google::protobuf::uint32 GuildCityInfo::times() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildCityInfo.times)
  return times_;
}
inline void GuildCityInfo::set_times(::google::protobuf::uint32 value) {
  set_has_times();
  times_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildCityInfo.times)
}

// optional string leadername = 9;
inline bool GuildCityInfo::has_leadername() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GuildCityInfo::set_has_leadername() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GuildCityInfo::clear_has_leadername() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GuildCityInfo::clear_leadername() {
  if (leadername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leadername_->clear();
  }
  clear_has_leadername();
}
inline const ::std::string& GuildCityInfo::leadername() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildCityInfo.leadername)
  return *leadername_;
}
inline void GuildCityInfo::set_leadername(const ::std::string& value) {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leadername_ = new ::std::string;
  }
  leadername_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildCityInfo.leadername)
}
inline void GuildCityInfo::set_leadername(const char* value) {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leadername_ = new ::std::string;
  }
  leadername_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildCityInfo.leadername)
}
inline void GuildCityInfo::set_leadername(const char* value, size_t size) {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leadername_ = new ::std::string;
  }
  leadername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildCityInfo.leadername)
}
inline ::std::string* GuildCityInfo::mutable_leadername() {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leadername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildCityInfo.leadername)
  return leadername_;
}
inline ::std::string* GuildCityInfo::release_leadername() {
  clear_has_leadername();
  if (leadername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = leadername_;
    leadername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildCityInfo::set_allocated_leadername(::std::string* leadername) {
  if (leadername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete leadername_;
  }
  if (leadername) {
    set_has_leadername();
    leadername_ = leadername;
  } else {
    clear_has_leadername();
    leadername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildCityInfo.leadername)
}

// -------------------------------------------------------------------

// QueryGuildCityInfoGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool QueryGuildCityInfoGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryGuildCityInfoGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryGuildCityInfoGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryGuildCityInfoGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command QueryGuildCityInfoGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryGuildCityInfoGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryGuildCityInfoGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryGuildCityInfoGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_QUERY_CITYINFO];
inline bool QueryGuildCityInfoGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryGuildCityInfoGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryGuildCityInfoGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryGuildCityInfoGuildCmd::clear_param() {
  param_ = 41;
  clear_has_param();
}
inline ::Cmd::GuildParam QueryGuildCityInfoGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryGuildCityInfoGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void QueryGuildCityInfoGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryGuildCityInfoGuildCmd.param)
}

// repeated .Cmd.GuildCityInfo infos = 3;
inline int QueryGuildCityInfoGuildCmd::infos_size() const {
  return infos_.size();
}
inline void QueryGuildCityInfoGuildCmd::clear_infos() {
  infos_.Clear();
}
inline const ::Cmd::GuildCityInfo& QueryGuildCityInfoGuildCmd::infos(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QueryGuildCityInfoGuildCmd.infos)
  return infos_.Get(index);
}
inline ::Cmd::GuildCityInfo* QueryGuildCityInfoGuildCmd::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.QueryGuildCityInfoGuildCmd.infos)
  return infos_.Mutable(index);
}
inline ::Cmd::GuildCityInfo* QueryGuildCityInfoGuildCmd::add_infos() {
  // @@protoc_insertion_point(field_add:Cmd.QueryGuildCityInfoGuildCmd.infos)
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildCityInfo >&
QueryGuildCityInfoGuildCmd::infos() const {
  // @@protoc_insertion_point(field_list:Cmd.QueryGuildCityInfoGuildCmd.infos)
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildCityInfo >*
QueryGuildCityInfoGuildCmd::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QueryGuildCityInfoGuildCmd.infos)
  return &infos_;
}

// -------------------------------------------------------------------

// CityActionGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool CityActionGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CityActionGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CityActionGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CityActionGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command CityActionGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.CityActionGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void CityActionGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CityActionGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_CITY_ACTION];
inline bool CityActionGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CityActionGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CityActionGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CityActionGuildCmd::clear_param() {
  param_ = 42;
  clear_has_param();
}
inline ::Cmd::GuildParam CityActionGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.CityActionGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void CityActionGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CityActionGuildCmd.param)
}

// optional .Cmd.ECityAction action = 3 [default = ECITYACTION_MIN];
inline bool CityActionGuildCmd::has_action() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CityActionGuildCmd::set_has_action() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CityActionGuildCmd::clear_has_action() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CityActionGuildCmd::clear_action() {
  action_ = 0;
  clear_has_action();
}
inline ::Cmd::ECityAction CityActionGuildCmd::action() const {
  // @@protoc_insertion_point(field_get:Cmd.CityActionGuildCmd.action)
  return static_cast< ::Cmd::ECityAction >(action_);
}
inline void CityActionGuildCmd::set_action(::Cmd::ECityAction value) {
  assert(::Cmd::ECityAction_IsValid(value));
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CityActionGuildCmd.action)
}

// -------------------------------------------------------------------

// IconInfo

// optional uint32 index = 1;
inline bool IconInfo::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IconInfo::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IconInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IconInfo::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 IconInfo::index() const {
  // @@protoc_insertion_point(field_get:Cmd.IconInfo.index)
  return index_;
}
inline void IconInfo::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:Cmd.IconInfo.index)
}

// optional .Cmd.EIconState state = 2;
inline bool IconInfo::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IconInfo::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IconInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IconInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::Cmd::EIconState IconInfo::state() const {
  // @@protoc_insertion_point(field_get:Cmd.IconInfo.state)
  return static_cast< ::Cmd::EIconState >(state_);
}
inline void IconInfo::set_state(::Cmd::EIconState value) {
  assert(::Cmd::EIconState_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:Cmd.IconInfo.state)
}

// optional uint32 time = 3;
inline bool IconInfo::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IconInfo::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IconInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IconInfo::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 IconInfo::time() const {
  // @@protoc_insertion_point(field_get:Cmd.IconInfo.time)
  return time_;
}
inline void IconInfo::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Cmd.IconInfo.time)
}

// optional bool isread = 4 [default = true];
inline bool IconInfo::has_isread() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IconInfo::set_has_isread() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IconInfo::clear_has_isread() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IconInfo::clear_isread() {
  isread_ = true;
  clear_has_isread();
}
inline bool IconInfo::isread() const {
  // @@protoc_insertion_point(field_get:Cmd.IconInfo.isread)
  return isread_;
}
inline void IconInfo::set_isread(bool value) {
  set_has_isread();
  isread_ = value;
  // @@protoc_insertion_point(field_set:Cmd.IconInfo.isread)
}

// optional string type = 5;
inline bool IconInfo::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IconInfo::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IconInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IconInfo::clear_type() {
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_->clear();
  }
  clear_has_type();
}
inline const ::std::string& IconInfo::type() const {
  // @@protoc_insertion_point(field_get:Cmd.IconInfo.type)
  return *type_;
}
inline void IconInfo::set_type(const ::std::string& value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.IconInfo.type)
}
inline void IconInfo::set_type(const char* value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.IconInfo.type)
}
inline void IconInfo::set_type(const char* value, size_t size) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.IconInfo.type)
}
inline ::std::string* IconInfo::mutable_type() {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.IconInfo.type)
  return type_;
}
inline ::std::string* IconInfo::release_type() {
  clear_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = type_;
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IconInfo::set_allocated_type(::std::string* type) {
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (type) {
    set_has_type();
    type_ = type;
  } else {
    clear_has_type();
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.IconInfo.type)
}

// -------------------------------------------------------------------

// GuildIconSyncGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool GuildIconSyncGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildIconSyncGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildIconSyncGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildIconSyncGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command GuildIconSyncGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildIconSyncGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildIconSyncGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildIconSyncGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_GUILD_ICON_SYNC];
inline bool GuildIconSyncGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildIconSyncGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildIconSyncGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildIconSyncGuildCmd::clear_param() {
  param_ = 43;
  clear_has_param();
}
inline ::Cmd::GuildParam GuildIconSyncGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildIconSyncGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void GuildIconSyncGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildIconSyncGuildCmd.param)
}

// repeated .Cmd.IconInfo infos = 3;
inline int GuildIconSyncGuildCmd::infos_size() const {
  return infos_.size();
}
inline void GuildIconSyncGuildCmd::clear_infos() {
  infos_.Clear();
}
inline const ::Cmd::IconInfo& GuildIconSyncGuildCmd::infos(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildIconSyncGuildCmd.infos)
  return infos_.Get(index);
}
inline ::Cmd::IconInfo* GuildIconSyncGuildCmd::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildIconSyncGuildCmd.infos)
  return infos_.Mutable(index);
}
inline ::Cmd::IconInfo* GuildIconSyncGuildCmd::add_infos() {
  // @@protoc_insertion_point(field_add:Cmd.GuildIconSyncGuildCmd.infos)
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::IconInfo >&
GuildIconSyncGuildCmd::infos() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildIconSyncGuildCmd.infos)
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::IconInfo >*
GuildIconSyncGuildCmd::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildIconSyncGuildCmd.infos)
  return &infos_;
}

// repeated uint32 dels = 4;
inline int GuildIconSyncGuildCmd::dels_size() const {
  return dels_.size();
}
inline void GuildIconSyncGuildCmd::clear_dels() {
  dels_.Clear();
}
inline ::google::protobuf::uint32 GuildIconSyncGuildCmd::dels(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildIconSyncGuildCmd.dels)
  return dels_.Get(index);
}
inline void GuildIconSyncGuildCmd::set_dels(int index, ::google::protobuf::uint32 value) {
  dels_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.GuildIconSyncGuildCmd.dels)
}
inline void GuildIconSyncGuildCmd::add_dels(::google::protobuf::uint32 value) {
  dels_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.GuildIconSyncGuildCmd.dels)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GuildIconSyncGuildCmd::dels() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildIconSyncGuildCmd.dels)
  return dels_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GuildIconSyncGuildCmd::mutable_dels() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildIconSyncGuildCmd.dels)
  return &dels_;
}

// -------------------------------------------------------------------

// GuildIconAddGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool GuildIconAddGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildIconAddGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildIconAddGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildIconAddGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command GuildIconAddGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildIconAddGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildIconAddGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildIconAddGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_GUILD_ICON_ADD];
inline bool GuildIconAddGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildIconAddGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildIconAddGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildIconAddGuildCmd::clear_param() {
  param_ = 44;
  clear_has_param();
}
inline ::Cmd::GuildParam GuildIconAddGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildIconAddGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void GuildIconAddGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildIconAddGuildCmd.param)
}

// optional uint32 index = 3 [default = 0];
inline bool GuildIconAddGuildCmd::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildIconAddGuildCmd::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildIconAddGuildCmd::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildIconAddGuildCmd::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 GuildIconAddGuildCmd::index() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildIconAddGuildCmd.index)
  return index_;
}
inline void GuildIconAddGuildCmd::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildIconAddGuildCmd.index)
}

// optional .Cmd.EIconState state = 4 [default = EICON_INIT];
inline bool GuildIconAddGuildCmd::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildIconAddGuildCmd::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildIconAddGuildCmd::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildIconAddGuildCmd::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::Cmd::EIconState GuildIconAddGuildCmd::state() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildIconAddGuildCmd.state)
  return static_cast< ::Cmd::EIconState >(state_);
}
inline void GuildIconAddGuildCmd::set_state(::Cmd::EIconState value) {
  assert(::Cmd::EIconState_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildIconAddGuildCmd.state)
}

// optional uint32 createtime = 5 [default = 0];
inline bool GuildIconAddGuildCmd::has_createtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildIconAddGuildCmd::set_has_createtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildIconAddGuildCmd::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildIconAddGuildCmd::clear_createtime() {
  createtime_ = 0u;
  clear_has_createtime();
}
inline ::google::protobuf::uint32 GuildIconAddGuildCmd::createtime() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildIconAddGuildCmd.createtime)
  return createtime_;
}
inline void GuildIconAddGuildCmd::set_createtime(::google::protobuf::uint32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildIconAddGuildCmd.createtime)
}

// optional bool isdelete = 6 [default = false];
inline bool GuildIconAddGuildCmd::has_isdelete() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildIconAddGuildCmd::set_has_isdelete() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildIconAddGuildCmd::clear_has_isdelete() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildIconAddGuildCmd::clear_isdelete() {
  isdelete_ = false;
  clear_has_isdelete();
}
inline bool GuildIconAddGuildCmd::isdelete() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildIconAddGuildCmd.isdelete)
  return isdelete_;
}
inline void GuildIconAddGuildCmd::set_isdelete(bool value) {
  set_has_isdelete();
  isdelete_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildIconAddGuildCmd.isdelete)
}

// optional string type = 7;
inline bool GuildIconAddGuildCmd::has_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildIconAddGuildCmd::set_has_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildIconAddGuildCmd::clear_has_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildIconAddGuildCmd::clear_type() {
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_->clear();
  }
  clear_has_type();
}
inline const ::std::string& GuildIconAddGuildCmd::type() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildIconAddGuildCmd.type)
  return *type_;
}
inline void GuildIconAddGuildCmd::set_type(const ::std::string& value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildIconAddGuildCmd.type)
}
inline void GuildIconAddGuildCmd::set_type(const char* value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildIconAddGuildCmd.type)
}
inline void GuildIconAddGuildCmd::set_type(const char* value, size_t size) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildIconAddGuildCmd.type)
}
inline ::std::string* GuildIconAddGuildCmd::mutable_type() {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildIconAddGuildCmd.type)
  return type_;
}
inline ::std::string* GuildIconAddGuildCmd::release_type() {
  clear_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = type_;
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildIconAddGuildCmd::set_allocated_type(::std::string* type) {
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (type) {
    set_has_type();
    type_ = type;
  } else {
    clear_has_type();
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildIconAddGuildCmd.type)
}

// -------------------------------------------------------------------

// GuildIconUploadGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool GuildIconUploadGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildIconUploadGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildIconUploadGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildIconUploadGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command GuildIconUploadGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildIconUploadGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildIconUploadGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildIconUploadGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_GUILD_ICON_UPLOAD];
inline bool GuildIconUploadGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildIconUploadGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildIconUploadGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildIconUploadGuildCmd::clear_param() {
  param_ = 45;
  clear_has_param();
}
inline ::Cmd::GuildParam GuildIconUploadGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildIconUploadGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void GuildIconUploadGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildIconUploadGuildCmd.param)
}

// optional uint32 index = 3 [default = 0];
inline bool GuildIconUploadGuildCmd::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildIconUploadGuildCmd::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildIconUploadGuildCmd::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildIconUploadGuildCmd::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 GuildIconUploadGuildCmd::index() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildIconUploadGuildCmd.index)
  return index_;
}
inline void GuildIconUploadGuildCmd::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildIconUploadGuildCmd.index)
}

// optional string policy = 4;
inline bool GuildIconUploadGuildCmd::has_policy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildIconUploadGuildCmd::set_has_policy() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildIconUploadGuildCmd::clear_has_policy() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildIconUploadGuildCmd::clear_policy() {
  if (policy_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    policy_->clear();
  }
  clear_has_policy();
}
inline const ::std::string& GuildIconUploadGuildCmd::policy() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildIconUploadGuildCmd.policy)
  return *policy_;
}
inline void GuildIconUploadGuildCmd::set_policy(const ::std::string& value) {
  set_has_policy();
  if (policy_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    policy_ = new ::std::string;
  }
  policy_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildIconUploadGuildCmd.policy)
}
inline void GuildIconUploadGuildCmd::set_policy(const char* value) {
  set_has_policy();
  if (policy_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    policy_ = new ::std::string;
  }
  policy_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildIconUploadGuildCmd.policy)
}
inline void GuildIconUploadGuildCmd::set_policy(const char* value, size_t size) {
  set_has_policy();
  if (policy_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    policy_ = new ::std::string;
  }
  policy_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildIconUploadGuildCmd.policy)
}
inline ::std::string* GuildIconUploadGuildCmd::mutable_policy() {
  set_has_policy();
  if (policy_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    policy_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildIconUploadGuildCmd.policy)
  return policy_;
}
inline ::std::string* GuildIconUploadGuildCmd::release_policy() {
  clear_has_policy();
  if (policy_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = policy_;
    policy_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildIconUploadGuildCmd::set_allocated_policy(::std::string* policy) {
  if (policy_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete policy_;
  }
  if (policy) {
    set_has_policy();
    policy_ = policy;
  } else {
    clear_has_policy();
    policy_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildIconUploadGuildCmd.policy)
}

// optional string signature = 5;
inline bool GuildIconUploadGuildCmd::has_signature() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildIconUploadGuildCmd::set_has_signature() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildIconUploadGuildCmd::clear_has_signature() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildIconUploadGuildCmd::clear_signature() {
  if (signature_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    signature_->clear();
  }
  clear_has_signature();
}
inline const ::std::string& GuildIconUploadGuildCmd::signature() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildIconUploadGuildCmd.signature)
  return *signature_;
}
inline void GuildIconUploadGuildCmd::set_signature(const ::std::string& value) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    signature_ = new ::std::string;
  }
  signature_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildIconUploadGuildCmd.signature)
}
inline void GuildIconUploadGuildCmd::set_signature(const char* value) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    signature_ = new ::std::string;
  }
  signature_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildIconUploadGuildCmd.signature)
}
inline void GuildIconUploadGuildCmd::set_signature(const char* value, size_t size) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    signature_ = new ::std::string;
  }
  signature_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildIconUploadGuildCmd.signature)
}
inline ::std::string* GuildIconUploadGuildCmd::mutable_signature() {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    signature_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildIconUploadGuildCmd.signature)
  return signature_;
}
inline ::std::string* GuildIconUploadGuildCmd::release_signature() {
  clear_has_signature();
  if (signature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = signature_;
    signature_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildIconUploadGuildCmd::set_allocated_signature(::std::string* signature) {
  if (signature_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete signature_;
  }
  if (signature) {
    set_has_signature();
    signature_ = signature;
  } else {
    clear_has_signature();
    signature_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildIconUploadGuildCmd.signature)
}

// optional string type = 6;
inline bool GuildIconUploadGuildCmd::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildIconUploadGuildCmd::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildIconUploadGuildCmd::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildIconUploadGuildCmd::clear_type() {
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_->clear();
  }
  clear_has_type();
}
inline const ::std::string& GuildIconUploadGuildCmd::type() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildIconUploadGuildCmd.type)
  return *type_;
}
inline void GuildIconUploadGuildCmd::set_type(const ::std::string& value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildIconUploadGuildCmd.type)
}
inline void GuildIconUploadGuildCmd::set_type(const char* value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildIconUploadGuildCmd.type)
}
inline void GuildIconUploadGuildCmd::set_type(const char* value, size_t size) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildIconUploadGuildCmd.type)
}
inline ::std::string* GuildIconUploadGuildCmd::mutable_type() {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildIconUploadGuildCmd.type)
  return type_;
}
inline ::std::string* GuildIconUploadGuildCmd::release_type() {
  clear_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = type_;
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildIconUploadGuildCmd::set_allocated_type(::std::string* type) {
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (type) {
    set_has_type();
    type_ = type;
  } else {
    clear_has_type();
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildIconUploadGuildCmd.type)
}

// -------------------------------------------------------------------

// OpenFunctionGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool OpenFunctionGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpenFunctionGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpenFunctionGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpenFunctionGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command OpenFunctionGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.OpenFunctionGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void OpenFunctionGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OpenFunctionGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_OPEN_FUNCTION];
inline bool OpenFunctionGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OpenFunctionGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OpenFunctionGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OpenFunctionGuildCmd::clear_param() {
  param_ = 47;
  clear_has_param();
}
inline ::Cmd::GuildParam OpenFunctionGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.OpenFunctionGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void OpenFunctionGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OpenFunctionGuildCmd.param)
}

// optional .Cmd.EGuildFunction func = 3 [default = EGUILDFUNCTION_MIN];
inline bool OpenFunctionGuildCmd::has_func() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OpenFunctionGuildCmd::set_has_func() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OpenFunctionGuildCmd::clear_has_func() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OpenFunctionGuildCmd::clear_func() {
  func_ = 0;
  clear_has_func();
}
inline ::Cmd::EGuildFunction OpenFunctionGuildCmd::func() const {
  // @@protoc_insertion_point(field_get:Cmd.OpenFunctionGuildCmd.func)
  return static_cast< ::Cmd::EGuildFunction >(func_);
}
inline void OpenFunctionGuildCmd::set_func(::Cmd::EGuildFunction value) {
  assert(::Cmd::EGuildFunction_IsValid(value));
  set_has_func();
  func_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OpenFunctionGuildCmd.func)
}

// -------------------------------------------------------------------

// BuildGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool BuildGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuildGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuildGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuildGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command BuildGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.BuildGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void BuildGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuildGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_BUILD];
inline bool BuildGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuildGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuildGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuildGuildCmd::clear_param() {
  param_ = 48;
  clear_has_param();
}
inline ::Cmd::GuildParam BuildGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.BuildGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void BuildGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuildGuildCmd.param)
}

// optional .Cmd.EGuildBuilding building = 3 [default = EGUILDBUILDING_MIN];
inline bool BuildGuildCmd::has_building() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuildGuildCmd::set_has_building() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuildGuildCmd::clear_has_building() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuildGuildCmd::clear_building() {
  building_ = 0;
  clear_has_building();
}
inline ::Cmd::EGuildBuilding BuildGuildCmd::building() const {
  // @@protoc_insertion_point(field_get:Cmd.BuildGuildCmd.building)
  return static_cast< ::Cmd::EGuildBuilding >(building_);
}
inline void BuildGuildCmd::set_building(::Cmd::EGuildBuilding value) {
  assert(::Cmd::EGuildBuilding_IsValid(value));
  set_has_building();
  building_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuildGuildCmd.building)
}

// -------------------------------------------------------------------

// SubmitMaterialGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool SubmitMaterialGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SubmitMaterialGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SubmitMaterialGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SubmitMaterialGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command SubmitMaterialGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SubmitMaterialGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SubmitMaterialGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SubmitMaterialGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_SUBMIT_MATERIAL];
inline bool SubmitMaterialGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SubmitMaterialGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SubmitMaterialGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SubmitMaterialGuildCmd::clear_param() {
  param_ = 49;
  clear_has_param();
}
inline ::Cmd::GuildParam SubmitMaterialGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SubmitMaterialGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void SubmitMaterialGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SubmitMaterialGuildCmd.param)
}

// optional .Cmd.EGuildBuilding building = 3 [default = EGUILDBUILDING_MIN];
inline bool SubmitMaterialGuildCmd::has_building() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SubmitMaterialGuildCmd::set_has_building() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SubmitMaterialGuildCmd::clear_has_building() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SubmitMaterialGuildCmd::clear_building() {
  building_ = 0;
  clear_has_building();
}
inline ::Cmd::EGuildBuilding SubmitMaterialGuildCmd::building() const {
  // @@protoc_insertion_point(field_get:Cmd.SubmitMaterialGuildCmd.building)
  return static_cast< ::Cmd::EGuildBuilding >(building_);
}
inline void SubmitMaterialGuildCmd::set_building(::Cmd::EGuildBuilding value) {
  assert(::Cmd::EGuildBuilding_IsValid(value));
  set_has_building();
  building_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SubmitMaterialGuildCmd.building)
}

// optional uint32 materialid = 4 [default = 0];
inline bool SubmitMaterialGuildCmd::has_materialid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SubmitMaterialGuildCmd::set_has_materialid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SubmitMaterialGuildCmd::clear_has_materialid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SubmitMaterialGuildCmd::clear_materialid() {
  materialid_ = 0u;
  clear_has_materialid();
}
inline ::google::protobuf::uint32 SubmitMaterialGuildCmd::materialid() const {
  // @@protoc_insertion_point(field_get:Cmd.SubmitMaterialGuildCmd.materialid)
  return materialid_;
}
inline void SubmitMaterialGuildCmd::set_materialid(::google::protobuf::uint32 value) {
  set_has_materialid();
  materialid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SubmitMaterialGuildCmd.materialid)
}

// -------------------------------------------------------------------

// BuildingNtfGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool BuildingNtfGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuildingNtfGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuildingNtfGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuildingNtfGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command BuildingNtfGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.BuildingNtfGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void BuildingNtfGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuildingNtfGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_BUILDING_NTF];
inline bool BuildingNtfGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuildingNtfGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuildingNtfGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuildingNtfGuildCmd::clear_param() {
  param_ = 50;
  clear_has_param();
}
inline ::Cmd::GuildParam BuildingNtfGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.BuildingNtfGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void BuildingNtfGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuildingNtfGuildCmd.param)
}

// repeated .Cmd.GuildBuilding buildings = 3;
inline int BuildingNtfGuildCmd::buildings_size() const {
  return buildings_.size();
}
inline void BuildingNtfGuildCmd::clear_buildings() {
  buildings_.Clear();
}
inline const ::Cmd::GuildBuilding& BuildingNtfGuildCmd::buildings(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BuildingNtfGuildCmd.buildings)
  return buildings_.Get(index);
}
inline ::Cmd::GuildBuilding* BuildingNtfGuildCmd::mutable_buildings(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BuildingNtfGuildCmd.buildings)
  return buildings_.Mutable(index);
}
inline ::Cmd::GuildBuilding* BuildingNtfGuildCmd::add_buildings() {
  // @@protoc_insertion_point(field_add:Cmd.BuildingNtfGuildCmd.buildings)
  return buildings_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildBuilding >&
BuildingNtfGuildCmd::buildings() const {
  // @@protoc_insertion_point(field_list:Cmd.BuildingNtfGuildCmd.buildings)
  return buildings_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildBuilding >*
BuildingNtfGuildCmd::mutable_buildings() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BuildingNtfGuildCmd.buildings)
  return &buildings_;
}

// -------------------------------------------------------------------

// BuildingSubmitCountGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool BuildingSubmitCountGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuildingSubmitCountGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuildingSubmitCountGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuildingSubmitCountGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command BuildingSubmitCountGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.BuildingSubmitCountGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void BuildingSubmitCountGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuildingSubmitCountGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_BUILDING_SUBMIT_COUNT];
inline bool BuildingSubmitCountGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuildingSubmitCountGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuildingSubmitCountGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuildingSubmitCountGuildCmd::clear_param() {
  param_ = 51;
  clear_has_param();
}
inline ::Cmd::GuildParam BuildingSubmitCountGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.BuildingSubmitCountGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void BuildingSubmitCountGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuildingSubmitCountGuildCmd.param)
}

// optional .Cmd.EGuildBuilding type = 3 [default = EGUILDBUILDING_MIN];
inline bool BuildingSubmitCountGuildCmd::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuildingSubmitCountGuildCmd::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuildingSubmitCountGuildCmd::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuildingSubmitCountGuildCmd::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::EGuildBuilding BuildingSubmitCountGuildCmd::type() const {
  // @@protoc_insertion_point(field_get:Cmd.BuildingSubmitCountGuildCmd.type)
  return static_cast< ::Cmd::EGuildBuilding >(type_);
}
inline void BuildingSubmitCountGuildCmd::set_type(::Cmd::EGuildBuilding value) {
  assert(::Cmd::EGuildBuilding_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuildingSubmitCountGuildCmd.type)
}

// optional uint32 count = 4 [default = 0];
inline bool BuildingSubmitCountGuildCmd::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BuildingSubmitCountGuildCmd::set_has_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BuildingSubmitCountGuildCmd::clear_has_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BuildingSubmitCountGuildCmd::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 BuildingSubmitCountGuildCmd::count() const {
  // @@protoc_insertion_point(field_get:Cmd.BuildingSubmitCountGuildCmd.count)
  return count_;
}
inline void BuildingSubmitCountGuildCmd::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuildingSubmitCountGuildCmd.count)
}

// -------------------------------------------------------------------

// ChallengeUpdateNtfGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool ChallengeUpdateNtfGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChallengeUpdateNtfGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChallengeUpdateNtfGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChallengeUpdateNtfGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command ChallengeUpdateNtfGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ChallengeUpdateNtfGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ChallengeUpdateNtfGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChallengeUpdateNtfGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_CHALLENGE_UPDATE];
inline bool ChallengeUpdateNtfGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChallengeUpdateNtfGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChallengeUpdateNtfGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChallengeUpdateNtfGuildCmd::clear_param() {
  param_ = 52;
  clear_has_param();
}
inline ::Cmd::GuildParam ChallengeUpdateNtfGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ChallengeUpdateNtfGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void ChallengeUpdateNtfGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChallengeUpdateNtfGuildCmd.param)
}

// repeated .Cmd.GuildChallenge updates = 3;
inline int ChallengeUpdateNtfGuildCmd::updates_size() const {
  return updates_.size();
}
inline void ChallengeUpdateNtfGuildCmd::clear_updates() {
  updates_.Clear();
}
inline const ::Cmd::GuildChallenge& ChallengeUpdateNtfGuildCmd::updates(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.ChallengeUpdateNtfGuildCmd.updates)
  return updates_.Get(index);
}
inline ::Cmd::GuildChallenge* ChallengeUpdateNtfGuildCmd::mutable_updates(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.ChallengeUpdateNtfGuildCmd.updates)
  return updates_.Mutable(index);
}
inline ::Cmd::GuildChallenge* ChallengeUpdateNtfGuildCmd::add_updates() {
  // @@protoc_insertion_point(field_add:Cmd.ChallengeUpdateNtfGuildCmd.updates)
  return updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallenge >&
ChallengeUpdateNtfGuildCmd::updates() const {
  // @@protoc_insertion_point(field_list:Cmd.ChallengeUpdateNtfGuildCmd.updates)
  return updates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallenge >*
ChallengeUpdateNtfGuildCmd::mutable_updates() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.ChallengeUpdateNtfGuildCmd.updates)
  return &updates_;
}

// repeated .Cmd.GuildChallenge dels = 4;
inline int ChallengeUpdateNtfGuildCmd::dels_size() const {
  return dels_.size();
}
inline void ChallengeUpdateNtfGuildCmd::clear_dels() {
  dels_.Clear();
}
inline const ::Cmd::GuildChallenge& ChallengeUpdateNtfGuildCmd::dels(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.ChallengeUpdateNtfGuildCmd.dels)
  return dels_.Get(index);
}
inline ::Cmd::GuildChallenge* ChallengeUpdateNtfGuildCmd::mutable_dels(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.ChallengeUpdateNtfGuildCmd.dels)
  return dels_.Mutable(index);
}
inline ::Cmd::GuildChallenge* ChallengeUpdateNtfGuildCmd::add_dels() {
  // @@protoc_insertion_point(field_add:Cmd.ChallengeUpdateNtfGuildCmd.dels)
  return dels_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallenge >&
ChallengeUpdateNtfGuildCmd::dels() const {
  // @@protoc_insertion_point(field_list:Cmd.ChallengeUpdateNtfGuildCmd.dels)
  return dels_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallenge >*
ChallengeUpdateNtfGuildCmd::mutable_dels() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.ChallengeUpdateNtfGuildCmd.dels)
  return &dels_;
}

// optional uint32 refreshtime = 5;
inline bool ChallengeUpdateNtfGuildCmd::has_refreshtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChallengeUpdateNtfGuildCmd::set_has_refreshtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChallengeUpdateNtfGuildCmd::clear_has_refreshtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChallengeUpdateNtfGuildCmd::clear_refreshtime() {
  refreshtime_ = 0u;
  clear_has_refreshtime();
}
inline ::google::protobuf::uint32 ChallengeUpdateNtfGuildCmd::refreshtime() const {
  // @@protoc_insertion_point(field_get:Cmd.ChallengeUpdateNtfGuildCmd.refreshtime)
  return refreshtime_;
}
inline void ChallengeUpdateNtfGuildCmd::set_refreshtime(::google::protobuf::uint32 value) {
  set_has_refreshtime();
  refreshtime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChallengeUpdateNtfGuildCmd.refreshtime)
}

// -------------------------------------------------------------------

// WelfareNtfGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool WelfareNtfGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WelfareNtfGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WelfareNtfGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WelfareNtfGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command WelfareNtfGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.WelfareNtfGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void WelfareNtfGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WelfareNtfGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_WELFARE_NTF];
inline bool WelfareNtfGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WelfareNtfGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WelfareNtfGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WelfareNtfGuildCmd::clear_param() {
  param_ = 53;
  clear_has_param();
}
inline ::Cmd::GuildParam WelfareNtfGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.WelfareNtfGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void WelfareNtfGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WelfareNtfGuildCmd.param)
}

// optional bool welfare = 3 [default = false];
inline bool WelfareNtfGuildCmd::has_welfare() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WelfareNtfGuildCmd::set_has_welfare() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WelfareNtfGuildCmd::clear_has_welfare() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WelfareNtfGuildCmd::clear_welfare() {
  welfare_ = false;
  clear_has_welfare();
}
inline bool WelfareNtfGuildCmd::welfare() const {
  // @@protoc_insertion_point(field_get:Cmd.WelfareNtfGuildCmd.welfare)
  return welfare_;
}
inline void WelfareNtfGuildCmd::set_welfare(bool value) {
  set_has_welfare();
  welfare_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WelfareNtfGuildCmd.welfare)
}

// -------------------------------------------------------------------

// GetWelfareGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool GetWelfareGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetWelfareGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetWelfareGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetWelfareGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command GetWelfareGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GetWelfareGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GetWelfareGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetWelfareGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_GET_WELFARE];
inline bool GetWelfareGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetWelfareGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetWelfareGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetWelfareGuildCmd::clear_param() {
  param_ = 54;
  clear_has_param();
}
inline ::Cmd::GuildParam GetWelfareGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GetWelfareGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void GetWelfareGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetWelfareGuildCmd.param)
}

// -------------------------------------------------------------------

// BuildingLvupEffect

// optional .Cmd.EGuildBuilding type = 1 [default = EGUILDBUILDING_MIN];
inline bool BuildingLvupEffect::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuildingLvupEffect::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuildingLvupEffect::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuildingLvupEffect::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::EGuildBuilding BuildingLvupEffect::type() const {
  // @@protoc_insertion_point(field_get:Cmd.BuildingLvupEffect.type)
  return static_cast< ::Cmd::EGuildBuilding >(type_);
}
inline void BuildingLvupEffect::set_type(::Cmd::EGuildBuilding value) {
  assert(::Cmd::EGuildBuilding_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuildingLvupEffect.type)
}

// optional uint32 level = 2 [default = 0];
inline bool BuildingLvupEffect::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuildingLvupEffect::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuildingLvupEffect::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuildingLvupEffect::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 BuildingLvupEffect::level() const {
  // @@protoc_insertion_point(field_get:Cmd.BuildingLvupEffect.level)
  return level_;
}
inline void BuildingLvupEffect::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuildingLvupEffect.level)
}

// -------------------------------------------------------------------

// BuildingLvupEffGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool BuildingLvupEffGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuildingLvupEffGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuildingLvupEffGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuildingLvupEffGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command BuildingLvupEffGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.BuildingLvupEffGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void BuildingLvupEffGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuildingLvupEffGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_BUILDING_LVUP_EFF];
inline bool BuildingLvupEffGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuildingLvupEffGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuildingLvupEffGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuildingLvupEffGuildCmd::clear_param() {
  param_ = 55;
  clear_has_param();
}
inline ::Cmd::GuildParam BuildingLvupEffGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.BuildingLvupEffGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void BuildingLvupEffGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuildingLvupEffGuildCmd.param)
}

// repeated .Cmd.BuildingLvupEffect effects = 3;
inline int BuildingLvupEffGuildCmd::effects_size() const {
  return effects_.size();
}
inline void BuildingLvupEffGuildCmd::clear_effects() {
  effects_.Clear();
}
inline const ::Cmd::BuildingLvupEffect& BuildingLvupEffGuildCmd::effects(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BuildingLvupEffGuildCmd.effects)
  return effects_.Get(index);
}
inline ::Cmd::BuildingLvupEffect* BuildingLvupEffGuildCmd::mutable_effects(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BuildingLvupEffGuildCmd.effects)
  return effects_.Mutable(index);
}
inline ::Cmd::BuildingLvupEffect* BuildingLvupEffGuildCmd::add_effects() {
  // @@protoc_insertion_point(field_add:Cmd.BuildingLvupEffGuildCmd.effects)
  return effects_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::BuildingLvupEffect >&
BuildingLvupEffGuildCmd::effects() const {
  // @@protoc_insertion_point(field_list:Cmd.BuildingLvupEffGuildCmd.effects)
  return effects_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::BuildingLvupEffect >*
BuildingLvupEffGuildCmd::mutable_effects() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BuildingLvupEffGuildCmd.effects)
  return &effects_;
}

// -------------------------------------------------------------------

// ArtifactUpdateNtfGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool ArtifactUpdateNtfGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArtifactUpdateNtfGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArtifactUpdateNtfGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArtifactUpdateNtfGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command ArtifactUpdateNtfGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ArtifactUpdateNtfGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ArtifactUpdateNtfGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ArtifactUpdateNtfGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_ARTIFACT_UPDATE_NTF];
inline bool ArtifactUpdateNtfGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArtifactUpdateNtfGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArtifactUpdateNtfGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArtifactUpdateNtfGuildCmd::clear_param() {
  param_ = 56;
  clear_has_param();
}
inline ::Cmd::GuildParam ArtifactUpdateNtfGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ArtifactUpdateNtfGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void ArtifactUpdateNtfGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ArtifactUpdateNtfGuildCmd.param)
}

// repeated .Cmd.GuildArtifactItem itemupdates = 3;
inline int ArtifactUpdateNtfGuildCmd::itemupdates_size() const {
  return itemupdates_.size();
}
inline void ArtifactUpdateNtfGuildCmd::clear_itemupdates() {
  itemupdates_.Clear();
}
inline const ::Cmd::GuildArtifactItem& ArtifactUpdateNtfGuildCmd::itemupdates(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.ArtifactUpdateNtfGuildCmd.itemupdates)
  return itemupdates_.Get(index);
}
inline ::Cmd::GuildArtifactItem* ArtifactUpdateNtfGuildCmd::mutable_itemupdates(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.ArtifactUpdateNtfGuildCmd.itemupdates)
  return itemupdates_.Mutable(index);
}
inline ::Cmd::GuildArtifactItem* ArtifactUpdateNtfGuildCmd::add_itemupdates() {
  // @@protoc_insertion_point(field_add:Cmd.ArtifactUpdateNtfGuildCmd.itemupdates)
  return itemupdates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactItem >&
ArtifactUpdateNtfGuildCmd::itemupdates() const {
  // @@protoc_insertion_point(field_list:Cmd.ArtifactUpdateNtfGuildCmd.itemupdates)
  return itemupdates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactItem >*
ArtifactUpdateNtfGuildCmd::mutable_itemupdates() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.ArtifactUpdateNtfGuildCmd.itemupdates)
  return &itemupdates_;
}

// repeated string itemdels = 4;
inline int ArtifactUpdateNtfGuildCmd::itemdels_size() const {
  return itemdels_.size();
}
inline void ArtifactUpdateNtfGuildCmd::clear_itemdels() {
  itemdels_.Clear();
}
inline const ::std::string& ArtifactUpdateNtfGuildCmd::itemdels(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.ArtifactUpdateNtfGuildCmd.itemdels)
  return itemdels_.Get(index);
}
inline ::std::string* ArtifactUpdateNtfGuildCmd::mutable_itemdels(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.ArtifactUpdateNtfGuildCmd.itemdels)
  return itemdels_.Mutable(index);
}
inline void ArtifactUpdateNtfGuildCmd::set_itemdels(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Cmd.ArtifactUpdateNtfGuildCmd.itemdels)
  itemdels_.Mutable(index)->assign(value);
}
inline void ArtifactUpdateNtfGuildCmd::set_itemdels(int index, const char* value) {
  itemdels_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.ArtifactUpdateNtfGuildCmd.itemdels)
}
inline void ArtifactUpdateNtfGuildCmd::set_itemdels(int index, const char* value, size_t size) {
  itemdels_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.ArtifactUpdateNtfGuildCmd.itemdels)
}
inline ::std::string* ArtifactUpdateNtfGuildCmd::add_itemdels() {
  return itemdels_.Add();
}
inline void ArtifactUpdateNtfGuildCmd::add_itemdels(const ::std::string& value) {
  itemdels_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Cmd.ArtifactUpdateNtfGuildCmd.itemdels)
}
inline void ArtifactUpdateNtfGuildCmd::add_itemdels(const char* value) {
  itemdels_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Cmd.ArtifactUpdateNtfGuildCmd.itemdels)
}
inline void ArtifactUpdateNtfGuildCmd::add_itemdels(const char* value, size_t size) {
  itemdels_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Cmd.ArtifactUpdateNtfGuildCmd.itemdels)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ArtifactUpdateNtfGuildCmd::itemdels() const {
  // @@protoc_insertion_point(field_list:Cmd.ArtifactUpdateNtfGuildCmd.itemdels)
  return itemdels_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ArtifactUpdateNtfGuildCmd::mutable_itemdels() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.ArtifactUpdateNtfGuildCmd.itemdels)
  return &itemdels_;
}

// repeated .Cmd.GuildArtifactData dataupdates = 5;
inline int ArtifactUpdateNtfGuildCmd::dataupdates_size() const {
  return dataupdates_.size();
}
inline void ArtifactUpdateNtfGuildCmd::clear_dataupdates() {
  dataupdates_.Clear();
}
inline const ::Cmd::GuildArtifactData& ArtifactUpdateNtfGuildCmd::dataupdates(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.ArtifactUpdateNtfGuildCmd.dataupdates)
  return dataupdates_.Get(index);
}
inline ::Cmd::GuildArtifactData* ArtifactUpdateNtfGuildCmd::mutable_dataupdates(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.ArtifactUpdateNtfGuildCmd.dataupdates)
  return dataupdates_.Mutable(index);
}
inline ::Cmd::GuildArtifactData* ArtifactUpdateNtfGuildCmd::add_dataupdates() {
  // @@protoc_insertion_point(field_add:Cmd.ArtifactUpdateNtfGuildCmd.dataupdates)
  return dataupdates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactData >&
ArtifactUpdateNtfGuildCmd::dataupdates() const {
  // @@protoc_insertion_point(field_list:Cmd.ArtifactUpdateNtfGuildCmd.dataupdates)
  return dataupdates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactData >*
ArtifactUpdateNtfGuildCmd::mutable_dataupdates() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.ArtifactUpdateNtfGuildCmd.dataupdates)
  return &dataupdates_;
}

// -------------------------------------------------------------------

// ArtifactProduceGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool ArtifactProduceGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArtifactProduceGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArtifactProduceGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArtifactProduceGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command ArtifactProduceGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ArtifactProduceGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ArtifactProduceGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ArtifactProduceGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_ARTIFACT_PRODUCE];
inline bool ArtifactProduceGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArtifactProduceGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArtifactProduceGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArtifactProduceGuildCmd::clear_param() {
  param_ = 57;
  clear_has_param();
}
inline ::Cmd::GuildParam ArtifactProduceGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ArtifactProduceGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void ArtifactProduceGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ArtifactProduceGuildCmd.param)
}

// optional uint32 id = 3 [default = 0];
inline bool ArtifactProduceGuildCmd::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ArtifactProduceGuildCmd::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ArtifactProduceGuildCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ArtifactProduceGuildCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ArtifactProduceGuildCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.ArtifactProduceGuildCmd.id)
  return id_;
}
inline void ArtifactProduceGuildCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ArtifactProduceGuildCmd.id)
}

// -------------------------------------------------------------------

// ArtifactOptGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool ArtifactOptGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArtifactOptGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArtifactOptGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArtifactOptGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command ArtifactOptGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ArtifactOptGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ArtifactOptGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ArtifactOptGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_ARTIFACT_OPT];
inline bool ArtifactOptGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArtifactOptGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArtifactOptGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArtifactOptGuildCmd::clear_param() {
  param_ = 58;
  clear_has_param();
}
inline ::Cmd::GuildParam ArtifactOptGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ArtifactOptGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void ArtifactOptGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ArtifactOptGuildCmd.param)
}

// optional .Cmd.EArtifactOptType opt = 3 [default = EARTIFACTOPTTYPE_MIN];
inline bool ArtifactOptGuildCmd::has_opt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ArtifactOptGuildCmd::set_has_opt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ArtifactOptGuildCmd::clear_has_opt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ArtifactOptGuildCmd::clear_opt() {
  opt_ = 0;
  clear_has_opt();
}
inline ::Cmd::EArtifactOptType ArtifactOptGuildCmd::opt() const {
  // @@protoc_insertion_point(field_get:Cmd.ArtifactOptGuildCmd.opt)
  return static_cast< ::Cmd::EArtifactOptType >(opt_);
}
inline void ArtifactOptGuildCmd::set_opt(::Cmd::EArtifactOptType value) {
  assert(::Cmd::EArtifactOptType_IsValid(value));
  set_has_opt();
  opt_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ArtifactOptGuildCmd.opt)
}

// repeated string guid = 4;
inline int ArtifactOptGuildCmd::guid_size() const {
  return guid_.size();
}
inline void ArtifactOptGuildCmd::clear_guid() {
  guid_.Clear();
}
inline const ::std::string& ArtifactOptGuildCmd::guid(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.ArtifactOptGuildCmd.guid)
  return guid_.Get(index);
}
inline ::std::string* ArtifactOptGuildCmd::mutable_guid(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.ArtifactOptGuildCmd.guid)
  return guid_.Mutable(index);
}
inline void ArtifactOptGuildCmd::set_guid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Cmd.ArtifactOptGuildCmd.guid)
  guid_.Mutable(index)->assign(value);
}
inline void ArtifactOptGuildCmd::set_guid(int index, const char* value) {
  guid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.ArtifactOptGuildCmd.guid)
}
inline void ArtifactOptGuildCmd::set_guid(int index, const char* value, size_t size) {
  guid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.ArtifactOptGuildCmd.guid)
}
inline ::std::string* ArtifactOptGuildCmd::add_guid() {
  return guid_.Add();
}
inline void ArtifactOptGuildCmd::add_guid(const ::std::string& value) {
  guid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Cmd.ArtifactOptGuildCmd.guid)
}
inline void ArtifactOptGuildCmd::add_guid(const char* value) {
  guid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Cmd.ArtifactOptGuildCmd.guid)
}
inline void ArtifactOptGuildCmd::add_guid(const char* value, size_t size) {
  guid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Cmd.ArtifactOptGuildCmd.guid)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ArtifactOptGuildCmd::guid() const {
  // @@protoc_insertion_point(field_list:Cmd.ArtifactOptGuildCmd.guid)
  return guid_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ArtifactOptGuildCmd::mutable_guid() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.ArtifactOptGuildCmd.guid)
  return &guid_;
}

// optional uint64 charid = 5 [default = 0];
inline bool ArtifactOptGuildCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ArtifactOptGuildCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ArtifactOptGuildCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ArtifactOptGuildCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ArtifactOptGuildCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.ArtifactOptGuildCmd.charid)
  return charid_;
}
inline void ArtifactOptGuildCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ArtifactOptGuildCmd.charid)
}

// -------------------------------------------------------------------

// QueryGQuestGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool QueryGQuestGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryGQuestGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryGQuestGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryGQuestGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command QueryGQuestGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryGQuestGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryGQuestGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryGQuestGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_QUERY_GQUEST];
inline bool QueryGQuestGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryGQuestGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryGQuestGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryGQuestGuildCmd::clear_param() {
  param_ = 59;
  clear_has_param();
}
inline ::Cmd::GuildParam QueryGQuestGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryGQuestGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void QueryGQuestGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryGQuestGuildCmd.param)
}

// repeated uint32 submit_quests = 3;
inline int QueryGQuestGuildCmd::submit_quests_size() const {
  return submit_quests_.size();
}
inline void QueryGQuestGuildCmd::clear_submit_quests() {
  submit_quests_.Clear();
}
inline ::google::protobuf::uint32 QueryGQuestGuildCmd::submit_quests(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QueryGQuestGuildCmd.submit_quests)
  return submit_quests_.Get(index);
}
inline void QueryGQuestGuildCmd::set_submit_quests(int index, ::google::protobuf::uint32 value) {
  submit_quests_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.QueryGQuestGuildCmd.submit_quests)
}
inline void QueryGQuestGuildCmd::add_submit_quests(::google::protobuf::uint32 value) {
  submit_quests_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.QueryGQuestGuildCmd.submit_quests)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
QueryGQuestGuildCmd::submit_quests() const {
  // @@protoc_insertion_point(field_list:Cmd.QueryGQuestGuildCmd.submit_quests)
  return submit_quests_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
QueryGQuestGuildCmd::mutable_submit_quests() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QueryGQuestGuildCmd.submit_quests)
  return &submit_quests_;
}

// -------------------------------------------------------------------

// TreasureActionGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool TreasureActionGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TreasureActionGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TreasureActionGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TreasureActionGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command TreasureActionGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TreasureActionGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TreasureActionGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TreasureActionGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_TREASURE_ACTION];
inline bool TreasureActionGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TreasureActionGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TreasureActionGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TreasureActionGuildCmd::clear_param() {
  param_ = 60;
  clear_has_param();
}
inline ::Cmd::GuildParam TreasureActionGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TreasureActionGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void TreasureActionGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TreasureActionGuildCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool TreasureActionGuildCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TreasureActionGuildCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TreasureActionGuildCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TreasureActionGuildCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 TreasureActionGuildCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.TreasureActionGuildCmd.charid)
  return charid_;
}
inline void TreasureActionGuildCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TreasureActionGuildCmd.charid)
}

// optional uint32 guild_treasure_count = 4 [default = 0];
inline bool TreasureActionGuildCmd::has_guild_treasure_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TreasureActionGuildCmd::set_has_guild_treasure_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TreasureActionGuildCmd::clear_has_guild_treasure_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TreasureActionGuildCmd::clear_guild_treasure_count() {
  guild_treasure_count_ = 0u;
  clear_has_guild_treasure_count();
}
inline ::google::protobuf::uint32 TreasureActionGuildCmd::guild_treasure_count() const {
  // @@protoc_insertion_point(field_get:Cmd.TreasureActionGuildCmd.guild_treasure_count)
  return guild_treasure_count_;
}
inline void TreasureActionGuildCmd::set_guild_treasure_count(::google::protobuf::uint32 value) {
  set_has_guild_treasure_count();
  guild_treasure_count_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TreasureActionGuildCmd.guild_treasure_count)
}

// optional uint32 bcoin_treasure_count = 5 [default = 0];
inline bool TreasureActionGuildCmd::has_bcoin_treasure_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TreasureActionGuildCmd::set_has_bcoin_treasure_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TreasureActionGuildCmd::clear_has_bcoin_treasure_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TreasureActionGuildCmd::clear_bcoin_treasure_count() {
  bcoin_treasure_count_ = 0u;
  clear_has_bcoin_treasure_count();
}
inline ::google::protobuf::uint32 TreasureActionGuildCmd::bcoin_treasure_count() const {
  // @@protoc_insertion_point(field_get:Cmd.TreasureActionGuildCmd.bcoin_treasure_count)
  return bcoin_treasure_count_;
}
inline void TreasureActionGuildCmd::set_bcoin_treasure_count(::google::protobuf::uint32 value) {
  set_has_bcoin_treasure_count();
  bcoin_treasure_count_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TreasureActionGuildCmd.bcoin_treasure_count)
}

// optional .Cmd.ETreasureAction action = 6 [default = ETREASUREACTION_MIN];
inline bool TreasureActionGuildCmd::has_action() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TreasureActionGuildCmd::set_has_action() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TreasureActionGuildCmd::clear_has_action() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TreasureActionGuildCmd::clear_action() {
  action_ = 0;
  clear_has_action();
}
inline ::Cmd::ETreasureAction TreasureActionGuildCmd::action() const {
  // @@protoc_insertion_point(field_get:Cmd.TreasureActionGuildCmd.action)
  return static_cast< ::Cmd::ETreasureAction >(action_);
}
inline void TreasureActionGuildCmd::set_action(::Cmd::ETreasureAction value) {
  assert(::Cmd::ETreasureAction_IsValid(value));
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TreasureActionGuildCmd.action)
}

// optional .Cmd.ETreasurePoint point = 7 [default = ETREASUREPOINT_MIN];
inline bool TreasureActionGuildCmd::has_point() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TreasureActionGuildCmd::set_has_point() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TreasureActionGuildCmd::clear_has_point() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TreasureActionGuildCmd::clear_point() {
  point_ = 0;
  clear_has_point();
}
inline ::Cmd::ETreasurePoint TreasureActionGuildCmd::point() const {
  // @@protoc_insertion_point(field_get:Cmd.TreasureActionGuildCmd.point)
  return static_cast< ::Cmd::ETreasurePoint >(point_);
}
inline void TreasureActionGuildCmd::set_point(::Cmd::ETreasurePoint value) {
  assert(::Cmd::ETreasurePoint_IsValid(value));
  set_has_point();
  point_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TreasureActionGuildCmd.point)
}

// optional .Cmd.GuildTreasure treasure = 8;
inline bool TreasureActionGuildCmd::has_treasure() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TreasureActionGuildCmd::set_has_treasure() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TreasureActionGuildCmd::clear_has_treasure() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TreasureActionGuildCmd::clear_treasure() {
  if (treasure_ != NULL) treasure_->::Cmd::GuildTreasure::Clear();
  clear_has_treasure();
}
inline const ::Cmd::GuildTreasure& TreasureActionGuildCmd::treasure() const {
  // @@protoc_insertion_point(field_get:Cmd.TreasureActionGuildCmd.treasure)
  return treasure_ != NULL ? *treasure_ : *default_instance_->treasure_;
}
inline ::Cmd::GuildTreasure* TreasureActionGuildCmd::mutable_treasure() {
  set_has_treasure();
  if (treasure_ == NULL) treasure_ = new ::Cmd::GuildTreasure;
  // @@protoc_insertion_point(field_mutable:Cmd.TreasureActionGuildCmd.treasure)
  return treasure_;
}
inline ::Cmd::GuildTreasure* TreasureActionGuildCmd::release_treasure() {
  clear_has_treasure();
  ::Cmd::GuildTreasure* temp = treasure_;
  treasure_ = NULL;
  return temp;
}
inline void TreasureActionGuildCmd::set_allocated_treasure(::Cmd::GuildTreasure* treasure) {
  delete treasure_;
  treasure_ = treasure;
  if (treasure) {
    set_has_treasure();
  } else {
    clear_has_treasure();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TreasureActionGuildCmd.treasure)
}

// -------------------------------------------------------------------

// BuildingSubmitRankItem

// optional uint64 charid = 1 [default = 0];
inline bool BuildingSubmitRankItem::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuildingSubmitRankItem::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuildingSubmitRankItem::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuildingSubmitRankItem::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 BuildingSubmitRankItem::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.BuildingSubmitRankItem.charid)
  return charid_;
}
inline void BuildingSubmitRankItem::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuildingSubmitRankItem.charid)
}

// optional uint32 submitcounttotal = 2 [default = 0];
inline bool BuildingSubmitRankItem::has_submitcounttotal() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuildingSubmitRankItem::set_has_submitcounttotal() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuildingSubmitRankItem::clear_has_submitcounttotal() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuildingSubmitRankItem::clear_submitcounttotal() {
  submitcounttotal_ = 0u;
  clear_has_submitcounttotal();
}
inline ::google::protobuf::uint32 BuildingSubmitRankItem::submitcounttotal() const {
  // @@protoc_insertion_point(field_get:Cmd.BuildingSubmitRankItem.submitcounttotal)
  return submitcounttotal_;
}
inline void BuildingSubmitRankItem::set_submitcounttotal(::google::protobuf::uint32 value) {
  set_has_submitcounttotal();
  submitcounttotal_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuildingSubmitRankItem.submitcounttotal)
}

// optional uint32 submittime = 3 [default = 0];
inline bool BuildingSubmitRankItem::has_submittime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuildingSubmitRankItem::set_has_submittime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuildingSubmitRankItem::clear_has_submittime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuildingSubmitRankItem::clear_submittime() {
  submittime_ = 0u;
  clear_has_submittime();
}
inline ::google::protobuf::uint32 BuildingSubmitRankItem::submittime() const {
  // @@protoc_insertion_point(field_get:Cmd.BuildingSubmitRankItem.submittime)
  return submittime_;
}
inline void BuildingSubmitRankItem::set_submittime(::google::protobuf::uint32 value) {
  set_has_submittime();
  submittime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuildingSubmitRankItem.submittime)
}

// -------------------------------------------------------------------

// QueryBuildingRankGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool QueryBuildingRankGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryBuildingRankGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryBuildingRankGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryBuildingRankGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command QueryBuildingRankGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryBuildingRankGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryBuildingRankGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryBuildingRankGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_QUERY_BUILDING_RANK];
inline bool QueryBuildingRankGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryBuildingRankGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryBuildingRankGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryBuildingRankGuildCmd::clear_param() {
  param_ = 61;
  clear_has_param();
}
inline ::Cmd::GuildParam QueryBuildingRankGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryBuildingRankGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void QueryBuildingRankGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryBuildingRankGuildCmd.param)
}

// optional .Cmd.EGuildBuilding type = 3 [default = EGUILDBUILDING_MIN];
inline bool QueryBuildingRankGuildCmd::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryBuildingRankGuildCmd::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryBuildingRankGuildCmd::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryBuildingRankGuildCmd::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::EGuildBuilding QueryBuildingRankGuildCmd::type() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryBuildingRankGuildCmd.type)
  return static_cast< ::Cmd::EGuildBuilding >(type_);
}
inline void QueryBuildingRankGuildCmd::set_type(::Cmd::EGuildBuilding value) {
  assert(::Cmd::EGuildBuilding_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryBuildingRankGuildCmd.type)
}

// repeated .Cmd.BuildingSubmitRankItem items = 4;
inline int QueryBuildingRankGuildCmd::items_size() const {
  return items_.size();
}
inline void QueryBuildingRankGuildCmd::clear_items() {
  items_.Clear();
}
inline const ::Cmd::BuildingSubmitRankItem& QueryBuildingRankGuildCmd::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QueryBuildingRankGuildCmd.items)
  return items_.Get(index);
}
inline ::Cmd::BuildingSubmitRankItem* QueryBuildingRankGuildCmd::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.QueryBuildingRankGuildCmd.items)
  return items_.Mutable(index);
}
inline ::Cmd::BuildingSubmitRankItem* QueryBuildingRankGuildCmd::add_items() {
  // @@protoc_insertion_point(field_add:Cmd.QueryBuildingRankGuildCmd.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::BuildingSubmitRankItem >&
QueryBuildingRankGuildCmd::items() const {
  // @@protoc_insertion_point(field_list:Cmd.QueryBuildingRankGuildCmd.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::BuildingSubmitRankItem >*
QueryBuildingRankGuildCmd::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QueryBuildingRankGuildCmd.items)
  return &items_;
}

// -------------------------------------------------------------------

// QueryTreasureResultGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool QueryTreasureResultGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryTreasureResultGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryTreasureResultGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryTreasureResultGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command QueryTreasureResultGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryTreasureResultGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryTreasureResultGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryTreasureResultGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_TREASURE_QUERYRESULT];
inline bool QueryTreasureResultGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryTreasureResultGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryTreasureResultGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryTreasureResultGuildCmd::clear_param() {
  param_ = 62;
  clear_has_param();
}
inline ::Cmd::GuildParam QueryTreasureResultGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryTreasureResultGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void QueryTreasureResultGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryTreasureResultGuildCmd.param)
}

// optional uint32 eventguid = 3 [default = 0];
inline bool QueryTreasureResultGuildCmd::has_eventguid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryTreasureResultGuildCmd::set_has_eventguid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryTreasureResultGuildCmd::clear_has_eventguid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryTreasureResultGuildCmd::clear_eventguid() {
  eventguid_ = 0u;
  clear_has_eventguid();
}
inline ::google::protobuf::uint32 QueryTreasureResultGuildCmd::eventguid() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryTreasureResultGuildCmd.eventguid)
  return eventguid_;
}
inline void QueryTreasureResultGuildCmd::set_eventguid(::google::protobuf::uint32 value) {
  set_has_eventguid();
  eventguid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryTreasureResultGuildCmd.eventguid)
}

// optional .Cmd.TreasureResult result = 4;
inline bool QueryTreasureResultGuildCmd::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryTreasureResultGuildCmd::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryTreasureResultGuildCmd::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryTreasureResultGuildCmd::clear_result() {
  if (result_ != NULL) result_->::Cmd::TreasureResult::Clear();
  clear_has_result();
}
inline const ::Cmd::TreasureResult& QueryTreasureResultGuildCmd::result() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryTreasureResultGuildCmd.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::Cmd::TreasureResult* QueryTreasureResultGuildCmd::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::Cmd::TreasureResult;
  // @@protoc_insertion_point(field_mutable:Cmd.QueryTreasureResultGuildCmd.result)
  return result_;
}
inline ::Cmd::TreasureResult* QueryTreasureResultGuildCmd::release_result() {
  clear_has_result();
  ::Cmd::TreasureResult* temp = result_;
  result_ = NULL;
  return temp;
}
inline void QueryTreasureResultGuildCmd::set_allocated_result(::Cmd::TreasureResult* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.QueryTreasureResultGuildCmd.result)
}

// -------------------------------------------------------------------

// CityShowInfo

// optional uint32 cityid = 1 [default = 0];
inline bool CityShowInfo::has_cityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CityShowInfo::set_has_cityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CityShowInfo::clear_has_cityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CityShowInfo::clear_cityid() {
  cityid_ = 0u;
  clear_has_cityid();
}
inline ::google::protobuf::uint32 CityShowInfo::cityid() const {
  // @@protoc_insertion_point(field_get:Cmd.CityShowInfo.cityid)
  return cityid_;
}
inline void CityShowInfo::set_cityid(::google::protobuf::uint32 value) {
  set_has_cityid();
  cityid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CityShowInfo.cityid)
}

// optional .Cmd.EGCityState state = 2 [default = EGCITYSTATE_MIN];
inline bool CityShowInfo::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CityShowInfo::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CityShowInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CityShowInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::Cmd::EGCityState CityShowInfo::state() const {
  // @@protoc_insertion_point(field_get:Cmd.CityShowInfo.state)
  return static_cast< ::Cmd::EGCityState >(state_);
}
inline void CityShowInfo::set_state(::Cmd::EGCityState value) {
  assert(::Cmd::EGCityState_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CityShowInfo.state)
}

// optional uint64 guildid = 3 [default = 0];
inline bool CityShowInfo::has_guildid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CityShowInfo::set_has_guildid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CityShowInfo::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CityShowInfo::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 CityShowInfo::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.CityShowInfo.guildid)
  return guildid_;
}
inline void CityShowInfo::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CityShowInfo.guildid)
}

// optional string name = 4;
inline bool CityShowInfo::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CityShowInfo::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CityShowInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CityShowInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CityShowInfo::name() const {
  // @@protoc_insertion_point(field_get:Cmd.CityShowInfo.name)
  return *name_;
}
inline void CityShowInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.CityShowInfo.name)
}
inline void CityShowInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.CityShowInfo.name)
}
inline void CityShowInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.CityShowInfo.name)
}
inline ::std::string* CityShowInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.CityShowInfo.name)
  return name_;
}
inline ::std::string* CityShowInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CityShowInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.CityShowInfo.name)
}

// optional string portrait = 5;
inline bool CityShowInfo::has_portrait() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CityShowInfo::set_has_portrait() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CityShowInfo::clear_has_portrait() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CityShowInfo::clear_portrait() {
  if (portrait_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_->clear();
  }
  clear_has_portrait();
}
inline const ::std::string& CityShowInfo::portrait() const {
  // @@protoc_insertion_point(field_get:Cmd.CityShowInfo.portrait)
  return *portrait_;
}
inline void CityShowInfo::set_portrait(const ::std::string& value) {
  set_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_ = new ::std::string;
  }
  portrait_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.CityShowInfo.portrait)
}
inline void CityShowInfo::set_portrait(const char* value) {
  set_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_ = new ::std::string;
  }
  portrait_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.CityShowInfo.portrait)
}
inline void CityShowInfo::set_portrait(const char* value, size_t size) {
  set_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_ = new ::std::string;
  }
  portrait_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.CityShowInfo.portrait)
}
inline ::std::string* CityShowInfo::mutable_portrait() {
  set_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.CityShowInfo.portrait)
  return portrait_;
}
inline ::std::string* CityShowInfo::release_portrait() {
  clear_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = portrait_;
    portrait_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CityShowInfo::set_allocated_portrait(::std::string* portrait) {
  if (portrait_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete portrait_;
  }
  if (portrait) {
    set_has_portrait();
    portrait_ = portrait;
  } else {
    clear_has_portrait();
    portrait_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.CityShowInfo.portrait)
}

// optional uint32 lv = 6 [default = 0];
inline bool CityShowInfo::has_lv() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CityShowInfo::set_has_lv() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CityShowInfo::clear_has_lv() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CityShowInfo::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 CityShowInfo::lv() const {
  // @@protoc_insertion_point(field_get:Cmd.CityShowInfo.lv)
  return lv_;
}
inline void CityShowInfo::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CityShowInfo.lv)
}

// optional uint32 membercount = 7 [default = 0];
inline bool CityShowInfo::has_membercount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CityShowInfo::set_has_membercount() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CityShowInfo::clear_has_membercount() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CityShowInfo::clear_membercount() {
  membercount_ = 0u;
  clear_has_membercount();
}
inline ::google::protobuf::uint32 CityShowInfo::membercount() const {
  // @@protoc_insertion_point(field_get:Cmd.CityShowInfo.membercount)
  return membercount_;
}
inline void CityShowInfo::set_membercount(::google::protobuf::uint32 value) {
  set_has_membercount();
  membercount_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CityShowInfo.membercount)
}

// -------------------------------------------------------------------

// QueryGCityShowInfoGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool QueryGCityShowInfoGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryGCityShowInfoGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryGCityShowInfoGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryGCityShowInfoGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command QueryGCityShowInfoGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryGCityShowInfoGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryGCityShowInfoGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryGCityShowInfoGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_QUERY_CITYSHOW];
inline bool QueryGCityShowInfoGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryGCityShowInfoGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryGCityShowInfoGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryGCityShowInfoGuildCmd::clear_param() {
  param_ = 63;
  clear_has_param();
}
inline ::Cmd::GuildParam QueryGCityShowInfoGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryGCityShowInfoGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void QueryGCityShowInfoGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryGCityShowInfoGuildCmd.param)
}

// repeated .Cmd.CityShowInfo infos = 3;
inline int QueryGCityShowInfoGuildCmd::infos_size() const {
  return infos_.size();
}
inline void QueryGCityShowInfoGuildCmd::clear_infos() {
  infos_.Clear();
}
inline const ::Cmd::CityShowInfo& QueryGCityShowInfoGuildCmd::infos(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QueryGCityShowInfoGuildCmd.infos)
  return infos_.Get(index);
}
inline ::Cmd::CityShowInfo* QueryGCityShowInfoGuildCmd::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.QueryGCityShowInfoGuildCmd.infos)
  return infos_.Mutable(index);
}
inline ::Cmd::CityShowInfo* QueryGCityShowInfoGuildCmd::add_infos() {
  // @@protoc_insertion_point(field_add:Cmd.QueryGCityShowInfoGuildCmd.infos)
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::CityShowInfo >&
QueryGCityShowInfoGuildCmd::infos() const {
  // @@protoc_insertion_point(field_list:Cmd.QueryGCityShowInfoGuildCmd.infos)
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::CityShowInfo >*
QueryGCityShowInfoGuildCmd::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QueryGCityShowInfoGuildCmd.infos)
  return &infos_;
}

// -------------------------------------------------------------------

// GvgOpenFireGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool GvgOpenFireGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GvgOpenFireGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GvgOpenFireGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GvgOpenFireGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command GvgOpenFireGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgOpenFireGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GvgOpenFireGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgOpenFireGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_OEPN_GVG];
inline bool GvgOpenFireGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GvgOpenFireGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GvgOpenFireGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GvgOpenFireGuildCmd::clear_param() {
  param_ = 64;
  clear_has_param();
}
inline ::Cmd::GuildParam GvgOpenFireGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgOpenFireGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void GvgOpenFireGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgOpenFireGuildCmd.param)
}

// optional bool fire = 3 [default = false];
inline bool GvgOpenFireGuildCmd::has_fire() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GvgOpenFireGuildCmd::set_has_fire() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GvgOpenFireGuildCmd::clear_has_fire() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GvgOpenFireGuildCmd::clear_fire() {
  fire_ = false;
  clear_has_fire();
}
inline bool GvgOpenFireGuildCmd::fire() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgOpenFireGuildCmd.fire)
  return fire_;
}
inline void GvgOpenFireGuildCmd::set_fire(bool value) {
  set_has_fire();
  fire_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgOpenFireGuildCmd.fire)
}

// -------------------------------------------------------------------

// EnterPunishTimeNtfGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool EnterPunishTimeNtfGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterPunishTimeNtfGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterPunishTimeNtfGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterPunishTimeNtfGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command EnterPunishTimeNtfGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterPunishTimeNtfGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void EnterPunishTimeNtfGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterPunishTimeNtfGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_ENTERPUNISHTIME_NTF];
inline bool EnterPunishTimeNtfGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterPunishTimeNtfGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterPunishTimeNtfGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterPunishTimeNtfGuildCmd::clear_param() {
  param_ = 66;
  clear_has_param();
}
inline ::Cmd::GuildParam EnterPunishTimeNtfGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterPunishTimeNtfGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void EnterPunishTimeNtfGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterPunishTimeNtfGuildCmd.param)
}

// optional uint32 exittime = 3 [default = 0];
inline bool EnterPunishTimeNtfGuildCmd::has_exittime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnterPunishTimeNtfGuildCmd::set_has_exittime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnterPunishTimeNtfGuildCmd::clear_has_exittime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnterPunishTimeNtfGuildCmd::clear_exittime() {
  exittime_ = 0u;
  clear_has_exittime();
}
inline ::google::protobuf::uint32 EnterPunishTimeNtfGuildCmd::exittime() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterPunishTimeNtfGuildCmd.exittime)
  return exittime_;
}
inline void EnterPunishTimeNtfGuildCmd::set_exittime(::google::protobuf::uint32 value) {
  set_has_exittime();
  exittime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterPunishTimeNtfGuildCmd.exittime)
}

// -------------------------------------------------------------------

// OpenRealtimeVoiceGuildCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_GUILD_PROTOCMD];
inline bool OpenRealtimeVoiceGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpenRealtimeVoiceGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpenRealtimeVoiceGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpenRealtimeVoiceGuildCmd::clear_cmd() {
  cmd_ = 50;
  clear_has_cmd();
}
inline ::Cmd::Command OpenRealtimeVoiceGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.OpenRealtimeVoiceGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void OpenRealtimeVoiceGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OpenRealtimeVoiceGuildCmd.cmd)
}

// optional .Cmd.GuildParam param = 2 [default = GUILDPARAM_OPEN_REALTIME_VOICE];
inline bool OpenRealtimeVoiceGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OpenRealtimeVoiceGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OpenRealtimeVoiceGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OpenRealtimeVoiceGuildCmd::clear_param() {
  param_ = 65;
  clear_has_param();
}
inline ::Cmd::GuildParam OpenRealtimeVoiceGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.OpenRealtimeVoiceGuildCmd.param)
  return static_cast< ::Cmd::GuildParam >(param_);
}
inline void OpenRealtimeVoiceGuildCmd::set_param(::Cmd::GuildParam value) {
  assert(::Cmd::GuildParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OpenRealtimeVoiceGuildCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool OpenRealtimeVoiceGuildCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OpenRealtimeVoiceGuildCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OpenRealtimeVoiceGuildCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OpenRealtimeVoiceGuildCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 OpenRealtimeVoiceGuildCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.OpenRealtimeVoiceGuildCmd.charid)
  return charid_;
}
inline void OpenRealtimeVoiceGuildCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OpenRealtimeVoiceGuildCmd.charid)
}

// optional bool open = 4 [default = false];
inline bool OpenRealtimeVoiceGuildCmd::has_open() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OpenRealtimeVoiceGuildCmd::set_has_open() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OpenRealtimeVoiceGuildCmd::clear_has_open() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OpenRealtimeVoiceGuildCmd::clear_open() {
  open_ = false;
  clear_has_open();
}
inline bool OpenRealtimeVoiceGuildCmd::open() const {
  // @@protoc_insertion_point(field_get:Cmd.OpenRealtimeVoiceGuildCmd.open)
  return open_;
}
inline void OpenRealtimeVoiceGuildCmd::set_open(bool value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OpenRealtimeVoiceGuildCmd.open)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cmd

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Cmd::GuildParam> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::GuildParam>() {
  return ::Cmd::GuildParam_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EGuildGlobal> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EGuildGlobal>() {
  return ::Cmd::EGuildGlobal_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EGuildJob> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EGuildJob>() {
  return ::Cmd::EGuildJob_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EPrayType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EPrayType>() {
  return ::Cmd::EPrayType_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EGuildFunction> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EGuildFunction>() {
  return ::Cmd::EGuildFunction_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EAuth> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EAuth>() {
  return ::Cmd::EAuth_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EGuildBuilding> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EGuildBuilding>() {
  return ::Cmd::EGuildBuilding_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EGuildWelfare> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EGuildWelfare>() {
  return ::Cmd::EGuildWelfare_descriptor();
}
template <> struct is_proto_enum< ::Cmd::ETreasureState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::ETreasureState>() {
  return ::Cmd::ETreasureState_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EGuildData> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EGuildData>() {
  return ::Cmd::EGuildData_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EGuildList> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EGuildList>() {
  return ::Cmd::EGuildList_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EGuildMemberData> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EGuildMemberData>() {
  return ::Cmd::EGuildMemberData_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EGuildAction> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EGuildAction>() {
  return ::Cmd::EGuildAction_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EModify> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EModify>() {
  return ::Cmd::EModify_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EGuildCityStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EGuildCityStatus>() {
  return ::Cmd::EGuildCityStatus_descriptor();
}
template <> struct is_proto_enum< ::Cmd::ECityAction> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::ECityAction>() {
  return ::Cmd::ECityAction_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EIconState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EIconState>() {
  return ::Cmd::EIconState_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EArtifactOptType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EArtifactOptType>() {
  return ::Cmd::EArtifactOptType_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EGuildTreasureType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EGuildTreasureType>() {
  return ::Cmd::EGuildTreasureType_descriptor();
}
template <> struct is_proto_enum< ::Cmd::ETreasureAction> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::ETreasureAction>() {
  return ::Cmd::ETreasureAction_descriptor();
}
template <> struct is_proto_enum< ::Cmd::ETreasurePoint> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::ETreasurePoint>() {
  return ::Cmd::ETreasurePoint_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EGCityState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EGCityState>() {
  return ::Cmd::EGCityState_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GuildCmd_2eproto__INCLUDED
