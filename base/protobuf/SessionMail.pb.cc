// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SessionMail.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SessionMail.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Cmd {

namespace {

const ::google::protobuf::Descriptor* MailMsgParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MailMsgParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* MailAttach_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MailAttach_reflection_ = NULL;
const ::google::protobuf::Descriptor* BlobAttach_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BlobAttach_reflection_ = NULL;
const ::google::protobuf::Descriptor* MailData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MailData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MailMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MailMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* MailTemplateData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MailTemplateData_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryAllMail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryAllMail_reflection_ = NULL;
const ::google::protobuf::Descriptor* MailUpdate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MailUpdate_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetMailAttach_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetMailAttach_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MailParam_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EMailStatus_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EMailType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EMailAttachType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_SessionMail_2eproto() {
  protobuf_AddDesc_SessionMail_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "SessionMail.proto");
  GOOGLE_CHECK(file != NULL);
  MailMsgParam_descriptor_ = file->message_type(0);
  static const int MailMsgParam_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailMsgParam, mailid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailMsgParam, params_),
  };
  MailMsgParam_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MailMsgParam_descriptor_,
      MailMsgParam::default_instance_,
      MailMsgParam_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailMsgParam, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailMsgParam, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MailMsgParam));
  MailAttach_descriptor_ = file->message_type(1);
  static const int MailAttach_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailAttach, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailAttach, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailAttach, items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailAttach, itemdatas_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailAttach, msgdatas_),
  };
  MailAttach_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MailAttach_descriptor_,
      MailAttach::default_instance_,
      MailAttach_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailAttach, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailAttach, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MailAttach));
  BlobAttach_descriptor_ = file->message_type(2);
  static const int BlobAttach_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlobAttach, attachs_),
  };
  BlobAttach_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BlobAttach_descriptor_,
      BlobAttach::default_instance_,
      BlobAttach_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlobAttach, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlobAttach, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BlobAttach));
  MailData_descriptor_ = file->message_type(3);
  static const int MailData_offsets_[18] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, sysid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, senderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, receiveid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, receiveaccid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, mailid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, sender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, attach_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, starttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, endtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, weddingmsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, eventmsg_),
  };
  MailData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MailData_descriptor_,
      MailData::default_instance_,
      MailData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MailData));
  MailMsg_descriptor_ = file->message_type(4);
  static const int MailMsg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailMsg, language_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailMsg, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailMsg, msg_),
  };
  MailMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MailMsg_descriptor_,
      MailMsg::default_instance_,
      MailMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MailMsg));
  MailTemplateData_descriptor_ = file->message_type(5);
  static const int MailTemplateData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailTemplateData, msgs_),
  };
  MailTemplateData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MailTemplateData_descriptor_,
      MailTemplateData::default_instance_,
      MailTemplateData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailTemplateData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailTemplateData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MailTemplateData));
  QueryAllMail_descriptor_ = file->message_type(6);
  static const int QueryAllMail_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAllMail, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAllMail, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAllMail, datas_),
  };
  QueryAllMail_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QueryAllMail_descriptor_,
      QueryAllMail::default_instance_,
      QueryAllMail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAllMail, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryAllMail, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QueryAllMail));
  MailUpdate_descriptor_ = file->message_type(7);
  static const int MailUpdate_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailUpdate, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailUpdate, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailUpdate, updates_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailUpdate, dels_),
  };
  MailUpdate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MailUpdate_descriptor_,
      MailUpdate::default_instance_,
      MailUpdate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailUpdate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailUpdate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MailUpdate));
  GetMailAttach_descriptor_ = file->message_type(8);
  static const int GetMailAttach_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMailAttach, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMailAttach, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMailAttach, id_),
  };
  GetMailAttach_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetMailAttach_descriptor_,
      GetMailAttach::default_instance_,
      GetMailAttach_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMailAttach, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMailAttach, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetMailAttach));
  MailParam_descriptor_ = file->enum_type(0);
  EMailStatus_descriptor_ = file->enum_type(1);
  EMailType_descriptor_ = file->enum_type(2);
  EMailAttachType_descriptor_ = file->enum_type(3);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_SessionMail_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MailMsgParam_descriptor_, &MailMsgParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MailAttach_descriptor_, &MailAttach::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BlobAttach_descriptor_, &BlobAttach::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MailData_descriptor_, &MailData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MailMsg_descriptor_, &MailMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MailTemplateData_descriptor_, &MailTemplateData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QueryAllMail_descriptor_, &QueryAllMail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MailUpdate_descriptor_, &MailUpdate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetMailAttach_descriptor_, &GetMailAttach::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_SessionMail_2eproto() {
  delete MailMsgParam::default_instance_;
  delete MailMsgParam_reflection_;
  delete MailAttach::default_instance_;
  delete MailAttach_reflection_;
  delete BlobAttach::default_instance_;
  delete BlobAttach_reflection_;
  delete MailData::default_instance_;
  delete MailData_reflection_;
  delete MailMsg::default_instance_;
  delete MailMsg_reflection_;
  delete MailTemplateData::default_instance_;
  delete MailTemplateData_reflection_;
  delete QueryAllMail::default_instance_;
  delete QueryAllMail_reflection_;
  delete MailUpdate::default_instance_;
  delete MailUpdate_reflection_;
  delete GetMailAttach::default_instance_;
  delete GetMailAttach_reflection_;
}

void protobuf_AddDesc_SessionMail_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Cmd::protobuf_AddDesc_xCmd_2eproto();
  ::Cmd::protobuf_AddDesc_SceneItem_2eproto();
  ::Cmd::protobuf_AddDesc_WeddingCCmd_2eproto();
  ::Cmd::protobuf_AddDesc_UserEvent_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021SessionMail.proto\022\003Cmd\032\nxCmd.proto\032\017Sc"
    "eneItem.proto\032\021WeddingCCmd.proto\032\017UserEv"
    "ent.proto\".\n\014MailMsgParam\022\016\n\006mailid\030\001 \001("
    "\r\022\016\n\006params\030\002 \003(\t\"\271\001\n\nMailAttach\0227\n\004type"
    "\030\001 \001(\0162\024.Cmd.EMailAttachType:\023EMAILATTAC"
    "HTYPE_MIN\022\r\n\002id\030\002 \001(\r:\0010\022\034\n\005items\030\003 \003(\0132"
    "\r.Cmd.ItemInfo\022 \n\titemdatas\030\004 \003(\0132\r.Cmd."
    "ItemData\022#\n\010msgdatas\030\005 \001(\0132\021.Cmd.MailMsg"
    "Param\".\n\nBlobAttach\022 \n\007attachs\030\001 \003(\0132\017.C"
    "md.MailAttach\"\314\003\n\010MailData\022\r\n\002id\030\001 \001(\004:\001"
    "0\022\020\n\005sysid\030\002 \001(\004:\0010\022\023\n\010senderid\030\003 \001(\004:\0010"
    "\022\024\n\treceiveid\030\004 \001(\004:\0010\022\027\n\014receiveaccid\030\r"
    " \001(\004:\0010\022\017\n\004time\030\014 \001(\r:\0010\022\021\n\006mailid\030\005 \001(\r"
    ":\0010\022+\n\004type\030\006 \001(\0162\016.Cmd.EMailType:\rEMAIL"
    "TYPE_MIN\0221\n\006status\030\007 \001(\0162\020.Cmd.EMailStat"
    "us:\017EMAILSTATUS_MIN\022\r\n\005title\030\010 \001(\t\022\016\n\006se"
    "nder\030\t \001(\t\022\013\n\003msg\030\n \001(\t\022\037\n\006attach\030\013 \001(\0132"
    "\017.Cmd.BlobAttach\022\017\n\007groupid\030\020 \001(\t\022\021\n\tsta"
    "rttime\030\021 \001(\r\022\017\n\007endtime\030\022 \001(\r\022,\n\nwedding"
    "msg\030\023 \001(\0132\030.Cmd.WeddingEventMsgCCmd\022\'\n\010e"
    "ventmsg\030\024 \001(\0132\025.Cmd.UserEventMailCmd\":\n\007"
    "MailMsg\022\023\n\010language\030\001 \001(\r:\0010\022\r\n\005title\030\002 "
    "\001(\t\022\013\n\003msg\030\003 \001(\t\".\n\020MailTemplateData\022\032\n\004"
    "msgs\030\001 \003(\0132\014.Cmd.MailMsg\"\232\001\n\014QueryAllMai"
    "l\0225\n\003cmd\030\001 \001(\0162\014.Cmd.Command:\032SESSION_US"
    "ER_MAIL_PROTOCMD\0225\n\005param\030\002 \001(\0162\016.Cmd.Ma"
    "ilParam:\026MAILPARAM_QUERYALLMAIL\022\034\n\005datas"
    "\030\003 \003(\0132\r.Cmd.MailData\"\242\001\n\nMailUpdate\0225\n\003"
    "cmd\030\001 \001(\0162\014.Cmd.Command:\032SESSION_USER_MA"
    "IL_PROTOCMD\022/\n\005param\030\002 \001(\0162\016.Cmd.MailPar"
    "am:\020MAILPARAM_UPDATE\022\036\n\007updates\030\003 \003(\0132\r."
    "Cmd.MailData\022\014\n\004dels\030\004 \003(\004\"\211\001\n\rGetMailAt"
    "tach\0225\n\003cmd\030\001 \001(\0162\014.Cmd.Command:\032SESSION"
    "_USER_MAIL_PROTOCMD\0222\n\005param\030\002 \001(\0162\016.Cmd"
    ".MailParam:\023MAILPARAM_GETATTACH\022\r\n\002id\030\003 "
    "\001(\004:\0010*V\n\tMailParam\022\032\n\026MAILPARAM_QUERYAL"
    "LMAIL\020\001\022\024\n\020MAILPARAM_UPDATE\020\002\022\027\n\023MAILPAR"
    "AM_GETATTACH\020\003*\223\001\n\013EMailStatus\022\023\n\017EMAILS"
    "TATUS_MIN\020\000\022\023\n\017EMAILSTATUS_NEW\020\001\022\026\n\022EMAI"
    "LSTATUS_ATTACH\020\003\022\024\n\020EMAILSTATUS_READ\020\004\022\027"
    "\n\023EMAILSTATUS_INVALID\020\005\022\023\n\017EMAILSTATUS_M"
    "AX\020\006*\377\001\n\tEMailType\022\021\n\rEMAILTYPE_MIN\020\000\022\024\n"
    "\020EMAILTYPE_NORMAL\020\001\022\024\n\020EMAILTYPE_SYSTEM\020"
    "\002\022\023\n\017EMAILTYPE_TRADE\020\003\022\032\n\026EMAILTYPE_LOTT"
    "ERY_GIVE\020\004\022\030\n\024EMAILTYPE_WEDDINGMSG\020\005\022\037\n\033"
    "EMAILTYPE_WEDDINGINVITATION\020\006\022\027\n\023EMAILTY"
    "PE_USEREVENT\020\007\022\033\n\027EMAILTYPE_NORMAL_NOTIM"
    "E\020\010\022\021\n\rEMAILTYPE_MAX\020\t*\372\001\n\017EMailAttachTy"
    "pe\022\027\n\023EMAILATTACHTYPE_MIN\020\000\022\032\n\026EMAILATTA"
    "CHTYPE_REWARD\020\001\022\030\n\024EMAILATTACHTYPE_ITEM\020"
    "\002\022\035\n\031EMAILATTACHTYPE_TRADE_BUY\020\003\022 \n\034EMAI"
    "LATTACHTYPE_TRADE_RETURN\020\004\022\036\n\032EMAILATTAC"
    "HTYPE_TRADE_SELL\020\005\022\036\n\032EAMILATTACHTYPE_MS"
    "G_PARAMS\020\006\022\027\n\023EAMILATTACHTYPE_MAX\020\007", 2155);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SessionMail.proto", &protobuf_RegisterTypes);
  MailMsgParam::default_instance_ = new MailMsgParam();
  MailAttach::default_instance_ = new MailAttach();
  BlobAttach::default_instance_ = new BlobAttach();
  MailData::default_instance_ = new MailData();
  MailMsg::default_instance_ = new MailMsg();
  MailTemplateData::default_instance_ = new MailTemplateData();
  QueryAllMail::default_instance_ = new QueryAllMail();
  MailUpdate::default_instance_ = new MailUpdate();
  GetMailAttach::default_instance_ = new GetMailAttach();
  MailMsgParam::default_instance_->InitAsDefaultInstance();
  MailAttach::default_instance_->InitAsDefaultInstance();
  BlobAttach::default_instance_->InitAsDefaultInstance();
  MailData::default_instance_->InitAsDefaultInstance();
  MailMsg::default_instance_->InitAsDefaultInstance();
  MailTemplateData::default_instance_->InitAsDefaultInstance();
  QueryAllMail::default_instance_->InitAsDefaultInstance();
  MailUpdate::default_instance_->InitAsDefaultInstance();
  GetMailAttach::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_SessionMail_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_SessionMail_2eproto {
  StaticDescriptorInitializer_SessionMail_2eproto() {
    protobuf_AddDesc_SessionMail_2eproto();
  }
} static_descriptor_initializer_SessionMail_2eproto_;
const ::google::protobuf::EnumDescriptor* MailParam_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MailParam_descriptor_;
}
bool MailParam_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EMailStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EMailStatus_descriptor_;
}
bool EMailStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EMailType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EMailType_descriptor_;
}
bool EMailType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EMailAttachType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EMailAttachType_descriptor_;
}
bool EMailAttachType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int MailMsgParam::kMailidFieldNumber;
const int MailMsgParam::kParamsFieldNumber;
#endif  // !_MSC_VER

MailMsgParam::MailMsgParam()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.MailMsgParam)
}

void MailMsgParam::InitAsDefaultInstance() {
}

MailMsgParam::MailMsgParam(const MailMsgParam& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.MailMsgParam)
}

void MailMsgParam::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  mailid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MailMsgParam::~MailMsgParam() {
  // @@protoc_insertion_point(destructor:Cmd.MailMsgParam)
  SharedDtor();
}

void MailMsgParam::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MailMsgParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailMsgParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MailMsgParam_descriptor_;
}

const MailMsgParam& MailMsgParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SessionMail_2eproto();
  return *default_instance_;
}

MailMsgParam* MailMsgParam::default_instance_ = NULL;

MailMsgParam* MailMsgParam::New() const {
  return new MailMsgParam;
}

void MailMsgParam::Clear() {
  mailid_ = 0u;
  params_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MailMsgParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.MailMsgParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 mailid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mailid_)));
          set_has_mailid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_params;
        break;
      }

      // repeated string params = 2;
      case 2: {
        if (tag == 18) {
         parse_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_params()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->params(this->params_size() - 1).data(),
            this->params(this->params_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "params");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_params;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.MailMsgParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.MailMsgParam)
  return false;
#undef DO_
}

void MailMsgParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.MailMsgParam)
  // optional uint32 mailid = 1;
  if (has_mailid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mailid(), output);
  }

  // repeated string params = 2;
  for (int i = 0; i < this->params_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->params(i).data(), this->params(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "params");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->params(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.MailMsgParam)
}

::google::protobuf::uint8* MailMsgParam::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.MailMsgParam)
  // optional uint32 mailid = 1;
  if (has_mailid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mailid(), target);
  }

  // repeated string params = 2;
  for (int i = 0; i < this->params_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->params(i).data(), this->params(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "params");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->params(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.MailMsgParam)
  return target;
}

int MailMsgParam::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 mailid = 1;
    if (has_mailid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mailid());
    }

  }
  // repeated string params = 2;
  total_size += 1 * this->params_size();
  for (int i = 0; i < this->params_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->params(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailMsgParam::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MailMsgParam* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MailMsgParam*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MailMsgParam::MergeFrom(const MailMsgParam& from) {
  GOOGLE_CHECK_NE(&from, this);
  params_.MergeFrom(from.params_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mailid()) {
      set_mailid(from.mailid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MailMsgParam::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailMsgParam::CopyFrom(const MailMsgParam& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailMsgParam::IsInitialized() const {

  return true;
}

void MailMsgParam::Swap(MailMsgParam* other) {
  if (other != this) {
    std::swap(mailid_, other->mailid_);
    params_.Swap(&other->params_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MailMsgParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MailMsgParam_descriptor_;
  metadata.reflection = MailMsgParam_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MailAttach::kTypeFieldNumber;
const int MailAttach::kIdFieldNumber;
const int MailAttach::kItemsFieldNumber;
const int MailAttach::kItemdatasFieldNumber;
const int MailAttach::kMsgdatasFieldNumber;
#endif  // !_MSC_VER

MailAttach::MailAttach()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.MailAttach)
}

void MailAttach::InitAsDefaultInstance() {
  msgdatas_ = const_cast< ::Cmd::MailMsgParam*>(&::Cmd::MailMsgParam::default_instance());
}

MailAttach::MailAttach(const MailAttach& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.MailAttach)
}

void MailAttach::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  id_ = 0u;
  msgdatas_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MailAttach::~MailAttach() {
  // @@protoc_insertion_point(destructor:Cmd.MailAttach)
  SharedDtor();
}

void MailAttach::SharedDtor() {
  if (this != default_instance_) {
    delete msgdatas_;
  }
}

void MailAttach::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailAttach::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MailAttach_descriptor_;
}

const MailAttach& MailAttach::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SessionMail_2eproto();
  return *default_instance_;
}

MailAttach* MailAttach::default_instance_ = NULL;

MailAttach* MailAttach::New() const {
  return new MailAttach;
}

void MailAttach::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MailAttach*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 19) {
    ZR_(type_, id_);
    if (has_msgdatas()) {
      if (msgdatas_ != NULL) msgdatas_->::Cmd::MailMsgParam::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  items_.Clear();
  itemdatas_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MailAttach::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.MailAttach)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.EMailAttachType type = 1 [default = EMAILATTACHTYPE_MIN];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::EMailAttachType_IsValid(value)) {
            set_type(static_cast< ::Cmd::EMailAttachType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // optional uint32 id = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_items;
        break;
      }

      // repeated .Cmd.ItemInfo items = 3;
      case 3: {
        if (tag == 26) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_items;
        if (input->ExpectTag(34)) goto parse_itemdatas;
        break;
      }

      // repeated .Cmd.ItemData itemdatas = 4;
      case 4: {
        if (tag == 34) {
         parse_itemdatas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_itemdatas()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_itemdatas;
        if (input->ExpectTag(42)) goto parse_msgdatas;
        break;
      }

      // optional .Cmd.MailMsgParam msgdatas = 5;
      case 5: {
        if (tag == 42) {
         parse_msgdatas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msgdatas()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.MailAttach)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.MailAttach)
  return false;
#undef DO_
}

void MailAttach::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.MailAttach)
  // optional .Cmd.EMailAttachType type = 1 [default = EMAILATTACHTYPE_MIN];
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional uint32 id = 2 [default = 0];
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id(), output);
  }

  // repeated .Cmd.ItemInfo items = 3;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->items(i), output);
  }

  // repeated .Cmd.ItemData itemdatas = 4;
  for (int i = 0; i < this->itemdatas_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->itemdatas(i), output);
  }

  // optional .Cmd.MailMsgParam msgdatas = 5;
  if (has_msgdatas()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->msgdatas(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.MailAttach)
}

::google::protobuf::uint8* MailAttach::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.MailAttach)
  // optional .Cmd.EMailAttachType type = 1 [default = EMAILATTACHTYPE_MIN];
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional uint32 id = 2 [default = 0];
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->id(), target);
  }

  // repeated .Cmd.ItemInfo items = 3;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->items(i), target);
  }

  // repeated .Cmd.ItemData itemdatas = 4;
  for (int i = 0; i < this->itemdatas_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->itemdatas(i), target);
  }

  // optional .Cmd.MailMsgParam msgdatas = 5;
  if (has_msgdatas()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->msgdatas(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.MailAttach)
  return target;
}

int MailAttach::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.EMailAttachType type = 1 [default = EMAILATTACHTYPE_MIN];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional uint32 id = 2 [default = 0];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional .Cmd.MailMsgParam msgdatas = 5;
    if (has_msgdatas()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->msgdatas());
    }

  }
  // repeated .Cmd.ItemInfo items = 3;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  // repeated .Cmd.ItemData itemdatas = 4;
  total_size += 1 * this->itemdatas_size();
  for (int i = 0; i < this->itemdatas_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->itemdatas(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailAttach::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MailAttach* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MailAttach*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MailAttach::MergeFrom(const MailAttach& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  itemdatas_.MergeFrom(from.itemdatas_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_msgdatas()) {
      mutable_msgdatas()->::Cmd::MailMsgParam::MergeFrom(from.msgdatas());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MailAttach::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailAttach::CopyFrom(const MailAttach& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailAttach::IsInitialized() const {

  return true;
}

void MailAttach::Swap(MailAttach* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(id_, other->id_);
    items_.Swap(&other->items_);
    itemdatas_.Swap(&other->itemdatas_);
    std::swap(msgdatas_, other->msgdatas_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MailAttach::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MailAttach_descriptor_;
  metadata.reflection = MailAttach_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BlobAttach::kAttachsFieldNumber;
#endif  // !_MSC_VER

BlobAttach::BlobAttach()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.BlobAttach)
}

void BlobAttach::InitAsDefaultInstance() {
}

BlobAttach::BlobAttach(const BlobAttach& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.BlobAttach)
}

void BlobAttach::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BlobAttach::~BlobAttach() {
  // @@protoc_insertion_point(destructor:Cmd.BlobAttach)
  SharedDtor();
}

void BlobAttach::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BlobAttach::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlobAttach::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BlobAttach_descriptor_;
}

const BlobAttach& BlobAttach::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SessionMail_2eproto();
  return *default_instance_;
}

BlobAttach* BlobAttach::default_instance_ = NULL;

BlobAttach* BlobAttach::New() const {
  return new BlobAttach;
}

void BlobAttach::Clear() {
  attachs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BlobAttach::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.BlobAttach)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Cmd.MailAttach attachs = 1;
      case 1: {
        if (tag == 10) {
         parse_attachs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attachs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_attachs;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.BlobAttach)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.BlobAttach)
  return false;
#undef DO_
}

void BlobAttach::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.BlobAttach)
  // repeated .Cmd.MailAttach attachs = 1;
  for (int i = 0; i < this->attachs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->attachs(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.BlobAttach)
}

::google::protobuf::uint8* BlobAttach::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.BlobAttach)
  // repeated .Cmd.MailAttach attachs = 1;
  for (int i = 0; i < this->attachs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->attachs(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.BlobAttach)
  return target;
}

int BlobAttach::ByteSize() const {
  int total_size = 0;

  // repeated .Cmd.MailAttach attachs = 1;
  total_size += 1 * this->attachs_size();
  for (int i = 0; i < this->attachs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attachs(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlobAttach::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BlobAttach* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BlobAttach*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BlobAttach::MergeFrom(const BlobAttach& from) {
  GOOGLE_CHECK_NE(&from, this);
  attachs_.MergeFrom(from.attachs_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BlobAttach::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlobAttach::CopyFrom(const BlobAttach& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlobAttach::IsInitialized() const {

  return true;
}

void BlobAttach::Swap(BlobAttach* other) {
  if (other != this) {
    attachs_.Swap(&other->attachs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BlobAttach::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BlobAttach_descriptor_;
  metadata.reflection = BlobAttach_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MailData::kIdFieldNumber;
const int MailData::kSysidFieldNumber;
const int MailData::kSenderidFieldNumber;
const int MailData::kReceiveidFieldNumber;
const int MailData::kReceiveaccidFieldNumber;
const int MailData::kTimeFieldNumber;
const int MailData::kMailidFieldNumber;
const int MailData::kTypeFieldNumber;
const int MailData::kStatusFieldNumber;
const int MailData::kTitleFieldNumber;
const int MailData::kSenderFieldNumber;
const int MailData::kMsgFieldNumber;
const int MailData::kAttachFieldNumber;
const int MailData::kGroupidFieldNumber;
const int MailData::kStarttimeFieldNumber;
const int MailData::kEndtimeFieldNumber;
const int MailData::kWeddingmsgFieldNumber;
const int MailData::kEventmsgFieldNumber;
#endif  // !_MSC_VER

MailData::MailData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.MailData)
}

void MailData::InitAsDefaultInstance() {
  attach_ = const_cast< ::Cmd::BlobAttach*>(&::Cmd::BlobAttach::default_instance());
  weddingmsg_ = const_cast< ::Cmd::WeddingEventMsgCCmd*>(&::Cmd::WeddingEventMsgCCmd::default_instance());
  eventmsg_ = const_cast< ::Cmd::UserEventMailCmd*>(&::Cmd::UserEventMailCmd::default_instance());
}

MailData::MailData(const MailData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.MailData)
}

void MailData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  sysid_ = GOOGLE_ULONGLONG(0);
  senderid_ = GOOGLE_ULONGLONG(0);
  receiveid_ = GOOGLE_ULONGLONG(0);
  receiveaccid_ = GOOGLE_ULONGLONG(0);
  time_ = 0u;
  mailid_ = 0u;
  type_ = 0;
  status_ = 0;
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_ = NULL;
  groupid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  starttime_ = 0u;
  endtime_ = 0u;
  weddingmsg_ = NULL;
  eventmsg_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MailData::~MailData() {
  // @@protoc_insertion_point(destructor:Cmd.MailData)
  SharedDtor();
}

void MailData::SharedDtor() {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (sender_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sender_;
  }
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_;
  }
  if (groupid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete groupid_;
  }
  if (this != default_instance_) {
    delete attach_;
    delete weddingmsg_;
    delete eventmsg_;
  }
}

void MailData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MailData_descriptor_;
}

const MailData& MailData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SessionMail_2eproto();
  return *default_instance_;
}

MailData* MailData::default_instance_ = NULL;

MailData* MailData::New() const {
  return new MailData;
}

void MailData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MailData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(id_, type_);
  }
  if (_has_bits_[8 / 32] & 65280) {
    ZR_(starttime_, endtime_);
    status_ = 0;
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        title_->clear();
      }
    }
    if (has_sender()) {
      if (sender_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sender_->clear();
      }
    }
    if (has_msg()) {
      if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        msg_->clear();
      }
    }
    if (has_attach()) {
      if (attach_ != NULL) attach_->::Cmd::BlobAttach::Clear();
    }
    if (has_groupid()) {
      if (groupid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        groupid_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & 196608) {
    if (has_weddingmsg()) {
      if (weddingmsg_ != NULL) weddingmsg_->::Cmd::WeddingEventMsgCCmd::Clear();
    }
    if (has_eventmsg()) {
      if (eventmsg_ != NULL) eventmsg_->::Cmd::UserEventMailCmd::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MailData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.MailData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_sysid;
        break;
      }

      // optional uint64 sysid = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_sysid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sysid_)));
          set_has_sysid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_senderid;
        break;
      }

      // optional uint64 senderid = 3 [default = 0];
      case 3: {
        if (tag == 24) {
         parse_senderid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &senderid_)));
          set_has_senderid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_receiveid;
        break;
      }

      // optional uint64 receiveid = 4 [default = 0];
      case 4: {
        if (tag == 32) {
         parse_receiveid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &receiveid_)));
          set_has_receiveid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_mailid;
        break;
      }

      // optional uint32 mailid = 5 [default = 0];
      case 5: {
        if (tag == 40) {
         parse_mailid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mailid_)));
          set_has_mailid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_type;
        break;
      }

      // optional .Cmd.EMailType type = 6 [default = EMAILTYPE_MIN];
      case 6: {
        if (tag == 48) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::EMailType_IsValid(value)) {
            set_type(static_cast< ::Cmd::EMailType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_status;
        break;
      }

      // optional .Cmd.EMailStatus status = 7 [default = EMAILSTATUS_MIN];
      case 7: {
        if (tag == 56) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::EMailStatus_IsValid(value)) {
            set_status(static_cast< ::Cmd::EMailStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_title;
        break;
      }

      // optional string title = 8;
      case 8: {
        if (tag == 66) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "title");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_sender;
        break;
      }

      // optional string sender = 9;
      case 9: {
        if (tag == 74) {
         parse_sender:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sender().data(), this->sender().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sender");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_msg;
        break;
      }

      // optional string msg = 10;
      case 10: {
        if (tag == 82) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_attach;
        break;
      }

      // optional .Cmd.BlobAttach attach = 11;
      case 11: {
        if (tag == 90) {
         parse_attach:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_attach()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_time;
        break;
      }

      // optional uint32 time = 12 [default = 0];
      case 12: {
        if (tag == 96) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_receiveaccid;
        break;
      }

      // optional uint64 receiveaccid = 13 [default = 0];
      case 13: {
        if (tag == 104) {
         parse_receiveaccid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &receiveaccid_)));
          set_has_receiveaccid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_groupid;
        break;
      }

      // optional string groupid = 16;
      case 16: {
        if (tag == 130) {
         parse_groupid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->groupid().data(), this->groupid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "groupid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_starttime;
        break;
      }

      // optional uint32 starttime = 17;
      case 17: {
        if (tag == 136) {
         parse_starttime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &starttime_)));
          set_has_starttime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_endtime;
        break;
      }

      // optional uint32 endtime = 18;
      case 18: {
        if (tag == 144) {
         parse_endtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &endtime_)));
          set_has_endtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_weddingmsg;
        break;
      }

      // optional .Cmd.WeddingEventMsgCCmd weddingmsg = 19;
      case 19: {
        if (tag == 154) {
         parse_weddingmsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_weddingmsg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_eventmsg;
        break;
      }

      // optional .Cmd.UserEventMailCmd eventmsg = 20;
      case 20: {
        if (tag == 162) {
         parse_eventmsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_eventmsg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.MailData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.MailData)
  return false;
#undef DO_
}

void MailData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.MailData)
  // optional uint64 id = 1 [default = 0];
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional uint64 sysid = 2 [default = 0];
  if (has_sysid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->sysid(), output);
  }

  // optional uint64 senderid = 3 [default = 0];
  if (has_senderid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->senderid(), output);
  }

  // optional uint64 receiveid = 4 [default = 0];
  if (has_receiveid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->receiveid(), output);
  }

  // optional uint32 mailid = 5 [default = 0];
  if (has_mailid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->mailid(), output);
  }

  // optional .Cmd.EMailType type = 6 [default = EMAILTYPE_MIN];
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->type(), output);
  }

  // optional .Cmd.EMailStatus status = 7 [default = EMAILSTATUS_MIN];
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->status(), output);
  }

  // optional string title = 8;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->title(), output);
  }

  // optional string sender = 9;
  if (has_sender()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender().data(), this->sender().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sender");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->sender(), output);
  }

  // optional string msg = 10;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->msg(), output);
  }

  // optional .Cmd.BlobAttach attach = 11;
  if (has_attach()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->attach(), output);
  }

  // optional uint32 time = 12 [default = 0];
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->time(), output);
  }

  // optional uint64 receiveaccid = 13 [default = 0];
  if (has_receiveaccid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->receiveaccid(), output);
  }

  // optional string groupid = 16;
  if (has_groupid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->groupid().data(), this->groupid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "groupid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->groupid(), output);
  }

  // optional uint32 starttime = 17;
  if (has_starttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->starttime(), output);
  }

  // optional uint32 endtime = 18;
  if (has_endtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->endtime(), output);
  }

  // optional .Cmd.WeddingEventMsgCCmd weddingmsg = 19;
  if (has_weddingmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->weddingmsg(), output);
  }

  // optional .Cmd.UserEventMailCmd eventmsg = 20;
  if (has_eventmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->eventmsg(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.MailData)
}

::google::protobuf::uint8* MailData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.MailData)
  // optional uint64 id = 1 [default = 0];
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional uint64 sysid = 2 [default = 0];
  if (has_sysid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->sysid(), target);
  }

  // optional uint64 senderid = 3 [default = 0];
  if (has_senderid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->senderid(), target);
  }

  // optional uint64 receiveid = 4 [default = 0];
  if (has_receiveid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->receiveid(), target);
  }

  // optional uint32 mailid = 5 [default = 0];
  if (has_mailid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->mailid(), target);
  }

  // optional .Cmd.EMailType type = 6 [default = EMAILTYPE_MIN];
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->type(), target);
  }

  // optional .Cmd.EMailStatus status = 7 [default = EMAILSTATUS_MIN];
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->status(), target);
  }

  // optional string title = 8;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->title(), target);
  }

  // optional string sender = 9;
  if (has_sender()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender().data(), this->sender().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sender");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->sender(), target);
  }

  // optional string msg = 10;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->msg(), target);
  }

  // optional .Cmd.BlobAttach attach = 11;
  if (has_attach()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->attach(), target);
  }

  // optional uint32 time = 12 [default = 0];
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->time(), target);
  }

  // optional uint64 receiveaccid = 13 [default = 0];
  if (has_receiveaccid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(13, this->receiveaccid(), target);
  }

  // optional string groupid = 16;
  if (has_groupid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->groupid().data(), this->groupid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "groupid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->groupid(), target);
  }

  // optional uint32 starttime = 17;
  if (has_starttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->starttime(), target);
  }

  // optional uint32 endtime = 18;
  if (has_endtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->endtime(), target);
  }

  // optional .Cmd.WeddingEventMsgCCmd weddingmsg = 19;
  if (has_weddingmsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        19, this->weddingmsg(), target);
  }

  // optional .Cmd.UserEventMailCmd eventmsg = 20;
  if (has_eventmsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        20, this->eventmsg(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.MailData)
  return target;
}

int MailData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 id = 1 [default = 0];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional uint64 sysid = 2 [default = 0];
    if (has_sysid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->sysid());
    }

    // optional uint64 senderid = 3 [default = 0];
    if (has_senderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->senderid());
    }

    // optional uint64 receiveid = 4 [default = 0];
    if (has_receiveid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->receiveid());
    }

    // optional uint64 receiveaccid = 13 [default = 0];
    if (has_receiveaccid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->receiveaccid());
    }

    // optional uint32 time = 12 [default = 0];
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time());
    }

    // optional uint32 mailid = 5 [default = 0];
    if (has_mailid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mailid());
    }

    // optional .Cmd.EMailType type = 6 [default = EMAILTYPE_MIN];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .Cmd.EMailStatus status = 7 [default = EMAILSTATUS_MIN];
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional string title = 8;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string sender = 9;
    if (has_sender()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sender());
    }

    // optional string msg = 10;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional .Cmd.BlobAttach attach = 11;
    if (has_attach()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->attach());
    }

    // optional string groupid = 16;
    if (has_groupid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->groupid());
    }

    // optional uint32 starttime = 17;
    if (has_starttime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->starttime());
    }

    // optional uint32 endtime = 18;
    if (has_endtime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->endtime());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional .Cmd.WeddingEventMsgCCmd weddingmsg = 19;
    if (has_weddingmsg()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->weddingmsg());
    }

    // optional .Cmd.UserEventMailCmd eventmsg = 20;
    if (has_eventmsg()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->eventmsg());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MailData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MailData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MailData::MergeFrom(const MailData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_sysid()) {
      set_sysid(from.sysid());
    }
    if (from.has_senderid()) {
      set_senderid(from.senderid());
    }
    if (from.has_receiveid()) {
      set_receiveid(from.receiveid());
    }
    if (from.has_receiveaccid()) {
      set_receiveaccid(from.receiveaccid());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_mailid()) {
      set_mailid(from.mailid());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_title()) {
      set_title(from.title());
    }
    if (from.has_sender()) {
      set_sender(from.sender());
    }
    if (from.has_msg()) {
      set_msg(from.msg());
    }
    if (from.has_attach()) {
      mutable_attach()->::Cmd::BlobAttach::MergeFrom(from.attach());
    }
    if (from.has_groupid()) {
      set_groupid(from.groupid());
    }
    if (from.has_starttime()) {
      set_starttime(from.starttime());
    }
    if (from.has_endtime()) {
      set_endtime(from.endtime());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_weddingmsg()) {
      mutable_weddingmsg()->::Cmd::WeddingEventMsgCCmd::MergeFrom(from.weddingmsg());
    }
    if (from.has_eventmsg()) {
      mutable_eventmsg()->::Cmd::UserEventMailCmd::MergeFrom(from.eventmsg());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MailData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailData::CopyFrom(const MailData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailData::IsInitialized() const {

  return true;
}

void MailData::Swap(MailData* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(sysid_, other->sysid_);
    std::swap(senderid_, other->senderid_);
    std::swap(receiveid_, other->receiveid_);
    std::swap(receiveaccid_, other->receiveaccid_);
    std::swap(time_, other->time_);
    std::swap(mailid_, other->mailid_);
    std::swap(type_, other->type_);
    std::swap(status_, other->status_);
    std::swap(title_, other->title_);
    std::swap(sender_, other->sender_);
    std::swap(msg_, other->msg_);
    std::swap(attach_, other->attach_);
    std::swap(groupid_, other->groupid_);
    std::swap(starttime_, other->starttime_);
    std::swap(endtime_, other->endtime_);
    std::swap(weddingmsg_, other->weddingmsg_);
    std::swap(eventmsg_, other->eventmsg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MailData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MailData_descriptor_;
  metadata.reflection = MailData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MailMsg::kLanguageFieldNumber;
const int MailMsg::kTitleFieldNumber;
const int MailMsg::kMsgFieldNumber;
#endif  // !_MSC_VER

MailMsg::MailMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.MailMsg)
}

void MailMsg::InitAsDefaultInstance() {
}

MailMsg::MailMsg(const MailMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.MailMsg)
}

void MailMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  language_ = 0u;
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MailMsg::~MailMsg() {
  // @@protoc_insertion_point(destructor:Cmd.MailMsg)
  SharedDtor();
}

void MailMsg::SharedDtor() {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_;
  }
  if (this != default_instance_) {
  }
}

void MailMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MailMsg_descriptor_;
}

const MailMsg& MailMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SessionMail_2eproto();
  return *default_instance_;
}

MailMsg* MailMsg::default_instance_ = NULL;

MailMsg* MailMsg::New() const {
  return new MailMsg;
}

void MailMsg::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    language_ = 0u;
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        title_->clear();
      }
    }
    if (has_msg()) {
      if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        msg_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MailMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.MailMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 language = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &language_)));
          set_has_language();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_title;
        break;
      }

      // optional string title = 2;
      case 2: {
        if (tag == 18) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "title");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_msg;
        break;
      }

      // optional string msg = 3;
      case 3: {
        if (tag == 26) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.MailMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.MailMsg)
  return false;
#undef DO_
}

void MailMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.MailMsg)
  // optional uint32 language = 1 [default = 0];
  if (has_language()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->language(), output);
  }

  // optional string title = 2;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // optional string msg = 3;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.MailMsg)
}

::google::protobuf::uint8* MailMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.MailMsg)
  // optional uint32 language = 1 [default = 0];
  if (has_language()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->language(), target);
  }

  // optional string title = 2;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // optional string msg = 3;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.MailMsg)
  return target;
}

int MailMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 language = 1 [default = 0];
    if (has_language()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->language());
    }

    // optional string title = 2;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string msg = 3;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MailMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MailMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MailMsg::MergeFrom(const MailMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_language()) {
      set_language(from.language());
    }
    if (from.has_title()) {
      set_title(from.title());
    }
    if (from.has_msg()) {
      set_msg(from.msg());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MailMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailMsg::CopyFrom(const MailMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailMsg::IsInitialized() const {

  return true;
}

void MailMsg::Swap(MailMsg* other) {
  if (other != this) {
    std::swap(language_, other->language_);
    std::swap(title_, other->title_);
    std::swap(msg_, other->msg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MailMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MailMsg_descriptor_;
  metadata.reflection = MailMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MailTemplateData::kMsgsFieldNumber;
#endif  // !_MSC_VER

MailTemplateData::MailTemplateData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.MailTemplateData)
}

void MailTemplateData::InitAsDefaultInstance() {
}

MailTemplateData::MailTemplateData(const MailTemplateData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.MailTemplateData)
}

void MailTemplateData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MailTemplateData::~MailTemplateData() {
  // @@protoc_insertion_point(destructor:Cmd.MailTemplateData)
  SharedDtor();
}

void MailTemplateData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MailTemplateData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailTemplateData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MailTemplateData_descriptor_;
}

const MailTemplateData& MailTemplateData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SessionMail_2eproto();
  return *default_instance_;
}

MailTemplateData* MailTemplateData::default_instance_ = NULL;

MailTemplateData* MailTemplateData::New() const {
  return new MailTemplateData;
}

void MailTemplateData::Clear() {
  msgs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MailTemplateData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.MailTemplateData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Cmd.MailMsg msgs = 1;
      case 1: {
        if (tag == 10) {
         parse_msgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_msgs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_msgs;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.MailTemplateData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.MailTemplateData)
  return false;
#undef DO_
}

void MailTemplateData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.MailTemplateData)
  // repeated .Cmd.MailMsg msgs = 1;
  for (int i = 0; i < this->msgs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->msgs(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.MailTemplateData)
}

::google::protobuf::uint8* MailTemplateData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.MailTemplateData)
  // repeated .Cmd.MailMsg msgs = 1;
  for (int i = 0; i < this->msgs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->msgs(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.MailTemplateData)
  return target;
}

int MailTemplateData::ByteSize() const {
  int total_size = 0;

  // repeated .Cmd.MailMsg msgs = 1;
  total_size += 1 * this->msgs_size();
  for (int i = 0; i < this->msgs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->msgs(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailTemplateData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MailTemplateData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MailTemplateData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MailTemplateData::MergeFrom(const MailTemplateData& from) {
  GOOGLE_CHECK_NE(&from, this);
  msgs_.MergeFrom(from.msgs_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MailTemplateData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailTemplateData::CopyFrom(const MailTemplateData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailTemplateData::IsInitialized() const {

  return true;
}

void MailTemplateData::Swap(MailTemplateData* other) {
  if (other != this) {
    msgs_.Swap(&other->msgs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MailTemplateData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MailTemplateData_descriptor_;
  metadata.reflection = MailTemplateData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int QueryAllMail::kCmdFieldNumber;
const int QueryAllMail::kParamFieldNumber;
const int QueryAllMail::kDatasFieldNumber;
#endif  // !_MSC_VER

QueryAllMail::QueryAllMail()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.QueryAllMail)
}

void QueryAllMail::InitAsDefaultInstance() {
}

QueryAllMail::QueryAllMail(const QueryAllMail& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.QueryAllMail)
}

void QueryAllMail::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 55;
  param_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryAllMail::~QueryAllMail() {
  // @@protoc_insertion_point(destructor:Cmd.QueryAllMail)
  SharedDtor();
}

void QueryAllMail::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QueryAllMail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryAllMail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryAllMail_descriptor_;
}

const QueryAllMail& QueryAllMail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SessionMail_2eproto();
  return *default_instance_;
}

QueryAllMail* QueryAllMail::default_instance_ = NULL;

QueryAllMail* QueryAllMail::New() const {
  return new QueryAllMail;
}

void QueryAllMail::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    cmd_ = 55;
    param_ = 1;
  }
  datas_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QueryAllMail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.QueryAllMail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.Command cmd = 1 [default = SESSION_USER_MAIL_PROTOCMD];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::Command_IsValid(value)) {
            set_cmd(static_cast< ::Cmd::Command >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_param;
        break;
      }

      // optional .Cmd.MailParam param = 2 [default = MAILPARAM_QUERYALLMAIL];
      case 2: {
        if (tag == 16) {
         parse_param:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::MailParam_IsValid(value)) {
            set_param(static_cast< ::Cmd::MailParam >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_datas;
        break;
      }

      // repeated .Cmd.MailData datas = 3;
      case 3: {
        if (tag == 26) {
         parse_datas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_datas()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_datas;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.QueryAllMail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.QueryAllMail)
  return false;
#undef DO_
}

void QueryAllMail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.QueryAllMail)
  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_MAIL_PROTOCMD];
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional .Cmd.MailParam param = 2 [default = MAILPARAM_QUERYALLMAIL];
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->param(), output);
  }

  // repeated .Cmd.MailData datas = 3;
  for (int i = 0; i < this->datas_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->datas(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.QueryAllMail)
}

::google::protobuf::uint8* QueryAllMail::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.QueryAllMail)
  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_MAIL_PROTOCMD];
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional .Cmd.MailParam param = 2 [default = MAILPARAM_QUERYALLMAIL];
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->param(), target);
  }

  // repeated .Cmd.MailData datas = 3;
  for (int i = 0; i < this->datas_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->datas(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.QueryAllMail)
  return target;
}

int QueryAllMail::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.Command cmd = 1 [default = SESSION_USER_MAIL_PROTOCMD];
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
    }

    // optional .Cmd.MailParam param = 2 [default = MAILPARAM_QUERYALLMAIL];
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->param());
    }

  }
  // repeated .Cmd.MailData datas = 3;
  total_size += 1 * this->datas_size();
  for (int i = 0; i < this->datas_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->datas(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryAllMail::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QueryAllMail* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QueryAllMail*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QueryAllMail::MergeFrom(const QueryAllMail& from) {
  GOOGLE_CHECK_NE(&from, this);
  datas_.MergeFrom(from.datas_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QueryAllMail::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryAllMail::CopyFrom(const QueryAllMail& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAllMail::IsInitialized() const {

  return true;
}

void QueryAllMail::Swap(QueryAllMail* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(param_, other->param_);
    datas_.Swap(&other->datas_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QueryAllMail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryAllMail_descriptor_;
  metadata.reflection = QueryAllMail_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MailUpdate::kCmdFieldNumber;
const int MailUpdate::kParamFieldNumber;
const int MailUpdate::kUpdatesFieldNumber;
const int MailUpdate::kDelsFieldNumber;
#endif  // !_MSC_VER

MailUpdate::MailUpdate()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.MailUpdate)
}

void MailUpdate::InitAsDefaultInstance() {
}

MailUpdate::MailUpdate(const MailUpdate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.MailUpdate)
}

void MailUpdate::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 55;
  param_ = 2;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MailUpdate::~MailUpdate() {
  // @@protoc_insertion_point(destructor:Cmd.MailUpdate)
  SharedDtor();
}

void MailUpdate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MailUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailUpdate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MailUpdate_descriptor_;
}

const MailUpdate& MailUpdate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SessionMail_2eproto();
  return *default_instance_;
}

MailUpdate* MailUpdate::default_instance_ = NULL;

MailUpdate* MailUpdate::New() const {
  return new MailUpdate;
}

void MailUpdate::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    cmd_ = 55;
    param_ = 2;
  }
  updates_.Clear();
  dels_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MailUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.MailUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.Command cmd = 1 [default = SESSION_USER_MAIL_PROTOCMD];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::Command_IsValid(value)) {
            set_cmd(static_cast< ::Cmd::Command >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_param;
        break;
      }

      // optional .Cmd.MailParam param = 2 [default = MAILPARAM_UPDATE];
      case 2: {
        if (tag == 16) {
         parse_param:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::MailParam_IsValid(value)) {
            set_param(static_cast< ::Cmd::MailParam >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_updates;
        break;
      }

      // repeated .Cmd.MailData updates = 3;
      case 3: {
        if (tag == 26) {
         parse_updates:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_updates()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_updates;
        if (input->ExpectTag(32)) goto parse_dels;
        break;
      }

      // repeated uint64 dels = 4;
      case 4: {
        if (tag == 32) {
         parse_dels:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 32, input, this->mutable_dels())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_dels())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_dels;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.MailUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.MailUpdate)
  return false;
#undef DO_
}

void MailUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.MailUpdate)
  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_MAIL_PROTOCMD];
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional .Cmd.MailParam param = 2 [default = MAILPARAM_UPDATE];
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->param(), output);
  }

  // repeated .Cmd.MailData updates = 3;
  for (int i = 0; i < this->updates_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->updates(i), output);
  }

  // repeated uint64 dels = 4;
  for (int i = 0; i < this->dels_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      4, this->dels(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.MailUpdate)
}

::google::protobuf::uint8* MailUpdate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.MailUpdate)
  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_MAIL_PROTOCMD];
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional .Cmd.MailParam param = 2 [default = MAILPARAM_UPDATE];
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->param(), target);
  }

  // repeated .Cmd.MailData updates = 3;
  for (int i = 0; i < this->updates_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->updates(i), target);
  }

  // repeated uint64 dels = 4;
  for (int i = 0; i < this->dels_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(4, this->dels(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.MailUpdate)
  return target;
}

int MailUpdate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.Command cmd = 1 [default = SESSION_USER_MAIL_PROTOCMD];
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
    }

    // optional .Cmd.MailParam param = 2 [default = MAILPARAM_UPDATE];
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->param());
    }

  }
  // repeated .Cmd.MailData updates = 3;
  total_size += 1 * this->updates_size();
  for (int i = 0; i < this->updates_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->updates(i));
  }

  // repeated uint64 dels = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->dels_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->dels(i));
    }
    total_size += 1 * this->dels_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailUpdate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MailUpdate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MailUpdate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MailUpdate::MergeFrom(const MailUpdate& from) {
  GOOGLE_CHECK_NE(&from, this);
  updates_.MergeFrom(from.updates_);
  dels_.MergeFrom(from.dels_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MailUpdate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailUpdate::CopyFrom(const MailUpdate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailUpdate::IsInitialized() const {

  return true;
}

void MailUpdate::Swap(MailUpdate* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(param_, other->param_);
    updates_.Swap(&other->updates_);
    dels_.Swap(&other->dels_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MailUpdate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MailUpdate_descriptor_;
  metadata.reflection = MailUpdate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetMailAttach::kCmdFieldNumber;
const int GetMailAttach::kParamFieldNumber;
const int GetMailAttach::kIdFieldNumber;
#endif  // !_MSC_VER

GetMailAttach::GetMailAttach()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.GetMailAttach)
}

void GetMailAttach::InitAsDefaultInstance() {
}

GetMailAttach::GetMailAttach(const GetMailAttach& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.GetMailAttach)
}

void GetMailAttach::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 55;
  param_ = 3;
  id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetMailAttach::~GetMailAttach() {
  // @@protoc_insertion_point(destructor:Cmd.GetMailAttach)
  SharedDtor();
}

void GetMailAttach::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetMailAttach::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetMailAttach::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetMailAttach_descriptor_;
}

const GetMailAttach& GetMailAttach::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SessionMail_2eproto();
  return *default_instance_;
}

GetMailAttach* GetMailAttach::default_instance_ = NULL;

GetMailAttach* GetMailAttach::New() const {
  return new GetMailAttach;
}

void GetMailAttach::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    cmd_ = 55;
    param_ = 3;
    id_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetMailAttach::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.GetMailAttach)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.Command cmd = 1 [default = SESSION_USER_MAIL_PROTOCMD];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::Command_IsValid(value)) {
            set_cmd(static_cast< ::Cmd::Command >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_param;
        break;
      }

      // optional .Cmd.MailParam param = 2 [default = MAILPARAM_GETATTACH];
      case 2: {
        if (tag == 16) {
         parse_param:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::MailParam_IsValid(value)) {
            set_param(static_cast< ::Cmd::MailParam >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_id;
        break;
      }

      // optional uint64 id = 3 [default = 0];
      case 3: {
        if (tag == 24) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.GetMailAttach)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.GetMailAttach)
  return false;
#undef DO_
}

void GetMailAttach::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.GetMailAttach)
  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_MAIL_PROTOCMD];
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional .Cmd.MailParam param = 2 [default = MAILPARAM_GETATTACH];
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->param(), output);
  }

  // optional uint64 id = 3 [default = 0];
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.GetMailAttach)
}

::google::protobuf::uint8* GetMailAttach::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.GetMailAttach)
  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_MAIL_PROTOCMD];
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional .Cmd.MailParam param = 2 [default = MAILPARAM_GETATTACH];
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->param(), target);
  }

  // optional uint64 id = 3 [default = 0];
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.GetMailAttach)
  return target;
}

int GetMailAttach::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.Command cmd = 1 [default = SESSION_USER_MAIL_PROTOCMD];
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
    }

    // optional .Cmd.MailParam param = 2 [default = MAILPARAM_GETATTACH];
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->param());
    }

    // optional uint64 id = 3 [default = 0];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetMailAttach::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetMailAttach* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetMailAttach*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetMailAttach::MergeFrom(const GetMailAttach& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetMailAttach::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMailAttach::CopyFrom(const GetMailAttach& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMailAttach::IsInitialized() const {

  return true;
}

void GetMailAttach::Swap(GetMailAttach* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(param_, other->param_);
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetMailAttach::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetMailAttach_descriptor_;
  metadata.reflection = GetMailAttach_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cmd

// @@protoc_insertion_point(global_scope)
