// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SceneBeing.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SceneBeing.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Cmd {

namespace {

const ::google::protobuf::Descriptor* UserBeingData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserBeingData_reflection_ = NULL;
const ::google::protobuf::Descriptor* BeingSkillData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BeingSkillData_reflection_ = NULL;
const ::google::protobuf::Descriptor* BeingSkillQuery_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BeingSkillQuery_reflection_ = NULL;
const ::google::protobuf::Descriptor* BeingSkillUpdate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BeingSkillUpdate_reflection_ = NULL;
const ::google::protobuf::Descriptor* BeingSkillLevelUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BeingSkillLevelUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* BeingMemberData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BeingMemberData_reflection_ = NULL;
const ::google::protobuf::Descriptor* BeingInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BeingInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* BeingInfoQuery_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BeingInfoQuery_reflection_ = NULL;
const ::google::protobuf::Descriptor* BeingInfoUpdate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BeingInfoUpdate_reflection_ = NULL;
const ::google::protobuf::Descriptor* BeingSwitchState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BeingSwitchState_reflection_ = NULL;
const ::google::protobuf::Descriptor* BeingOffCmd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BeingOffCmd_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChangeBodyBeingCmd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChangeBodyBeingCmd_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* BeingParam_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EBeingDataType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_SceneBeing_2eproto() {
  protobuf_AddDesc_SceneBeing_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "SceneBeing.proto");
  GOOGLE_CHECK(file != NULL);
  UserBeingData_descriptor_ = file->message_type(0);
  static const int UserBeingData_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserBeingData, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserBeingData, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserBeingData, lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserBeingData, hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserBeingData, live_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserBeingData, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserBeingData, usedskillpoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserBeingData, battle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserBeingData, buff_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserBeingData, skills_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserBeingData, buffids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserBeingData, body_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserBeingData, bodylist_),
  };
  UserBeingData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserBeingData_descriptor_,
      UserBeingData::default_instance_,
      UserBeingData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserBeingData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserBeingData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserBeingData));
  BeingSkillData_descriptor_ = file->message_type(1);
  static const int BeingSkillData_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSkillData, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSkillData, leftpoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSkillData, usedpoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSkillData, items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSkillData, specinfo_),
  };
  BeingSkillData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BeingSkillData_descriptor_,
      BeingSkillData::default_instance_,
      BeingSkillData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSkillData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSkillData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BeingSkillData));
  BeingSkillQuery_descriptor_ = file->message_type(2);
  static const int BeingSkillQuery_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSkillQuery, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSkillQuery, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSkillQuery, data_),
  };
  BeingSkillQuery_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BeingSkillQuery_descriptor_,
      BeingSkillQuery::default_instance_,
      BeingSkillQuery_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSkillQuery, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSkillQuery, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BeingSkillQuery));
  BeingSkillUpdate_descriptor_ = file->message_type(3);
  static const int BeingSkillUpdate_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSkillUpdate, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSkillUpdate, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSkillUpdate, update_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSkillUpdate, del_),
  };
  BeingSkillUpdate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BeingSkillUpdate_descriptor_,
      BeingSkillUpdate::default_instance_,
      BeingSkillUpdate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSkillUpdate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSkillUpdate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BeingSkillUpdate));
  BeingSkillLevelUp_descriptor_ = file->message_type(4);
  static const int BeingSkillLevelUp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSkillLevelUp, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSkillLevelUp, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSkillLevelUp, beingid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSkillLevelUp, skillids_),
  };
  BeingSkillLevelUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BeingSkillLevelUp_descriptor_,
      BeingSkillLevelUp::default_instance_,
      BeingSkillLevelUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSkillLevelUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSkillLevelUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BeingSkillLevelUp));
  BeingMemberData_descriptor_ = file->message_type(5);
  static const int BeingMemberData_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingMemberData, etype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingMemberData, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingMemberData, values_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingMemberData, data_),
  };
  BeingMemberData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BeingMemberData_descriptor_,
      BeingMemberData::default_instance_,
      BeingMemberData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingMemberData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingMemberData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BeingMemberData));
  BeingInfo_descriptor_ = file->message_type(6);
  static const int BeingInfo_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingInfo, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingInfo, beingid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingInfo, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingInfo, lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingInfo, battle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingInfo, summon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingInfo, live_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingInfo, body_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingInfo, bodylist_),
  };
  BeingInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BeingInfo_descriptor_,
      BeingInfo::default_instance_,
      BeingInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BeingInfo));
  BeingInfoQuery_descriptor_ = file->message_type(7);
  static const int BeingInfoQuery_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingInfoQuery, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingInfoQuery, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingInfoQuery, beinginfo_),
  };
  BeingInfoQuery_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BeingInfoQuery_descriptor_,
      BeingInfoQuery::default_instance_,
      BeingInfoQuery_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingInfoQuery, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingInfoQuery, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BeingInfoQuery));
  BeingInfoUpdate_descriptor_ = file->message_type(8);
  static const int BeingInfoUpdate_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingInfoUpdate, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingInfoUpdate, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingInfoUpdate, beingid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingInfoUpdate, datas_),
  };
  BeingInfoUpdate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BeingInfoUpdate_descriptor_,
      BeingInfoUpdate::default_instance_,
      BeingInfoUpdate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingInfoUpdate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingInfoUpdate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BeingInfoUpdate));
  BeingSwitchState_descriptor_ = file->message_type(9);
  static const int BeingSwitchState_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSwitchState, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSwitchState, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSwitchState, beingid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSwitchState, battle_),
  };
  BeingSwitchState_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BeingSwitchState_descriptor_,
      BeingSwitchState::default_instance_,
      BeingSwitchState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSwitchState, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingSwitchState, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BeingSwitchState));
  BeingOffCmd_descriptor_ = file->message_type(10);
  static const int BeingOffCmd_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingOffCmd, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingOffCmd, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingOffCmd, beingid_),
  };
  BeingOffCmd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BeingOffCmd_descriptor_,
      BeingOffCmd::default_instance_,
      BeingOffCmd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingOffCmd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeingOffCmd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BeingOffCmd));
  ChangeBodyBeingCmd_descriptor_ = file->message_type(11);
  static const int ChangeBodyBeingCmd_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeBodyBeingCmd, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeBodyBeingCmd, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeBodyBeingCmd, beingid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeBodyBeingCmd, body_),
  };
  ChangeBodyBeingCmd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ChangeBodyBeingCmd_descriptor_,
      ChangeBodyBeingCmd::default_instance_,
      ChangeBodyBeingCmd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeBodyBeingCmd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeBodyBeingCmd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ChangeBodyBeingCmd));
  BeingParam_descriptor_ = file->enum_type(0);
  EBeingDataType_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_SceneBeing_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserBeingData_descriptor_, &UserBeingData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BeingSkillData_descriptor_, &BeingSkillData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BeingSkillQuery_descriptor_, &BeingSkillQuery::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BeingSkillUpdate_descriptor_, &BeingSkillUpdate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BeingSkillLevelUp_descriptor_, &BeingSkillLevelUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BeingMemberData_descriptor_, &BeingMemberData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BeingInfo_descriptor_, &BeingInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BeingInfoQuery_descriptor_, &BeingInfoQuery::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BeingInfoUpdate_descriptor_, &BeingInfoUpdate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BeingSwitchState_descriptor_, &BeingSwitchState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BeingOffCmd_descriptor_, &BeingOffCmd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ChangeBodyBeingCmd_descriptor_, &ChangeBodyBeingCmd::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_SceneBeing_2eproto() {
  delete UserBeingData::default_instance_;
  delete UserBeingData_reflection_;
  delete BeingSkillData::default_instance_;
  delete BeingSkillData_reflection_;
  delete BeingSkillQuery::default_instance_;
  delete BeingSkillQuery_reflection_;
  delete BeingSkillUpdate::default_instance_;
  delete BeingSkillUpdate_reflection_;
  delete BeingSkillLevelUp::default_instance_;
  delete BeingSkillLevelUp_reflection_;
  delete BeingMemberData::default_instance_;
  delete BeingMemberData_reflection_;
  delete BeingInfo::default_instance_;
  delete BeingInfo_reflection_;
  delete BeingInfoQuery::default_instance_;
  delete BeingInfoQuery_reflection_;
  delete BeingInfoUpdate::default_instance_;
  delete BeingInfoUpdate_reflection_;
  delete BeingSwitchState::default_instance_;
  delete BeingSwitchState_reflection_;
  delete BeingOffCmd::default_instance_;
  delete BeingOffCmd_reflection_;
  delete ChangeBodyBeingCmd::default_instance_;
  delete ChangeBodyBeingCmd_reflection_;
}

void protobuf_AddDesc_SceneBeing_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Cmd::protobuf_AddDesc_xCmd_2eproto();
  ::Cmd::protobuf_AddDesc_SceneSkill_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020SceneBeing.proto\022\003Cmd\032\nxCmd.proto\032\020Sce"
    "neSkill.proto\"\211\002\n\rUserBeingData\022\022\n\007versi"
    "on\030\r \001(\r:\0010\022\r\n\002id\030\001 \001(\r:\0010\022\r\n\002lv\030\002 \001(\r:\001"
    "0\022\r\n\002hp\030\003 \001(\r:\0010\022\023\n\004live\030\004 \001(\010:\005false\022\016\n"
    "\003exp\030\005 \001(\004:\0010\022\031\n\016usedskillpoint\030\006 \001(\r:\0010"
    "\022\025\n\006battle\030\007 \001(\010:\005false\022\014\n\004buff\030\010 \001(\014\022\036\n"
    "\006skills\030\t \003(\0132\016.Cmd.SkillItem\022\017\n\007buffids"
    "\030\n \003(\r\022\017\n\004body\030\013 \001(\r:\0010\022\020\n\010bodylist\030\014 \003("
    "\r\"\220\001\n\016BeingSkillData\022\r\n\002id\030\001 \001(\r:\0010\022\024\n\tl"
    "eftpoint\030\002 \001(\r:\0010\022\024\n\tusedpoint\030\003 \001(\r:\0010\022"
    "\035\n\005items\030\004 \003(\0132\016.Cmd.SkillItem\022$\n\010specin"
    "fo\030\005 \003(\0132\022.Cmd.SpecSkillInfo\"\242\001\n\017BeingSk"
    "illQuery\0224\n\003cmd\030\001 \001(\0162\014.Cmd.Command:\031SCE"
    "NE_USER_BEING_PROTOCMD\0226\n\005param\030\002 \001(\0162\017."
    "Cmd.BeingParam:\026BEINGPARAM_SKILL_QUERY\022!"
    "\n\004data\030\003 \003(\0132\023.Cmd.BeingSkillData\"\310\001\n\020Be"
    "ingSkillUpdate\0224\n\003cmd\030\001 \001(\0162\014.Cmd.Comman"
    "d:\031SCENE_USER_BEING_PROTOCMD\0227\n\005param\030\002 "
    "\001(\0162\017.Cmd.BeingParam:\027BEINGPARAM_SKILL_U"
    "PDATE\022#\n\006update\030\003 \003(\0132\023.Cmd.BeingSkillDa"
    "ta\022 \n\003del\030\004 \003(\0132\023.Cmd.BeingSkillData\"\251\001\n"
    "\021BeingSkillLevelUp\0224\n\003cmd\030\001 \001(\0162\014.Cmd.Co"
    "mmand:\031SCENE_USER_BEING_PROTOCMD\0228\n\005para"
    "m\030\002 \001(\0162\017.Cmd.BeingParam:\030BEINGPARAM_SKI"
    "LL_LEVELUP\022\022\n\007beingid\030\003 \001(\r:\0010\022\020\n\010skilli"
    "ds\030\004 \003(\r\"u\n\017BeingMemberData\0222\n\005etype\030\001 \001"
    "(\0162\023.Cmd.EBeingDataType:\016EBEINGDATA_MIN\022"
    "\020\n\005value\030\002 \001(\004:\0010\022\016\n\006values\030\003 \003(\r\022\014\n\004dat"
    "a\030\004 \001(\t\"\265\001\n\tBeingInfo\022\017\n\004guid\030\001 \001(\004:\0010\022\022"
    "\n\007beingid\030\002 \001(\r:\0010\022\016\n\003exp\030\003 \001(\004:\0010\022\r\n\002lv"
    "\030\004 \001(\r:\0010\022\025\n\006battle\030\005 \001(\010:\005false\022\025\n\006summ"
    "on\030\006 \001(\010:\005false\022\023\n\004live\030\007 \001(\010:\005false\022\017\n\004"
    "body\030\010 \001(\r:\0010\022\020\n\010bodylist\030\t \003(\r\"\246\001\n\016Bein"
    "gInfoQuery\0224\n\003cmd\030\001 \001(\0162\014.Cmd.Command:\031S"
    "CENE_USER_BEING_PROTOCMD\022;\n\005param\030\002 \001(\0162"
    "\017.Cmd.BeingParam:\033BEINGPARAM_BEING_INFO_"
    "QUERY\022!\n\tbeinginfo\030\003 \003(\0132\016.Cmd.BeingInfo"
    "\"\273\001\n\017BeingInfoUpdate\0224\n\003cmd\030\001 \001(\0162\014.Cmd."
    "Command:\031SCENE_USER_BEING_PROTOCMD\022<\n\005pa"
    "ram\030\002 \001(\0162\017.Cmd.BeingParam:\034BEINGPARAM_B"
    "EING_INFO_UPDATE\022\017\n\007beingid\030\003 \002(\r\022#\n\005dat"
    "as\030\004 \003(\0132\024.Cmd.BeingMemberData\"\250\001\n\020Being"
    "SwitchState\0224\n\003cmd\030\001 \001(\0162\014.Cmd.Command:\031"
    "SCENE_USER_BEING_PROTOCMD\022=\n\005param\030\002 \001(\016"
    "2\017.Cmd.BeingParam:\035BEINGPARAM_BEING_SWIT"
    "CH_STATE\022\017\n\007beingid\030\003 \002(\r\022\016\n\006battle\030\004 \002("
    "\010\"\212\001\n\013BeingOffCmd\0224\n\003cmd\030\001 \001(\0162\014.Cmd.Com"
    "mand:\031SCENE_USER_BEING_PROTOCMD\0224\n\005param"
    "\030\002 \001(\0162\017.Cmd.BeingParam:\024BEINGPARAM_BEIN"
    "G_OFF\022\017\n\007beingid\030\003 \002(\r\"\247\001\n\022ChangeBodyBei"
    "ngCmd\0224\n\003cmd\030\001 \001(\0162\014.Cmd.Command:\031SCENE_"
    "USER_BEING_PROTOCMD\022<\n\005param\030\002 \001(\0162\017.Cmd"
    ".BeingParam:\034BEINGPARAM_BEING_CHANGE_BOD"
    "Y\022\017\n\007beingid\030\003 \002(\r\022\014\n\004body\030\004 \002(\r*\205\002\n\nBei"
    "ngParam\022\032\n\026BEINGPARAM_SKILL_QUERY\020\001\022\033\n\027B"
    "EINGPARAM_SKILL_UPDATE\020\002\022\034\n\030BEINGPARAM_S"
    "KILL_LEVELUP\020\003\022\037\n\033BEINGPARAM_BEING_INFO_"
    "QUERY\020\004\022 \n\034BEINGPARAM_BEING_INFO_UPDATE\020"
    "\005\022\030\n\024BEINGPARAM_BEING_OFF\020\006\022!\n\035BEINGPARA"
    "M_BEING_SWITCH_STATE\020\007\022 \n\034BEINGPARAM_BEI"
    "NG_CHANGE_BODY\020\010*\345\001\n\016EBeingDataType\022\022\n\016E"
    "BEINGDATA_MIN\020\000\022\021\n\rEBEINGDATA_LV\020\001\022\022\n\016EB"
    "EINGDATA_EXP\020\002\022\025\n\021EBEINGDATA_BATTLE\020\003\022\023\n"
    "\017EBEINGDATA_GUID\020\004\022\023\n\017EBEINGDATA_LIVE\020\005\022"
    "\025\n\021EBEINGDATA_SUMMON\020\006\022\023\n\017EBEINGDATA_BOD"
    "Y\020\007\022\027\n\023EBEINGDATA_BODYLIST\020\010\022\022\n\016EBEINGDA"
    "TA_MAX\020\t", 2648);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SceneBeing.proto", &protobuf_RegisterTypes);
  UserBeingData::default_instance_ = new UserBeingData();
  BeingSkillData::default_instance_ = new BeingSkillData();
  BeingSkillQuery::default_instance_ = new BeingSkillQuery();
  BeingSkillUpdate::default_instance_ = new BeingSkillUpdate();
  BeingSkillLevelUp::default_instance_ = new BeingSkillLevelUp();
  BeingMemberData::default_instance_ = new BeingMemberData();
  BeingInfo::default_instance_ = new BeingInfo();
  BeingInfoQuery::default_instance_ = new BeingInfoQuery();
  BeingInfoUpdate::default_instance_ = new BeingInfoUpdate();
  BeingSwitchState::default_instance_ = new BeingSwitchState();
  BeingOffCmd::default_instance_ = new BeingOffCmd();
  ChangeBodyBeingCmd::default_instance_ = new ChangeBodyBeingCmd();
  UserBeingData::default_instance_->InitAsDefaultInstance();
  BeingSkillData::default_instance_->InitAsDefaultInstance();
  BeingSkillQuery::default_instance_->InitAsDefaultInstance();
  BeingSkillUpdate::default_instance_->InitAsDefaultInstance();
  BeingSkillLevelUp::default_instance_->InitAsDefaultInstance();
  BeingMemberData::default_instance_->InitAsDefaultInstance();
  BeingInfo::default_instance_->InitAsDefaultInstance();
  BeingInfoQuery::default_instance_->InitAsDefaultInstance();
  BeingInfoUpdate::default_instance_->InitAsDefaultInstance();
  BeingSwitchState::default_instance_->InitAsDefaultInstance();
  BeingOffCmd::default_instance_->InitAsDefaultInstance();
  ChangeBodyBeingCmd::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_SceneBeing_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_SceneBeing_2eproto {
  StaticDescriptorInitializer_SceneBeing_2eproto() {
    protobuf_AddDesc_SceneBeing_2eproto();
  }
} static_descriptor_initializer_SceneBeing_2eproto_;
const ::google::protobuf::EnumDescriptor* BeingParam_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BeingParam_descriptor_;
}
bool BeingParam_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EBeingDataType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EBeingDataType_descriptor_;
}
bool EBeingDataType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int UserBeingData::kVersionFieldNumber;
const int UserBeingData::kIdFieldNumber;
const int UserBeingData::kLvFieldNumber;
const int UserBeingData::kHpFieldNumber;
const int UserBeingData::kLiveFieldNumber;
const int UserBeingData::kExpFieldNumber;
const int UserBeingData::kUsedskillpointFieldNumber;
const int UserBeingData::kBattleFieldNumber;
const int UserBeingData::kBuffFieldNumber;
const int UserBeingData::kSkillsFieldNumber;
const int UserBeingData::kBuffidsFieldNumber;
const int UserBeingData::kBodyFieldNumber;
const int UserBeingData::kBodylistFieldNumber;
#endif  // !_MSC_VER

UserBeingData::UserBeingData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.UserBeingData)
}

void UserBeingData::InitAsDefaultInstance() {
}

UserBeingData::UserBeingData(const UserBeingData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.UserBeingData)
}

void UserBeingData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  version_ = 0u;
  id_ = 0u;
  lv_ = 0u;
  hp_ = 0u;
  live_ = false;
  exp_ = GOOGLE_ULONGLONG(0);
  usedskillpoint_ = 0u;
  battle_ = false;
  buff_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserBeingData::~UserBeingData() {
  // @@protoc_insertion_point(destructor:Cmd.UserBeingData)
  SharedDtor();
}

void UserBeingData::SharedDtor() {
  if (buff_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete buff_;
  }
  if (this != default_instance_) {
  }
}

void UserBeingData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserBeingData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserBeingData_descriptor_;
}

const UserBeingData& UserBeingData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SceneBeing_2eproto();
  return *default_instance_;
}

UserBeingData* UserBeingData::default_instance_ = NULL;

UserBeingData* UserBeingData::New() const {
  return new UserBeingData;
}

void UserBeingData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<UserBeingData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(version_, usedskillpoint_);
  }
  if (_has_bits_[8 / 32] & 2304) {
    if (has_buff()) {
      if (buff_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        buff_->clear();
      }
    }
    body_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  skills_.Clear();
  buffids_.Clear();
  bodylist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserBeingData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.UserBeingData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_lv;
        break;
      }

      // optional uint32 lv = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lv_)));
          set_has_lv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_hp;
        break;
      }

      // optional uint32 hp = 3 [default = 0];
      case 3: {
        if (tag == 24) {
         parse_hp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hp_)));
          set_has_hp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_live;
        break;
      }

      // optional bool live = 4 [default = false];
      case 4: {
        if (tag == 32) {
         parse_live:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &live_)));
          set_has_live();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_exp;
        break;
      }

      // optional uint64 exp = 5 [default = 0];
      case 5: {
        if (tag == 40) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_usedskillpoint;
        break;
      }

      // optional uint32 usedskillpoint = 6 [default = 0];
      case 6: {
        if (tag == 48) {
         parse_usedskillpoint:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &usedskillpoint_)));
          set_has_usedskillpoint();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_battle;
        break;
      }

      // optional bool battle = 7 [default = false];
      case 7: {
        if (tag == 56) {
         parse_battle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &battle_)));
          set_has_battle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_buff;
        break;
      }

      // optional bytes buff = 8;
      case 8: {
        if (tag == 66) {
         parse_buff:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buff()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_skills;
        break;
      }

      // repeated .Cmd.SkillItem skills = 9;
      case 9: {
        if (tag == 74) {
         parse_skills:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skills()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_skills;
        if (input->ExpectTag(80)) goto parse_buffids;
        break;
      }

      // repeated uint32 buffids = 10;
      case 10: {
        if (tag == 80) {
         parse_buffids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 80, input, this->mutable_buffids())));
        } else if (tag == 82) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_buffids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_buffids;
        if (input->ExpectTag(88)) goto parse_body;
        break;
      }

      // optional uint32 body = 11 [default = 0];
      case 11: {
        if (tag == 88) {
         parse_body:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &body_)));
          set_has_body();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_bodylist;
        break;
      }

      // repeated uint32 bodylist = 12;
      case 12: {
        if (tag == 96) {
         parse_bodylist:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 96, input, this->mutable_bodylist())));
        } else if (tag == 98) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_bodylist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_bodylist;
        if (input->ExpectTag(104)) goto parse_version;
        break;
      }

      // optional uint32 version = 13 [default = 0];
      case 13: {
        if (tag == 104) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.UserBeingData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.UserBeingData)
  return false;
#undef DO_
}

void UserBeingData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.UserBeingData)
  // optional uint32 id = 1 [default = 0];
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 lv = 2 [default = 0];
  if (has_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->lv(), output);
  }

  // optional uint32 hp = 3 [default = 0];
  if (has_hp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hp(), output);
  }

  // optional bool live = 4 [default = false];
  if (has_live()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->live(), output);
  }

  // optional uint64 exp = 5 [default = 0];
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->exp(), output);
  }

  // optional uint32 usedskillpoint = 6 [default = 0];
  if (has_usedskillpoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->usedskillpoint(), output);
  }

  // optional bool battle = 7 [default = false];
  if (has_battle()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->battle(), output);
  }

  // optional bytes buff = 8;
  if (has_buff()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->buff(), output);
  }

  // repeated .Cmd.SkillItem skills = 9;
  for (int i = 0; i < this->skills_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->skills(i), output);
  }

  // repeated uint32 buffids = 10;
  for (int i = 0; i < this->buffids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      10, this->buffids(i), output);
  }

  // optional uint32 body = 11 [default = 0];
  if (has_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->body(), output);
  }

  // repeated uint32 bodylist = 12;
  for (int i = 0; i < this->bodylist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      12, this->bodylist(i), output);
  }

  // optional uint32 version = 13 [default = 0];
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->version(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.UserBeingData)
}

::google::protobuf::uint8* UserBeingData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.UserBeingData)
  // optional uint32 id = 1 [default = 0];
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 lv = 2 [default = 0];
  if (has_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->lv(), target);
  }

  // optional uint32 hp = 3 [default = 0];
  if (has_hp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hp(), target);
  }

  // optional bool live = 4 [default = false];
  if (has_live()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->live(), target);
  }

  // optional uint64 exp = 5 [default = 0];
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->exp(), target);
  }

  // optional uint32 usedskillpoint = 6 [default = 0];
  if (has_usedskillpoint()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->usedskillpoint(), target);
  }

  // optional bool battle = 7 [default = false];
  if (has_battle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->battle(), target);
  }

  // optional bytes buff = 8;
  if (has_buff()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->buff(), target);
  }

  // repeated .Cmd.SkillItem skills = 9;
  for (int i = 0; i < this->skills_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->skills(i), target);
  }

  // repeated uint32 buffids = 10;
  for (int i = 0; i < this->buffids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(10, this->buffids(i), target);
  }

  // optional uint32 body = 11 [default = 0];
  if (has_body()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->body(), target);
  }

  // repeated uint32 bodylist = 12;
  for (int i = 0; i < this->bodylist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(12, this->bodylist(i), target);
  }

  // optional uint32 version = 13 [default = 0];
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->version(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.UserBeingData)
  return target;
}

int UserBeingData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 version = 13 [default = 0];
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional uint32 id = 1 [default = 0];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 lv = 2 [default = 0];
    if (has_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lv());
    }

    // optional uint32 hp = 3 [default = 0];
    if (has_hp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hp());
    }

    // optional bool live = 4 [default = false];
    if (has_live()) {
      total_size += 1 + 1;
    }

    // optional uint64 exp = 5 [default = 0];
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->exp());
    }

    // optional uint32 usedskillpoint = 6 [default = 0];
    if (has_usedskillpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->usedskillpoint());
    }

    // optional bool battle = 7 [default = false];
    if (has_battle()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional bytes buff = 8;
    if (has_buff()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->buff());
    }

    // optional uint32 body = 11 [default = 0];
    if (has_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->body());
    }

  }
  // repeated .Cmd.SkillItem skills = 9;
  total_size += 1 * this->skills_size();
  for (int i = 0; i < this->skills_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skills(i));
  }

  // repeated uint32 buffids = 10;
  {
    int data_size = 0;
    for (int i = 0; i < this->buffids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->buffids(i));
    }
    total_size += 1 * this->buffids_size() + data_size;
  }

  // repeated uint32 bodylist = 12;
  {
    int data_size = 0;
    for (int i = 0; i < this->bodylist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->bodylist(i));
    }
    total_size += 1 * this->bodylist_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserBeingData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserBeingData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserBeingData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserBeingData::MergeFrom(const UserBeingData& from) {
  GOOGLE_CHECK_NE(&from, this);
  skills_.MergeFrom(from.skills_);
  buffids_.MergeFrom(from.buffids_);
  bodylist_.MergeFrom(from.bodylist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_lv()) {
      set_lv(from.lv());
    }
    if (from.has_hp()) {
      set_hp(from.hp());
    }
    if (from.has_live()) {
      set_live(from.live());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_usedskillpoint()) {
      set_usedskillpoint(from.usedskillpoint());
    }
    if (from.has_battle()) {
      set_battle(from.battle());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_buff()) {
      set_buff(from.buff());
    }
    if (from.has_body()) {
      set_body(from.body());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserBeingData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserBeingData::CopyFrom(const UserBeingData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserBeingData::IsInitialized() const {

  return true;
}

void UserBeingData::Swap(UserBeingData* other) {
  if (other != this) {
    std::swap(version_, other->version_);
    std::swap(id_, other->id_);
    std::swap(lv_, other->lv_);
    std::swap(hp_, other->hp_);
    std::swap(live_, other->live_);
    std::swap(exp_, other->exp_);
    std::swap(usedskillpoint_, other->usedskillpoint_);
    std::swap(battle_, other->battle_);
    std::swap(buff_, other->buff_);
    skills_.Swap(&other->skills_);
    buffids_.Swap(&other->buffids_);
    std::swap(body_, other->body_);
    bodylist_.Swap(&other->bodylist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserBeingData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserBeingData_descriptor_;
  metadata.reflection = UserBeingData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BeingSkillData::kIdFieldNumber;
const int BeingSkillData::kLeftpointFieldNumber;
const int BeingSkillData::kUsedpointFieldNumber;
const int BeingSkillData::kItemsFieldNumber;
const int BeingSkillData::kSpecinfoFieldNumber;
#endif  // !_MSC_VER

BeingSkillData::BeingSkillData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.BeingSkillData)
}

void BeingSkillData::InitAsDefaultInstance() {
}

BeingSkillData::BeingSkillData(const BeingSkillData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.BeingSkillData)
}

void BeingSkillData::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  leftpoint_ = 0u;
  usedpoint_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BeingSkillData::~BeingSkillData() {
  // @@protoc_insertion_point(destructor:Cmd.BeingSkillData)
  SharedDtor();
}

void BeingSkillData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BeingSkillData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BeingSkillData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BeingSkillData_descriptor_;
}

const BeingSkillData& BeingSkillData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SceneBeing_2eproto();
  return *default_instance_;
}

BeingSkillData* BeingSkillData::default_instance_ = NULL;

BeingSkillData* BeingSkillData::New() const {
  return new BeingSkillData;
}

void BeingSkillData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BeingSkillData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(id_, leftpoint_);
    usedpoint_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  items_.Clear();
  specinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BeingSkillData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.BeingSkillData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_leftpoint;
        break;
      }

      // optional uint32 leftpoint = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_leftpoint:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leftpoint_)));
          set_has_leftpoint();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_usedpoint;
        break;
      }

      // optional uint32 usedpoint = 3 [default = 0];
      case 3: {
        if (tag == 24) {
         parse_usedpoint:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &usedpoint_)));
          set_has_usedpoint();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_items;
        break;
      }

      // repeated .Cmd.SkillItem items = 4;
      case 4: {
        if (tag == 34) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_items;
        if (input->ExpectTag(42)) goto parse_specinfo;
        break;
      }

      // repeated .Cmd.SpecSkillInfo specinfo = 5;
      case 5: {
        if (tag == 42) {
         parse_specinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_specinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_specinfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.BeingSkillData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.BeingSkillData)
  return false;
#undef DO_
}

void BeingSkillData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.BeingSkillData)
  // optional uint32 id = 1 [default = 0];
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 leftpoint = 2 [default = 0];
  if (has_leftpoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->leftpoint(), output);
  }

  // optional uint32 usedpoint = 3 [default = 0];
  if (has_usedpoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->usedpoint(), output);
  }

  // repeated .Cmd.SkillItem items = 4;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->items(i), output);
  }

  // repeated .Cmd.SpecSkillInfo specinfo = 5;
  for (int i = 0; i < this->specinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->specinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.BeingSkillData)
}

::google::protobuf::uint8* BeingSkillData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.BeingSkillData)
  // optional uint32 id = 1 [default = 0];
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 leftpoint = 2 [default = 0];
  if (has_leftpoint()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->leftpoint(), target);
  }

  // optional uint32 usedpoint = 3 [default = 0];
  if (has_usedpoint()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->usedpoint(), target);
  }

  // repeated .Cmd.SkillItem items = 4;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->items(i), target);
  }

  // repeated .Cmd.SpecSkillInfo specinfo = 5;
  for (int i = 0; i < this->specinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->specinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.BeingSkillData)
  return target;
}

int BeingSkillData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 id = 1 [default = 0];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 leftpoint = 2 [default = 0];
    if (has_leftpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->leftpoint());
    }

    // optional uint32 usedpoint = 3 [default = 0];
    if (has_usedpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->usedpoint());
    }

  }
  // repeated .Cmd.SkillItem items = 4;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  // repeated .Cmd.SpecSkillInfo specinfo = 5;
  total_size += 1 * this->specinfo_size();
  for (int i = 0; i < this->specinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->specinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BeingSkillData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BeingSkillData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BeingSkillData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BeingSkillData::MergeFrom(const BeingSkillData& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  specinfo_.MergeFrom(from.specinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_leftpoint()) {
      set_leftpoint(from.leftpoint());
    }
    if (from.has_usedpoint()) {
      set_usedpoint(from.usedpoint());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BeingSkillData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeingSkillData::CopyFrom(const BeingSkillData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeingSkillData::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->specinfo())) return false;
  return true;
}

void BeingSkillData::Swap(BeingSkillData* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(leftpoint_, other->leftpoint_);
    std::swap(usedpoint_, other->usedpoint_);
    items_.Swap(&other->items_);
    specinfo_.Swap(&other->specinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BeingSkillData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BeingSkillData_descriptor_;
  metadata.reflection = BeingSkillData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BeingSkillQuery::kCmdFieldNumber;
const int BeingSkillQuery::kParamFieldNumber;
const int BeingSkillQuery::kDataFieldNumber;
#endif  // !_MSC_VER

BeingSkillQuery::BeingSkillQuery()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.BeingSkillQuery)
}

void BeingSkillQuery::InitAsDefaultInstance() {
}

BeingSkillQuery::BeingSkillQuery(const BeingSkillQuery& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.BeingSkillQuery)
}

void BeingSkillQuery::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 32;
  param_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BeingSkillQuery::~BeingSkillQuery() {
  // @@protoc_insertion_point(destructor:Cmd.BeingSkillQuery)
  SharedDtor();
}

void BeingSkillQuery::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BeingSkillQuery::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BeingSkillQuery::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BeingSkillQuery_descriptor_;
}

const BeingSkillQuery& BeingSkillQuery::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SceneBeing_2eproto();
  return *default_instance_;
}

BeingSkillQuery* BeingSkillQuery::default_instance_ = NULL;

BeingSkillQuery* BeingSkillQuery::New() const {
  return new BeingSkillQuery;
}

void BeingSkillQuery::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    cmd_ = 32;
    param_ = 1;
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BeingSkillQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.BeingSkillQuery)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::Command_IsValid(value)) {
            set_cmd(static_cast< ::Cmd::Command >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_param;
        break;
      }

      // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_SKILL_QUERY];
      case 2: {
        if (tag == 16) {
         parse_param:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::BeingParam_IsValid(value)) {
            set_param(static_cast< ::Cmd::BeingParam >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // repeated .Cmd.BeingSkillData data = 3;
      case 3: {
        if (tag == 26) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_data;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.BeingSkillQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.BeingSkillQuery)
  return false;
#undef DO_
}

void BeingSkillQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.BeingSkillQuery)
  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_SKILL_QUERY];
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->param(), output);
  }

  // repeated .Cmd.BeingSkillData data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.BeingSkillQuery)
}

::google::protobuf::uint8* BeingSkillQuery::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.BeingSkillQuery)
  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_SKILL_QUERY];
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->param(), target);
  }

  // repeated .Cmd.BeingSkillData data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.BeingSkillQuery)
  return target;
}

int BeingSkillQuery::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
    }

    // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_SKILL_QUERY];
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->param());
    }

  }
  // repeated .Cmd.BeingSkillData data = 3;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BeingSkillQuery::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BeingSkillQuery* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BeingSkillQuery*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BeingSkillQuery::MergeFrom(const BeingSkillQuery& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BeingSkillQuery::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeingSkillQuery::CopyFrom(const BeingSkillQuery& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeingSkillQuery::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->data())) return false;
  return true;
}

void BeingSkillQuery::Swap(BeingSkillQuery* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(param_, other->param_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BeingSkillQuery::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BeingSkillQuery_descriptor_;
  metadata.reflection = BeingSkillQuery_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BeingSkillUpdate::kCmdFieldNumber;
const int BeingSkillUpdate::kParamFieldNumber;
const int BeingSkillUpdate::kUpdateFieldNumber;
const int BeingSkillUpdate::kDelFieldNumber;
#endif  // !_MSC_VER

BeingSkillUpdate::BeingSkillUpdate()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.BeingSkillUpdate)
}

void BeingSkillUpdate::InitAsDefaultInstance() {
}

BeingSkillUpdate::BeingSkillUpdate(const BeingSkillUpdate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.BeingSkillUpdate)
}

void BeingSkillUpdate::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 32;
  param_ = 2;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BeingSkillUpdate::~BeingSkillUpdate() {
  // @@protoc_insertion_point(destructor:Cmd.BeingSkillUpdate)
  SharedDtor();
}

void BeingSkillUpdate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BeingSkillUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BeingSkillUpdate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BeingSkillUpdate_descriptor_;
}

const BeingSkillUpdate& BeingSkillUpdate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SceneBeing_2eproto();
  return *default_instance_;
}

BeingSkillUpdate* BeingSkillUpdate::default_instance_ = NULL;

BeingSkillUpdate* BeingSkillUpdate::New() const {
  return new BeingSkillUpdate;
}

void BeingSkillUpdate::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    cmd_ = 32;
    param_ = 2;
  }
  update_.Clear();
  del_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BeingSkillUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.BeingSkillUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::Command_IsValid(value)) {
            set_cmd(static_cast< ::Cmd::Command >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_param;
        break;
      }

      // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_SKILL_UPDATE];
      case 2: {
        if (tag == 16) {
         parse_param:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::BeingParam_IsValid(value)) {
            set_param(static_cast< ::Cmd::BeingParam >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_update;
        break;
      }

      // repeated .Cmd.BeingSkillData update = 3;
      case 3: {
        if (tag == 26) {
         parse_update:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_update()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_update;
        if (input->ExpectTag(34)) goto parse_del;
        break;
      }

      // repeated .Cmd.BeingSkillData del = 4;
      case 4: {
        if (tag == 34) {
         parse_del:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_del()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_del;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.BeingSkillUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.BeingSkillUpdate)
  return false;
#undef DO_
}

void BeingSkillUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.BeingSkillUpdate)
  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_SKILL_UPDATE];
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->param(), output);
  }

  // repeated .Cmd.BeingSkillData update = 3;
  for (int i = 0; i < this->update_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->update(i), output);
  }

  // repeated .Cmd.BeingSkillData del = 4;
  for (int i = 0; i < this->del_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->del(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.BeingSkillUpdate)
}

::google::protobuf::uint8* BeingSkillUpdate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.BeingSkillUpdate)
  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_SKILL_UPDATE];
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->param(), target);
  }

  // repeated .Cmd.BeingSkillData update = 3;
  for (int i = 0; i < this->update_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->update(i), target);
  }

  // repeated .Cmd.BeingSkillData del = 4;
  for (int i = 0; i < this->del_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->del(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.BeingSkillUpdate)
  return target;
}

int BeingSkillUpdate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
    }

    // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_SKILL_UPDATE];
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->param());
    }

  }
  // repeated .Cmd.BeingSkillData update = 3;
  total_size += 1 * this->update_size();
  for (int i = 0; i < this->update_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->update(i));
  }

  // repeated .Cmd.BeingSkillData del = 4;
  total_size += 1 * this->del_size();
  for (int i = 0; i < this->del_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->del(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BeingSkillUpdate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BeingSkillUpdate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BeingSkillUpdate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BeingSkillUpdate::MergeFrom(const BeingSkillUpdate& from) {
  GOOGLE_CHECK_NE(&from, this);
  update_.MergeFrom(from.update_);
  del_.MergeFrom(from.del_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BeingSkillUpdate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeingSkillUpdate::CopyFrom(const BeingSkillUpdate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeingSkillUpdate::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->update())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->del())) return false;
  return true;
}

void BeingSkillUpdate::Swap(BeingSkillUpdate* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(param_, other->param_);
    update_.Swap(&other->update_);
    del_.Swap(&other->del_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BeingSkillUpdate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BeingSkillUpdate_descriptor_;
  metadata.reflection = BeingSkillUpdate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BeingSkillLevelUp::kCmdFieldNumber;
const int BeingSkillLevelUp::kParamFieldNumber;
const int BeingSkillLevelUp::kBeingidFieldNumber;
const int BeingSkillLevelUp::kSkillidsFieldNumber;
#endif  // !_MSC_VER

BeingSkillLevelUp::BeingSkillLevelUp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.BeingSkillLevelUp)
}

void BeingSkillLevelUp::InitAsDefaultInstance() {
}

BeingSkillLevelUp::BeingSkillLevelUp(const BeingSkillLevelUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.BeingSkillLevelUp)
}

void BeingSkillLevelUp::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 32;
  param_ = 3;
  beingid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BeingSkillLevelUp::~BeingSkillLevelUp() {
  // @@protoc_insertion_point(destructor:Cmd.BeingSkillLevelUp)
  SharedDtor();
}

void BeingSkillLevelUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BeingSkillLevelUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BeingSkillLevelUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BeingSkillLevelUp_descriptor_;
}

const BeingSkillLevelUp& BeingSkillLevelUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SceneBeing_2eproto();
  return *default_instance_;
}

BeingSkillLevelUp* BeingSkillLevelUp::default_instance_ = NULL;

BeingSkillLevelUp* BeingSkillLevelUp::New() const {
  return new BeingSkillLevelUp;
}

void BeingSkillLevelUp::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    cmd_ = 32;
    param_ = 3;
    beingid_ = 0u;
  }
  skillids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BeingSkillLevelUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.BeingSkillLevelUp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::Command_IsValid(value)) {
            set_cmd(static_cast< ::Cmd::Command >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_param;
        break;
      }

      // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_SKILL_LEVELUP];
      case 2: {
        if (tag == 16) {
         parse_param:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::BeingParam_IsValid(value)) {
            set_param(static_cast< ::Cmd::BeingParam >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_beingid;
        break;
      }

      // optional uint32 beingid = 3 [default = 0];
      case 3: {
        if (tag == 24) {
         parse_beingid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beingid_)));
          set_has_beingid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_skillids;
        break;
      }

      // repeated uint32 skillids = 4;
      case 4: {
        if (tag == 32) {
         parse_skillids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_skillids())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_skillids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_skillids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.BeingSkillLevelUp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.BeingSkillLevelUp)
  return false;
#undef DO_
}

void BeingSkillLevelUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.BeingSkillLevelUp)
  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_SKILL_LEVELUP];
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->param(), output);
  }

  // optional uint32 beingid = 3 [default = 0];
  if (has_beingid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->beingid(), output);
  }

  // repeated uint32 skillids = 4;
  for (int i = 0; i < this->skillids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->skillids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.BeingSkillLevelUp)
}

::google::protobuf::uint8* BeingSkillLevelUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.BeingSkillLevelUp)
  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_SKILL_LEVELUP];
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->param(), target);
  }

  // optional uint32 beingid = 3 [default = 0];
  if (has_beingid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->beingid(), target);
  }

  // repeated uint32 skillids = 4;
  for (int i = 0; i < this->skillids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->skillids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.BeingSkillLevelUp)
  return target;
}

int BeingSkillLevelUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
    }

    // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_SKILL_LEVELUP];
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->param());
    }

    // optional uint32 beingid = 3 [default = 0];
    if (has_beingid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beingid());
    }

  }
  // repeated uint32 skillids = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->skillids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->skillids(i));
    }
    total_size += 1 * this->skillids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BeingSkillLevelUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BeingSkillLevelUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BeingSkillLevelUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BeingSkillLevelUp::MergeFrom(const BeingSkillLevelUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  skillids_.MergeFrom(from.skillids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
    if (from.has_beingid()) {
      set_beingid(from.beingid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BeingSkillLevelUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeingSkillLevelUp::CopyFrom(const BeingSkillLevelUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeingSkillLevelUp::IsInitialized() const {

  return true;
}

void BeingSkillLevelUp::Swap(BeingSkillLevelUp* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(param_, other->param_);
    std::swap(beingid_, other->beingid_);
    skillids_.Swap(&other->skillids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BeingSkillLevelUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BeingSkillLevelUp_descriptor_;
  metadata.reflection = BeingSkillLevelUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BeingMemberData::kEtypeFieldNumber;
const int BeingMemberData::kValueFieldNumber;
const int BeingMemberData::kValuesFieldNumber;
const int BeingMemberData::kDataFieldNumber;
#endif  // !_MSC_VER

BeingMemberData::BeingMemberData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.BeingMemberData)
}

void BeingMemberData::InitAsDefaultInstance() {
}

BeingMemberData::BeingMemberData(const BeingMemberData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.BeingMemberData)
}

void BeingMemberData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  etype_ = 0;
  value_ = GOOGLE_ULONGLONG(0);
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BeingMemberData::~BeingMemberData() {
  // @@protoc_insertion_point(destructor:Cmd.BeingMemberData)
  SharedDtor();
}

void BeingMemberData::SharedDtor() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void BeingMemberData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BeingMemberData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BeingMemberData_descriptor_;
}

const BeingMemberData& BeingMemberData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SceneBeing_2eproto();
  return *default_instance_;
}

BeingMemberData* BeingMemberData::default_instance_ = NULL;

BeingMemberData* BeingMemberData::New() const {
  return new BeingMemberData;
}

void BeingMemberData::Clear() {
  if (_has_bits_[0 / 32] & 11) {
    etype_ = 0;
    value_ = GOOGLE_ULONGLONG(0);
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        data_->clear();
      }
    }
  }
  values_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BeingMemberData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.BeingMemberData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.EBeingDataType etype = 1 [default = EBEINGDATA_MIN];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::EBeingDataType_IsValid(value)) {
            set_etype(static_cast< ::Cmd::EBeingDataType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_value;
        break;
      }

      // optional uint64 value = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_values;
        break;
      }

      // repeated uint32 values = 3;
      case 3: {
        if (tag == 24) {
         parse_values:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_values())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_values())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_values;
        if (input->ExpectTag(34)) goto parse_data;
        break;
      }

      // optional string data = 4;
      case 4: {
        if (tag == 34) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.BeingMemberData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.BeingMemberData)
  return false;
#undef DO_
}

void BeingMemberData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.BeingMemberData)
  // optional .Cmd.EBeingDataType etype = 1 [default = EBEINGDATA_MIN];
  if (has_etype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->etype(), output);
  }

  // optional uint64 value = 2 [default = 0];
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->value(), output);
  }

  // repeated uint32 values = 3;
  for (int i = 0; i < this->values_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->values(i), output);
  }

  // optional string data = 4;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.BeingMemberData)
}

::google::protobuf::uint8* BeingMemberData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.BeingMemberData)
  // optional .Cmd.EBeingDataType etype = 1 [default = EBEINGDATA_MIN];
  if (has_etype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->etype(), target);
  }

  // optional uint64 value = 2 [default = 0];
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->value(), target);
  }

  // repeated uint32 values = 3;
  for (int i = 0; i < this->values_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->values(i), target);
  }

  // optional string data = 4;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.BeingMemberData)
  return target;
}

int BeingMemberData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.EBeingDataType etype = 1 [default = EBEINGDATA_MIN];
    if (has_etype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->etype());
    }

    // optional uint64 value = 2 [default = 0];
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->value());
    }

    // optional string data = 4;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->data());
    }

  }
  // repeated uint32 values = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->values_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->values(i));
    }
    total_size += 1 * this->values_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BeingMemberData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BeingMemberData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BeingMemberData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BeingMemberData::MergeFrom(const BeingMemberData& from) {
  GOOGLE_CHECK_NE(&from, this);
  values_.MergeFrom(from.values_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_etype()) {
      set_etype(from.etype());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BeingMemberData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeingMemberData::CopyFrom(const BeingMemberData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeingMemberData::IsInitialized() const {

  return true;
}

void BeingMemberData::Swap(BeingMemberData* other) {
  if (other != this) {
    std::swap(etype_, other->etype_);
    std::swap(value_, other->value_);
    values_.Swap(&other->values_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BeingMemberData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BeingMemberData_descriptor_;
  metadata.reflection = BeingMemberData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BeingInfo::kGuidFieldNumber;
const int BeingInfo::kBeingidFieldNumber;
const int BeingInfo::kExpFieldNumber;
const int BeingInfo::kLvFieldNumber;
const int BeingInfo::kBattleFieldNumber;
const int BeingInfo::kSummonFieldNumber;
const int BeingInfo::kLiveFieldNumber;
const int BeingInfo::kBodyFieldNumber;
const int BeingInfo::kBodylistFieldNumber;
#endif  // !_MSC_VER

BeingInfo::BeingInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.BeingInfo)
}

void BeingInfo::InitAsDefaultInstance() {
}

BeingInfo::BeingInfo(const BeingInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.BeingInfo)
}

void BeingInfo::SharedCtor() {
  _cached_size_ = 0;
  guid_ = GOOGLE_ULONGLONG(0);
  beingid_ = 0u;
  exp_ = GOOGLE_ULONGLONG(0);
  lv_ = 0u;
  battle_ = false;
  summon_ = false;
  live_ = false;
  body_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BeingInfo::~BeingInfo() {
  // @@protoc_insertion_point(destructor:Cmd.BeingInfo)
  SharedDtor();
}

void BeingInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BeingInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BeingInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BeingInfo_descriptor_;
}

const BeingInfo& BeingInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SceneBeing_2eproto();
  return *default_instance_;
}

BeingInfo* BeingInfo::default_instance_ = NULL;

BeingInfo* BeingInfo::New() const {
  return new BeingInfo;
}

void BeingInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BeingInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(guid_, body_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  bodylist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BeingInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.BeingInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 guid = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
          set_has_guid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_beingid;
        break;
      }

      // optional uint32 beingid = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_beingid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beingid_)));
          set_has_beingid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_exp;
        break;
      }

      // optional uint64 exp = 3 [default = 0];
      case 3: {
        if (tag == 24) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_lv;
        break;
      }

      // optional uint32 lv = 4 [default = 0];
      case 4: {
        if (tag == 32) {
         parse_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lv_)));
          set_has_lv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_battle;
        break;
      }

      // optional bool battle = 5 [default = false];
      case 5: {
        if (tag == 40) {
         parse_battle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &battle_)));
          set_has_battle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_summon;
        break;
      }

      // optional bool summon = 6 [default = false];
      case 6: {
        if (tag == 48) {
         parse_summon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &summon_)));
          set_has_summon();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_live;
        break;
      }

      // optional bool live = 7 [default = false];
      case 7: {
        if (tag == 56) {
         parse_live:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &live_)));
          set_has_live();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_body;
        break;
      }

      // optional uint32 body = 8 [default = 0];
      case 8: {
        if (tag == 64) {
         parse_body:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &body_)));
          set_has_body();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_bodylist;
        break;
      }

      // repeated uint32 bodylist = 9;
      case 9: {
        if (tag == 72) {
         parse_bodylist:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 72, input, this->mutable_bodylist())));
        } else if (tag == 74) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_bodylist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_bodylist;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.BeingInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.BeingInfo)
  return false;
#undef DO_
}

void BeingInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.BeingInfo)
  // optional uint64 guid = 1 [default = 0];
  if (has_guid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // optional uint32 beingid = 2 [default = 0];
  if (has_beingid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->beingid(), output);
  }

  // optional uint64 exp = 3 [default = 0];
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->exp(), output);
  }

  // optional uint32 lv = 4 [default = 0];
  if (has_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->lv(), output);
  }

  // optional bool battle = 5 [default = false];
  if (has_battle()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->battle(), output);
  }

  // optional bool summon = 6 [default = false];
  if (has_summon()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->summon(), output);
  }

  // optional bool live = 7 [default = false];
  if (has_live()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->live(), output);
  }

  // optional uint32 body = 8 [default = 0];
  if (has_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->body(), output);
  }

  // repeated uint32 bodylist = 9;
  for (int i = 0; i < this->bodylist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      9, this->bodylist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.BeingInfo)
}

::google::protobuf::uint8* BeingInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.BeingInfo)
  // optional uint64 guid = 1 [default = 0];
  if (has_guid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // optional uint32 beingid = 2 [default = 0];
  if (has_beingid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->beingid(), target);
  }

  // optional uint64 exp = 3 [default = 0];
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->exp(), target);
  }

  // optional uint32 lv = 4 [default = 0];
  if (has_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->lv(), target);
  }

  // optional bool battle = 5 [default = false];
  if (has_battle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->battle(), target);
  }

  // optional bool summon = 6 [default = false];
  if (has_summon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->summon(), target);
  }

  // optional bool live = 7 [default = false];
  if (has_live()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->live(), target);
  }

  // optional uint32 body = 8 [default = 0];
  if (has_body()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->body(), target);
  }

  // repeated uint32 bodylist = 9;
  for (int i = 0; i < this->bodylist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(9, this->bodylist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.BeingInfo)
  return target;
}

int BeingInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 guid = 1 [default = 0];
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->guid());
    }

    // optional uint32 beingid = 2 [default = 0];
    if (has_beingid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beingid());
    }

    // optional uint64 exp = 3 [default = 0];
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->exp());
    }

    // optional uint32 lv = 4 [default = 0];
    if (has_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lv());
    }

    // optional bool battle = 5 [default = false];
    if (has_battle()) {
      total_size += 1 + 1;
    }

    // optional bool summon = 6 [default = false];
    if (has_summon()) {
      total_size += 1 + 1;
    }

    // optional bool live = 7 [default = false];
    if (has_live()) {
      total_size += 1 + 1;
    }

    // optional uint32 body = 8 [default = 0];
    if (has_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->body());
    }

  }
  // repeated uint32 bodylist = 9;
  {
    int data_size = 0;
    for (int i = 0; i < this->bodylist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->bodylist(i));
    }
    total_size += 1 * this->bodylist_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BeingInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BeingInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BeingInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BeingInfo::MergeFrom(const BeingInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  bodylist_.MergeFrom(from.bodylist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_guid()) {
      set_guid(from.guid());
    }
    if (from.has_beingid()) {
      set_beingid(from.beingid());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_lv()) {
      set_lv(from.lv());
    }
    if (from.has_battle()) {
      set_battle(from.battle());
    }
    if (from.has_summon()) {
      set_summon(from.summon());
    }
    if (from.has_live()) {
      set_live(from.live());
    }
    if (from.has_body()) {
      set_body(from.body());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BeingInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeingInfo::CopyFrom(const BeingInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeingInfo::IsInitialized() const {

  return true;
}

void BeingInfo::Swap(BeingInfo* other) {
  if (other != this) {
    std::swap(guid_, other->guid_);
    std::swap(beingid_, other->beingid_);
    std::swap(exp_, other->exp_);
    std::swap(lv_, other->lv_);
    std::swap(battle_, other->battle_);
    std::swap(summon_, other->summon_);
    std::swap(live_, other->live_);
    std::swap(body_, other->body_);
    bodylist_.Swap(&other->bodylist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BeingInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BeingInfo_descriptor_;
  metadata.reflection = BeingInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BeingInfoQuery::kCmdFieldNumber;
const int BeingInfoQuery::kParamFieldNumber;
const int BeingInfoQuery::kBeinginfoFieldNumber;
#endif  // !_MSC_VER

BeingInfoQuery::BeingInfoQuery()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.BeingInfoQuery)
}

void BeingInfoQuery::InitAsDefaultInstance() {
}

BeingInfoQuery::BeingInfoQuery(const BeingInfoQuery& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.BeingInfoQuery)
}

void BeingInfoQuery::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 32;
  param_ = 4;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BeingInfoQuery::~BeingInfoQuery() {
  // @@protoc_insertion_point(destructor:Cmd.BeingInfoQuery)
  SharedDtor();
}

void BeingInfoQuery::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BeingInfoQuery::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BeingInfoQuery::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BeingInfoQuery_descriptor_;
}

const BeingInfoQuery& BeingInfoQuery::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SceneBeing_2eproto();
  return *default_instance_;
}

BeingInfoQuery* BeingInfoQuery::default_instance_ = NULL;

BeingInfoQuery* BeingInfoQuery::New() const {
  return new BeingInfoQuery;
}

void BeingInfoQuery::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    cmd_ = 32;
    param_ = 4;
  }
  beinginfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BeingInfoQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.BeingInfoQuery)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::Command_IsValid(value)) {
            set_cmd(static_cast< ::Cmd::Command >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_param;
        break;
      }

      // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_INFO_QUERY];
      case 2: {
        if (tag == 16) {
         parse_param:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::BeingParam_IsValid(value)) {
            set_param(static_cast< ::Cmd::BeingParam >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_beinginfo;
        break;
      }

      // repeated .Cmd.BeingInfo beinginfo = 3;
      case 3: {
        if (tag == 26) {
         parse_beinginfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_beinginfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_beinginfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.BeingInfoQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.BeingInfoQuery)
  return false;
#undef DO_
}

void BeingInfoQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.BeingInfoQuery)
  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_INFO_QUERY];
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->param(), output);
  }

  // repeated .Cmd.BeingInfo beinginfo = 3;
  for (int i = 0; i < this->beinginfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->beinginfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.BeingInfoQuery)
}

::google::protobuf::uint8* BeingInfoQuery::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.BeingInfoQuery)
  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_INFO_QUERY];
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->param(), target);
  }

  // repeated .Cmd.BeingInfo beinginfo = 3;
  for (int i = 0; i < this->beinginfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->beinginfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.BeingInfoQuery)
  return target;
}

int BeingInfoQuery::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
    }

    // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_INFO_QUERY];
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->param());
    }

  }
  // repeated .Cmd.BeingInfo beinginfo = 3;
  total_size += 1 * this->beinginfo_size();
  for (int i = 0; i < this->beinginfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->beinginfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BeingInfoQuery::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BeingInfoQuery* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BeingInfoQuery*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BeingInfoQuery::MergeFrom(const BeingInfoQuery& from) {
  GOOGLE_CHECK_NE(&from, this);
  beinginfo_.MergeFrom(from.beinginfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BeingInfoQuery::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeingInfoQuery::CopyFrom(const BeingInfoQuery& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeingInfoQuery::IsInitialized() const {

  return true;
}

void BeingInfoQuery::Swap(BeingInfoQuery* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(param_, other->param_);
    beinginfo_.Swap(&other->beinginfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BeingInfoQuery::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BeingInfoQuery_descriptor_;
  metadata.reflection = BeingInfoQuery_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BeingInfoUpdate::kCmdFieldNumber;
const int BeingInfoUpdate::kParamFieldNumber;
const int BeingInfoUpdate::kBeingidFieldNumber;
const int BeingInfoUpdate::kDatasFieldNumber;
#endif  // !_MSC_VER

BeingInfoUpdate::BeingInfoUpdate()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.BeingInfoUpdate)
}

void BeingInfoUpdate::InitAsDefaultInstance() {
}

BeingInfoUpdate::BeingInfoUpdate(const BeingInfoUpdate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.BeingInfoUpdate)
}

void BeingInfoUpdate::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 32;
  param_ = 5;
  beingid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BeingInfoUpdate::~BeingInfoUpdate() {
  // @@protoc_insertion_point(destructor:Cmd.BeingInfoUpdate)
  SharedDtor();
}

void BeingInfoUpdate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BeingInfoUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BeingInfoUpdate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BeingInfoUpdate_descriptor_;
}

const BeingInfoUpdate& BeingInfoUpdate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SceneBeing_2eproto();
  return *default_instance_;
}

BeingInfoUpdate* BeingInfoUpdate::default_instance_ = NULL;

BeingInfoUpdate* BeingInfoUpdate::New() const {
  return new BeingInfoUpdate;
}

void BeingInfoUpdate::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    cmd_ = 32;
    param_ = 5;
    beingid_ = 0u;
  }
  datas_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BeingInfoUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.BeingInfoUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::Command_IsValid(value)) {
            set_cmd(static_cast< ::Cmd::Command >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_param;
        break;
      }

      // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_INFO_UPDATE];
      case 2: {
        if (tag == 16) {
         parse_param:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::BeingParam_IsValid(value)) {
            set_param(static_cast< ::Cmd::BeingParam >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_beingid;
        break;
      }

      // required uint32 beingid = 3;
      case 3: {
        if (tag == 24) {
         parse_beingid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beingid_)));
          set_has_beingid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_datas;
        break;
      }

      // repeated .Cmd.BeingMemberData datas = 4;
      case 4: {
        if (tag == 34) {
         parse_datas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_datas()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_datas;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.BeingInfoUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.BeingInfoUpdate)
  return false;
#undef DO_
}

void BeingInfoUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.BeingInfoUpdate)
  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_INFO_UPDATE];
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->param(), output);
  }

  // required uint32 beingid = 3;
  if (has_beingid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->beingid(), output);
  }

  // repeated .Cmd.BeingMemberData datas = 4;
  for (int i = 0; i < this->datas_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->datas(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.BeingInfoUpdate)
}

::google::protobuf::uint8* BeingInfoUpdate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.BeingInfoUpdate)
  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_INFO_UPDATE];
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->param(), target);
  }

  // required uint32 beingid = 3;
  if (has_beingid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->beingid(), target);
  }

  // repeated .Cmd.BeingMemberData datas = 4;
  for (int i = 0; i < this->datas_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->datas(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.BeingInfoUpdate)
  return target;
}

int BeingInfoUpdate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
    }

    // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_INFO_UPDATE];
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->param());
    }

    // required uint32 beingid = 3;
    if (has_beingid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beingid());
    }

  }
  // repeated .Cmd.BeingMemberData datas = 4;
  total_size += 1 * this->datas_size();
  for (int i = 0; i < this->datas_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->datas(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BeingInfoUpdate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BeingInfoUpdate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BeingInfoUpdate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BeingInfoUpdate::MergeFrom(const BeingInfoUpdate& from) {
  GOOGLE_CHECK_NE(&from, this);
  datas_.MergeFrom(from.datas_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
    if (from.has_beingid()) {
      set_beingid(from.beingid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BeingInfoUpdate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeingInfoUpdate::CopyFrom(const BeingInfoUpdate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeingInfoUpdate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;

  return true;
}

void BeingInfoUpdate::Swap(BeingInfoUpdate* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(param_, other->param_);
    std::swap(beingid_, other->beingid_);
    datas_.Swap(&other->datas_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BeingInfoUpdate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BeingInfoUpdate_descriptor_;
  metadata.reflection = BeingInfoUpdate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BeingSwitchState::kCmdFieldNumber;
const int BeingSwitchState::kParamFieldNumber;
const int BeingSwitchState::kBeingidFieldNumber;
const int BeingSwitchState::kBattleFieldNumber;
#endif  // !_MSC_VER

BeingSwitchState::BeingSwitchState()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.BeingSwitchState)
}

void BeingSwitchState::InitAsDefaultInstance() {
}

BeingSwitchState::BeingSwitchState(const BeingSwitchState& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.BeingSwitchState)
}

void BeingSwitchState::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 32;
  param_ = 7;
  beingid_ = 0u;
  battle_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BeingSwitchState::~BeingSwitchState() {
  // @@protoc_insertion_point(destructor:Cmd.BeingSwitchState)
  SharedDtor();
}

void BeingSwitchState::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BeingSwitchState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BeingSwitchState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BeingSwitchState_descriptor_;
}

const BeingSwitchState& BeingSwitchState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SceneBeing_2eproto();
  return *default_instance_;
}

BeingSwitchState* BeingSwitchState::default_instance_ = NULL;

BeingSwitchState* BeingSwitchState::New() const {
  return new BeingSwitchState;
}

void BeingSwitchState::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BeingSwitchState*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(beingid_, battle_);
    cmd_ = 32;
    param_ = 7;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BeingSwitchState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.BeingSwitchState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::Command_IsValid(value)) {
            set_cmd(static_cast< ::Cmd::Command >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_param;
        break;
      }

      // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_SWITCH_STATE];
      case 2: {
        if (tag == 16) {
         parse_param:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::BeingParam_IsValid(value)) {
            set_param(static_cast< ::Cmd::BeingParam >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_beingid;
        break;
      }

      // required uint32 beingid = 3;
      case 3: {
        if (tag == 24) {
         parse_beingid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beingid_)));
          set_has_beingid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_battle;
        break;
      }

      // required bool battle = 4;
      case 4: {
        if (tag == 32) {
         parse_battle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &battle_)));
          set_has_battle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.BeingSwitchState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.BeingSwitchState)
  return false;
#undef DO_
}

void BeingSwitchState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.BeingSwitchState)
  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_SWITCH_STATE];
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->param(), output);
  }

  // required uint32 beingid = 3;
  if (has_beingid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->beingid(), output);
  }

  // required bool battle = 4;
  if (has_battle()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->battle(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.BeingSwitchState)
}

::google::protobuf::uint8* BeingSwitchState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.BeingSwitchState)
  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_SWITCH_STATE];
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->param(), target);
  }

  // required uint32 beingid = 3;
  if (has_beingid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->beingid(), target);
  }

  // required bool battle = 4;
  if (has_battle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->battle(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.BeingSwitchState)
  return target;
}

int BeingSwitchState::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
    }

    // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_SWITCH_STATE];
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->param());
    }

    // required uint32 beingid = 3;
    if (has_beingid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beingid());
    }

    // required bool battle = 4;
    if (has_battle()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BeingSwitchState::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BeingSwitchState* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BeingSwitchState*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BeingSwitchState::MergeFrom(const BeingSwitchState& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
    if (from.has_beingid()) {
      set_beingid(from.beingid());
    }
    if (from.has_battle()) {
      set_battle(from.battle());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BeingSwitchState::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeingSwitchState::CopyFrom(const BeingSwitchState& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeingSwitchState::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;

  return true;
}

void BeingSwitchState::Swap(BeingSwitchState* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(param_, other->param_);
    std::swap(beingid_, other->beingid_);
    std::swap(battle_, other->battle_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BeingSwitchState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BeingSwitchState_descriptor_;
  metadata.reflection = BeingSwitchState_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BeingOffCmd::kCmdFieldNumber;
const int BeingOffCmd::kParamFieldNumber;
const int BeingOffCmd::kBeingidFieldNumber;
#endif  // !_MSC_VER

BeingOffCmd::BeingOffCmd()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.BeingOffCmd)
}

void BeingOffCmd::InitAsDefaultInstance() {
}

BeingOffCmd::BeingOffCmd(const BeingOffCmd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.BeingOffCmd)
}

void BeingOffCmd::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 32;
  param_ = 6;
  beingid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BeingOffCmd::~BeingOffCmd() {
  // @@protoc_insertion_point(destructor:Cmd.BeingOffCmd)
  SharedDtor();
}

void BeingOffCmd::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BeingOffCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BeingOffCmd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BeingOffCmd_descriptor_;
}

const BeingOffCmd& BeingOffCmd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SceneBeing_2eproto();
  return *default_instance_;
}

BeingOffCmd* BeingOffCmd::default_instance_ = NULL;

BeingOffCmd* BeingOffCmd::New() const {
  return new BeingOffCmd;
}

void BeingOffCmd::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    cmd_ = 32;
    param_ = 6;
    beingid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BeingOffCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.BeingOffCmd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::Command_IsValid(value)) {
            set_cmd(static_cast< ::Cmd::Command >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_param;
        break;
      }

      // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_OFF];
      case 2: {
        if (tag == 16) {
         parse_param:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::BeingParam_IsValid(value)) {
            set_param(static_cast< ::Cmd::BeingParam >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_beingid;
        break;
      }

      // required uint32 beingid = 3;
      case 3: {
        if (tag == 24) {
         parse_beingid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beingid_)));
          set_has_beingid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.BeingOffCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.BeingOffCmd)
  return false;
#undef DO_
}

void BeingOffCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.BeingOffCmd)
  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_OFF];
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->param(), output);
  }

  // required uint32 beingid = 3;
  if (has_beingid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->beingid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.BeingOffCmd)
}

::google::protobuf::uint8* BeingOffCmd::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.BeingOffCmd)
  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_OFF];
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->param(), target);
  }

  // required uint32 beingid = 3;
  if (has_beingid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->beingid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.BeingOffCmd)
  return target;
}

int BeingOffCmd::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
    }

    // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_OFF];
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->param());
    }

    // required uint32 beingid = 3;
    if (has_beingid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beingid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BeingOffCmd::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BeingOffCmd* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BeingOffCmd*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BeingOffCmd::MergeFrom(const BeingOffCmd& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
    if (from.has_beingid()) {
      set_beingid(from.beingid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BeingOffCmd::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeingOffCmd::CopyFrom(const BeingOffCmd& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeingOffCmd::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;

  return true;
}

void BeingOffCmd::Swap(BeingOffCmd* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(param_, other->param_);
    std::swap(beingid_, other->beingid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BeingOffCmd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BeingOffCmd_descriptor_;
  metadata.reflection = BeingOffCmd_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ChangeBodyBeingCmd::kCmdFieldNumber;
const int ChangeBodyBeingCmd::kParamFieldNumber;
const int ChangeBodyBeingCmd::kBeingidFieldNumber;
const int ChangeBodyBeingCmd::kBodyFieldNumber;
#endif  // !_MSC_VER

ChangeBodyBeingCmd::ChangeBodyBeingCmd()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.ChangeBodyBeingCmd)
}

void ChangeBodyBeingCmd::InitAsDefaultInstance() {
}

ChangeBodyBeingCmd::ChangeBodyBeingCmd(const ChangeBodyBeingCmd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.ChangeBodyBeingCmd)
}

void ChangeBodyBeingCmd::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 32;
  param_ = 8;
  beingid_ = 0u;
  body_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ChangeBodyBeingCmd::~ChangeBodyBeingCmd() {
  // @@protoc_insertion_point(destructor:Cmd.ChangeBodyBeingCmd)
  SharedDtor();
}

void ChangeBodyBeingCmd::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ChangeBodyBeingCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeBodyBeingCmd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChangeBodyBeingCmd_descriptor_;
}

const ChangeBodyBeingCmd& ChangeBodyBeingCmd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SceneBeing_2eproto();
  return *default_instance_;
}

ChangeBodyBeingCmd* ChangeBodyBeingCmd::default_instance_ = NULL;

ChangeBodyBeingCmd* ChangeBodyBeingCmd::New() const {
  return new ChangeBodyBeingCmd;
}

void ChangeBodyBeingCmd::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ChangeBodyBeingCmd*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(beingid_, body_);
    cmd_ = 32;
    param_ = 8;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ChangeBodyBeingCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.ChangeBodyBeingCmd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::Command_IsValid(value)) {
            set_cmd(static_cast< ::Cmd::Command >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_param;
        break;
      }

      // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_CHANGE_BODY];
      case 2: {
        if (tag == 16) {
         parse_param:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::BeingParam_IsValid(value)) {
            set_param(static_cast< ::Cmd::BeingParam >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_beingid;
        break;
      }

      // required uint32 beingid = 3;
      case 3: {
        if (tag == 24) {
         parse_beingid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beingid_)));
          set_has_beingid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_body;
        break;
      }

      // required uint32 body = 4;
      case 4: {
        if (tag == 32) {
         parse_body:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &body_)));
          set_has_body();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.ChangeBodyBeingCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.ChangeBodyBeingCmd)
  return false;
#undef DO_
}

void ChangeBodyBeingCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.ChangeBodyBeingCmd)
  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_CHANGE_BODY];
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->param(), output);
  }

  // required uint32 beingid = 3;
  if (has_beingid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->beingid(), output);
  }

  // required uint32 body = 4;
  if (has_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->body(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.ChangeBodyBeingCmd)
}

::google::protobuf::uint8* ChangeBodyBeingCmd::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.ChangeBodyBeingCmd)
  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_CHANGE_BODY];
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->param(), target);
  }

  // required uint32 beingid = 3;
  if (has_beingid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->beingid(), target);
  }

  // required uint32 body = 4;
  if (has_body()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->body(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.ChangeBodyBeingCmd)
  return target;
}

int ChangeBodyBeingCmd::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
    }

    // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_CHANGE_BODY];
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->param());
    }

    // required uint32 beingid = 3;
    if (has_beingid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beingid());
    }

    // required uint32 body = 4;
    if (has_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->body());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeBodyBeingCmd::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ChangeBodyBeingCmd* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ChangeBodyBeingCmd*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ChangeBodyBeingCmd::MergeFrom(const ChangeBodyBeingCmd& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
    if (from.has_beingid()) {
      set_beingid(from.beingid());
    }
    if (from.has_body()) {
      set_body(from.body());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ChangeBodyBeingCmd::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeBodyBeingCmd::CopyFrom(const ChangeBodyBeingCmd& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeBodyBeingCmd::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;

  return true;
}

void ChangeBodyBeingCmd::Swap(ChangeBodyBeingCmd* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(param_, other->param_);
    std::swap(beingid_, other->beingid_);
    std::swap(body_, other->body_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ChangeBodyBeingCmd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChangeBodyBeingCmd_descriptor_;
  metadata.reflection = ChangeBodyBeingCmd_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cmd

// @@protoc_insertion_point(global_scope)
