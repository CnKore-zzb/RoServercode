// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SceneSkill.proto

#ifndef PROTOBUF_SceneSkill_2eproto__INCLUDED
#define PROTOBUF_SceneSkill_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "xCmd.pb.h"
#include "ProtoCommon.pb.h"
#include "SceneUser.pb.h"
// @@protoc_insertion_point(includes)

namespace Cmd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SceneSkill_2eproto();
void protobuf_AssignDesc_SceneSkill_2eproto();
void protobuf_ShutdownFile_SceneSkill_2eproto();

class SkillConsume;
class SkillShortcut;
class SkillItem;
class SkillData;
class SkillPos;
class ReqSkillData;
class SkillUpdate;
class LevelupSkill;
class EquipSkill;
class ResetSkill;
class SkillValidShortcut;
class SkillValidPos;
class ChangeSkillCmd;
class SkillCost;
class SpecSkillInfo;
class UpSkillInfoSkillCmd;
class SelectRuneSkillCmd;
class MarkSkillNpcSkillCmd;
class TriggerSkillNpcSkillCmd;
class SkillOption;
class SkillOptionSkillCmd;
class DynamicSkillCmd;
class UpdateDynamicSkillCmd;
class SyncDestPosSkillCmd;

enum SkillParam {
  SKILLPARAM_SKILLITEM = 1,
  SKILLPARAM_SKILLUPDATE = 2,
  SKILLPARAM_LEVELUPSKILL = 3,
  SKILLPARAM_EQUIPSKILL = 4,
  SKILLPARAM_RESETSKILL = 5,
  SKILLPARAM_SKILLVALIDPOS = 6,
  SKILLPARAM_CHANGE_SKILL = 7,
  SKILLPARAM_SPEC_SKILL_INFO = 8,
  SKILLPARAM_SELECT_RUNE = 9,
  SKILLPARAM_MARK_SKILLNPC = 10,
  SKILLPARAM_TRGGER_SKILLNPC = 11,
  SKILLPARAM_SKILLOPTIONS = 12,
  SKILLPARAM_DYNAMIC_SKILL_INFO = 13,
  SKILLPARAM_DYNAMIC_SKILL_UPDATE = 14,
  SKILLPARAM_SYNC_DEST_POS = 15
};
bool SkillParam_IsValid(int value);
const SkillParam SkillParam_MIN = SKILLPARAM_SKILLITEM;
const SkillParam SkillParam_MAX = SKILLPARAM_SYNC_DEST_POS;
const int SkillParam_ARRAYSIZE = SkillParam_MAX + 1;

const ::google::protobuf::EnumDescriptor* SkillParam_descriptor();
inline const ::std::string& SkillParam_Name(SkillParam value) {
  return ::google::protobuf::internal::NameOfEnum(
    SkillParam_descriptor(), value);
}
inline bool SkillParam_Parse(
    const ::std::string& name, SkillParam* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SkillParam>(
    SkillParam_descriptor(), name, value);
}
enum ESkillShortcut {
  ESKILLSHORTCUT_MIN = 0,
  ESKILLSHORTCUT_NORMAL = 1,
  ESKILLSHORTCUT_AUTO = 2,
  ESKILLSHORTCUT_EXTEND = 3,
  ESKILLSHORTCUT_BEINGAUTO = 4,
  ESKILLSHORTCUT_EXTEND_2 = 5,
  ESKILLSHORTCUT_EXTEND_3 = 6,
  ESKILLSHORTCUT_MAX = 7
};
bool ESkillShortcut_IsValid(int value);
const ESkillShortcut ESkillShortcut_MIN = ESKILLSHORTCUT_MIN;
const ESkillShortcut ESkillShortcut_MAX = ESKILLSHORTCUT_MAX;
const int ESkillShortcut_ARRAYSIZE = ESkillShortcut_MAX + 1;

const ::google::protobuf::EnumDescriptor* ESkillShortcut_descriptor();
inline const ::std::string& ESkillShortcut_Name(ESkillShortcut value) {
  return ::google::protobuf::internal::NameOfEnum(
    ESkillShortcut_descriptor(), value);
}
inline bool ESkillShortcut_Parse(
    const ::std::string& name, ESkillShortcut* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESkillShortcut>(
    ESkillShortcut_descriptor(), name, value);
}
enum ELevelupType {
  ELEVELUPTYPE_MIN = 0,
  ELEVELUPTYPE_MT = 1,
  ELEVELUPTYPE_AT = 2,
  ELEVELUPTYPE_MAX = 3
};
bool ELevelupType_IsValid(int value);
const ELevelupType ELevelupType_MIN = ELEVELUPTYPE_MIN;
const ELevelupType ELevelupType_MAX = ELEVELUPTYPE_MAX;
const int ELevelupType_ARRAYSIZE = ELevelupType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ELevelupType_descriptor();
inline const ::std::string& ELevelupType_Name(ELevelupType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ELevelupType_descriptor(), value);
}
inline bool ELevelupType_Parse(
    const ::std::string& name, ELevelupType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ELevelupType>(
    ELevelupType_descriptor(), name, value);
}
enum ETrigSkillType {
  ETRIGTSKILL_MIN = 0,
  ETRIGTSKILL_BTRANS = 1
};
bool ETrigSkillType_IsValid(int value);
const ETrigSkillType ETrigSkillType_MIN = ETRIGTSKILL_MIN;
const ETrigSkillType ETrigSkillType_MAX = ETRIGTSKILL_BTRANS;
const int ETrigSkillType_ARRAYSIZE = ETrigSkillType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ETrigSkillType_descriptor();
inline const ::std::string& ETrigSkillType_Name(ETrigSkillType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ETrigSkillType_descriptor(), value);
}
inline bool ETrigSkillType_Parse(
    const ::std::string& name, ETrigSkillType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ETrigSkillType>(
    ETrigSkillType_descriptor(), name, value);
}
enum ESkillOption {
  ESKILLOPTION_AUTOQUEUE = 1,
  ESKILLOPTION_SUMMONBEING = 2,
  ESKILLOPTION_AUTO_ARCHERY = 3,
  ESKILLOPTION_FISTS_MAGIC = 4,
  ESKILLOPTION_SUMMON_ELEMENT = 5
};
bool ESkillOption_IsValid(int value);
const ESkillOption ESkillOption_MIN = ESKILLOPTION_AUTOQUEUE;
const ESkillOption ESkillOption_MAX = ESKILLOPTION_SUMMON_ELEMENT;
const int ESkillOption_ARRAYSIZE = ESkillOption_MAX + 1;

const ::google::protobuf::EnumDescriptor* ESkillOption_descriptor();
inline const ::std::string& ESkillOption_Name(ESkillOption value) {
  return ::google::protobuf::internal::NameOfEnum(
    ESkillOption_descriptor(), value);
}
inline bool ESkillOption_Parse(
    const ::std::string& name, ESkillOption* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESkillOption>(
    ESkillOption_descriptor(), name, value);
}
// ===================================================================

class SkillConsume : public ::google::protobuf::Message {
 public:
  SkillConsume();
  virtual ~SkillConsume();

  SkillConsume(const SkillConsume& from);

  inline SkillConsume& operator=(const SkillConsume& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillConsume& default_instance();

  void Swap(SkillConsume* other);

  // implements Message ----------------------------------------------

  SkillConsume* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillConsume& from);
  void MergeFrom(const SkillConsume& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 curvalue = 1 [default = 0];
  inline bool has_curvalue() const;
  inline void clear_curvalue();
  static const int kCurvalueFieldNumber = 1;
  inline ::google::protobuf::uint32 curvalue() const;
  inline void set_curvalue(::google::protobuf::uint32 value);

  // optional uint32 maxvalue = 2 [default = 0];
  inline bool has_maxvalue() const;
  inline void clear_maxvalue();
  static const int kMaxvalueFieldNumber = 2;
  inline ::google::protobuf::uint32 maxvalue() const;
  inline void set_maxvalue(::google::protobuf::uint32 value);

  // optional uint32 nexttime = 3 [default = 0];
  inline bool has_nexttime() const;
  inline void clear_nexttime();
  static const int kNexttimeFieldNumber = 3;
  inline ::google::protobuf::uint32 nexttime() const;
  inline void set_nexttime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.SkillConsume)
 private:
  inline void set_has_curvalue();
  inline void clear_has_curvalue();
  inline void set_has_maxvalue();
  inline void clear_has_maxvalue();
  inline void set_has_nexttime();
  inline void clear_has_nexttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 curvalue_;
  ::google::protobuf::uint32 maxvalue_;
  ::google::protobuf::uint32 nexttime_;
  friend void  protobuf_AddDesc_SceneSkill_2eproto();
  friend void protobuf_AssignDesc_SceneSkill_2eproto();
  friend void protobuf_ShutdownFile_SceneSkill_2eproto();

  void InitAsDefaultInstance();
  static SkillConsume* default_instance_;
};
// -------------------------------------------------------------------

class SkillShortcut : public ::google::protobuf::Message {
 public:
  SkillShortcut();
  virtual ~SkillShortcut();

  SkillShortcut(const SkillShortcut& from);

  inline SkillShortcut& operator=(const SkillShortcut& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillShortcut& default_instance();

  void Swap(SkillShortcut* other);

  // implements Message ----------------------------------------------

  SkillShortcut* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillShortcut& from);
  void MergeFrom(const SkillShortcut& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.ESkillShortcut type = 1 [default = ESKILLSHORTCUT_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Cmd::ESkillShortcut type() const;
  inline void set_type(::Cmd::ESkillShortcut value);

  // optional uint32 pos = 2 [default = 0];
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.SkillShortcut)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 pos_;
  friend void  protobuf_AddDesc_SceneSkill_2eproto();
  friend void protobuf_AssignDesc_SceneSkill_2eproto();
  friend void protobuf_ShutdownFile_SceneSkill_2eproto();

  void InitAsDefaultInstance();
  static SkillShortcut* default_instance_;
};
// -------------------------------------------------------------------

class SkillItem : public ::google::protobuf::Message {
 public:
  SkillItem();
  virtual ~SkillItem();

  SkillItem(const SkillItem& from);

  inline SkillItem& operator=(const SkillItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillItem& default_instance();

  void Swap(SkillItem* other);

  // implements Message ----------------------------------------------

  SkillItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillItem& from);
  void MergeFrom(const SkillItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 pos = 2 [default = 0];
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // optional uint32 cd = 3 [default = 0];
  inline bool has_cd() const;
  inline void clear_cd();
  static const int kCdFieldNumber = 3;
  inline ::google::protobuf::uint32 cd() const;
  inline void set_cd(::google::protobuf::uint32 value);

  // optional bool active = 4 [default = false];
  inline bool has_active() const;
  inline void clear_active();
  static const int kActiveFieldNumber = 4;
  inline bool active() const;
  inline void set_active(bool value);

  // optional bool learn = 5 [default = false];
  inline bool has_learn() const;
  inline void clear_learn();
  static const int kLearnFieldNumber = 5;
  inline bool learn() const;
  inline void set_learn(bool value);

  // optional .Cmd.ESource source = 6 [default = ESOURCE_MIN];
  inline bool has_source() const;
  inline void clear_source();
  static const int kSourceFieldNumber = 6;
  inline ::Cmd::ESource source() const;
  inline void set_source(::Cmd::ESource value);

  // optional .Cmd.EProfession profession = 7 [default = EPROFESSION_MIN];
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 7;
  inline ::Cmd::EProfession profession() const;
  inline void set_profession(::Cmd::EProfession value);

  // optional .Cmd.SkillConsume consume = 8;
  inline bool has_consume() const;
  inline void clear_consume();
  static const int kConsumeFieldNumber = 8;
  inline const ::Cmd::SkillConsume& consume() const;
  inline ::Cmd::SkillConsume* mutable_consume();
  inline ::Cmd::SkillConsume* release_consume();
  inline void set_allocated_consume(::Cmd::SkillConsume* consume);

  // optional uint32 sourceid = 9 [default = 0];
  inline bool has_sourceid() const;
  inline void clear_sourceid();
  static const int kSourceidFieldNumber = 9;
  inline ::google::protobuf::uint32 sourceid() const;
  inline void set_sourceid(::google::protobuf::uint32 value);

  // optional bool shadow = 10 [default = false];
  inline bool has_shadow() const;
  inline void clear_shadow();
  static const int kShadowFieldNumber = 10;
  inline bool shadow() const;
  inline void set_shadow(bool value);

  // optional uint32 autopos = 11 [default = 0];
  inline bool has_autopos() const;
  inline void clear_autopos();
  static const int kAutoposFieldNumber = 11;
  inline ::google::protobuf::uint32 autopos() const;
  inline void set_autopos(::google::protobuf::uint32 value);

  // optional uint32 extendpos = 12 [default = 0];
  inline bool has_extendpos() const;
  inline void clear_extendpos();
  static const int kExtendposFieldNumber = 12;
  inline ::google::protobuf::uint32 extendpos() const;
  inline void set_extendpos(::google::protobuf::uint32 value);

  // optional uint32 runespecid = 13 [default = 0];
  inline bool has_runespecid() const;
  inline void clear_runespecid();
  static const int kRunespecidFieldNumber = 13;
  inline ::google::protobuf::uint32 runespecid() const;
  inline void set_runespecid(::google::protobuf::uint32 value);

  // optional uint32 replaceid = 14 [default = 0];
  inline bool has_replaceid() const;
  inline void clear_replaceid();
  static const int kReplaceidFieldNumber = 14;
  inline ::google::protobuf::uint32 replaceid() const;
  inline void set_replaceid(::google::protobuf::uint32 value);

  // optional bool selectswitch = 15 [default = true];
  inline bool has_selectswitch() const;
  inline void clear_selectswitch();
  static const int kSelectswitchFieldNumber = 15;
  inline bool selectswitch() const;
  inline void set_selectswitch(bool value);

  // optional uint32 extralv = 16 [default = 0];
  inline bool has_extralv() const;
  inline void clear_extralv();
  static const int kExtralvFieldNumber = 16;
  inline ::google::protobuf::uint32 extralv() const;
  inline void set_extralv(::google::protobuf::uint32 value);

  // optional uint64 ownerid = 17 [default = 0];
  inline bool has_ownerid() const;
  inline void clear_ownerid();
  static const int kOwneridFieldNumber = 17;
  inline ::google::protobuf::uint64 ownerid() const;
  inline void set_ownerid(::google::protobuf::uint64 value);

  // optional bool notreset = 18 [default = false];
  inline bool has_notreset() const;
  inline void clear_notreset();
  static const int kNotresetFieldNumber = 18;
  inline bool notreset() const;
  inline void set_notreset(bool value);

  // repeated .Cmd.SkillShortcut shortcuts = 19;
  inline int shortcuts_size() const;
  inline void clear_shortcuts();
  static const int kShortcutsFieldNumber = 19;
  inline const ::Cmd::SkillShortcut& shortcuts(int index) const;
  inline ::Cmd::SkillShortcut* mutable_shortcuts(int index);
  inline ::Cmd::SkillShortcut* add_shortcuts();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SkillShortcut >&
      shortcuts() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::SkillShortcut >*
      mutable_shortcuts();

  // @@protoc_insertion_point(class_scope:Cmd.SkillItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_cd();
  inline void clear_has_cd();
  inline void set_has_active();
  inline void clear_has_active();
  inline void set_has_learn();
  inline void clear_has_learn();
  inline void set_has_source();
  inline void clear_has_source();
  inline void set_has_profession();
  inline void clear_has_profession();
  inline void set_has_consume();
  inline void clear_has_consume();
  inline void set_has_sourceid();
  inline void clear_has_sourceid();
  inline void set_has_shadow();
  inline void clear_has_shadow();
  inline void set_has_autopos();
  inline void clear_has_autopos();
  inline void set_has_extendpos();
  inline void clear_has_extendpos();
  inline void set_has_runespecid();
  inline void clear_has_runespecid();
  inline void set_has_replaceid();
  inline void clear_has_replaceid();
  inline void set_has_selectswitch();
  inline void clear_has_selectswitch();
  inline void set_has_extralv();
  inline void clear_has_extralv();
  inline void set_has_ownerid();
  inline void clear_has_ownerid();
  inline void set_has_notreset();
  inline void clear_has_notreset();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 cd_;
  int source_;
  ::Cmd::SkillConsume* consume_;
  int profession_;
  bool active_;
  bool learn_;
  bool shadow_;
  bool selectswitch_;
  ::google::protobuf::uint32 sourceid_;
  ::google::protobuf::uint32 autopos_;
  ::google::protobuf::uint32 extendpos_;
  ::google::protobuf::uint32 runespecid_;
  ::google::protobuf::uint32 replaceid_;
  ::google::protobuf::uint32 extralv_;
  ::google::protobuf::uint64 ownerid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::SkillShortcut > shortcuts_;
  bool notreset_;
  friend void  protobuf_AddDesc_SceneSkill_2eproto();
  friend void protobuf_AssignDesc_SceneSkill_2eproto();
  friend void protobuf_ShutdownFile_SceneSkill_2eproto();

  void InitAsDefaultInstance();
  static SkillItem* default_instance_;
};
// -------------------------------------------------------------------

class SkillData : public ::google::protobuf::Message {
 public:
  SkillData();
  virtual ~SkillData();

  SkillData(const SkillData& from);

  inline SkillData& operator=(const SkillData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillData& default_instance();

  void Swap(SkillData* other);

  // implements Message ----------------------------------------------

  SkillData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillData& from);
  void MergeFrom(const SkillData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 usedpoint = 1 [default = 0];
  inline bool has_usedpoint() const;
  inline void clear_usedpoint();
  static const int kUsedpointFieldNumber = 1;
  inline ::google::protobuf::uint32 usedpoint() const;
  inline void set_usedpoint(::google::protobuf::uint32 value);

  // optional .Cmd.EProfession profession = 2 [default = EPROFESSION_MIN];
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 2;
  inline ::Cmd::EProfession profession() const;
  inline void set_profession(::Cmd::EProfession value);

  // repeated .Cmd.SkillItem items = 3;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 3;
  inline const ::Cmd::SkillItem& items(int index) const;
  inline ::Cmd::SkillItem* mutable_items(int index);
  inline ::Cmd::SkillItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem >*
      mutable_items();

  // optional uint32 primarypoint = 4 [default = 0];
  inline bool has_primarypoint() const;
  inline void clear_primarypoint();
  static const int kPrimarypointFieldNumber = 4;
  inline ::google::protobuf::uint32 primarypoint() const;
  inline void set_primarypoint(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.SkillData)
 private:
  inline void set_has_usedpoint();
  inline void clear_has_usedpoint();
  inline void set_has_profession();
  inline void clear_has_profession();
  inline void set_has_primarypoint();
  inline void clear_has_primarypoint();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 usedpoint_;
  int profession_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem > items_;
  ::google::protobuf::uint32 primarypoint_;
  friend void  protobuf_AddDesc_SceneSkill_2eproto();
  friend void protobuf_AssignDesc_SceneSkill_2eproto();
  friend void protobuf_ShutdownFile_SceneSkill_2eproto();

  void InitAsDefaultInstance();
  static SkillData* default_instance_;
};
// -------------------------------------------------------------------

class SkillPos : public ::google::protobuf::Message {
 public:
  SkillPos();
  virtual ~SkillPos();

  SkillPos(const SkillPos& from);

  inline SkillPos& operator=(const SkillPos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillPos& default_instance();

  void Swap(SkillPos* other);

  // implements Message ----------------------------------------------

  SkillPos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillPos& from);
  void MergeFrom(const SkillPos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 pos = 2 [default = 0];
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // optional uint32 sourceid = 3 [default = 0];
  inline bool has_sourceid() const;
  inline void clear_sourceid();
  static const int kSourceidFieldNumber = 3;
  inline ::google::protobuf::uint32 sourceid() const;
  inline void set_sourceid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.SkillPos)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_sourceid();
  inline void clear_has_sourceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 sourceid_;
  friend void  protobuf_AddDesc_SceneSkill_2eproto();
  friend void protobuf_AssignDesc_SceneSkill_2eproto();
  friend void protobuf_ShutdownFile_SceneSkill_2eproto();

  void InitAsDefaultInstance();
  static SkillPos* default_instance_;
};
// -------------------------------------------------------------------

class ReqSkillData : public ::google::protobuf::Message {
 public:
  ReqSkillData();
  virtual ~ReqSkillData();

  ReqSkillData(const ReqSkillData& from);

  inline ReqSkillData& operator=(const ReqSkillData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqSkillData& default_instance();

  void Swap(ReqSkillData* other);

  // implements Message ----------------------------------------------

  ReqSkillData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqSkillData& from);
  void MergeFrom(const ReqSkillData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_SKILLITEM];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SkillParam param() const;
  inline void set_param(::Cmd::SkillParam value);

  // repeated .Cmd.SkillData data = 3;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::Cmd::SkillData& data(int index) const;
  inline ::Cmd::SkillData* mutable_data(int index);
  inline ::Cmd::SkillData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SkillData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::SkillData >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:Cmd.ReqSkillData)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::SkillData > data_;
  friend void  protobuf_AddDesc_SceneSkill_2eproto();
  friend void protobuf_AssignDesc_SceneSkill_2eproto();
  friend void protobuf_ShutdownFile_SceneSkill_2eproto();

  void InitAsDefaultInstance();
  static ReqSkillData* default_instance_;
};
// -------------------------------------------------------------------

class SkillUpdate : public ::google::protobuf::Message {
 public:
  SkillUpdate();
  virtual ~SkillUpdate();

  SkillUpdate(const SkillUpdate& from);

  inline SkillUpdate& operator=(const SkillUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillUpdate& default_instance();

  void Swap(SkillUpdate* other);

  // implements Message ----------------------------------------------

  SkillUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillUpdate& from);
  void MergeFrom(const SkillUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_SKILLUPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SkillParam param() const;
  inline void set_param(::Cmd::SkillParam value);

  // repeated .Cmd.SkillData update = 3;
  inline int update_size() const;
  inline void clear_update();
  static const int kUpdateFieldNumber = 3;
  inline const ::Cmd::SkillData& update(int index) const;
  inline ::Cmd::SkillData* mutable_update(int index);
  inline ::Cmd::SkillData* add_update();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SkillData >&
      update() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::SkillData >*
      mutable_update();

  // repeated .Cmd.SkillData del = 4;
  inline int del_size() const;
  inline void clear_del();
  static const int kDelFieldNumber = 4;
  inline const ::Cmd::SkillData& del(int index) const;
  inline ::Cmd::SkillData* mutable_del(int index);
  inline ::Cmd::SkillData* add_del();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SkillData >&
      del() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::SkillData >*
      mutable_del();

  // @@protoc_insertion_point(class_scope:Cmd.SkillUpdate)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::SkillData > update_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::SkillData > del_;
  friend void  protobuf_AddDesc_SceneSkill_2eproto();
  friend void protobuf_AssignDesc_SceneSkill_2eproto();
  friend void protobuf_ShutdownFile_SceneSkill_2eproto();

  void InitAsDefaultInstance();
  static SkillUpdate* default_instance_;
};
// -------------------------------------------------------------------

class LevelupSkill : public ::google::protobuf::Message {
 public:
  LevelupSkill();
  virtual ~LevelupSkill();

  LevelupSkill(const LevelupSkill& from);

  inline LevelupSkill& operator=(const LevelupSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LevelupSkill& default_instance();

  void Swap(LevelupSkill* other);

  // implements Message ----------------------------------------------

  LevelupSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LevelupSkill& from);
  void MergeFrom(const LevelupSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_LEVELUPSKILL];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SkillParam param() const;
  inline void set_param(::Cmd::SkillParam value);

  // optional .Cmd.ELevelupType type = 3 [default = ELEVELUPTYPE_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::Cmd::ELevelupType type() const;
  inline void set_type(::Cmd::ELevelupType value);

  // repeated uint32 skillids = 4;
  inline int skillids_size() const;
  inline void clear_skillids();
  static const int kSkillidsFieldNumber = 4;
  inline ::google::protobuf::uint32 skillids(int index) const;
  inline void set_skillids(int index, ::google::protobuf::uint32 value);
  inline void add_skillids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skillids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skillids();

  // @@protoc_insertion_point(class_scope:Cmd.LevelupSkill)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skillids_;
  int type_;
  friend void  protobuf_AddDesc_SceneSkill_2eproto();
  friend void protobuf_AssignDesc_SceneSkill_2eproto();
  friend void protobuf_ShutdownFile_SceneSkill_2eproto();

  void InitAsDefaultInstance();
  static LevelupSkill* default_instance_;
};
// -------------------------------------------------------------------

class EquipSkill : public ::google::protobuf::Message {
 public:
  EquipSkill();
  virtual ~EquipSkill();

  EquipSkill(const EquipSkill& from);

  inline EquipSkill& operator=(const EquipSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipSkill& default_instance();

  void Swap(EquipSkill* other);

  // implements Message ----------------------------------------------

  EquipSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipSkill& from);
  void MergeFrom(const EquipSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_EQUIPSKILL];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SkillParam param() const;
  inline void set_param(::Cmd::SkillParam value);

  // optional uint32 skillid = 3 [default = 0];
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 3;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);

  // optional uint32 pos = 4 [default = 0];
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 4;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // optional uint32 sourceid = 5 [default = 0];
  inline bool has_sourceid() const;
  inline void clear_sourceid();
  static const int kSourceidFieldNumber = 5;
  inline ::google::protobuf::uint32 sourceid() const;
  inline void set_sourceid(::google::protobuf::uint32 value);

  // optional .Cmd.ESkillShortcut efrom = 6 [default = ESKILLSHORTCUT_MIN];
  inline bool has_efrom() const;
  inline void clear_efrom();
  static const int kEfromFieldNumber = 6;
  inline ::Cmd::ESkillShortcut efrom() const;
  inline void set_efrom(::Cmd::ESkillShortcut value);

  // optional .Cmd.ESkillShortcut eto = 7 [default = ESKILLSHORTCUT_MIN];
  inline bool has_eto() const;
  inline void clear_eto();
  static const int kEtoFieldNumber = 7;
  inline ::Cmd::ESkillShortcut eto() const;
  inline void set_eto(::Cmd::ESkillShortcut value);

  // optional uint32 beingid = 8 [default = 0];
  inline bool has_beingid() const;
  inline void clear_beingid();
  static const int kBeingidFieldNumber = 8;
  inline ::google::protobuf::uint32 beingid() const;
  inline void set_beingid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.EquipSkill)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_sourceid();
  inline void clear_has_sourceid();
  inline void set_has_efrom();
  inline void clear_has_efrom();
  inline void set_has_eto();
  inline void clear_has_eto();
  inline void set_has_beingid();
  inline void clear_has_beingid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 sourceid_;
  int efrom_;
  int eto_;
  ::google::protobuf::uint32 beingid_;
  friend void  protobuf_AddDesc_SceneSkill_2eproto();
  friend void protobuf_AssignDesc_SceneSkill_2eproto();
  friend void protobuf_ShutdownFile_SceneSkill_2eproto();

  void InitAsDefaultInstance();
  static EquipSkill* default_instance_;
};
// -------------------------------------------------------------------

class ResetSkill : public ::google::protobuf::Message {
 public:
  ResetSkill();
  virtual ~ResetSkill();

  ResetSkill(const ResetSkill& from);

  inline ResetSkill& operator=(const ResetSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResetSkill& default_instance();

  void Swap(ResetSkill* other);

  // implements Message ----------------------------------------------

  ResetSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResetSkill& from);
  void MergeFrom(const ResetSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_RESETSKILL];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SkillParam param() const;
  inline void set_param(::Cmd::SkillParam value);

  // @@protoc_insertion_point(class_scope:Cmd.ResetSkill)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  friend void  protobuf_AddDesc_SceneSkill_2eproto();
  friend void protobuf_AssignDesc_SceneSkill_2eproto();
  friend void protobuf_ShutdownFile_SceneSkill_2eproto();

  void InitAsDefaultInstance();
  static ResetSkill* default_instance_;
};
// -------------------------------------------------------------------

class SkillValidShortcut : public ::google::protobuf::Message {
 public:
  SkillValidShortcut();
  virtual ~SkillValidShortcut();

  SkillValidShortcut(const SkillValidShortcut& from);

  inline SkillValidShortcut& operator=(const SkillValidShortcut& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillValidShortcut& default_instance();

  void Swap(SkillValidShortcut* other);

  // implements Message ----------------------------------------------

  SkillValidShortcut* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillValidShortcut& from);
  void MergeFrom(const SkillValidShortcut& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.ESkillShortcut type = 1 [default = ESKILLSHORTCUT_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Cmd::ESkillShortcut type() const;
  inline void set_type(::Cmd::ESkillShortcut value);

  // repeated uint32 pos = 2;
  inline int pos_size() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::uint32 pos(int index) const;
  inline void set_pos(int index, ::google::protobuf::uint32 value);
  inline void add_pos(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      pos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_pos();

  // @@protoc_insertion_point(class_scope:Cmd.SkillValidShortcut)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > pos_;
  int type_;
  friend void  protobuf_AddDesc_SceneSkill_2eproto();
  friend void protobuf_AssignDesc_SceneSkill_2eproto();
  friend void protobuf_ShutdownFile_SceneSkill_2eproto();

  void InitAsDefaultInstance();
  static SkillValidShortcut* default_instance_;
};
// -------------------------------------------------------------------

class SkillValidPos : public ::google::protobuf::Message {
 public:
  SkillValidPos();
  virtual ~SkillValidPos();

  SkillValidPos(const SkillValidPos& from);

  inline SkillValidPos& operator=(const SkillValidPos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillValidPos& default_instance();

  void Swap(SkillValidPos* other);

  // implements Message ----------------------------------------------

  SkillValidPos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillValidPos& from);
  void MergeFrom(const SkillValidPos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_SKILLVALIDPOS];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SkillParam param() const;
  inline void set_param(::Cmd::SkillParam value);

  // repeated .Cmd.SkillValidShortcut shortcuts = 3;
  inline int shortcuts_size() const;
  inline void clear_shortcuts();
  static const int kShortcutsFieldNumber = 3;
  inline const ::Cmd::SkillValidShortcut& shortcuts(int index) const;
  inline ::Cmd::SkillValidShortcut* mutable_shortcuts(int index);
  inline ::Cmd::SkillValidShortcut* add_shortcuts();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SkillValidShortcut >&
      shortcuts() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::SkillValidShortcut >*
      mutable_shortcuts();

  // @@protoc_insertion_point(class_scope:Cmd.SkillValidPos)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::SkillValidShortcut > shortcuts_;
  friend void  protobuf_AddDesc_SceneSkill_2eproto();
  friend void protobuf_AssignDesc_SceneSkill_2eproto();
  friend void protobuf_ShutdownFile_SceneSkill_2eproto();

  void InitAsDefaultInstance();
  static SkillValidPos* default_instance_;
};
// -------------------------------------------------------------------

class ChangeSkillCmd : public ::google::protobuf::Message {
 public:
  ChangeSkillCmd();
  virtual ~ChangeSkillCmd();

  ChangeSkillCmd(const ChangeSkillCmd& from);

  inline ChangeSkillCmd& operator=(const ChangeSkillCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeSkillCmd& default_instance();

  void Swap(ChangeSkillCmd* other);

  // implements Message ----------------------------------------------

  ChangeSkillCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeSkillCmd& from);
  void MergeFrom(const ChangeSkillCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_CHANGE_SKILL];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SkillParam param() const;
  inline void set_param(::Cmd::SkillParam value);

  // optional uint32 skillid = 3;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 3;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);

  // optional string type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline const ::std::string& type() const;
  inline void set_type(const ::std::string& value);
  inline void set_type(const char* value);
  inline void set_type(const char* value, size_t size);
  inline ::std::string* mutable_type();
  inline ::std::string* release_type();
  inline void set_allocated_type(::std::string* type);

  // optional uint32 isadd = 5;
  inline bool has_isadd() const;
  inline void clear_isadd();
  static const int kIsaddFieldNumber = 5;
  inline ::google::protobuf::uint32 isadd() const;
  inline void set_isadd(::google::protobuf::uint32 value);

  // optional uint32 key = 6;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 6;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ChangeSkillCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_isadd();
  inline void clear_has_isadd();
  inline void set_has_key();
  inline void clear_has_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::std::string* type_;
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 isadd_;
  ::google::protobuf::uint32 key_;
  friend void  protobuf_AddDesc_SceneSkill_2eproto();
  friend void protobuf_AssignDesc_SceneSkill_2eproto();
  friend void protobuf_ShutdownFile_SceneSkill_2eproto();

  void InitAsDefaultInstance();
  static ChangeSkillCmd* default_instance_;
};
// -------------------------------------------------------------------

class SkillCost : public ::google::protobuf::Message {
 public:
  SkillCost();
  virtual ~SkillCost();

  SkillCost(const SkillCost& from);

  inline SkillCost& operator=(const SkillCost& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillCost& default_instance();

  void Swap(SkillCost* other);

  // implements Message ----------------------------------------------

  SkillCost* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillCost& from);
  void MergeFrom(const SkillCost& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 itemid = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 1;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // optional int32 changenum = 2 [default = 0];
  inline bool has_changenum() const;
  inline void clear_changenum();
  static const int kChangenumFieldNumber = 2;
  inline ::google::protobuf::int32 changenum() const;
  inline void set_changenum(::google::protobuf::int32 value);

  // optional int32 changeper = 3 [default = 0];
  inline bool has_changeper() const;
  inline void clear_changeper();
  static const int kChangeperFieldNumber = 3;
  inline ::google::protobuf::int32 changeper() const;
  inline void set_changeper(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Cmd.SkillCost)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_changenum();
  inline void clear_has_changenum();
  inline void set_has_changeper();
  inline void clear_has_changeper();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::int32 changenum_;
  ::google::protobuf::int32 changeper_;
  friend void  protobuf_AddDesc_SceneSkill_2eproto();
  friend void protobuf_AssignDesc_SceneSkill_2eproto();
  friend void protobuf_ShutdownFile_SceneSkill_2eproto();

  void InitAsDefaultInstance();
  static SkillCost* default_instance_;
};
// -------------------------------------------------------------------

class SpecSkillInfo : public ::google::protobuf::Message {
 public:
  SpecSkillInfo();
  virtual ~SpecSkillInfo();

  SpecSkillInfo(const SpecSkillInfo& from);

  inline SpecSkillInfo& operator=(const SpecSkillInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SpecSkillInfo& default_instance();

  void Swap(SpecSkillInfo* other);

  // implements Message ----------------------------------------------

  SpecSkillInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpecSkillInfo& from);
  void MergeFrom(const SpecSkillInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // repeated .Cmd.UserAttr attrs = 2;
  inline int attrs_size() const;
  inline void clear_attrs();
  static const int kAttrsFieldNumber = 2;
  inline const ::Cmd::UserAttr& attrs(int index) const;
  inline ::Cmd::UserAttr* mutable_attrs(int index);
  inline ::Cmd::UserAttr* add_attrs();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >&
      attrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >*
      mutable_attrs();

  // repeated .Cmd.SkillCost cost = 3;
  inline int cost_size() const;
  inline void clear_cost();
  static const int kCostFieldNumber = 3;
  inline const ::Cmd::SkillCost& cost(int index) const;
  inline ::Cmd::SkillCost* mutable_cost(int index);
  inline ::Cmd::SkillCost* add_cost();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SkillCost >&
      cost() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::SkillCost >*
      mutable_cost();

  // optional int32 changerange = 4 [default = 0];
  inline bool has_changerange() const;
  inline void clear_changerange();
  static const int kChangerangeFieldNumber = 4;
  inline ::google::protobuf::int32 changerange() const;
  inline void set_changerange(::google::protobuf::int32 value);

  // optional int32 changenum = 5 [default = 0];
  inline bool has_changenum() const;
  inline void clear_changenum();
  static const int kChangenumFieldNumber = 5;
  inline ::google::protobuf::int32 changenum() const;
  inline void set_changenum(::google::protobuf::int32 value);

  // optional int32 changeready = 6 [default = 0];
  inline bool has_changeready() const;
  inline void clear_changeready();
  static const int kChangereadyFieldNumber = 6;
  inline ::google::protobuf::int32 changeready() const;
  inline void set_changeready(::google::protobuf::int32 value);

  // optional bool neednoitem = 7 [default = false];
  inline bool has_neednoitem() const;
  inline void clear_neednoitem();
  static const int kNeednoitemFieldNumber = 7;
  inline bool neednoitem() const;
  inline void set_neednoitem(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.SpecSkillInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_changerange();
  inline void clear_has_changerange();
  inline void set_has_changenum();
  inline void clear_has_changenum();
  inline void set_has_changeready();
  inline void clear_has_changeready();
  inline void set_has_neednoitem();
  inline void clear_has_neednoitem();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr > attrs_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::int32 changerange_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::SkillCost > cost_;
  ::google::protobuf::int32 changenum_;
  ::google::protobuf::int32 changeready_;
  bool neednoitem_;
  friend void  protobuf_AddDesc_SceneSkill_2eproto();
  friend void protobuf_AssignDesc_SceneSkill_2eproto();
  friend void protobuf_ShutdownFile_SceneSkill_2eproto();

  void InitAsDefaultInstance();
  static SpecSkillInfo* default_instance_;
};
// -------------------------------------------------------------------

class UpSkillInfoSkillCmd : public ::google::protobuf::Message {
 public:
  UpSkillInfoSkillCmd();
  virtual ~UpSkillInfoSkillCmd();

  UpSkillInfoSkillCmd(const UpSkillInfoSkillCmd& from);

  inline UpSkillInfoSkillCmd& operator=(const UpSkillInfoSkillCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpSkillInfoSkillCmd& default_instance();

  void Swap(UpSkillInfoSkillCmd* other);

  // implements Message ----------------------------------------------

  UpSkillInfoSkillCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpSkillInfoSkillCmd& from);
  void MergeFrom(const UpSkillInfoSkillCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_SPEC_SKILL_INFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SkillParam param() const;
  inline void set_param(::Cmd::SkillParam value);

  // repeated .Cmd.SpecSkillInfo specinfo = 3;
  inline int specinfo_size() const;
  inline void clear_specinfo();
  static const int kSpecinfoFieldNumber = 3;
  inline const ::Cmd::SpecSkillInfo& specinfo(int index) const;
  inline ::Cmd::SpecSkillInfo* mutable_specinfo(int index);
  inline ::Cmd::SpecSkillInfo* add_specinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SpecSkillInfo >&
      specinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::SpecSkillInfo >*
      mutable_specinfo();

  // optional .Cmd.SpecSkillInfo allskillInfo = 4;
  inline bool has_allskillinfo() const;
  inline void clear_allskillinfo();
  static const int kAllskillInfoFieldNumber = 4;
  inline const ::Cmd::SpecSkillInfo& allskillinfo() const;
  inline ::Cmd::SpecSkillInfo* mutable_allskillinfo();
  inline ::Cmd::SpecSkillInfo* release_allskillinfo();
  inline void set_allocated_allskillinfo(::Cmd::SpecSkillInfo* allskillinfo);

  // @@protoc_insertion_point(class_scope:Cmd.UpSkillInfoSkillCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_allskillinfo();
  inline void clear_has_allskillinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::SpecSkillInfo > specinfo_;
  ::Cmd::SpecSkillInfo* allskillinfo_;
  friend void  protobuf_AddDesc_SceneSkill_2eproto();
  friend void protobuf_AssignDesc_SceneSkill_2eproto();
  friend void protobuf_ShutdownFile_SceneSkill_2eproto();

  void InitAsDefaultInstance();
  static UpSkillInfoSkillCmd* default_instance_;
};
// -------------------------------------------------------------------

class SelectRuneSkillCmd : public ::google::protobuf::Message {
 public:
  SelectRuneSkillCmd();
  virtual ~SelectRuneSkillCmd();

  SelectRuneSkillCmd(const SelectRuneSkillCmd& from);

  inline SelectRuneSkillCmd& operator=(const SelectRuneSkillCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SelectRuneSkillCmd& default_instance();

  void Swap(SelectRuneSkillCmd* other);

  // implements Message ----------------------------------------------

  SelectRuneSkillCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SelectRuneSkillCmd& from);
  void MergeFrom(const SelectRuneSkillCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_SELECT_RUNE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SkillParam param() const;
  inline void set_param(::Cmd::SkillParam value);

  // required uint32 skillid = 3;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 3;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);

  // optional uint32 runespecid = 4 [default = 0];
  inline bool has_runespecid() const;
  inline void clear_runespecid();
  static const int kRunespecidFieldNumber = 4;
  inline ::google::protobuf::uint32 runespecid() const;
  inline void set_runespecid(::google::protobuf::uint32 value);

  // optional bool selectswitch = 5 [default = true];
  inline bool has_selectswitch() const;
  inline void clear_selectswitch();
  static const int kSelectswitchFieldNumber = 5;
  inline bool selectswitch() const;
  inline void set_selectswitch(bool value);

  // optional uint32 beingid = 6 [default = 0];
  inline bool has_beingid() const;
  inline void clear_beingid();
  static const int kBeingidFieldNumber = 6;
  inline ::google::protobuf::uint32 beingid() const;
  inline void set_beingid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.SelectRuneSkillCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_runespecid();
  inline void clear_has_runespecid();
  inline void set_has_selectswitch();
  inline void clear_has_selectswitch();
  inline void set_has_beingid();
  inline void clear_has_beingid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 runespecid_;
  bool selectswitch_;
  ::google::protobuf::uint32 beingid_;
  friend void  protobuf_AddDesc_SceneSkill_2eproto();
  friend void protobuf_AssignDesc_SceneSkill_2eproto();
  friend void protobuf_ShutdownFile_SceneSkill_2eproto();

  void InitAsDefaultInstance();
  static SelectRuneSkillCmd* default_instance_;
};
// -------------------------------------------------------------------

class MarkSkillNpcSkillCmd : public ::google::protobuf::Message {
 public:
  MarkSkillNpcSkillCmd();
  virtual ~MarkSkillNpcSkillCmd();

  MarkSkillNpcSkillCmd(const MarkSkillNpcSkillCmd& from);

  inline MarkSkillNpcSkillCmd& operator=(const MarkSkillNpcSkillCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarkSkillNpcSkillCmd& default_instance();

  void Swap(MarkSkillNpcSkillCmd* other);

  // implements Message ----------------------------------------------

  MarkSkillNpcSkillCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarkSkillNpcSkillCmd& from);
  void MergeFrom(const MarkSkillNpcSkillCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_MARK_SKILLNPC];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SkillParam param() const;
  inline void set_param(::Cmd::SkillParam value);

  // required uint64 npcguid = 3;
  inline bool has_npcguid() const;
  inline void clear_npcguid();
  static const int kNpcguidFieldNumber = 3;
  inline ::google::protobuf::uint64 npcguid() const;
  inline void set_npcguid(::google::protobuf::uint64 value);

  // required uint32 skillid = 4;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 4;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.MarkSkillNpcSkillCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_npcguid();
  inline void clear_has_npcguid();
  inline void set_has_skillid();
  inline void clear_has_skillid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 npcguid_;
  ::google::protobuf::uint32 skillid_;
  friend void  protobuf_AddDesc_SceneSkill_2eproto();
  friend void protobuf_AssignDesc_SceneSkill_2eproto();
  friend void protobuf_ShutdownFile_SceneSkill_2eproto();

  void InitAsDefaultInstance();
  static MarkSkillNpcSkillCmd* default_instance_;
};
// -------------------------------------------------------------------

class TriggerSkillNpcSkillCmd : public ::google::protobuf::Message {
 public:
  TriggerSkillNpcSkillCmd();
  virtual ~TriggerSkillNpcSkillCmd();

  TriggerSkillNpcSkillCmd(const TriggerSkillNpcSkillCmd& from);

  inline TriggerSkillNpcSkillCmd& operator=(const TriggerSkillNpcSkillCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TriggerSkillNpcSkillCmd& default_instance();

  void Swap(TriggerSkillNpcSkillCmd* other);

  // implements Message ----------------------------------------------

  TriggerSkillNpcSkillCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TriggerSkillNpcSkillCmd& from);
  void MergeFrom(const TriggerSkillNpcSkillCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_TRGGER_SKILLNPC];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SkillParam param() const;
  inline void set_param(::Cmd::SkillParam value);

  // required uint64 npcguid = 3;
  inline bool has_npcguid() const;
  inline void clear_npcguid();
  static const int kNpcguidFieldNumber = 3;
  inline ::google::protobuf::uint64 npcguid() const;
  inline void set_npcguid(::google::protobuf::uint64 value);

  // optional .Cmd.ETrigSkillType etype = 4 [default = ETRIGTSKILL_MIN];
  inline bool has_etype() const;
  inline void clear_etype();
  static const int kEtypeFieldNumber = 4;
  inline ::Cmd::ETrigSkillType etype() const;
  inline void set_etype(::Cmd::ETrigSkillType value);

  // @@protoc_insertion_point(class_scope:Cmd.TriggerSkillNpcSkillCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_npcguid();
  inline void clear_has_npcguid();
  inline void set_has_etype();
  inline void clear_has_etype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 npcguid_;
  int etype_;
  friend void  protobuf_AddDesc_SceneSkill_2eproto();
  friend void protobuf_AssignDesc_SceneSkill_2eproto();
  friend void protobuf_ShutdownFile_SceneSkill_2eproto();

  void InitAsDefaultInstance();
  static TriggerSkillNpcSkillCmd* default_instance_;
};
// -------------------------------------------------------------------

class SkillOption : public ::google::protobuf::Message {
 public:
  SkillOption();
  virtual ~SkillOption();

  SkillOption(const SkillOption& from);

  inline SkillOption& operator=(const SkillOption& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillOption& default_instance();

  void Swap(SkillOption* other);

  // implements Message ----------------------------------------------

  SkillOption* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillOption& from);
  void MergeFrom(const SkillOption& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Cmd.ESkillOption opt = 1;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 1;
  inline ::Cmd::ESkillOption opt() const;
  inline void set_opt(::Cmd::ESkillOption value);

  // optional uint32 value = 2 [default = 0];
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.SkillOption)
 private:
  inline void set_has_opt();
  inline void clear_has_opt();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int opt_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_SceneSkill_2eproto();
  friend void protobuf_AssignDesc_SceneSkill_2eproto();
  friend void protobuf_ShutdownFile_SceneSkill_2eproto();

  void InitAsDefaultInstance();
  static SkillOption* default_instance_;
};
// -------------------------------------------------------------------

class SkillOptionSkillCmd : public ::google::protobuf::Message {
 public:
  SkillOptionSkillCmd();
  virtual ~SkillOptionSkillCmd();

  SkillOptionSkillCmd(const SkillOptionSkillCmd& from);

  inline SkillOptionSkillCmd& operator=(const SkillOptionSkillCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillOptionSkillCmd& default_instance();

  void Swap(SkillOptionSkillCmd* other);

  // implements Message ----------------------------------------------

  SkillOptionSkillCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillOptionSkillCmd& from);
  void MergeFrom(const SkillOptionSkillCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_SKILLOPTIONS];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SkillParam param() const;
  inline void set_param(::Cmd::SkillParam value);

  // optional .Cmd.SkillOption set_opt = 3;
  inline bool has_set_opt() const;
  inline void clear_set_opt();
  static const int kSetOptFieldNumber = 3;
  inline const ::Cmd::SkillOption& set_opt() const;
  inline ::Cmd::SkillOption* mutable_set_opt();
  inline ::Cmd::SkillOption* release_set_opt();
  inline void set_allocated_set_opt(::Cmd::SkillOption* set_opt);

  // repeated .Cmd.SkillOption all_opts = 4;
  inline int all_opts_size() const;
  inline void clear_all_opts();
  static const int kAllOptsFieldNumber = 4;
  inline const ::Cmd::SkillOption& all_opts(int index) const;
  inline ::Cmd::SkillOption* mutable_all_opts(int index);
  inline ::Cmd::SkillOption* add_all_opts();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SkillOption >&
      all_opts() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::SkillOption >*
      mutable_all_opts();

  // @@protoc_insertion_point(class_scope:Cmd.SkillOptionSkillCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_set_opt();
  inline void clear_has_set_opt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::SkillOption* set_opt_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::SkillOption > all_opts_;
  friend void  protobuf_AddDesc_SceneSkill_2eproto();
  friend void protobuf_AssignDesc_SceneSkill_2eproto();
  friend void protobuf_ShutdownFile_SceneSkill_2eproto();

  void InitAsDefaultInstance();
  static SkillOptionSkillCmd* default_instance_;
};
// -------------------------------------------------------------------

class DynamicSkillCmd : public ::google::protobuf::Message {
 public:
  DynamicSkillCmd();
  virtual ~DynamicSkillCmd();

  DynamicSkillCmd(const DynamicSkillCmd& from);

  inline DynamicSkillCmd& operator=(const DynamicSkillCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DynamicSkillCmd& default_instance();

  void Swap(DynamicSkillCmd* other);

  // implements Message ----------------------------------------------

  DynamicSkillCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DynamicSkillCmd& from);
  void MergeFrom(const DynamicSkillCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_DYNAMIC_SKILL_INFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SkillParam param() const;
  inline void set_param(::Cmd::SkillParam value);

  // repeated .Cmd.SkillItem skills = 3;
  inline int skills_size() const;
  inline void clear_skills();
  static const int kSkillsFieldNumber = 3;
  inline const ::Cmd::SkillItem& skills(int index) const;
  inline ::Cmd::SkillItem* mutable_skills(int index);
  inline ::Cmd::SkillItem* add_skills();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem >&
      skills() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem >*
      mutable_skills();

  // @@protoc_insertion_point(class_scope:Cmd.DynamicSkillCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem > skills_;
  friend void  protobuf_AddDesc_SceneSkill_2eproto();
  friend void protobuf_AssignDesc_SceneSkill_2eproto();
  friend void protobuf_ShutdownFile_SceneSkill_2eproto();

  void InitAsDefaultInstance();
  static DynamicSkillCmd* default_instance_;
};
// -------------------------------------------------------------------

class UpdateDynamicSkillCmd : public ::google::protobuf::Message {
 public:
  UpdateDynamicSkillCmd();
  virtual ~UpdateDynamicSkillCmd();

  UpdateDynamicSkillCmd(const UpdateDynamicSkillCmd& from);

  inline UpdateDynamicSkillCmd& operator=(const UpdateDynamicSkillCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateDynamicSkillCmd& default_instance();

  void Swap(UpdateDynamicSkillCmd* other);

  // implements Message ----------------------------------------------

  UpdateDynamicSkillCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateDynamicSkillCmd& from);
  void MergeFrom(const UpdateDynamicSkillCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_DYNAMIC_SKILL_UPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SkillParam param() const;
  inline void set_param(::Cmd::SkillParam value);

  // repeated .Cmd.SkillItem update = 3;
  inline int update_size() const;
  inline void clear_update();
  static const int kUpdateFieldNumber = 3;
  inline const ::Cmd::SkillItem& update(int index) const;
  inline ::Cmd::SkillItem* mutable_update(int index);
  inline ::Cmd::SkillItem* add_update();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem >&
      update() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem >*
      mutable_update();

  // repeated .Cmd.SkillItem del = 4;
  inline int del_size() const;
  inline void clear_del();
  static const int kDelFieldNumber = 4;
  inline const ::Cmd::SkillItem& del(int index) const;
  inline ::Cmd::SkillItem* mutable_del(int index);
  inline ::Cmd::SkillItem* add_del();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem >&
      del() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem >*
      mutable_del();

  // @@protoc_insertion_point(class_scope:Cmd.UpdateDynamicSkillCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem > update_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem > del_;
  friend void  protobuf_AddDesc_SceneSkill_2eproto();
  friend void protobuf_AssignDesc_SceneSkill_2eproto();
  friend void protobuf_ShutdownFile_SceneSkill_2eproto();

  void InitAsDefaultInstance();
  static UpdateDynamicSkillCmd* default_instance_;
};
// -------------------------------------------------------------------

class SyncDestPosSkillCmd : public ::google::protobuf::Message {
 public:
  SyncDestPosSkillCmd();
  virtual ~SyncDestPosSkillCmd();

  SyncDestPosSkillCmd(const SyncDestPosSkillCmd& from);

  inline SyncDestPosSkillCmd& operator=(const SyncDestPosSkillCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncDestPosSkillCmd& default_instance();

  void Swap(SyncDestPosSkillCmd* other);

  // implements Message ----------------------------------------------

  SyncDestPosSkillCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncDestPosSkillCmd& from);
  void MergeFrom(const SyncDestPosSkillCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_SYNC_DEST_POS];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SkillParam param() const;
  inline void set_param(::Cmd::SkillParam value);

  // optional uint32 skillid = 3 [default = 0];
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 3;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);

  // optional .Cmd.ScenePos pos = 4;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 4;
  inline const ::Cmd::ScenePos& pos() const;
  inline ::Cmd::ScenePos* mutable_pos();
  inline ::Cmd::ScenePos* release_pos();
  inline void set_allocated_pos(::Cmd::ScenePos* pos);

  // @@protoc_insertion_point(class_scope:Cmd.SyncDestPosSkillCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::ScenePos* pos_;
  ::google::protobuf::uint32 skillid_;
  friend void  protobuf_AddDesc_SceneSkill_2eproto();
  friend void protobuf_AssignDesc_SceneSkill_2eproto();
  friend void protobuf_ShutdownFile_SceneSkill_2eproto();

  void InitAsDefaultInstance();
  static SyncDestPosSkillCmd* default_instance_;
};
// ===================================================================


// ===================================================================

// SkillConsume

// optional uint32 curvalue = 1 [default = 0];
inline bool SkillConsume::has_curvalue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillConsume::set_has_curvalue() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillConsume::clear_has_curvalue() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillConsume::clear_curvalue() {
  curvalue_ = 0u;
  clear_has_curvalue();
}
inline ::google::protobuf::uint32 SkillConsume::curvalue() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillConsume.curvalue)
  return curvalue_;
}
inline void SkillConsume::set_curvalue(::google::protobuf::uint32 value) {
  set_has_curvalue();
  curvalue_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillConsume.curvalue)
}

// optional uint32 maxvalue = 2 [default = 0];
inline bool SkillConsume::has_maxvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillConsume::set_has_maxvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillConsume::clear_has_maxvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillConsume::clear_maxvalue() {
  maxvalue_ = 0u;
  clear_has_maxvalue();
}
inline ::google::protobuf::uint32 SkillConsume::maxvalue() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillConsume.maxvalue)
  return maxvalue_;
}
inline void SkillConsume::set_maxvalue(::google::protobuf::uint32 value) {
  set_has_maxvalue();
  maxvalue_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillConsume.maxvalue)
}

// optional uint32 nexttime = 3 [default = 0];
inline bool SkillConsume::has_nexttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillConsume::set_has_nexttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillConsume::clear_has_nexttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillConsume::clear_nexttime() {
  nexttime_ = 0u;
  clear_has_nexttime();
}
inline ::google::protobuf::uint32 SkillConsume::nexttime() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillConsume.nexttime)
  return nexttime_;
}
inline void SkillConsume::set_nexttime(::google::protobuf::uint32 value) {
  set_has_nexttime();
  nexttime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillConsume.nexttime)
}

// -------------------------------------------------------------------

// SkillShortcut

// optional .Cmd.ESkillShortcut type = 1 [default = ESKILLSHORTCUT_MIN];
inline bool SkillShortcut::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillShortcut::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillShortcut::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillShortcut::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::ESkillShortcut SkillShortcut::type() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillShortcut.type)
  return static_cast< ::Cmd::ESkillShortcut >(type_);
}
inline void SkillShortcut::set_type(::Cmd::ESkillShortcut value) {
  assert(::Cmd::ESkillShortcut_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillShortcut.type)
}

// optional uint32 pos = 2 [default = 0];
inline bool SkillShortcut::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillShortcut::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillShortcut::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillShortcut::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 SkillShortcut::pos() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillShortcut.pos)
  return pos_;
}
inline void SkillShortcut::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillShortcut.pos)
}

// -------------------------------------------------------------------

// SkillItem

// optional uint32 id = 1 [default = 0];
inline bool SkillItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 SkillItem::id() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillItem.id)
  return id_;
}
inline void SkillItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillItem.id)
}

// optional uint32 pos = 2 [default = 0];
inline bool SkillItem::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillItem::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillItem::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillItem::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 SkillItem::pos() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillItem.pos)
  return pos_;
}
inline void SkillItem::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillItem.pos)
}

// optional uint32 cd = 3 [default = 0];
inline bool SkillItem::has_cd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillItem::set_has_cd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillItem::clear_has_cd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillItem::clear_cd() {
  cd_ = 0u;
  clear_has_cd();
}
inline ::google::protobuf::uint32 SkillItem::cd() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillItem.cd)
  return cd_;
}
inline void SkillItem::set_cd(::google::protobuf::uint32 value) {
  set_has_cd();
  cd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillItem.cd)
}

// optional bool active = 4 [default = false];
inline bool SkillItem::has_active() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SkillItem::set_has_active() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SkillItem::clear_has_active() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SkillItem::clear_active() {
  active_ = false;
  clear_has_active();
}
inline bool SkillItem::active() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillItem.active)
  return active_;
}
inline void SkillItem::set_active(bool value) {
  set_has_active();
  active_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillItem.active)
}

// optional bool learn = 5 [default = false];
inline bool SkillItem::has_learn() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SkillItem::set_has_learn() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SkillItem::clear_has_learn() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SkillItem::clear_learn() {
  learn_ = false;
  clear_has_learn();
}
inline bool SkillItem::learn() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillItem.learn)
  return learn_;
}
inline void SkillItem::set_learn(bool value) {
  set_has_learn();
  learn_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillItem.learn)
}

// optional .Cmd.ESource source = 6 [default = ESOURCE_MIN];
inline bool SkillItem::has_source() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SkillItem::set_has_source() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SkillItem::clear_has_source() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SkillItem::clear_source() {
  source_ = 0;
  clear_has_source();
}
inline ::Cmd::ESource SkillItem::source() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillItem.source)
  return static_cast< ::Cmd::ESource >(source_);
}
inline void SkillItem::set_source(::Cmd::ESource value) {
  assert(::Cmd::ESource_IsValid(value));
  set_has_source();
  source_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillItem.source)
}

// optional .Cmd.EProfession profession = 7 [default = EPROFESSION_MIN];
inline bool SkillItem::has_profession() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SkillItem::set_has_profession() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SkillItem::clear_has_profession() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SkillItem::clear_profession() {
  profession_ = 0;
  clear_has_profession();
}
inline ::Cmd::EProfession SkillItem::profession() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillItem.profession)
  return static_cast< ::Cmd::EProfession >(profession_);
}
inline void SkillItem::set_profession(::Cmd::EProfession value) {
  assert(::Cmd::EProfession_IsValid(value));
  set_has_profession();
  profession_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillItem.profession)
}

// optional .Cmd.SkillConsume consume = 8;
inline bool SkillItem::has_consume() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SkillItem::set_has_consume() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SkillItem::clear_has_consume() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SkillItem::clear_consume() {
  if (consume_ != NULL) consume_->::Cmd::SkillConsume::Clear();
  clear_has_consume();
}
inline const ::Cmd::SkillConsume& SkillItem::consume() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillItem.consume)
  return consume_ != NULL ? *consume_ : *default_instance_->consume_;
}
inline ::Cmd::SkillConsume* SkillItem::mutable_consume() {
  set_has_consume();
  if (consume_ == NULL) consume_ = new ::Cmd::SkillConsume;
  // @@protoc_insertion_point(field_mutable:Cmd.SkillItem.consume)
  return consume_;
}
inline ::Cmd::SkillConsume* SkillItem::release_consume() {
  clear_has_consume();
  ::Cmd::SkillConsume* temp = consume_;
  consume_ = NULL;
  return temp;
}
inline void SkillItem::set_allocated_consume(::Cmd::SkillConsume* consume) {
  delete consume_;
  consume_ = consume;
  if (consume) {
    set_has_consume();
  } else {
    clear_has_consume();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.SkillItem.consume)
}

// optional uint32 sourceid = 9 [default = 0];
inline bool SkillItem::has_sourceid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SkillItem::set_has_sourceid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SkillItem::clear_has_sourceid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SkillItem::clear_sourceid() {
  sourceid_ = 0u;
  clear_has_sourceid();
}
inline ::google::protobuf::uint32 SkillItem::sourceid() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillItem.sourceid)
  return sourceid_;
}
inline void SkillItem::set_sourceid(::google::protobuf::uint32 value) {
  set_has_sourceid();
  sourceid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillItem.sourceid)
}

// optional bool shadow = 10 [default = false];
inline bool SkillItem::has_shadow() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SkillItem::set_has_shadow() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SkillItem::clear_has_shadow() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SkillItem::clear_shadow() {
  shadow_ = false;
  clear_has_shadow();
}
inline bool SkillItem::shadow() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillItem.shadow)
  return shadow_;
}
inline void SkillItem::set_shadow(bool value) {
  set_has_shadow();
  shadow_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillItem.shadow)
}

// optional uint32 autopos = 11 [default = 0];
inline bool SkillItem::has_autopos() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SkillItem::set_has_autopos() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SkillItem::clear_has_autopos() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SkillItem::clear_autopos() {
  autopos_ = 0u;
  clear_has_autopos();
}
inline ::google::protobuf::uint32 SkillItem::autopos() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillItem.autopos)
  return autopos_;
}
inline void SkillItem::set_autopos(::google::protobuf::uint32 value) {
  set_has_autopos();
  autopos_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillItem.autopos)
}

// optional uint32 extendpos = 12 [default = 0];
inline bool SkillItem::has_extendpos() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SkillItem::set_has_extendpos() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SkillItem::clear_has_extendpos() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SkillItem::clear_extendpos() {
  extendpos_ = 0u;
  clear_has_extendpos();
}
inline ::google::protobuf::uint32 SkillItem::extendpos() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillItem.extendpos)
  return extendpos_;
}
inline void SkillItem::set_extendpos(::google::protobuf::uint32 value) {
  set_has_extendpos();
  extendpos_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillItem.extendpos)
}

// optional uint32 runespecid = 13 [default = 0];
inline bool SkillItem::has_runespecid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SkillItem::set_has_runespecid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SkillItem::clear_has_runespecid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SkillItem::clear_runespecid() {
  runespecid_ = 0u;
  clear_has_runespecid();
}
inline ::google::protobuf::uint32 SkillItem::runespecid() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillItem.runespecid)
  return runespecid_;
}
inline void SkillItem::set_runespecid(::google::protobuf::uint32 value) {
  set_has_runespecid();
  runespecid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillItem.runespecid)
}

// optional uint32 replaceid = 14 [default = 0];
inline bool SkillItem::has_replaceid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SkillItem::set_has_replaceid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void SkillItem::clear_has_replaceid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void SkillItem::clear_replaceid() {
  replaceid_ = 0u;
  clear_has_replaceid();
}
inline ::google::protobuf::uint32 SkillItem::replaceid() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillItem.replaceid)
  return replaceid_;
}
inline void SkillItem::set_replaceid(::google::protobuf::uint32 value) {
  set_has_replaceid();
  replaceid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillItem.replaceid)
}

// optional bool selectswitch = 15 [default = true];
inline bool SkillItem::has_selectswitch() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SkillItem::set_has_selectswitch() {
  _has_bits_[0] |= 0x00004000u;
}
inline void SkillItem::clear_has_selectswitch() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void SkillItem::clear_selectswitch() {
  selectswitch_ = true;
  clear_has_selectswitch();
}
inline bool SkillItem::selectswitch() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillItem.selectswitch)
  return selectswitch_;
}
inline void SkillItem::set_selectswitch(bool value) {
  set_has_selectswitch();
  selectswitch_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillItem.selectswitch)
}

// optional uint32 extralv = 16 [default = 0];
inline bool SkillItem::has_extralv() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void SkillItem::set_has_extralv() {
  _has_bits_[0] |= 0x00008000u;
}
inline void SkillItem::clear_has_extralv() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void SkillItem::clear_extralv() {
  extralv_ = 0u;
  clear_has_extralv();
}
inline ::google::protobuf::uint32 SkillItem::extralv() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillItem.extralv)
  return extralv_;
}
inline void SkillItem::set_extralv(::google::protobuf::uint32 value) {
  set_has_extralv();
  extralv_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillItem.extralv)
}

// optional uint64 ownerid = 17 [default = 0];
inline bool SkillItem::has_ownerid() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void SkillItem::set_has_ownerid() {
  _has_bits_[0] |= 0x00010000u;
}
inline void SkillItem::clear_has_ownerid() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void SkillItem::clear_ownerid() {
  ownerid_ = GOOGLE_ULONGLONG(0);
  clear_has_ownerid();
}
inline ::google::protobuf::uint64 SkillItem::ownerid() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillItem.ownerid)
  return ownerid_;
}
inline void SkillItem::set_ownerid(::google::protobuf::uint64 value) {
  set_has_ownerid();
  ownerid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillItem.ownerid)
}

// optional bool notreset = 18 [default = false];
inline bool SkillItem::has_notreset() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void SkillItem::set_has_notreset() {
  _has_bits_[0] |= 0x00020000u;
}
inline void SkillItem::clear_has_notreset() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void SkillItem::clear_notreset() {
  notreset_ = false;
  clear_has_notreset();
}
inline bool SkillItem::notreset() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillItem.notreset)
  return notreset_;
}
inline void SkillItem::set_notreset(bool value) {
  set_has_notreset();
  notreset_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillItem.notreset)
}

// repeated .Cmd.SkillShortcut shortcuts = 19;
inline int SkillItem::shortcuts_size() const {
  return shortcuts_.size();
}
inline void SkillItem::clear_shortcuts() {
  shortcuts_.Clear();
}
inline const ::Cmd::SkillShortcut& SkillItem::shortcuts(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SkillItem.shortcuts)
  return shortcuts_.Get(index);
}
inline ::Cmd::SkillShortcut* SkillItem::mutable_shortcuts(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.SkillItem.shortcuts)
  return shortcuts_.Mutable(index);
}
inline ::Cmd::SkillShortcut* SkillItem::add_shortcuts() {
  // @@protoc_insertion_point(field_add:Cmd.SkillItem.shortcuts)
  return shortcuts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SkillShortcut >&
SkillItem::shortcuts() const {
  // @@protoc_insertion_point(field_list:Cmd.SkillItem.shortcuts)
  return shortcuts_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::SkillShortcut >*
SkillItem::mutable_shortcuts() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SkillItem.shortcuts)
  return &shortcuts_;
}

// -------------------------------------------------------------------

// SkillData

// optional uint32 usedpoint = 1 [default = 0];
inline bool SkillData::has_usedpoint() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillData::set_has_usedpoint() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillData::clear_has_usedpoint() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillData::clear_usedpoint() {
  usedpoint_ = 0u;
  clear_has_usedpoint();
}
inline ::google::protobuf::uint32 SkillData::usedpoint() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillData.usedpoint)
  return usedpoint_;
}
inline void SkillData::set_usedpoint(::google::protobuf::uint32 value) {
  set_has_usedpoint();
  usedpoint_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillData.usedpoint)
}

// optional .Cmd.EProfession profession = 2 [default = EPROFESSION_MIN];
inline bool SkillData::has_profession() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillData::set_has_profession() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillData::clear_has_profession() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillData::clear_profession() {
  profession_ = 0;
  clear_has_profession();
}
inline ::Cmd::EProfession SkillData::profession() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillData.profession)
  return static_cast< ::Cmd::EProfession >(profession_);
}
inline void SkillData::set_profession(::Cmd::EProfession value) {
  assert(::Cmd::EProfession_IsValid(value));
  set_has_profession();
  profession_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillData.profession)
}

// repeated .Cmd.SkillItem items = 3;
inline int SkillData::items_size() const {
  return items_.size();
}
inline void SkillData::clear_items() {
  items_.Clear();
}
inline const ::Cmd::SkillItem& SkillData::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SkillData.items)
  return items_.Get(index);
}
inline ::Cmd::SkillItem* SkillData::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.SkillData.items)
  return items_.Mutable(index);
}
inline ::Cmd::SkillItem* SkillData::add_items() {
  // @@protoc_insertion_point(field_add:Cmd.SkillData.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem >&
SkillData::items() const {
  // @@protoc_insertion_point(field_list:Cmd.SkillData.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem >*
SkillData::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SkillData.items)
  return &items_;
}

// optional uint32 primarypoint = 4 [default = 0];
inline bool SkillData::has_primarypoint() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SkillData::set_has_primarypoint() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SkillData::clear_has_primarypoint() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SkillData::clear_primarypoint() {
  primarypoint_ = 0u;
  clear_has_primarypoint();
}
inline ::google::protobuf::uint32 SkillData::primarypoint() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillData.primarypoint)
  return primarypoint_;
}
inline void SkillData::set_primarypoint(::google::protobuf::uint32 value) {
  set_has_primarypoint();
  primarypoint_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillData.primarypoint)
}

// -------------------------------------------------------------------

// SkillPos

// optional uint32 id = 1 [default = 0];
inline bool SkillPos::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillPos::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillPos::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillPos::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 SkillPos::id() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillPos.id)
  return id_;
}
inline void SkillPos::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillPos.id)
}

// optional uint32 pos = 2 [default = 0];
inline bool SkillPos::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillPos::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillPos::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillPos::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 SkillPos::pos() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillPos.pos)
  return pos_;
}
inline void SkillPos::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillPos.pos)
}

// optional uint32 sourceid = 3 [default = 0];
inline bool SkillPos::has_sourceid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillPos::set_has_sourceid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillPos::clear_has_sourceid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillPos::clear_sourceid() {
  sourceid_ = 0u;
  clear_has_sourceid();
}
inline ::google::protobuf::uint32 SkillPos::sourceid() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillPos.sourceid)
  return sourceid_;
}
inline void SkillPos::set_sourceid(::google::protobuf::uint32 value) {
  set_has_sourceid();
  sourceid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillPos.sourceid)
}

// -------------------------------------------------------------------

// ReqSkillData

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
inline bool ReqSkillData::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqSkillData::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqSkillData::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqSkillData::clear_cmd() {
  cmd_ = 7;
  clear_has_cmd();
}
inline ::Cmd::Command ReqSkillData::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ReqSkillData.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ReqSkillData::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ReqSkillData.cmd)
}

// optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_SKILLITEM];
inline bool ReqSkillData::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqSkillData::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqSkillData::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqSkillData::clear_param() {
  param_ = 1;
  clear_has_param();
}
inline ::Cmd::SkillParam ReqSkillData::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ReqSkillData.param)
  return static_cast< ::Cmd::SkillParam >(param_);
}
inline void ReqSkillData::set_param(::Cmd::SkillParam value) {
  assert(::Cmd::SkillParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ReqSkillData.param)
}

// repeated .Cmd.SkillData data = 3;
inline int ReqSkillData::data_size() const {
  return data_.size();
}
inline void ReqSkillData::clear_data() {
  data_.Clear();
}
inline const ::Cmd::SkillData& ReqSkillData::data(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.ReqSkillData.data)
  return data_.Get(index);
}
inline ::Cmd::SkillData* ReqSkillData::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.ReqSkillData.data)
  return data_.Mutable(index);
}
inline ::Cmd::SkillData* ReqSkillData::add_data() {
  // @@protoc_insertion_point(field_add:Cmd.ReqSkillData.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SkillData >&
ReqSkillData::data() const {
  // @@protoc_insertion_point(field_list:Cmd.ReqSkillData.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::SkillData >*
ReqSkillData::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.ReqSkillData.data)
  return &data_;
}

// -------------------------------------------------------------------

// SkillUpdate

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
inline bool SkillUpdate::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillUpdate::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillUpdate::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillUpdate::clear_cmd() {
  cmd_ = 7;
  clear_has_cmd();
}
inline ::Cmd::Command SkillUpdate::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillUpdate.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SkillUpdate::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillUpdate.cmd)
}

// optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_SKILLUPDATE];
inline bool SkillUpdate::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillUpdate::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillUpdate::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillUpdate::clear_param() {
  param_ = 2;
  clear_has_param();
}
inline ::Cmd::SkillParam SkillUpdate::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillUpdate.param)
  return static_cast< ::Cmd::SkillParam >(param_);
}
inline void SkillUpdate::set_param(::Cmd::SkillParam value) {
  assert(::Cmd::SkillParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillUpdate.param)
}

// repeated .Cmd.SkillData update = 3;
inline int SkillUpdate::update_size() const {
  return update_.size();
}
inline void SkillUpdate::clear_update() {
  update_.Clear();
}
inline const ::Cmd::SkillData& SkillUpdate::update(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SkillUpdate.update)
  return update_.Get(index);
}
inline ::Cmd::SkillData* SkillUpdate::mutable_update(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.SkillUpdate.update)
  return update_.Mutable(index);
}
inline ::Cmd::SkillData* SkillUpdate::add_update() {
  // @@protoc_insertion_point(field_add:Cmd.SkillUpdate.update)
  return update_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SkillData >&
SkillUpdate::update() const {
  // @@protoc_insertion_point(field_list:Cmd.SkillUpdate.update)
  return update_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::SkillData >*
SkillUpdate::mutable_update() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SkillUpdate.update)
  return &update_;
}

// repeated .Cmd.SkillData del = 4;
inline int SkillUpdate::del_size() const {
  return del_.size();
}
inline void SkillUpdate::clear_del() {
  del_.Clear();
}
inline const ::Cmd::SkillData& SkillUpdate::del(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SkillUpdate.del)
  return del_.Get(index);
}
inline ::Cmd::SkillData* SkillUpdate::mutable_del(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.SkillUpdate.del)
  return del_.Mutable(index);
}
inline ::Cmd::SkillData* SkillUpdate::add_del() {
  // @@protoc_insertion_point(field_add:Cmd.SkillUpdate.del)
  return del_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SkillData >&
SkillUpdate::del() const {
  // @@protoc_insertion_point(field_list:Cmd.SkillUpdate.del)
  return del_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::SkillData >*
SkillUpdate::mutable_del() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SkillUpdate.del)
  return &del_;
}

// -------------------------------------------------------------------

// LevelupSkill

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
inline bool LevelupSkill::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LevelupSkill::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LevelupSkill::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LevelupSkill::clear_cmd() {
  cmd_ = 7;
  clear_has_cmd();
}
inline ::Cmd::Command LevelupSkill::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.LevelupSkill.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void LevelupSkill::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LevelupSkill.cmd)
}

// optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_LEVELUPSKILL];
inline bool LevelupSkill::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LevelupSkill::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LevelupSkill::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LevelupSkill::clear_param() {
  param_ = 3;
  clear_has_param();
}
inline ::Cmd::SkillParam LevelupSkill::param() const {
  // @@protoc_insertion_point(field_get:Cmd.LevelupSkill.param)
  return static_cast< ::Cmd::SkillParam >(param_);
}
inline void LevelupSkill::set_param(::Cmd::SkillParam value) {
  assert(::Cmd::SkillParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LevelupSkill.param)
}

// optional .Cmd.ELevelupType type = 3 [default = ELEVELUPTYPE_MIN];
inline bool LevelupSkill::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LevelupSkill::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LevelupSkill::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LevelupSkill::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::ELevelupType LevelupSkill::type() const {
  // @@protoc_insertion_point(field_get:Cmd.LevelupSkill.type)
  return static_cast< ::Cmd::ELevelupType >(type_);
}
inline void LevelupSkill::set_type(::Cmd::ELevelupType value) {
  assert(::Cmd::ELevelupType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LevelupSkill.type)
}

// repeated uint32 skillids = 4;
inline int LevelupSkill::skillids_size() const {
  return skillids_.size();
}
inline void LevelupSkill::clear_skillids() {
  skillids_.Clear();
}
inline ::google::protobuf::uint32 LevelupSkill::skillids(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.LevelupSkill.skillids)
  return skillids_.Get(index);
}
inline void LevelupSkill::set_skillids(int index, ::google::protobuf::uint32 value) {
  skillids_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.LevelupSkill.skillids)
}
inline void LevelupSkill::add_skillids(::google::protobuf::uint32 value) {
  skillids_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.LevelupSkill.skillids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LevelupSkill::skillids() const {
  // @@protoc_insertion_point(field_list:Cmd.LevelupSkill.skillids)
  return skillids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LevelupSkill::mutable_skillids() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.LevelupSkill.skillids)
  return &skillids_;
}

// -------------------------------------------------------------------

// EquipSkill

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
inline bool EquipSkill::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipSkill::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipSkill::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipSkill::clear_cmd() {
  cmd_ = 7;
  clear_has_cmd();
}
inline ::Cmd::Command EquipSkill::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.EquipSkill.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void EquipSkill::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EquipSkill.cmd)
}

// optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_EQUIPSKILL];
inline bool EquipSkill::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipSkill::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipSkill::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipSkill::clear_param() {
  param_ = 4;
  clear_has_param();
}
inline ::Cmd::SkillParam EquipSkill::param() const {
  // @@protoc_insertion_point(field_get:Cmd.EquipSkill.param)
  return static_cast< ::Cmd::SkillParam >(param_);
}
inline void EquipSkill::set_param(::Cmd::SkillParam value) {
  assert(::Cmd::SkillParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EquipSkill.param)
}

// optional uint32 skillid = 3 [default = 0];
inline bool EquipSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipSkill::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 EquipSkill::skillid() const {
  // @@protoc_insertion_point(field_get:Cmd.EquipSkill.skillid)
  return skillid_;
}
inline void EquipSkill::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EquipSkill.skillid)
}

// optional uint32 pos = 4 [default = 0];
inline bool EquipSkill::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EquipSkill::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EquipSkill::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EquipSkill::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 EquipSkill::pos() const {
  // @@protoc_insertion_point(field_get:Cmd.EquipSkill.pos)
  return pos_;
}
inline void EquipSkill::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EquipSkill.pos)
}

// optional uint32 sourceid = 5 [default = 0];
inline bool EquipSkill::has_sourceid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EquipSkill::set_has_sourceid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EquipSkill::clear_has_sourceid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EquipSkill::clear_sourceid() {
  sourceid_ = 0u;
  clear_has_sourceid();
}
inline ::google::protobuf::uint32 EquipSkill::sourceid() const {
  // @@protoc_insertion_point(field_get:Cmd.EquipSkill.sourceid)
  return sourceid_;
}
inline void EquipSkill::set_sourceid(::google::protobuf::uint32 value) {
  set_has_sourceid();
  sourceid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EquipSkill.sourceid)
}

// optional .Cmd.ESkillShortcut efrom = 6 [default = ESKILLSHORTCUT_MIN];
inline bool EquipSkill::has_efrom() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EquipSkill::set_has_efrom() {
  _has_bits_[0] |= 0x00000020u;
}
inline void EquipSkill::clear_has_efrom() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void EquipSkill::clear_efrom() {
  efrom_ = 0;
  clear_has_efrom();
}
inline ::Cmd::ESkillShortcut EquipSkill::efrom() const {
  // @@protoc_insertion_point(field_get:Cmd.EquipSkill.efrom)
  return static_cast< ::Cmd::ESkillShortcut >(efrom_);
}
inline void EquipSkill::set_efrom(::Cmd::ESkillShortcut value) {
  assert(::Cmd::ESkillShortcut_IsValid(value));
  set_has_efrom();
  efrom_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EquipSkill.efrom)
}

// optional .Cmd.ESkillShortcut eto = 7 [default = ESKILLSHORTCUT_MIN];
inline bool EquipSkill::has_eto() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void EquipSkill::set_has_eto() {
  _has_bits_[0] |= 0x00000040u;
}
inline void EquipSkill::clear_has_eto() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void EquipSkill::clear_eto() {
  eto_ = 0;
  clear_has_eto();
}
inline ::Cmd::ESkillShortcut EquipSkill::eto() const {
  // @@protoc_insertion_point(field_get:Cmd.EquipSkill.eto)
  return static_cast< ::Cmd::ESkillShortcut >(eto_);
}
inline void EquipSkill::set_eto(::Cmd::ESkillShortcut value) {
  assert(::Cmd::ESkillShortcut_IsValid(value));
  set_has_eto();
  eto_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EquipSkill.eto)
}

// optional uint32 beingid = 8 [default = 0];
inline bool EquipSkill::has_beingid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void EquipSkill::set_has_beingid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void EquipSkill::clear_has_beingid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void EquipSkill::clear_beingid() {
  beingid_ = 0u;
  clear_has_beingid();
}
inline ::google::protobuf::uint32 EquipSkill::beingid() const {
  // @@protoc_insertion_point(field_get:Cmd.EquipSkill.beingid)
  return beingid_;
}
inline void EquipSkill::set_beingid(::google::protobuf::uint32 value) {
  set_has_beingid();
  beingid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EquipSkill.beingid)
}

// -------------------------------------------------------------------

// ResetSkill

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
inline bool ResetSkill::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResetSkill::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResetSkill::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResetSkill::clear_cmd() {
  cmd_ = 7;
  clear_has_cmd();
}
inline ::Cmd::Command ResetSkill::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ResetSkill.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ResetSkill::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ResetSkill.cmd)
}

// optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_RESETSKILL];
inline bool ResetSkill::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResetSkill::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResetSkill::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResetSkill::clear_param() {
  param_ = 5;
  clear_has_param();
}
inline ::Cmd::SkillParam ResetSkill::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ResetSkill.param)
  return static_cast< ::Cmd::SkillParam >(param_);
}
inline void ResetSkill::set_param(::Cmd::SkillParam value) {
  assert(::Cmd::SkillParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ResetSkill.param)
}

// -------------------------------------------------------------------

// SkillValidShortcut

// optional .Cmd.ESkillShortcut type = 1 [default = ESKILLSHORTCUT_MIN];
inline bool SkillValidShortcut::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillValidShortcut::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillValidShortcut::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillValidShortcut::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::ESkillShortcut SkillValidShortcut::type() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillValidShortcut.type)
  return static_cast< ::Cmd::ESkillShortcut >(type_);
}
inline void SkillValidShortcut::set_type(::Cmd::ESkillShortcut value) {
  assert(::Cmd::ESkillShortcut_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillValidShortcut.type)
}

// repeated uint32 pos = 2;
inline int SkillValidShortcut::pos_size() const {
  return pos_.size();
}
inline void SkillValidShortcut::clear_pos() {
  pos_.Clear();
}
inline ::google::protobuf::uint32 SkillValidShortcut::pos(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SkillValidShortcut.pos)
  return pos_.Get(index);
}
inline void SkillValidShortcut::set_pos(int index, ::google::protobuf::uint32 value) {
  pos_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.SkillValidShortcut.pos)
}
inline void SkillValidShortcut::add_pos(::google::protobuf::uint32 value) {
  pos_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.SkillValidShortcut.pos)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SkillValidShortcut::pos() const {
  // @@protoc_insertion_point(field_list:Cmd.SkillValidShortcut.pos)
  return pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SkillValidShortcut::mutable_pos() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SkillValidShortcut.pos)
  return &pos_;
}

// -------------------------------------------------------------------

// SkillValidPos

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
inline bool SkillValidPos::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillValidPos::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillValidPos::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillValidPos::clear_cmd() {
  cmd_ = 7;
  clear_has_cmd();
}
inline ::Cmd::Command SkillValidPos::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillValidPos.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SkillValidPos::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillValidPos.cmd)
}

// optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_SKILLVALIDPOS];
inline bool SkillValidPos::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillValidPos::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillValidPos::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillValidPos::clear_param() {
  param_ = 6;
  clear_has_param();
}
inline ::Cmd::SkillParam SkillValidPos::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillValidPos.param)
  return static_cast< ::Cmd::SkillParam >(param_);
}
inline void SkillValidPos::set_param(::Cmd::SkillParam value) {
  assert(::Cmd::SkillParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillValidPos.param)
}

// repeated .Cmd.SkillValidShortcut shortcuts = 3;
inline int SkillValidPos::shortcuts_size() const {
  return shortcuts_.size();
}
inline void SkillValidPos::clear_shortcuts() {
  shortcuts_.Clear();
}
inline const ::Cmd::SkillValidShortcut& SkillValidPos::shortcuts(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SkillValidPos.shortcuts)
  return shortcuts_.Get(index);
}
inline ::Cmd::SkillValidShortcut* SkillValidPos::mutable_shortcuts(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.SkillValidPos.shortcuts)
  return shortcuts_.Mutable(index);
}
inline ::Cmd::SkillValidShortcut* SkillValidPos::add_shortcuts() {
  // @@protoc_insertion_point(field_add:Cmd.SkillValidPos.shortcuts)
  return shortcuts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SkillValidShortcut >&
SkillValidPos::shortcuts() const {
  // @@protoc_insertion_point(field_list:Cmd.SkillValidPos.shortcuts)
  return shortcuts_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::SkillValidShortcut >*
SkillValidPos::mutable_shortcuts() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SkillValidPos.shortcuts)
  return &shortcuts_;
}

// -------------------------------------------------------------------

// ChangeSkillCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
inline bool ChangeSkillCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeSkillCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeSkillCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeSkillCmd::clear_cmd() {
  cmd_ = 7;
  clear_has_cmd();
}
inline ::Cmd::Command ChangeSkillCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeSkillCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ChangeSkillCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeSkillCmd.cmd)
}

// optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_CHANGE_SKILL];
inline bool ChangeSkillCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeSkillCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeSkillCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeSkillCmd::clear_param() {
  param_ = 7;
  clear_has_param();
}
inline ::Cmd::SkillParam ChangeSkillCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeSkillCmd.param)
  return static_cast< ::Cmd::SkillParam >(param_);
}
inline void ChangeSkillCmd::set_param(::Cmd::SkillParam value) {
  assert(::Cmd::SkillParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeSkillCmd.param)
}

// optional uint32 skillid = 3;
inline bool ChangeSkillCmd::has_skillid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChangeSkillCmd::set_has_skillid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChangeSkillCmd::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChangeSkillCmd::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 ChangeSkillCmd::skillid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeSkillCmd.skillid)
  return skillid_;
}
inline void ChangeSkillCmd::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeSkillCmd.skillid)
}

// optional string type = 4;
inline bool ChangeSkillCmd::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChangeSkillCmd::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChangeSkillCmd::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChangeSkillCmd::clear_type() {
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_->clear();
  }
  clear_has_type();
}
inline const ::std::string& ChangeSkillCmd::type() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeSkillCmd.type)
  return *type_;
}
inline void ChangeSkillCmd::set_type(const ::std::string& value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.ChangeSkillCmd.type)
}
inline void ChangeSkillCmd::set_type(const char* value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.ChangeSkillCmd.type)
}
inline void ChangeSkillCmd::set_type(const char* value, size_t size) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.ChangeSkillCmd.type)
}
inline ::std::string* ChangeSkillCmd::mutable_type() {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.ChangeSkillCmd.type)
  return type_;
}
inline ::std::string* ChangeSkillCmd::release_type() {
  clear_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = type_;
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ChangeSkillCmd::set_allocated_type(::std::string* type) {
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (type) {
    set_has_type();
    type_ = type;
  } else {
    clear_has_type();
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ChangeSkillCmd.type)
}

// optional uint32 isadd = 5;
inline bool ChangeSkillCmd::has_isadd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChangeSkillCmd::set_has_isadd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChangeSkillCmd::clear_has_isadd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChangeSkillCmd::clear_isadd() {
  isadd_ = 0u;
  clear_has_isadd();
}
inline ::google::protobuf::uint32 ChangeSkillCmd::isadd() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeSkillCmd.isadd)
  return isadd_;
}
inline void ChangeSkillCmd::set_isadd(::google::protobuf::uint32 value) {
  set_has_isadd();
  isadd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeSkillCmd.isadd)
}

// optional uint32 key = 6;
inline bool ChangeSkillCmd::has_key() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ChangeSkillCmd::set_has_key() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ChangeSkillCmd::clear_has_key() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ChangeSkillCmd::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 ChangeSkillCmd::key() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeSkillCmd.key)
  return key_;
}
inline void ChangeSkillCmd::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeSkillCmd.key)
}

// -------------------------------------------------------------------

// SkillCost

// required uint32 itemid = 1;
inline bool SkillCost::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillCost::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillCost::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillCost::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 SkillCost::itemid() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillCost.itemid)
  return itemid_;
}
inline void SkillCost::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillCost.itemid)
}

// optional int32 changenum = 2 [default = 0];
inline bool SkillCost::has_changenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillCost::set_has_changenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillCost::clear_has_changenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillCost::clear_changenum() {
  changenum_ = 0;
  clear_has_changenum();
}
inline ::google::protobuf::int32 SkillCost::changenum() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillCost.changenum)
  return changenum_;
}
inline void SkillCost::set_changenum(::google::protobuf::int32 value) {
  set_has_changenum();
  changenum_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillCost.changenum)
}

// optional int32 changeper = 3 [default = 0];
inline bool SkillCost::has_changeper() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillCost::set_has_changeper() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillCost::clear_has_changeper() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillCost::clear_changeper() {
  changeper_ = 0;
  clear_has_changeper();
}
inline ::google::protobuf::int32 SkillCost::changeper() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillCost.changeper)
  return changeper_;
}
inline void SkillCost::set_changeper(::google::protobuf::int32 value) {
  set_has_changeper();
  changeper_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillCost.changeper)
}

// -------------------------------------------------------------------

// SpecSkillInfo

// required uint32 id = 1;
inline bool SpecSkillInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpecSkillInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpecSkillInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpecSkillInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 SpecSkillInfo::id() const {
  // @@protoc_insertion_point(field_get:Cmd.SpecSkillInfo.id)
  return id_;
}
inline void SpecSkillInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SpecSkillInfo.id)
}

// repeated .Cmd.UserAttr attrs = 2;
inline int SpecSkillInfo::attrs_size() const {
  return attrs_.size();
}
inline void SpecSkillInfo::clear_attrs() {
  attrs_.Clear();
}
inline const ::Cmd::UserAttr& SpecSkillInfo::attrs(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SpecSkillInfo.attrs)
  return attrs_.Get(index);
}
inline ::Cmd::UserAttr* SpecSkillInfo::mutable_attrs(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.SpecSkillInfo.attrs)
  return attrs_.Mutable(index);
}
inline ::Cmd::UserAttr* SpecSkillInfo::add_attrs() {
  // @@protoc_insertion_point(field_add:Cmd.SpecSkillInfo.attrs)
  return attrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >&
SpecSkillInfo::attrs() const {
  // @@protoc_insertion_point(field_list:Cmd.SpecSkillInfo.attrs)
  return attrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >*
SpecSkillInfo::mutable_attrs() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SpecSkillInfo.attrs)
  return &attrs_;
}

// repeated .Cmd.SkillCost cost = 3;
inline int SpecSkillInfo::cost_size() const {
  return cost_.size();
}
inline void SpecSkillInfo::clear_cost() {
  cost_.Clear();
}
inline const ::Cmd::SkillCost& SpecSkillInfo::cost(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SpecSkillInfo.cost)
  return cost_.Get(index);
}
inline ::Cmd::SkillCost* SpecSkillInfo::mutable_cost(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.SpecSkillInfo.cost)
  return cost_.Mutable(index);
}
inline ::Cmd::SkillCost* SpecSkillInfo::add_cost() {
  // @@protoc_insertion_point(field_add:Cmd.SpecSkillInfo.cost)
  return cost_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SkillCost >&
SpecSkillInfo::cost() const {
  // @@protoc_insertion_point(field_list:Cmd.SpecSkillInfo.cost)
  return cost_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::SkillCost >*
SpecSkillInfo::mutable_cost() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SpecSkillInfo.cost)
  return &cost_;
}

// optional int32 changerange = 4 [default = 0];
inline bool SpecSkillInfo::has_changerange() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SpecSkillInfo::set_has_changerange() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SpecSkillInfo::clear_has_changerange() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SpecSkillInfo::clear_changerange() {
  changerange_ = 0;
  clear_has_changerange();
}
inline ::google::protobuf::int32 SpecSkillInfo::changerange() const {
  // @@protoc_insertion_point(field_get:Cmd.SpecSkillInfo.changerange)
  return changerange_;
}
inline void SpecSkillInfo::set_changerange(::google::protobuf::int32 value) {
  set_has_changerange();
  changerange_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SpecSkillInfo.changerange)
}

// optional int32 changenum = 5 [default = 0];
inline bool SpecSkillInfo::has_changenum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SpecSkillInfo::set_has_changenum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SpecSkillInfo::clear_has_changenum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SpecSkillInfo::clear_changenum() {
  changenum_ = 0;
  clear_has_changenum();
}
inline ::google::protobuf::int32 SpecSkillInfo::changenum() const {
  // @@protoc_insertion_point(field_get:Cmd.SpecSkillInfo.changenum)
  return changenum_;
}
inline void SpecSkillInfo::set_changenum(::google::protobuf::int32 value) {
  set_has_changenum();
  changenum_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SpecSkillInfo.changenum)
}

// optional int32 changeready = 6 [default = 0];
inline bool SpecSkillInfo::has_changeready() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SpecSkillInfo::set_has_changeready() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SpecSkillInfo::clear_has_changeready() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SpecSkillInfo::clear_changeready() {
  changeready_ = 0;
  clear_has_changeready();
}
inline ::google::protobuf::int32 SpecSkillInfo::changeready() const {
  // @@protoc_insertion_point(field_get:Cmd.SpecSkillInfo.changeready)
  return changeready_;
}
inline void SpecSkillInfo::set_changeready(::google::protobuf::int32 value) {
  set_has_changeready();
  changeready_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SpecSkillInfo.changeready)
}

// optional bool neednoitem = 7 [default = false];
inline bool SpecSkillInfo::has_neednoitem() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SpecSkillInfo::set_has_neednoitem() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SpecSkillInfo::clear_has_neednoitem() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SpecSkillInfo::clear_neednoitem() {
  neednoitem_ = false;
  clear_has_neednoitem();
}
inline bool SpecSkillInfo::neednoitem() const {
  // @@protoc_insertion_point(field_get:Cmd.SpecSkillInfo.neednoitem)
  return neednoitem_;
}
inline void SpecSkillInfo::set_neednoitem(bool value) {
  set_has_neednoitem();
  neednoitem_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SpecSkillInfo.neednoitem)
}

// -------------------------------------------------------------------

// UpSkillInfoSkillCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
inline bool UpSkillInfoSkillCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpSkillInfoSkillCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpSkillInfoSkillCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpSkillInfoSkillCmd::clear_cmd() {
  cmd_ = 7;
  clear_has_cmd();
}
inline ::Cmd::Command UpSkillInfoSkillCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UpSkillInfoSkillCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UpSkillInfoSkillCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpSkillInfoSkillCmd.cmd)
}

// optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_SPEC_SKILL_INFO];
inline bool UpSkillInfoSkillCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpSkillInfoSkillCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpSkillInfoSkillCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpSkillInfoSkillCmd::clear_param() {
  param_ = 8;
  clear_has_param();
}
inline ::Cmd::SkillParam UpSkillInfoSkillCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UpSkillInfoSkillCmd.param)
  return static_cast< ::Cmd::SkillParam >(param_);
}
inline void UpSkillInfoSkillCmd::set_param(::Cmd::SkillParam value) {
  assert(::Cmd::SkillParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpSkillInfoSkillCmd.param)
}

// repeated .Cmd.SpecSkillInfo specinfo = 3;
inline int UpSkillInfoSkillCmd::specinfo_size() const {
  return specinfo_.size();
}
inline void UpSkillInfoSkillCmd::clear_specinfo() {
  specinfo_.Clear();
}
inline const ::Cmd::SpecSkillInfo& UpSkillInfoSkillCmd::specinfo(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UpSkillInfoSkillCmd.specinfo)
  return specinfo_.Get(index);
}
inline ::Cmd::SpecSkillInfo* UpSkillInfoSkillCmd::mutable_specinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.UpSkillInfoSkillCmd.specinfo)
  return specinfo_.Mutable(index);
}
inline ::Cmd::SpecSkillInfo* UpSkillInfoSkillCmd::add_specinfo() {
  // @@protoc_insertion_point(field_add:Cmd.UpSkillInfoSkillCmd.specinfo)
  return specinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SpecSkillInfo >&
UpSkillInfoSkillCmd::specinfo() const {
  // @@protoc_insertion_point(field_list:Cmd.UpSkillInfoSkillCmd.specinfo)
  return specinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::SpecSkillInfo >*
UpSkillInfoSkillCmd::mutable_specinfo() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UpSkillInfoSkillCmd.specinfo)
  return &specinfo_;
}

// optional .Cmd.SpecSkillInfo allskillInfo = 4;
inline bool UpSkillInfoSkillCmd::has_allskillinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpSkillInfoSkillCmd::set_has_allskillinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpSkillInfoSkillCmd::clear_has_allskillinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpSkillInfoSkillCmd::clear_allskillinfo() {
  if (allskillinfo_ != NULL) allskillinfo_->::Cmd::SpecSkillInfo::Clear();
  clear_has_allskillinfo();
}
inline const ::Cmd::SpecSkillInfo& UpSkillInfoSkillCmd::allskillinfo() const {
  // @@protoc_insertion_point(field_get:Cmd.UpSkillInfoSkillCmd.allskillInfo)
  return allskillinfo_ != NULL ? *allskillinfo_ : *default_instance_->allskillinfo_;
}
inline ::Cmd::SpecSkillInfo* UpSkillInfoSkillCmd::mutable_allskillinfo() {
  set_has_allskillinfo();
  if (allskillinfo_ == NULL) allskillinfo_ = new ::Cmd::SpecSkillInfo;
  // @@protoc_insertion_point(field_mutable:Cmd.UpSkillInfoSkillCmd.allskillInfo)
  return allskillinfo_;
}
inline ::Cmd::SpecSkillInfo* UpSkillInfoSkillCmd::release_allskillinfo() {
  clear_has_allskillinfo();
  ::Cmd::SpecSkillInfo* temp = allskillinfo_;
  allskillinfo_ = NULL;
  return temp;
}
inline void UpSkillInfoSkillCmd::set_allocated_allskillinfo(::Cmd::SpecSkillInfo* allskillinfo) {
  delete allskillinfo_;
  allskillinfo_ = allskillinfo;
  if (allskillinfo) {
    set_has_allskillinfo();
  } else {
    clear_has_allskillinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.UpSkillInfoSkillCmd.allskillInfo)
}

// -------------------------------------------------------------------

// SelectRuneSkillCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
inline bool SelectRuneSkillCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SelectRuneSkillCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SelectRuneSkillCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SelectRuneSkillCmd::clear_cmd() {
  cmd_ = 7;
  clear_has_cmd();
}
inline ::Cmd::Command SelectRuneSkillCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SelectRuneSkillCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SelectRuneSkillCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SelectRuneSkillCmd.cmd)
}

// optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_SELECT_RUNE];
inline bool SelectRuneSkillCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SelectRuneSkillCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SelectRuneSkillCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SelectRuneSkillCmd::clear_param() {
  param_ = 9;
  clear_has_param();
}
inline ::Cmd::SkillParam SelectRuneSkillCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SelectRuneSkillCmd.param)
  return static_cast< ::Cmd::SkillParam >(param_);
}
inline void SelectRuneSkillCmd::set_param(::Cmd::SkillParam value) {
  assert(::Cmd::SkillParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SelectRuneSkillCmd.param)
}

// required uint32 skillid = 3;
inline bool SelectRuneSkillCmd::has_skillid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SelectRuneSkillCmd::set_has_skillid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SelectRuneSkillCmd::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SelectRuneSkillCmd::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 SelectRuneSkillCmd::skillid() const {
  // @@protoc_insertion_point(field_get:Cmd.SelectRuneSkillCmd.skillid)
  return skillid_;
}
inline void SelectRuneSkillCmd::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SelectRuneSkillCmd.skillid)
}

// optional uint32 runespecid = 4 [default = 0];
inline bool SelectRuneSkillCmd::has_runespecid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SelectRuneSkillCmd::set_has_runespecid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SelectRuneSkillCmd::clear_has_runespecid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SelectRuneSkillCmd::clear_runespecid() {
  runespecid_ = 0u;
  clear_has_runespecid();
}
inline ::google::protobuf::uint32 SelectRuneSkillCmd::runespecid() const {
  // @@protoc_insertion_point(field_get:Cmd.SelectRuneSkillCmd.runespecid)
  return runespecid_;
}
inline void SelectRuneSkillCmd::set_runespecid(::google::protobuf::uint32 value) {
  set_has_runespecid();
  runespecid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SelectRuneSkillCmd.runespecid)
}

// optional bool selectswitch = 5 [default = true];
inline bool SelectRuneSkillCmd::has_selectswitch() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SelectRuneSkillCmd::set_has_selectswitch() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SelectRuneSkillCmd::clear_has_selectswitch() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SelectRuneSkillCmd::clear_selectswitch() {
  selectswitch_ = true;
  clear_has_selectswitch();
}
inline bool SelectRuneSkillCmd::selectswitch() const {
  // @@protoc_insertion_point(field_get:Cmd.SelectRuneSkillCmd.selectswitch)
  return selectswitch_;
}
inline void SelectRuneSkillCmd::set_selectswitch(bool value) {
  set_has_selectswitch();
  selectswitch_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SelectRuneSkillCmd.selectswitch)
}

// optional uint32 beingid = 6 [default = 0];
inline bool SelectRuneSkillCmd::has_beingid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SelectRuneSkillCmd::set_has_beingid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SelectRuneSkillCmd::clear_has_beingid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SelectRuneSkillCmd::clear_beingid() {
  beingid_ = 0u;
  clear_has_beingid();
}
inline ::google::protobuf::uint32 SelectRuneSkillCmd::beingid() const {
  // @@protoc_insertion_point(field_get:Cmd.SelectRuneSkillCmd.beingid)
  return beingid_;
}
inline void SelectRuneSkillCmd::set_beingid(::google::protobuf::uint32 value) {
  set_has_beingid();
  beingid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SelectRuneSkillCmd.beingid)
}

// -------------------------------------------------------------------

// MarkSkillNpcSkillCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
inline bool MarkSkillNpcSkillCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarkSkillNpcSkillCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarkSkillNpcSkillCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarkSkillNpcSkillCmd::clear_cmd() {
  cmd_ = 7;
  clear_has_cmd();
}
inline ::Cmd::Command MarkSkillNpcSkillCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.MarkSkillNpcSkillCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void MarkSkillNpcSkillCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MarkSkillNpcSkillCmd.cmd)
}

// optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_MARK_SKILLNPC];
inline bool MarkSkillNpcSkillCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MarkSkillNpcSkillCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MarkSkillNpcSkillCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MarkSkillNpcSkillCmd::clear_param() {
  param_ = 10;
  clear_has_param();
}
inline ::Cmd::SkillParam MarkSkillNpcSkillCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.MarkSkillNpcSkillCmd.param)
  return static_cast< ::Cmd::SkillParam >(param_);
}
inline void MarkSkillNpcSkillCmd::set_param(::Cmd::SkillParam value) {
  assert(::Cmd::SkillParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MarkSkillNpcSkillCmd.param)
}

// required uint64 npcguid = 3;
inline bool MarkSkillNpcSkillCmd::has_npcguid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MarkSkillNpcSkillCmd::set_has_npcguid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MarkSkillNpcSkillCmd::clear_has_npcguid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MarkSkillNpcSkillCmd::clear_npcguid() {
  npcguid_ = GOOGLE_ULONGLONG(0);
  clear_has_npcguid();
}
inline ::google::protobuf::uint64 MarkSkillNpcSkillCmd::npcguid() const {
  // @@protoc_insertion_point(field_get:Cmd.MarkSkillNpcSkillCmd.npcguid)
  return npcguid_;
}
inline void MarkSkillNpcSkillCmd::set_npcguid(::google::protobuf::uint64 value) {
  set_has_npcguid();
  npcguid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MarkSkillNpcSkillCmd.npcguid)
}

// required uint32 skillid = 4;
inline bool MarkSkillNpcSkillCmd::has_skillid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MarkSkillNpcSkillCmd::set_has_skillid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MarkSkillNpcSkillCmd::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MarkSkillNpcSkillCmd::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 MarkSkillNpcSkillCmd::skillid() const {
  // @@protoc_insertion_point(field_get:Cmd.MarkSkillNpcSkillCmd.skillid)
  return skillid_;
}
inline void MarkSkillNpcSkillCmd::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MarkSkillNpcSkillCmd.skillid)
}

// -------------------------------------------------------------------

// TriggerSkillNpcSkillCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
inline bool TriggerSkillNpcSkillCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TriggerSkillNpcSkillCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TriggerSkillNpcSkillCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TriggerSkillNpcSkillCmd::clear_cmd() {
  cmd_ = 7;
  clear_has_cmd();
}
inline ::Cmd::Command TriggerSkillNpcSkillCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TriggerSkillNpcSkillCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TriggerSkillNpcSkillCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TriggerSkillNpcSkillCmd.cmd)
}

// optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_TRGGER_SKILLNPC];
inline bool TriggerSkillNpcSkillCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TriggerSkillNpcSkillCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TriggerSkillNpcSkillCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TriggerSkillNpcSkillCmd::clear_param() {
  param_ = 11;
  clear_has_param();
}
inline ::Cmd::SkillParam TriggerSkillNpcSkillCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TriggerSkillNpcSkillCmd.param)
  return static_cast< ::Cmd::SkillParam >(param_);
}
inline void TriggerSkillNpcSkillCmd::set_param(::Cmd::SkillParam value) {
  assert(::Cmd::SkillParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TriggerSkillNpcSkillCmd.param)
}

// required uint64 npcguid = 3;
inline bool TriggerSkillNpcSkillCmd::has_npcguid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TriggerSkillNpcSkillCmd::set_has_npcguid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TriggerSkillNpcSkillCmd::clear_has_npcguid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TriggerSkillNpcSkillCmd::clear_npcguid() {
  npcguid_ = GOOGLE_ULONGLONG(0);
  clear_has_npcguid();
}
inline ::google::protobuf::uint64 TriggerSkillNpcSkillCmd::npcguid() const {
  // @@protoc_insertion_point(field_get:Cmd.TriggerSkillNpcSkillCmd.npcguid)
  return npcguid_;
}
inline void TriggerSkillNpcSkillCmd::set_npcguid(::google::protobuf::uint64 value) {
  set_has_npcguid();
  npcguid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TriggerSkillNpcSkillCmd.npcguid)
}

// optional .Cmd.ETrigSkillType etype = 4 [default = ETRIGTSKILL_MIN];
inline bool TriggerSkillNpcSkillCmd::has_etype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TriggerSkillNpcSkillCmd::set_has_etype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TriggerSkillNpcSkillCmd::clear_has_etype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TriggerSkillNpcSkillCmd::clear_etype() {
  etype_ = 0;
  clear_has_etype();
}
inline ::Cmd::ETrigSkillType TriggerSkillNpcSkillCmd::etype() const {
  // @@protoc_insertion_point(field_get:Cmd.TriggerSkillNpcSkillCmd.etype)
  return static_cast< ::Cmd::ETrigSkillType >(etype_);
}
inline void TriggerSkillNpcSkillCmd::set_etype(::Cmd::ETrigSkillType value) {
  assert(::Cmd::ETrigSkillType_IsValid(value));
  set_has_etype();
  etype_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TriggerSkillNpcSkillCmd.etype)
}

// -------------------------------------------------------------------

// SkillOption

// required .Cmd.ESkillOption opt = 1;
inline bool SkillOption::has_opt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillOption::set_has_opt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillOption::clear_has_opt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillOption::clear_opt() {
  opt_ = 1;
  clear_has_opt();
}
inline ::Cmd::ESkillOption SkillOption::opt() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillOption.opt)
  return static_cast< ::Cmd::ESkillOption >(opt_);
}
inline void SkillOption::set_opt(::Cmd::ESkillOption value) {
  assert(::Cmd::ESkillOption_IsValid(value));
  set_has_opt();
  opt_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillOption.opt)
}

// optional uint32 value = 2 [default = 0];
inline bool SkillOption::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillOption::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillOption::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillOption::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 SkillOption::value() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillOption.value)
  return value_;
}
inline void SkillOption::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillOption.value)
}

// -------------------------------------------------------------------

// SkillOptionSkillCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
inline bool SkillOptionSkillCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillOptionSkillCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillOptionSkillCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillOptionSkillCmd::clear_cmd() {
  cmd_ = 7;
  clear_has_cmd();
}
inline ::Cmd::Command SkillOptionSkillCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillOptionSkillCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SkillOptionSkillCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillOptionSkillCmd.cmd)
}

// optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_SKILLOPTIONS];
inline bool SkillOptionSkillCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillOptionSkillCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillOptionSkillCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillOptionSkillCmd::clear_param() {
  param_ = 12;
  clear_has_param();
}
inline ::Cmd::SkillParam SkillOptionSkillCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillOptionSkillCmd.param)
  return static_cast< ::Cmd::SkillParam >(param_);
}
inline void SkillOptionSkillCmd::set_param(::Cmd::SkillParam value) {
  assert(::Cmd::SkillParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillOptionSkillCmd.param)
}

// optional .Cmd.SkillOption set_opt = 3;
inline bool SkillOptionSkillCmd::has_set_opt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillOptionSkillCmd::set_has_set_opt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillOptionSkillCmd::clear_has_set_opt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillOptionSkillCmd::clear_set_opt() {
  if (set_opt_ != NULL) set_opt_->::Cmd::SkillOption::Clear();
  clear_has_set_opt();
}
inline const ::Cmd::SkillOption& SkillOptionSkillCmd::set_opt() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillOptionSkillCmd.set_opt)
  return set_opt_ != NULL ? *set_opt_ : *default_instance_->set_opt_;
}
inline ::Cmd::SkillOption* SkillOptionSkillCmd::mutable_set_opt() {
  set_has_set_opt();
  if (set_opt_ == NULL) set_opt_ = new ::Cmd::SkillOption;
  // @@protoc_insertion_point(field_mutable:Cmd.SkillOptionSkillCmd.set_opt)
  return set_opt_;
}
inline ::Cmd::SkillOption* SkillOptionSkillCmd::release_set_opt() {
  clear_has_set_opt();
  ::Cmd::SkillOption* temp = set_opt_;
  set_opt_ = NULL;
  return temp;
}
inline void SkillOptionSkillCmd::set_allocated_set_opt(::Cmd::SkillOption* set_opt) {
  delete set_opt_;
  set_opt_ = set_opt;
  if (set_opt) {
    set_has_set_opt();
  } else {
    clear_has_set_opt();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.SkillOptionSkillCmd.set_opt)
}

// repeated .Cmd.SkillOption all_opts = 4;
inline int SkillOptionSkillCmd::all_opts_size() const {
  return all_opts_.size();
}
inline void SkillOptionSkillCmd::clear_all_opts() {
  all_opts_.Clear();
}
inline const ::Cmd::SkillOption& SkillOptionSkillCmd::all_opts(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SkillOptionSkillCmd.all_opts)
  return all_opts_.Get(index);
}
inline ::Cmd::SkillOption* SkillOptionSkillCmd::mutable_all_opts(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.SkillOptionSkillCmd.all_opts)
  return all_opts_.Mutable(index);
}
inline ::Cmd::SkillOption* SkillOptionSkillCmd::add_all_opts() {
  // @@protoc_insertion_point(field_add:Cmd.SkillOptionSkillCmd.all_opts)
  return all_opts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SkillOption >&
SkillOptionSkillCmd::all_opts() const {
  // @@protoc_insertion_point(field_list:Cmd.SkillOptionSkillCmd.all_opts)
  return all_opts_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::SkillOption >*
SkillOptionSkillCmd::mutable_all_opts() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SkillOptionSkillCmd.all_opts)
  return &all_opts_;
}

// -------------------------------------------------------------------

// DynamicSkillCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
inline bool DynamicSkillCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DynamicSkillCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DynamicSkillCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DynamicSkillCmd::clear_cmd() {
  cmd_ = 7;
  clear_has_cmd();
}
inline ::Cmd::Command DynamicSkillCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.DynamicSkillCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void DynamicSkillCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DynamicSkillCmd.cmd)
}

// optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_DYNAMIC_SKILL_INFO];
inline bool DynamicSkillCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DynamicSkillCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DynamicSkillCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DynamicSkillCmd::clear_param() {
  param_ = 13;
  clear_has_param();
}
inline ::Cmd::SkillParam DynamicSkillCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.DynamicSkillCmd.param)
  return static_cast< ::Cmd::SkillParam >(param_);
}
inline void DynamicSkillCmd::set_param(::Cmd::SkillParam value) {
  assert(::Cmd::SkillParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DynamicSkillCmd.param)
}

// repeated .Cmd.SkillItem skills = 3;
inline int DynamicSkillCmd::skills_size() const {
  return skills_.size();
}
inline void DynamicSkillCmd::clear_skills() {
  skills_.Clear();
}
inline const ::Cmd::SkillItem& DynamicSkillCmd::skills(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.DynamicSkillCmd.skills)
  return skills_.Get(index);
}
inline ::Cmd::SkillItem* DynamicSkillCmd::mutable_skills(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.DynamicSkillCmd.skills)
  return skills_.Mutable(index);
}
inline ::Cmd::SkillItem* DynamicSkillCmd::add_skills() {
  // @@protoc_insertion_point(field_add:Cmd.DynamicSkillCmd.skills)
  return skills_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem >&
DynamicSkillCmd::skills() const {
  // @@protoc_insertion_point(field_list:Cmd.DynamicSkillCmd.skills)
  return skills_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem >*
DynamicSkillCmd::mutable_skills() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.DynamicSkillCmd.skills)
  return &skills_;
}

// -------------------------------------------------------------------

// UpdateDynamicSkillCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
inline bool UpdateDynamicSkillCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateDynamicSkillCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateDynamicSkillCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateDynamicSkillCmd::clear_cmd() {
  cmd_ = 7;
  clear_has_cmd();
}
inline ::Cmd::Command UpdateDynamicSkillCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateDynamicSkillCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UpdateDynamicSkillCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateDynamicSkillCmd.cmd)
}

// optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_DYNAMIC_SKILL_UPDATE];
inline bool UpdateDynamicSkillCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateDynamicSkillCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateDynamicSkillCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateDynamicSkillCmd::clear_param() {
  param_ = 14;
  clear_has_param();
}
inline ::Cmd::SkillParam UpdateDynamicSkillCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateDynamicSkillCmd.param)
  return static_cast< ::Cmd::SkillParam >(param_);
}
inline void UpdateDynamicSkillCmd::set_param(::Cmd::SkillParam value) {
  assert(::Cmd::SkillParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateDynamicSkillCmd.param)
}

// repeated .Cmd.SkillItem update = 3;
inline int UpdateDynamicSkillCmd::update_size() const {
  return update_.size();
}
inline void UpdateDynamicSkillCmd::clear_update() {
  update_.Clear();
}
inline const ::Cmd::SkillItem& UpdateDynamicSkillCmd::update(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateDynamicSkillCmd.update)
  return update_.Get(index);
}
inline ::Cmd::SkillItem* UpdateDynamicSkillCmd::mutable_update(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.UpdateDynamicSkillCmd.update)
  return update_.Mutable(index);
}
inline ::Cmd::SkillItem* UpdateDynamicSkillCmd::add_update() {
  // @@protoc_insertion_point(field_add:Cmd.UpdateDynamicSkillCmd.update)
  return update_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem >&
UpdateDynamicSkillCmd::update() const {
  // @@protoc_insertion_point(field_list:Cmd.UpdateDynamicSkillCmd.update)
  return update_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem >*
UpdateDynamicSkillCmd::mutable_update() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UpdateDynamicSkillCmd.update)
  return &update_;
}

// repeated .Cmd.SkillItem del = 4;
inline int UpdateDynamicSkillCmd::del_size() const {
  return del_.size();
}
inline void UpdateDynamicSkillCmd::clear_del() {
  del_.Clear();
}
inline const ::Cmd::SkillItem& UpdateDynamicSkillCmd::del(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateDynamicSkillCmd.del)
  return del_.Get(index);
}
inline ::Cmd::SkillItem* UpdateDynamicSkillCmd::mutable_del(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.UpdateDynamicSkillCmd.del)
  return del_.Mutable(index);
}
inline ::Cmd::SkillItem* UpdateDynamicSkillCmd::add_del() {
  // @@protoc_insertion_point(field_add:Cmd.UpdateDynamicSkillCmd.del)
  return del_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem >&
UpdateDynamicSkillCmd::del() const {
  // @@protoc_insertion_point(field_list:Cmd.UpdateDynamicSkillCmd.del)
  return del_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem >*
UpdateDynamicSkillCmd::mutable_del() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UpdateDynamicSkillCmd.del)
  return &del_;
}

// -------------------------------------------------------------------

// SyncDestPosSkillCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_SKILL_PROTOCMD];
inline bool SyncDestPosSkillCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncDestPosSkillCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncDestPosSkillCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncDestPosSkillCmd::clear_cmd() {
  cmd_ = 7;
  clear_has_cmd();
}
inline ::Cmd::Command SyncDestPosSkillCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncDestPosSkillCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SyncDestPosSkillCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncDestPosSkillCmd.cmd)
}

// optional .Cmd.SkillParam param = 2 [default = SKILLPARAM_SYNC_DEST_POS];
inline bool SyncDestPosSkillCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncDestPosSkillCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncDestPosSkillCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncDestPosSkillCmd::clear_param() {
  param_ = 15;
  clear_has_param();
}
inline ::Cmd::SkillParam SyncDestPosSkillCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncDestPosSkillCmd.param)
  return static_cast< ::Cmd::SkillParam >(param_);
}
inline void SyncDestPosSkillCmd::set_param(::Cmd::SkillParam value) {
  assert(::Cmd::SkillParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncDestPosSkillCmd.param)
}

// optional uint32 skillid = 3 [default = 0];
inline bool SyncDestPosSkillCmd::has_skillid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SyncDestPosSkillCmd::set_has_skillid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SyncDestPosSkillCmd::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SyncDestPosSkillCmd::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 SyncDestPosSkillCmd::skillid() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncDestPosSkillCmd.skillid)
  return skillid_;
}
inline void SyncDestPosSkillCmd::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncDestPosSkillCmd.skillid)
}

// optional .Cmd.ScenePos pos = 4;
inline bool SyncDestPosSkillCmd::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SyncDestPosSkillCmd::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SyncDestPosSkillCmd::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SyncDestPosSkillCmd::clear_pos() {
  if (pos_ != NULL) pos_->::Cmd::ScenePos::Clear();
  clear_has_pos();
}
inline const ::Cmd::ScenePos& SyncDestPosSkillCmd::pos() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncDestPosSkillCmd.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Cmd::ScenePos* SyncDestPosSkillCmd::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Cmd::ScenePos;
  // @@protoc_insertion_point(field_mutable:Cmd.SyncDestPosSkillCmd.pos)
  return pos_;
}
inline ::Cmd::ScenePos* SyncDestPosSkillCmd::release_pos() {
  clear_has_pos();
  ::Cmd::ScenePos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void SyncDestPosSkillCmd::set_allocated_pos(::Cmd::ScenePos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.SyncDestPosSkillCmd.pos)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cmd

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Cmd::SkillParam> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::SkillParam>() {
  return ::Cmd::SkillParam_descriptor();
}
template <> struct is_proto_enum< ::Cmd::ESkillShortcut> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::ESkillShortcut>() {
  return ::Cmd::ESkillShortcut_descriptor();
}
template <> struct is_proto_enum< ::Cmd::ELevelupType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::ELevelupType>() {
  return ::Cmd::ELevelupType_descriptor();
}
template <> struct is_proto_enum< ::Cmd::ETrigSkillType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::ETrigSkillType>() {
  return ::Cmd::ETrigSkillType_descriptor();
}
template <> struct is_proto_enum< ::Cmd::ESkillOption> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::ESkillOption>() {
  return ::Cmd::ESkillOption_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SceneSkill_2eproto__INCLUDED
