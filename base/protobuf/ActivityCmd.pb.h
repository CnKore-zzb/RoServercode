// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ActivityCmd.proto

#ifndef PROTOBUF_ActivityCmd_2eproto__INCLUDED
#define PROTOBUF_ActivityCmd_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "xCmd.pb.h"
#include "ProtoCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace Cmd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ActivityCmd_2eproto();
void protobuf_AssignDesc_ActivityCmd_2eproto();
void protobuf_ShutdownFile_ActivityCmd_2eproto();

class StartActCmd;
class StopActCmd;
class BCatUFOPosActCmd;
class ActProgressNtfCmd;
class StartGlobalActCmd;
class ActivityProgress;

enum ActivityParam {
  ACTIVITYPARAM_ACT_START = 1,
  ACTIVITYPARAM_BCAT_UFOPOS = 2,
  ACTIVITYPARAM_PROGRESS_NTF = 3,
  ACTIVITYPARAM_ACT_STOP = 4,
  ACTIVITYPARAM_GLOBAL_ACT_START = 5
};
bool ActivityParam_IsValid(int value);
const ActivityParam ActivityParam_MIN = ACTIVITYPARAM_ACT_START;
const ActivityParam ActivityParam_MAX = ACTIVITYPARAM_GLOBAL_ACT_START;
const int ActivityParam_ARRAYSIZE = ActivityParam_MAX + 1;

const ::google::protobuf::EnumDescriptor* ActivityParam_descriptor();
inline const ::std::string& ActivityParam_Name(ActivityParam value) {
  return ::google::protobuf::internal::NameOfEnum(
    ActivityParam_descriptor(), value);
}
inline bool ActivityParam_Parse(
    const ::std::string& name, ActivityParam* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ActivityParam>(
    ActivityParam_descriptor(), name, value);
}
enum GlobalActivityType {
  GACTIVITY_MIN = 0,
  GACTIVITY_AUGURY = 14,
  GACTIVITY_GUILD_QUEST = 15,
  GACTIVITY_GUILD_DONATE = 16,
  GACTIVITY_GUILD_FUBEN = 17,
  GACTIVITY_NOVICE_WELFARE = 18,
  GACTIVITY_NORMAL_REFINE = 20,
  GACTIVITY_SAFE_REFINE = 21,
  GACTIVITY_SAFE_REFINE_DISCOUNT = 22,
  GACTIVITY_RECALL = 23,
  GACTIVITY_SPRING_LOTTERY = 24,
  GACTIVITY_WEDDING_SERVICE = 26,
  GACTIVITY_FOOD_RECIPE = 27,
  GACTIVITY_CHARGE_EXTRA_REWARD = 30,
  GACTIVITY_CHARGE_DISCOUNT = 31,
  GACTIVITY_CHARGE_EXTRA_COUNT = 32,
  GACTIVITY_ALTMAN = 101,
  GACTIVITY_MAX = 102
};
bool GlobalActivityType_IsValid(int value);
const GlobalActivityType GlobalActivityType_MIN = GACTIVITY_MIN;
const GlobalActivityType GlobalActivityType_MAX = GACTIVITY_MAX;
const int GlobalActivityType_ARRAYSIZE = GlobalActivityType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GlobalActivityType_descriptor();
inline const ::std::string& GlobalActivityType_Name(GlobalActivityType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GlobalActivityType_descriptor(), value);
}
inline bool GlobalActivityType_Parse(
    const ::std::string& name, GlobalActivityType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GlobalActivityType>(
    GlobalActivityType_descriptor(), name, value);
}
enum EActProgress {
  EACTPROGRESS_NONE = 0,
  EACTPROGRESS_1 = 1,
  EACTPROGRESS_2 = 2,
  EACTPROGRESS_3 = 3,
  EACTPROGRESS_4 = 4,
  EACTPROGRESS_5 = 5,
  EACTPROGRESS_6 = 6,
  EACTPROGRESS_7 = 7,
  EACTPROGRESS_FAIL = 100,
  EACTPROGRESS_SUCCESS = 101
};
bool EActProgress_IsValid(int value);
const EActProgress EActProgress_MIN = EACTPROGRESS_NONE;
const EActProgress EActProgress_MAX = EACTPROGRESS_SUCCESS;
const int EActProgress_ARRAYSIZE = EActProgress_MAX + 1;

const ::google::protobuf::EnumDescriptor* EActProgress_descriptor();
inline const ::std::string& EActProgress_Name(EActProgress value) {
  return ::google::protobuf::internal::NameOfEnum(
    EActProgress_descriptor(), value);
}
inline bool EActProgress_Parse(
    const ::std::string& name, EActProgress* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EActProgress>(
    EActProgress_descriptor(), name, value);
}
// ===================================================================

class StartActCmd : public ::google::protobuf::Message {
 public:
  StartActCmd();
  virtual ~StartActCmd();

  StartActCmd(const StartActCmd& from);

  inline StartActCmd& operator=(const StartActCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartActCmd& default_instance();

  void Swap(StartActCmd* other);

  // implements Message ----------------------------------------------

  StartActCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StartActCmd& from);
  void MergeFrom(const StartActCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = ACTIVITY_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ActivityParam param = 2 [default = ACTIVITYPARAM_ACT_START];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ActivityParam param() const;
  inline void set_param(::Cmd::ActivityParam value);

  // optional uint32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 mapid = 4 [default = 0];
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 4;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // optional uint32 starttime = 5 [default = 0];
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 5;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // optional uint32 endtime = 6 [default = 0];
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 6;
  inline ::google::protobuf::uint32 endtime() const;
  inline void set_endtime(::google::protobuf::uint32 value);

  // optional uint32 path = 7;
  inline bool has_path() const;
  inline void clear_path();
  static const int kPathFieldNumber = 7;
  inline ::google::protobuf::uint32 path() const;
  inline void set_path(::google::protobuf::uint32 value);

  // repeated uint32 unshowmap = 8;
  inline int unshowmap_size() const;
  inline void clear_unshowmap();
  static const int kUnshowmapFieldNumber = 8;
  inline ::google::protobuf::uint32 unshowmap(int index) const;
  inline void set_unshowmap(int index, ::google::protobuf::uint32 value);
  inline void add_unshowmap(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unshowmap() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unshowmap();

  // @@protoc_insertion_point(class_scope:Cmd.StartActCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_path();
  inline void clear_has_path();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 starttime_;
  ::google::protobuf::uint32 endtime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unshowmap_;
  ::google::protobuf::uint32 path_;
  friend void  protobuf_AddDesc_ActivityCmd_2eproto();
  friend void protobuf_AssignDesc_ActivityCmd_2eproto();
  friend void protobuf_ShutdownFile_ActivityCmd_2eproto();

  void InitAsDefaultInstance();
  static StartActCmd* default_instance_;
};
// -------------------------------------------------------------------

class StopActCmd : public ::google::protobuf::Message {
 public:
  StopActCmd();
  virtual ~StopActCmd();

  StopActCmd(const StopActCmd& from);

  inline StopActCmd& operator=(const StopActCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StopActCmd& default_instance();

  void Swap(StopActCmd* other);

  // implements Message ----------------------------------------------

  StopActCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StopActCmd& from);
  void MergeFrom(const StopActCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = ACTIVITY_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ActivityParam param = 2 [default = ACTIVITYPARAM_ACT_STOP];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ActivityParam param() const;
  inline void set_param(::Cmd::ActivityParam value);

  // optional uint32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.StopActCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_ActivityCmd_2eproto();
  friend void protobuf_AssignDesc_ActivityCmd_2eproto();
  friend void protobuf_ShutdownFile_ActivityCmd_2eproto();

  void InitAsDefaultInstance();
  static StopActCmd* default_instance_;
};
// -------------------------------------------------------------------

class BCatUFOPosActCmd : public ::google::protobuf::Message {
 public:
  BCatUFOPosActCmd();
  virtual ~BCatUFOPosActCmd();

  BCatUFOPosActCmd(const BCatUFOPosActCmd& from);

  inline BCatUFOPosActCmd& operator=(const BCatUFOPosActCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BCatUFOPosActCmd& default_instance();

  void Swap(BCatUFOPosActCmd* other);

  // implements Message ----------------------------------------------

  BCatUFOPosActCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BCatUFOPosActCmd& from);
  void MergeFrom(const BCatUFOPosActCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = ACTIVITY_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ActivityParam param = 2 [default = ACTIVITYPARAM_BCAT_UFOPOS];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ActivityParam param() const;
  inline void set_param(::Cmd::ActivityParam value);

  // optional .Cmd.ScenePos pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline const ::Cmd::ScenePos& pos() const;
  inline ::Cmd::ScenePos* mutable_pos();
  inline ::Cmd::ScenePos* release_pos();
  inline void set_allocated_pos(::Cmd::ScenePos* pos);

  // @@protoc_insertion_point(class_scope:Cmd.BCatUFOPosActCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::ScenePos* pos_;
  friend void  protobuf_AddDesc_ActivityCmd_2eproto();
  friend void protobuf_AssignDesc_ActivityCmd_2eproto();
  friend void protobuf_ShutdownFile_ActivityCmd_2eproto();

  void InitAsDefaultInstance();
  static BCatUFOPosActCmd* default_instance_;
};
// -------------------------------------------------------------------

class ActProgressNtfCmd : public ::google::protobuf::Message {
 public:
  ActProgressNtfCmd();
  virtual ~ActProgressNtfCmd();

  ActProgressNtfCmd(const ActProgressNtfCmd& from);

  inline ActProgressNtfCmd& operator=(const ActProgressNtfCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActProgressNtfCmd& default_instance();

  void Swap(ActProgressNtfCmd* other);

  // implements Message ----------------------------------------------

  ActProgressNtfCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActProgressNtfCmd& from);
  void MergeFrom(const ActProgressNtfCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = ACTIVITY_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ActivityParam param = 2 [default = ACTIVITYPARAM_PROGRESS_NTF];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ActivityParam param() const;
  inline void set_param(::Cmd::ActivityParam value);

  // optional uint32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional .Cmd.EActProgress progress = 4;
  inline bool has_progress() const;
  inline void clear_progress();
  static const int kProgressFieldNumber = 4;
  inline ::Cmd::EActProgress progress() const;
  inline void set_progress(::Cmd::EActProgress value);

  // optional uint32 endtime = 5;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 5;
  inline ::google::protobuf::uint32 endtime() const;
  inline void set_endtime(::google::protobuf::uint32 value);

  // optional uint32 starttime = 6;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 6;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ActProgressNtfCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_progress();
  inline void clear_has_progress();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_starttime();
  inline void clear_has_starttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 id_;
  int progress_;
  ::google::protobuf::uint32 endtime_;
  ::google::protobuf::uint32 starttime_;
  friend void  protobuf_AddDesc_ActivityCmd_2eproto();
  friend void protobuf_AssignDesc_ActivityCmd_2eproto();
  friend void protobuf_ShutdownFile_ActivityCmd_2eproto();

  void InitAsDefaultInstance();
  static ActProgressNtfCmd* default_instance_;
};
// -------------------------------------------------------------------

class StartGlobalActCmd : public ::google::protobuf::Message {
 public:
  StartGlobalActCmd();
  virtual ~StartGlobalActCmd();

  StartGlobalActCmd(const StartGlobalActCmd& from);

  inline StartGlobalActCmd& operator=(const StartGlobalActCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartGlobalActCmd& default_instance();

  void Swap(StartGlobalActCmd* other);

  // implements Message ----------------------------------------------

  StartGlobalActCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StartGlobalActCmd& from);
  void MergeFrom(const StartGlobalActCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = ACTIVITY_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ActivityParam param = 2 [default = ACTIVITYPARAM_GLOBAL_ACT_START];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ActivityParam param() const;
  inline void set_param(::Cmd::ActivityParam value);

  // optional uint32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional .Cmd.GlobalActivityType type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::Cmd::GlobalActivityType type() const;
  inline void set_type(::Cmd::GlobalActivityType value);

  // repeated uint32 params = 5;
  inline int params_size() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 5;
  inline ::google::protobuf::uint32 params(int index) const;
  inline void set_params(int index, ::google::protobuf::uint32 value);
  inline void add_params(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      params() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_params();

  // optional uint32 starttime = 6;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 6;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // optional uint32 endtime = 7;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 7;
  inline ::google::protobuf::uint32 endtime() const;
  inline void set_endtime(::google::protobuf::uint32 value);

  // optional bool open = 8;
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 8;
  inline bool open() const;
  inline void set_open(bool value);

  // optional uint32 count = 9;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 9;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.StartGlobalActCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_open();
  inline void clear_has_open();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 id_;
  int type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > params_;
  ::google::protobuf::uint32 starttime_;
  ::google::protobuf::uint32 endtime_;
  bool open_;
  ::google::protobuf::uint32 count_;
  friend void  protobuf_AddDesc_ActivityCmd_2eproto();
  friend void protobuf_AssignDesc_ActivityCmd_2eproto();
  friend void protobuf_ShutdownFile_ActivityCmd_2eproto();

  void InitAsDefaultInstance();
  static StartGlobalActCmd* default_instance_;
};
// -------------------------------------------------------------------

class ActivityProgress : public ::google::protobuf::Message {
 public:
  ActivityProgress();
  virtual ~ActivityProgress();

  ActivityProgress(const ActivityProgress& from);

  inline ActivityProgress& operator=(const ActivityProgress& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityProgress& default_instance();

  void Swap(ActivityProgress* other);

  // implements Message ----------------------------------------------

  ActivityProgress* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityProgress& from);
  void MergeFrom(const ActivityProgress& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 actid = 1;
  inline bool has_actid() const;
  inline void clear_actid();
  static const int kActidFieldNumber = 1;
  inline ::google::protobuf::uint32 actid() const;
  inline void set_actid(::google::protobuf::uint32 value);

  // optional uint32 progress = 2;
  inline bool has_progress() const;
  inline void clear_progress();
  static const int kProgressFieldNumber = 2;
  inline ::google::protobuf::uint32 progress() const;
  inline void set_progress(::google::protobuf::uint32 value);

  // repeated uint32 starttime = 3;
  inline int starttime_size() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 3;
  inline ::google::protobuf::uint32 starttime(int index) const;
  inline void set_starttime(int index, ::google::protobuf::uint32 value);
  inline void add_starttime(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      starttime() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_starttime();

  // repeated uint32 endtime = 4;
  inline int endtime_size() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 4;
  inline ::google::protobuf::uint32 endtime(int index) const;
  inline void set_endtime(int index, ::google::protobuf::uint32 value);
  inline void add_endtime(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      endtime() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_endtime();

  // @@protoc_insertion_point(class_scope:Cmd.ActivityProgress)
 private:
  inline void set_has_actid();
  inline void clear_has_actid();
  inline void set_has_progress();
  inline void clear_has_progress();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 actid_;
  ::google::protobuf::uint32 progress_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > starttime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > endtime_;
  friend void  protobuf_AddDesc_ActivityCmd_2eproto();
  friend void protobuf_AssignDesc_ActivityCmd_2eproto();
  friend void protobuf_ShutdownFile_ActivityCmd_2eproto();

  void InitAsDefaultInstance();
  static ActivityProgress* default_instance_;
};
// ===================================================================


// ===================================================================

// StartActCmd

// optional .Cmd.Command cmd = 1 [default = ACTIVITY_PROTOCMD];
inline bool StartActCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartActCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartActCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartActCmd::clear_cmd() {
  cmd_ = 60;
  clear_has_cmd();
}
inline ::Cmd::Command StartActCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.StartActCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void StartActCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartActCmd.cmd)
}

// optional .Cmd.ActivityParam param = 2 [default = ACTIVITYPARAM_ACT_START];
inline bool StartActCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StartActCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StartActCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StartActCmd::clear_param() {
  param_ = 1;
  clear_has_param();
}
inline ::Cmd::ActivityParam StartActCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.StartActCmd.param)
  return static_cast< ::Cmd::ActivityParam >(param_);
}
inline void StartActCmd::set_param(::Cmd::ActivityParam value) {
  assert(::Cmd::ActivityParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartActCmd.param)
}

// optional uint32 id = 3;
inline bool StartActCmd::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StartActCmd::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StartActCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StartActCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 StartActCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.StartActCmd.id)
  return id_;
}
inline void StartActCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartActCmd.id)
}

// optional uint32 mapid = 4 [default = 0];
inline bool StartActCmd::has_mapid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StartActCmd::set_has_mapid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StartActCmd::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StartActCmd::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 StartActCmd::mapid() const {
  // @@protoc_insertion_point(field_get:Cmd.StartActCmd.mapid)
  return mapid_;
}
inline void StartActCmd::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartActCmd.mapid)
}

// optional uint32 starttime = 5 [default = 0];
inline bool StartActCmd::has_starttime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StartActCmd::set_has_starttime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StartActCmd::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StartActCmd::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 StartActCmd::starttime() const {
  // @@protoc_insertion_point(field_get:Cmd.StartActCmd.starttime)
  return starttime_;
}
inline void StartActCmd::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartActCmd.starttime)
}

// optional uint32 endtime = 6 [default = 0];
inline bool StartActCmd::has_endtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StartActCmd::set_has_endtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void StartActCmd::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void StartActCmd::clear_endtime() {
  endtime_ = 0u;
  clear_has_endtime();
}
inline ::google::protobuf::uint32 StartActCmd::endtime() const {
  // @@protoc_insertion_point(field_get:Cmd.StartActCmd.endtime)
  return endtime_;
}
inline void StartActCmd::set_endtime(::google::protobuf::uint32 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartActCmd.endtime)
}

// optional uint32 path = 7;
inline bool StartActCmd::has_path() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void StartActCmd::set_has_path() {
  _has_bits_[0] |= 0x00000040u;
}
inline void StartActCmd::clear_has_path() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void StartActCmd::clear_path() {
  path_ = 0u;
  clear_has_path();
}
inline ::google::protobuf::uint32 StartActCmd::path() const {
  // @@protoc_insertion_point(field_get:Cmd.StartActCmd.path)
  return path_;
}
inline void StartActCmd::set_path(::google::protobuf::uint32 value) {
  set_has_path();
  path_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartActCmd.path)
}

// repeated uint32 unshowmap = 8;
inline int StartActCmd::unshowmap_size() const {
  return unshowmap_.size();
}
inline void StartActCmd::clear_unshowmap() {
  unshowmap_.Clear();
}
inline ::google::protobuf::uint32 StartActCmd::unshowmap(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.StartActCmd.unshowmap)
  return unshowmap_.Get(index);
}
inline void StartActCmd::set_unshowmap(int index, ::google::protobuf::uint32 value) {
  unshowmap_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.StartActCmd.unshowmap)
}
inline void StartActCmd::add_unshowmap(::google::protobuf::uint32 value) {
  unshowmap_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.StartActCmd.unshowmap)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
StartActCmd::unshowmap() const {
  // @@protoc_insertion_point(field_list:Cmd.StartActCmd.unshowmap)
  return unshowmap_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
StartActCmd::mutable_unshowmap() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.StartActCmd.unshowmap)
  return &unshowmap_;
}

// -------------------------------------------------------------------

// StopActCmd

// optional .Cmd.Command cmd = 1 [default = ACTIVITY_PROTOCMD];
inline bool StopActCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StopActCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StopActCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StopActCmd::clear_cmd() {
  cmd_ = 60;
  clear_has_cmd();
}
inline ::Cmd::Command StopActCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.StopActCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void StopActCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StopActCmd.cmd)
}

// optional .Cmd.ActivityParam param = 2 [default = ACTIVITYPARAM_ACT_STOP];
inline bool StopActCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StopActCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StopActCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StopActCmd::clear_param() {
  param_ = 4;
  clear_has_param();
}
inline ::Cmd::ActivityParam StopActCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.StopActCmd.param)
  return static_cast< ::Cmd::ActivityParam >(param_);
}
inline void StopActCmd::set_param(::Cmd::ActivityParam value) {
  assert(::Cmd::ActivityParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StopActCmd.param)
}

// optional uint32 id = 3;
inline bool StopActCmd::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StopActCmd::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StopActCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StopActCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 StopActCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.StopActCmd.id)
  return id_;
}
inline void StopActCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StopActCmd.id)
}

// -------------------------------------------------------------------

// BCatUFOPosActCmd

// optional .Cmd.Command cmd = 1 [default = ACTIVITY_PROTOCMD];
inline bool BCatUFOPosActCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BCatUFOPosActCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BCatUFOPosActCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BCatUFOPosActCmd::clear_cmd() {
  cmd_ = 60;
  clear_has_cmd();
}
inline ::Cmd::Command BCatUFOPosActCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.BCatUFOPosActCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void BCatUFOPosActCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BCatUFOPosActCmd.cmd)
}

// optional .Cmd.ActivityParam param = 2 [default = ACTIVITYPARAM_BCAT_UFOPOS];
inline bool BCatUFOPosActCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BCatUFOPosActCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BCatUFOPosActCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BCatUFOPosActCmd::clear_param() {
  param_ = 2;
  clear_has_param();
}
inline ::Cmd::ActivityParam BCatUFOPosActCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.BCatUFOPosActCmd.param)
  return static_cast< ::Cmd::ActivityParam >(param_);
}
inline void BCatUFOPosActCmd::set_param(::Cmd::ActivityParam value) {
  assert(::Cmd::ActivityParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BCatUFOPosActCmd.param)
}

// optional .Cmd.ScenePos pos = 3;
inline bool BCatUFOPosActCmd::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BCatUFOPosActCmd::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BCatUFOPosActCmd::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BCatUFOPosActCmd::clear_pos() {
  if (pos_ != NULL) pos_->::Cmd::ScenePos::Clear();
  clear_has_pos();
}
inline const ::Cmd::ScenePos& BCatUFOPosActCmd::pos() const {
  // @@protoc_insertion_point(field_get:Cmd.BCatUFOPosActCmd.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Cmd::ScenePos* BCatUFOPosActCmd::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Cmd::ScenePos;
  // @@protoc_insertion_point(field_mutable:Cmd.BCatUFOPosActCmd.pos)
  return pos_;
}
inline ::Cmd::ScenePos* BCatUFOPosActCmd::release_pos() {
  clear_has_pos();
  ::Cmd::ScenePos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void BCatUFOPosActCmd::set_allocated_pos(::Cmd::ScenePos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.BCatUFOPosActCmd.pos)
}

// -------------------------------------------------------------------

// ActProgressNtfCmd

// optional .Cmd.Command cmd = 1 [default = ACTIVITY_PROTOCMD];
inline bool ActProgressNtfCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActProgressNtfCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActProgressNtfCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActProgressNtfCmd::clear_cmd() {
  cmd_ = 60;
  clear_has_cmd();
}
inline ::Cmd::Command ActProgressNtfCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ActProgressNtfCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ActProgressNtfCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActProgressNtfCmd.cmd)
}

// optional .Cmd.ActivityParam param = 2 [default = ACTIVITYPARAM_PROGRESS_NTF];
inline bool ActProgressNtfCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActProgressNtfCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActProgressNtfCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActProgressNtfCmd::clear_param() {
  param_ = 3;
  clear_has_param();
}
inline ::Cmd::ActivityParam ActProgressNtfCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ActProgressNtfCmd.param)
  return static_cast< ::Cmd::ActivityParam >(param_);
}
inline void ActProgressNtfCmd::set_param(::Cmd::ActivityParam value) {
  assert(::Cmd::ActivityParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActProgressNtfCmd.param)
}

// optional uint32 id = 3;
inline bool ActProgressNtfCmd::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActProgressNtfCmd::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActProgressNtfCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActProgressNtfCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ActProgressNtfCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.ActProgressNtfCmd.id)
  return id_;
}
inline void ActProgressNtfCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActProgressNtfCmd.id)
}

// optional .Cmd.EActProgress progress = 4;
inline bool ActProgressNtfCmd::has_progress() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActProgressNtfCmd::set_has_progress() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActProgressNtfCmd::clear_has_progress() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActProgressNtfCmd::clear_progress() {
  progress_ = 0;
  clear_has_progress();
}
inline ::Cmd::EActProgress ActProgressNtfCmd::progress() const {
  // @@protoc_insertion_point(field_get:Cmd.ActProgressNtfCmd.progress)
  return static_cast< ::Cmd::EActProgress >(progress_);
}
inline void ActProgressNtfCmd::set_progress(::Cmd::EActProgress value) {
  assert(::Cmd::EActProgress_IsValid(value));
  set_has_progress();
  progress_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActProgressNtfCmd.progress)
}

// optional uint32 endtime = 5;
inline bool ActProgressNtfCmd::has_endtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ActProgressNtfCmd::set_has_endtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ActProgressNtfCmd::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ActProgressNtfCmd::clear_endtime() {
  endtime_ = 0u;
  clear_has_endtime();
}
inline ::google::protobuf::uint32 ActProgressNtfCmd::endtime() const {
  // @@protoc_insertion_point(field_get:Cmd.ActProgressNtfCmd.endtime)
  return endtime_;
}
inline void ActProgressNtfCmd::set_endtime(::google::protobuf::uint32 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActProgressNtfCmd.endtime)
}

// optional uint32 starttime = 6;
inline bool ActProgressNtfCmd::has_starttime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ActProgressNtfCmd::set_has_starttime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ActProgressNtfCmd::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ActProgressNtfCmd::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 ActProgressNtfCmd::starttime() const {
  // @@protoc_insertion_point(field_get:Cmd.ActProgressNtfCmd.starttime)
  return starttime_;
}
inline void ActProgressNtfCmd::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActProgressNtfCmd.starttime)
}

// -------------------------------------------------------------------

// StartGlobalActCmd

// optional .Cmd.Command cmd = 1 [default = ACTIVITY_PROTOCMD];
inline bool StartGlobalActCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartGlobalActCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartGlobalActCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartGlobalActCmd::clear_cmd() {
  cmd_ = 60;
  clear_has_cmd();
}
inline ::Cmd::Command StartGlobalActCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.StartGlobalActCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void StartGlobalActCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartGlobalActCmd.cmd)
}

// optional .Cmd.ActivityParam param = 2 [default = ACTIVITYPARAM_GLOBAL_ACT_START];
inline bool StartGlobalActCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StartGlobalActCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StartGlobalActCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StartGlobalActCmd::clear_param() {
  param_ = 5;
  clear_has_param();
}
inline ::Cmd::ActivityParam StartGlobalActCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.StartGlobalActCmd.param)
  return static_cast< ::Cmd::ActivityParam >(param_);
}
inline void StartGlobalActCmd::set_param(::Cmd::ActivityParam value) {
  assert(::Cmd::ActivityParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartGlobalActCmd.param)
}

// optional uint32 id = 3;
inline bool StartGlobalActCmd::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StartGlobalActCmd::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StartGlobalActCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StartGlobalActCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 StartGlobalActCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.StartGlobalActCmd.id)
  return id_;
}
inline void StartGlobalActCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartGlobalActCmd.id)
}

// optional .Cmd.GlobalActivityType type = 4;
inline bool StartGlobalActCmd::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StartGlobalActCmd::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StartGlobalActCmd::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StartGlobalActCmd::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::GlobalActivityType StartGlobalActCmd::type() const {
  // @@protoc_insertion_point(field_get:Cmd.StartGlobalActCmd.type)
  return static_cast< ::Cmd::GlobalActivityType >(type_);
}
inline void StartGlobalActCmd::set_type(::Cmd::GlobalActivityType value) {
  assert(::Cmd::GlobalActivityType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartGlobalActCmd.type)
}

// repeated uint32 params = 5;
inline int StartGlobalActCmd::params_size() const {
  return params_.size();
}
inline void StartGlobalActCmd::clear_params() {
  params_.Clear();
}
inline ::google::protobuf::uint32 StartGlobalActCmd::params(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.StartGlobalActCmd.params)
  return params_.Get(index);
}
inline void StartGlobalActCmd::set_params(int index, ::google::protobuf::uint32 value) {
  params_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.StartGlobalActCmd.params)
}
inline void StartGlobalActCmd::add_params(::google::protobuf::uint32 value) {
  params_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.StartGlobalActCmd.params)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
StartGlobalActCmd::params() const {
  // @@protoc_insertion_point(field_list:Cmd.StartGlobalActCmd.params)
  return params_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
StartGlobalActCmd::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.StartGlobalActCmd.params)
  return &params_;
}

// optional uint32 starttime = 6;
inline bool StartGlobalActCmd::has_starttime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StartGlobalActCmd::set_has_starttime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void StartGlobalActCmd::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void StartGlobalActCmd::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 StartGlobalActCmd::starttime() const {
  // @@protoc_insertion_point(field_get:Cmd.StartGlobalActCmd.starttime)
  return starttime_;
}
inline void StartGlobalActCmd::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartGlobalActCmd.starttime)
}

// optional uint32 endtime = 7;
inline bool StartGlobalActCmd::has_endtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void StartGlobalActCmd::set_has_endtime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void StartGlobalActCmd::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void StartGlobalActCmd::clear_endtime() {
  endtime_ = 0u;
  clear_has_endtime();
}
inline ::google::protobuf::uint32 StartGlobalActCmd::endtime() const {
  // @@protoc_insertion_point(field_get:Cmd.StartGlobalActCmd.endtime)
  return endtime_;
}
inline void StartGlobalActCmd::set_endtime(::google::protobuf::uint32 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartGlobalActCmd.endtime)
}

// optional bool open = 8;
inline bool StartGlobalActCmd::has_open() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void StartGlobalActCmd::set_has_open() {
  _has_bits_[0] |= 0x00000080u;
}
inline void StartGlobalActCmd::clear_has_open() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void StartGlobalActCmd::clear_open() {
  open_ = false;
  clear_has_open();
}
inline bool StartGlobalActCmd::open() const {
  // @@protoc_insertion_point(field_get:Cmd.StartGlobalActCmd.open)
  return open_;
}
inline void StartGlobalActCmd::set_open(bool value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartGlobalActCmd.open)
}

// optional uint32 count = 9;
inline bool StartGlobalActCmd::has_count() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void StartGlobalActCmd::set_has_count() {
  _has_bits_[0] |= 0x00000100u;
}
inline void StartGlobalActCmd::clear_has_count() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void StartGlobalActCmd::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 StartGlobalActCmd::count() const {
  // @@protoc_insertion_point(field_get:Cmd.StartGlobalActCmd.count)
  return count_;
}
inline void StartGlobalActCmd::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartGlobalActCmd.count)
}

// -------------------------------------------------------------------

// ActivityProgress

// optional uint32 actid = 1;
inline bool ActivityProgress::has_actid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityProgress::set_has_actid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityProgress::clear_has_actid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityProgress::clear_actid() {
  actid_ = 0u;
  clear_has_actid();
}
inline ::google::protobuf::uint32 ActivityProgress::actid() const {
  // @@protoc_insertion_point(field_get:Cmd.ActivityProgress.actid)
  return actid_;
}
inline void ActivityProgress::set_actid(::google::protobuf::uint32 value) {
  set_has_actid();
  actid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActivityProgress.actid)
}

// optional uint32 progress = 2;
inline bool ActivityProgress::has_progress() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActivityProgress::set_has_progress() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActivityProgress::clear_has_progress() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActivityProgress::clear_progress() {
  progress_ = 0u;
  clear_has_progress();
}
inline ::google::protobuf::uint32 ActivityProgress::progress() const {
  // @@protoc_insertion_point(field_get:Cmd.ActivityProgress.progress)
  return progress_;
}
inline void ActivityProgress::set_progress(::google::protobuf::uint32 value) {
  set_has_progress();
  progress_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActivityProgress.progress)
}

// repeated uint32 starttime = 3;
inline int ActivityProgress::starttime_size() const {
  return starttime_.size();
}
inline void ActivityProgress::clear_starttime() {
  starttime_.Clear();
}
inline ::google::protobuf::uint32 ActivityProgress::starttime(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.ActivityProgress.starttime)
  return starttime_.Get(index);
}
inline void ActivityProgress::set_starttime(int index, ::google::protobuf::uint32 value) {
  starttime_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.ActivityProgress.starttime)
}
inline void ActivityProgress::add_starttime(::google::protobuf::uint32 value) {
  starttime_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.ActivityProgress.starttime)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ActivityProgress::starttime() const {
  // @@protoc_insertion_point(field_list:Cmd.ActivityProgress.starttime)
  return starttime_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ActivityProgress::mutable_starttime() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.ActivityProgress.starttime)
  return &starttime_;
}

// repeated uint32 endtime = 4;
inline int ActivityProgress::endtime_size() const {
  return endtime_.size();
}
inline void ActivityProgress::clear_endtime() {
  endtime_.Clear();
}
inline ::google::protobuf::uint32 ActivityProgress::endtime(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.ActivityProgress.endtime)
  return endtime_.Get(index);
}
inline void ActivityProgress::set_endtime(int index, ::google::protobuf::uint32 value) {
  endtime_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.ActivityProgress.endtime)
}
inline void ActivityProgress::add_endtime(::google::protobuf::uint32 value) {
  endtime_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.ActivityProgress.endtime)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ActivityProgress::endtime() const {
  // @@protoc_insertion_point(field_list:Cmd.ActivityProgress.endtime)
  return endtime_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ActivityProgress::mutable_endtime() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.ActivityProgress.endtime)
  return &endtime_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cmd

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Cmd::ActivityParam> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::ActivityParam>() {
  return ::Cmd::ActivityParam_descriptor();
}
template <> struct is_proto_enum< ::Cmd::GlobalActivityType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::GlobalActivityType>() {
  return ::Cmd::GlobalActivityType_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EActProgress> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EActProgress>() {
  return ::Cmd::EActProgress_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ActivityCmd_2eproto__INCLUDED
