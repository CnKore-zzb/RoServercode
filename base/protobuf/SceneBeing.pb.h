// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SceneBeing.proto

#ifndef PROTOBUF_SceneBeing_2eproto__INCLUDED
#define PROTOBUF_SceneBeing_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "xCmd.pb.h"
#include "SceneSkill.pb.h"
// @@protoc_insertion_point(includes)

namespace Cmd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SceneBeing_2eproto();
void protobuf_AssignDesc_SceneBeing_2eproto();
void protobuf_ShutdownFile_SceneBeing_2eproto();

class UserBeingData;
class BeingSkillData;
class BeingSkillQuery;
class BeingSkillUpdate;
class BeingSkillLevelUp;
class BeingMemberData;
class BeingInfo;
class BeingInfoQuery;
class BeingInfoUpdate;
class BeingSwitchState;
class BeingOffCmd;
class ChangeBodyBeingCmd;

enum BeingParam {
  BEINGPARAM_SKILL_QUERY = 1,
  BEINGPARAM_SKILL_UPDATE = 2,
  BEINGPARAM_SKILL_LEVELUP = 3,
  BEINGPARAM_BEING_INFO_QUERY = 4,
  BEINGPARAM_BEING_INFO_UPDATE = 5,
  BEINGPARAM_BEING_OFF = 6,
  BEINGPARAM_BEING_SWITCH_STATE = 7,
  BEINGPARAM_BEING_CHANGE_BODY = 8
};
bool BeingParam_IsValid(int value);
const BeingParam BeingParam_MIN = BEINGPARAM_SKILL_QUERY;
const BeingParam BeingParam_MAX = BEINGPARAM_BEING_CHANGE_BODY;
const int BeingParam_ARRAYSIZE = BeingParam_MAX + 1;

const ::google::protobuf::EnumDescriptor* BeingParam_descriptor();
inline const ::std::string& BeingParam_Name(BeingParam value) {
  return ::google::protobuf::internal::NameOfEnum(
    BeingParam_descriptor(), value);
}
inline bool BeingParam_Parse(
    const ::std::string& name, BeingParam* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BeingParam>(
    BeingParam_descriptor(), name, value);
}
enum EBeingDataType {
  EBEINGDATA_MIN = 0,
  EBEINGDATA_LV = 1,
  EBEINGDATA_EXP = 2,
  EBEINGDATA_BATTLE = 3,
  EBEINGDATA_GUID = 4,
  EBEINGDATA_LIVE = 5,
  EBEINGDATA_SUMMON = 6,
  EBEINGDATA_BODY = 7,
  EBEINGDATA_BODYLIST = 8,
  EBEINGDATA_MAX = 9
};
bool EBeingDataType_IsValid(int value);
const EBeingDataType EBeingDataType_MIN = EBEINGDATA_MIN;
const EBeingDataType EBeingDataType_MAX = EBEINGDATA_MAX;
const int EBeingDataType_ARRAYSIZE = EBeingDataType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EBeingDataType_descriptor();
inline const ::std::string& EBeingDataType_Name(EBeingDataType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EBeingDataType_descriptor(), value);
}
inline bool EBeingDataType_Parse(
    const ::std::string& name, EBeingDataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EBeingDataType>(
    EBeingDataType_descriptor(), name, value);
}
// ===================================================================

class UserBeingData : public ::google::protobuf::Message {
 public:
  UserBeingData();
  virtual ~UserBeingData();

  UserBeingData(const UserBeingData& from);

  inline UserBeingData& operator=(const UserBeingData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserBeingData& default_instance();

  void Swap(UserBeingData* other);

  // implements Message ----------------------------------------------

  UserBeingData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserBeingData& from);
  void MergeFrom(const UserBeingData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 version = 13 [default = 0];
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 13;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // optional uint32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 lv = 2 [default = 0];
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 2;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);

  // optional uint32 hp = 3 [default = 0];
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 3;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);

  // optional bool live = 4 [default = false];
  inline bool has_live() const;
  inline void clear_live();
  static const int kLiveFieldNumber = 4;
  inline bool live() const;
  inline void set_live(bool value);

  // optional uint64 exp = 5 [default = 0];
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 5;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);

  // optional uint32 usedskillpoint = 6 [default = 0];
  inline bool has_usedskillpoint() const;
  inline void clear_usedskillpoint();
  static const int kUsedskillpointFieldNumber = 6;
  inline ::google::protobuf::uint32 usedskillpoint() const;
  inline void set_usedskillpoint(::google::protobuf::uint32 value);

  // optional bool battle = 7 [default = false];
  inline bool has_battle() const;
  inline void clear_battle();
  static const int kBattleFieldNumber = 7;
  inline bool battle() const;
  inline void set_battle(bool value);

  // optional bytes buff = 8;
  inline bool has_buff() const;
  inline void clear_buff();
  static const int kBuffFieldNumber = 8;
  inline const ::std::string& buff() const;
  inline void set_buff(const ::std::string& value);
  inline void set_buff(const char* value);
  inline void set_buff(const void* value, size_t size);
  inline ::std::string* mutable_buff();
  inline ::std::string* release_buff();
  inline void set_allocated_buff(::std::string* buff);

  // repeated .Cmd.SkillItem skills = 9;
  inline int skills_size() const;
  inline void clear_skills();
  static const int kSkillsFieldNumber = 9;
  inline const ::Cmd::SkillItem& skills(int index) const;
  inline ::Cmd::SkillItem* mutable_skills(int index);
  inline ::Cmd::SkillItem* add_skills();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem >&
      skills() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem >*
      mutable_skills();

  // repeated uint32 buffids = 10;
  inline int buffids_size() const;
  inline void clear_buffids();
  static const int kBuffidsFieldNumber = 10;
  inline ::google::protobuf::uint32 buffids(int index) const;
  inline void set_buffids(int index, ::google::protobuf::uint32 value);
  inline void add_buffids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      buffids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_buffids();

  // optional uint32 body = 11 [default = 0];
  inline bool has_body() const;
  inline void clear_body();
  static const int kBodyFieldNumber = 11;
  inline ::google::protobuf::uint32 body() const;
  inline void set_body(::google::protobuf::uint32 value);

  // repeated uint32 bodylist = 12;
  inline int bodylist_size() const;
  inline void clear_bodylist();
  static const int kBodylistFieldNumber = 12;
  inline ::google::protobuf::uint32 bodylist(int index) const;
  inline void set_bodylist(int index, ::google::protobuf::uint32 value);
  inline void add_bodylist(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      bodylist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_bodylist();

  // @@protoc_insertion_point(class_scope:Cmd.UserBeingData)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_live();
  inline void clear_has_live();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_usedskillpoint();
  inline void clear_has_usedskillpoint();
  inline void set_has_battle();
  inline void clear_has_battle();
  inline void set_has_buff();
  inline void clear_has_buff();
  inline void set_has_body();
  inline void clear_has_body();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 lv_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint64 exp_;
  bool live_;
  bool battle_;
  ::google::protobuf::uint32 usedskillpoint_;
  ::std::string* buff_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem > skills_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > buffids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > bodylist_;
  ::google::protobuf::uint32 body_;
  friend void  protobuf_AddDesc_SceneBeing_2eproto();
  friend void protobuf_AssignDesc_SceneBeing_2eproto();
  friend void protobuf_ShutdownFile_SceneBeing_2eproto();

  void InitAsDefaultInstance();
  static UserBeingData* default_instance_;
};
// -------------------------------------------------------------------

class BeingSkillData : public ::google::protobuf::Message {
 public:
  BeingSkillData();
  virtual ~BeingSkillData();

  BeingSkillData(const BeingSkillData& from);

  inline BeingSkillData& operator=(const BeingSkillData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BeingSkillData& default_instance();

  void Swap(BeingSkillData* other);

  // implements Message ----------------------------------------------

  BeingSkillData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BeingSkillData& from);
  void MergeFrom(const BeingSkillData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 leftpoint = 2 [default = 0];
  inline bool has_leftpoint() const;
  inline void clear_leftpoint();
  static const int kLeftpointFieldNumber = 2;
  inline ::google::protobuf::uint32 leftpoint() const;
  inline void set_leftpoint(::google::protobuf::uint32 value);

  // optional uint32 usedpoint = 3 [default = 0];
  inline bool has_usedpoint() const;
  inline void clear_usedpoint();
  static const int kUsedpointFieldNumber = 3;
  inline ::google::protobuf::uint32 usedpoint() const;
  inline void set_usedpoint(::google::protobuf::uint32 value);

  // repeated .Cmd.SkillItem items = 4;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 4;
  inline const ::Cmd::SkillItem& items(int index) const;
  inline ::Cmd::SkillItem* mutable_items(int index);
  inline ::Cmd::SkillItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem >*
      mutable_items();

  // repeated .Cmd.SpecSkillInfo specinfo = 5;
  inline int specinfo_size() const;
  inline void clear_specinfo();
  static const int kSpecinfoFieldNumber = 5;
  inline const ::Cmd::SpecSkillInfo& specinfo(int index) const;
  inline ::Cmd::SpecSkillInfo* mutable_specinfo(int index);
  inline ::Cmd::SpecSkillInfo* add_specinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SpecSkillInfo >&
      specinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::SpecSkillInfo >*
      mutable_specinfo();

  // @@protoc_insertion_point(class_scope:Cmd.BeingSkillData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_leftpoint();
  inline void clear_has_leftpoint();
  inline void set_has_usedpoint();
  inline void clear_has_usedpoint();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 leftpoint_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem > items_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::SpecSkillInfo > specinfo_;
  ::google::protobuf::uint32 usedpoint_;
  friend void  protobuf_AddDesc_SceneBeing_2eproto();
  friend void protobuf_AssignDesc_SceneBeing_2eproto();
  friend void protobuf_ShutdownFile_SceneBeing_2eproto();

  void InitAsDefaultInstance();
  static BeingSkillData* default_instance_;
};
// -------------------------------------------------------------------

class BeingSkillQuery : public ::google::protobuf::Message {
 public:
  BeingSkillQuery();
  virtual ~BeingSkillQuery();

  BeingSkillQuery(const BeingSkillQuery& from);

  inline BeingSkillQuery& operator=(const BeingSkillQuery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BeingSkillQuery& default_instance();

  void Swap(BeingSkillQuery* other);

  // implements Message ----------------------------------------------

  BeingSkillQuery* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BeingSkillQuery& from);
  void MergeFrom(const BeingSkillQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_SKILL_QUERY];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::BeingParam param() const;
  inline void set_param(::Cmd::BeingParam value);

  // repeated .Cmd.BeingSkillData data = 3;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::Cmd::BeingSkillData& data(int index) const;
  inline ::Cmd::BeingSkillData* mutable_data(int index);
  inline ::Cmd::BeingSkillData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::BeingSkillData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::BeingSkillData >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:Cmd.BeingSkillQuery)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::BeingSkillData > data_;
  friend void  protobuf_AddDesc_SceneBeing_2eproto();
  friend void protobuf_AssignDesc_SceneBeing_2eproto();
  friend void protobuf_ShutdownFile_SceneBeing_2eproto();

  void InitAsDefaultInstance();
  static BeingSkillQuery* default_instance_;
};
// -------------------------------------------------------------------

class BeingSkillUpdate : public ::google::protobuf::Message {
 public:
  BeingSkillUpdate();
  virtual ~BeingSkillUpdate();

  BeingSkillUpdate(const BeingSkillUpdate& from);

  inline BeingSkillUpdate& operator=(const BeingSkillUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BeingSkillUpdate& default_instance();

  void Swap(BeingSkillUpdate* other);

  // implements Message ----------------------------------------------

  BeingSkillUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BeingSkillUpdate& from);
  void MergeFrom(const BeingSkillUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_SKILL_UPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::BeingParam param() const;
  inline void set_param(::Cmd::BeingParam value);

  // repeated .Cmd.BeingSkillData update = 3;
  inline int update_size() const;
  inline void clear_update();
  static const int kUpdateFieldNumber = 3;
  inline const ::Cmd::BeingSkillData& update(int index) const;
  inline ::Cmd::BeingSkillData* mutable_update(int index);
  inline ::Cmd::BeingSkillData* add_update();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::BeingSkillData >&
      update() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::BeingSkillData >*
      mutable_update();

  // repeated .Cmd.BeingSkillData del = 4;
  inline int del_size() const;
  inline void clear_del();
  static const int kDelFieldNumber = 4;
  inline const ::Cmd::BeingSkillData& del(int index) const;
  inline ::Cmd::BeingSkillData* mutable_del(int index);
  inline ::Cmd::BeingSkillData* add_del();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::BeingSkillData >&
      del() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::BeingSkillData >*
      mutable_del();

  // @@protoc_insertion_point(class_scope:Cmd.BeingSkillUpdate)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::BeingSkillData > update_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::BeingSkillData > del_;
  friend void  protobuf_AddDesc_SceneBeing_2eproto();
  friend void protobuf_AssignDesc_SceneBeing_2eproto();
  friend void protobuf_ShutdownFile_SceneBeing_2eproto();

  void InitAsDefaultInstance();
  static BeingSkillUpdate* default_instance_;
};
// -------------------------------------------------------------------

class BeingSkillLevelUp : public ::google::protobuf::Message {
 public:
  BeingSkillLevelUp();
  virtual ~BeingSkillLevelUp();

  BeingSkillLevelUp(const BeingSkillLevelUp& from);

  inline BeingSkillLevelUp& operator=(const BeingSkillLevelUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BeingSkillLevelUp& default_instance();

  void Swap(BeingSkillLevelUp* other);

  // implements Message ----------------------------------------------

  BeingSkillLevelUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BeingSkillLevelUp& from);
  void MergeFrom(const BeingSkillLevelUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_SKILL_LEVELUP];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::BeingParam param() const;
  inline void set_param(::Cmd::BeingParam value);

  // optional uint32 beingid = 3 [default = 0];
  inline bool has_beingid() const;
  inline void clear_beingid();
  static const int kBeingidFieldNumber = 3;
  inline ::google::protobuf::uint32 beingid() const;
  inline void set_beingid(::google::protobuf::uint32 value);

  // repeated uint32 skillids = 4;
  inline int skillids_size() const;
  inline void clear_skillids();
  static const int kSkillidsFieldNumber = 4;
  inline ::google::protobuf::uint32 skillids(int index) const;
  inline void set_skillids(int index, ::google::protobuf::uint32 value);
  inline void add_skillids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skillids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skillids();

  // @@protoc_insertion_point(class_scope:Cmd.BeingSkillLevelUp)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_beingid();
  inline void clear_has_beingid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skillids_;
  ::google::protobuf::uint32 beingid_;
  friend void  protobuf_AddDesc_SceneBeing_2eproto();
  friend void protobuf_AssignDesc_SceneBeing_2eproto();
  friend void protobuf_ShutdownFile_SceneBeing_2eproto();

  void InitAsDefaultInstance();
  static BeingSkillLevelUp* default_instance_;
};
// -------------------------------------------------------------------

class BeingMemberData : public ::google::protobuf::Message {
 public:
  BeingMemberData();
  virtual ~BeingMemberData();

  BeingMemberData(const BeingMemberData& from);

  inline BeingMemberData& operator=(const BeingMemberData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BeingMemberData& default_instance();

  void Swap(BeingMemberData* other);

  // implements Message ----------------------------------------------

  BeingMemberData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BeingMemberData& from);
  void MergeFrom(const BeingMemberData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.EBeingDataType etype = 1 [default = EBEINGDATA_MIN];
  inline bool has_etype() const;
  inline void clear_etype();
  static const int kEtypeFieldNumber = 1;
  inline ::Cmd::EBeingDataType etype() const;
  inline void set_etype(::Cmd::EBeingDataType value);

  // optional uint64 value = 2 [default = 0];
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);

  // repeated uint32 values = 3;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 3;
  inline ::google::protobuf::uint32 values(int index) const;
  inline void set_values(int index, ::google::protobuf::uint32 value);
  inline void add_values(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      values() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_values();

  // optional string data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const char* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Cmd.BeingMemberData)
 private:
  inline void set_has_etype();
  inline void clear_has_etype();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 value_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > values_;
  ::std::string* data_;
  int etype_;
  friend void  protobuf_AddDesc_SceneBeing_2eproto();
  friend void protobuf_AssignDesc_SceneBeing_2eproto();
  friend void protobuf_ShutdownFile_SceneBeing_2eproto();

  void InitAsDefaultInstance();
  static BeingMemberData* default_instance_;
};
// -------------------------------------------------------------------

class BeingInfo : public ::google::protobuf::Message {
 public:
  BeingInfo();
  virtual ~BeingInfo();

  BeingInfo(const BeingInfo& from);

  inline BeingInfo& operator=(const BeingInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BeingInfo& default_instance();

  void Swap(BeingInfo* other);

  // implements Message ----------------------------------------------

  BeingInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BeingInfo& from);
  void MergeFrom(const BeingInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 guid = 1 [default = 0];
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional uint32 beingid = 2 [default = 0];
  inline bool has_beingid() const;
  inline void clear_beingid();
  static const int kBeingidFieldNumber = 2;
  inline ::google::protobuf::uint32 beingid() const;
  inline void set_beingid(::google::protobuf::uint32 value);

  // optional uint64 exp = 3 [default = 0];
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);

  // optional uint32 lv = 4 [default = 0];
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 4;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);

  // optional bool battle = 5 [default = false];
  inline bool has_battle() const;
  inline void clear_battle();
  static const int kBattleFieldNumber = 5;
  inline bool battle() const;
  inline void set_battle(bool value);

  // optional bool summon = 6 [default = false];
  inline bool has_summon() const;
  inline void clear_summon();
  static const int kSummonFieldNumber = 6;
  inline bool summon() const;
  inline void set_summon(bool value);

  // optional bool live = 7 [default = false];
  inline bool has_live() const;
  inline void clear_live();
  static const int kLiveFieldNumber = 7;
  inline bool live() const;
  inline void set_live(bool value);

  // optional uint32 body = 8 [default = 0];
  inline bool has_body() const;
  inline void clear_body();
  static const int kBodyFieldNumber = 8;
  inline ::google::protobuf::uint32 body() const;
  inline void set_body(::google::protobuf::uint32 value);

  // repeated uint32 bodylist = 9;
  inline int bodylist_size() const;
  inline void clear_bodylist();
  static const int kBodylistFieldNumber = 9;
  inline ::google::protobuf::uint32 bodylist(int index) const;
  inline void set_bodylist(int index, ::google::protobuf::uint32 value);
  inline void add_bodylist(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      bodylist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_bodylist();

  // @@protoc_insertion_point(class_scope:Cmd.BeingInfo)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_beingid();
  inline void clear_has_beingid();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_battle();
  inline void clear_has_battle();
  inline void set_has_summon();
  inline void clear_has_summon();
  inline void set_has_live();
  inline void clear_has_live();
  inline void set_has_body();
  inline void clear_has_body();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint64 exp_;
  ::google::protobuf::uint32 beingid_;
  ::google::protobuf::uint32 lv_;
  bool battle_;
  bool summon_;
  bool live_;
  ::google::protobuf::uint32 body_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > bodylist_;
  friend void  protobuf_AddDesc_SceneBeing_2eproto();
  friend void protobuf_AssignDesc_SceneBeing_2eproto();
  friend void protobuf_ShutdownFile_SceneBeing_2eproto();

  void InitAsDefaultInstance();
  static BeingInfo* default_instance_;
};
// -------------------------------------------------------------------

class BeingInfoQuery : public ::google::protobuf::Message {
 public:
  BeingInfoQuery();
  virtual ~BeingInfoQuery();

  BeingInfoQuery(const BeingInfoQuery& from);

  inline BeingInfoQuery& operator=(const BeingInfoQuery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BeingInfoQuery& default_instance();

  void Swap(BeingInfoQuery* other);

  // implements Message ----------------------------------------------

  BeingInfoQuery* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BeingInfoQuery& from);
  void MergeFrom(const BeingInfoQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_INFO_QUERY];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::BeingParam param() const;
  inline void set_param(::Cmd::BeingParam value);

  // repeated .Cmd.BeingInfo beinginfo = 3;
  inline int beinginfo_size() const;
  inline void clear_beinginfo();
  static const int kBeinginfoFieldNumber = 3;
  inline const ::Cmd::BeingInfo& beinginfo(int index) const;
  inline ::Cmd::BeingInfo* mutable_beinginfo(int index);
  inline ::Cmd::BeingInfo* add_beinginfo();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::BeingInfo >&
      beinginfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::BeingInfo >*
      mutable_beinginfo();

  // @@protoc_insertion_point(class_scope:Cmd.BeingInfoQuery)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::BeingInfo > beinginfo_;
  friend void  protobuf_AddDesc_SceneBeing_2eproto();
  friend void protobuf_AssignDesc_SceneBeing_2eproto();
  friend void protobuf_ShutdownFile_SceneBeing_2eproto();

  void InitAsDefaultInstance();
  static BeingInfoQuery* default_instance_;
};
// -------------------------------------------------------------------

class BeingInfoUpdate : public ::google::protobuf::Message {
 public:
  BeingInfoUpdate();
  virtual ~BeingInfoUpdate();

  BeingInfoUpdate(const BeingInfoUpdate& from);

  inline BeingInfoUpdate& operator=(const BeingInfoUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BeingInfoUpdate& default_instance();

  void Swap(BeingInfoUpdate* other);

  // implements Message ----------------------------------------------

  BeingInfoUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BeingInfoUpdate& from);
  void MergeFrom(const BeingInfoUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_INFO_UPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::BeingParam param() const;
  inline void set_param(::Cmd::BeingParam value);

  // required uint32 beingid = 3;
  inline bool has_beingid() const;
  inline void clear_beingid();
  static const int kBeingidFieldNumber = 3;
  inline ::google::protobuf::uint32 beingid() const;
  inline void set_beingid(::google::protobuf::uint32 value);

  // repeated .Cmd.BeingMemberData datas = 4;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 4;
  inline const ::Cmd::BeingMemberData& datas(int index) const;
  inline ::Cmd::BeingMemberData* mutable_datas(int index);
  inline ::Cmd::BeingMemberData* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::BeingMemberData >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::BeingMemberData >*
      mutable_datas();

  // @@protoc_insertion_point(class_scope:Cmd.BeingInfoUpdate)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_beingid();
  inline void clear_has_beingid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::BeingMemberData > datas_;
  ::google::protobuf::uint32 beingid_;
  friend void  protobuf_AddDesc_SceneBeing_2eproto();
  friend void protobuf_AssignDesc_SceneBeing_2eproto();
  friend void protobuf_ShutdownFile_SceneBeing_2eproto();

  void InitAsDefaultInstance();
  static BeingInfoUpdate* default_instance_;
};
// -------------------------------------------------------------------

class BeingSwitchState : public ::google::protobuf::Message {
 public:
  BeingSwitchState();
  virtual ~BeingSwitchState();

  BeingSwitchState(const BeingSwitchState& from);

  inline BeingSwitchState& operator=(const BeingSwitchState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BeingSwitchState& default_instance();

  void Swap(BeingSwitchState* other);

  // implements Message ----------------------------------------------

  BeingSwitchState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BeingSwitchState& from);
  void MergeFrom(const BeingSwitchState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_SWITCH_STATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::BeingParam param() const;
  inline void set_param(::Cmd::BeingParam value);

  // required uint32 beingid = 3;
  inline bool has_beingid() const;
  inline void clear_beingid();
  static const int kBeingidFieldNumber = 3;
  inline ::google::protobuf::uint32 beingid() const;
  inline void set_beingid(::google::protobuf::uint32 value);

  // required bool battle = 4;
  inline bool has_battle() const;
  inline void clear_battle();
  static const int kBattleFieldNumber = 4;
  inline bool battle() const;
  inline void set_battle(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.BeingSwitchState)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_beingid();
  inline void clear_has_beingid();
  inline void set_has_battle();
  inline void clear_has_battle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 beingid_;
  bool battle_;
  friend void  protobuf_AddDesc_SceneBeing_2eproto();
  friend void protobuf_AssignDesc_SceneBeing_2eproto();
  friend void protobuf_ShutdownFile_SceneBeing_2eproto();

  void InitAsDefaultInstance();
  static BeingSwitchState* default_instance_;
};
// -------------------------------------------------------------------

class BeingOffCmd : public ::google::protobuf::Message {
 public:
  BeingOffCmd();
  virtual ~BeingOffCmd();

  BeingOffCmd(const BeingOffCmd& from);

  inline BeingOffCmd& operator=(const BeingOffCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BeingOffCmd& default_instance();

  void Swap(BeingOffCmd* other);

  // implements Message ----------------------------------------------

  BeingOffCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BeingOffCmd& from);
  void MergeFrom(const BeingOffCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_OFF];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::BeingParam param() const;
  inline void set_param(::Cmd::BeingParam value);

  // required uint32 beingid = 3;
  inline bool has_beingid() const;
  inline void clear_beingid();
  static const int kBeingidFieldNumber = 3;
  inline ::google::protobuf::uint32 beingid() const;
  inline void set_beingid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.BeingOffCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_beingid();
  inline void clear_has_beingid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 beingid_;
  friend void  protobuf_AddDesc_SceneBeing_2eproto();
  friend void protobuf_AssignDesc_SceneBeing_2eproto();
  friend void protobuf_ShutdownFile_SceneBeing_2eproto();

  void InitAsDefaultInstance();
  static BeingOffCmd* default_instance_;
};
// -------------------------------------------------------------------

class ChangeBodyBeingCmd : public ::google::protobuf::Message {
 public:
  ChangeBodyBeingCmd();
  virtual ~ChangeBodyBeingCmd();

  ChangeBodyBeingCmd(const ChangeBodyBeingCmd& from);

  inline ChangeBodyBeingCmd& operator=(const ChangeBodyBeingCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeBodyBeingCmd& default_instance();

  void Swap(ChangeBodyBeingCmd* other);

  // implements Message ----------------------------------------------

  ChangeBodyBeingCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeBodyBeingCmd& from);
  void MergeFrom(const ChangeBodyBeingCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_CHANGE_BODY];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::BeingParam param() const;
  inline void set_param(::Cmd::BeingParam value);

  // required uint32 beingid = 3;
  inline bool has_beingid() const;
  inline void clear_beingid();
  static const int kBeingidFieldNumber = 3;
  inline ::google::protobuf::uint32 beingid() const;
  inline void set_beingid(::google::protobuf::uint32 value);

  // required uint32 body = 4;
  inline bool has_body() const;
  inline void clear_body();
  static const int kBodyFieldNumber = 4;
  inline ::google::protobuf::uint32 body() const;
  inline void set_body(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ChangeBodyBeingCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_beingid();
  inline void clear_has_beingid();
  inline void set_has_body();
  inline void clear_has_body();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 beingid_;
  ::google::protobuf::uint32 body_;
  friend void  protobuf_AddDesc_SceneBeing_2eproto();
  friend void protobuf_AssignDesc_SceneBeing_2eproto();
  friend void protobuf_ShutdownFile_SceneBeing_2eproto();

  void InitAsDefaultInstance();
  static ChangeBodyBeingCmd* default_instance_;
};
// ===================================================================


// ===================================================================

// UserBeingData

// optional uint32 version = 13 [default = 0];
inline bool UserBeingData::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserBeingData::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserBeingData::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserBeingData::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 UserBeingData::version() const {
  // @@protoc_insertion_point(field_get:Cmd.UserBeingData.version)
  return version_;
}
inline void UserBeingData::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserBeingData.version)
}

// optional uint32 id = 1 [default = 0];
inline bool UserBeingData::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserBeingData::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserBeingData::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserBeingData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 UserBeingData::id() const {
  // @@protoc_insertion_point(field_get:Cmd.UserBeingData.id)
  return id_;
}
inline void UserBeingData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserBeingData.id)
}

// optional uint32 lv = 2 [default = 0];
inline bool UserBeingData::has_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserBeingData::set_has_lv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserBeingData::clear_has_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserBeingData::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 UserBeingData::lv() const {
  // @@protoc_insertion_point(field_get:Cmd.UserBeingData.lv)
  return lv_;
}
inline void UserBeingData::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserBeingData.lv)
}

// optional uint32 hp = 3 [default = 0];
inline bool UserBeingData::has_hp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserBeingData::set_has_hp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserBeingData::clear_has_hp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserBeingData::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 UserBeingData::hp() const {
  // @@protoc_insertion_point(field_get:Cmd.UserBeingData.hp)
  return hp_;
}
inline void UserBeingData::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserBeingData.hp)
}

// optional bool live = 4 [default = false];
inline bool UserBeingData::has_live() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserBeingData::set_has_live() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserBeingData::clear_has_live() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserBeingData::clear_live() {
  live_ = false;
  clear_has_live();
}
inline bool UserBeingData::live() const {
  // @@protoc_insertion_point(field_get:Cmd.UserBeingData.live)
  return live_;
}
inline void UserBeingData::set_live(bool value) {
  set_has_live();
  live_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserBeingData.live)
}

// optional uint64 exp = 5 [default = 0];
inline bool UserBeingData::has_exp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserBeingData::set_has_exp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserBeingData::clear_has_exp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserBeingData::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::uint64 UserBeingData::exp() const {
  // @@protoc_insertion_point(field_get:Cmd.UserBeingData.exp)
  return exp_;
}
inline void UserBeingData::set_exp(::google::protobuf::uint64 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserBeingData.exp)
}

// optional uint32 usedskillpoint = 6 [default = 0];
inline bool UserBeingData::has_usedskillpoint() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserBeingData::set_has_usedskillpoint() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserBeingData::clear_has_usedskillpoint() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserBeingData::clear_usedskillpoint() {
  usedskillpoint_ = 0u;
  clear_has_usedskillpoint();
}
inline ::google::protobuf::uint32 UserBeingData::usedskillpoint() const {
  // @@protoc_insertion_point(field_get:Cmd.UserBeingData.usedskillpoint)
  return usedskillpoint_;
}
inline void UserBeingData::set_usedskillpoint(::google::protobuf::uint32 value) {
  set_has_usedskillpoint();
  usedskillpoint_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserBeingData.usedskillpoint)
}

// optional bool battle = 7 [default = false];
inline bool UserBeingData::has_battle() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UserBeingData::set_has_battle() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UserBeingData::clear_has_battle() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UserBeingData::clear_battle() {
  battle_ = false;
  clear_has_battle();
}
inline bool UserBeingData::battle() const {
  // @@protoc_insertion_point(field_get:Cmd.UserBeingData.battle)
  return battle_;
}
inline void UserBeingData::set_battle(bool value) {
  set_has_battle();
  battle_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserBeingData.battle)
}

// optional bytes buff = 8;
inline bool UserBeingData::has_buff() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void UserBeingData::set_has_buff() {
  _has_bits_[0] |= 0x00000100u;
}
inline void UserBeingData::clear_has_buff() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void UserBeingData::clear_buff() {
  if (buff_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buff_->clear();
  }
  clear_has_buff();
}
inline const ::std::string& UserBeingData::buff() const {
  // @@protoc_insertion_point(field_get:Cmd.UserBeingData.buff)
  return *buff_;
}
inline void UserBeingData::set_buff(const ::std::string& value) {
  set_has_buff();
  if (buff_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buff_ = new ::std::string;
  }
  buff_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.UserBeingData.buff)
}
inline void UserBeingData::set_buff(const char* value) {
  set_has_buff();
  if (buff_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buff_ = new ::std::string;
  }
  buff_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.UserBeingData.buff)
}
inline void UserBeingData::set_buff(const void* value, size_t size) {
  set_has_buff();
  if (buff_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buff_ = new ::std::string;
  }
  buff_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.UserBeingData.buff)
}
inline ::std::string* UserBeingData::mutable_buff() {
  set_has_buff();
  if (buff_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buff_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.UserBeingData.buff)
  return buff_;
}
inline ::std::string* UserBeingData::release_buff() {
  clear_has_buff();
  if (buff_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = buff_;
    buff_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserBeingData::set_allocated_buff(::std::string* buff) {
  if (buff_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete buff_;
  }
  if (buff) {
    set_has_buff();
    buff_ = buff;
  } else {
    clear_has_buff();
    buff_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.UserBeingData.buff)
}

// repeated .Cmd.SkillItem skills = 9;
inline int UserBeingData::skills_size() const {
  return skills_.size();
}
inline void UserBeingData::clear_skills() {
  skills_.Clear();
}
inline const ::Cmd::SkillItem& UserBeingData::skills(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UserBeingData.skills)
  return skills_.Get(index);
}
inline ::Cmd::SkillItem* UserBeingData::mutable_skills(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.UserBeingData.skills)
  return skills_.Mutable(index);
}
inline ::Cmd::SkillItem* UserBeingData::add_skills() {
  // @@protoc_insertion_point(field_add:Cmd.UserBeingData.skills)
  return skills_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem >&
UserBeingData::skills() const {
  // @@protoc_insertion_point(field_list:Cmd.UserBeingData.skills)
  return skills_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem >*
UserBeingData::mutable_skills() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UserBeingData.skills)
  return &skills_;
}

// repeated uint32 buffids = 10;
inline int UserBeingData::buffids_size() const {
  return buffids_.size();
}
inline void UserBeingData::clear_buffids() {
  buffids_.Clear();
}
inline ::google::protobuf::uint32 UserBeingData::buffids(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UserBeingData.buffids)
  return buffids_.Get(index);
}
inline void UserBeingData::set_buffids(int index, ::google::protobuf::uint32 value) {
  buffids_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.UserBeingData.buffids)
}
inline void UserBeingData::add_buffids(::google::protobuf::uint32 value) {
  buffids_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.UserBeingData.buffids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UserBeingData::buffids() const {
  // @@protoc_insertion_point(field_list:Cmd.UserBeingData.buffids)
  return buffids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UserBeingData::mutable_buffids() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UserBeingData.buffids)
  return &buffids_;
}

// optional uint32 body = 11 [default = 0];
inline bool UserBeingData::has_body() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void UserBeingData::set_has_body() {
  _has_bits_[0] |= 0x00000800u;
}
inline void UserBeingData::clear_has_body() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void UserBeingData::clear_body() {
  body_ = 0u;
  clear_has_body();
}
inline ::google::protobuf::uint32 UserBeingData::body() const {
  // @@protoc_insertion_point(field_get:Cmd.UserBeingData.body)
  return body_;
}
inline void UserBeingData::set_body(::google::protobuf::uint32 value) {
  set_has_body();
  body_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserBeingData.body)
}

// repeated uint32 bodylist = 12;
inline int UserBeingData::bodylist_size() const {
  return bodylist_.size();
}
inline void UserBeingData::clear_bodylist() {
  bodylist_.Clear();
}
inline ::google::protobuf::uint32 UserBeingData::bodylist(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UserBeingData.bodylist)
  return bodylist_.Get(index);
}
inline void UserBeingData::set_bodylist(int index, ::google::protobuf::uint32 value) {
  bodylist_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.UserBeingData.bodylist)
}
inline void UserBeingData::add_bodylist(::google::protobuf::uint32 value) {
  bodylist_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.UserBeingData.bodylist)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UserBeingData::bodylist() const {
  // @@protoc_insertion_point(field_list:Cmd.UserBeingData.bodylist)
  return bodylist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UserBeingData::mutable_bodylist() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UserBeingData.bodylist)
  return &bodylist_;
}

// -------------------------------------------------------------------

// BeingSkillData

// optional uint32 id = 1 [default = 0];
inline bool BeingSkillData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BeingSkillData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BeingSkillData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BeingSkillData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 BeingSkillData::id() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingSkillData.id)
  return id_;
}
inline void BeingSkillData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingSkillData.id)
}

// optional uint32 leftpoint = 2 [default = 0];
inline bool BeingSkillData::has_leftpoint() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BeingSkillData::set_has_leftpoint() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BeingSkillData::clear_has_leftpoint() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BeingSkillData::clear_leftpoint() {
  leftpoint_ = 0u;
  clear_has_leftpoint();
}
inline ::google::protobuf::uint32 BeingSkillData::leftpoint() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingSkillData.leftpoint)
  return leftpoint_;
}
inline void BeingSkillData::set_leftpoint(::google::protobuf::uint32 value) {
  set_has_leftpoint();
  leftpoint_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingSkillData.leftpoint)
}

// optional uint32 usedpoint = 3 [default = 0];
inline bool BeingSkillData::has_usedpoint() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BeingSkillData::set_has_usedpoint() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BeingSkillData::clear_has_usedpoint() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BeingSkillData::clear_usedpoint() {
  usedpoint_ = 0u;
  clear_has_usedpoint();
}
inline ::google::protobuf::uint32 BeingSkillData::usedpoint() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingSkillData.usedpoint)
  return usedpoint_;
}
inline void BeingSkillData::set_usedpoint(::google::protobuf::uint32 value) {
  set_has_usedpoint();
  usedpoint_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingSkillData.usedpoint)
}

// repeated .Cmd.SkillItem items = 4;
inline int BeingSkillData::items_size() const {
  return items_.size();
}
inline void BeingSkillData::clear_items() {
  items_.Clear();
}
inline const ::Cmd::SkillItem& BeingSkillData::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BeingSkillData.items)
  return items_.Get(index);
}
inline ::Cmd::SkillItem* BeingSkillData::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BeingSkillData.items)
  return items_.Mutable(index);
}
inline ::Cmd::SkillItem* BeingSkillData::add_items() {
  // @@protoc_insertion_point(field_add:Cmd.BeingSkillData.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem >&
BeingSkillData::items() const {
  // @@protoc_insertion_point(field_list:Cmd.BeingSkillData.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::SkillItem >*
BeingSkillData::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BeingSkillData.items)
  return &items_;
}

// repeated .Cmd.SpecSkillInfo specinfo = 5;
inline int BeingSkillData::specinfo_size() const {
  return specinfo_.size();
}
inline void BeingSkillData::clear_specinfo() {
  specinfo_.Clear();
}
inline const ::Cmd::SpecSkillInfo& BeingSkillData::specinfo(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BeingSkillData.specinfo)
  return specinfo_.Get(index);
}
inline ::Cmd::SpecSkillInfo* BeingSkillData::mutable_specinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BeingSkillData.specinfo)
  return specinfo_.Mutable(index);
}
inline ::Cmd::SpecSkillInfo* BeingSkillData::add_specinfo() {
  // @@protoc_insertion_point(field_add:Cmd.BeingSkillData.specinfo)
  return specinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SpecSkillInfo >&
BeingSkillData::specinfo() const {
  // @@protoc_insertion_point(field_list:Cmd.BeingSkillData.specinfo)
  return specinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::SpecSkillInfo >*
BeingSkillData::mutable_specinfo() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BeingSkillData.specinfo)
  return &specinfo_;
}

// -------------------------------------------------------------------

// BeingSkillQuery

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
inline bool BeingSkillQuery::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BeingSkillQuery::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BeingSkillQuery::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BeingSkillQuery::clear_cmd() {
  cmd_ = 32;
  clear_has_cmd();
}
inline ::Cmd::Command BeingSkillQuery::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingSkillQuery.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void BeingSkillQuery::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingSkillQuery.cmd)
}

// optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_SKILL_QUERY];
inline bool BeingSkillQuery::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BeingSkillQuery::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BeingSkillQuery::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BeingSkillQuery::clear_param() {
  param_ = 1;
  clear_has_param();
}
inline ::Cmd::BeingParam BeingSkillQuery::param() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingSkillQuery.param)
  return static_cast< ::Cmd::BeingParam >(param_);
}
inline void BeingSkillQuery::set_param(::Cmd::BeingParam value) {
  assert(::Cmd::BeingParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingSkillQuery.param)
}

// repeated .Cmd.BeingSkillData data = 3;
inline int BeingSkillQuery::data_size() const {
  return data_.size();
}
inline void BeingSkillQuery::clear_data() {
  data_.Clear();
}
inline const ::Cmd::BeingSkillData& BeingSkillQuery::data(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BeingSkillQuery.data)
  return data_.Get(index);
}
inline ::Cmd::BeingSkillData* BeingSkillQuery::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BeingSkillQuery.data)
  return data_.Mutable(index);
}
inline ::Cmd::BeingSkillData* BeingSkillQuery::add_data() {
  // @@protoc_insertion_point(field_add:Cmd.BeingSkillQuery.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::BeingSkillData >&
BeingSkillQuery::data() const {
  // @@protoc_insertion_point(field_list:Cmd.BeingSkillQuery.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::BeingSkillData >*
BeingSkillQuery::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BeingSkillQuery.data)
  return &data_;
}

// -------------------------------------------------------------------

// BeingSkillUpdate

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
inline bool BeingSkillUpdate::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BeingSkillUpdate::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BeingSkillUpdate::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BeingSkillUpdate::clear_cmd() {
  cmd_ = 32;
  clear_has_cmd();
}
inline ::Cmd::Command BeingSkillUpdate::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingSkillUpdate.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void BeingSkillUpdate::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingSkillUpdate.cmd)
}

// optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_SKILL_UPDATE];
inline bool BeingSkillUpdate::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BeingSkillUpdate::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BeingSkillUpdate::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BeingSkillUpdate::clear_param() {
  param_ = 2;
  clear_has_param();
}
inline ::Cmd::BeingParam BeingSkillUpdate::param() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingSkillUpdate.param)
  return static_cast< ::Cmd::BeingParam >(param_);
}
inline void BeingSkillUpdate::set_param(::Cmd::BeingParam value) {
  assert(::Cmd::BeingParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingSkillUpdate.param)
}

// repeated .Cmd.BeingSkillData update = 3;
inline int BeingSkillUpdate::update_size() const {
  return update_.size();
}
inline void BeingSkillUpdate::clear_update() {
  update_.Clear();
}
inline const ::Cmd::BeingSkillData& BeingSkillUpdate::update(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BeingSkillUpdate.update)
  return update_.Get(index);
}
inline ::Cmd::BeingSkillData* BeingSkillUpdate::mutable_update(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BeingSkillUpdate.update)
  return update_.Mutable(index);
}
inline ::Cmd::BeingSkillData* BeingSkillUpdate::add_update() {
  // @@protoc_insertion_point(field_add:Cmd.BeingSkillUpdate.update)
  return update_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::BeingSkillData >&
BeingSkillUpdate::update() const {
  // @@protoc_insertion_point(field_list:Cmd.BeingSkillUpdate.update)
  return update_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::BeingSkillData >*
BeingSkillUpdate::mutable_update() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BeingSkillUpdate.update)
  return &update_;
}

// repeated .Cmd.BeingSkillData del = 4;
inline int BeingSkillUpdate::del_size() const {
  return del_.size();
}
inline void BeingSkillUpdate::clear_del() {
  del_.Clear();
}
inline const ::Cmd::BeingSkillData& BeingSkillUpdate::del(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BeingSkillUpdate.del)
  return del_.Get(index);
}
inline ::Cmd::BeingSkillData* BeingSkillUpdate::mutable_del(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BeingSkillUpdate.del)
  return del_.Mutable(index);
}
inline ::Cmd::BeingSkillData* BeingSkillUpdate::add_del() {
  // @@protoc_insertion_point(field_add:Cmd.BeingSkillUpdate.del)
  return del_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::BeingSkillData >&
BeingSkillUpdate::del() const {
  // @@protoc_insertion_point(field_list:Cmd.BeingSkillUpdate.del)
  return del_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::BeingSkillData >*
BeingSkillUpdate::mutable_del() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BeingSkillUpdate.del)
  return &del_;
}

// -------------------------------------------------------------------

// BeingSkillLevelUp

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
inline bool BeingSkillLevelUp::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BeingSkillLevelUp::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BeingSkillLevelUp::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BeingSkillLevelUp::clear_cmd() {
  cmd_ = 32;
  clear_has_cmd();
}
inline ::Cmd::Command BeingSkillLevelUp::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingSkillLevelUp.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void BeingSkillLevelUp::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingSkillLevelUp.cmd)
}

// optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_SKILL_LEVELUP];
inline bool BeingSkillLevelUp::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BeingSkillLevelUp::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BeingSkillLevelUp::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BeingSkillLevelUp::clear_param() {
  param_ = 3;
  clear_has_param();
}
inline ::Cmd::BeingParam BeingSkillLevelUp::param() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingSkillLevelUp.param)
  return static_cast< ::Cmd::BeingParam >(param_);
}
inline void BeingSkillLevelUp::set_param(::Cmd::BeingParam value) {
  assert(::Cmd::BeingParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingSkillLevelUp.param)
}

// optional uint32 beingid = 3 [default = 0];
inline bool BeingSkillLevelUp::has_beingid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BeingSkillLevelUp::set_has_beingid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BeingSkillLevelUp::clear_has_beingid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BeingSkillLevelUp::clear_beingid() {
  beingid_ = 0u;
  clear_has_beingid();
}
inline ::google::protobuf::uint32 BeingSkillLevelUp::beingid() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingSkillLevelUp.beingid)
  return beingid_;
}
inline void BeingSkillLevelUp::set_beingid(::google::protobuf::uint32 value) {
  set_has_beingid();
  beingid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingSkillLevelUp.beingid)
}

// repeated uint32 skillids = 4;
inline int BeingSkillLevelUp::skillids_size() const {
  return skillids_.size();
}
inline void BeingSkillLevelUp::clear_skillids() {
  skillids_.Clear();
}
inline ::google::protobuf::uint32 BeingSkillLevelUp::skillids(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BeingSkillLevelUp.skillids)
  return skillids_.Get(index);
}
inline void BeingSkillLevelUp::set_skillids(int index, ::google::protobuf::uint32 value) {
  skillids_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.BeingSkillLevelUp.skillids)
}
inline void BeingSkillLevelUp::add_skillids(::google::protobuf::uint32 value) {
  skillids_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.BeingSkillLevelUp.skillids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BeingSkillLevelUp::skillids() const {
  // @@protoc_insertion_point(field_list:Cmd.BeingSkillLevelUp.skillids)
  return skillids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BeingSkillLevelUp::mutable_skillids() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BeingSkillLevelUp.skillids)
  return &skillids_;
}

// -------------------------------------------------------------------

// BeingMemberData

// optional .Cmd.EBeingDataType etype = 1 [default = EBEINGDATA_MIN];
inline bool BeingMemberData::has_etype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BeingMemberData::set_has_etype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BeingMemberData::clear_has_etype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BeingMemberData::clear_etype() {
  etype_ = 0;
  clear_has_etype();
}
inline ::Cmd::EBeingDataType BeingMemberData::etype() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingMemberData.etype)
  return static_cast< ::Cmd::EBeingDataType >(etype_);
}
inline void BeingMemberData::set_etype(::Cmd::EBeingDataType value) {
  assert(::Cmd::EBeingDataType_IsValid(value));
  set_has_etype();
  etype_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingMemberData.etype)
}

// optional uint64 value = 2 [default = 0];
inline bool BeingMemberData::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BeingMemberData::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BeingMemberData::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BeingMemberData::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 BeingMemberData::value() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingMemberData.value)
  return value_;
}
inline void BeingMemberData::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingMemberData.value)
}

// repeated uint32 values = 3;
inline int BeingMemberData::values_size() const {
  return values_.size();
}
inline void BeingMemberData::clear_values() {
  values_.Clear();
}
inline ::google::protobuf::uint32 BeingMemberData::values(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BeingMemberData.values)
  return values_.Get(index);
}
inline void BeingMemberData::set_values(int index, ::google::protobuf::uint32 value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.BeingMemberData.values)
}
inline void BeingMemberData::add_values(::google::protobuf::uint32 value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.BeingMemberData.values)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BeingMemberData::values() const {
  // @@protoc_insertion_point(field_list:Cmd.BeingMemberData.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BeingMemberData::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BeingMemberData.values)
  return &values_;
}

// optional string data = 4;
inline bool BeingMemberData::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BeingMemberData::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BeingMemberData::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BeingMemberData::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& BeingMemberData::data() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingMemberData.data)
  return *data_;
}
inline void BeingMemberData::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.BeingMemberData.data)
}
inline void BeingMemberData::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.BeingMemberData.data)
}
inline void BeingMemberData::set_data(const char* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.BeingMemberData.data)
}
inline ::std::string* BeingMemberData::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.BeingMemberData.data)
  return data_;
}
inline ::std::string* BeingMemberData::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BeingMemberData::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.BeingMemberData.data)
}

// -------------------------------------------------------------------

// BeingInfo

// optional uint64 guid = 1 [default = 0];
inline bool BeingInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BeingInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BeingInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BeingInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 BeingInfo::guid() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingInfo.guid)
  return guid_;
}
inline void BeingInfo::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingInfo.guid)
}

// optional uint32 beingid = 2 [default = 0];
inline bool BeingInfo::has_beingid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BeingInfo::set_has_beingid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BeingInfo::clear_has_beingid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BeingInfo::clear_beingid() {
  beingid_ = 0u;
  clear_has_beingid();
}
inline ::google::protobuf::uint32 BeingInfo::beingid() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingInfo.beingid)
  return beingid_;
}
inline void BeingInfo::set_beingid(::google::protobuf::uint32 value) {
  set_has_beingid();
  beingid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingInfo.beingid)
}

// optional uint64 exp = 3 [default = 0];
inline bool BeingInfo::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BeingInfo::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BeingInfo::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BeingInfo::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::uint64 BeingInfo::exp() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingInfo.exp)
  return exp_;
}
inline void BeingInfo::set_exp(::google::protobuf::uint64 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingInfo.exp)
}

// optional uint32 lv = 4 [default = 0];
inline bool BeingInfo::has_lv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BeingInfo::set_has_lv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BeingInfo::clear_has_lv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BeingInfo::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 BeingInfo::lv() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingInfo.lv)
  return lv_;
}
inline void BeingInfo::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingInfo.lv)
}

// optional bool battle = 5 [default = false];
inline bool BeingInfo::has_battle() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BeingInfo::set_has_battle() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BeingInfo::clear_has_battle() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BeingInfo::clear_battle() {
  battle_ = false;
  clear_has_battle();
}
inline bool BeingInfo::battle() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingInfo.battle)
  return battle_;
}
inline void BeingInfo::set_battle(bool value) {
  set_has_battle();
  battle_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingInfo.battle)
}

// optional bool summon = 6 [default = false];
inline bool BeingInfo::has_summon() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BeingInfo::set_has_summon() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BeingInfo::clear_has_summon() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BeingInfo::clear_summon() {
  summon_ = false;
  clear_has_summon();
}
inline bool BeingInfo::summon() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingInfo.summon)
  return summon_;
}
inline void BeingInfo::set_summon(bool value) {
  set_has_summon();
  summon_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingInfo.summon)
}

// optional bool live = 7 [default = false];
inline bool BeingInfo::has_live() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BeingInfo::set_has_live() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BeingInfo::clear_has_live() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BeingInfo::clear_live() {
  live_ = false;
  clear_has_live();
}
inline bool BeingInfo::live() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingInfo.live)
  return live_;
}
inline void BeingInfo::set_live(bool value) {
  set_has_live();
  live_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingInfo.live)
}

// optional uint32 body = 8 [default = 0];
inline bool BeingInfo::has_body() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BeingInfo::set_has_body() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BeingInfo::clear_has_body() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BeingInfo::clear_body() {
  body_ = 0u;
  clear_has_body();
}
inline ::google::protobuf::uint32 BeingInfo::body() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingInfo.body)
  return body_;
}
inline void BeingInfo::set_body(::google::protobuf::uint32 value) {
  set_has_body();
  body_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingInfo.body)
}

// repeated uint32 bodylist = 9;
inline int BeingInfo::bodylist_size() const {
  return bodylist_.size();
}
inline void BeingInfo::clear_bodylist() {
  bodylist_.Clear();
}
inline ::google::protobuf::uint32 BeingInfo::bodylist(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BeingInfo.bodylist)
  return bodylist_.Get(index);
}
inline void BeingInfo::set_bodylist(int index, ::google::protobuf::uint32 value) {
  bodylist_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.BeingInfo.bodylist)
}
inline void BeingInfo::add_bodylist(::google::protobuf::uint32 value) {
  bodylist_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.BeingInfo.bodylist)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BeingInfo::bodylist() const {
  // @@protoc_insertion_point(field_list:Cmd.BeingInfo.bodylist)
  return bodylist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BeingInfo::mutable_bodylist() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BeingInfo.bodylist)
  return &bodylist_;
}

// -------------------------------------------------------------------

// BeingInfoQuery

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
inline bool BeingInfoQuery::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BeingInfoQuery::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BeingInfoQuery::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BeingInfoQuery::clear_cmd() {
  cmd_ = 32;
  clear_has_cmd();
}
inline ::Cmd::Command BeingInfoQuery::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingInfoQuery.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void BeingInfoQuery::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingInfoQuery.cmd)
}

// optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_INFO_QUERY];
inline bool BeingInfoQuery::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BeingInfoQuery::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BeingInfoQuery::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BeingInfoQuery::clear_param() {
  param_ = 4;
  clear_has_param();
}
inline ::Cmd::BeingParam BeingInfoQuery::param() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingInfoQuery.param)
  return static_cast< ::Cmd::BeingParam >(param_);
}
inline void BeingInfoQuery::set_param(::Cmd::BeingParam value) {
  assert(::Cmd::BeingParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingInfoQuery.param)
}

// repeated .Cmd.BeingInfo beinginfo = 3;
inline int BeingInfoQuery::beinginfo_size() const {
  return beinginfo_.size();
}
inline void BeingInfoQuery::clear_beinginfo() {
  beinginfo_.Clear();
}
inline const ::Cmd::BeingInfo& BeingInfoQuery::beinginfo(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BeingInfoQuery.beinginfo)
  return beinginfo_.Get(index);
}
inline ::Cmd::BeingInfo* BeingInfoQuery::mutable_beinginfo(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BeingInfoQuery.beinginfo)
  return beinginfo_.Mutable(index);
}
inline ::Cmd::BeingInfo* BeingInfoQuery::add_beinginfo() {
  // @@protoc_insertion_point(field_add:Cmd.BeingInfoQuery.beinginfo)
  return beinginfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::BeingInfo >&
BeingInfoQuery::beinginfo() const {
  // @@protoc_insertion_point(field_list:Cmd.BeingInfoQuery.beinginfo)
  return beinginfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::BeingInfo >*
BeingInfoQuery::mutable_beinginfo() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BeingInfoQuery.beinginfo)
  return &beinginfo_;
}

// -------------------------------------------------------------------

// BeingInfoUpdate

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
inline bool BeingInfoUpdate::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BeingInfoUpdate::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BeingInfoUpdate::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BeingInfoUpdate::clear_cmd() {
  cmd_ = 32;
  clear_has_cmd();
}
inline ::Cmd::Command BeingInfoUpdate::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingInfoUpdate.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void BeingInfoUpdate::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingInfoUpdate.cmd)
}

// optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_INFO_UPDATE];
inline bool BeingInfoUpdate::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BeingInfoUpdate::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BeingInfoUpdate::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BeingInfoUpdate::clear_param() {
  param_ = 5;
  clear_has_param();
}
inline ::Cmd::BeingParam BeingInfoUpdate::param() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingInfoUpdate.param)
  return static_cast< ::Cmd::BeingParam >(param_);
}
inline void BeingInfoUpdate::set_param(::Cmd::BeingParam value) {
  assert(::Cmd::BeingParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingInfoUpdate.param)
}

// required uint32 beingid = 3;
inline bool BeingInfoUpdate::has_beingid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BeingInfoUpdate::set_has_beingid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BeingInfoUpdate::clear_has_beingid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BeingInfoUpdate::clear_beingid() {
  beingid_ = 0u;
  clear_has_beingid();
}
inline ::google::protobuf::uint32 BeingInfoUpdate::beingid() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingInfoUpdate.beingid)
  return beingid_;
}
inline void BeingInfoUpdate::set_beingid(::google::protobuf::uint32 value) {
  set_has_beingid();
  beingid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingInfoUpdate.beingid)
}

// repeated .Cmd.BeingMemberData datas = 4;
inline int BeingInfoUpdate::datas_size() const {
  return datas_.size();
}
inline void BeingInfoUpdate::clear_datas() {
  datas_.Clear();
}
inline const ::Cmd::BeingMemberData& BeingInfoUpdate::datas(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BeingInfoUpdate.datas)
  return datas_.Get(index);
}
inline ::Cmd::BeingMemberData* BeingInfoUpdate::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BeingInfoUpdate.datas)
  return datas_.Mutable(index);
}
inline ::Cmd::BeingMemberData* BeingInfoUpdate::add_datas() {
  // @@protoc_insertion_point(field_add:Cmd.BeingInfoUpdate.datas)
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::BeingMemberData >&
BeingInfoUpdate::datas() const {
  // @@protoc_insertion_point(field_list:Cmd.BeingInfoUpdate.datas)
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::BeingMemberData >*
BeingInfoUpdate::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BeingInfoUpdate.datas)
  return &datas_;
}

// -------------------------------------------------------------------

// BeingSwitchState

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
inline bool BeingSwitchState::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BeingSwitchState::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BeingSwitchState::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BeingSwitchState::clear_cmd() {
  cmd_ = 32;
  clear_has_cmd();
}
inline ::Cmd::Command BeingSwitchState::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingSwitchState.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void BeingSwitchState::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingSwitchState.cmd)
}

// optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_SWITCH_STATE];
inline bool BeingSwitchState::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BeingSwitchState::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BeingSwitchState::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BeingSwitchState::clear_param() {
  param_ = 7;
  clear_has_param();
}
inline ::Cmd::BeingParam BeingSwitchState::param() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingSwitchState.param)
  return static_cast< ::Cmd::BeingParam >(param_);
}
inline void BeingSwitchState::set_param(::Cmd::BeingParam value) {
  assert(::Cmd::BeingParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingSwitchState.param)
}

// required uint32 beingid = 3;
inline bool BeingSwitchState::has_beingid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BeingSwitchState::set_has_beingid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BeingSwitchState::clear_has_beingid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BeingSwitchState::clear_beingid() {
  beingid_ = 0u;
  clear_has_beingid();
}
inline ::google::protobuf::uint32 BeingSwitchState::beingid() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingSwitchState.beingid)
  return beingid_;
}
inline void BeingSwitchState::set_beingid(::google::protobuf::uint32 value) {
  set_has_beingid();
  beingid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingSwitchState.beingid)
}

// required bool battle = 4;
inline bool BeingSwitchState::has_battle() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BeingSwitchState::set_has_battle() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BeingSwitchState::clear_has_battle() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BeingSwitchState::clear_battle() {
  battle_ = false;
  clear_has_battle();
}
inline bool BeingSwitchState::battle() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingSwitchState.battle)
  return battle_;
}
inline void BeingSwitchState::set_battle(bool value) {
  set_has_battle();
  battle_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingSwitchState.battle)
}

// -------------------------------------------------------------------

// BeingOffCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
inline bool BeingOffCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BeingOffCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BeingOffCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BeingOffCmd::clear_cmd() {
  cmd_ = 32;
  clear_has_cmd();
}
inline ::Cmd::Command BeingOffCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingOffCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void BeingOffCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingOffCmd.cmd)
}

// optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_OFF];
inline bool BeingOffCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BeingOffCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BeingOffCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BeingOffCmd::clear_param() {
  param_ = 6;
  clear_has_param();
}
inline ::Cmd::BeingParam BeingOffCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingOffCmd.param)
  return static_cast< ::Cmd::BeingParam >(param_);
}
inline void BeingOffCmd::set_param(::Cmd::BeingParam value) {
  assert(::Cmd::BeingParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingOffCmd.param)
}

// required uint32 beingid = 3;
inline bool BeingOffCmd::has_beingid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BeingOffCmd::set_has_beingid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BeingOffCmd::clear_has_beingid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BeingOffCmd::clear_beingid() {
  beingid_ = 0u;
  clear_has_beingid();
}
inline ::google::protobuf::uint32 BeingOffCmd::beingid() const {
  // @@protoc_insertion_point(field_get:Cmd.BeingOffCmd.beingid)
  return beingid_;
}
inline void BeingOffCmd::set_beingid(::google::protobuf::uint32 value) {
  set_has_beingid();
  beingid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeingOffCmd.beingid)
}

// -------------------------------------------------------------------

// ChangeBodyBeingCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_BEING_PROTOCMD];
inline bool ChangeBodyBeingCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeBodyBeingCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeBodyBeingCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeBodyBeingCmd::clear_cmd() {
  cmd_ = 32;
  clear_has_cmd();
}
inline ::Cmd::Command ChangeBodyBeingCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeBodyBeingCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ChangeBodyBeingCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeBodyBeingCmd.cmd)
}

// optional .Cmd.BeingParam param = 2 [default = BEINGPARAM_BEING_CHANGE_BODY];
inline bool ChangeBodyBeingCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeBodyBeingCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeBodyBeingCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeBodyBeingCmd::clear_param() {
  param_ = 8;
  clear_has_param();
}
inline ::Cmd::BeingParam ChangeBodyBeingCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeBodyBeingCmd.param)
  return static_cast< ::Cmd::BeingParam >(param_);
}
inline void ChangeBodyBeingCmd::set_param(::Cmd::BeingParam value) {
  assert(::Cmd::BeingParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeBodyBeingCmd.param)
}

// required uint32 beingid = 3;
inline bool ChangeBodyBeingCmd::has_beingid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChangeBodyBeingCmd::set_has_beingid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChangeBodyBeingCmd::clear_has_beingid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChangeBodyBeingCmd::clear_beingid() {
  beingid_ = 0u;
  clear_has_beingid();
}
inline ::google::protobuf::uint32 ChangeBodyBeingCmd::beingid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeBodyBeingCmd.beingid)
  return beingid_;
}
inline void ChangeBodyBeingCmd::set_beingid(::google::protobuf::uint32 value) {
  set_has_beingid();
  beingid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeBodyBeingCmd.beingid)
}

// required uint32 body = 4;
inline bool ChangeBodyBeingCmd::has_body() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChangeBodyBeingCmd::set_has_body() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChangeBodyBeingCmd::clear_has_body() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChangeBodyBeingCmd::clear_body() {
  body_ = 0u;
  clear_has_body();
}
inline ::google::protobuf::uint32 ChangeBodyBeingCmd::body() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeBodyBeingCmd.body)
  return body_;
}
inline void ChangeBodyBeingCmd::set_body(::google::protobuf::uint32 value) {
  set_has_body();
  body_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeBodyBeingCmd.body)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cmd

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Cmd::BeingParam> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::BeingParam>() {
  return ::Cmd::BeingParam_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EBeingDataType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EBeingDataType>() {
  return ::Cmd::EBeingDataType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SceneBeing_2eproto__INCLUDED
