// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GuildSCmd.proto

#ifndef PROTOBUF_GuildSCmd_2eproto__INCLUDED
#define PROTOBUF_GuildSCmd_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "xCmd.pb.h"
#include "GuildCmd.pb.h"
#include "SocialCmd.pb.h"
#include "SessionMail.pb.h"
#include "SceneItem.pb.h"
#include "SceneUser2.pb.h"
// @@protoc_insertion_point(includes)

namespace Cmd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GuildSCmd_2eproto();
void protobuf_AssignDesc_GuildSCmd_2eproto();
void protobuf_ShutdownFile_GuildSCmd_2eproto();

class UserGuildInfoSyncGuildSCmd;
class ChatSyncGuildSCmd;
class LoadLuaGuildSCmd;
class GuildUserInfo;
class GuildUserInfoSyncGuildCmd;
class GuildSMember;
class GuildArtifactQuest;
class GuildGvgData;
class GuildInfo;
class GuildInfoSyncGuildSCmd;
class GuildDataUpdateGuildSCmd;
class CityDataUpdateGuildSCmd;
class GuildMemberUpdateGuildSCmd;
class GuildMemberDataUpdateGuildSCmd;
class GuildQuestUpdateGuildSCmd;
class EnterGuildTerritoryGuildSCmd;
class RefreshGuildTerritoryGuildSCmd;
class QueryPhotoListGuildSCmd;
class QueryUserPhotoListGuildSCmd;
class PhotoLoad;
class QueryShowPhotoGuildSCmd;
class FrameUpdateGuildSCmd;
class PhotoUpdateGuildSCmd;
class JobUpdateGuildSCmd;
class GuildMusicDeleteGuildSCmd;
class RenameNTFGuildCmd;
class GuildCityActionGuildSCmd;
class SendMailGuildSCmd;
class GVGRewardGuildSCmd;
class GuildPrayGuildSCmd;
class GuildIconStateGuildSCmd;
class BuildingMaterial;
class SubmitMaterialGuildSCmd;
class BuildingUpdateGuildSCmd;
class QueryGuildInfoGuildSCmd;
class SendWelfareGuildSCmd;
class GuildChallengeItem;
class ChallengeProgressGuildSCmd;
class GuildGM;
class GMCommandGuildSCmd;
class GMCommandRespondGuildSCmd;
class BuildingEffectGuildSCmd;
class ArtifactUpdateGuildSCmd;
class GuildArtifactQuestGuildSCmd;
class QueryTreasureGuildSCmd;
class GvgUserPartInGuildSCmd;
class TreasureResultNtfGuildSCmd;
class UpdateCityStateGuildSCmd;
class GvgOpenToServerGuildSCmd;
class ShopBuyItemGuildSCmd;
class JoinSuperGvgGuildSCmd;
class EndSuperGvgGuildSCmd;
class UpdateCityGuildSCmd;
class GvgResultInfo;
class GvgResultGuildSCmd;
class GuildBrocastMailGuildSCmd;
class GuildBrocastMsgGuildSCmd;

enum GuildSParam {
  GUILDSPARAM_USER_GUILDINFO_SYNC = 1,
  GUILDSPARAM_CHAT_SYNC = 2,
  GUILDSPARAM_LOAD_LUA = 3,
  GUILDSPARAM_GUILD_SYNC_USERINFO = 4,
  GUILDSPARAM_SYNC_INFO = 5,
  GUILDSPARAM_UPDATE_GUILDDATA = 6,
  GUILDSPARAM_UPDATE_CITYDATA = 7,
  GUILDSPARAM_UPDATE_MEMBER = 8,
  GUILDSPARAM_UPDATE_MEMBERDATA = 9,
  GUILDSPARAM_UPDATE_QUEST = 10,
  GUILDSPARAM_ENTER_TERRITORY = 11,
  GUILDSPARAM_REFRESH_TERRITORY = 12,
  GUILDSPARAM_QUERY_PHOTOLIST = 14,
  GUILDSPARAM_QUERY_USERPHOTOLIST = 15,
  GUILDSPARAM_QUERY_SHOWPHOTOLIST = 16,
  GUILDSPARAM_FRAME_UPDATE = 17,
  GUILDSPARAM_PHOTO_UPDATE = 18,
  GUILDSPARAM_JOB_UPDATE = 19,
  GUILDSPARAM_GUILD_MUSIC_DELETE = 20,
  GUILDSPARAM_RENAME_NTF = 21,
  GUILDSPARAM_GUILD_CITY_ACTION = 22,
  GUILDSPARAM_SEND_MAIL = 23,
  GUILDSPARAM_GVG_REWARD = 24,
  GUILDSPARAM_GUILDPRAY = 25,
  GUILDSPARAM_GUILD_ICON_STATE = 26,
  GUILDSPARAM_SUBMIT_MATERIAL = 27,
  GUILDSPARAM_BUILDING_UPDATE = 28,
  GUILDSPARAM_QUERY_GUILD_INFO = 29,
  GUILDSPARAM_SEND_WELFARE = 30,
  GUILDSPARAM_CHALLENGE_PROGRESS = 31,
  GUILDSPARAM_GM_COMMAND = 32,
  GUILDSPARAM_GM_RESPOND = 33,
  GUILDSPARAM_BUILDINGEFFECT = 34,
  GUILDSPARAM_ARTIFACT_UPDATE = 35,
  GUILDSPARAM_QUEST_ARTIFACT = 36,
  GUILDSPARAM_TREASURE_QUERY = 37,
  GUILDSPARAM_GVG_USER_PARTIN = 38,
  GUILDSPARAM_TREASURE_RESULTNTF = 39,
  GUILDSPARAM_OPEN_GVG = 40,
  GUILDSPARAM_UPDATE_CITYSTATE = 41,
  GUILDSPARAM_JOINSUPERGVG_REQ = 42,
  GUILDSPARAM_SUPERGVG_END = 43,
  GUILDSPARAM_SHOP_BUY_ITEM = 44,
  GUILDSPARAM_GVG_RESULT = 45,
  GUILDSPARAM_UPDATE_CITY = 46,
  GUILDSPARAM_GUILD_MAIL = 48,
  GUILDSPARAM_GUILD_MSG = 49
};
bool GuildSParam_IsValid(int value);
const GuildSParam GuildSParam_MIN = GUILDSPARAM_USER_GUILDINFO_SYNC;
const GuildSParam GuildSParam_MAX = GUILDSPARAM_GUILD_MSG;
const int GuildSParam_ARRAYSIZE = GuildSParam_MAX + 1;

const ::google::protobuf::EnumDescriptor* GuildSParam_descriptor();
inline const ::std::string& GuildSParam_Name(GuildSParam value) {
  return ::google::protobuf::internal::NameOfEnum(
    GuildSParam_descriptor(), value);
}
inline bool GuildSParam_Parse(
    const ::std::string& name, GuildSParam* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GuildSParam>(
    GuildSParam_descriptor(), name, value);
}
enum GuildOptConType {
  GUILDOPTCONTYPE_LOGIN = 0,
  GUILDOPTCONTYPE_ADD = 1,
  GUILDOPTCONTYPE_SUB = 2
};
bool GuildOptConType_IsValid(int value);
const GuildOptConType GuildOptConType_MIN = GUILDOPTCONTYPE_LOGIN;
const GuildOptConType GuildOptConType_MAX = GUILDOPTCONTYPE_SUB;
const int GuildOptConType_ARRAYSIZE = GuildOptConType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GuildOptConType_descriptor();
inline const ::std::string& GuildOptConType_Name(GuildOptConType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GuildOptConType_descriptor(), value);
}
inline bool GuildOptConType_Parse(
    const ::std::string& name, GuildOptConType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GuildOptConType>(
    GuildOptConType_descriptor(), name, value);
}
enum EPhotoAction {
  EPHOTOACTION_MIN = 0,
  EPHOTOACTION_LOAD_FROM_RECORD = 1,
  EPHOTOACTION_UPDATE_FROM_RECORD = 2,
  EPHOTOACTION_LOAD_FROM_SCENE = 3,
  EPHOTOACTION_UPDATE_FROM_SCENE = 4,
  EPHOTOACTION_MAX = 5
};
bool EPhotoAction_IsValid(int value);
const EPhotoAction EPhotoAction_MIN = EPHOTOACTION_MIN;
const EPhotoAction EPhotoAction_MAX = EPHOTOACTION_MAX;
const int EPhotoAction_ARRAYSIZE = EPhotoAction_MAX + 1;

const ::google::protobuf::EnumDescriptor* EPhotoAction_descriptor();
inline const ::std::string& EPhotoAction_Name(EPhotoAction value) {
  return ::google::protobuf::internal::NameOfEnum(
    EPhotoAction_descriptor(), value);
}
inline bool EPhotoAction_Parse(
    const ::std::string& name, EPhotoAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EPhotoAction>(
    EPhotoAction_descriptor(), name, value);
}
enum EGuildCityAction {
  EGUILDCITYACTION_MIN = 0,
  EGUILDCITYACTION_TO_GUILD_SAVE = 1,
  EGUILDCITYACTION_TO_GUILD_RESET = 2,
  EGUILDCITYACTION_TO_RECORD_SAVE = 3,
  EGUILDCITYACTION_TO_GUILD_UPDATE = 4,
  EGUILDCITYACTION_TO_SCENE_UPDATE = 5,
  EGUILDCITYACTION_GUILD_QUERY = 6,
  EGUILDCITYACTION_MAX = 7
};
bool EGuildCityAction_IsValid(int value);
const EGuildCityAction EGuildCityAction_MIN = EGUILDCITYACTION_MIN;
const EGuildCityAction EGuildCityAction_MAX = EGUILDCITYACTION_MAX;
const int EGuildCityAction_ARRAYSIZE = EGuildCityAction_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGuildCityAction_descriptor();
inline const ::std::string& EGuildCityAction_Name(EGuildCityAction value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGuildCityAction_descriptor(), value);
}
inline bool EGuildCityAction_Parse(
    const ::std::string& name, EGuildCityAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGuildCityAction>(
    EGuildCityAction_descriptor(), name, value);
}
enum EGuildCityResult {
  EGUILDCITYRESULT_MIN = 0,
  EGUILDCITYRESULT_LOAD = 1,
  EGUILDCITYRESULT_OCCUPY = 2,
  EGUILDCITYRESULT_NOOWNER = 3,
  EGUILDCITYRESULT_GIVEUP = 4,
  EGUILDCITYRESULT_OTHER = 5,
  EGUILDCITYRESULT_MAX = 6
};
bool EGuildCityResult_IsValid(int value);
const EGuildCityResult EGuildCityResult_MIN = EGUILDCITYRESULT_MIN;
const EGuildCityResult EGuildCityResult_MAX = EGUILDCITYRESULT_MAX;
const int EGuildCityResult_ARRAYSIZE = EGuildCityResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGuildCityResult_descriptor();
inline const ::std::string& EGuildCityResult_Name(EGuildCityResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGuildCityResult_descriptor(), value);
}
inline bool EGuildCityResult_Parse(
    const ::std::string& name, EGuildCityResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGuildCityResult>(
    EGuildCityResult_descriptor(), name, value);
}
// ===================================================================

class UserGuildInfoSyncGuildSCmd : public ::google::protobuf::Message {
 public:
  UserGuildInfoSyncGuildSCmd();
  virtual ~UserGuildInfoSyncGuildSCmd();

  UserGuildInfoSyncGuildSCmd(const UserGuildInfoSyncGuildSCmd& from);

  inline UserGuildInfoSyncGuildSCmd& operator=(const UserGuildInfoSyncGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserGuildInfoSyncGuildSCmd& default_instance();

  void Swap(UserGuildInfoSyncGuildSCmd* other);

  // implements Message ----------------------------------------------

  UserGuildInfoSyncGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserGuildInfoSyncGuildSCmd& from);
  void MergeFrom(const UserGuildInfoSyncGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_USER_GUILDINFO_SYNC];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint64 guildid = 4 [default = 0];
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 4;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional string guildname = 5;
  inline bool has_guildname() const;
  inline void clear_guildname();
  static const int kGuildnameFieldNumber = 5;
  inline const ::std::string& guildname() const;
  inline void set_guildname(const ::std::string& value);
  inline void set_guildname(const char* value);
  inline void set_guildname(const char* value, size_t size);
  inline ::std::string* mutable_guildname();
  inline ::std::string* release_guildname();
  inline void set_allocated_guildname(::std::string* guildname);

  // optional string guildportrait = 6;
  inline bool has_guildportrait() const;
  inline void clear_guildportrait();
  static const int kGuildportraitFieldNumber = 6;
  inline const ::std::string& guildportrait() const;
  inline void set_guildportrait(const ::std::string& value);
  inline void set_guildportrait(const char* value);
  inline void set_guildportrait(const char* value, size_t size);
  inline ::std::string* mutable_guildportrait();
  inline ::std::string* release_guildportrait();
  inline void set_allocated_guildportrait(::std::string* guildportrait);

  // @@protoc_insertion_point(class_scope:Cmd.UserGuildInfoSyncGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_guildname();
  inline void clear_has_guildname();
  inline void set_has_guildportrait();
  inline void clear_has_guildportrait();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 guildid_;
  ::std::string* guildname_;
  ::std::string* guildportrait_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static UserGuildInfoSyncGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class ChatSyncGuildSCmd : public ::google::protobuf::Message {
 public:
  ChatSyncGuildSCmd();
  virtual ~ChatSyncGuildSCmd();

  ChatSyncGuildSCmd(const ChatSyncGuildSCmd& from);

  inline ChatSyncGuildSCmd& operator=(const ChatSyncGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatSyncGuildSCmd& default_instance();

  void Swap(ChatSyncGuildSCmd* other);

  // implements Message ----------------------------------------------

  ChatSyncGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChatSyncGuildSCmd& from);
  void MergeFrom(const ChatSyncGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_CHAT_SYNC];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional bytes data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // optional uint32 len = 5 [default = 0];
  inline bool has_len() const;
  inline void clear_len();
  static const int kLenFieldNumber = 5;
  inline ::google::protobuf::uint32 len() const;
  inline void set_len(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ChatSyncGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_len();
  inline void clear_has_len();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::std::string* data_;
  ::google::protobuf::uint32 len_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static ChatSyncGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class LoadLuaGuildSCmd : public ::google::protobuf::Message {
 public:
  LoadLuaGuildSCmd();
  virtual ~LoadLuaGuildSCmd();

  LoadLuaGuildSCmd(const LoadLuaGuildSCmd& from);

  inline LoadLuaGuildSCmd& operator=(const LoadLuaGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadLuaGuildSCmd& default_instance();

  void Swap(LoadLuaGuildSCmd* other);

  // implements Message ----------------------------------------------

  LoadLuaGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoadLuaGuildSCmd& from);
  void MergeFrom(const LoadLuaGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_LOAD_LUA];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional string table = 3;
  inline bool has_table() const;
  inline void clear_table();
  static const int kTableFieldNumber = 3;
  inline const ::std::string& table() const;
  inline void set_table(const ::std::string& value);
  inline void set_table(const char* value);
  inline void set_table(const char* value, size_t size);
  inline ::std::string* mutable_table();
  inline ::std::string* release_table();
  inline void set_allocated_table(::std::string* table);

  // optional string lua = 4;
  inline bool has_lua() const;
  inline void clear_lua();
  static const int kLuaFieldNumber = 4;
  inline const ::std::string& lua() const;
  inline void set_lua(const ::std::string& value);
  inline void set_lua(const char* value);
  inline void set_lua(const char* value, size_t size);
  inline ::std::string* mutable_lua();
  inline ::std::string* release_lua();
  inline void set_allocated_lua(::std::string* lua);

  // optional string log = 5;
  inline bool has_log() const;
  inline void clear_log();
  static const int kLogFieldNumber = 5;
  inline const ::std::string& log() const;
  inline void set_log(const ::std::string& value);
  inline void set_log(const char* value);
  inline void set_log(const char* value, size_t size);
  inline ::std::string* mutable_log();
  inline ::std::string* release_log();
  inline void set_allocated_log(::std::string* log);

  // @@protoc_insertion_point(class_scope:Cmd.LoadLuaGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_table();
  inline void clear_has_table();
  inline void set_has_lua();
  inline void clear_has_lua();
  inline void set_has_log();
  inline void clear_has_log();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::std::string* table_;
  ::std::string* lua_;
  ::std::string* log_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static LoadLuaGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildUserInfo : public ::google::protobuf::Message {
 public:
  GuildUserInfo();
  virtual ~GuildUserInfo();

  GuildUserInfo(const GuildUserInfo& from);

  inline GuildUserInfo& operator=(const GuildUserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildUserInfo& default_instance();

  void Swap(GuildUserInfo* other);

  // implements Message ----------------------------------------------

  GuildUserInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildUserInfo& from);
  void MergeFrom(const GuildUserInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 giftpoint = 1 [default = 0];
  inline bool has_giftpoint() const;
  inline void clear_giftpoint();
  static const int kGiftpointFieldNumber = 1;
  inline ::google::protobuf::uint32 giftpoint() const;
  inline void set_giftpoint(::google::protobuf::uint32 value);

  // optional uint32 contribute = 2 [default = 0];
  inline bool has_contribute() const;
  inline void clear_contribute();
  static const int kContributeFieldNumber = 2;
  inline ::google::protobuf::uint32 contribute() const;
  inline void set_contribute(::google::protobuf::uint32 value);

  // repeated .Cmd.GuildMemberPray prays = 3;
  inline int prays_size() const;
  inline void clear_prays();
  static const int kPraysFieldNumber = 3;
  inline const ::Cmd::GuildMemberPray& prays(int index) const;
  inline ::Cmd::GuildMemberPray* mutable_prays(int index);
  inline ::Cmd::GuildMemberPray* add_prays();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMemberPray >&
      prays() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMemberPray >*
      mutable_prays();

  // @@protoc_insertion_point(class_scope:Cmd.GuildUserInfo)
 private:
  inline void set_has_giftpoint();
  inline void clear_has_giftpoint();
  inline void set_has_contribute();
  inline void clear_has_contribute();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 giftpoint_;
  ::google::protobuf::uint32 contribute_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMemberPray > prays_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildUserInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuildUserInfoSyncGuildCmd : public ::google::protobuf::Message {
 public:
  GuildUserInfoSyncGuildCmd();
  virtual ~GuildUserInfoSyncGuildCmd();

  GuildUserInfoSyncGuildCmd(const GuildUserInfoSyncGuildCmd& from);

  inline GuildUserInfoSyncGuildCmd& operator=(const GuildUserInfoSyncGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildUserInfoSyncGuildCmd& default_instance();

  void Swap(GuildUserInfoSyncGuildCmd* other);

  // implements Message ----------------------------------------------

  GuildUserInfoSyncGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildUserInfoSyncGuildCmd& from);
  void MergeFrom(const GuildUserInfoSyncGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_GUILD_SYNC_USERINFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional .Cmd.GuildUserInfo info = 4;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 4;
  inline const ::Cmd::GuildUserInfo& info() const;
  inline ::Cmd::GuildUserInfo* mutable_info();
  inline ::Cmd::GuildUserInfo* release_info();
  inline void set_allocated_info(::Cmd::GuildUserInfo* info);

  // optional bool levelup = 5 [default = false];
  inline bool has_levelup() const;
  inline void clear_levelup();
  static const int kLevelupFieldNumber = 5;
  inline bool levelup() const;
  inline void set_levelup(bool value);

  // optional .Cmd.GuildOptConType optcontype = 6 [default = GUILDOPTCONTYPE_LOGIN];
  inline bool has_optcontype() const;
  inline void clear_optcontype();
  static const int kOptcontypeFieldNumber = 6;
  inline ::Cmd::GuildOptConType optcontype() const;
  inline void set_optcontype(::Cmd::GuildOptConType value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildUserInfoSyncGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_levelup();
  inline void clear_has_levelup();
  inline void set_has_optcontype();
  inline void clear_has_optcontype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::Cmd::GuildUserInfo* info_;
  bool levelup_;
  int optcontype_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildUserInfoSyncGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildSMember : public ::google::protobuf::Message {
 public:
  GuildSMember();
  virtual ~GuildSMember();

  GuildSMember(const GuildSMember& from);

  inline GuildSMember& operator=(const GuildSMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildSMember& default_instance();

  void Swap(GuildSMember* other);

  // implements Message ----------------------------------------------

  GuildSMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildSMember& from);
  void MergeFrom(const GuildSMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charid = 1 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 onlinetime = 2 [default = 0];
  inline bool has_onlinetime() const;
  inline void clear_onlinetime();
  static const int kOnlinetimeFieldNumber = 2;
  inline ::google::protobuf::uint32 onlinetime() const;
  inline void set_onlinetime(::google::protobuf::uint32 value);

  // optional uint32 entertime = 3 [default = 0];
  inline bool has_entertime() const;
  inline void clear_entertime();
  static const int kEntertimeFieldNumber = 3;
  inline ::google::protobuf::uint32 entertime() const;
  inline void set_entertime(::google::protobuf::uint32 value);

  // optional .Cmd.EGuildJob job = 4 [default = EGUILDJOB_MIN];
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 4;
  inline ::Cmd::EGuildJob job() const;
  inline void set_job(::Cmd::EGuildJob value);

  // optional string name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint64 accid = 6 [default = 0];
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 6;
  inline ::google::protobuf::uint64 accid() const;
  inline void set_accid(::google::protobuf::uint64 value);

  // optional uint32 offlinetime = 7 [default = 0];
  inline bool has_offlinetime() const;
  inline void clear_offlinetime();
  static const int kOfflinetimeFieldNumber = 7;
  inline ::google::protobuf::uint32 offlinetime() const;
  inline void set_offlinetime(::google::protobuf::uint32 value);

  // optional uint32 auth = 8 [default = 0];
  inline bool has_auth() const;
  inline void clear_auth();
  static const int kAuthFieldNumber = 8;
  inline ::google::protobuf::uint32 auth() const;
  inline void set_auth(::google::protobuf::uint32 value);

  // optional bool buildingeffect = 9 [default = false];
  inline bool has_buildingeffect() const;
  inline void clear_buildingeffect();
  static const int kBuildingeffectFieldNumber = 9;
  inline bool buildingeffect() const;
  inline void set_buildingeffect(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildSMember)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_onlinetime();
  inline void clear_has_onlinetime();
  inline void set_has_entertime();
  inline void clear_has_entertime();
  inline void set_has_job();
  inline void clear_has_job();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_accid();
  inline void clear_has_accid();
  inline void set_has_offlinetime();
  inline void clear_has_offlinetime();
  inline void set_has_auth();
  inline void clear_has_auth();
  inline void set_has_buildingeffect();
  inline void clear_has_buildingeffect();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 onlinetime_;
  ::google::protobuf::uint32 entertime_;
  ::std::string* name_;
  int job_;
  ::google::protobuf::uint32 offlinetime_;
  ::google::protobuf::uint64 accid_;
  ::google::protobuf::uint32 auth_;
  bool buildingeffect_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildSMember* default_instance_;
};
// -------------------------------------------------------------------

class GuildArtifactQuest : public ::google::protobuf::Message {
 public:
  GuildArtifactQuest();
  virtual ~GuildArtifactQuest();

  GuildArtifactQuest(const GuildArtifactQuest& from);

  inline GuildArtifactQuest& operator=(const GuildArtifactQuest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildArtifactQuest& default_instance();

  void Swap(GuildArtifactQuest* other);

  // implements Message ----------------------------------------------

  GuildArtifactQuest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildArtifactQuest& from);
  void MergeFrom(const GuildArtifactQuest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 submitids = 1;
  inline int submitids_size() const;
  inline void clear_submitids();
  static const int kSubmitidsFieldNumber = 1;
  inline ::google::protobuf::uint32 submitids(int index) const;
  inline void set_submitids(int index, ::google::protobuf::uint32 value);
  inline void add_submitids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      submitids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_submitids();

  // repeated .Cmd.ItemData datas = 2;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 2;
  inline const ::Cmd::ItemData& datas(int index) const;
  inline ::Cmd::ItemData* mutable_datas(int index);
  inline ::Cmd::ItemData* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
      mutable_datas();

  // @@protoc_insertion_point(class_scope:Cmd.GuildArtifactQuest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > submitids_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData > datas_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildArtifactQuest* default_instance_;
};
// -------------------------------------------------------------------

class GuildGvgData : public ::google::protobuf::Message {
 public:
  GuildGvgData();
  virtual ~GuildGvgData();

  GuildGvgData(const GuildGvgData& from);

  inline GuildGvgData& operator=(const GuildGvgData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildGvgData& default_instance();

  void Swap(GuildGvgData* other);

  // implements Message ----------------------------------------------

  GuildGvgData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildGvgData& from);
  void MergeFrom(const GuildGvgData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool insupergvg = 1 [default = false];
  inline bool has_insupergvg() const;
  inline void clear_insupergvg();
  static const int kInsupergvgFieldNumber = 1;
  inline bool insupergvg() const;
  inline void set_insupergvg(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildGvgData)
 private:
  inline void set_has_insupergvg();
  inline void clear_has_insupergvg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool insupergvg_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildGvgData* default_instance_;
};
// -------------------------------------------------------------------

class GuildInfo : public ::google::protobuf::Message {
 public:
  GuildInfo();
  virtual ~GuildInfo();

  GuildInfo(const GuildInfo& from);

  inline GuildInfo& operator=(const GuildInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildInfo& default_instance();

  void Swap(GuildInfo* other);

  // implements Message ----------------------------------------------

  GuildInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildInfo& from);
  void MergeFrom(const GuildInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 zoneid = 2 [default = 0];
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 lv = 3 [default = 0];
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 3;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);

  // optional uint32 scene = 4 [default = 0];
  inline bool has_scene() const;
  inline void clear_scene();
  static const int kSceneFieldNumber = 4;
  inline ::google::protobuf::uint32 scene() const;
  inline void set_scene(::google::protobuf::uint32 value);

  // optional uint32 auth = 12 [default = 0];
  inline bool has_auth() const;
  inline void clear_auth();
  static const int kAuthFieldNumber = 12;
  inline ::google::protobuf::uint32 auth() const;
  inline void set_auth(::google::protobuf::uint32 value);

  // optional bool create = 5 [default = false];
  inline bool has_create() const;
  inline void clear_create();
  static const int kCreateFieldNumber = 5;
  inline bool create() const;
  inline void set_create(bool value);

  // optional string name = 6;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 6;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string portrait = 7;
  inline bool has_portrait() const;
  inline void clear_portrait();
  static const int kPortraitFieldNumber = 7;
  inline const ::std::string& portrait() const;
  inline void set_portrait(const ::std::string& value);
  inline void set_portrait(const char* value);
  inline void set_portrait(const char* value, size_t size);
  inline ::std::string* mutable_portrait();
  inline ::std::string* release_portrait();
  inline void set_allocated_portrait(::std::string* portrait);

  // optional string jobname = 8;
  inline bool has_jobname() const;
  inline void clear_jobname();
  static const int kJobnameFieldNumber = 8;
  inline const ::std::string& jobname() const;
  inline void set_jobname(const ::std::string& value);
  inline void set_jobname(const char* value);
  inline void set_jobname(const char* value, size_t size);
  inline ::std::string* mutable_jobname();
  inline ::std::string* release_jobname();
  inline void set_allocated_jobname(::std::string* jobname);

  // repeated .Cmd.GuildSMember members = 10;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 10;
  inline const ::Cmd::GuildSMember& members(int index) const;
  inline ::Cmd::GuildSMember* mutable_members(int index);
  inline ::Cmd::GuildSMember* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildSMember >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildSMember >*
      mutable_members();

  // repeated .Cmd.GuildQuest quests = 11;
  inline int quests_size() const;
  inline void clear_quests();
  static const int kQuestsFieldNumber = 11;
  inline const ::Cmd::GuildQuest& quests(int index) const;
  inline ::Cmd::GuildQuest* mutable_quests(int index);
  inline ::Cmd::GuildQuest* add_quests();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildQuest >&
      quests() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildQuest >*
      mutable_quests();

  // optional .Cmd.GuildBuildingData building = 13;
  inline bool has_building() const;
  inline void clear_building();
  static const int kBuildingFieldNumber = 13;
  inline const ::Cmd::GuildBuildingData& building() const;
  inline ::Cmd::GuildBuildingData* mutable_building();
  inline ::Cmd::GuildBuildingData* release_building();
  inline void set_allocated_building(::Cmd::GuildBuildingData* building);

  // optional uint64 openfunction = 14 [default = 0];
  inline bool has_openfunction() const;
  inline void clear_openfunction();
  static const int kOpenfunctionFieldNumber = 14;
  inline ::google::protobuf::uint64 openfunction() const;
  inline void set_openfunction(::google::protobuf::uint64 value);

  // repeated .Cmd.GuildChallenge challenges = 15;
  inline int challenges_size() const;
  inline void clear_challenges();
  static const int kChallengesFieldNumber = 15;
  inline const ::Cmd::GuildChallenge& challenges(int index) const;
  inline ::Cmd::GuildChallenge* mutable_challenges(int index);
  inline ::Cmd::GuildChallenge* add_challenges();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallenge >&
      challenges() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallenge >*
      mutable_challenges();

  // repeated .Cmd.GuildArtifactItem artifactitems = 16;
  inline int artifactitems_size() const;
  inline void clear_artifactitems();
  static const int kArtifactitemsFieldNumber = 16;
  inline const ::Cmd::GuildArtifactItem& artifactitems(int index) const;
  inline ::Cmd::GuildArtifactItem* mutable_artifactitems(int index);
  inline ::Cmd::GuildArtifactItem* add_artifactitems();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactItem >&
      artifactitems() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactItem >*
      mutable_artifactitems();

  // optional .Cmd.GuildArtifactQuest artifacequest = 17;
  inline bool has_artifacequest() const;
  inline void clear_artifacequest();
  static const int kArtifacequestFieldNumber = 17;
  inline const ::Cmd::GuildArtifactQuest& artifacequest() const;
  inline ::Cmd::GuildArtifactQuest* mutable_artifacequest();
  inline ::Cmd::GuildArtifactQuest* release_artifacequest();
  inline void set_allocated_artifacequest(::Cmd::GuildArtifactQuest* artifacequest);

  // optional .Cmd.GuildGvgData gvg = 18;
  inline bool has_gvg() const;
  inline void clear_gvg();
  static const int kGvgFieldNumber = 18;
  inline const ::Cmd::GuildGvgData& gvg() const;
  inline ::Cmd::GuildGvgData* mutable_gvg();
  inline ::Cmd::GuildGvgData* release_gvg();
  inline void set_allocated_gvg(::Cmd::GuildGvgData* gvg);

  // @@protoc_insertion_point(class_scope:Cmd.GuildInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_scene();
  inline void clear_has_scene();
  inline void set_has_auth();
  inline void clear_has_auth();
  inline void set_has_create();
  inline void clear_has_create();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_portrait();
  inline void clear_has_portrait();
  inline void set_has_jobname();
  inline void clear_has_jobname();
  inline void set_has_building();
  inline void clear_has_building();
  inline void set_has_openfunction();
  inline void clear_has_openfunction();
  inline void set_has_artifacequest();
  inline void clear_has_artifacequest();
  inline void set_has_gvg();
  inline void clear_has_gvg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 lv_;
  ::google::protobuf::uint32 scene_;
  ::google::protobuf::uint32 auth_;
  ::std::string* name_;
  ::std::string* portrait_;
  ::std::string* jobname_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildSMember > members_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildQuest > quests_;
  ::Cmd::GuildBuildingData* building_;
  ::google::protobuf::uint64 openfunction_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallenge > challenges_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactItem > artifactitems_;
  ::Cmd::GuildArtifactQuest* artifacequest_;
  ::Cmd::GuildGvgData* gvg_;
  bool create_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuildInfoSyncGuildSCmd : public ::google::protobuf::Message {
 public:
  GuildInfoSyncGuildSCmd();
  virtual ~GuildInfoSyncGuildSCmd();

  GuildInfoSyncGuildSCmd(const GuildInfoSyncGuildSCmd& from);

  inline GuildInfoSyncGuildSCmd& operator=(const GuildInfoSyncGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildInfoSyncGuildSCmd& default_instance();

  void Swap(GuildInfoSyncGuildSCmd* other);

  // implements Message ----------------------------------------------

  GuildInfoSyncGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildInfoSyncGuildSCmd& from);
  void MergeFrom(const GuildInfoSyncGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_SYNC_INFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional .Cmd.GuildInfo info = 4;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 4;
  inline const ::Cmd::GuildInfo& info() const;
  inline ::Cmd::GuildInfo* mutable_info();
  inline ::Cmd::GuildInfo* release_info();
  inline void set_allocated_info(::Cmd::GuildInfo* info);

  // @@protoc_insertion_point(class_scope:Cmd.GuildInfoSyncGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::Cmd::GuildInfo* info_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildInfoSyncGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildDataUpdateGuildSCmd : public ::google::protobuf::Message {
 public:
  GuildDataUpdateGuildSCmd();
  virtual ~GuildDataUpdateGuildSCmd();

  GuildDataUpdateGuildSCmd(const GuildDataUpdateGuildSCmd& from);

  inline GuildDataUpdateGuildSCmd& operator=(const GuildDataUpdateGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildDataUpdateGuildSCmd& default_instance();

  void Swap(GuildDataUpdateGuildSCmd* other);

  // implements Message ----------------------------------------------

  GuildDataUpdateGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildDataUpdateGuildSCmd& from);
  void MergeFrom(const GuildDataUpdateGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_UPDATE_GUILDDATA];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // repeated .Cmd.GuildDataUpdate updates = 4;
  inline int updates_size() const;
  inline void clear_updates();
  static const int kUpdatesFieldNumber = 4;
  inline const ::Cmd::GuildDataUpdate& updates(int index) const;
  inline ::Cmd::GuildDataUpdate* mutable_updates(int index);
  inline ::Cmd::GuildDataUpdate* add_updates();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildDataUpdate >&
      updates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildDataUpdate >*
      mutable_updates();

  // @@protoc_insertion_point(class_scope:Cmd.GuildDataUpdateGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildDataUpdate > updates_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildDataUpdateGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class CityDataUpdateGuildSCmd : public ::google::protobuf::Message {
 public:
  CityDataUpdateGuildSCmd();
  virtual ~CityDataUpdateGuildSCmd();

  CityDataUpdateGuildSCmd(const CityDataUpdateGuildSCmd& from);

  inline CityDataUpdateGuildSCmd& operator=(const CityDataUpdateGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CityDataUpdateGuildSCmd& default_instance();

  void Swap(CityDataUpdateGuildSCmd* other);

  // implements Message ----------------------------------------------

  CityDataUpdateGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CityDataUpdateGuildSCmd& from);
  void MergeFrom(const CityDataUpdateGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_UPDATE_CITYDATA];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 cityid = 3 [default = 0];
  inline bool has_cityid() const;
  inline void clear_cityid();
  static const int kCityidFieldNumber = 3;
  inline ::google::protobuf::uint64 cityid() const;
  inline void set_cityid(::google::protobuf::uint64 value);

  // optional uint32 membercount = 4 [default = 0];
  inline bool has_membercount() const;
  inline void clear_membercount();
  static const int kMembercountFieldNumber = 4;
  inline ::google::protobuf::uint32 membercount() const;
  inline void set_membercount(::google::protobuf::uint32 value);

  // repeated .Cmd.GuildDataUpdate updates = 5;
  inline int updates_size() const;
  inline void clear_updates();
  static const int kUpdatesFieldNumber = 5;
  inline const ::Cmd::GuildDataUpdate& updates(int index) const;
  inline ::Cmd::GuildDataUpdate* mutable_updates(int index);
  inline ::Cmd::GuildDataUpdate* add_updates();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildDataUpdate >&
      updates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildDataUpdate >*
      mutable_updates();

  // optional string leadername = 6;
  inline bool has_leadername() const;
  inline void clear_leadername();
  static const int kLeadernameFieldNumber = 6;
  inline const ::std::string& leadername() const;
  inline void set_leadername(const ::std::string& value);
  inline void set_leadername(const char* value);
  inline void set_leadername(const char* value, size_t size);
  inline ::std::string* mutable_leadername();
  inline ::std::string* release_leadername();
  inline void set_allocated_leadername(::std::string* leadername);

  // @@protoc_insertion_point(class_scope:Cmd.CityDataUpdateGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_cityid();
  inline void clear_has_cityid();
  inline void set_has_membercount();
  inline void clear_has_membercount();
  inline void set_has_leadername();
  inline void clear_has_leadername();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 cityid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildDataUpdate > updates_;
  ::std::string* leadername_;
  ::google::protobuf::uint32 membercount_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static CityDataUpdateGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildMemberUpdateGuildSCmd : public ::google::protobuf::Message {
 public:
  GuildMemberUpdateGuildSCmd();
  virtual ~GuildMemberUpdateGuildSCmd();

  GuildMemberUpdateGuildSCmd(const GuildMemberUpdateGuildSCmd& from);

  inline GuildMemberUpdateGuildSCmd& operator=(const GuildMemberUpdateGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMemberUpdateGuildSCmd& default_instance();

  void Swap(GuildMemberUpdateGuildSCmd* other);

  // implements Message ----------------------------------------------

  GuildMemberUpdateGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMemberUpdateGuildSCmd& from);
  void MergeFrom(const GuildMemberUpdateGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_UPDATE_MEMBER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // repeated .Cmd.GuildSMember updates = 4;
  inline int updates_size() const;
  inline void clear_updates();
  static const int kUpdatesFieldNumber = 4;
  inline const ::Cmd::GuildSMember& updates(int index) const;
  inline ::Cmd::GuildSMember* mutable_updates(int index);
  inline ::Cmd::GuildSMember* add_updates();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildSMember >&
      updates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildSMember >*
      mutable_updates();

  // repeated uint64 dels = 5;
  inline int dels_size() const;
  inline void clear_dels();
  static const int kDelsFieldNumber = 5;
  inline ::google::protobuf::uint64 dels(int index) const;
  inline void set_dels(int index, ::google::protobuf::uint64 value);
  inline void add_dels(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      dels() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_dels();

  // @@protoc_insertion_point(class_scope:Cmd.GuildMemberUpdateGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildSMember > updates_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > dels_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildMemberUpdateGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildMemberDataUpdateGuildSCmd : public ::google::protobuf::Message {
 public:
  GuildMemberDataUpdateGuildSCmd();
  virtual ~GuildMemberDataUpdateGuildSCmd();

  GuildMemberDataUpdateGuildSCmd(const GuildMemberDataUpdateGuildSCmd& from);

  inline GuildMemberDataUpdateGuildSCmd& operator=(const GuildMemberDataUpdateGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMemberDataUpdateGuildSCmd& default_instance();

  void Swap(GuildMemberDataUpdateGuildSCmd* other);

  // implements Message ----------------------------------------------

  GuildMemberDataUpdateGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMemberDataUpdateGuildSCmd& from);
  void MergeFrom(const GuildMemberDataUpdateGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_UPDATE_MEMBERDATA];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint64 destid = 4 [default = 0];
  inline bool has_destid() const;
  inline void clear_destid();
  static const int kDestidFieldNumber = 4;
  inline ::google::protobuf::uint64 destid() const;
  inline void set_destid(::google::protobuf::uint64 value);

  // repeated .Cmd.GuildMemberDataUpdate updates = 5;
  inline int updates_size() const;
  inline void clear_updates();
  static const int kUpdatesFieldNumber = 5;
  inline const ::Cmd::GuildMemberDataUpdate& updates(int index) const;
  inline ::Cmd::GuildMemberDataUpdate* mutable_updates(int index);
  inline ::Cmd::GuildMemberDataUpdate* add_updates();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMemberDataUpdate >&
      updates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMemberDataUpdate >*
      mutable_updates();

  // @@protoc_insertion_point(class_scope:Cmd.GuildMemberDataUpdateGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_destid();
  inline void clear_has_destid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 destid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMemberDataUpdate > updates_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildMemberDataUpdateGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildQuestUpdateGuildSCmd : public ::google::protobuf::Message {
 public:
  GuildQuestUpdateGuildSCmd();
  virtual ~GuildQuestUpdateGuildSCmd();

  GuildQuestUpdateGuildSCmd(const GuildQuestUpdateGuildSCmd& from);

  inline GuildQuestUpdateGuildSCmd& operator=(const GuildQuestUpdateGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildQuestUpdateGuildSCmd& default_instance();

  void Swap(GuildQuestUpdateGuildSCmd* other);

  // implements Message ----------------------------------------------

  GuildQuestUpdateGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildQuestUpdateGuildSCmd& from);
  void MergeFrom(const GuildQuestUpdateGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_UPDATE_QUEST];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // repeated .Cmd.GuildQuest updates = 4;
  inline int updates_size() const;
  inline void clear_updates();
  static const int kUpdatesFieldNumber = 4;
  inline const ::Cmd::GuildQuest& updates(int index) const;
  inline ::Cmd::GuildQuest* mutable_updates(int index);
  inline ::Cmd::GuildQuest* add_updates();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildQuest >&
      updates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildQuest >*
      mutable_updates();

  // repeated uint32 dels = 5;
  inline int dels_size() const;
  inline void clear_dels();
  static const int kDelsFieldNumber = 5;
  inline ::google::protobuf::uint32 dels(int index) const;
  inline void set_dels(int index, ::google::protobuf::uint32 value);
  inline void add_dels(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      dels() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_dels();

  // @@protoc_insertion_point(class_scope:Cmd.GuildQuestUpdateGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildQuest > updates_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > dels_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildQuestUpdateGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class EnterGuildTerritoryGuildSCmd : public ::google::protobuf::Message {
 public:
  EnterGuildTerritoryGuildSCmd();
  virtual ~EnterGuildTerritoryGuildSCmd();

  EnterGuildTerritoryGuildSCmd(const EnterGuildTerritoryGuildSCmd& from);

  inline EnterGuildTerritoryGuildSCmd& operator=(const EnterGuildTerritoryGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterGuildTerritoryGuildSCmd& default_instance();

  void Swap(EnterGuildTerritoryGuildSCmd* other);

  // implements Message ----------------------------------------------

  EnterGuildTerritoryGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterGuildTerritoryGuildSCmd& from);
  void MergeFrom(const EnterGuildTerritoryGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_ENTER_TERRITORY];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional .Cmd.GuildInfo info = 4;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 4;
  inline const ::Cmd::GuildInfo& info() const;
  inline ::Cmd::GuildInfo* mutable_info();
  inline ::Cmd::GuildInfo* release_info();
  inline void set_allocated_info(::Cmd::GuildInfo* info);

  // @@protoc_insertion_point(class_scope:Cmd.EnterGuildTerritoryGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::Cmd::GuildInfo* info_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static EnterGuildTerritoryGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class RefreshGuildTerritoryGuildSCmd : public ::google::protobuf::Message {
 public:
  RefreshGuildTerritoryGuildSCmd();
  virtual ~RefreshGuildTerritoryGuildSCmd();

  RefreshGuildTerritoryGuildSCmd(const RefreshGuildTerritoryGuildSCmd& from);

  inline RefreshGuildTerritoryGuildSCmd& operator=(const RefreshGuildTerritoryGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RefreshGuildTerritoryGuildSCmd& default_instance();

  void Swap(RefreshGuildTerritoryGuildSCmd* other);

  // implements Message ----------------------------------------------

  RefreshGuildTerritoryGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RefreshGuildTerritoryGuildSCmd& from);
  void MergeFrom(const RefreshGuildTerritoryGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_REFRESH_TERRITORY];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 sceneid = 3 [default = 0];
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 3;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // optional .Cmd.GuildInfo info = 4;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 4;
  inline const ::Cmd::GuildInfo& info() const;
  inline ::Cmd::GuildInfo* mutable_info();
  inline ::Cmd::GuildInfo* release_info();
  inline void set_allocated_info(::Cmd::GuildInfo* info);

  // @@protoc_insertion_point(class_scope:Cmd.RefreshGuildTerritoryGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 sceneid_;
  ::Cmd::GuildInfo* info_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static RefreshGuildTerritoryGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class QueryPhotoListGuildSCmd : public ::google::protobuf::Message {
 public:
  QueryPhotoListGuildSCmd();
  virtual ~QueryPhotoListGuildSCmd();

  QueryPhotoListGuildSCmd(const QueryPhotoListGuildSCmd& from);

  inline QueryPhotoListGuildSCmd& operator=(const QueryPhotoListGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryPhotoListGuildSCmd& default_instance();

  void Swap(QueryPhotoListGuildSCmd* other);

  // implements Message ----------------------------------------------

  QueryPhotoListGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryPhotoListGuildSCmd& from);
  void MergeFrom(const QueryPhotoListGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_QUERY_PHOTOLIST];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 guildid = 3 [default = 0];
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 3;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional uint32 sceneid = 4 [default = 0];
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 4;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);

  // optional bool result = 5 [default = false];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 5;
  inline bool result() const;
  inline void set_result(bool value);

  // repeated .Cmd.PhotoFrame frames = 6;
  inline int frames_size() const;
  inline void clear_frames();
  static const int kFramesFieldNumber = 6;
  inline const ::Cmd::PhotoFrame& frames(int index) const;
  inline ::Cmd::PhotoFrame* mutable_frames(int index);
  inline ::Cmd::PhotoFrame* add_frames();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::PhotoFrame >&
      frames() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::PhotoFrame >*
      mutable_frames();

  // @@protoc_insertion_point(class_scope:Cmd.QueryPhotoListGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint32 sceneid_;
  bool result_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::PhotoFrame > frames_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static QueryPhotoListGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class QueryUserPhotoListGuildSCmd : public ::google::protobuf::Message {
 public:
  QueryUserPhotoListGuildSCmd();
  virtual ~QueryUserPhotoListGuildSCmd();

  QueryUserPhotoListGuildSCmd(const QueryUserPhotoListGuildSCmd& from);

  inline QueryUserPhotoListGuildSCmd& operator=(const QueryUserPhotoListGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryUserPhotoListGuildSCmd& default_instance();

  void Swap(QueryUserPhotoListGuildSCmd* other);

  // implements Message ----------------------------------------------

  QueryUserPhotoListGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryUserPhotoListGuildSCmd& from);
  void MergeFrom(const QueryUserPhotoListGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_QUERY_USERPHOTOLIST];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 guildid = 3 [default = 0];
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 3;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional bool result = 4 [default = false];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 4;
  inline bool result() const;
  inline void set_result(bool value);

  // optional .Cmd.SocialUser user = 5;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 5;
  inline const ::Cmd::SocialUser& user() const;
  inline ::Cmd::SocialUser* mutable_user();
  inline ::Cmd::SocialUser* release_user();
  inline void set_allocated_user(::Cmd::SocialUser* user);

  // repeated .Cmd.PhotoFrame frames = 6;
  inline int frames_size() const;
  inline void clear_frames();
  static const int kFramesFieldNumber = 6;
  inline const ::Cmd::PhotoFrame& frames(int index) const;
  inline ::Cmd::PhotoFrame* mutable_frames(int index);
  inline ::Cmd::PhotoFrame* add_frames();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::PhotoFrame >&
      frames() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::PhotoFrame >*
      mutable_frames();

  // @@protoc_insertion_point(class_scope:Cmd.QueryUserPhotoListGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user();
  inline void clear_has_user();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 guildid_;
  ::Cmd::SocialUser* user_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::PhotoFrame > frames_;
  bool result_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static QueryUserPhotoListGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class PhotoLoad : public ::google::protobuf::Message {
 public:
  PhotoLoad();
  virtual ~PhotoLoad();

  PhotoLoad(const PhotoLoad& from);

  inline PhotoLoad& operator=(const PhotoLoad& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PhotoLoad& default_instance();

  void Swap(PhotoLoad* other);

  // implements Message ----------------------------------------------

  PhotoLoad* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PhotoLoad& from);
  void MergeFrom(const PhotoLoad& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 frameid = 1 [default = 0];
  inline bool has_frameid() const;
  inline void clear_frameid();
  static const int kFrameidFieldNumber = 1;
  inline ::google::protobuf::uint32 frameid() const;
  inline void set_frameid(::google::protobuf::uint32 value);

  // optional uint32 count = 2 [default = 0];
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.PhotoLoad)
 private:
  inline void set_has_frameid();
  inline void clear_has_frameid();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 frameid_;
  ::google::protobuf::uint32 count_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static PhotoLoad* default_instance_;
};
// -------------------------------------------------------------------

class QueryShowPhotoGuildSCmd : public ::google::protobuf::Message {
 public:
  QueryShowPhotoGuildSCmd();
  virtual ~QueryShowPhotoGuildSCmd();

  QueryShowPhotoGuildSCmd(const QueryShowPhotoGuildSCmd& from);

  inline QueryShowPhotoGuildSCmd& operator=(const QueryShowPhotoGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryShowPhotoGuildSCmd& default_instance();

  void Swap(QueryShowPhotoGuildSCmd* other);

  // implements Message ----------------------------------------------

  QueryShowPhotoGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryShowPhotoGuildSCmd& from);
  void MergeFrom(const QueryShowPhotoGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_QUERY_SHOWPHOTOLIST];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional .Cmd.EPhotoAction action = 3 [default = EPHOTOACTION_MIN];
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 3;
  inline ::Cmd::EPhotoAction action() const;
  inline void set_action(::Cmd::EPhotoAction value);

  // optional uint64 guildid = 4 [default = 0];
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 4;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // repeated .Cmd.PhotoLoad loads = 5;
  inline int loads_size() const;
  inline void clear_loads();
  static const int kLoadsFieldNumber = 5;
  inline const ::Cmd::PhotoLoad& loads(int index) const;
  inline ::Cmd::PhotoLoad* mutable_loads(int index);
  inline ::Cmd::PhotoLoad* add_loads();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::PhotoLoad >&
      loads() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::PhotoLoad >*
      mutable_loads();

  // repeated string exists = 6;
  inline int exists_size() const;
  inline void clear_exists();
  static const int kExistsFieldNumber = 6;
  inline const ::std::string& exists(int index) const;
  inline ::std::string* mutable_exists(int index);
  inline void set_exists(int index, const ::std::string& value);
  inline void set_exists(int index, const char* value);
  inline void set_exists(int index, const char* value, size_t size);
  inline ::std::string* add_exists();
  inline void add_exists(const ::std::string& value);
  inline void add_exists(const char* value);
  inline void add_exists(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& exists() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_exists();

  // repeated uint64 members = 7;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 7;
  inline ::google::protobuf::uint64 members(int index) const;
  inline void set_members(int index, ::google::protobuf::uint64 value);
  inline void add_members(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      members() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_members();

  // repeated .Cmd.PhotoFrame results = 8;
  inline int results_size() const;
  inline void clear_results();
  static const int kResultsFieldNumber = 8;
  inline const ::Cmd::PhotoFrame& results(int index) const;
  inline ::Cmd::PhotoFrame* mutable_results(int index);
  inline ::Cmd::PhotoFrame* add_results();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::PhotoFrame >&
      results() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::PhotoFrame >*
      mutable_results();

  // @@protoc_insertion_point(class_scope:Cmd.QueryShowPhotoGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_action();
  inline void clear_has_action();
  inline void set_has_guildid();
  inline void clear_has_guildid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::PhotoLoad > loads_;
  ::google::protobuf::RepeatedPtrField< ::std::string> exists_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > members_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::PhotoFrame > results_;
  int action_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static QueryShowPhotoGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class FrameUpdateGuildSCmd : public ::google::protobuf::Message {
 public:
  FrameUpdateGuildSCmd();
  virtual ~FrameUpdateGuildSCmd();

  FrameUpdateGuildSCmd(const FrameUpdateGuildSCmd& from);

  inline FrameUpdateGuildSCmd& operator=(const FrameUpdateGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameUpdateGuildSCmd& default_instance();

  void Swap(FrameUpdateGuildSCmd* other);

  // implements Message ----------------------------------------------

  FrameUpdateGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FrameUpdateGuildSCmd& from);
  void MergeFrom(const FrameUpdateGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_FRAME_UPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 guildid = 3 [default = 0];
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 3;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional uint32 frameid = 4 [default = 0];
  inline bool has_frameid() const;
  inline void clear_frameid();
  static const int kFrameidFieldNumber = 4;
  inline ::google::protobuf::uint32 frameid() const;
  inline void set_frameid(::google::protobuf::uint32 value);

  // optional .Cmd.GuildPhoto update = 5;
  inline bool has_update() const;
  inline void clear_update();
  static const int kUpdateFieldNumber = 5;
  inline const ::Cmd::GuildPhoto& update() const;
  inline ::Cmd::GuildPhoto* mutable_update();
  inline ::Cmd::GuildPhoto* release_update();
  inline void set_allocated_update(::Cmd::GuildPhoto* update);

  // optional .Cmd.GuildPhoto del = 6;
  inline bool has_del() const;
  inline void clear_del();
  static const int kDelFieldNumber = 6;
  inline const ::Cmd::GuildPhoto& del() const;
  inline ::Cmd::GuildPhoto* mutable_del();
  inline ::Cmd::GuildPhoto* release_del();
  inline void set_allocated_del(::Cmd::GuildPhoto* del);

  // @@protoc_insertion_point(class_scope:Cmd.FrameUpdateGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_frameid();
  inline void clear_has_frameid();
  inline void set_has_update();
  inline void clear_has_update();
  inline void set_has_del();
  inline void clear_has_del();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 guildid_;
  ::Cmd::GuildPhoto* update_;
  ::Cmd::GuildPhoto* del_;
  ::google::protobuf::uint32 frameid_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static FrameUpdateGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class PhotoUpdateGuildSCmd : public ::google::protobuf::Message {
 public:
  PhotoUpdateGuildSCmd();
  virtual ~PhotoUpdateGuildSCmd();

  PhotoUpdateGuildSCmd(const PhotoUpdateGuildSCmd& from);

  inline PhotoUpdateGuildSCmd& operator=(const PhotoUpdateGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PhotoUpdateGuildSCmd& default_instance();

  void Swap(PhotoUpdateGuildSCmd* other);

  // implements Message ----------------------------------------------

  PhotoUpdateGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PhotoUpdateGuildSCmd& from);
  void MergeFrom(const PhotoUpdateGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_PHOTO_UPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 guildid = 3 [default = 0];
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 3;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional uint32 sceneid = 4 [default = 0];
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 4;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);

  // optional .Cmd.GuildPhoto update = 5;
  inline bool has_update() const;
  inline void clear_update();
  static const int kUpdateFieldNumber = 5;
  inline const ::Cmd::GuildPhoto& update() const;
  inline ::Cmd::GuildPhoto* mutable_update();
  inline ::Cmd::GuildPhoto* release_update();
  inline void set_allocated_update(::Cmd::GuildPhoto* update);

  // optional .Cmd.GuildPhoto del = 6;
  inline bool has_del() const;
  inline void clear_del();
  static const int kDelFieldNumber = 6;
  inline const ::Cmd::GuildPhoto& del() const;
  inline ::Cmd::GuildPhoto* mutable_del();
  inline ::Cmd::GuildPhoto* release_del();
  inline void set_allocated_del(::Cmd::GuildPhoto* del);

  // optional bool to_guild = 7 [default = false];
  inline bool has_to_guild() const;
  inline void clear_to_guild();
  static const int kToGuildFieldNumber = 7;
  inline bool to_guild() const;
  inline void set_to_guild(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.PhotoUpdateGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_update();
  inline void clear_has_update();
  inline void set_has_del();
  inline void clear_has_del();
  inline void set_has_to_guild();
  inline void clear_has_to_guild();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 guildid_;
  ::Cmd::GuildPhoto* update_;
  ::google::protobuf::uint32 sceneid_;
  bool to_guild_;
  ::Cmd::GuildPhoto* del_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static PhotoUpdateGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class JobUpdateGuildSCmd : public ::google::protobuf::Message {
 public:
  JobUpdateGuildSCmd();
  virtual ~JobUpdateGuildSCmd();

  JobUpdateGuildSCmd(const JobUpdateGuildSCmd& from);

  inline JobUpdateGuildSCmd& operator=(const JobUpdateGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JobUpdateGuildSCmd& default_instance();

  void Swap(JobUpdateGuildSCmd* other);

  // implements Message ----------------------------------------------

  JobUpdateGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JobUpdateGuildSCmd& from);
  void MergeFrom(const JobUpdateGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_JOB_UPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 guildid = 3 [default = 0];
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 3;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional uint64 charid = 4 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 4;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional .Cmd.GuildJob job = 5;
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 5;
  inline const ::Cmd::GuildJob& job() const;
  inline ::Cmd::GuildJob* mutable_job();
  inline ::Cmd::GuildJob* release_job();
  inline void set_allocated_job(::Cmd::GuildJob* job);

  // @@protoc_insertion_point(class_scope:Cmd.JobUpdateGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_job();
  inline void clear_has_job();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint64 charid_;
  ::Cmd::GuildJob* job_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static JobUpdateGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildMusicDeleteGuildSCmd : public ::google::protobuf::Message {
 public:
  GuildMusicDeleteGuildSCmd();
  virtual ~GuildMusicDeleteGuildSCmd();

  GuildMusicDeleteGuildSCmd(const GuildMusicDeleteGuildSCmd& from);

  inline GuildMusicDeleteGuildSCmd& operator=(const GuildMusicDeleteGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMusicDeleteGuildSCmd& default_instance();

  void Swap(GuildMusicDeleteGuildSCmd* other);

  // implements Message ----------------------------------------------

  GuildMusicDeleteGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMusicDeleteGuildSCmd& from);
  void MergeFrom(const GuildMusicDeleteGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_GUILD_MUSIC_DELETE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 guildid = 3 [default = 0];
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 3;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildMusicDeleteGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_guildid();
  inline void clear_has_guildid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 guildid_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildMusicDeleteGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class RenameNTFGuildCmd : public ::google::protobuf::Message {
 public:
  RenameNTFGuildCmd();
  virtual ~RenameNTFGuildCmd();

  RenameNTFGuildCmd(const RenameNTFGuildCmd& from);

  inline RenameNTFGuildCmd& operator=(const RenameNTFGuildCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RenameNTFGuildCmd& default_instance();

  void Swap(RenameNTFGuildCmd* other);

  // implements Message ----------------------------------------------

  RenameNTFGuildCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RenameNTFGuildCmd& from);
  void MergeFrom(const RenameNTFGuildCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_RENAME_NTF];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional .Cmd.SocialUser user = 3;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 3;
  inline const ::Cmd::SocialUser& user() const;
  inline ::Cmd::SocialUser* mutable_user();
  inline ::Cmd::SocialUser* release_user();
  inline void set_allocated_user(::Cmd::SocialUser* user);

  // optional string newname = 4;
  inline bool has_newname() const;
  inline void clear_newname();
  static const int kNewnameFieldNumber = 4;
  inline const ::std::string& newname() const;
  inline void set_newname(const ::std::string& value);
  inline void set_newname(const char* value);
  inline void set_newname(const char* value, size_t size);
  inline ::std::string* mutable_newname();
  inline ::std::string* release_newname();
  inline void set_allocated_newname(::std::string* newname);

  // optional bool result = 5 [default = true];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 5;
  inline bool result() const;
  inline void set_result(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.RenameNTFGuildCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_newname();
  inline void clear_has_newname();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::SocialUser* user_;
  ::std::string* newname_;
  bool result_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static RenameNTFGuildCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildCityActionGuildSCmd : public ::google::protobuf::Message {
 public:
  GuildCityActionGuildSCmd();
  virtual ~GuildCityActionGuildSCmd();

  GuildCityActionGuildSCmd(const GuildCityActionGuildSCmd& from);

  inline GuildCityActionGuildSCmd& operator=(const GuildCityActionGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildCityActionGuildSCmd& default_instance();

  void Swap(GuildCityActionGuildSCmd* other);

  // implements Message ----------------------------------------------

  GuildCityActionGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildCityActionGuildSCmd& from);
  void MergeFrom(const GuildCityActionGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_GUILD_CITY_ACTION];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional .Cmd.EGuildCityAction action = 3 [default = EGUILDCITYACTION_MIN];
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 3;
  inline ::Cmd::EGuildCityAction action() const;
  inline void set_action(::Cmd::EGuildCityAction value);

  // optional .Cmd.EGuildCityStatus status = 4 [default = EGUILDCITYSTATUS_MIN];
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::Cmd::EGuildCityStatus status() const;
  inline void set_status(::Cmd::EGuildCityStatus value);

  // optional .Cmd.EGuildCityResult result = 5 [default = EGUILDCITYRESULT_MIN];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 5;
  inline ::Cmd::EGuildCityResult result() const;
  inline void set_result(::Cmd::EGuildCityResult value);

  // optional uint32 zoneid = 6 [default = 0];
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 6;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional string scenename = 7;
  inline bool has_scenename() const;
  inline void clear_scenename();
  static const int kScenenameFieldNumber = 7;
  inline const ::std::string& scenename() const;
  inline void set_scenename(const ::std::string& value);
  inline void set_scenename(const char* value);
  inline void set_scenename(const char* value, size_t size);
  inline ::std::string* mutable_scenename();
  inline ::std::string* release_scenename();
  inline void set_allocated_scenename(::std::string* scenename);

  // repeated .Cmd.GuildCityInfo infos = 8;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 8;
  inline const ::Cmd::GuildCityInfo& infos(int index) const;
  inline ::Cmd::GuildCityInfo* mutable_infos(int index);
  inline ::Cmd::GuildCityInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildCityInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildCityInfo >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:Cmd.GuildCityActionGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_action();
  inline void clear_has_action();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_scenename();
  inline void clear_has_scenename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  int action_;
  int status_;
  int result_;
  ::google::protobuf::uint32 zoneid_;
  ::std::string* scenename_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildCityInfo > infos_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildCityActionGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class SendMailGuildSCmd : public ::google::protobuf::Message {
 public:
  SendMailGuildSCmd();
  virtual ~SendMailGuildSCmd();

  SendMailGuildSCmd(const SendMailGuildSCmd& from);

  inline SendMailGuildSCmd& operator=(const SendMailGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendMailGuildSCmd& default_instance();

  void Swap(SendMailGuildSCmd* other);

  // implements Message ----------------------------------------------

  SendMailGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendMailGuildSCmd& from);
  void MergeFrom(const SendMailGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_SEND_MAIL];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional .Cmd.MailData data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::Cmd::MailData& data() const;
  inline ::Cmd::MailData* mutable_data();
  inline ::Cmd::MailData* release_data();
  inline void set_allocated_data(::Cmd::MailData* data);

  // @@protoc_insertion_point(class_scope:Cmd.SendMailGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::MailData* data_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static SendMailGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class GVGRewardGuildSCmd : public ::google::protobuf::Message {
 public:
  GVGRewardGuildSCmd();
  virtual ~GVGRewardGuildSCmd();

  GVGRewardGuildSCmd(const GVGRewardGuildSCmd& from);

  inline GVGRewardGuildSCmd& operator=(const GVGRewardGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GVGRewardGuildSCmd& default_instance();

  void Swap(GVGRewardGuildSCmd* other);

  // implements Message ----------------------------------------------

  GVGRewardGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GVGRewardGuildSCmd& from);
  void MergeFrom(const GVGRewardGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_GVG_REWARD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 guildid = 3 [default = 0];
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 3;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.GVGRewardGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_guildid();
  inline void clear_has_guildid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 guildid_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static GVGRewardGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildPrayGuildSCmd : public ::google::protobuf::Message {
 public:
  GuildPrayGuildSCmd();
  virtual ~GuildPrayGuildSCmd();

  GuildPrayGuildSCmd(const GuildPrayGuildSCmd& from);

  inline GuildPrayGuildSCmd& operator=(const GuildPrayGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildPrayGuildSCmd& default_instance();

  void Swap(GuildPrayGuildSCmd* other);

  // implements Message ----------------------------------------------

  GuildPrayGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildPrayGuildSCmd& from);
  void MergeFrom(const GuildPrayGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_GUILDPRAY];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional .Cmd.SocialUser user = 3;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 3;
  inline const ::Cmd::SocialUser& user() const;
  inline ::Cmd::SocialUser* mutable_user();
  inline ::Cmd::SocialUser* release_user();
  inline void set_allocated_user(::Cmd::SocialUser* user);

  // optional uint64 npcid = 4 [default = 0];
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcidFieldNumber = 4;
  inline ::google::protobuf::uint64 npcid() const;
  inline void set_npcid(::google::protobuf::uint64 value);

  // optional uint32 prayid = 5 [default = 0];
  inline bool has_prayid() const;
  inline void clear_prayid();
  static const int kPrayidFieldNumber = 5;
  inline ::google::protobuf::uint32 prayid() const;
  inline void set_prayid(::google::protobuf::uint32 value);

  // optional uint32 praylv = 6 [default = 0];
  inline bool has_praylv() const;
  inline void clear_praylv();
  static const int kPraylvFieldNumber = 6;
  inline ::google::protobuf::uint32 praylv() const;
  inline void set_praylv(::google::protobuf::uint32 value);

  // optional uint32 needcon = 7 [default = 0];
  inline bool has_needcon() const;
  inline void clear_needcon();
  static const int kNeedconFieldNumber = 7;
  inline ::google::protobuf::uint32 needcon() const;
  inline void set_needcon(::google::protobuf::uint32 value);

  // optional uint32 needmon = 8 [default = 0];
  inline bool has_needmon() const;
  inline void clear_needmon();
  static const int kNeedmonFieldNumber = 8;
  inline ::google::protobuf::uint32 needmon() const;
  inline void set_needmon(::google::protobuf::uint32 value);

  // optional uint32 prayitem = 9 [default = 0];
  inline bool has_prayitem() const;
  inline void clear_prayitem();
  static const int kPrayitemFieldNumber = 9;
  inline ::google::protobuf::uint32 prayitem() const;
  inline void set_prayitem(::google::protobuf::uint32 value);

  // optional uint32 msgid = 10 [default = 0];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 10;
  inline ::google::protobuf::uint32 msgid() const;
  inline void set_msgid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildPrayGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_npcid();
  inline void clear_has_npcid();
  inline void set_has_prayid();
  inline void clear_has_prayid();
  inline void set_has_praylv();
  inline void clear_has_praylv();
  inline void set_has_needcon();
  inline void clear_has_needcon();
  inline void set_has_needmon();
  inline void clear_has_needmon();
  inline void set_has_prayitem();
  inline void clear_has_prayitem();
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::SocialUser* user_;
  ::google::protobuf::uint64 npcid_;
  ::google::protobuf::uint32 prayid_;
  ::google::protobuf::uint32 praylv_;
  ::google::protobuf::uint32 needcon_;
  ::google::protobuf::uint32 needmon_;
  ::google::protobuf::uint32 prayitem_;
  ::google::protobuf::uint32 msgid_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildPrayGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildIconStateGuildSCmd : public ::google::protobuf::Message {
 public:
  GuildIconStateGuildSCmd();
  virtual ~GuildIconStateGuildSCmd();

  GuildIconStateGuildSCmd(const GuildIconStateGuildSCmd& from);

  inline GuildIconStateGuildSCmd& operator=(const GuildIconStateGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildIconStateGuildSCmd& default_instance();

  void Swap(GuildIconStateGuildSCmd* other);

  // implements Message ----------------------------------------------

  GuildIconStateGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildIconStateGuildSCmd& from);
  void MergeFrom(const GuildIconStateGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_GUILD_ICON_STATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // repeated uint64 ids = 3;
  inline int ids_size() const;
  inline void clear_ids();
  static const int kIdsFieldNumber = 3;
  inline ::google::protobuf::uint64 ids(int index) const;
  inline void set_ids(int index, ::google::protobuf::uint64 value);
  inline void add_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_ids();

  // optional .Cmd.EIconState state = 4 [default = EICON_INIT];
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::Cmd::EIconState state() const;
  inline void set_state(::Cmd::EIconState value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildIconStateGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > ids_;
  int state_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildIconStateGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class BuildingMaterial : public ::google::protobuf::Message {
 public:
  BuildingMaterial();
  virtual ~BuildingMaterial();

  BuildingMaterial(const BuildingMaterial& from);

  inline BuildingMaterial& operator=(const BuildingMaterial& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildingMaterial& default_instance();

  void Swap(BuildingMaterial* other);

  // implements Message ----------------------------------------------

  BuildingMaterial* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildingMaterial& from);
  void MergeFrom(const BuildingMaterial& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 count = 2 [default = 0];
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.BuildingMaterial)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 count_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static BuildingMaterial* default_instance_;
};
// -------------------------------------------------------------------

class SubmitMaterialGuildSCmd : public ::google::protobuf::Message {
 public:
  SubmitMaterialGuildSCmd();
  virtual ~SubmitMaterialGuildSCmd();

  SubmitMaterialGuildSCmd(const SubmitMaterialGuildSCmd& from);

  inline SubmitMaterialGuildSCmd& operator=(const SubmitMaterialGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SubmitMaterialGuildSCmd& default_instance();

  void Swap(SubmitMaterialGuildSCmd* other);

  // implements Message ----------------------------------------------

  SubmitMaterialGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubmitMaterialGuildSCmd& from);
  void MergeFrom(const SubmitMaterialGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_SUBMIT_MATERIAL];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional .Cmd.EGuildBuilding building = 4 [default = EGUILDBUILDING_MIN];
  inline bool has_building() const;
  inline void clear_building();
  static const int kBuildingFieldNumber = 4;
  inline ::Cmd::EGuildBuilding building() const;
  inline void set_building(::Cmd::EGuildBuilding value);

  // repeated .Cmd.BuildingMaterial materials = 5;
  inline int materials_size() const;
  inline void clear_materials();
  static const int kMaterialsFieldNumber = 5;
  inline const ::Cmd::BuildingMaterial& materials(int index) const;
  inline ::Cmd::BuildingMaterial* mutable_materials(int index);
  inline ::Cmd::BuildingMaterial* add_materials();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::BuildingMaterial >&
      materials() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::BuildingMaterial >*
      mutable_materials();

  // optional uint32 submitcount = 6 [default = 0];
  inline bool has_submitcount() const;
  inline void clear_submitcount();
  static const int kSubmitcountFieldNumber = 6;
  inline ::google::protobuf::uint32 submitcount() const;
  inline void set_submitcount(::google::protobuf::uint32 value);

  // optional uint32 counter = 7 [default = 0];
  inline bool has_counter() const;
  inline void clear_counter();
  static const int kCounterFieldNumber = 7;
  inline ::google::protobuf::uint32 counter() const;
  inline void set_counter(::google::protobuf::uint32 value);

  // optional bool success = 8 [default = false];
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 8;
  inline bool success() const;
  inline void set_success(bool value);

  // optional uint32 curlevel = 9 [default = 0];
  inline bool has_curlevel() const;
  inline void clear_curlevel();
  static const int kCurlevelFieldNumber = 9;
  inline ::google::protobuf::uint32 curlevel() const;
  inline void set_curlevel(::google::protobuf::uint32 value);

  // optional uint32 submitinc = 10 [default = 0];
  inline bool has_submitinc() const;
  inline void clear_submitinc();
  static const int kSubmitincFieldNumber = 10;
  inline ::google::protobuf::uint32 submitinc() const;
  inline void set_submitinc(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.SubmitMaterialGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_building();
  inline void clear_has_building();
  inline void set_has_submitcount();
  inline void clear_has_submitcount();
  inline void set_has_counter();
  inline void clear_has_counter();
  inline void set_has_success();
  inline void clear_has_success();
  inline void set_has_curlevel();
  inline void clear_has_curlevel();
  inline void set_has_submitinc();
  inline void clear_has_submitinc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::BuildingMaterial > materials_;
  int building_;
  ::google::protobuf::uint32 submitcount_;
  ::google::protobuf::uint32 counter_;
  bool success_;
  ::google::protobuf::uint32 curlevel_;
  ::google::protobuf::uint32 submitinc_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static SubmitMaterialGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class BuildingUpdateGuildSCmd : public ::google::protobuf::Message {
 public:
  BuildingUpdateGuildSCmd();
  virtual ~BuildingUpdateGuildSCmd();

  BuildingUpdateGuildSCmd(const BuildingUpdateGuildSCmd& from);

  inline BuildingUpdateGuildSCmd& operator=(const BuildingUpdateGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildingUpdateGuildSCmd& default_instance();

  void Swap(BuildingUpdateGuildSCmd* other);

  // implements Message ----------------------------------------------

  BuildingUpdateGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildingUpdateGuildSCmd& from);
  void MergeFrom(const BuildingUpdateGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_BUILDING_UPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 guildid = 3 [default = 0];
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 3;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional uint64 sceneid = 4 [default = 0];
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 4;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // repeated .Cmd.GuildBuilding updates = 5;
  inline int updates_size() const;
  inline void clear_updates();
  static const int kUpdatesFieldNumber = 5;
  inline const ::Cmd::GuildBuilding& updates(int index) const;
  inline ::Cmd::GuildBuilding* mutable_updates(int index);
  inline ::Cmd::GuildBuilding* add_updates();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildBuilding >&
      updates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildBuilding >*
      mutable_updates();

  // optional uint64 charid = 6 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 6;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.BuildingUpdateGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint64 sceneid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildBuilding > updates_;
  ::google::protobuf::uint64 charid_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static BuildingUpdateGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class QueryGuildInfoGuildSCmd : public ::google::protobuf::Message {
 public:
  QueryGuildInfoGuildSCmd();
  virtual ~QueryGuildInfoGuildSCmd();

  QueryGuildInfoGuildSCmd(const QueryGuildInfoGuildSCmd& from);

  inline QueryGuildInfoGuildSCmd& operator=(const QueryGuildInfoGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryGuildInfoGuildSCmd& default_instance();

  void Swap(QueryGuildInfoGuildSCmd* other);

  // implements Message ----------------------------------------------

  QueryGuildInfoGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryGuildInfoGuildSCmd& from);
  void MergeFrom(const QueryGuildInfoGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_QUERY_GUILD_INFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 guildid = 3 [default = 0];
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 3;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional uint64 sceneid = 4 [default = 0];
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 4;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // optional .Cmd.GuildInfo info = 5;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 5;
  inline const ::Cmd::GuildInfo& info() const;
  inline ::Cmd::GuildInfo* mutable_info();
  inline ::Cmd::GuildInfo* release_info();
  inline void set_allocated_info(::Cmd::GuildInfo* info);

  // optional bool result = 6 [default = false];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 6;
  inline bool result() const;
  inline void set_result(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.QueryGuildInfoGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint64 sceneid_;
  ::Cmd::GuildInfo* info_;
  bool result_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static QueryGuildInfoGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class SendWelfareGuildSCmd : public ::google::protobuf::Message {
 public:
  SendWelfareGuildSCmd();
  virtual ~SendWelfareGuildSCmd();

  SendWelfareGuildSCmd(const SendWelfareGuildSCmd& from);

  inline SendWelfareGuildSCmd& operator=(const SendWelfareGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendWelfareGuildSCmd& default_instance();

  void Swap(SendWelfareGuildSCmd* other);

  // implements Message ----------------------------------------------

  SendWelfareGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendWelfareGuildSCmd& from);
  void MergeFrom(const SendWelfareGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_SEND_WELFARE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // repeated .Cmd.GuildWelfareItem items = 4;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 4;
  inline const ::Cmd::GuildWelfareItem& items(int index) const;
  inline ::Cmd::GuildWelfareItem* mutable_items(int index);
  inline ::Cmd::GuildWelfareItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildWelfareItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildWelfareItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:Cmd.SendWelfareGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildWelfareItem > items_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static SendWelfareGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildChallengeItem : public ::google::protobuf::Message {
 public:
  GuildChallengeItem();
  virtual ~GuildChallengeItem();

  GuildChallengeItem(const GuildChallengeItem& from);

  inline GuildChallengeItem& operator=(const GuildChallengeItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildChallengeItem& default_instance();

  void Swap(GuildChallengeItem* other);

  // implements Message ----------------------------------------------

  GuildChallengeItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildChallengeItem& from);
  void MergeFrom(const GuildChallengeItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 progress = 2 [default = 0];
  inline bool has_progress() const;
  inline void clear_progress();
  static const int kProgressFieldNumber = 2;
  inline ::google::protobuf::uint32 progress() const;
  inline void set_progress(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildChallengeItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_progress();
  inline void clear_has_progress();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 progress_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildChallengeItem* default_instance_;
};
// -------------------------------------------------------------------

class ChallengeProgressGuildSCmd : public ::google::protobuf::Message {
 public:
  ChallengeProgressGuildSCmd();
  virtual ~ChallengeProgressGuildSCmd();

  ChallengeProgressGuildSCmd(const ChallengeProgressGuildSCmd& from);

  inline ChallengeProgressGuildSCmd& operator=(const ChallengeProgressGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChallengeProgressGuildSCmd& default_instance();

  void Swap(ChallengeProgressGuildSCmd* other);

  // implements Message ----------------------------------------------

  ChallengeProgressGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChallengeProgressGuildSCmd& from);
  void MergeFrom(const ChallengeProgressGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_CHALLENGE_PROGRESS];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 guildid = 3 [default = 0];
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 3;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional uint64 charid = 4 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 4;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // repeated .Cmd.GuildChallengeItem items = 5;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 5;
  inline const ::Cmd::GuildChallengeItem& items(int index) const;
  inline ::Cmd::GuildChallengeItem* mutable_items(int index);
  inline ::Cmd::GuildChallengeItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallengeItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallengeItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:Cmd.ChallengeProgressGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallengeItem > items_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static ChallengeProgressGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildGM : public ::google::protobuf::Message {
 public:
  GuildGM();
  virtual ~GuildGM();

  GuildGM(const GuildGM& from);

  inline GuildGM& operator=(const GuildGM& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildGM& default_instance();

  void Swap(GuildGM* other);

  // implements Message ----------------------------------------------

  GuildGM* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildGM& from);
  void MergeFrom(const GuildGM& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 zoneid = 1 [default = 0];
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 1;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 sessionid = 2 [default = 0];
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionidFieldNumber = 2;
  inline ::google::protobuf::uint32 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint32 value);

  // optional uint64 guildid = 3 [default = 0];
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 3;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional uint64 charid = 4 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 4;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:Cmd.GuildGM)
 private:
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_sessionid();
  inline void clear_has_sessionid();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 sessionid_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint64 charid_;
  ::std::string* name_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildGM* default_instance_;
};
// -------------------------------------------------------------------

class GMCommandGuildSCmd : public ::google::protobuf::Message {
 public:
  GMCommandGuildSCmd();
  virtual ~GMCommandGuildSCmd();

  GMCommandGuildSCmd(const GMCommandGuildSCmd& from);

  inline GMCommandGuildSCmd& operator=(const GMCommandGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMCommandGuildSCmd& default_instance();

  void Swap(GMCommandGuildSCmd* other);

  // implements Message ----------------------------------------------

  GMCommandGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMCommandGuildSCmd& from);
  void MergeFrom(const GMCommandGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_GM_COMMAND];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional .Cmd.GuildGM info = 3;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 3;
  inline const ::Cmd::GuildGM& info() const;
  inline ::Cmd::GuildGM* mutable_info();
  inline ::Cmd::GuildGM* release_info();
  inline void set_allocated_info(::Cmd::GuildGM* info);

  // optional string command = 4;
  inline bool has_command() const;
  inline void clear_command();
  static const int kCommandFieldNumber = 4;
  inline const ::std::string& command() const;
  inline void set_command(const ::std::string& value);
  inline void set_command(const char* value);
  inline void set_command(const char* value, size_t size);
  inline ::std::string* mutable_command();
  inline ::std::string* release_command();
  inline void set_allocated_command(::std::string* command);

  // @@protoc_insertion_point(class_scope:Cmd.GMCommandGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_command();
  inline void clear_has_command();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::GuildGM* info_;
  ::std::string* command_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static GMCommandGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class GMCommandRespondGuildSCmd : public ::google::protobuf::Message {
 public:
  GMCommandRespondGuildSCmd();
  virtual ~GMCommandRespondGuildSCmd();

  GMCommandRespondGuildSCmd(const GMCommandRespondGuildSCmd& from);

  inline GMCommandRespondGuildSCmd& operator=(const GMCommandRespondGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMCommandRespondGuildSCmd& default_instance();

  void Swap(GMCommandRespondGuildSCmd* other);

  // implements Message ----------------------------------------------

  GMCommandRespondGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMCommandRespondGuildSCmd& from);
  void MergeFrom(const GMCommandRespondGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_GM_RESPOND];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional .Cmd.GuildGM info = 3;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 3;
  inline const ::Cmd::GuildGM& info() const;
  inline ::Cmd::GuildGM* mutable_info();
  inline ::Cmd::GuildGM* release_info();
  inline void set_allocated_info(::Cmd::GuildGM* info);

  // @@protoc_insertion_point(class_scope:Cmd.GMCommandRespondGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::GuildGM* info_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static GMCommandRespondGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class BuildingEffectGuildSCmd : public ::google::protobuf::Message {
 public:
  BuildingEffectGuildSCmd();
  virtual ~BuildingEffectGuildSCmd();

  BuildingEffectGuildSCmd(const BuildingEffectGuildSCmd& from);

  inline BuildingEffectGuildSCmd& operator=(const BuildingEffectGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildingEffectGuildSCmd& default_instance();

  void Swap(BuildingEffectGuildSCmd* other);

  // implements Message ----------------------------------------------

  BuildingEffectGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildingEffectGuildSCmd& from);
  void MergeFrom(const BuildingEffectGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_BUILDINGEFFECT];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.BuildingEffectGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static BuildingEffectGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class ArtifactUpdateGuildSCmd : public ::google::protobuf::Message {
 public:
  ArtifactUpdateGuildSCmd();
  virtual ~ArtifactUpdateGuildSCmd();

  ArtifactUpdateGuildSCmd(const ArtifactUpdateGuildSCmd& from);

  inline ArtifactUpdateGuildSCmd& operator=(const ArtifactUpdateGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArtifactUpdateGuildSCmd& default_instance();

  void Swap(ArtifactUpdateGuildSCmd* other);

  // implements Message ----------------------------------------------

  ArtifactUpdateGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArtifactUpdateGuildSCmd& from);
  void MergeFrom(const ArtifactUpdateGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_ARTIFACT_UPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 charid = 4 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 4;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint64 guildid = 5 [default = 0];
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 5;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional uint64 sceneid = 6 [default = 0];
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 6;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // repeated .Cmd.GuildArtifactItem itemupdates = 7;
  inline int itemupdates_size() const;
  inline void clear_itemupdates();
  static const int kItemupdatesFieldNumber = 7;
  inline const ::Cmd::GuildArtifactItem& itemupdates(int index) const;
  inline ::Cmd::GuildArtifactItem* mutable_itemupdates(int index);
  inline ::Cmd::GuildArtifactItem* add_itemupdates();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactItem >&
      itemupdates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactItem >*
      mutable_itemupdates();

  // repeated string itemdels = 8;
  inline int itemdels_size() const;
  inline void clear_itemdels();
  static const int kItemdelsFieldNumber = 8;
  inline const ::std::string& itemdels(int index) const;
  inline ::std::string* mutable_itemdels(int index);
  inline void set_itemdels(int index, const ::std::string& value);
  inline void set_itemdels(int index, const char* value);
  inline void set_itemdels(int index, const char* value, size_t size);
  inline ::std::string* add_itemdels();
  inline void add_itemdels(const ::std::string& value);
  inline void add_itemdels(const char* value);
  inline void add_itemdels(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& itemdels() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_itemdels();

  // @@protoc_insertion_point(class_scope:Cmd.ArtifactUpdateGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint64 sceneid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactItem > itemupdates_;
  ::google::protobuf::RepeatedPtrField< ::std::string> itemdels_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static ArtifactUpdateGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildArtifactQuestGuildSCmd : public ::google::protobuf::Message {
 public:
  GuildArtifactQuestGuildSCmd();
  virtual ~GuildArtifactQuestGuildSCmd();

  GuildArtifactQuestGuildSCmd(const GuildArtifactQuestGuildSCmd& from);

  inline GuildArtifactQuestGuildSCmd& operator=(const GuildArtifactQuestGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildArtifactQuestGuildSCmd& default_instance();

  void Swap(GuildArtifactQuestGuildSCmd* other);

  // implements Message ----------------------------------------------

  GuildArtifactQuestGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildArtifactQuestGuildSCmd& from);
  void MergeFrom(const GuildArtifactQuestGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_QUEST_ARTIFACT];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional .Cmd.GuildArtifactQuest quest = 4;
  inline bool has_quest() const;
  inline void clear_quest();
  static const int kQuestFieldNumber = 4;
  inline const ::Cmd::GuildArtifactQuest& quest() const;
  inline ::Cmd::GuildArtifactQuest* mutable_quest();
  inline ::Cmd::GuildArtifactQuest* release_quest();
  inline void set_allocated_quest(::Cmd::GuildArtifactQuest* quest);

  // @@protoc_insertion_point(class_scope:Cmd.GuildArtifactQuestGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_quest();
  inline void clear_has_quest();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::Cmd::GuildArtifactQuest* quest_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildArtifactQuestGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class QueryTreasureGuildSCmd : public ::google::protobuf::Message {
 public:
  QueryTreasureGuildSCmd();
  virtual ~QueryTreasureGuildSCmd();

  QueryTreasureGuildSCmd(const QueryTreasureGuildSCmd& from);

  inline QueryTreasureGuildSCmd& operator=(const QueryTreasureGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryTreasureGuildSCmd& default_instance();

  void Swap(QueryTreasureGuildSCmd* other);

  // implements Message ----------------------------------------------

  QueryTreasureGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryTreasureGuildSCmd& from);
  void MergeFrom(const QueryTreasureGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_TREASURE_QUERY];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 guildid = 3 [default = 0];
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 3;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional uint32 sceneid = 4 [default = 0];
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 4;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);

  // optional bool result = 5 [default = false];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 5;
  inline bool result() const;
  inline void set_result(bool value);

  // repeated .Cmd.GuildTreasure treasures = 6;
  inline int treasures_size() const;
  inline void clear_treasures();
  static const int kTreasuresFieldNumber = 6;
  inline const ::Cmd::GuildTreasure& treasures(int index) const;
  inline ::Cmd::GuildTreasure* mutable_treasures(int index);
  inline ::Cmd::GuildTreasure* add_treasures();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildTreasure >&
      treasures() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildTreasure >*
      mutable_treasures();

  // optional uint32 bcoin_count = 7 [default = 0];
  inline bool has_bcoin_count() const;
  inline void clear_bcoin_count();
  static const int kBcoinCountFieldNumber = 7;
  inline ::google::protobuf::uint32 bcoin_count() const;
  inline void set_bcoin_count(::google::protobuf::uint32 value);

  // optional uint32 asset_count = 8 [default = 0];
  inline bool has_asset_count() const;
  inline void clear_asset_count();
  static const int kAssetCountFieldNumber = 8;
  inline ::google::protobuf::uint32 asset_count() const;
  inline void set_asset_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.QueryTreasureGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_bcoin_count();
  inline void clear_has_bcoin_count();
  inline void set_has_asset_count();
  inline void clear_has_asset_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint32 sceneid_;
  bool result_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildTreasure > treasures_;
  ::google::protobuf::uint32 bcoin_count_;
  ::google::protobuf::uint32 asset_count_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static QueryTreasureGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class GvgUserPartInGuildSCmd : public ::google::protobuf::Message {
 public:
  GvgUserPartInGuildSCmd();
  virtual ~GvgUserPartInGuildSCmd();

  GvgUserPartInGuildSCmd(const GvgUserPartInGuildSCmd& from);

  inline GvgUserPartInGuildSCmd& operator=(const GvgUserPartInGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GvgUserPartInGuildSCmd& default_instance();

  void Swap(GvgUserPartInGuildSCmd* other);

  // implements Message ----------------------------------------------

  GvgUserPartInGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GvgUserPartInGuildSCmd& from);
  void MergeFrom(const GvgUserPartInGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_GVG_USER_PARTIN];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // required uint64 guildid = 3;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 3;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // required uint64 charid = 4;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 4;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.GvgUserPartInGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint64 charid_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static GvgUserPartInGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class TreasureResultNtfGuildSCmd : public ::google::protobuf::Message {
 public:
  TreasureResultNtfGuildSCmd();
  virtual ~TreasureResultNtfGuildSCmd();

  TreasureResultNtfGuildSCmd(const TreasureResultNtfGuildSCmd& from);

  inline TreasureResultNtfGuildSCmd& operator=(const TreasureResultNtfGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TreasureResultNtfGuildSCmd& default_instance();

  void Swap(TreasureResultNtfGuildSCmd* other);

  // implements Message ----------------------------------------------

  TreasureResultNtfGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TreasureResultNtfGuildSCmd& from);
  void MergeFrom(const TreasureResultNtfGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_TREASURE_RESULTNTF];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional .Cmd.TreasureResult result = 4;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 4;
  inline const ::Cmd::TreasureResult& result() const;
  inline ::Cmd::TreasureResult* mutable_result();
  inline ::Cmd::TreasureResult* release_result();
  inline void set_allocated_result(::Cmd::TreasureResult* result);

  // @@protoc_insertion_point(class_scope:Cmd.TreasureResultNtfGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::Cmd::TreasureResult* result_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static TreasureResultNtfGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class UpdateCityStateGuildSCmd : public ::google::protobuf::Message {
 public:
  UpdateCityStateGuildSCmd();
  virtual ~UpdateCityStateGuildSCmd();

  UpdateCityStateGuildSCmd(const UpdateCityStateGuildSCmd& from);

  inline UpdateCityStateGuildSCmd& operator=(const UpdateCityStateGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateCityStateGuildSCmd& default_instance();

  void Swap(UpdateCityStateGuildSCmd* other);

  // implements Message ----------------------------------------------

  UpdateCityStateGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateCityStateGuildSCmd& from);
  void MergeFrom(const UpdateCityStateGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_UPDATE_CITYSTATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // repeated .Cmd.CityShowInfo infos = 3;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 3;
  inline const ::Cmd::CityShowInfo& infos(int index) const;
  inline ::Cmd::CityShowInfo* mutable_infos(int index);
  inline ::Cmd::CityShowInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::CityShowInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::CityShowInfo >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:Cmd.UpdateCityStateGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::CityShowInfo > infos_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static UpdateCityStateGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class GvgOpenToServerGuildSCmd : public ::google::protobuf::Message {
 public:
  GvgOpenToServerGuildSCmd();
  virtual ~GvgOpenToServerGuildSCmd();

  GvgOpenToServerGuildSCmd(const GvgOpenToServerGuildSCmd& from);

  inline GvgOpenToServerGuildSCmd& operator=(const GvgOpenToServerGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GvgOpenToServerGuildSCmd& default_instance();

  void Swap(GvgOpenToServerGuildSCmd* other);

  // implements Message ----------------------------------------------

  GvgOpenToServerGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GvgOpenToServerGuildSCmd& from);
  void MergeFrom(const GvgOpenToServerGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_OPEN_GVG];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional bool fire = 3 [default = false];
  inline bool has_fire() const;
  inline void clear_fire();
  static const int kFireFieldNumber = 3;
  inline bool fire() const;
  inline void set_fire(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.GvgOpenToServerGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_fire();
  inline void clear_has_fire();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  bool fire_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static GvgOpenToServerGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class ShopBuyItemGuildSCmd : public ::google::protobuf::Message {
 public:
  ShopBuyItemGuildSCmd();
  virtual ~ShopBuyItemGuildSCmd();

  ShopBuyItemGuildSCmd(const ShopBuyItemGuildSCmd& from);

  inline ShopBuyItemGuildSCmd& operator=(const ShopBuyItemGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShopBuyItemGuildSCmd& default_instance();

  void Swap(ShopBuyItemGuildSCmd* other);

  // implements Message ----------------------------------------------

  ShopBuyItemGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShopBuyItemGuildSCmd& from);
  void MergeFrom(const ShopBuyItemGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_SHOP_BUY_ITEM];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 id = 4 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 4;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 count = 5 [default = 0];
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 5;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ShopBuyItemGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 count_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static ShopBuyItemGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class JoinSuperGvgGuildSCmd : public ::google::protobuf::Message {
 public:
  JoinSuperGvgGuildSCmd();
  virtual ~JoinSuperGvgGuildSCmd();

  JoinSuperGvgGuildSCmd(const JoinSuperGvgGuildSCmd& from);

  inline JoinSuperGvgGuildSCmd& operator=(const JoinSuperGvgGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinSuperGvgGuildSCmd& default_instance();

  void Swap(JoinSuperGvgGuildSCmd* other);

  // implements Message ----------------------------------------------

  JoinSuperGvgGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinSuperGvgGuildSCmd& from);
  void MergeFrom(const JoinSuperGvgGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_JOINSUPERGVG_REQ];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // required uint64 guildid = 3;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 3;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional uint32 supergvgtime = 4 [default = 0];
  inline bool has_supergvgtime() const;
  inline void clear_supergvgtime();
  static const int kSupergvgtimeFieldNumber = 4;
  inline ::google::protobuf::uint32 supergvgtime() const;
  inline void set_supergvgtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.JoinSuperGvgGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_supergvgtime();
  inline void clear_has_supergvgtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint32 supergvgtime_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static JoinSuperGvgGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class EndSuperGvgGuildSCmd : public ::google::protobuf::Message {
 public:
  EndSuperGvgGuildSCmd();
  virtual ~EndSuperGvgGuildSCmd();

  EndSuperGvgGuildSCmd(const EndSuperGvgGuildSCmd& from);

  inline EndSuperGvgGuildSCmd& operator=(const EndSuperGvgGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EndSuperGvgGuildSCmd& default_instance();

  void Swap(EndSuperGvgGuildSCmd* other);

  // implements Message ----------------------------------------------

  EndSuperGvgGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EndSuperGvgGuildSCmd& from);
  void MergeFrom(const EndSuperGvgGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_SUPERGVG_END];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // required uint64 guildid = 3;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 3;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // required uint32 rank = 4;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 4;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.EndSuperGvgGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_rank();
  inline void clear_has_rank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint32 rank_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static EndSuperGvgGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class UpdateCityGuildSCmd : public ::google::protobuf::Message {
 public:
  UpdateCityGuildSCmd();
  virtual ~UpdateCityGuildSCmd();

  UpdateCityGuildSCmd(const UpdateCityGuildSCmd& from);

  inline UpdateCityGuildSCmd& operator=(const UpdateCityGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateCityGuildSCmd& default_instance();

  void Swap(UpdateCityGuildSCmd* other);

  // implements Message ----------------------------------------------

  UpdateCityGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateCityGuildSCmd& from);
  void MergeFrom(const UpdateCityGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_UPDATE_CITY];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // optional uint64 guildid = 3 [default = 0];
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 3;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional uint32 cityid = 4 [default = 0];
  inline bool has_cityid() const;
  inline void clear_cityid();
  static const int kCityidFieldNumber = 4;
  inline ::google::protobuf::uint32 cityid() const;
  inline void set_cityid(::google::protobuf::uint32 value);

  // optional bool add = 5 [default = false];
  inline bool has_add() const;
  inline void clear_add();
  static const int kAddFieldNumber = 5;
  inline bool add() const;
  inline void set_add(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.UpdateCityGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_cityid();
  inline void clear_has_cityid();
  inline void set_has_add();
  inline void clear_has_add();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint32 cityid_;
  bool add_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static UpdateCityGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class GvgResultInfo : public ::google::protobuf::Message {
 public:
  GvgResultInfo();
  virtual ~GvgResultInfo();

  GvgResultInfo(const GvgResultInfo& from);

  inline GvgResultInfo& operator=(const GvgResultInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GvgResultInfo& default_instance();

  void Swap(GvgResultInfo* other);

  // implements Message ----------------------------------------------

  GvgResultInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GvgResultInfo& from);
  void MergeFrom(const GvgResultInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cityid = 1;
  inline bool has_cityid() const;
  inline void clear_cityid();
  static const int kCityidFieldNumber = 1;
  inline ::google::protobuf::uint32 cityid() const;
  inline void set_cityid(::google::protobuf::uint32 value);

  // optional uint64 guildid = 2;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 2;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional string guildname = 3;
  inline bool has_guildname() const;
  inline void clear_guildname();
  static const int kGuildnameFieldNumber = 3;
  inline const ::std::string& guildname() const;
  inline void set_guildname(const ::std::string& value);
  inline void set_guildname(const char* value);
  inline void set_guildname(const char* value, size_t size);
  inline ::std::string* mutable_guildname();
  inline ::std::string* release_guildname();
  inline void set_allocated_guildname(::std::string* guildname);

  // optional string leadername = 4;
  inline bool has_leadername() const;
  inline void clear_leadername();
  static const int kLeadernameFieldNumber = 4;
  inline const ::std::string& leadername() const;
  inline void set_leadername(const ::std::string& value);
  inline void set_leadername(const char* value);
  inline void set_leadername(const char* value, size_t size);
  inline ::std::string* mutable_leadername();
  inline ::std::string* release_leadername();
  inline void set_allocated_leadername(::std::string* leadername);

  // optional bool perfect = 5 [default = false];
  inline bool has_perfect() const;
  inline void clear_perfect();
  static const int kPerfectFieldNumber = 5;
  inline bool perfect() const;
  inline void set_perfect(bool value);

  // optional uint32 times = 6 [default = 0];
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 6;
  inline ::google::protobuf::uint32 times() const;
  inline void set_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GvgResultInfo)
 private:
  inline void set_has_cityid();
  inline void clear_has_cityid();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_guildname();
  inline void clear_has_guildname();
  inline void set_has_leadername();
  inline void clear_has_leadername();
  inline void set_has_perfect();
  inline void clear_has_perfect();
  inline void set_has_times();
  inline void clear_has_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guildid_;
  ::std::string* guildname_;
  ::google::protobuf::uint32 cityid_;
  bool perfect_;
  ::std::string* leadername_;
  ::google::protobuf::uint32 times_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static GvgResultInfo* default_instance_;
};
// -------------------------------------------------------------------

class GvgResultGuildSCmd : public ::google::protobuf::Message {
 public:
  GvgResultGuildSCmd();
  virtual ~GvgResultGuildSCmd();

  GvgResultGuildSCmd(const GvgResultGuildSCmd& from);

  inline GvgResultGuildSCmd& operator=(const GvgResultGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GvgResultGuildSCmd& default_instance();

  void Swap(GvgResultGuildSCmd* other);

  // implements Message ----------------------------------------------

  GvgResultGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GvgResultGuildSCmd& from);
  void MergeFrom(const GvgResultGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_GVG_RESULT];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // repeated .Cmd.GvgResultInfo infos = 3;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 3;
  inline const ::Cmd::GvgResultInfo& infos(int index) const;
  inline ::Cmd::GvgResultInfo* mutable_infos(int index);
  inline ::Cmd::GvgResultInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GvgResultInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GvgResultInfo >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:Cmd.GvgResultGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GvgResultInfo > infos_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static GvgResultGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildBrocastMailGuildSCmd : public ::google::protobuf::Message {
 public:
  GuildBrocastMailGuildSCmd();
  virtual ~GuildBrocastMailGuildSCmd();

  GuildBrocastMailGuildSCmd(const GuildBrocastMailGuildSCmd& from);

  inline GuildBrocastMailGuildSCmd& operator=(const GuildBrocastMailGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildBrocastMailGuildSCmd& default_instance();

  void Swap(GuildBrocastMailGuildSCmd* other);

  // implements Message ----------------------------------------------

  GuildBrocastMailGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildBrocastMailGuildSCmd& from);
  void MergeFrom(const GuildBrocastMailGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_GUILD_MAIL];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // required uint64 guildid = 3;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 3;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional uint32 mailid = 4 [default = 0];
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailidFieldNumber = 4;
  inline ::google::protobuf::uint32 mailid() const;
  inline void set_mailid(::google::protobuf::uint32 value);

  // repeated .Cmd.ItemInfo items = 5;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 5;
  inline const ::Cmd::ItemInfo& items(int index) const;
  inline ::Cmd::ItemInfo* mutable_items(int index);
  inline ::Cmd::ItemInfo* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:Cmd.GuildBrocastMailGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_mailid();
  inline void clear_has_mailid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo > items_;
  ::google::protobuf::uint32 mailid_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildBrocastMailGuildSCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildBrocastMsgGuildSCmd : public ::google::protobuf::Message {
 public:
  GuildBrocastMsgGuildSCmd();
  virtual ~GuildBrocastMsgGuildSCmd();

  GuildBrocastMsgGuildSCmd(const GuildBrocastMsgGuildSCmd& from);

  inline GuildBrocastMsgGuildSCmd& operator=(const GuildBrocastMsgGuildSCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildBrocastMsgGuildSCmd& default_instance();

  void Swap(GuildBrocastMsgGuildSCmd* other);

  // implements Message ----------------------------------------------

  GuildBrocastMsgGuildSCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildBrocastMsgGuildSCmd& from);
  void MergeFrom(const GuildBrocastMsgGuildSCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_GUILD_MSG];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::GuildSParam param() const;
  inline void set_param(::Cmd::GuildSParam value);

  // required uint64 guildid = 3;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 3;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // required uint32 msgid = 4;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 4;
  inline ::google::protobuf::uint32 msgid() const;
  inline void set_msgid(::google::protobuf::uint32 value);

  // repeated .Cmd.MsgParam params = 5;
  inline int params_size() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 5;
  inline const ::Cmd::MsgParam& params(int index) const;
  inline ::Cmd::MsgParam* mutable_params(int index);
  inline ::Cmd::MsgParam* add_params();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::MsgParam >&
      params() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::MsgParam >*
      mutable_params();

  // @@protoc_insertion_point(class_scope:Cmd.GuildBrocastMsgGuildSCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::MsgParam > params_;
  ::google::protobuf::uint32 msgid_;
  friend void  protobuf_AddDesc_GuildSCmd_2eproto();
  friend void protobuf_AssignDesc_GuildSCmd_2eproto();
  friend void protobuf_ShutdownFile_GuildSCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildBrocastMsgGuildSCmd* default_instance_;
};
// ===================================================================


// ===================================================================

// UserGuildInfoSyncGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool UserGuildInfoSyncGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserGuildInfoSyncGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserGuildInfoSyncGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserGuildInfoSyncGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command UserGuildInfoSyncGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UserGuildInfoSyncGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UserGuildInfoSyncGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserGuildInfoSyncGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_USER_GUILDINFO_SYNC];
inline bool UserGuildInfoSyncGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserGuildInfoSyncGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserGuildInfoSyncGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserGuildInfoSyncGuildSCmd::clear_param() {
  param_ = 1;
  clear_has_param();
}
inline ::Cmd::GuildSParam UserGuildInfoSyncGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UserGuildInfoSyncGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void UserGuildInfoSyncGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserGuildInfoSyncGuildSCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool UserGuildInfoSyncGuildSCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserGuildInfoSyncGuildSCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserGuildInfoSyncGuildSCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserGuildInfoSyncGuildSCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 UserGuildInfoSyncGuildSCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.UserGuildInfoSyncGuildSCmd.charid)
  return charid_;
}
inline void UserGuildInfoSyncGuildSCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserGuildInfoSyncGuildSCmd.charid)
}

// optional uint64 guildid = 4 [default = 0];
inline bool UserGuildInfoSyncGuildSCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserGuildInfoSyncGuildSCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserGuildInfoSyncGuildSCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserGuildInfoSyncGuildSCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 UserGuildInfoSyncGuildSCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.UserGuildInfoSyncGuildSCmd.guildid)
  return guildid_;
}
inline void UserGuildInfoSyncGuildSCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserGuildInfoSyncGuildSCmd.guildid)
}

// optional string guildname = 5;
inline bool UserGuildInfoSyncGuildSCmd::has_guildname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserGuildInfoSyncGuildSCmd::set_has_guildname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserGuildInfoSyncGuildSCmd::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserGuildInfoSyncGuildSCmd::clear_guildname() {
  if (guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_->clear();
  }
  clear_has_guildname();
}
inline const ::std::string& UserGuildInfoSyncGuildSCmd::guildname() const {
  // @@protoc_insertion_point(field_get:Cmd.UserGuildInfoSyncGuildSCmd.guildname)
  return *guildname_;
}
inline void UserGuildInfoSyncGuildSCmd::set_guildname(const ::std::string& value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.UserGuildInfoSyncGuildSCmd.guildname)
}
inline void UserGuildInfoSyncGuildSCmd::set_guildname(const char* value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.UserGuildInfoSyncGuildSCmd.guildname)
}
inline void UserGuildInfoSyncGuildSCmd::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.UserGuildInfoSyncGuildSCmd.guildname)
}
inline ::std::string* UserGuildInfoSyncGuildSCmd::mutable_guildname() {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.UserGuildInfoSyncGuildSCmd.guildname)
  return guildname_;
}
inline ::std::string* UserGuildInfoSyncGuildSCmd::release_guildname() {
  clear_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guildname_;
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserGuildInfoSyncGuildSCmd::set_allocated_guildname(::std::string* guildname) {
  if (guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guildname_;
  }
  if (guildname) {
    set_has_guildname();
    guildname_ = guildname;
  } else {
    clear_has_guildname();
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.UserGuildInfoSyncGuildSCmd.guildname)
}

// optional string guildportrait = 6;
inline bool UserGuildInfoSyncGuildSCmd::has_guildportrait() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserGuildInfoSyncGuildSCmd::set_has_guildportrait() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserGuildInfoSyncGuildSCmd::clear_has_guildportrait() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserGuildInfoSyncGuildSCmd::clear_guildportrait() {
  if (guildportrait_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildportrait_->clear();
  }
  clear_has_guildportrait();
}
inline const ::std::string& UserGuildInfoSyncGuildSCmd::guildportrait() const {
  // @@protoc_insertion_point(field_get:Cmd.UserGuildInfoSyncGuildSCmd.guildportrait)
  return *guildportrait_;
}
inline void UserGuildInfoSyncGuildSCmd::set_guildportrait(const ::std::string& value) {
  set_has_guildportrait();
  if (guildportrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildportrait_ = new ::std::string;
  }
  guildportrait_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.UserGuildInfoSyncGuildSCmd.guildportrait)
}
inline void UserGuildInfoSyncGuildSCmd::set_guildportrait(const char* value) {
  set_has_guildportrait();
  if (guildportrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildportrait_ = new ::std::string;
  }
  guildportrait_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.UserGuildInfoSyncGuildSCmd.guildportrait)
}
inline void UserGuildInfoSyncGuildSCmd::set_guildportrait(const char* value, size_t size) {
  set_has_guildportrait();
  if (guildportrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildportrait_ = new ::std::string;
  }
  guildportrait_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.UserGuildInfoSyncGuildSCmd.guildportrait)
}
inline ::std::string* UserGuildInfoSyncGuildSCmd::mutable_guildportrait() {
  set_has_guildportrait();
  if (guildportrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildportrait_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.UserGuildInfoSyncGuildSCmd.guildportrait)
  return guildportrait_;
}
inline ::std::string* UserGuildInfoSyncGuildSCmd::release_guildportrait() {
  clear_has_guildportrait();
  if (guildportrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guildportrait_;
    guildportrait_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserGuildInfoSyncGuildSCmd::set_allocated_guildportrait(::std::string* guildportrait) {
  if (guildportrait_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guildportrait_;
  }
  if (guildportrait) {
    set_has_guildportrait();
    guildportrait_ = guildportrait;
  } else {
    clear_has_guildportrait();
    guildportrait_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.UserGuildInfoSyncGuildSCmd.guildportrait)
}

// -------------------------------------------------------------------

// ChatSyncGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool ChatSyncGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatSyncGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatSyncGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatSyncGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command ChatSyncGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ChatSyncGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ChatSyncGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChatSyncGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_CHAT_SYNC];
inline bool ChatSyncGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatSyncGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatSyncGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatSyncGuildSCmd::clear_param() {
  param_ = 2;
  clear_has_param();
}
inline ::Cmd::GuildSParam ChatSyncGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ChatSyncGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void ChatSyncGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChatSyncGuildSCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool ChatSyncGuildSCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChatSyncGuildSCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChatSyncGuildSCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChatSyncGuildSCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ChatSyncGuildSCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChatSyncGuildSCmd.charid)
  return charid_;
}
inline void ChatSyncGuildSCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChatSyncGuildSCmd.charid)
}

// optional bytes data = 4;
inline bool ChatSyncGuildSCmd::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChatSyncGuildSCmd::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChatSyncGuildSCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChatSyncGuildSCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& ChatSyncGuildSCmd::data() const {
  // @@protoc_insertion_point(field_get:Cmd.ChatSyncGuildSCmd.data)
  return *data_;
}
inline void ChatSyncGuildSCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.ChatSyncGuildSCmd.data)
}
inline void ChatSyncGuildSCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.ChatSyncGuildSCmd.data)
}
inline void ChatSyncGuildSCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.ChatSyncGuildSCmd.data)
}
inline ::std::string* ChatSyncGuildSCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.ChatSyncGuildSCmd.data)
  return data_;
}
inline ::std::string* ChatSyncGuildSCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ChatSyncGuildSCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ChatSyncGuildSCmd.data)
}

// optional uint32 len = 5 [default = 0];
inline bool ChatSyncGuildSCmd::has_len() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChatSyncGuildSCmd::set_has_len() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChatSyncGuildSCmd::clear_has_len() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChatSyncGuildSCmd::clear_len() {
  len_ = 0u;
  clear_has_len();
}
inline ::google::protobuf::uint32 ChatSyncGuildSCmd::len() const {
  // @@protoc_insertion_point(field_get:Cmd.ChatSyncGuildSCmd.len)
  return len_;
}
inline void ChatSyncGuildSCmd::set_len(::google::protobuf::uint32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChatSyncGuildSCmd.len)
}

// -------------------------------------------------------------------

// LoadLuaGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool LoadLuaGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoadLuaGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoadLuaGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoadLuaGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command LoadLuaGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.LoadLuaGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void LoadLuaGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LoadLuaGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_LOAD_LUA];
inline bool LoadLuaGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoadLuaGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoadLuaGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoadLuaGuildSCmd::clear_param() {
  param_ = 3;
  clear_has_param();
}
inline ::Cmd::GuildSParam LoadLuaGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.LoadLuaGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void LoadLuaGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LoadLuaGuildSCmd.param)
}

// optional string table = 3;
inline bool LoadLuaGuildSCmd::has_table() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoadLuaGuildSCmd::set_has_table() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoadLuaGuildSCmd::clear_has_table() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoadLuaGuildSCmd::clear_table() {
  if (table_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_->clear();
  }
  clear_has_table();
}
inline const ::std::string& LoadLuaGuildSCmd::table() const {
  // @@protoc_insertion_point(field_get:Cmd.LoadLuaGuildSCmd.table)
  return *table_;
}
inline void LoadLuaGuildSCmd::set_table(const ::std::string& value) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_ = new ::std::string;
  }
  table_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.LoadLuaGuildSCmd.table)
}
inline void LoadLuaGuildSCmd::set_table(const char* value) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_ = new ::std::string;
  }
  table_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.LoadLuaGuildSCmd.table)
}
inline void LoadLuaGuildSCmd::set_table(const char* value, size_t size) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_ = new ::std::string;
  }
  table_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.LoadLuaGuildSCmd.table)
}
inline ::std::string* LoadLuaGuildSCmd::mutable_table() {
  set_has_table();
  if (table_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.LoadLuaGuildSCmd.table)
  return table_;
}
inline ::std::string* LoadLuaGuildSCmd::release_table() {
  clear_has_table();
  if (table_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = table_;
    table_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoadLuaGuildSCmd::set_allocated_table(::std::string* table) {
  if (table_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete table_;
  }
  if (table) {
    set_has_table();
    table_ = table;
  } else {
    clear_has_table();
    table_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.LoadLuaGuildSCmd.table)
}

// optional string lua = 4;
inline bool LoadLuaGuildSCmd::has_lua() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoadLuaGuildSCmd::set_has_lua() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoadLuaGuildSCmd::clear_has_lua() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoadLuaGuildSCmd::clear_lua() {
  if (lua_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lua_->clear();
  }
  clear_has_lua();
}
inline const ::std::string& LoadLuaGuildSCmd::lua() const {
  // @@protoc_insertion_point(field_get:Cmd.LoadLuaGuildSCmd.lua)
  return *lua_;
}
inline void LoadLuaGuildSCmd::set_lua(const ::std::string& value) {
  set_has_lua();
  if (lua_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lua_ = new ::std::string;
  }
  lua_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.LoadLuaGuildSCmd.lua)
}
inline void LoadLuaGuildSCmd::set_lua(const char* value) {
  set_has_lua();
  if (lua_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lua_ = new ::std::string;
  }
  lua_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.LoadLuaGuildSCmd.lua)
}
inline void LoadLuaGuildSCmd::set_lua(const char* value, size_t size) {
  set_has_lua();
  if (lua_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lua_ = new ::std::string;
  }
  lua_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.LoadLuaGuildSCmd.lua)
}
inline ::std::string* LoadLuaGuildSCmd::mutable_lua() {
  set_has_lua();
  if (lua_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lua_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.LoadLuaGuildSCmd.lua)
  return lua_;
}
inline ::std::string* LoadLuaGuildSCmd::release_lua() {
  clear_has_lua();
  if (lua_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = lua_;
    lua_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoadLuaGuildSCmd::set_allocated_lua(::std::string* lua) {
  if (lua_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete lua_;
  }
  if (lua) {
    set_has_lua();
    lua_ = lua;
  } else {
    clear_has_lua();
    lua_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.LoadLuaGuildSCmd.lua)
}

// optional string log = 5;
inline bool LoadLuaGuildSCmd::has_log() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoadLuaGuildSCmd::set_has_log() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoadLuaGuildSCmd::clear_has_log() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoadLuaGuildSCmd::clear_log() {
  if (log_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    log_->clear();
  }
  clear_has_log();
}
inline const ::std::string& LoadLuaGuildSCmd::log() const {
  // @@protoc_insertion_point(field_get:Cmd.LoadLuaGuildSCmd.log)
  return *log_;
}
inline void LoadLuaGuildSCmd::set_log(const ::std::string& value) {
  set_has_log();
  if (log_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    log_ = new ::std::string;
  }
  log_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.LoadLuaGuildSCmd.log)
}
inline void LoadLuaGuildSCmd::set_log(const char* value) {
  set_has_log();
  if (log_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    log_ = new ::std::string;
  }
  log_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.LoadLuaGuildSCmd.log)
}
inline void LoadLuaGuildSCmd::set_log(const char* value, size_t size) {
  set_has_log();
  if (log_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    log_ = new ::std::string;
  }
  log_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.LoadLuaGuildSCmd.log)
}
inline ::std::string* LoadLuaGuildSCmd::mutable_log() {
  set_has_log();
  if (log_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    log_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.LoadLuaGuildSCmd.log)
  return log_;
}
inline ::std::string* LoadLuaGuildSCmd::release_log() {
  clear_has_log();
  if (log_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = log_;
    log_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoadLuaGuildSCmd::set_allocated_log(::std::string* log) {
  if (log_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete log_;
  }
  if (log) {
    set_has_log();
    log_ = log;
  } else {
    clear_has_log();
    log_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.LoadLuaGuildSCmd.log)
}

// -------------------------------------------------------------------

// GuildUserInfo

// optional uint32 giftpoint = 1 [default = 0];
inline bool GuildUserInfo::has_giftpoint() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildUserInfo::set_has_giftpoint() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildUserInfo::clear_has_giftpoint() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildUserInfo::clear_giftpoint() {
  giftpoint_ = 0u;
  clear_has_giftpoint();
}
inline ::google::protobuf::uint32 GuildUserInfo::giftpoint() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildUserInfo.giftpoint)
  return giftpoint_;
}
inline void GuildUserInfo::set_giftpoint(::google::protobuf::uint32 value) {
  set_has_giftpoint();
  giftpoint_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildUserInfo.giftpoint)
}

// optional uint32 contribute = 2 [default = 0];
inline bool GuildUserInfo::has_contribute() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildUserInfo::set_has_contribute() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildUserInfo::clear_has_contribute() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildUserInfo::clear_contribute() {
  contribute_ = 0u;
  clear_has_contribute();
}
inline ::google::protobuf::uint32 GuildUserInfo::contribute() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildUserInfo.contribute)
  return contribute_;
}
inline void GuildUserInfo::set_contribute(::google::protobuf::uint32 value) {
  set_has_contribute();
  contribute_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildUserInfo.contribute)
}

// repeated .Cmd.GuildMemberPray prays = 3;
inline int GuildUserInfo::prays_size() const {
  return prays_.size();
}
inline void GuildUserInfo::clear_prays() {
  prays_.Clear();
}
inline const ::Cmd::GuildMemberPray& GuildUserInfo::prays(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildUserInfo.prays)
  return prays_.Get(index);
}
inline ::Cmd::GuildMemberPray* GuildUserInfo::mutable_prays(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildUserInfo.prays)
  return prays_.Mutable(index);
}
inline ::Cmd::GuildMemberPray* GuildUserInfo::add_prays() {
  // @@protoc_insertion_point(field_add:Cmd.GuildUserInfo.prays)
  return prays_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMemberPray >&
GuildUserInfo::prays() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildUserInfo.prays)
  return prays_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMemberPray >*
GuildUserInfo::mutable_prays() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildUserInfo.prays)
  return &prays_;
}

// -------------------------------------------------------------------

// GuildUserInfoSyncGuildCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool GuildUserInfoSyncGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildUserInfoSyncGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildUserInfoSyncGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildUserInfoSyncGuildCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command GuildUserInfoSyncGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildUserInfoSyncGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildUserInfoSyncGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildUserInfoSyncGuildCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_GUILD_SYNC_USERINFO];
inline bool GuildUserInfoSyncGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildUserInfoSyncGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildUserInfoSyncGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildUserInfoSyncGuildCmd::clear_param() {
  param_ = 4;
  clear_has_param();
}
inline ::Cmd::GuildSParam GuildUserInfoSyncGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildUserInfoSyncGuildCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void GuildUserInfoSyncGuildCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildUserInfoSyncGuildCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool GuildUserInfoSyncGuildCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildUserInfoSyncGuildCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildUserInfoSyncGuildCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildUserInfoSyncGuildCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GuildUserInfoSyncGuildCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildUserInfoSyncGuildCmd.charid)
  return charid_;
}
inline void GuildUserInfoSyncGuildCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildUserInfoSyncGuildCmd.charid)
}

// optional .Cmd.GuildUserInfo info = 4;
inline bool GuildUserInfoSyncGuildCmd::has_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildUserInfoSyncGuildCmd::set_has_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildUserInfoSyncGuildCmd::clear_has_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildUserInfoSyncGuildCmd::clear_info() {
  if (info_ != NULL) info_->::Cmd::GuildUserInfo::Clear();
  clear_has_info();
}
inline const ::Cmd::GuildUserInfo& GuildUserInfoSyncGuildCmd::info() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildUserInfoSyncGuildCmd.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::Cmd::GuildUserInfo* GuildUserInfoSyncGuildCmd::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::Cmd::GuildUserInfo;
  // @@protoc_insertion_point(field_mutable:Cmd.GuildUserInfoSyncGuildCmd.info)
  return info_;
}
inline ::Cmd::GuildUserInfo* GuildUserInfoSyncGuildCmd::release_info() {
  clear_has_info();
  ::Cmd::GuildUserInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void GuildUserInfoSyncGuildCmd::set_allocated_info(::Cmd::GuildUserInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildUserInfoSyncGuildCmd.info)
}

// optional bool levelup = 5 [default = false];
inline bool GuildUserInfoSyncGuildCmd::has_levelup() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildUserInfoSyncGuildCmd::set_has_levelup() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildUserInfoSyncGuildCmd::clear_has_levelup() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildUserInfoSyncGuildCmd::clear_levelup() {
  levelup_ = false;
  clear_has_levelup();
}
inline bool GuildUserInfoSyncGuildCmd::levelup() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildUserInfoSyncGuildCmd.levelup)
  return levelup_;
}
inline void GuildUserInfoSyncGuildCmd::set_levelup(bool value) {
  set_has_levelup();
  levelup_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildUserInfoSyncGuildCmd.levelup)
}

// optional .Cmd.GuildOptConType optcontype = 6 [default = GUILDOPTCONTYPE_LOGIN];
inline bool GuildUserInfoSyncGuildCmd::has_optcontype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildUserInfoSyncGuildCmd::set_has_optcontype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildUserInfoSyncGuildCmd::clear_has_optcontype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildUserInfoSyncGuildCmd::clear_optcontype() {
  optcontype_ = 0;
  clear_has_optcontype();
}
inline ::Cmd::GuildOptConType GuildUserInfoSyncGuildCmd::optcontype() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildUserInfoSyncGuildCmd.optcontype)
  return static_cast< ::Cmd::GuildOptConType >(optcontype_);
}
inline void GuildUserInfoSyncGuildCmd::set_optcontype(::Cmd::GuildOptConType value) {
  assert(::Cmd::GuildOptConType_IsValid(value));
  set_has_optcontype();
  optcontype_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildUserInfoSyncGuildCmd.optcontype)
}

// -------------------------------------------------------------------

// GuildSMember

// optional uint64 charid = 1 [default = 0];
inline bool GuildSMember::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildSMember::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildSMember::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildSMember::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GuildSMember::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildSMember.charid)
  return charid_;
}
inline void GuildSMember::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildSMember.charid)
}

// optional uint32 onlinetime = 2 [default = 0];
inline bool GuildSMember::has_onlinetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildSMember::set_has_onlinetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildSMember::clear_has_onlinetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildSMember::clear_onlinetime() {
  onlinetime_ = 0u;
  clear_has_onlinetime();
}
inline ::google::protobuf::uint32 GuildSMember::onlinetime() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildSMember.onlinetime)
  return onlinetime_;
}
inline void GuildSMember::set_onlinetime(::google::protobuf::uint32 value) {
  set_has_onlinetime();
  onlinetime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildSMember.onlinetime)
}

// optional uint32 entertime = 3 [default = 0];
inline bool GuildSMember::has_entertime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildSMember::set_has_entertime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildSMember::clear_has_entertime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildSMember::clear_entertime() {
  entertime_ = 0u;
  clear_has_entertime();
}
inline ::google::protobuf::uint32 GuildSMember::entertime() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildSMember.entertime)
  return entertime_;
}
inline void GuildSMember::set_entertime(::google::protobuf::uint32 value) {
  set_has_entertime();
  entertime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildSMember.entertime)
}

// optional .Cmd.EGuildJob job = 4 [default = EGUILDJOB_MIN];
inline bool GuildSMember::has_job() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildSMember::set_has_job() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildSMember::clear_has_job() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildSMember::clear_job() {
  job_ = 0;
  clear_has_job();
}
inline ::Cmd::EGuildJob GuildSMember::job() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildSMember.job)
  return static_cast< ::Cmd::EGuildJob >(job_);
}
inline void GuildSMember::set_job(::Cmd::EGuildJob value) {
  assert(::Cmd::EGuildJob_IsValid(value));
  set_has_job();
  job_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildSMember.job)
}

// optional string name = 5;
inline bool GuildSMember::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildSMember::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildSMember::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildSMember::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GuildSMember::name() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildSMember.name)
  return *name_;
}
inline void GuildSMember::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildSMember.name)
}
inline void GuildSMember::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildSMember.name)
}
inline void GuildSMember::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildSMember.name)
}
inline ::std::string* GuildSMember::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildSMember.name)
  return name_;
}
inline ::std::string* GuildSMember::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildSMember::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildSMember.name)
}

// optional uint64 accid = 6 [default = 0];
inline bool GuildSMember::has_accid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildSMember::set_has_accid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildSMember::clear_has_accid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildSMember::clear_accid() {
  accid_ = GOOGLE_ULONGLONG(0);
  clear_has_accid();
}
inline ::google::protobuf::uint64 GuildSMember::accid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildSMember.accid)
  return accid_;
}
inline void GuildSMember::set_accid(::google::protobuf::uint64 value) {
  set_has_accid();
  accid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildSMember.accid)
}

// optional uint32 offlinetime = 7 [default = 0];
inline bool GuildSMember::has_offlinetime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildSMember::set_has_offlinetime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildSMember::clear_has_offlinetime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildSMember::clear_offlinetime() {
  offlinetime_ = 0u;
  clear_has_offlinetime();
}
inline ::google::protobuf::uint32 GuildSMember::offlinetime() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildSMember.offlinetime)
  return offlinetime_;
}
inline void GuildSMember::set_offlinetime(::google::protobuf::uint32 value) {
  set_has_offlinetime();
  offlinetime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildSMember.offlinetime)
}

// optional uint32 auth = 8 [default = 0];
inline bool GuildSMember::has_auth() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuildSMember::set_has_auth() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuildSMember::clear_has_auth() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuildSMember::clear_auth() {
  auth_ = 0u;
  clear_has_auth();
}
inline ::google::protobuf::uint32 GuildSMember::auth() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildSMember.auth)
  return auth_;
}
inline void GuildSMember::set_auth(::google::protobuf::uint32 value) {
  set_has_auth();
  auth_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildSMember.auth)
}

// optional bool buildingeffect = 9 [default = false];
inline bool GuildSMember::has_buildingeffect() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GuildSMember::set_has_buildingeffect() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GuildSMember::clear_has_buildingeffect() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GuildSMember::clear_buildingeffect() {
  buildingeffect_ = false;
  clear_has_buildingeffect();
}
inline bool GuildSMember::buildingeffect() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildSMember.buildingeffect)
  return buildingeffect_;
}
inline void GuildSMember::set_buildingeffect(bool value) {
  set_has_buildingeffect();
  buildingeffect_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildSMember.buildingeffect)
}

// -------------------------------------------------------------------

// GuildArtifactQuest

// repeated uint32 submitids = 1;
inline int GuildArtifactQuest::submitids_size() const {
  return submitids_.size();
}
inline void GuildArtifactQuest::clear_submitids() {
  submitids_.Clear();
}
inline ::google::protobuf::uint32 GuildArtifactQuest::submitids(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildArtifactQuest.submitids)
  return submitids_.Get(index);
}
inline void GuildArtifactQuest::set_submitids(int index, ::google::protobuf::uint32 value) {
  submitids_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.GuildArtifactQuest.submitids)
}
inline void GuildArtifactQuest::add_submitids(::google::protobuf::uint32 value) {
  submitids_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.GuildArtifactQuest.submitids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GuildArtifactQuest::submitids() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildArtifactQuest.submitids)
  return submitids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GuildArtifactQuest::mutable_submitids() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildArtifactQuest.submitids)
  return &submitids_;
}

// repeated .Cmd.ItemData datas = 2;
inline int GuildArtifactQuest::datas_size() const {
  return datas_.size();
}
inline void GuildArtifactQuest::clear_datas() {
  datas_.Clear();
}
inline const ::Cmd::ItemData& GuildArtifactQuest::datas(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildArtifactQuest.datas)
  return datas_.Get(index);
}
inline ::Cmd::ItemData* GuildArtifactQuest::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildArtifactQuest.datas)
  return datas_.Mutable(index);
}
inline ::Cmd::ItemData* GuildArtifactQuest::add_datas() {
  // @@protoc_insertion_point(field_add:Cmd.GuildArtifactQuest.datas)
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
GuildArtifactQuest::datas() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildArtifactQuest.datas)
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
GuildArtifactQuest::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildArtifactQuest.datas)
  return &datas_;
}

// -------------------------------------------------------------------

// GuildGvgData

// optional bool insupergvg = 1 [default = false];
inline bool GuildGvgData::has_insupergvg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildGvgData::set_has_insupergvg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildGvgData::clear_has_insupergvg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildGvgData::clear_insupergvg() {
  insupergvg_ = false;
  clear_has_insupergvg();
}
inline bool GuildGvgData::insupergvg() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildGvgData.insupergvg)
  return insupergvg_;
}
inline void GuildGvgData::set_insupergvg(bool value) {
  set_has_insupergvg();
  insupergvg_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildGvgData.insupergvg)
}

// -------------------------------------------------------------------

// GuildInfo

// optional uint64 id = 1 [default = 0];
inline bool GuildInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 GuildInfo::id() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildInfo.id)
  return id_;
}
inline void GuildInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildInfo.id)
}

// optional uint32 zoneid = 2 [default = 0];
inline bool GuildInfo::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildInfo::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildInfo::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildInfo::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 GuildInfo::zoneid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildInfo.zoneid)
  return zoneid_;
}
inline void GuildInfo::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildInfo.zoneid)
}

// optional uint32 lv = 3 [default = 0];
inline bool GuildInfo::has_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildInfo::set_has_lv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildInfo::clear_has_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildInfo::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 GuildInfo::lv() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildInfo.lv)
  return lv_;
}
inline void GuildInfo::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildInfo.lv)
}

// optional uint32 scene = 4 [default = 0];
inline bool GuildInfo::has_scene() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildInfo::set_has_scene() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildInfo::clear_has_scene() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildInfo::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
inline ::google::protobuf::uint32 GuildInfo::scene() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildInfo.scene)
  return scene_;
}
inline void GuildInfo::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildInfo.scene)
}

// optional uint32 auth = 12 [default = 0];
inline bool GuildInfo::has_auth() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildInfo::set_has_auth() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildInfo::clear_has_auth() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildInfo::clear_auth() {
  auth_ = 0u;
  clear_has_auth();
}
inline ::google::protobuf::uint32 GuildInfo::auth() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildInfo.auth)
  return auth_;
}
inline void GuildInfo::set_auth(::google::protobuf::uint32 value) {
  set_has_auth();
  auth_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildInfo.auth)
}

// optional bool create = 5 [default = false];
inline bool GuildInfo::has_create() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildInfo::set_has_create() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildInfo::clear_has_create() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildInfo::clear_create() {
  create_ = false;
  clear_has_create();
}
inline bool GuildInfo::create() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildInfo.create)
  return create_;
}
inline void GuildInfo::set_create(bool value) {
  set_has_create();
  create_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildInfo.create)
}

// optional string name = 6;
inline bool GuildInfo::has_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildInfo::set_has_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GuildInfo::name() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildInfo.name)
  return *name_;
}
inline void GuildInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildInfo.name)
}
inline void GuildInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildInfo.name)
}
inline void GuildInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildInfo.name)
}
inline ::std::string* GuildInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildInfo.name)
  return name_;
}
inline ::std::string* GuildInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildInfo.name)
}

// optional string portrait = 7;
inline bool GuildInfo::has_portrait() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuildInfo::set_has_portrait() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuildInfo::clear_has_portrait() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuildInfo::clear_portrait() {
  if (portrait_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_->clear();
  }
  clear_has_portrait();
}
inline const ::std::string& GuildInfo::portrait() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildInfo.portrait)
  return *portrait_;
}
inline void GuildInfo::set_portrait(const ::std::string& value) {
  set_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_ = new ::std::string;
  }
  portrait_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildInfo.portrait)
}
inline void GuildInfo::set_portrait(const char* value) {
  set_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_ = new ::std::string;
  }
  portrait_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildInfo.portrait)
}
inline void GuildInfo::set_portrait(const char* value, size_t size) {
  set_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_ = new ::std::string;
  }
  portrait_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildInfo.portrait)
}
inline ::std::string* GuildInfo::mutable_portrait() {
  set_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    portrait_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildInfo.portrait)
  return portrait_;
}
inline ::std::string* GuildInfo::release_portrait() {
  clear_has_portrait();
  if (portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = portrait_;
    portrait_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildInfo::set_allocated_portrait(::std::string* portrait) {
  if (portrait_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete portrait_;
  }
  if (portrait) {
    set_has_portrait();
    portrait_ = portrait;
  } else {
    clear_has_portrait();
    portrait_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildInfo.portrait)
}

// optional string jobname = 8;
inline bool GuildInfo::has_jobname() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GuildInfo::set_has_jobname() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GuildInfo::clear_has_jobname() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GuildInfo::clear_jobname() {
  if (jobname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jobname_->clear();
  }
  clear_has_jobname();
}
inline const ::std::string& GuildInfo::jobname() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildInfo.jobname)
  return *jobname_;
}
inline void GuildInfo::set_jobname(const ::std::string& value) {
  set_has_jobname();
  if (jobname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jobname_ = new ::std::string;
  }
  jobname_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildInfo.jobname)
}
inline void GuildInfo::set_jobname(const char* value) {
  set_has_jobname();
  if (jobname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jobname_ = new ::std::string;
  }
  jobname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildInfo.jobname)
}
inline void GuildInfo::set_jobname(const char* value, size_t size) {
  set_has_jobname();
  if (jobname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jobname_ = new ::std::string;
  }
  jobname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildInfo.jobname)
}
inline ::std::string* GuildInfo::mutable_jobname() {
  set_has_jobname();
  if (jobname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jobname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildInfo.jobname)
  return jobname_;
}
inline ::std::string* GuildInfo::release_jobname() {
  clear_has_jobname();
  if (jobname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = jobname_;
    jobname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildInfo::set_allocated_jobname(::std::string* jobname) {
  if (jobname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete jobname_;
  }
  if (jobname) {
    set_has_jobname();
    jobname_ = jobname;
  } else {
    clear_has_jobname();
    jobname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildInfo.jobname)
}

// repeated .Cmd.GuildSMember members = 10;
inline int GuildInfo::members_size() const {
  return members_.size();
}
inline void GuildInfo::clear_members() {
  members_.Clear();
}
inline const ::Cmd::GuildSMember& GuildInfo::members(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildInfo.members)
  return members_.Get(index);
}
inline ::Cmd::GuildSMember* GuildInfo::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildInfo.members)
  return members_.Mutable(index);
}
inline ::Cmd::GuildSMember* GuildInfo::add_members() {
  // @@protoc_insertion_point(field_add:Cmd.GuildInfo.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildSMember >&
GuildInfo::members() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildInfo.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildSMember >*
GuildInfo::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildInfo.members)
  return &members_;
}

// repeated .Cmd.GuildQuest quests = 11;
inline int GuildInfo::quests_size() const {
  return quests_.size();
}
inline void GuildInfo::clear_quests() {
  quests_.Clear();
}
inline const ::Cmd::GuildQuest& GuildInfo::quests(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildInfo.quests)
  return quests_.Get(index);
}
inline ::Cmd::GuildQuest* GuildInfo::mutable_quests(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildInfo.quests)
  return quests_.Mutable(index);
}
inline ::Cmd::GuildQuest* GuildInfo::add_quests() {
  // @@protoc_insertion_point(field_add:Cmd.GuildInfo.quests)
  return quests_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildQuest >&
GuildInfo::quests() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildInfo.quests)
  return quests_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildQuest >*
GuildInfo::mutable_quests() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildInfo.quests)
  return &quests_;
}

// optional .Cmd.GuildBuildingData building = 13;
inline bool GuildInfo::has_building() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GuildInfo::set_has_building() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GuildInfo::clear_has_building() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GuildInfo::clear_building() {
  if (building_ != NULL) building_->::Cmd::GuildBuildingData::Clear();
  clear_has_building();
}
inline const ::Cmd::GuildBuildingData& GuildInfo::building() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildInfo.building)
  return building_ != NULL ? *building_ : *default_instance_->building_;
}
inline ::Cmd::GuildBuildingData* GuildInfo::mutable_building() {
  set_has_building();
  if (building_ == NULL) building_ = new ::Cmd::GuildBuildingData;
  // @@protoc_insertion_point(field_mutable:Cmd.GuildInfo.building)
  return building_;
}
inline ::Cmd::GuildBuildingData* GuildInfo::release_building() {
  clear_has_building();
  ::Cmd::GuildBuildingData* temp = building_;
  building_ = NULL;
  return temp;
}
inline void GuildInfo::set_allocated_building(::Cmd::GuildBuildingData* building) {
  delete building_;
  building_ = building;
  if (building) {
    set_has_building();
  } else {
    clear_has_building();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildInfo.building)
}

// optional uint64 openfunction = 14 [default = 0];
inline bool GuildInfo::has_openfunction() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GuildInfo::set_has_openfunction() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GuildInfo::clear_has_openfunction() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GuildInfo::clear_openfunction() {
  openfunction_ = GOOGLE_ULONGLONG(0);
  clear_has_openfunction();
}
inline ::google::protobuf::uint64 GuildInfo::openfunction() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildInfo.openfunction)
  return openfunction_;
}
inline void GuildInfo::set_openfunction(::google::protobuf::uint64 value) {
  set_has_openfunction();
  openfunction_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildInfo.openfunction)
}

// repeated .Cmd.GuildChallenge challenges = 15;
inline int GuildInfo::challenges_size() const {
  return challenges_.size();
}
inline void GuildInfo::clear_challenges() {
  challenges_.Clear();
}
inline const ::Cmd::GuildChallenge& GuildInfo::challenges(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildInfo.challenges)
  return challenges_.Get(index);
}
inline ::Cmd::GuildChallenge* GuildInfo::mutable_challenges(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildInfo.challenges)
  return challenges_.Mutable(index);
}
inline ::Cmd::GuildChallenge* GuildInfo::add_challenges() {
  // @@protoc_insertion_point(field_add:Cmd.GuildInfo.challenges)
  return challenges_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallenge >&
GuildInfo::challenges() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildInfo.challenges)
  return challenges_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallenge >*
GuildInfo::mutable_challenges() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildInfo.challenges)
  return &challenges_;
}

// repeated .Cmd.GuildArtifactItem artifactitems = 16;
inline int GuildInfo::artifactitems_size() const {
  return artifactitems_.size();
}
inline void GuildInfo::clear_artifactitems() {
  artifactitems_.Clear();
}
inline const ::Cmd::GuildArtifactItem& GuildInfo::artifactitems(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildInfo.artifactitems)
  return artifactitems_.Get(index);
}
inline ::Cmd::GuildArtifactItem* GuildInfo::mutable_artifactitems(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildInfo.artifactitems)
  return artifactitems_.Mutable(index);
}
inline ::Cmd::GuildArtifactItem* GuildInfo::add_artifactitems() {
  // @@protoc_insertion_point(field_add:Cmd.GuildInfo.artifactitems)
  return artifactitems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactItem >&
GuildInfo::artifactitems() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildInfo.artifactitems)
  return artifactitems_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactItem >*
GuildInfo::mutable_artifactitems() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildInfo.artifactitems)
  return &artifactitems_;
}

// optional .Cmd.GuildArtifactQuest artifacequest = 17;
inline bool GuildInfo::has_artifacequest() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GuildInfo::set_has_artifacequest() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GuildInfo::clear_has_artifacequest() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GuildInfo::clear_artifacequest() {
  if (artifacequest_ != NULL) artifacequest_->::Cmd::GuildArtifactQuest::Clear();
  clear_has_artifacequest();
}
inline const ::Cmd::GuildArtifactQuest& GuildInfo::artifacequest() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildInfo.artifacequest)
  return artifacequest_ != NULL ? *artifacequest_ : *default_instance_->artifacequest_;
}
inline ::Cmd::GuildArtifactQuest* GuildInfo::mutable_artifacequest() {
  set_has_artifacequest();
  if (artifacequest_ == NULL) artifacequest_ = new ::Cmd::GuildArtifactQuest;
  // @@protoc_insertion_point(field_mutable:Cmd.GuildInfo.artifacequest)
  return artifacequest_;
}
inline ::Cmd::GuildArtifactQuest* GuildInfo::release_artifacequest() {
  clear_has_artifacequest();
  ::Cmd::GuildArtifactQuest* temp = artifacequest_;
  artifacequest_ = NULL;
  return temp;
}
inline void GuildInfo::set_allocated_artifacequest(::Cmd::GuildArtifactQuest* artifacequest) {
  delete artifacequest_;
  artifacequest_ = artifacequest;
  if (artifacequest) {
    set_has_artifacequest();
  } else {
    clear_has_artifacequest();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildInfo.artifacequest)
}

// optional .Cmd.GuildGvgData gvg = 18;
inline bool GuildInfo::has_gvg() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void GuildInfo::set_has_gvg() {
  _has_bits_[0] |= 0x00010000u;
}
inline void GuildInfo::clear_has_gvg() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void GuildInfo::clear_gvg() {
  if (gvg_ != NULL) gvg_->::Cmd::GuildGvgData::Clear();
  clear_has_gvg();
}
inline const ::Cmd::GuildGvgData& GuildInfo::gvg() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildInfo.gvg)
  return gvg_ != NULL ? *gvg_ : *default_instance_->gvg_;
}
inline ::Cmd::GuildGvgData* GuildInfo::mutable_gvg() {
  set_has_gvg();
  if (gvg_ == NULL) gvg_ = new ::Cmd::GuildGvgData;
  // @@protoc_insertion_point(field_mutable:Cmd.GuildInfo.gvg)
  return gvg_;
}
inline ::Cmd::GuildGvgData* GuildInfo::release_gvg() {
  clear_has_gvg();
  ::Cmd::GuildGvgData* temp = gvg_;
  gvg_ = NULL;
  return temp;
}
inline void GuildInfo::set_allocated_gvg(::Cmd::GuildGvgData* gvg) {
  delete gvg_;
  gvg_ = gvg;
  if (gvg) {
    set_has_gvg();
  } else {
    clear_has_gvg();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildInfo.gvg)
}

// -------------------------------------------------------------------

// GuildInfoSyncGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool GuildInfoSyncGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildInfoSyncGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildInfoSyncGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildInfoSyncGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command GuildInfoSyncGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildInfoSyncGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildInfoSyncGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildInfoSyncGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_SYNC_INFO];
inline bool GuildInfoSyncGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildInfoSyncGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildInfoSyncGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildInfoSyncGuildSCmd::clear_param() {
  param_ = 5;
  clear_has_param();
}
inline ::Cmd::GuildSParam GuildInfoSyncGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildInfoSyncGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void GuildInfoSyncGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildInfoSyncGuildSCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool GuildInfoSyncGuildSCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildInfoSyncGuildSCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildInfoSyncGuildSCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildInfoSyncGuildSCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GuildInfoSyncGuildSCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildInfoSyncGuildSCmd.charid)
  return charid_;
}
inline void GuildInfoSyncGuildSCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildInfoSyncGuildSCmd.charid)
}

// optional .Cmd.GuildInfo info = 4;
inline bool GuildInfoSyncGuildSCmd::has_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildInfoSyncGuildSCmd::set_has_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildInfoSyncGuildSCmd::clear_has_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildInfoSyncGuildSCmd::clear_info() {
  if (info_ != NULL) info_->::Cmd::GuildInfo::Clear();
  clear_has_info();
}
inline const ::Cmd::GuildInfo& GuildInfoSyncGuildSCmd::info() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildInfoSyncGuildSCmd.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::Cmd::GuildInfo* GuildInfoSyncGuildSCmd::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::Cmd::GuildInfo;
  // @@protoc_insertion_point(field_mutable:Cmd.GuildInfoSyncGuildSCmd.info)
  return info_;
}
inline ::Cmd::GuildInfo* GuildInfoSyncGuildSCmd::release_info() {
  clear_has_info();
  ::Cmd::GuildInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void GuildInfoSyncGuildSCmd::set_allocated_info(::Cmd::GuildInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildInfoSyncGuildSCmd.info)
}

// -------------------------------------------------------------------

// GuildDataUpdateGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool GuildDataUpdateGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildDataUpdateGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildDataUpdateGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildDataUpdateGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command GuildDataUpdateGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildDataUpdateGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildDataUpdateGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildDataUpdateGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_UPDATE_GUILDDATA];
inline bool GuildDataUpdateGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildDataUpdateGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildDataUpdateGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildDataUpdateGuildSCmd::clear_param() {
  param_ = 6;
  clear_has_param();
}
inline ::Cmd::GuildSParam GuildDataUpdateGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildDataUpdateGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void GuildDataUpdateGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildDataUpdateGuildSCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool GuildDataUpdateGuildSCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildDataUpdateGuildSCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildDataUpdateGuildSCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildDataUpdateGuildSCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GuildDataUpdateGuildSCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildDataUpdateGuildSCmd.charid)
  return charid_;
}
inline void GuildDataUpdateGuildSCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildDataUpdateGuildSCmd.charid)
}

// repeated .Cmd.GuildDataUpdate updates = 4;
inline int GuildDataUpdateGuildSCmd::updates_size() const {
  return updates_.size();
}
inline void GuildDataUpdateGuildSCmd::clear_updates() {
  updates_.Clear();
}
inline const ::Cmd::GuildDataUpdate& GuildDataUpdateGuildSCmd::updates(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildDataUpdateGuildSCmd.updates)
  return updates_.Get(index);
}
inline ::Cmd::GuildDataUpdate* GuildDataUpdateGuildSCmd::mutable_updates(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildDataUpdateGuildSCmd.updates)
  return updates_.Mutable(index);
}
inline ::Cmd::GuildDataUpdate* GuildDataUpdateGuildSCmd::add_updates() {
  // @@protoc_insertion_point(field_add:Cmd.GuildDataUpdateGuildSCmd.updates)
  return updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildDataUpdate >&
GuildDataUpdateGuildSCmd::updates() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildDataUpdateGuildSCmd.updates)
  return updates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildDataUpdate >*
GuildDataUpdateGuildSCmd::mutable_updates() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildDataUpdateGuildSCmd.updates)
  return &updates_;
}

// -------------------------------------------------------------------

// CityDataUpdateGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool CityDataUpdateGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CityDataUpdateGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CityDataUpdateGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CityDataUpdateGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command CityDataUpdateGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.CityDataUpdateGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void CityDataUpdateGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CityDataUpdateGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_UPDATE_CITYDATA];
inline bool CityDataUpdateGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CityDataUpdateGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CityDataUpdateGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CityDataUpdateGuildSCmd::clear_param() {
  param_ = 7;
  clear_has_param();
}
inline ::Cmd::GuildSParam CityDataUpdateGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.CityDataUpdateGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void CityDataUpdateGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CityDataUpdateGuildSCmd.param)
}

// optional uint64 cityid = 3 [default = 0];
inline bool CityDataUpdateGuildSCmd::has_cityid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CityDataUpdateGuildSCmd::set_has_cityid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CityDataUpdateGuildSCmd::clear_has_cityid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CityDataUpdateGuildSCmd::clear_cityid() {
  cityid_ = GOOGLE_ULONGLONG(0);
  clear_has_cityid();
}
inline ::google::protobuf::uint64 CityDataUpdateGuildSCmd::cityid() const {
  // @@protoc_insertion_point(field_get:Cmd.CityDataUpdateGuildSCmd.cityid)
  return cityid_;
}
inline void CityDataUpdateGuildSCmd::set_cityid(::google::protobuf::uint64 value) {
  set_has_cityid();
  cityid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CityDataUpdateGuildSCmd.cityid)
}

// optional uint32 membercount = 4 [default = 0];
inline bool CityDataUpdateGuildSCmd::has_membercount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CityDataUpdateGuildSCmd::set_has_membercount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CityDataUpdateGuildSCmd::clear_has_membercount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CityDataUpdateGuildSCmd::clear_membercount() {
  membercount_ = 0u;
  clear_has_membercount();
}
inline ::google::protobuf::uint32 CityDataUpdateGuildSCmd::membercount() const {
  // @@protoc_insertion_point(field_get:Cmd.CityDataUpdateGuildSCmd.membercount)
  return membercount_;
}
inline void CityDataUpdateGuildSCmd::set_membercount(::google::protobuf::uint32 value) {
  set_has_membercount();
  membercount_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CityDataUpdateGuildSCmd.membercount)
}

// repeated .Cmd.GuildDataUpdate updates = 5;
inline int CityDataUpdateGuildSCmd::updates_size() const {
  return updates_.size();
}
inline void CityDataUpdateGuildSCmd::clear_updates() {
  updates_.Clear();
}
inline const ::Cmd::GuildDataUpdate& CityDataUpdateGuildSCmd::updates(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.CityDataUpdateGuildSCmd.updates)
  return updates_.Get(index);
}
inline ::Cmd::GuildDataUpdate* CityDataUpdateGuildSCmd::mutable_updates(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.CityDataUpdateGuildSCmd.updates)
  return updates_.Mutable(index);
}
inline ::Cmd::GuildDataUpdate* CityDataUpdateGuildSCmd::add_updates() {
  // @@protoc_insertion_point(field_add:Cmd.CityDataUpdateGuildSCmd.updates)
  return updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildDataUpdate >&
CityDataUpdateGuildSCmd::updates() const {
  // @@protoc_insertion_point(field_list:Cmd.CityDataUpdateGuildSCmd.updates)
  return updates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildDataUpdate >*
CityDataUpdateGuildSCmd::mutable_updates() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.CityDataUpdateGuildSCmd.updates)
  return &updates_;
}

// optional string leadername = 6;
inline bool CityDataUpdateGuildSCmd::has_leadername() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CityDataUpdateGuildSCmd::set_has_leadername() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CityDataUpdateGuildSCmd::clear_has_leadername() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CityDataUpdateGuildSCmd::clear_leadername() {
  if (leadername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leadername_->clear();
  }
  clear_has_leadername();
}
inline const ::std::string& CityDataUpdateGuildSCmd::leadername() const {
  // @@protoc_insertion_point(field_get:Cmd.CityDataUpdateGuildSCmd.leadername)
  return *leadername_;
}
inline void CityDataUpdateGuildSCmd::set_leadername(const ::std::string& value) {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leadername_ = new ::std::string;
  }
  leadername_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.CityDataUpdateGuildSCmd.leadername)
}
inline void CityDataUpdateGuildSCmd::set_leadername(const char* value) {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leadername_ = new ::std::string;
  }
  leadername_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.CityDataUpdateGuildSCmd.leadername)
}
inline void CityDataUpdateGuildSCmd::set_leadername(const char* value, size_t size) {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leadername_ = new ::std::string;
  }
  leadername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.CityDataUpdateGuildSCmd.leadername)
}
inline ::std::string* CityDataUpdateGuildSCmd::mutable_leadername() {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leadername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.CityDataUpdateGuildSCmd.leadername)
  return leadername_;
}
inline ::std::string* CityDataUpdateGuildSCmd::release_leadername() {
  clear_has_leadername();
  if (leadername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = leadername_;
    leadername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CityDataUpdateGuildSCmd::set_allocated_leadername(::std::string* leadername) {
  if (leadername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete leadername_;
  }
  if (leadername) {
    set_has_leadername();
    leadername_ = leadername;
  } else {
    clear_has_leadername();
    leadername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.CityDataUpdateGuildSCmd.leadername)
}

// -------------------------------------------------------------------

// GuildMemberUpdateGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool GuildMemberUpdateGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMemberUpdateGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMemberUpdateGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMemberUpdateGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command GuildMemberUpdateGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMemberUpdateGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildMemberUpdateGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMemberUpdateGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_UPDATE_MEMBER];
inline bool GuildMemberUpdateGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMemberUpdateGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMemberUpdateGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMemberUpdateGuildSCmd::clear_param() {
  param_ = 8;
  clear_has_param();
}
inline ::Cmd::GuildSParam GuildMemberUpdateGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMemberUpdateGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void GuildMemberUpdateGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMemberUpdateGuildSCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool GuildMemberUpdateGuildSCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildMemberUpdateGuildSCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildMemberUpdateGuildSCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildMemberUpdateGuildSCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GuildMemberUpdateGuildSCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMemberUpdateGuildSCmd.charid)
  return charid_;
}
inline void GuildMemberUpdateGuildSCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMemberUpdateGuildSCmd.charid)
}

// repeated .Cmd.GuildSMember updates = 4;
inline int GuildMemberUpdateGuildSCmd::updates_size() const {
  return updates_.size();
}
inline void GuildMemberUpdateGuildSCmd::clear_updates() {
  updates_.Clear();
}
inline const ::Cmd::GuildSMember& GuildMemberUpdateGuildSCmd::updates(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMemberUpdateGuildSCmd.updates)
  return updates_.Get(index);
}
inline ::Cmd::GuildSMember* GuildMemberUpdateGuildSCmd::mutable_updates(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildMemberUpdateGuildSCmd.updates)
  return updates_.Mutable(index);
}
inline ::Cmd::GuildSMember* GuildMemberUpdateGuildSCmd::add_updates() {
  // @@protoc_insertion_point(field_add:Cmd.GuildMemberUpdateGuildSCmd.updates)
  return updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildSMember >&
GuildMemberUpdateGuildSCmd::updates() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildMemberUpdateGuildSCmd.updates)
  return updates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildSMember >*
GuildMemberUpdateGuildSCmd::mutable_updates() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildMemberUpdateGuildSCmd.updates)
  return &updates_;
}

// repeated uint64 dels = 5;
inline int GuildMemberUpdateGuildSCmd::dels_size() const {
  return dels_.size();
}
inline void GuildMemberUpdateGuildSCmd::clear_dels() {
  dels_.Clear();
}
inline ::google::protobuf::uint64 GuildMemberUpdateGuildSCmd::dels(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMemberUpdateGuildSCmd.dels)
  return dels_.Get(index);
}
inline void GuildMemberUpdateGuildSCmd::set_dels(int index, ::google::protobuf::uint64 value) {
  dels_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.GuildMemberUpdateGuildSCmd.dels)
}
inline void GuildMemberUpdateGuildSCmd::add_dels(::google::protobuf::uint64 value) {
  dels_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.GuildMemberUpdateGuildSCmd.dels)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GuildMemberUpdateGuildSCmd::dels() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildMemberUpdateGuildSCmd.dels)
  return dels_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GuildMemberUpdateGuildSCmd::mutable_dels() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildMemberUpdateGuildSCmd.dels)
  return &dels_;
}

// -------------------------------------------------------------------

// GuildMemberDataUpdateGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool GuildMemberDataUpdateGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMemberDataUpdateGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMemberDataUpdateGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMemberDataUpdateGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command GuildMemberDataUpdateGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMemberDataUpdateGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildMemberDataUpdateGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMemberDataUpdateGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_UPDATE_MEMBERDATA];
inline bool GuildMemberDataUpdateGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMemberDataUpdateGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMemberDataUpdateGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMemberDataUpdateGuildSCmd::clear_param() {
  param_ = 9;
  clear_has_param();
}
inline ::Cmd::GuildSParam GuildMemberDataUpdateGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMemberDataUpdateGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void GuildMemberDataUpdateGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMemberDataUpdateGuildSCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool GuildMemberDataUpdateGuildSCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildMemberDataUpdateGuildSCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildMemberDataUpdateGuildSCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildMemberDataUpdateGuildSCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GuildMemberDataUpdateGuildSCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMemberDataUpdateGuildSCmd.charid)
  return charid_;
}
inline void GuildMemberDataUpdateGuildSCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMemberDataUpdateGuildSCmd.charid)
}

// optional uint64 destid = 4 [default = 0];
inline bool GuildMemberDataUpdateGuildSCmd::has_destid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildMemberDataUpdateGuildSCmd::set_has_destid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildMemberDataUpdateGuildSCmd::clear_has_destid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildMemberDataUpdateGuildSCmd::clear_destid() {
  destid_ = GOOGLE_ULONGLONG(0);
  clear_has_destid();
}
inline ::google::protobuf::uint64 GuildMemberDataUpdateGuildSCmd::destid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMemberDataUpdateGuildSCmd.destid)
  return destid_;
}
inline void GuildMemberDataUpdateGuildSCmd::set_destid(::google::protobuf::uint64 value) {
  set_has_destid();
  destid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMemberDataUpdateGuildSCmd.destid)
}

// repeated .Cmd.GuildMemberDataUpdate updates = 5;
inline int GuildMemberDataUpdateGuildSCmd::updates_size() const {
  return updates_.size();
}
inline void GuildMemberDataUpdateGuildSCmd::clear_updates() {
  updates_.Clear();
}
inline const ::Cmd::GuildMemberDataUpdate& GuildMemberDataUpdateGuildSCmd::updates(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMemberDataUpdateGuildSCmd.updates)
  return updates_.Get(index);
}
inline ::Cmd::GuildMemberDataUpdate* GuildMemberDataUpdateGuildSCmd::mutable_updates(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildMemberDataUpdateGuildSCmd.updates)
  return updates_.Mutable(index);
}
inline ::Cmd::GuildMemberDataUpdate* GuildMemberDataUpdateGuildSCmd::add_updates() {
  // @@protoc_insertion_point(field_add:Cmd.GuildMemberDataUpdateGuildSCmd.updates)
  return updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMemberDataUpdate >&
GuildMemberDataUpdateGuildSCmd::updates() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildMemberDataUpdateGuildSCmd.updates)
  return updates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildMemberDataUpdate >*
GuildMemberDataUpdateGuildSCmd::mutable_updates() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildMemberDataUpdateGuildSCmd.updates)
  return &updates_;
}

// -------------------------------------------------------------------

// GuildQuestUpdateGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool GuildQuestUpdateGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildQuestUpdateGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildQuestUpdateGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildQuestUpdateGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command GuildQuestUpdateGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildQuestUpdateGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildQuestUpdateGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildQuestUpdateGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_UPDATE_QUEST];
inline bool GuildQuestUpdateGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildQuestUpdateGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildQuestUpdateGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildQuestUpdateGuildSCmd::clear_param() {
  param_ = 10;
  clear_has_param();
}
inline ::Cmd::GuildSParam GuildQuestUpdateGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildQuestUpdateGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void GuildQuestUpdateGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildQuestUpdateGuildSCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool GuildQuestUpdateGuildSCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildQuestUpdateGuildSCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildQuestUpdateGuildSCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildQuestUpdateGuildSCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GuildQuestUpdateGuildSCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildQuestUpdateGuildSCmd.charid)
  return charid_;
}
inline void GuildQuestUpdateGuildSCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildQuestUpdateGuildSCmd.charid)
}

// repeated .Cmd.GuildQuest updates = 4;
inline int GuildQuestUpdateGuildSCmd::updates_size() const {
  return updates_.size();
}
inline void GuildQuestUpdateGuildSCmd::clear_updates() {
  updates_.Clear();
}
inline const ::Cmd::GuildQuest& GuildQuestUpdateGuildSCmd::updates(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildQuestUpdateGuildSCmd.updates)
  return updates_.Get(index);
}
inline ::Cmd::GuildQuest* GuildQuestUpdateGuildSCmd::mutable_updates(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildQuestUpdateGuildSCmd.updates)
  return updates_.Mutable(index);
}
inline ::Cmd::GuildQuest* GuildQuestUpdateGuildSCmd::add_updates() {
  // @@protoc_insertion_point(field_add:Cmd.GuildQuestUpdateGuildSCmd.updates)
  return updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildQuest >&
GuildQuestUpdateGuildSCmd::updates() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildQuestUpdateGuildSCmd.updates)
  return updates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildQuest >*
GuildQuestUpdateGuildSCmd::mutable_updates() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildQuestUpdateGuildSCmd.updates)
  return &updates_;
}

// repeated uint32 dels = 5;
inline int GuildQuestUpdateGuildSCmd::dels_size() const {
  return dels_.size();
}
inline void GuildQuestUpdateGuildSCmd::clear_dels() {
  dels_.Clear();
}
inline ::google::protobuf::uint32 GuildQuestUpdateGuildSCmd::dels(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildQuestUpdateGuildSCmd.dels)
  return dels_.Get(index);
}
inline void GuildQuestUpdateGuildSCmd::set_dels(int index, ::google::protobuf::uint32 value) {
  dels_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.GuildQuestUpdateGuildSCmd.dels)
}
inline void GuildQuestUpdateGuildSCmd::add_dels(::google::protobuf::uint32 value) {
  dels_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.GuildQuestUpdateGuildSCmd.dels)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GuildQuestUpdateGuildSCmd::dels() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildQuestUpdateGuildSCmd.dels)
  return dels_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GuildQuestUpdateGuildSCmd::mutable_dels() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildQuestUpdateGuildSCmd.dels)
  return &dels_;
}

// -------------------------------------------------------------------

// EnterGuildTerritoryGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool EnterGuildTerritoryGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterGuildTerritoryGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterGuildTerritoryGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterGuildTerritoryGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command EnterGuildTerritoryGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterGuildTerritoryGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void EnterGuildTerritoryGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterGuildTerritoryGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_ENTER_TERRITORY];
inline bool EnterGuildTerritoryGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterGuildTerritoryGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterGuildTerritoryGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterGuildTerritoryGuildSCmd::clear_param() {
  param_ = 11;
  clear_has_param();
}
inline ::Cmd::GuildSParam EnterGuildTerritoryGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterGuildTerritoryGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void EnterGuildTerritoryGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterGuildTerritoryGuildSCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool EnterGuildTerritoryGuildSCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnterGuildTerritoryGuildSCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnterGuildTerritoryGuildSCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnterGuildTerritoryGuildSCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 EnterGuildTerritoryGuildSCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterGuildTerritoryGuildSCmd.charid)
  return charid_;
}
inline void EnterGuildTerritoryGuildSCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterGuildTerritoryGuildSCmd.charid)
}

// optional .Cmd.GuildInfo info = 4;
inline bool EnterGuildTerritoryGuildSCmd::has_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EnterGuildTerritoryGuildSCmd::set_has_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EnterGuildTerritoryGuildSCmd::clear_has_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EnterGuildTerritoryGuildSCmd::clear_info() {
  if (info_ != NULL) info_->::Cmd::GuildInfo::Clear();
  clear_has_info();
}
inline const ::Cmd::GuildInfo& EnterGuildTerritoryGuildSCmd::info() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterGuildTerritoryGuildSCmd.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::Cmd::GuildInfo* EnterGuildTerritoryGuildSCmd::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::Cmd::GuildInfo;
  // @@protoc_insertion_point(field_mutable:Cmd.EnterGuildTerritoryGuildSCmd.info)
  return info_;
}
inline ::Cmd::GuildInfo* EnterGuildTerritoryGuildSCmd::release_info() {
  clear_has_info();
  ::Cmd::GuildInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void EnterGuildTerritoryGuildSCmd::set_allocated_info(::Cmd::GuildInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.EnterGuildTerritoryGuildSCmd.info)
}

// -------------------------------------------------------------------

// RefreshGuildTerritoryGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool RefreshGuildTerritoryGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RefreshGuildTerritoryGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RefreshGuildTerritoryGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RefreshGuildTerritoryGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command RefreshGuildTerritoryGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.RefreshGuildTerritoryGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void RefreshGuildTerritoryGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RefreshGuildTerritoryGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_REFRESH_TERRITORY];
inline bool RefreshGuildTerritoryGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RefreshGuildTerritoryGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RefreshGuildTerritoryGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RefreshGuildTerritoryGuildSCmd::clear_param() {
  param_ = 12;
  clear_has_param();
}
inline ::Cmd::GuildSParam RefreshGuildTerritoryGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.RefreshGuildTerritoryGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void RefreshGuildTerritoryGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RefreshGuildTerritoryGuildSCmd.param)
}

// optional uint64 sceneid = 3 [default = 0];
inline bool RefreshGuildTerritoryGuildSCmd::has_sceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RefreshGuildTerritoryGuildSCmd::set_has_sceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RefreshGuildTerritoryGuildSCmd::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RefreshGuildTerritoryGuildSCmd::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 RefreshGuildTerritoryGuildSCmd::sceneid() const {
  // @@protoc_insertion_point(field_get:Cmd.RefreshGuildTerritoryGuildSCmd.sceneid)
  return sceneid_;
}
inline void RefreshGuildTerritoryGuildSCmd::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RefreshGuildTerritoryGuildSCmd.sceneid)
}

// optional .Cmd.GuildInfo info = 4;
inline bool RefreshGuildTerritoryGuildSCmd::has_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RefreshGuildTerritoryGuildSCmd::set_has_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RefreshGuildTerritoryGuildSCmd::clear_has_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RefreshGuildTerritoryGuildSCmd::clear_info() {
  if (info_ != NULL) info_->::Cmd::GuildInfo::Clear();
  clear_has_info();
}
inline const ::Cmd::GuildInfo& RefreshGuildTerritoryGuildSCmd::info() const {
  // @@protoc_insertion_point(field_get:Cmd.RefreshGuildTerritoryGuildSCmd.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::Cmd::GuildInfo* RefreshGuildTerritoryGuildSCmd::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::Cmd::GuildInfo;
  // @@protoc_insertion_point(field_mutable:Cmd.RefreshGuildTerritoryGuildSCmd.info)
  return info_;
}
inline ::Cmd::GuildInfo* RefreshGuildTerritoryGuildSCmd::release_info() {
  clear_has_info();
  ::Cmd::GuildInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void RefreshGuildTerritoryGuildSCmd::set_allocated_info(::Cmd::GuildInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.RefreshGuildTerritoryGuildSCmd.info)
}

// -------------------------------------------------------------------

// QueryPhotoListGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool QueryPhotoListGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryPhotoListGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryPhotoListGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryPhotoListGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command QueryPhotoListGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryPhotoListGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryPhotoListGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryPhotoListGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_QUERY_PHOTOLIST];
inline bool QueryPhotoListGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryPhotoListGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryPhotoListGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryPhotoListGuildSCmd::clear_param() {
  param_ = 14;
  clear_has_param();
}
inline ::Cmd::GuildSParam QueryPhotoListGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryPhotoListGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void QueryPhotoListGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryPhotoListGuildSCmd.param)
}

// optional uint64 guildid = 3 [default = 0];
inline bool QueryPhotoListGuildSCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryPhotoListGuildSCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryPhotoListGuildSCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryPhotoListGuildSCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 QueryPhotoListGuildSCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryPhotoListGuildSCmd.guildid)
  return guildid_;
}
inline void QueryPhotoListGuildSCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryPhotoListGuildSCmd.guildid)
}

// optional uint32 sceneid = 4 [default = 0];
inline bool QueryPhotoListGuildSCmd::has_sceneid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryPhotoListGuildSCmd::set_has_sceneid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryPhotoListGuildSCmd::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryPhotoListGuildSCmd::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 QueryPhotoListGuildSCmd::sceneid() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryPhotoListGuildSCmd.sceneid)
  return sceneid_;
}
inline void QueryPhotoListGuildSCmd::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryPhotoListGuildSCmd.sceneid)
}

// optional bool result = 5 [default = false];
inline bool QueryPhotoListGuildSCmd::has_result() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QueryPhotoListGuildSCmd::set_has_result() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QueryPhotoListGuildSCmd::clear_has_result() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QueryPhotoListGuildSCmd::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool QueryPhotoListGuildSCmd::result() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryPhotoListGuildSCmd.result)
  return result_;
}
inline void QueryPhotoListGuildSCmd::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryPhotoListGuildSCmd.result)
}

// repeated .Cmd.PhotoFrame frames = 6;
inline int QueryPhotoListGuildSCmd::frames_size() const {
  return frames_.size();
}
inline void QueryPhotoListGuildSCmd::clear_frames() {
  frames_.Clear();
}
inline const ::Cmd::PhotoFrame& QueryPhotoListGuildSCmd::frames(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QueryPhotoListGuildSCmd.frames)
  return frames_.Get(index);
}
inline ::Cmd::PhotoFrame* QueryPhotoListGuildSCmd::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.QueryPhotoListGuildSCmd.frames)
  return frames_.Mutable(index);
}
inline ::Cmd::PhotoFrame* QueryPhotoListGuildSCmd::add_frames() {
  // @@protoc_insertion_point(field_add:Cmd.QueryPhotoListGuildSCmd.frames)
  return frames_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::PhotoFrame >&
QueryPhotoListGuildSCmd::frames() const {
  // @@protoc_insertion_point(field_list:Cmd.QueryPhotoListGuildSCmd.frames)
  return frames_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::PhotoFrame >*
QueryPhotoListGuildSCmd::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QueryPhotoListGuildSCmd.frames)
  return &frames_;
}

// -------------------------------------------------------------------

// QueryUserPhotoListGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool QueryUserPhotoListGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryUserPhotoListGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryUserPhotoListGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryUserPhotoListGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command QueryUserPhotoListGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryUserPhotoListGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryUserPhotoListGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryUserPhotoListGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_QUERY_USERPHOTOLIST];
inline bool QueryUserPhotoListGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryUserPhotoListGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryUserPhotoListGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryUserPhotoListGuildSCmd::clear_param() {
  param_ = 15;
  clear_has_param();
}
inline ::Cmd::GuildSParam QueryUserPhotoListGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryUserPhotoListGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void QueryUserPhotoListGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryUserPhotoListGuildSCmd.param)
}

// optional uint64 guildid = 3 [default = 0];
inline bool QueryUserPhotoListGuildSCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryUserPhotoListGuildSCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryUserPhotoListGuildSCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryUserPhotoListGuildSCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 QueryUserPhotoListGuildSCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryUserPhotoListGuildSCmd.guildid)
  return guildid_;
}
inline void QueryUserPhotoListGuildSCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryUserPhotoListGuildSCmd.guildid)
}

// optional bool result = 4 [default = false];
inline bool QueryUserPhotoListGuildSCmd::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryUserPhotoListGuildSCmd::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryUserPhotoListGuildSCmd::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryUserPhotoListGuildSCmd::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool QueryUserPhotoListGuildSCmd::result() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryUserPhotoListGuildSCmd.result)
  return result_;
}
inline void QueryUserPhotoListGuildSCmd::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryUserPhotoListGuildSCmd.result)
}

// optional .Cmd.SocialUser user = 5;
inline bool QueryUserPhotoListGuildSCmd::has_user() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QueryUserPhotoListGuildSCmd::set_has_user() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QueryUserPhotoListGuildSCmd::clear_has_user() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QueryUserPhotoListGuildSCmd::clear_user() {
  if (user_ != NULL) user_->::Cmd::SocialUser::Clear();
  clear_has_user();
}
inline const ::Cmd::SocialUser& QueryUserPhotoListGuildSCmd::user() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryUserPhotoListGuildSCmd.user)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
inline ::Cmd::SocialUser* QueryUserPhotoListGuildSCmd::mutable_user() {
  set_has_user();
  if (user_ == NULL) user_ = new ::Cmd::SocialUser;
  // @@protoc_insertion_point(field_mutable:Cmd.QueryUserPhotoListGuildSCmd.user)
  return user_;
}
inline ::Cmd::SocialUser* QueryUserPhotoListGuildSCmd::release_user() {
  clear_has_user();
  ::Cmd::SocialUser* temp = user_;
  user_ = NULL;
  return temp;
}
inline void QueryUserPhotoListGuildSCmd::set_allocated_user(::Cmd::SocialUser* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.QueryUserPhotoListGuildSCmd.user)
}

// repeated .Cmd.PhotoFrame frames = 6;
inline int QueryUserPhotoListGuildSCmd::frames_size() const {
  return frames_.size();
}
inline void QueryUserPhotoListGuildSCmd::clear_frames() {
  frames_.Clear();
}
inline const ::Cmd::PhotoFrame& QueryUserPhotoListGuildSCmd::frames(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QueryUserPhotoListGuildSCmd.frames)
  return frames_.Get(index);
}
inline ::Cmd::PhotoFrame* QueryUserPhotoListGuildSCmd::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.QueryUserPhotoListGuildSCmd.frames)
  return frames_.Mutable(index);
}
inline ::Cmd::PhotoFrame* QueryUserPhotoListGuildSCmd::add_frames() {
  // @@protoc_insertion_point(field_add:Cmd.QueryUserPhotoListGuildSCmd.frames)
  return frames_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::PhotoFrame >&
QueryUserPhotoListGuildSCmd::frames() const {
  // @@protoc_insertion_point(field_list:Cmd.QueryUserPhotoListGuildSCmd.frames)
  return frames_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::PhotoFrame >*
QueryUserPhotoListGuildSCmd::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QueryUserPhotoListGuildSCmd.frames)
  return &frames_;
}

// -------------------------------------------------------------------

// PhotoLoad

// optional uint32 frameid = 1 [default = 0];
inline bool PhotoLoad::has_frameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PhotoLoad::set_has_frameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PhotoLoad::clear_has_frameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PhotoLoad::clear_frameid() {
  frameid_ = 0u;
  clear_has_frameid();
}
inline ::google::protobuf::uint32 PhotoLoad::frameid() const {
  // @@protoc_insertion_point(field_get:Cmd.PhotoLoad.frameid)
  return frameid_;
}
inline void PhotoLoad::set_frameid(::google::protobuf::uint32 value) {
  set_has_frameid();
  frameid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PhotoLoad.frameid)
}

// optional uint32 count = 2 [default = 0];
inline bool PhotoLoad::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PhotoLoad::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PhotoLoad::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PhotoLoad::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 PhotoLoad::count() const {
  // @@protoc_insertion_point(field_get:Cmd.PhotoLoad.count)
  return count_;
}
inline void PhotoLoad::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PhotoLoad.count)
}

// -------------------------------------------------------------------

// QueryShowPhotoGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool QueryShowPhotoGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryShowPhotoGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryShowPhotoGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryShowPhotoGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command QueryShowPhotoGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryShowPhotoGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryShowPhotoGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryShowPhotoGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_QUERY_SHOWPHOTOLIST];
inline bool QueryShowPhotoGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryShowPhotoGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryShowPhotoGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryShowPhotoGuildSCmd::clear_param() {
  param_ = 16;
  clear_has_param();
}
inline ::Cmd::GuildSParam QueryShowPhotoGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryShowPhotoGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void QueryShowPhotoGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryShowPhotoGuildSCmd.param)
}

// optional .Cmd.EPhotoAction action = 3 [default = EPHOTOACTION_MIN];
inline bool QueryShowPhotoGuildSCmd::has_action() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryShowPhotoGuildSCmd::set_has_action() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryShowPhotoGuildSCmd::clear_has_action() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryShowPhotoGuildSCmd::clear_action() {
  action_ = 0;
  clear_has_action();
}
inline ::Cmd::EPhotoAction QueryShowPhotoGuildSCmd::action() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryShowPhotoGuildSCmd.action)
  return static_cast< ::Cmd::EPhotoAction >(action_);
}
inline void QueryShowPhotoGuildSCmd::set_action(::Cmd::EPhotoAction value) {
  assert(::Cmd::EPhotoAction_IsValid(value));
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryShowPhotoGuildSCmd.action)
}

// optional uint64 guildid = 4 [default = 0];
inline bool QueryShowPhotoGuildSCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryShowPhotoGuildSCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryShowPhotoGuildSCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryShowPhotoGuildSCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 QueryShowPhotoGuildSCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryShowPhotoGuildSCmd.guildid)
  return guildid_;
}
inline void QueryShowPhotoGuildSCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryShowPhotoGuildSCmd.guildid)
}

// repeated .Cmd.PhotoLoad loads = 5;
inline int QueryShowPhotoGuildSCmd::loads_size() const {
  return loads_.size();
}
inline void QueryShowPhotoGuildSCmd::clear_loads() {
  loads_.Clear();
}
inline const ::Cmd::PhotoLoad& QueryShowPhotoGuildSCmd::loads(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QueryShowPhotoGuildSCmd.loads)
  return loads_.Get(index);
}
inline ::Cmd::PhotoLoad* QueryShowPhotoGuildSCmd::mutable_loads(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.QueryShowPhotoGuildSCmd.loads)
  return loads_.Mutable(index);
}
inline ::Cmd::PhotoLoad* QueryShowPhotoGuildSCmd::add_loads() {
  // @@protoc_insertion_point(field_add:Cmd.QueryShowPhotoGuildSCmd.loads)
  return loads_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::PhotoLoad >&
QueryShowPhotoGuildSCmd::loads() const {
  // @@protoc_insertion_point(field_list:Cmd.QueryShowPhotoGuildSCmd.loads)
  return loads_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::PhotoLoad >*
QueryShowPhotoGuildSCmd::mutable_loads() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QueryShowPhotoGuildSCmd.loads)
  return &loads_;
}

// repeated string exists = 6;
inline int QueryShowPhotoGuildSCmd::exists_size() const {
  return exists_.size();
}
inline void QueryShowPhotoGuildSCmd::clear_exists() {
  exists_.Clear();
}
inline const ::std::string& QueryShowPhotoGuildSCmd::exists(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QueryShowPhotoGuildSCmd.exists)
  return exists_.Get(index);
}
inline ::std::string* QueryShowPhotoGuildSCmd::mutable_exists(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.QueryShowPhotoGuildSCmd.exists)
  return exists_.Mutable(index);
}
inline void QueryShowPhotoGuildSCmd::set_exists(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Cmd.QueryShowPhotoGuildSCmd.exists)
  exists_.Mutable(index)->assign(value);
}
inline void QueryShowPhotoGuildSCmd::set_exists(int index, const char* value) {
  exists_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.QueryShowPhotoGuildSCmd.exists)
}
inline void QueryShowPhotoGuildSCmd::set_exists(int index, const char* value, size_t size) {
  exists_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.QueryShowPhotoGuildSCmd.exists)
}
inline ::std::string* QueryShowPhotoGuildSCmd::add_exists() {
  return exists_.Add();
}
inline void QueryShowPhotoGuildSCmd::add_exists(const ::std::string& value) {
  exists_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Cmd.QueryShowPhotoGuildSCmd.exists)
}
inline void QueryShowPhotoGuildSCmd::add_exists(const char* value) {
  exists_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Cmd.QueryShowPhotoGuildSCmd.exists)
}
inline void QueryShowPhotoGuildSCmd::add_exists(const char* value, size_t size) {
  exists_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Cmd.QueryShowPhotoGuildSCmd.exists)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
QueryShowPhotoGuildSCmd::exists() const {
  // @@protoc_insertion_point(field_list:Cmd.QueryShowPhotoGuildSCmd.exists)
  return exists_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
QueryShowPhotoGuildSCmd::mutable_exists() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QueryShowPhotoGuildSCmd.exists)
  return &exists_;
}

// repeated uint64 members = 7;
inline int QueryShowPhotoGuildSCmd::members_size() const {
  return members_.size();
}
inline void QueryShowPhotoGuildSCmd::clear_members() {
  members_.Clear();
}
inline ::google::protobuf::uint64 QueryShowPhotoGuildSCmd::members(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QueryShowPhotoGuildSCmd.members)
  return members_.Get(index);
}
inline void QueryShowPhotoGuildSCmd::set_members(int index, ::google::protobuf::uint64 value) {
  members_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.QueryShowPhotoGuildSCmd.members)
}
inline void QueryShowPhotoGuildSCmd::add_members(::google::protobuf::uint64 value) {
  members_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.QueryShowPhotoGuildSCmd.members)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
QueryShowPhotoGuildSCmd::members() const {
  // @@protoc_insertion_point(field_list:Cmd.QueryShowPhotoGuildSCmd.members)
  return members_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
QueryShowPhotoGuildSCmd::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QueryShowPhotoGuildSCmd.members)
  return &members_;
}

// repeated .Cmd.PhotoFrame results = 8;
inline int QueryShowPhotoGuildSCmd::results_size() const {
  return results_.size();
}
inline void QueryShowPhotoGuildSCmd::clear_results() {
  results_.Clear();
}
inline const ::Cmd::PhotoFrame& QueryShowPhotoGuildSCmd::results(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QueryShowPhotoGuildSCmd.results)
  return results_.Get(index);
}
inline ::Cmd::PhotoFrame* QueryShowPhotoGuildSCmd::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.QueryShowPhotoGuildSCmd.results)
  return results_.Mutable(index);
}
inline ::Cmd::PhotoFrame* QueryShowPhotoGuildSCmd::add_results() {
  // @@protoc_insertion_point(field_add:Cmd.QueryShowPhotoGuildSCmd.results)
  return results_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::PhotoFrame >&
QueryShowPhotoGuildSCmd::results() const {
  // @@protoc_insertion_point(field_list:Cmd.QueryShowPhotoGuildSCmd.results)
  return results_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::PhotoFrame >*
QueryShowPhotoGuildSCmd::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QueryShowPhotoGuildSCmd.results)
  return &results_;
}

// -------------------------------------------------------------------

// FrameUpdateGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool FrameUpdateGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameUpdateGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameUpdateGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameUpdateGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command FrameUpdateGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.FrameUpdateGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void FrameUpdateGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FrameUpdateGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_FRAME_UPDATE];
inline bool FrameUpdateGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FrameUpdateGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FrameUpdateGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FrameUpdateGuildSCmd::clear_param() {
  param_ = 17;
  clear_has_param();
}
inline ::Cmd::GuildSParam FrameUpdateGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.FrameUpdateGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void FrameUpdateGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FrameUpdateGuildSCmd.param)
}

// optional uint64 guildid = 3 [default = 0];
inline bool FrameUpdateGuildSCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FrameUpdateGuildSCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FrameUpdateGuildSCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FrameUpdateGuildSCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 FrameUpdateGuildSCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.FrameUpdateGuildSCmd.guildid)
  return guildid_;
}
inline void FrameUpdateGuildSCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FrameUpdateGuildSCmd.guildid)
}

// optional uint32 frameid = 4 [default = 0];
inline bool FrameUpdateGuildSCmd::has_frameid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FrameUpdateGuildSCmd::set_has_frameid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FrameUpdateGuildSCmd::clear_has_frameid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FrameUpdateGuildSCmd::clear_frameid() {
  frameid_ = 0u;
  clear_has_frameid();
}
inline ::google::protobuf::uint32 FrameUpdateGuildSCmd::frameid() const {
  // @@protoc_insertion_point(field_get:Cmd.FrameUpdateGuildSCmd.frameid)
  return frameid_;
}
inline void FrameUpdateGuildSCmd::set_frameid(::google::protobuf::uint32 value) {
  set_has_frameid();
  frameid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FrameUpdateGuildSCmd.frameid)
}

// optional .Cmd.GuildPhoto update = 5;
inline bool FrameUpdateGuildSCmd::has_update() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FrameUpdateGuildSCmd::set_has_update() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FrameUpdateGuildSCmd::clear_has_update() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FrameUpdateGuildSCmd::clear_update() {
  if (update_ != NULL) update_->::Cmd::GuildPhoto::Clear();
  clear_has_update();
}
inline const ::Cmd::GuildPhoto& FrameUpdateGuildSCmd::update() const {
  // @@protoc_insertion_point(field_get:Cmd.FrameUpdateGuildSCmd.update)
  return update_ != NULL ? *update_ : *default_instance_->update_;
}
inline ::Cmd::GuildPhoto* FrameUpdateGuildSCmd::mutable_update() {
  set_has_update();
  if (update_ == NULL) update_ = new ::Cmd::GuildPhoto;
  // @@protoc_insertion_point(field_mutable:Cmd.FrameUpdateGuildSCmd.update)
  return update_;
}
inline ::Cmd::GuildPhoto* FrameUpdateGuildSCmd::release_update() {
  clear_has_update();
  ::Cmd::GuildPhoto* temp = update_;
  update_ = NULL;
  return temp;
}
inline void FrameUpdateGuildSCmd::set_allocated_update(::Cmd::GuildPhoto* update) {
  delete update_;
  update_ = update;
  if (update) {
    set_has_update();
  } else {
    clear_has_update();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.FrameUpdateGuildSCmd.update)
}

// optional .Cmd.GuildPhoto del = 6;
inline bool FrameUpdateGuildSCmd::has_del() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FrameUpdateGuildSCmd::set_has_del() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FrameUpdateGuildSCmd::clear_has_del() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FrameUpdateGuildSCmd::clear_del() {
  if (del_ != NULL) del_->::Cmd::GuildPhoto::Clear();
  clear_has_del();
}
inline const ::Cmd::GuildPhoto& FrameUpdateGuildSCmd::del() const {
  // @@protoc_insertion_point(field_get:Cmd.FrameUpdateGuildSCmd.del)
  return del_ != NULL ? *del_ : *default_instance_->del_;
}
inline ::Cmd::GuildPhoto* FrameUpdateGuildSCmd::mutable_del() {
  set_has_del();
  if (del_ == NULL) del_ = new ::Cmd::GuildPhoto;
  // @@protoc_insertion_point(field_mutable:Cmd.FrameUpdateGuildSCmd.del)
  return del_;
}
inline ::Cmd::GuildPhoto* FrameUpdateGuildSCmd::release_del() {
  clear_has_del();
  ::Cmd::GuildPhoto* temp = del_;
  del_ = NULL;
  return temp;
}
inline void FrameUpdateGuildSCmd::set_allocated_del(::Cmd::GuildPhoto* del) {
  delete del_;
  del_ = del;
  if (del) {
    set_has_del();
  } else {
    clear_has_del();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.FrameUpdateGuildSCmd.del)
}

// -------------------------------------------------------------------

// PhotoUpdateGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool PhotoUpdateGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PhotoUpdateGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PhotoUpdateGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PhotoUpdateGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command PhotoUpdateGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.PhotoUpdateGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void PhotoUpdateGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PhotoUpdateGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_PHOTO_UPDATE];
inline bool PhotoUpdateGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PhotoUpdateGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PhotoUpdateGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PhotoUpdateGuildSCmd::clear_param() {
  param_ = 18;
  clear_has_param();
}
inline ::Cmd::GuildSParam PhotoUpdateGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.PhotoUpdateGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void PhotoUpdateGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PhotoUpdateGuildSCmd.param)
}

// optional uint64 guildid = 3 [default = 0];
inline bool PhotoUpdateGuildSCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PhotoUpdateGuildSCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PhotoUpdateGuildSCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PhotoUpdateGuildSCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 PhotoUpdateGuildSCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.PhotoUpdateGuildSCmd.guildid)
  return guildid_;
}
inline void PhotoUpdateGuildSCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PhotoUpdateGuildSCmd.guildid)
}

// optional uint32 sceneid = 4 [default = 0];
inline bool PhotoUpdateGuildSCmd::has_sceneid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PhotoUpdateGuildSCmd::set_has_sceneid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PhotoUpdateGuildSCmd::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PhotoUpdateGuildSCmd::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 PhotoUpdateGuildSCmd::sceneid() const {
  // @@protoc_insertion_point(field_get:Cmd.PhotoUpdateGuildSCmd.sceneid)
  return sceneid_;
}
inline void PhotoUpdateGuildSCmd::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PhotoUpdateGuildSCmd.sceneid)
}

// optional .Cmd.GuildPhoto update = 5;
inline bool PhotoUpdateGuildSCmd::has_update() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PhotoUpdateGuildSCmd::set_has_update() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PhotoUpdateGuildSCmd::clear_has_update() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PhotoUpdateGuildSCmd::clear_update() {
  if (update_ != NULL) update_->::Cmd::GuildPhoto::Clear();
  clear_has_update();
}
inline const ::Cmd::GuildPhoto& PhotoUpdateGuildSCmd::update() const {
  // @@protoc_insertion_point(field_get:Cmd.PhotoUpdateGuildSCmd.update)
  return update_ != NULL ? *update_ : *default_instance_->update_;
}
inline ::Cmd::GuildPhoto* PhotoUpdateGuildSCmd::mutable_update() {
  set_has_update();
  if (update_ == NULL) update_ = new ::Cmd::GuildPhoto;
  // @@protoc_insertion_point(field_mutable:Cmd.PhotoUpdateGuildSCmd.update)
  return update_;
}
inline ::Cmd::GuildPhoto* PhotoUpdateGuildSCmd::release_update() {
  clear_has_update();
  ::Cmd::GuildPhoto* temp = update_;
  update_ = NULL;
  return temp;
}
inline void PhotoUpdateGuildSCmd::set_allocated_update(::Cmd::GuildPhoto* update) {
  delete update_;
  update_ = update;
  if (update) {
    set_has_update();
  } else {
    clear_has_update();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.PhotoUpdateGuildSCmd.update)
}

// optional .Cmd.GuildPhoto del = 6;
inline bool PhotoUpdateGuildSCmd::has_del() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PhotoUpdateGuildSCmd::set_has_del() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PhotoUpdateGuildSCmd::clear_has_del() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PhotoUpdateGuildSCmd::clear_del() {
  if (del_ != NULL) del_->::Cmd::GuildPhoto::Clear();
  clear_has_del();
}
inline const ::Cmd::GuildPhoto& PhotoUpdateGuildSCmd::del() const {
  // @@protoc_insertion_point(field_get:Cmd.PhotoUpdateGuildSCmd.del)
  return del_ != NULL ? *del_ : *default_instance_->del_;
}
inline ::Cmd::GuildPhoto* PhotoUpdateGuildSCmd::mutable_del() {
  set_has_del();
  if (del_ == NULL) del_ = new ::Cmd::GuildPhoto;
  // @@protoc_insertion_point(field_mutable:Cmd.PhotoUpdateGuildSCmd.del)
  return del_;
}
inline ::Cmd::GuildPhoto* PhotoUpdateGuildSCmd::release_del() {
  clear_has_del();
  ::Cmd::GuildPhoto* temp = del_;
  del_ = NULL;
  return temp;
}
inline void PhotoUpdateGuildSCmd::set_allocated_del(::Cmd::GuildPhoto* del) {
  delete del_;
  del_ = del;
  if (del) {
    set_has_del();
  } else {
    clear_has_del();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.PhotoUpdateGuildSCmd.del)
}

// optional bool to_guild = 7 [default = false];
inline bool PhotoUpdateGuildSCmd::has_to_guild() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PhotoUpdateGuildSCmd::set_has_to_guild() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PhotoUpdateGuildSCmd::clear_has_to_guild() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PhotoUpdateGuildSCmd::clear_to_guild() {
  to_guild_ = false;
  clear_has_to_guild();
}
inline bool PhotoUpdateGuildSCmd::to_guild() const {
  // @@protoc_insertion_point(field_get:Cmd.PhotoUpdateGuildSCmd.to_guild)
  return to_guild_;
}
inline void PhotoUpdateGuildSCmd::set_to_guild(bool value) {
  set_has_to_guild();
  to_guild_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PhotoUpdateGuildSCmd.to_guild)
}

// -------------------------------------------------------------------

// JobUpdateGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool JobUpdateGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobUpdateGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JobUpdateGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JobUpdateGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command JobUpdateGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.JobUpdateGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void JobUpdateGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.JobUpdateGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_JOB_UPDATE];
inline bool JobUpdateGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JobUpdateGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JobUpdateGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JobUpdateGuildSCmd::clear_param() {
  param_ = 19;
  clear_has_param();
}
inline ::Cmd::GuildSParam JobUpdateGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.JobUpdateGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void JobUpdateGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.JobUpdateGuildSCmd.param)
}

// optional uint64 guildid = 3 [default = 0];
inline bool JobUpdateGuildSCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JobUpdateGuildSCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JobUpdateGuildSCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JobUpdateGuildSCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 JobUpdateGuildSCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.JobUpdateGuildSCmd.guildid)
  return guildid_;
}
inline void JobUpdateGuildSCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.JobUpdateGuildSCmd.guildid)
}

// optional uint64 charid = 4 [default = 0];
inline bool JobUpdateGuildSCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JobUpdateGuildSCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JobUpdateGuildSCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JobUpdateGuildSCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 JobUpdateGuildSCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.JobUpdateGuildSCmd.charid)
  return charid_;
}
inline void JobUpdateGuildSCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.JobUpdateGuildSCmd.charid)
}

// optional .Cmd.GuildJob job = 5;
inline bool JobUpdateGuildSCmd::has_job() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void JobUpdateGuildSCmd::set_has_job() {
  _has_bits_[0] |= 0x00000010u;
}
inline void JobUpdateGuildSCmd::clear_has_job() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void JobUpdateGuildSCmd::clear_job() {
  if (job_ != NULL) job_->::Cmd::GuildJob::Clear();
  clear_has_job();
}
inline const ::Cmd::GuildJob& JobUpdateGuildSCmd::job() const {
  // @@protoc_insertion_point(field_get:Cmd.JobUpdateGuildSCmd.job)
  return job_ != NULL ? *job_ : *default_instance_->job_;
}
inline ::Cmd::GuildJob* JobUpdateGuildSCmd::mutable_job() {
  set_has_job();
  if (job_ == NULL) job_ = new ::Cmd::GuildJob;
  // @@protoc_insertion_point(field_mutable:Cmd.JobUpdateGuildSCmd.job)
  return job_;
}
inline ::Cmd::GuildJob* JobUpdateGuildSCmd::release_job() {
  clear_has_job();
  ::Cmd::GuildJob* temp = job_;
  job_ = NULL;
  return temp;
}
inline void JobUpdateGuildSCmd::set_allocated_job(::Cmd::GuildJob* job) {
  delete job_;
  job_ = job;
  if (job) {
    set_has_job();
  } else {
    clear_has_job();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.JobUpdateGuildSCmd.job)
}

// -------------------------------------------------------------------

// GuildMusicDeleteGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool GuildMusicDeleteGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMusicDeleteGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMusicDeleteGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMusicDeleteGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command GuildMusicDeleteGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMusicDeleteGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildMusicDeleteGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMusicDeleteGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_GUILD_MUSIC_DELETE];
inline bool GuildMusicDeleteGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMusicDeleteGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMusicDeleteGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMusicDeleteGuildSCmd::clear_param() {
  param_ = 20;
  clear_has_param();
}
inline ::Cmd::GuildSParam GuildMusicDeleteGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMusicDeleteGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void GuildMusicDeleteGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMusicDeleteGuildSCmd.param)
}

// optional uint64 guildid = 3 [default = 0];
inline bool GuildMusicDeleteGuildSCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildMusicDeleteGuildSCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildMusicDeleteGuildSCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildMusicDeleteGuildSCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 GuildMusicDeleteGuildSCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildMusicDeleteGuildSCmd.guildid)
  return guildid_;
}
inline void GuildMusicDeleteGuildSCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildMusicDeleteGuildSCmd.guildid)
}

// -------------------------------------------------------------------

// RenameNTFGuildCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool RenameNTFGuildCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RenameNTFGuildCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RenameNTFGuildCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RenameNTFGuildCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command RenameNTFGuildCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.RenameNTFGuildCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void RenameNTFGuildCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RenameNTFGuildCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_RENAME_NTF];
inline bool RenameNTFGuildCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RenameNTFGuildCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RenameNTFGuildCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RenameNTFGuildCmd::clear_param() {
  param_ = 21;
  clear_has_param();
}
inline ::Cmd::GuildSParam RenameNTFGuildCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.RenameNTFGuildCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void RenameNTFGuildCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RenameNTFGuildCmd.param)
}

// optional .Cmd.SocialUser user = 3;
inline bool RenameNTFGuildCmd::has_user() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RenameNTFGuildCmd::set_has_user() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RenameNTFGuildCmd::clear_has_user() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RenameNTFGuildCmd::clear_user() {
  if (user_ != NULL) user_->::Cmd::SocialUser::Clear();
  clear_has_user();
}
inline const ::Cmd::SocialUser& RenameNTFGuildCmd::user() const {
  // @@protoc_insertion_point(field_get:Cmd.RenameNTFGuildCmd.user)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
inline ::Cmd::SocialUser* RenameNTFGuildCmd::mutable_user() {
  set_has_user();
  if (user_ == NULL) user_ = new ::Cmd::SocialUser;
  // @@protoc_insertion_point(field_mutable:Cmd.RenameNTFGuildCmd.user)
  return user_;
}
inline ::Cmd::SocialUser* RenameNTFGuildCmd::release_user() {
  clear_has_user();
  ::Cmd::SocialUser* temp = user_;
  user_ = NULL;
  return temp;
}
inline void RenameNTFGuildCmd::set_allocated_user(::Cmd::SocialUser* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.RenameNTFGuildCmd.user)
}

// optional string newname = 4;
inline bool RenameNTFGuildCmd::has_newname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RenameNTFGuildCmd::set_has_newname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RenameNTFGuildCmd::clear_has_newname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RenameNTFGuildCmd::clear_newname() {
  if (newname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_->clear();
  }
  clear_has_newname();
}
inline const ::std::string& RenameNTFGuildCmd::newname() const {
  // @@protoc_insertion_point(field_get:Cmd.RenameNTFGuildCmd.newname)
  return *newname_;
}
inline void RenameNTFGuildCmd::set_newname(const ::std::string& value) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  newname_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.RenameNTFGuildCmd.newname)
}
inline void RenameNTFGuildCmd::set_newname(const char* value) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  newname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.RenameNTFGuildCmd.newname)
}
inline void RenameNTFGuildCmd::set_newname(const char* value, size_t size) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  newname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.RenameNTFGuildCmd.newname)
}
inline ::std::string* RenameNTFGuildCmd::mutable_newname() {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.RenameNTFGuildCmd.newname)
  return newname_;
}
inline ::std::string* RenameNTFGuildCmd::release_newname() {
  clear_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = newname_;
    newname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RenameNTFGuildCmd::set_allocated_newname(::std::string* newname) {
  if (newname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete newname_;
  }
  if (newname) {
    set_has_newname();
    newname_ = newname;
  } else {
    clear_has_newname();
    newname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.RenameNTFGuildCmd.newname)
}

// optional bool result = 5 [default = true];
inline bool RenameNTFGuildCmd::has_result() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RenameNTFGuildCmd::set_has_result() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RenameNTFGuildCmd::clear_has_result() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RenameNTFGuildCmd::clear_result() {
  result_ = true;
  clear_has_result();
}
inline bool RenameNTFGuildCmd::result() const {
  // @@protoc_insertion_point(field_get:Cmd.RenameNTFGuildCmd.result)
  return result_;
}
inline void RenameNTFGuildCmd::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RenameNTFGuildCmd.result)
}

// -------------------------------------------------------------------

// GuildCityActionGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool GuildCityActionGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildCityActionGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildCityActionGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildCityActionGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command GuildCityActionGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildCityActionGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildCityActionGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildCityActionGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_GUILD_CITY_ACTION];
inline bool GuildCityActionGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildCityActionGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildCityActionGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildCityActionGuildSCmd::clear_param() {
  param_ = 22;
  clear_has_param();
}
inline ::Cmd::GuildSParam GuildCityActionGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildCityActionGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void GuildCityActionGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildCityActionGuildSCmd.param)
}

// optional .Cmd.EGuildCityAction action = 3 [default = EGUILDCITYACTION_MIN];
inline bool GuildCityActionGuildSCmd::has_action() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildCityActionGuildSCmd::set_has_action() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildCityActionGuildSCmd::clear_has_action() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildCityActionGuildSCmd::clear_action() {
  action_ = 0;
  clear_has_action();
}
inline ::Cmd::EGuildCityAction GuildCityActionGuildSCmd::action() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildCityActionGuildSCmd.action)
  return static_cast< ::Cmd::EGuildCityAction >(action_);
}
inline void GuildCityActionGuildSCmd::set_action(::Cmd::EGuildCityAction value) {
  assert(::Cmd::EGuildCityAction_IsValid(value));
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildCityActionGuildSCmd.action)
}

// optional .Cmd.EGuildCityStatus status = 4 [default = EGUILDCITYSTATUS_MIN];
inline bool GuildCityActionGuildSCmd::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildCityActionGuildSCmd::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildCityActionGuildSCmd::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildCityActionGuildSCmd::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::Cmd::EGuildCityStatus GuildCityActionGuildSCmd::status() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildCityActionGuildSCmd.status)
  return static_cast< ::Cmd::EGuildCityStatus >(status_);
}
inline void GuildCityActionGuildSCmd::set_status(::Cmd::EGuildCityStatus value) {
  assert(::Cmd::EGuildCityStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildCityActionGuildSCmd.status)
}

// optional .Cmd.EGuildCityResult result = 5 [default = EGUILDCITYRESULT_MIN];
inline bool GuildCityActionGuildSCmd::has_result() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildCityActionGuildSCmd::set_has_result() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildCityActionGuildSCmd::clear_has_result() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildCityActionGuildSCmd::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::Cmd::EGuildCityResult GuildCityActionGuildSCmd::result() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildCityActionGuildSCmd.result)
  return static_cast< ::Cmd::EGuildCityResult >(result_);
}
inline void GuildCityActionGuildSCmd::set_result(::Cmd::EGuildCityResult value) {
  assert(::Cmd::EGuildCityResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildCityActionGuildSCmd.result)
}

// optional uint32 zoneid = 6 [default = 0];
inline bool GuildCityActionGuildSCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildCityActionGuildSCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildCityActionGuildSCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildCityActionGuildSCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 GuildCityActionGuildSCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildCityActionGuildSCmd.zoneid)
  return zoneid_;
}
inline void GuildCityActionGuildSCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildCityActionGuildSCmd.zoneid)
}

// optional string scenename = 7;
inline bool GuildCityActionGuildSCmd::has_scenename() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildCityActionGuildSCmd::set_has_scenename() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildCityActionGuildSCmd::clear_has_scenename() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildCityActionGuildSCmd::clear_scenename() {
  if (scenename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scenename_->clear();
  }
  clear_has_scenename();
}
inline const ::std::string& GuildCityActionGuildSCmd::scenename() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildCityActionGuildSCmd.scenename)
  return *scenename_;
}
inline void GuildCityActionGuildSCmd::set_scenename(const ::std::string& value) {
  set_has_scenename();
  if (scenename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scenename_ = new ::std::string;
  }
  scenename_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildCityActionGuildSCmd.scenename)
}
inline void GuildCityActionGuildSCmd::set_scenename(const char* value) {
  set_has_scenename();
  if (scenename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scenename_ = new ::std::string;
  }
  scenename_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildCityActionGuildSCmd.scenename)
}
inline void GuildCityActionGuildSCmd::set_scenename(const char* value, size_t size) {
  set_has_scenename();
  if (scenename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scenename_ = new ::std::string;
  }
  scenename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildCityActionGuildSCmd.scenename)
}
inline ::std::string* GuildCityActionGuildSCmd::mutable_scenename() {
  set_has_scenename();
  if (scenename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scenename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildCityActionGuildSCmd.scenename)
  return scenename_;
}
inline ::std::string* GuildCityActionGuildSCmd::release_scenename() {
  clear_has_scenename();
  if (scenename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = scenename_;
    scenename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildCityActionGuildSCmd::set_allocated_scenename(::std::string* scenename) {
  if (scenename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete scenename_;
  }
  if (scenename) {
    set_has_scenename();
    scenename_ = scenename;
  } else {
    clear_has_scenename();
    scenename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildCityActionGuildSCmd.scenename)
}

// repeated .Cmd.GuildCityInfo infos = 8;
inline int GuildCityActionGuildSCmd::infos_size() const {
  return infos_.size();
}
inline void GuildCityActionGuildSCmd::clear_infos() {
  infos_.Clear();
}
inline const ::Cmd::GuildCityInfo& GuildCityActionGuildSCmd::infos(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildCityActionGuildSCmd.infos)
  return infos_.Get(index);
}
inline ::Cmd::GuildCityInfo* GuildCityActionGuildSCmd::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildCityActionGuildSCmd.infos)
  return infos_.Mutable(index);
}
inline ::Cmd::GuildCityInfo* GuildCityActionGuildSCmd::add_infos() {
  // @@protoc_insertion_point(field_add:Cmd.GuildCityActionGuildSCmd.infos)
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildCityInfo >&
GuildCityActionGuildSCmd::infos() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildCityActionGuildSCmd.infos)
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildCityInfo >*
GuildCityActionGuildSCmd::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildCityActionGuildSCmd.infos)
  return &infos_;
}

// -------------------------------------------------------------------

// SendMailGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool SendMailGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendMailGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendMailGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendMailGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command SendMailGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SendMailGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SendMailGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SendMailGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_SEND_MAIL];
inline bool SendMailGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendMailGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendMailGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendMailGuildSCmd::clear_param() {
  param_ = 23;
  clear_has_param();
}
inline ::Cmd::GuildSParam SendMailGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SendMailGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void SendMailGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SendMailGuildSCmd.param)
}

// optional .Cmd.MailData data = 3;
inline bool SendMailGuildSCmd::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendMailGuildSCmd::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendMailGuildSCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendMailGuildSCmd::clear_data() {
  if (data_ != NULL) data_->::Cmd::MailData::Clear();
  clear_has_data();
}
inline const ::Cmd::MailData& SendMailGuildSCmd::data() const {
  // @@protoc_insertion_point(field_get:Cmd.SendMailGuildSCmd.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Cmd::MailData* SendMailGuildSCmd::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Cmd::MailData;
  // @@protoc_insertion_point(field_mutable:Cmd.SendMailGuildSCmd.data)
  return data_;
}
inline ::Cmd::MailData* SendMailGuildSCmd::release_data() {
  clear_has_data();
  ::Cmd::MailData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void SendMailGuildSCmd::set_allocated_data(::Cmd::MailData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.SendMailGuildSCmd.data)
}

// -------------------------------------------------------------------

// GVGRewardGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool GVGRewardGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GVGRewardGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GVGRewardGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GVGRewardGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command GVGRewardGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GVGRewardGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GVGRewardGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GVGRewardGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_GVG_REWARD];
inline bool GVGRewardGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GVGRewardGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GVGRewardGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GVGRewardGuildSCmd::clear_param() {
  param_ = 24;
  clear_has_param();
}
inline ::Cmd::GuildSParam GVGRewardGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GVGRewardGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void GVGRewardGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GVGRewardGuildSCmd.param)
}

// optional uint64 guildid = 3 [default = 0];
inline bool GVGRewardGuildSCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GVGRewardGuildSCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GVGRewardGuildSCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GVGRewardGuildSCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 GVGRewardGuildSCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.GVGRewardGuildSCmd.guildid)
  return guildid_;
}
inline void GVGRewardGuildSCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GVGRewardGuildSCmd.guildid)
}

// -------------------------------------------------------------------

// GuildPrayGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool GuildPrayGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildPrayGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildPrayGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildPrayGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command GuildPrayGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildPrayGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildPrayGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildPrayGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_GUILDPRAY];
inline bool GuildPrayGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildPrayGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildPrayGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildPrayGuildSCmd::clear_param() {
  param_ = 25;
  clear_has_param();
}
inline ::Cmd::GuildSParam GuildPrayGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildPrayGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void GuildPrayGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildPrayGuildSCmd.param)
}

// optional .Cmd.SocialUser user = 3;
inline bool GuildPrayGuildSCmd::has_user() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildPrayGuildSCmd::set_has_user() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildPrayGuildSCmd::clear_has_user() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildPrayGuildSCmd::clear_user() {
  if (user_ != NULL) user_->::Cmd::SocialUser::Clear();
  clear_has_user();
}
inline const ::Cmd::SocialUser& GuildPrayGuildSCmd::user() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildPrayGuildSCmd.user)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
inline ::Cmd::SocialUser* GuildPrayGuildSCmd::mutable_user() {
  set_has_user();
  if (user_ == NULL) user_ = new ::Cmd::SocialUser;
  // @@protoc_insertion_point(field_mutable:Cmd.GuildPrayGuildSCmd.user)
  return user_;
}
inline ::Cmd::SocialUser* GuildPrayGuildSCmd::release_user() {
  clear_has_user();
  ::Cmd::SocialUser* temp = user_;
  user_ = NULL;
  return temp;
}
inline void GuildPrayGuildSCmd::set_allocated_user(::Cmd::SocialUser* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildPrayGuildSCmd.user)
}

// optional uint64 npcid = 4 [default = 0];
inline bool GuildPrayGuildSCmd::has_npcid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildPrayGuildSCmd::set_has_npcid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildPrayGuildSCmd::clear_has_npcid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildPrayGuildSCmd::clear_npcid() {
  npcid_ = GOOGLE_ULONGLONG(0);
  clear_has_npcid();
}
inline ::google::protobuf::uint64 GuildPrayGuildSCmd::npcid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildPrayGuildSCmd.npcid)
  return npcid_;
}
inline void GuildPrayGuildSCmd::set_npcid(::google::protobuf::uint64 value) {
  set_has_npcid();
  npcid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildPrayGuildSCmd.npcid)
}

// optional uint32 prayid = 5 [default = 0];
inline bool GuildPrayGuildSCmd::has_prayid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildPrayGuildSCmd::set_has_prayid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildPrayGuildSCmd::clear_has_prayid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildPrayGuildSCmd::clear_prayid() {
  prayid_ = 0u;
  clear_has_prayid();
}
inline ::google::protobuf::uint32 GuildPrayGuildSCmd::prayid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildPrayGuildSCmd.prayid)
  return prayid_;
}
inline void GuildPrayGuildSCmd::set_prayid(::google::protobuf::uint32 value) {
  set_has_prayid();
  prayid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildPrayGuildSCmd.prayid)
}

// optional uint32 praylv = 6 [default = 0];
inline bool GuildPrayGuildSCmd::has_praylv() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildPrayGuildSCmd::set_has_praylv() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildPrayGuildSCmd::clear_has_praylv() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildPrayGuildSCmd::clear_praylv() {
  praylv_ = 0u;
  clear_has_praylv();
}
inline ::google::protobuf::uint32 GuildPrayGuildSCmd::praylv() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildPrayGuildSCmd.praylv)
  return praylv_;
}
inline void GuildPrayGuildSCmd::set_praylv(::google::protobuf::uint32 value) {
  set_has_praylv();
  praylv_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildPrayGuildSCmd.praylv)
}

// optional uint32 needcon = 7 [default = 0];
inline bool GuildPrayGuildSCmd::has_needcon() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildPrayGuildSCmd::set_has_needcon() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildPrayGuildSCmd::clear_has_needcon() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildPrayGuildSCmd::clear_needcon() {
  needcon_ = 0u;
  clear_has_needcon();
}
inline ::google::protobuf::uint32 GuildPrayGuildSCmd::needcon() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildPrayGuildSCmd.needcon)
  return needcon_;
}
inline void GuildPrayGuildSCmd::set_needcon(::google::protobuf::uint32 value) {
  set_has_needcon();
  needcon_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildPrayGuildSCmd.needcon)
}

// optional uint32 needmon = 8 [default = 0];
inline bool GuildPrayGuildSCmd::has_needmon() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuildPrayGuildSCmd::set_has_needmon() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuildPrayGuildSCmd::clear_has_needmon() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuildPrayGuildSCmd::clear_needmon() {
  needmon_ = 0u;
  clear_has_needmon();
}
inline ::google::protobuf::uint32 GuildPrayGuildSCmd::needmon() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildPrayGuildSCmd.needmon)
  return needmon_;
}
inline void GuildPrayGuildSCmd::set_needmon(::google::protobuf::uint32 value) {
  set_has_needmon();
  needmon_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildPrayGuildSCmd.needmon)
}

// optional uint32 prayitem = 9 [default = 0];
inline bool GuildPrayGuildSCmd::has_prayitem() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GuildPrayGuildSCmd::set_has_prayitem() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GuildPrayGuildSCmd::clear_has_prayitem() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GuildPrayGuildSCmd::clear_prayitem() {
  prayitem_ = 0u;
  clear_has_prayitem();
}
inline ::google::protobuf::uint32 GuildPrayGuildSCmd::prayitem() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildPrayGuildSCmd.prayitem)
  return prayitem_;
}
inline void GuildPrayGuildSCmd::set_prayitem(::google::protobuf::uint32 value) {
  set_has_prayitem();
  prayitem_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildPrayGuildSCmd.prayitem)
}

// optional uint32 msgid = 10 [default = 0];
inline bool GuildPrayGuildSCmd::has_msgid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GuildPrayGuildSCmd::set_has_msgid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GuildPrayGuildSCmd::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GuildPrayGuildSCmd::clear_msgid() {
  msgid_ = 0u;
  clear_has_msgid();
}
inline ::google::protobuf::uint32 GuildPrayGuildSCmd::msgid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildPrayGuildSCmd.msgid)
  return msgid_;
}
inline void GuildPrayGuildSCmd::set_msgid(::google::protobuf::uint32 value) {
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildPrayGuildSCmd.msgid)
}

// -------------------------------------------------------------------

// GuildIconStateGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool GuildIconStateGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildIconStateGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildIconStateGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildIconStateGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command GuildIconStateGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildIconStateGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildIconStateGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildIconStateGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_GUILD_ICON_STATE];
inline bool GuildIconStateGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildIconStateGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildIconStateGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildIconStateGuildSCmd::clear_param() {
  param_ = 26;
  clear_has_param();
}
inline ::Cmd::GuildSParam GuildIconStateGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildIconStateGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void GuildIconStateGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildIconStateGuildSCmd.param)
}

// repeated uint64 ids = 3;
inline int GuildIconStateGuildSCmd::ids_size() const {
  return ids_.size();
}
inline void GuildIconStateGuildSCmd::clear_ids() {
  ids_.Clear();
}
inline ::google::protobuf::uint64 GuildIconStateGuildSCmd::ids(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildIconStateGuildSCmd.ids)
  return ids_.Get(index);
}
inline void GuildIconStateGuildSCmd::set_ids(int index, ::google::protobuf::uint64 value) {
  ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.GuildIconStateGuildSCmd.ids)
}
inline void GuildIconStateGuildSCmd::add_ids(::google::protobuf::uint64 value) {
  ids_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.GuildIconStateGuildSCmd.ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GuildIconStateGuildSCmd::ids() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildIconStateGuildSCmd.ids)
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GuildIconStateGuildSCmd::mutable_ids() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildIconStateGuildSCmd.ids)
  return &ids_;
}

// optional .Cmd.EIconState state = 4 [default = EICON_INIT];
inline bool GuildIconStateGuildSCmd::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildIconStateGuildSCmd::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildIconStateGuildSCmd::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildIconStateGuildSCmd::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::Cmd::EIconState GuildIconStateGuildSCmd::state() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildIconStateGuildSCmd.state)
  return static_cast< ::Cmd::EIconState >(state_);
}
inline void GuildIconStateGuildSCmd::set_state(::Cmd::EIconState value) {
  assert(::Cmd::EIconState_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildIconStateGuildSCmd.state)
}

// -------------------------------------------------------------------

// BuildingMaterial

// optional uint32 id = 1 [default = 0];
inline bool BuildingMaterial::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuildingMaterial::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuildingMaterial::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuildingMaterial::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 BuildingMaterial::id() const {
  // @@protoc_insertion_point(field_get:Cmd.BuildingMaterial.id)
  return id_;
}
inline void BuildingMaterial::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuildingMaterial.id)
}

// optional uint32 count = 2 [default = 0];
inline bool BuildingMaterial::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuildingMaterial::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuildingMaterial::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuildingMaterial::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 BuildingMaterial::count() const {
  // @@protoc_insertion_point(field_get:Cmd.BuildingMaterial.count)
  return count_;
}
inline void BuildingMaterial::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuildingMaterial.count)
}

// -------------------------------------------------------------------

// SubmitMaterialGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool SubmitMaterialGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SubmitMaterialGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SubmitMaterialGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SubmitMaterialGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command SubmitMaterialGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SubmitMaterialGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SubmitMaterialGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SubmitMaterialGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_SUBMIT_MATERIAL];
inline bool SubmitMaterialGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SubmitMaterialGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SubmitMaterialGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SubmitMaterialGuildSCmd::clear_param() {
  param_ = 27;
  clear_has_param();
}
inline ::Cmd::GuildSParam SubmitMaterialGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SubmitMaterialGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void SubmitMaterialGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SubmitMaterialGuildSCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool SubmitMaterialGuildSCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SubmitMaterialGuildSCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SubmitMaterialGuildSCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SubmitMaterialGuildSCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 SubmitMaterialGuildSCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.SubmitMaterialGuildSCmd.charid)
  return charid_;
}
inline void SubmitMaterialGuildSCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SubmitMaterialGuildSCmd.charid)
}

// optional .Cmd.EGuildBuilding building = 4 [default = EGUILDBUILDING_MIN];
inline bool SubmitMaterialGuildSCmd::has_building() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SubmitMaterialGuildSCmd::set_has_building() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SubmitMaterialGuildSCmd::clear_has_building() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SubmitMaterialGuildSCmd::clear_building() {
  building_ = 0;
  clear_has_building();
}
inline ::Cmd::EGuildBuilding SubmitMaterialGuildSCmd::building() const {
  // @@protoc_insertion_point(field_get:Cmd.SubmitMaterialGuildSCmd.building)
  return static_cast< ::Cmd::EGuildBuilding >(building_);
}
inline void SubmitMaterialGuildSCmd::set_building(::Cmd::EGuildBuilding value) {
  assert(::Cmd::EGuildBuilding_IsValid(value));
  set_has_building();
  building_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SubmitMaterialGuildSCmd.building)
}

// repeated .Cmd.BuildingMaterial materials = 5;
inline int SubmitMaterialGuildSCmd::materials_size() const {
  return materials_.size();
}
inline void SubmitMaterialGuildSCmd::clear_materials() {
  materials_.Clear();
}
inline const ::Cmd::BuildingMaterial& SubmitMaterialGuildSCmd::materials(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SubmitMaterialGuildSCmd.materials)
  return materials_.Get(index);
}
inline ::Cmd::BuildingMaterial* SubmitMaterialGuildSCmd::mutable_materials(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.SubmitMaterialGuildSCmd.materials)
  return materials_.Mutable(index);
}
inline ::Cmd::BuildingMaterial* SubmitMaterialGuildSCmd::add_materials() {
  // @@protoc_insertion_point(field_add:Cmd.SubmitMaterialGuildSCmd.materials)
  return materials_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::BuildingMaterial >&
SubmitMaterialGuildSCmd::materials() const {
  // @@protoc_insertion_point(field_list:Cmd.SubmitMaterialGuildSCmd.materials)
  return materials_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::BuildingMaterial >*
SubmitMaterialGuildSCmd::mutable_materials() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SubmitMaterialGuildSCmd.materials)
  return &materials_;
}

// optional uint32 submitcount = 6 [default = 0];
inline bool SubmitMaterialGuildSCmd::has_submitcount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SubmitMaterialGuildSCmd::set_has_submitcount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SubmitMaterialGuildSCmd::clear_has_submitcount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SubmitMaterialGuildSCmd::clear_submitcount() {
  submitcount_ = 0u;
  clear_has_submitcount();
}
inline ::google::protobuf::uint32 SubmitMaterialGuildSCmd::submitcount() const {
  // @@protoc_insertion_point(field_get:Cmd.SubmitMaterialGuildSCmd.submitcount)
  return submitcount_;
}
inline void SubmitMaterialGuildSCmd::set_submitcount(::google::protobuf::uint32 value) {
  set_has_submitcount();
  submitcount_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SubmitMaterialGuildSCmd.submitcount)
}

// optional uint32 counter = 7 [default = 0];
inline bool SubmitMaterialGuildSCmd::has_counter() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SubmitMaterialGuildSCmd::set_has_counter() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SubmitMaterialGuildSCmd::clear_has_counter() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SubmitMaterialGuildSCmd::clear_counter() {
  counter_ = 0u;
  clear_has_counter();
}
inline ::google::protobuf::uint32 SubmitMaterialGuildSCmd::counter() const {
  // @@protoc_insertion_point(field_get:Cmd.SubmitMaterialGuildSCmd.counter)
  return counter_;
}
inline void SubmitMaterialGuildSCmd::set_counter(::google::protobuf::uint32 value) {
  set_has_counter();
  counter_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SubmitMaterialGuildSCmd.counter)
}

// optional bool success = 8 [default = false];
inline bool SubmitMaterialGuildSCmd::has_success() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SubmitMaterialGuildSCmd::set_has_success() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SubmitMaterialGuildSCmd::clear_has_success() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SubmitMaterialGuildSCmd::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool SubmitMaterialGuildSCmd::success() const {
  // @@protoc_insertion_point(field_get:Cmd.SubmitMaterialGuildSCmd.success)
  return success_;
}
inline void SubmitMaterialGuildSCmd::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SubmitMaterialGuildSCmd.success)
}

// optional uint32 curlevel = 9 [default = 0];
inline bool SubmitMaterialGuildSCmd::has_curlevel() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SubmitMaterialGuildSCmd::set_has_curlevel() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SubmitMaterialGuildSCmd::clear_has_curlevel() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SubmitMaterialGuildSCmd::clear_curlevel() {
  curlevel_ = 0u;
  clear_has_curlevel();
}
inline ::google::protobuf::uint32 SubmitMaterialGuildSCmd::curlevel() const {
  // @@protoc_insertion_point(field_get:Cmd.SubmitMaterialGuildSCmd.curlevel)
  return curlevel_;
}
inline void SubmitMaterialGuildSCmd::set_curlevel(::google::protobuf::uint32 value) {
  set_has_curlevel();
  curlevel_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SubmitMaterialGuildSCmd.curlevel)
}

// optional uint32 submitinc = 10 [default = 0];
inline bool SubmitMaterialGuildSCmd::has_submitinc() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SubmitMaterialGuildSCmd::set_has_submitinc() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SubmitMaterialGuildSCmd::clear_has_submitinc() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SubmitMaterialGuildSCmd::clear_submitinc() {
  submitinc_ = 0u;
  clear_has_submitinc();
}
inline ::google::protobuf::uint32 SubmitMaterialGuildSCmd::submitinc() const {
  // @@protoc_insertion_point(field_get:Cmd.SubmitMaterialGuildSCmd.submitinc)
  return submitinc_;
}
inline void SubmitMaterialGuildSCmd::set_submitinc(::google::protobuf::uint32 value) {
  set_has_submitinc();
  submitinc_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SubmitMaterialGuildSCmd.submitinc)
}

// -------------------------------------------------------------------

// BuildingUpdateGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool BuildingUpdateGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuildingUpdateGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuildingUpdateGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuildingUpdateGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command BuildingUpdateGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.BuildingUpdateGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void BuildingUpdateGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuildingUpdateGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_BUILDING_UPDATE];
inline bool BuildingUpdateGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuildingUpdateGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuildingUpdateGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuildingUpdateGuildSCmd::clear_param() {
  param_ = 28;
  clear_has_param();
}
inline ::Cmd::GuildSParam BuildingUpdateGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.BuildingUpdateGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void BuildingUpdateGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuildingUpdateGuildSCmd.param)
}

// optional uint64 guildid = 3 [default = 0];
inline bool BuildingUpdateGuildSCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuildingUpdateGuildSCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuildingUpdateGuildSCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuildingUpdateGuildSCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 BuildingUpdateGuildSCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.BuildingUpdateGuildSCmd.guildid)
  return guildid_;
}
inline void BuildingUpdateGuildSCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuildingUpdateGuildSCmd.guildid)
}

// optional uint64 sceneid = 4 [default = 0];
inline bool BuildingUpdateGuildSCmd::has_sceneid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BuildingUpdateGuildSCmd::set_has_sceneid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BuildingUpdateGuildSCmd::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BuildingUpdateGuildSCmd::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 BuildingUpdateGuildSCmd::sceneid() const {
  // @@protoc_insertion_point(field_get:Cmd.BuildingUpdateGuildSCmd.sceneid)
  return sceneid_;
}
inline void BuildingUpdateGuildSCmd::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuildingUpdateGuildSCmd.sceneid)
}

// repeated .Cmd.GuildBuilding updates = 5;
inline int BuildingUpdateGuildSCmd::updates_size() const {
  return updates_.size();
}
inline void BuildingUpdateGuildSCmd::clear_updates() {
  updates_.Clear();
}
inline const ::Cmd::GuildBuilding& BuildingUpdateGuildSCmd::updates(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BuildingUpdateGuildSCmd.updates)
  return updates_.Get(index);
}
inline ::Cmd::GuildBuilding* BuildingUpdateGuildSCmd::mutable_updates(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BuildingUpdateGuildSCmd.updates)
  return updates_.Mutable(index);
}
inline ::Cmd::GuildBuilding* BuildingUpdateGuildSCmd::add_updates() {
  // @@protoc_insertion_point(field_add:Cmd.BuildingUpdateGuildSCmd.updates)
  return updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildBuilding >&
BuildingUpdateGuildSCmd::updates() const {
  // @@protoc_insertion_point(field_list:Cmd.BuildingUpdateGuildSCmd.updates)
  return updates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildBuilding >*
BuildingUpdateGuildSCmd::mutable_updates() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BuildingUpdateGuildSCmd.updates)
  return &updates_;
}

// optional uint64 charid = 6 [default = 0];
inline bool BuildingUpdateGuildSCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BuildingUpdateGuildSCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BuildingUpdateGuildSCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BuildingUpdateGuildSCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 BuildingUpdateGuildSCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.BuildingUpdateGuildSCmd.charid)
  return charid_;
}
inline void BuildingUpdateGuildSCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuildingUpdateGuildSCmd.charid)
}

// -------------------------------------------------------------------

// QueryGuildInfoGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool QueryGuildInfoGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryGuildInfoGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryGuildInfoGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryGuildInfoGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command QueryGuildInfoGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryGuildInfoGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryGuildInfoGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryGuildInfoGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_QUERY_GUILD_INFO];
inline bool QueryGuildInfoGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryGuildInfoGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryGuildInfoGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryGuildInfoGuildSCmd::clear_param() {
  param_ = 29;
  clear_has_param();
}
inline ::Cmd::GuildSParam QueryGuildInfoGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryGuildInfoGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void QueryGuildInfoGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryGuildInfoGuildSCmd.param)
}

// optional uint64 guildid = 3 [default = 0];
inline bool QueryGuildInfoGuildSCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryGuildInfoGuildSCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryGuildInfoGuildSCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryGuildInfoGuildSCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 QueryGuildInfoGuildSCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryGuildInfoGuildSCmd.guildid)
  return guildid_;
}
inline void QueryGuildInfoGuildSCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryGuildInfoGuildSCmd.guildid)
}

// optional uint64 sceneid = 4 [default = 0];
inline bool QueryGuildInfoGuildSCmd::has_sceneid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryGuildInfoGuildSCmd::set_has_sceneid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryGuildInfoGuildSCmd::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryGuildInfoGuildSCmd::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 QueryGuildInfoGuildSCmd::sceneid() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryGuildInfoGuildSCmd.sceneid)
  return sceneid_;
}
inline void QueryGuildInfoGuildSCmd::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryGuildInfoGuildSCmd.sceneid)
}

// optional .Cmd.GuildInfo info = 5;
inline bool QueryGuildInfoGuildSCmd::has_info() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QueryGuildInfoGuildSCmd::set_has_info() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QueryGuildInfoGuildSCmd::clear_has_info() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QueryGuildInfoGuildSCmd::clear_info() {
  if (info_ != NULL) info_->::Cmd::GuildInfo::Clear();
  clear_has_info();
}
inline const ::Cmd::GuildInfo& QueryGuildInfoGuildSCmd::info() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryGuildInfoGuildSCmd.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::Cmd::GuildInfo* QueryGuildInfoGuildSCmd::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::Cmd::GuildInfo;
  // @@protoc_insertion_point(field_mutable:Cmd.QueryGuildInfoGuildSCmd.info)
  return info_;
}
inline ::Cmd::GuildInfo* QueryGuildInfoGuildSCmd::release_info() {
  clear_has_info();
  ::Cmd::GuildInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void QueryGuildInfoGuildSCmd::set_allocated_info(::Cmd::GuildInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.QueryGuildInfoGuildSCmd.info)
}

// optional bool result = 6 [default = false];
inline bool QueryGuildInfoGuildSCmd::has_result() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void QueryGuildInfoGuildSCmd::set_has_result() {
  _has_bits_[0] |= 0x00000020u;
}
inline void QueryGuildInfoGuildSCmd::clear_has_result() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void QueryGuildInfoGuildSCmd::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool QueryGuildInfoGuildSCmd::result() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryGuildInfoGuildSCmd.result)
  return result_;
}
inline void QueryGuildInfoGuildSCmd::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryGuildInfoGuildSCmd.result)
}

// -------------------------------------------------------------------

// SendWelfareGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool SendWelfareGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendWelfareGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendWelfareGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendWelfareGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command SendWelfareGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SendWelfareGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SendWelfareGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SendWelfareGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_SEND_WELFARE];
inline bool SendWelfareGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendWelfareGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendWelfareGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendWelfareGuildSCmd::clear_param() {
  param_ = 30;
  clear_has_param();
}
inline ::Cmd::GuildSParam SendWelfareGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SendWelfareGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void SendWelfareGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SendWelfareGuildSCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool SendWelfareGuildSCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendWelfareGuildSCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendWelfareGuildSCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendWelfareGuildSCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 SendWelfareGuildSCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.SendWelfareGuildSCmd.charid)
  return charid_;
}
inline void SendWelfareGuildSCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SendWelfareGuildSCmd.charid)
}

// repeated .Cmd.GuildWelfareItem items = 4;
inline int SendWelfareGuildSCmd::items_size() const {
  return items_.size();
}
inline void SendWelfareGuildSCmd::clear_items() {
  items_.Clear();
}
inline const ::Cmd::GuildWelfareItem& SendWelfareGuildSCmd::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SendWelfareGuildSCmd.items)
  return items_.Get(index);
}
inline ::Cmd::GuildWelfareItem* SendWelfareGuildSCmd::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.SendWelfareGuildSCmd.items)
  return items_.Mutable(index);
}
inline ::Cmd::GuildWelfareItem* SendWelfareGuildSCmd::add_items() {
  // @@protoc_insertion_point(field_add:Cmd.SendWelfareGuildSCmd.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildWelfareItem >&
SendWelfareGuildSCmd::items() const {
  // @@protoc_insertion_point(field_list:Cmd.SendWelfareGuildSCmd.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildWelfareItem >*
SendWelfareGuildSCmd::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SendWelfareGuildSCmd.items)
  return &items_;
}

// -------------------------------------------------------------------

// GuildChallengeItem

// optional uint32 id = 1 [default = 0];
inline bool GuildChallengeItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildChallengeItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildChallengeItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildChallengeItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GuildChallengeItem::id() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildChallengeItem.id)
  return id_;
}
inline void GuildChallengeItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildChallengeItem.id)
}

// optional uint32 progress = 2 [default = 0];
inline bool GuildChallengeItem::has_progress() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildChallengeItem::set_has_progress() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildChallengeItem::clear_has_progress() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildChallengeItem::clear_progress() {
  progress_ = 0u;
  clear_has_progress();
}
inline ::google::protobuf::uint32 GuildChallengeItem::progress() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildChallengeItem.progress)
  return progress_;
}
inline void GuildChallengeItem::set_progress(::google::protobuf::uint32 value) {
  set_has_progress();
  progress_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildChallengeItem.progress)
}

// -------------------------------------------------------------------

// ChallengeProgressGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool ChallengeProgressGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChallengeProgressGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChallengeProgressGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChallengeProgressGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command ChallengeProgressGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ChallengeProgressGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ChallengeProgressGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChallengeProgressGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_CHALLENGE_PROGRESS];
inline bool ChallengeProgressGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChallengeProgressGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChallengeProgressGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChallengeProgressGuildSCmd::clear_param() {
  param_ = 31;
  clear_has_param();
}
inline ::Cmd::GuildSParam ChallengeProgressGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ChallengeProgressGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void ChallengeProgressGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChallengeProgressGuildSCmd.param)
}

// optional uint64 guildid = 3 [default = 0];
inline bool ChallengeProgressGuildSCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChallengeProgressGuildSCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChallengeProgressGuildSCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChallengeProgressGuildSCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 ChallengeProgressGuildSCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChallengeProgressGuildSCmd.guildid)
  return guildid_;
}
inline void ChallengeProgressGuildSCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChallengeProgressGuildSCmd.guildid)
}

// optional uint64 charid = 4 [default = 0];
inline bool ChallengeProgressGuildSCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChallengeProgressGuildSCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChallengeProgressGuildSCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChallengeProgressGuildSCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ChallengeProgressGuildSCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChallengeProgressGuildSCmd.charid)
  return charid_;
}
inline void ChallengeProgressGuildSCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChallengeProgressGuildSCmd.charid)
}

// repeated .Cmd.GuildChallengeItem items = 5;
inline int ChallengeProgressGuildSCmd::items_size() const {
  return items_.size();
}
inline void ChallengeProgressGuildSCmd::clear_items() {
  items_.Clear();
}
inline const ::Cmd::GuildChallengeItem& ChallengeProgressGuildSCmd::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.ChallengeProgressGuildSCmd.items)
  return items_.Get(index);
}
inline ::Cmd::GuildChallengeItem* ChallengeProgressGuildSCmd::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.ChallengeProgressGuildSCmd.items)
  return items_.Mutable(index);
}
inline ::Cmd::GuildChallengeItem* ChallengeProgressGuildSCmd::add_items() {
  // @@protoc_insertion_point(field_add:Cmd.ChallengeProgressGuildSCmd.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallengeItem >&
ChallengeProgressGuildSCmd::items() const {
  // @@protoc_insertion_point(field_list:Cmd.ChallengeProgressGuildSCmd.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildChallengeItem >*
ChallengeProgressGuildSCmd::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.ChallengeProgressGuildSCmd.items)
  return &items_;
}

// -------------------------------------------------------------------

// GuildGM

// optional uint32 zoneid = 1 [default = 0];
inline bool GuildGM::has_zoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildGM::set_has_zoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildGM::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildGM::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 GuildGM::zoneid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildGM.zoneid)
  return zoneid_;
}
inline void GuildGM::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildGM.zoneid)
}

// optional uint32 sessionid = 2 [default = 0];
inline bool GuildGM::has_sessionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildGM::set_has_sessionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildGM::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildGM::clear_sessionid() {
  sessionid_ = 0u;
  clear_has_sessionid();
}
inline ::google::protobuf::uint32 GuildGM::sessionid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildGM.sessionid)
  return sessionid_;
}
inline void GuildGM::set_sessionid(::google::protobuf::uint32 value) {
  set_has_sessionid();
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildGM.sessionid)
}

// optional uint64 guildid = 3 [default = 0];
inline bool GuildGM::has_guildid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildGM::set_has_guildid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildGM::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildGM::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 GuildGM::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildGM.guildid)
  return guildid_;
}
inline void GuildGM::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildGM.guildid)
}

// optional uint64 charid = 4 [default = 0];
inline bool GuildGM::has_charid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildGM::set_has_charid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildGM::clear_has_charid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildGM::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GuildGM::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildGM.charid)
  return charid_;
}
inline void GuildGM::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildGM.charid)
}

// optional string name = 5;
inline bool GuildGM::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildGM::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildGM::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildGM::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GuildGM::name() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildGM.name)
  return *name_;
}
inline void GuildGM::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildGM.name)
}
inline void GuildGM::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildGM.name)
}
inline void GuildGM::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildGM.name)
}
inline ::std::string* GuildGM::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildGM.name)
  return name_;
}
inline ::std::string* GuildGM::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildGM::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildGM.name)
}

// -------------------------------------------------------------------

// GMCommandGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool GMCommandGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMCommandGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMCommandGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMCommandGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command GMCommandGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GMCommandGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GMCommandGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GMCommandGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_GM_COMMAND];
inline bool GMCommandGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMCommandGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMCommandGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMCommandGuildSCmd::clear_param() {
  param_ = 32;
  clear_has_param();
}
inline ::Cmd::GuildSParam GMCommandGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GMCommandGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void GMCommandGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GMCommandGuildSCmd.param)
}

// optional .Cmd.GuildGM info = 3;
inline bool GMCommandGuildSCmd::has_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMCommandGuildSCmd::set_has_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMCommandGuildSCmd::clear_has_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMCommandGuildSCmd::clear_info() {
  if (info_ != NULL) info_->::Cmd::GuildGM::Clear();
  clear_has_info();
}
inline const ::Cmd::GuildGM& GMCommandGuildSCmd::info() const {
  // @@protoc_insertion_point(field_get:Cmd.GMCommandGuildSCmd.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::Cmd::GuildGM* GMCommandGuildSCmd::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::Cmd::GuildGM;
  // @@protoc_insertion_point(field_mutable:Cmd.GMCommandGuildSCmd.info)
  return info_;
}
inline ::Cmd::GuildGM* GMCommandGuildSCmd::release_info() {
  clear_has_info();
  ::Cmd::GuildGM* temp = info_;
  info_ = NULL;
  return temp;
}
inline void GMCommandGuildSCmd::set_allocated_info(::Cmd::GuildGM* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GMCommandGuildSCmd.info)
}

// optional string command = 4;
inline bool GMCommandGuildSCmd::has_command() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GMCommandGuildSCmd::set_has_command() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GMCommandGuildSCmd::clear_has_command() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GMCommandGuildSCmd::clear_command() {
  if (command_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    command_->clear();
  }
  clear_has_command();
}
inline const ::std::string& GMCommandGuildSCmd::command() const {
  // @@protoc_insertion_point(field_get:Cmd.GMCommandGuildSCmd.command)
  return *command_;
}
inline void GMCommandGuildSCmd::set_command(const ::std::string& value) {
  set_has_command();
  if (command_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    command_ = new ::std::string;
  }
  command_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GMCommandGuildSCmd.command)
}
inline void GMCommandGuildSCmd::set_command(const char* value) {
  set_has_command();
  if (command_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    command_ = new ::std::string;
  }
  command_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GMCommandGuildSCmd.command)
}
inline void GMCommandGuildSCmd::set_command(const char* value, size_t size) {
  set_has_command();
  if (command_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    command_ = new ::std::string;
  }
  command_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GMCommandGuildSCmd.command)
}
inline ::std::string* GMCommandGuildSCmd::mutable_command() {
  set_has_command();
  if (command_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    command_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GMCommandGuildSCmd.command)
  return command_;
}
inline ::std::string* GMCommandGuildSCmd::release_command() {
  clear_has_command();
  if (command_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = command_;
    command_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GMCommandGuildSCmd::set_allocated_command(::std::string* command) {
  if (command_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete command_;
  }
  if (command) {
    set_has_command();
    command_ = command;
  } else {
    clear_has_command();
    command_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GMCommandGuildSCmd.command)
}

// -------------------------------------------------------------------

// GMCommandRespondGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool GMCommandRespondGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMCommandRespondGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMCommandRespondGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMCommandRespondGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command GMCommandRespondGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GMCommandRespondGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GMCommandRespondGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GMCommandRespondGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_GM_RESPOND];
inline bool GMCommandRespondGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMCommandRespondGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMCommandRespondGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMCommandRespondGuildSCmd::clear_param() {
  param_ = 33;
  clear_has_param();
}
inline ::Cmd::GuildSParam GMCommandRespondGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GMCommandRespondGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void GMCommandRespondGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GMCommandRespondGuildSCmd.param)
}

// optional .Cmd.GuildGM info = 3;
inline bool GMCommandRespondGuildSCmd::has_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMCommandRespondGuildSCmd::set_has_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMCommandRespondGuildSCmd::clear_has_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMCommandRespondGuildSCmd::clear_info() {
  if (info_ != NULL) info_->::Cmd::GuildGM::Clear();
  clear_has_info();
}
inline const ::Cmd::GuildGM& GMCommandRespondGuildSCmd::info() const {
  // @@protoc_insertion_point(field_get:Cmd.GMCommandRespondGuildSCmd.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::Cmd::GuildGM* GMCommandRespondGuildSCmd::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::Cmd::GuildGM;
  // @@protoc_insertion_point(field_mutable:Cmd.GMCommandRespondGuildSCmd.info)
  return info_;
}
inline ::Cmd::GuildGM* GMCommandRespondGuildSCmd::release_info() {
  clear_has_info();
  ::Cmd::GuildGM* temp = info_;
  info_ = NULL;
  return temp;
}
inline void GMCommandRespondGuildSCmd::set_allocated_info(::Cmd::GuildGM* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GMCommandRespondGuildSCmd.info)
}

// -------------------------------------------------------------------

// BuildingEffectGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool BuildingEffectGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuildingEffectGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuildingEffectGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuildingEffectGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command BuildingEffectGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.BuildingEffectGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void BuildingEffectGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuildingEffectGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_BUILDINGEFFECT];
inline bool BuildingEffectGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuildingEffectGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuildingEffectGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuildingEffectGuildSCmd::clear_param() {
  param_ = 34;
  clear_has_param();
}
inline ::Cmd::GuildSParam BuildingEffectGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.BuildingEffectGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void BuildingEffectGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuildingEffectGuildSCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool BuildingEffectGuildSCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuildingEffectGuildSCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuildingEffectGuildSCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuildingEffectGuildSCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 BuildingEffectGuildSCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.BuildingEffectGuildSCmd.charid)
  return charid_;
}
inline void BuildingEffectGuildSCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuildingEffectGuildSCmd.charid)
}

// -------------------------------------------------------------------

// ArtifactUpdateGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool ArtifactUpdateGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArtifactUpdateGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArtifactUpdateGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArtifactUpdateGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command ArtifactUpdateGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ArtifactUpdateGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ArtifactUpdateGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ArtifactUpdateGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_ARTIFACT_UPDATE];
inline bool ArtifactUpdateGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArtifactUpdateGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArtifactUpdateGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArtifactUpdateGuildSCmd::clear_param() {
  param_ = 35;
  clear_has_param();
}
inline ::Cmd::GuildSParam ArtifactUpdateGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ArtifactUpdateGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void ArtifactUpdateGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ArtifactUpdateGuildSCmd.param)
}

// optional uint64 charid = 4 [default = 0];
inline bool ArtifactUpdateGuildSCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ArtifactUpdateGuildSCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ArtifactUpdateGuildSCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ArtifactUpdateGuildSCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ArtifactUpdateGuildSCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.ArtifactUpdateGuildSCmd.charid)
  return charid_;
}
inline void ArtifactUpdateGuildSCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ArtifactUpdateGuildSCmd.charid)
}

// optional uint64 guildid = 5 [default = 0];
inline bool ArtifactUpdateGuildSCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ArtifactUpdateGuildSCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ArtifactUpdateGuildSCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ArtifactUpdateGuildSCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 ArtifactUpdateGuildSCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.ArtifactUpdateGuildSCmd.guildid)
  return guildid_;
}
inline void ArtifactUpdateGuildSCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ArtifactUpdateGuildSCmd.guildid)
}

// optional uint64 sceneid = 6 [default = 0];
inline bool ArtifactUpdateGuildSCmd::has_sceneid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ArtifactUpdateGuildSCmd::set_has_sceneid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ArtifactUpdateGuildSCmd::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ArtifactUpdateGuildSCmd::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 ArtifactUpdateGuildSCmd::sceneid() const {
  // @@protoc_insertion_point(field_get:Cmd.ArtifactUpdateGuildSCmd.sceneid)
  return sceneid_;
}
inline void ArtifactUpdateGuildSCmd::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ArtifactUpdateGuildSCmd.sceneid)
}

// repeated .Cmd.GuildArtifactItem itemupdates = 7;
inline int ArtifactUpdateGuildSCmd::itemupdates_size() const {
  return itemupdates_.size();
}
inline void ArtifactUpdateGuildSCmd::clear_itemupdates() {
  itemupdates_.Clear();
}
inline const ::Cmd::GuildArtifactItem& ArtifactUpdateGuildSCmd::itemupdates(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.ArtifactUpdateGuildSCmd.itemupdates)
  return itemupdates_.Get(index);
}
inline ::Cmd::GuildArtifactItem* ArtifactUpdateGuildSCmd::mutable_itemupdates(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.ArtifactUpdateGuildSCmd.itemupdates)
  return itemupdates_.Mutable(index);
}
inline ::Cmd::GuildArtifactItem* ArtifactUpdateGuildSCmd::add_itemupdates() {
  // @@protoc_insertion_point(field_add:Cmd.ArtifactUpdateGuildSCmd.itemupdates)
  return itemupdates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactItem >&
ArtifactUpdateGuildSCmd::itemupdates() const {
  // @@protoc_insertion_point(field_list:Cmd.ArtifactUpdateGuildSCmd.itemupdates)
  return itemupdates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildArtifactItem >*
ArtifactUpdateGuildSCmd::mutable_itemupdates() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.ArtifactUpdateGuildSCmd.itemupdates)
  return &itemupdates_;
}

// repeated string itemdels = 8;
inline int ArtifactUpdateGuildSCmd::itemdels_size() const {
  return itemdels_.size();
}
inline void ArtifactUpdateGuildSCmd::clear_itemdels() {
  itemdels_.Clear();
}
inline const ::std::string& ArtifactUpdateGuildSCmd::itemdels(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.ArtifactUpdateGuildSCmd.itemdels)
  return itemdels_.Get(index);
}
inline ::std::string* ArtifactUpdateGuildSCmd::mutable_itemdels(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.ArtifactUpdateGuildSCmd.itemdels)
  return itemdels_.Mutable(index);
}
inline void ArtifactUpdateGuildSCmd::set_itemdels(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Cmd.ArtifactUpdateGuildSCmd.itemdels)
  itemdels_.Mutable(index)->assign(value);
}
inline void ArtifactUpdateGuildSCmd::set_itemdels(int index, const char* value) {
  itemdels_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.ArtifactUpdateGuildSCmd.itemdels)
}
inline void ArtifactUpdateGuildSCmd::set_itemdels(int index, const char* value, size_t size) {
  itemdels_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.ArtifactUpdateGuildSCmd.itemdels)
}
inline ::std::string* ArtifactUpdateGuildSCmd::add_itemdels() {
  return itemdels_.Add();
}
inline void ArtifactUpdateGuildSCmd::add_itemdels(const ::std::string& value) {
  itemdels_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Cmd.ArtifactUpdateGuildSCmd.itemdels)
}
inline void ArtifactUpdateGuildSCmd::add_itemdels(const char* value) {
  itemdels_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Cmd.ArtifactUpdateGuildSCmd.itemdels)
}
inline void ArtifactUpdateGuildSCmd::add_itemdels(const char* value, size_t size) {
  itemdels_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Cmd.ArtifactUpdateGuildSCmd.itemdels)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ArtifactUpdateGuildSCmd::itemdels() const {
  // @@protoc_insertion_point(field_list:Cmd.ArtifactUpdateGuildSCmd.itemdels)
  return itemdels_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ArtifactUpdateGuildSCmd::mutable_itemdels() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.ArtifactUpdateGuildSCmd.itemdels)
  return &itemdels_;
}

// -------------------------------------------------------------------

// GuildArtifactQuestGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool GuildArtifactQuestGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildArtifactQuestGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildArtifactQuestGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildArtifactQuestGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command GuildArtifactQuestGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildArtifactQuestGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildArtifactQuestGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildArtifactQuestGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_QUEST_ARTIFACT];
inline bool GuildArtifactQuestGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildArtifactQuestGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildArtifactQuestGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildArtifactQuestGuildSCmd::clear_param() {
  param_ = 36;
  clear_has_param();
}
inline ::Cmd::GuildSParam GuildArtifactQuestGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildArtifactQuestGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void GuildArtifactQuestGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildArtifactQuestGuildSCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool GuildArtifactQuestGuildSCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildArtifactQuestGuildSCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildArtifactQuestGuildSCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildArtifactQuestGuildSCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GuildArtifactQuestGuildSCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildArtifactQuestGuildSCmd.charid)
  return charid_;
}
inline void GuildArtifactQuestGuildSCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildArtifactQuestGuildSCmd.charid)
}

// optional .Cmd.GuildArtifactQuest quest = 4;
inline bool GuildArtifactQuestGuildSCmd::has_quest() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildArtifactQuestGuildSCmd::set_has_quest() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildArtifactQuestGuildSCmd::clear_has_quest() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildArtifactQuestGuildSCmd::clear_quest() {
  if (quest_ != NULL) quest_->::Cmd::GuildArtifactQuest::Clear();
  clear_has_quest();
}
inline const ::Cmd::GuildArtifactQuest& GuildArtifactQuestGuildSCmd::quest() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildArtifactQuestGuildSCmd.quest)
  return quest_ != NULL ? *quest_ : *default_instance_->quest_;
}
inline ::Cmd::GuildArtifactQuest* GuildArtifactQuestGuildSCmd::mutable_quest() {
  set_has_quest();
  if (quest_ == NULL) quest_ = new ::Cmd::GuildArtifactQuest;
  // @@protoc_insertion_point(field_mutable:Cmd.GuildArtifactQuestGuildSCmd.quest)
  return quest_;
}
inline ::Cmd::GuildArtifactQuest* GuildArtifactQuestGuildSCmd::release_quest() {
  clear_has_quest();
  ::Cmd::GuildArtifactQuest* temp = quest_;
  quest_ = NULL;
  return temp;
}
inline void GuildArtifactQuestGuildSCmd::set_allocated_quest(::Cmd::GuildArtifactQuest* quest) {
  delete quest_;
  quest_ = quest;
  if (quest) {
    set_has_quest();
  } else {
    clear_has_quest();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildArtifactQuestGuildSCmd.quest)
}

// -------------------------------------------------------------------

// QueryTreasureGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool QueryTreasureGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryTreasureGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryTreasureGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryTreasureGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command QueryTreasureGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryTreasureGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryTreasureGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryTreasureGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_TREASURE_QUERY];
inline bool QueryTreasureGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryTreasureGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryTreasureGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryTreasureGuildSCmd::clear_param() {
  param_ = 37;
  clear_has_param();
}
inline ::Cmd::GuildSParam QueryTreasureGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryTreasureGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void QueryTreasureGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryTreasureGuildSCmd.param)
}

// optional uint64 guildid = 3 [default = 0];
inline bool QueryTreasureGuildSCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryTreasureGuildSCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryTreasureGuildSCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryTreasureGuildSCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 QueryTreasureGuildSCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryTreasureGuildSCmd.guildid)
  return guildid_;
}
inline void QueryTreasureGuildSCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryTreasureGuildSCmd.guildid)
}

// optional uint32 sceneid = 4 [default = 0];
inline bool QueryTreasureGuildSCmd::has_sceneid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryTreasureGuildSCmd::set_has_sceneid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryTreasureGuildSCmd::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryTreasureGuildSCmd::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 QueryTreasureGuildSCmd::sceneid() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryTreasureGuildSCmd.sceneid)
  return sceneid_;
}
inline void QueryTreasureGuildSCmd::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryTreasureGuildSCmd.sceneid)
}

// optional bool result = 5 [default = false];
inline bool QueryTreasureGuildSCmd::has_result() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QueryTreasureGuildSCmd::set_has_result() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QueryTreasureGuildSCmd::clear_has_result() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QueryTreasureGuildSCmd::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool QueryTreasureGuildSCmd::result() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryTreasureGuildSCmd.result)
  return result_;
}
inline void QueryTreasureGuildSCmd::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryTreasureGuildSCmd.result)
}

// repeated .Cmd.GuildTreasure treasures = 6;
inline int QueryTreasureGuildSCmd::treasures_size() const {
  return treasures_.size();
}
inline void QueryTreasureGuildSCmd::clear_treasures() {
  treasures_.Clear();
}
inline const ::Cmd::GuildTreasure& QueryTreasureGuildSCmd::treasures(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QueryTreasureGuildSCmd.treasures)
  return treasures_.Get(index);
}
inline ::Cmd::GuildTreasure* QueryTreasureGuildSCmd::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.QueryTreasureGuildSCmd.treasures)
  return treasures_.Mutable(index);
}
inline ::Cmd::GuildTreasure* QueryTreasureGuildSCmd::add_treasures() {
  // @@protoc_insertion_point(field_add:Cmd.QueryTreasureGuildSCmd.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildTreasure >&
QueryTreasureGuildSCmd::treasures() const {
  // @@protoc_insertion_point(field_list:Cmd.QueryTreasureGuildSCmd.treasures)
  return treasures_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildTreasure >*
QueryTreasureGuildSCmd::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QueryTreasureGuildSCmd.treasures)
  return &treasures_;
}

// optional uint32 bcoin_count = 7 [default = 0];
inline bool QueryTreasureGuildSCmd::has_bcoin_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void QueryTreasureGuildSCmd::set_has_bcoin_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void QueryTreasureGuildSCmd::clear_has_bcoin_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void QueryTreasureGuildSCmd::clear_bcoin_count() {
  bcoin_count_ = 0u;
  clear_has_bcoin_count();
}
inline ::google::protobuf::uint32 QueryTreasureGuildSCmd::bcoin_count() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryTreasureGuildSCmd.bcoin_count)
  return bcoin_count_;
}
inline void QueryTreasureGuildSCmd::set_bcoin_count(::google::protobuf::uint32 value) {
  set_has_bcoin_count();
  bcoin_count_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryTreasureGuildSCmd.bcoin_count)
}

// optional uint32 asset_count = 8 [default = 0];
inline bool QueryTreasureGuildSCmd::has_asset_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void QueryTreasureGuildSCmd::set_has_asset_count() {
  _has_bits_[0] |= 0x00000080u;
}
inline void QueryTreasureGuildSCmd::clear_has_asset_count() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void QueryTreasureGuildSCmd::clear_asset_count() {
  asset_count_ = 0u;
  clear_has_asset_count();
}
inline ::google::protobuf::uint32 QueryTreasureGuildSCmd::asset_count() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryTreasureGuildSCmd.asset_count)
  return asset_count_;
}
inline void QueryTreasureGuildSCmd::set_asset_count(::google::protobuf::uint32 value) {
  set_has_asset_count();
  asset_count_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryTreasureGuildSCmd.asset_count)
}

// -------------------------------------------------------------------

// GvgUserPartInGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool GvgUserPartInGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GvgUserPartInGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GvgUserPartInGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GvgUserPartInGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command GvgUserPartInGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgUserPartInGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GvgUserPartInGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgUserPartInGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_GVG_USER_PARTIN];
inline bool GvgUserPartInGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GvgUserPartInGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GvgUserPartInGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GvgUserPartInGuildSCmd::clear_param() {
  param_ = 38;
  clear_has_param();
}
inline ::Cmd::GuildSParam GvgUserPartInGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgUserPartInGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void GvgUserPartInGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgUserPartInGuildSCmd.param)
}

// required uint64 guildid = 3;
inline bool GvgUserPartInGuildSCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GvgUserPartInGuildSCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GvgUserPartInGuildSCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GvgUserPartInGuildSCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 GvgUserPartInGuildSCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgUserPartInGuildSCmd.guildid)
  return guildid_;
}
inline void GvgUserPartInGuildSCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgUserPartInGuildSCmd.guildid)
}

// required uint64 charid = 4;
inline bool GvgUserPartInGuildSCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GvgUserPartInGuildSCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GvgUserPartInGuildSCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GvgUserPartInGuildSCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GvgUserPartInGuildSCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgUserPartInGuildSCmd.charid)
  return charid_;
}
inline void GvgUserPartInGuildSCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgUserPartInGuildSCmd.charid)
}

// -------------------------------------------------------------------

// TreasureResultNtfGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool TreasureResultNtfGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TreasureResultNtfGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TreasureResultNtfGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TreasureResultNtfGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command TreasureResultNtfGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TreasureResultNtfGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TreasureResultNtfGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TreasureResultNtfGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_TREASURE_RESULTNTF];
inline bool TreasureResultNtfGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TreasureResultNtfGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TreasureResultNtfGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TreasureResultNtfGuildSCmd::clear_param() {
  param_ = 39;
  clear_has_param();
}
inline ::Cmd::GuildSParam TreasureResultNtfGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TreasureResultNtfGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void TreasureResultNtfGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TreasureResultNtfGuildSCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool TreasureResultNtfGuildSCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TreasureResultNtfGuildSCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TreasureResultNtfGuildSCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TreasureResultNtfGuildSCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 TreasureResultNtfGuildSCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.TreasureResultNtfGuildSCmd.charid)
  return charid_;
}
inline void TreasureResultNtfGuildSCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TreasureResultNtfGuildSCmd.charid)
}

// optional .Cmd.TreasureResult result = 4;
inline bool TreasureResultNtfGuildSCmd::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TreasureResultNtfGuildSCmd::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TreasureResultNtfGuildSCmd::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TreasureResultNtfGuildSCmd::clear_result() {
  if (result_ != NULL) result_->::Cmd::TreasureResult::Clear();
  clear_has_result();
}
inline const ::Cmd::TreasureResult& TreasureResultNtfGuildSCmd::result() const {
  // @@protoc_insertion_point(field_get:Cmd.TreasureResultNtfGuildSCmd.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::Cmd::TreasureResult* TreasureResultNtfGuildSCmd::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::Cmd::TreasureResult;
  // @@protoc_insertion_point(field_mutable:Cmd.TreasureResultNtfGuildSCmd.result)
  return result_;
}
inline ::Cmd::TreasureResult* TreasureResultNtfGuildSCmd::release_result() {
  clear_has_result();
  ::Cmd::TreasureResult* temp = result_;
  result_ = NULL;
  return temp;
}
inline void TreasureResultNtfGuildSCmd::set_allocated_result(::Cmd::TreasureResult* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TreasureResultNtfGuildSCmd.result)
}

// -------------------------------------------------------------------

// UpdateCityStateGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool UpdateCityStateGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateCityStateGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateCityStateGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateCityStateGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command UpdateCityStateGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateCityStateGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UpdateCityStateGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateCityStateGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_UPDATE_CITYSTATE];
inline bool UpdateCityStateGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateCityStateGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateCityStateGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateCityStateGuildSCmd::clear_param() {
  param_ = 41;
  clear_has_param();
}
inline ::Cmd::GuildSParam UpdateCityStateGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateCityStateGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void UpdateCityStateGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateCityStateGuildSCmd.param)
}

// repeated .Cmd.CityShowInfo infos = 3;
inline int UpdateCityStateGuildSCmd::infos_size() const {
  return infos_.size();
}
inline void UpdateCityStateGuildSCmd::clear_infos() {
  infos_.Clear();
}
inline const ::Cmd::CityShowInfo& UpdateCityStateGuildSCmd::infos(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateCityStateGuildSCmd.infos)
  return infos_.Get(index);
}
inline ::Cmd::CityShowInfo* UpdateCityStateGuildSCmd::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.UpdateCityStateGuildSCmd.infos)
  return infos_.Mutable(index);
}
inline ::Cmd::CityShowInfo* UpdateCityStateGuildSCmd::add_infos() {
  // @@protoc_insertion_point(field_add:Cmd.UpdateCityStateGuildSCmd.infos)
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::CityShowInfo >&
UpdateCityStateGuildSCmd::infos() const {
  // @@protoc_insertion_point(field_list:Cmd.UpdateCityStateGuildSCmd.infos)
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::CityShowInfo >*
UpdateCityStateGuildSCmd::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UpdateCityStateGuildSCmd.infos)
  return &infos_;
}

// -------------------------------------------------------------------

// GvgOpenToServerGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool GvgOpenToServerGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GvgOpenToServerGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GvgOpenToServerGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GvgOpenToServerGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command GvgOpenToServerGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgOpenToServerGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GvgOpenToServerGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgOpenToServerGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_OPEN_GVG];
inline bool GvgOpenToServerGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GvgOpenToServerGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GvgOpenToServerGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GvgOpenToServerGuildSCmd::clear_param() {
  param_ = 40;
  clear_has_param();
}
inline ::Cmd::GuildSParam GvgOpenToServerGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgOpenToServerGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void GvgOpenToServerGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgOpenToServerGuildSCmd.param)
}

// optional bool fire = 3 [default = false];
inline bool GvgOpenToServerGuildSCmd::has_fire() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GvgOpenToServerGuildSCmd::set_has_fire() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GvgOpenToServerGuildSCmd::clear_has_fire() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GvgOpenToServerGuildSCmd::clear_fire() {
  fire_ = false;
  clear_has_fire();
}
inline bool GvgOpenToServerGuildSCmd::fire() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgOpenToServerGuildSCmd.fire)
  return fire_;
}
inline void GvgOpenToServerGuildSCmd::set_fire(bool value) {
  set_has_fire();
  fire_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgOpenToServerGuildSCmd.fire)
}

// -------------------------------------------------------------------

// ShopBuyItemGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool ShopBuyItemGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShopBuyItemGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShopBuyItemGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShopBuyItemGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command ShopBuyItemGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ShopBuyItemGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ShopBuyItemGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ShopBuyItemGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_SHOP_BUY_ITEM];
inline bool ShopBuyItemGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShopBuyItemGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShopBuyItemGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShopBuyItemGuildSCmd::clear_param() {
  param_ = 44;
  clear_has_param();
}
inline ::Cmd::GuildSParam ShopBuyItemGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ShopBuyItemGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void ShopBuyItemGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ShopBuyItemGuildSCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool ShopBuyItemGuildSCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShopBuyItemGuildSCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShopBuyItemGuildSCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShopBuyItemGuildSCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ShopBuyItemGuildSCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.ShopBuyItemGuildSCmd.charid)
  return charid_;
}
inline void ShopBuyItemGuildSCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ShopBuyItemGuildSCmd.charid)
}

// optional uint32 id = 4 [default = 0];
inline bool ShopBuyItemGuildSCmd::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShopBuyItemGuildSCmd::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShopBuyItemGuildSCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShopBuyItemGuildSCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ShopBuyItemGuildSCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.ShopBuyItemGuildSCmd.id)
  return id_;
}
inline void ShopBuyItemGuildSCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ShopBuyItemGuildSCmd.id)
}

// optional uint32 count = 5 [default = 0];
inline bool ShopBuyItemGuildSCmd::has_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ShopBuyItemGuildSCmd::set_has_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ShopBuyItemGuildSCmd::clear_has_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ShopBuyItemGuildSCmd::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 ShopBuyItemGuildSCmd::count() const {
  // @@protoc_insertion_point(field_get:Cmd.ShopBuyItemGuildSCmd.count)
  return count_;
}
inline void ShopBuyItemGuildSCmd::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ShopBuyItemGuildSCmd.count)
}

// -------------------------------------------------------------------

// JoinSuperGvgGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool JoinSuperGvgGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinSuperGvgGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinSuperGvgGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinSuperGvgGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command JoinSuperGvgGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.JoinSuperGvgGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void JoinSuperGvgGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.JoinSuperGvgGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_JOINSUPERGVG_REQ];
inline bool JoinSuperGvgGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinSuperGvgGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinSuperGvgGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinSuperGvgGuildSCmd::clear_param() {
  param_ = 42;
  clear_has_param();
}
inline ::Cmd::GuildSParam JoinSuperGvgGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.JoinSuperGvgGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void JoinSuperGvgGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.JoinSuperGvgGuildSCmd.param)
}

// required uint64 guildid = 3;
inline bool JoinSuperGvgGuildSCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JoinSuperGvgGuildSCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JoinSuperGvgGuildSCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JoinSuperGvgGuildSCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 JoinSuperGvgGuildSCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.JoinSuperGvgGuildSCmd.guildid)
  return guildid_;
}
inline void JoinSuperGvgGuildSCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.JoinSuperGvgGuildSCmd.guildid)
}

// optional uint32 supergvgtime = 4 [default = 0];
inline bool JoinSuperGvgGuildSCmd::has_supergvgtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JoinSuperGvgGuildSCmd::set_has_supergvgtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JoinSuperGvgGuildSCmd::clear_has_supergvgtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JoinSuperGvgGuildSCmd::clear_supergvgtime() {
  supergvgtime_ = 0u;
  clear_has_supergvgtime();
}
inline ::google::protobuf::uint32 JoinSuperGvgGuildSCmd::supergvgtime() const {
  // @@protoc_insertion_point(field_get:Cmd.JoinSuperGvgGuildSCmd.supergvgtime)
  return supergvgtime_;
}
inline void JoinSuperGvgGuildSCmd::set_supergvgtime(::google::protobuf::uint32 value) {
  set_has_supergvgtime();
  supergvgtime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.JoinSuperGvgGuildSCmd.supergvgtime)
}

// -------------------------------------------------------------------

// EndSuperGvgGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool EndSuperGvgGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EndSuperGvgGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EndSuperGvgGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EndSuperGvgGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command EndSuperGvgGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.EndSuperGvgGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void EndSuperGvgGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EndSuperGvgGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_SUPERGVG_END];
inline bool EndSuperGvgGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EndSuperGvgGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EndSuperGvgGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EndSuperGvgGuildSCmd::clear_param() {
  param_ = 43;
  clear_has_param();
}
inline ::Cmd::GuildSParam EndSuperGvgGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.EndSuperGvgGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void EndSuperGvgGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EndSuperGvgGuildSCmd.param)
}

// required uint64 guildid = 3;
inline bool EndSuperGvgGuildSCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EndSuperGvgGuildSCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EndSuperGvgGuildSCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EndSuperGvgGuildSCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 EndSuperGvgGuildSCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.EndSuperGvgGuildSCmd.guildid)
  return guildid_;
}
inline void EndSuperGvgGuildSCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EndSuperGvgGuildSCmd.guildid)
}

// required uint32 rank = 4;
inline bool EndSuperGvgGuildSCmd::has_rank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EndSuperGvgGuildSCmd::set_has_rank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EndSuperGvgGuildSCmd::clear_has_rank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EndSuperGvgGuildSCmd::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 EndSuperGvgGuildSCmd::rank() const {
  // @@protoc_insertion_point(field_get:Cmd.EndSuperGvgGuildSCmd.rank)
  return rank_;
}
inline void EndSuperGvgGuildSCmd::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EndSuperGvgGuildSCmd.rank)
}

// -------------------------------------------------------------------

// UpdateCityGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool UpdateCityGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateCityGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateCityGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateCityGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command UpdateCityGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateCityGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UpdateCityGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateCityGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_UPDATE_CITY];
inline bool UpdateCityGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateCityGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateCityGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateCityGuildSCmd::clear_param() {
  param_ = 46;
  clear_has_param();
}
inline ::Cmd::GuildSParam UpdateCityGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateCityGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void UpdateCityGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateCityGuildSCmd.param)
}

// optional uint64 guildid = 3 [default = 0];
inline bool UpdateCityGuildSCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateCityGuildSCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateCityGuildSCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateCityGuildSCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 UpdateCityGuildSCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateCityGuildSCmd.guildid)
  return guildid_;
}
inline void UpdateCityGuildSCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateCityGuildSCmd.guildid)
}

// optional uint32 cityid = 4 [default = 0];
inline bool UpdateCityGuildSCmd::has_cityid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateCityGuildSCmd::set_has_cityid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateCityGuildSCmd::clear_has_cityid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateCityGuildSCmd::clear_cityid() {
  cityid_ = 0u;
  clear_has_cityid();
}
inline ::google::protobuf::uint32 UpdateCityGuildSCmd::cityid() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateCityGuildSCmd.cityid)
  return cityid_;
}
inline void UpdateCityGuildSCmd::set_cityid(::google::protobuf::uint32 value) {
  set_has_cityid();
  cityid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateCityGuildSCmd.cityid)
}

// optional bool add = 5 [default = false];
inline bool UpdateCityGuildSCmd::has_add() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UpdateCityGuildSCmd::set_has_add() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UpdateCityGuildSCmd::clear_has_add() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UpdateCityGuildSCmd::clear_add() {
  add_ = false;
  clear_has_add();
}
inline bool UpdateCityGuildSCmd::add() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateCityGuildSCmd.add)
  return add_;
}
inline void UpdateCityGuildSCmd::set_add(bool value) {
  set_has_add();
  add_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateCityGuildSCmd.add)
}

// -------------------------------------------------------------------

// GvgResultInfo

// required uint32 cityid = 1;
inline bool GvgResultInfo::has_cityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GvgResultInfo::set_has_cityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GvgResultInfo::clear_has_cityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GvgResultInfo::clear_cityid() {
  cityid_ = 0u;
  clear_has_cityid();
}
inline ::google::protobuf::uint32 GvgResultInfo::cityid() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgResultInfo.cityid)
  return cityid_;
}
inline void GvgResultInfo::set_cityid(::google::protobuf::uint32 value) {
  set_has_cityid();
  cityid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgResultInfo.cityid)
}

// optional uint64 guildid = 2;
inline bool GvgResultInfo::has_guildid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GvgResultInfo::set_has_guildid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GvgResultInfo::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GvgResultInfo::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 GvgResultInfo::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgResultInfo.guildid)
  return guildid_;
}
inline void GvgResultInfo::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgResultInfo.guildid)
}

// optional string guildname = 3;
inline bool GvgResultInfo::has_guildname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GvgResultInfo::set_has_guildname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GvgResultInfo::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GvgResultInfo::clear_guildname() {
  if (guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_->clear();
  }
  clear_has_guildname();
}
inline const ::std::string& GvgResultInfo::guildname() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgResultInfo.guildname)
  return *guildname_;
}
inline void GvgResultInfo::set_guildname(const ::std::string& value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GvgResultInfo.guildname)
}
inline void GvgResultInfo::set_guildname(const char* value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GvgResultInfo.guildname)
}
inline void GvgResultInfo::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GvgResultInfo.guildname)
}
inline ::std::string* GvgResultInfo::mutable_guildname() {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GvgResultInfo.guildname)
  return guildname_;
}
inline ::std::string* GvgResultInfo::release_guildname() {
  clear_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guildname_;
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GvgResultInfo::set_allocated_guildname(::std::string* guildname) {
  if (guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guildname_;
  }
  if (guildname) {
    set_has_guildname();
    guildname_ = guildname;
  } else {
    clear_has_guildname();
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GvgResultInfo.guildname)
}

// optional string leadername = 4;
inline bool GvgResultInfo::has_leadername() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GvgResultInfo::set_has_leadername() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GvgResultInfo::clear_has_leadername() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GvgResultInfo::clear_leadername() {
  if (leadername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leadername_->clear();
  }
  clear_has_leadername();
}
inline const ::std::string& GvgResultInfo::leadername() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgResultInfo.leadername)
  return *leadername_;
}
inline void GvgResultInfo::set_leadername(const ::std::string& value) {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leadername_ = new ::std::string;
  }
  leadername_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GvgResultInfo.leadername)
}
inline void GvgResultInfo::set_leadername(const char* value) {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leadername_ = new ::std::string;
  }
  leadername_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GvgResultInfo.leadername)
}
inline void GvgResultInfo::set_leadername(const char* value, size_t size) {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leadername_ = new ::std::string;
  }
  leadername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GvgResultInfo.leadername)
}
inline ::std::string* GvgResultInfo::mutable_leadername() {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leadername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GvgResultInfo.leadername)
  return leadername_;
}
inline ::std::string* GvgResultInfo::release_leadername() {
  clear_has_leadername();
  if (leadername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = leadername_;
    leadername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GvgResultInfo::set_allocated_leadername(::std::string* leadername) {
  if (leadername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete leadername_;
  }
  if (leadername) {
    set_has_leadername();
    leadername_ = leadername;
  } else {
    clear_has_leadername();
    leadername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GvgResultInfo.leadername)
}

// optional bool perfect = 5 [default = false];
inline bool GvgResultInfo::has_perfect() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GvgResultInfo::set_has_perfect() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GvgResultInfo::clear_has_perfect() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GvgResultInfo::clear_perfect() {
  perfect_ = false;
  clear_has_perfect();
}
inline bool GvgResultInfo::perfect() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgResultInfo.perfect)
  return perfect_;
}
inline void GvgResultInfo::set_perfect(bool value) {
  set_has_perfect();
  perfect_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgResultInfo.perfect)
}

// optional uint32 times = 6 [default = 0];
inline bool GvgResultInfo::has_times() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GvgResultInfo::set_has_times() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GvgResultInfo::clear_has_times() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GvgResultInfo::clear_times() {
  times_ = 0u;
  clear_has_times();
}
inline ::google::protobuf::uint32 GvgResultInfo::times() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgResultInfo.times)
  return times_;
}
inline void GvgResultInfo::set_times(::google::protobuf::uint32 value) {
  set_has_times();
  times_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgResultInfo.times)
}

// -------------------------------------------------------------------

// GvgResultGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool GvgResultGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GvgResultGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GvgResultGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GvgResultGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command GvgResultGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgResultGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GvgResultGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgResultGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_GVG_RESULT];
inline bool GvgResultGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GvgResultGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GvgResultGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GvgResultGuildSCmd::clear_param() {
  param_ = 45;
  clear_has_param();
}
inline ::Cmd::GuildSParam GvgResultGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgResultGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void GvgResultGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgResultGuildSCmd.param)
}

// repeated .Cmd.GvgResultInfo infos = 3;
inline int GvgResultGuildSCmd::infos_size() const {
  return infos_.size();
}
inline void GvgResultGuildSCmd::clear_infos() {
  infos_.Clear();
}
inline const ::Cmd::GvgResultInfo& GvgResultGuildSCmd::infos(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GvgResultGuildSCmd.infos)
  return infos_.Get(index);
}
inline ::Cmd::GvgResultInfo* GvgResultGuildSCmd::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GvgResultGuildSCmd.infos)
  return infos_.Mutable(index);
}
inline ::Cmd::GvgResultInfo* GvgResultGuildSCmd::add_infos() {
  // @@protoc_insertion_point(field_add:Cmd.GvgResultGuildSCmd.infos)
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GvgResultInfo >&
GvgResultGuildSCmd::infos() const {
  // @@protoc_insertion_point(field_list:Cmd.GvgResultGuildSCmd.infos)
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GvgResultInfo >*
GvgResultGuildSCmd::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GvgResultGuildSCmd.infos)
  return &infos_;
}

// -------------------------------------------------------------------

// GuildBrocastMailGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool GuildBrocastMailGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildBrocastMailGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildBrocastMailGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildBrocastMailGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command GuildBrocastMailGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildBrocastMailGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildBrocastMailGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildBrocastMailGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_GUILD_MAIL];
inline bool GuildBrocastMailGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildBrocastMailGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildBrocastMailGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildBrocastMailGuildSCmd::clear_param() {
  param_ = 48;
  clear_has_param();
}
inline ::Cmd::GuildSParam GuildBrocastMailGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildBrocastMailGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void GuildBrocastMailGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildBrocastMailGuildSCmd.param)
}

// required uint64 guildid = 3;
inline bool GuildBrocastMailGuildSCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildBrocastMailGuildSCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildBrocastMailGuildSCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildBrocastMailGuildSCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 GuildBrocastMailGuildSCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildBrocastMailGuildSCmd.guildid)
  return guildid_;
}
inline void GuildBrocastMailGuildSCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildBrocastMailGuildSCmd.guildid)
}

// optional uint32 mailid = 4 [default = 0];
inline bool GuildBrocastMailGuildSCmd::has_mailid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildBrocastMailGuildSCmd::set_has_mailid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildBrocastMailGuildSCmd::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildBrocastMailGuildSCmd::clear_mailid() {
  mailid_ = 0u;
  clear_has_mailid();
}
inline ::google::protobuf::uint32 GuildBrocastMailGuildSCmd::mailid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildBrocastMailGuildSCmd.mailid)
  return mailid_;
}
inline void GuildBrocastMailGuildSCmd::set_mailid(::google::protobuf::uint32 value) {
  set_has_mailid();
  mailid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildBrocastMailGuildSCmd.mailid)
}

// repeated .Cmd.ItemInfo items = 5;
inline int GuildBrocastMailGuildSCmd::items_size() const {
  return items_.size();
}
inline void GuildBrocastMailGuildSCmd::clear_items() {
  items_.Clear();
}
inline const ::Cmd::ItemInfo& GuildBrocastMailGuildSCmd::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildBrocastMailGuildSCmd.items)
  return items_.Get(index);
}
inline ::Cmd::ItemInfo* GuildBrocastMailGuildSCmd::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildBrocastMailGuildSCmd.items)
  return items_.Mutable(index);
}
inline ::Cmd::ItemInfo* GuildBrocastMailGuildSCmd::add_items() {
  // @@protoc_insertion_point(field_add:Cmd.GuildBrocastMailGuildSCmd.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo >&
GuildBrocastMailGuildSCmd::items() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildBrocastMailGuildSCmd.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo >*
GuildBrocastMailGuildSCmd::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildBrocastMailGuildSCmd.items)
  return &items_;
}

// -------------------------------------------------------------------

// GuildBrocastMsgGuildSCmd

// optional .Cmd.Command cmd = 1 [default = GUILD_PROTOCMD];
inline bool GuildBrocastMsgGuildSCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildBrocastMsgGuildSCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildBrocastMsgGuildSCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildBrocastMsgGuildSCmd::clear_cmd() {
  cmd_ = 210;
  clear_has_cmd();
}
inline ::Cmd::Command GuildBrocastMsgGuildSCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildBrocastMsgGuildSCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildBrocastMsgGuildSCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildBrocastMsgGuildSCmd.cmd)
}

// optional .Cmd.GuildSParam param = 2 [default = GUILDSPARAM_GUILD_MSG];
inline bool GuildBrocastMsgGuildSCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildBrocastMsgGuildSCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildBrocastMsgGuildSCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildBrocastMsgGuildSCmd::clear_param() {
  param_ = 49;
  clear_has_param();
}
inline ::Cmd::GuildSParam GuildBrocastMsgGuildSCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildBrocastMsgGuildSCmd.param)
  return static_cast< ::Cmd::GuildSParam >(param_);
}
inline void GuildBrocastMsgGuildSCmd::set_param(::Cmd::GuildSParam value) {
  assert(::Cmd::GuildSParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildBrocastMsgGuildSCmd.param)
}

// required uint64 guildid = 3;
inline bool GuildBrocastMsgGuildSCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildBrocastMsgGuildSCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildBrocastMsgGuildSCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildBrocastMsgGuildSCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 GuildBrocastMsgGuildSCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildBrocastMsgGuildSCmd.guildid)
  return guildid_;
}
inline void GuildBrocastMsgGuildSCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildBrocastMsgGuildSCmd.guildid)
}

// required uint32 msgid = 4;
inline bool GuildBrocastMsgGuildSCmd::has_msgid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildBrocastMsgGuildSCmd::set_has_msgid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildBrocastMsgGuildSCmd::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildBrocastMsgGuildSCmd::clear_msgid() {
  msgid_ = 0u;
  clear_has_msgid();
}
inline ::google::protobuf::uint32 GuildBrocastMsgGuildSCmd::msgid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildBrocastMsgGuildSCmd.msgid)
  return msgid_;
}
inline void GuildBrocastMsgGuildSCmd::set_msgid(::google::protobuf::uint32 value) {
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildBrocastMsgGuildSCmd.msgid)
}

// repeated .Cmd.MsgParam params = 5;
inline int GuildBrocastMsgGuildSCmd::params_size() const {
  return params_.size();
}
inline void GuildBrocastMsgGuildSCmd::clear_params() {
  params_.Clear();
}
inline const ::Cmd::MsgParam& GuildBrocastMsgGuildSCmd::params(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GuildBrocastMsgGuildSCmd.params)
  return params_.Get(index);
}
inline ::Cmd::MsgParam* GuildBrocastMsgGuildSCmd::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GuildBrocastMsgGuildSCmd.params)
  return params_.Mutable(index);
}
inline ::Cmd::MsgParam* GuildBrocastMsgGuildSCmd::add_params() {
  // @@protoc_insertion_point(field_add:Cmd.GuildBrocastMsgGuildSCmd.params)
  return params_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::MsgParam >&
GuildBrocastMsgGuildSCmd::params() const {
  // @@protoc_insertion_point(field_list:Cmd.GuildBrocastMsgGuildSCmd.params)
  return params_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::MsgParam >*
GuildBrocastMsgGuildSCmd::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GuildBrocastMsgGuildSCmd.params)
  return &params_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cmd

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Cmd::GuildSParam> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::GuildSParam>() {
  return ::Cmd::GuildSParam_descriptor();
}
template <> struct is_proto_enum< ::Cmd::GuildOptConType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::GuildOptConType>() {
  return ::Cmd::GuildOptConType_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EPhotoAction> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EPhotoAction>() {
  return ::Cmd::EPhotoAction_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EGuildCityAction> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EGuildCityAction>() {
  return ::Cmd::EGuildCityAction_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EGuildCityResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EGuildCityResult>() {
  return ::Cmd::EGuildCityResult_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GuildSCmd_2eproto__INCLUDED
