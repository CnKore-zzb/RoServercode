// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Dojo.proto

#ifndef PROTOBUF_Dojo_2eproto__INCLUDED
#define PROTOBUF_Dojo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "xCmd.pb.h"
#include "SceneItem.pb.h"
// @@protoc_insertion_point(includes)

namespace Cmd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Dojo_2eproto();
void protobuf_AssignDesc_Dojo_2eproto();
void protobuf_ShutdownFile_Dojo_2eproto();

class DojoPrivateInfoCmd;
class DojoMsg;
class DojoMsgBlob;
class DojoPublicInfoCmd;
class DojoInviteCmd;
class DojoReplyCmd;
class EnterDojo;
class DojoAddMsg;
class DojoPanelOper;
class DojoSponsorCmd;
class DojoQueryStateCmd;
class DojoRewardCmd;

enum DojoParam {
  EDOJOPARAM_DOJO_PRIVATE_INFO = 1,
  EDOJOPARAM_DOJO_PUBLIC_INFO = 2,
  EDOJOPARAM_INVITE = 3,
  EDOJOPARAM_REPLY = 4,
  EDOJOPARAM_ENTERDOJO = 5,
  EDOJOPARAM_ADD_MSG = 6,
  EDOJOPARAM_PANEL_OPER = 7,
  EDOJOPARAM_SPONSOR = 9,
  EDOJOPARAM_QUERYSTATE = 10,
  EDOJOPARAM_REWARD = 11
};
bool DojoParam_IsValid(int value);
const DojoParam DojoParam_MIN = EDOJOPARAM_DOJO_PRIVATE_INFO;
const DojoParam DojoParam_MAX = EDOJOPARAM_REWARD;
const int DojoParam_ARRAYSIZE = DojoParam_MAX + 1;

const ::google::protobuf::EnumDescriptor* DojoParam_descriptor();
inline const ::std::string& DojoParam_Name(DojoParam value) {
  return ::google::protobuf::internal::NameOfEnum(
    DojoParam_descriptor(), value);
}
inline bool DojoParam_Parse(
    const ::std::string& name, DojoParam* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DojoParam>(
    DojoParam_descriptor(), name, value);
}
enum EDojoReply {
  EDOJOREPLY_AGREE = 1,
  EDOJOREPLY_DISAGREE = 2
};
bool EDojoReply_IsValid(int value);
const EDojoReply EDojoReply_MIN = EDOJOREPLY_AGREE;
const EDojoReply EDojoReply_MAX = EDOJOREPLY_DISAGREE;
const int EDojoReply_ARRAYSIZE = EDojoReply_MAX + 1;

const ::google::protobuf::EnumDescriptor* EDojoReply_descriptor();
inline const ::std::string& EDojoReply_Name(EDojoReply value) {
  return ::google::protobuf::internal::NameOfEnum(
    EDojoReply_descriptor(), value);
}
inline bool EDojoReply_Parse(
    const ::std::string& name, EDojoReply* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EDojoReply>(
    EDojoReply_descriptor(), name, value);
}
enum DojoState {
  DOJOSTATE_NONE = 0,
  DOJOSTATE_SPONSORED = 1,
  DOJOSTATE_OPENED = 2,
  DOJOSTATE_ERROR = 3
};
bool DojoState_IsValid(int value);
const DojoState DojoState_MIN = DOJOSTATE_NONE;
const DojoState DojoState_MAX = DOJOSTATE_ERROR;
const int DojoState_ARRAYSIZE = DojoState_MAX + 1;

const ::google::protobuf::EnumDescriptor* DojoState_descriptor();
inline const ::std::string& DojoState_Name(DojoState value) {
  return ::google::protobuf::internal::NameOfEnum(
    DojoState_descriptor(), value);
}
inline bool DojoState_Parse(
    const ::std::string& name, DojoState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DojoState>(
    DojoState_descriptor(), name, value);
}
enum EPassType {
  EPASSTYPE_FIRST = 1,
  EPASSTYPE_HELP = 2,
  EPASSTYPE_NORMAL = 3
};
bool EPassType_IsValid(int value);
const EPassType EPassType_MIN = EPASSTYPE_FIRST;
const EPassType EPassType_MAX = EPASSTYPE_NORMAL;
const int EPassType_ARRAYSIZE = EPassType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EPassType_descriptor();
inline const ::std::string& EPassType_Name(EPassType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EPassType_descriptor(), value);
}
inline bool EPassType_Parse(
    const ::std::string& name, EPassType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EPassType>(
    EPassType_descriptor(), name, value);
}
// ===================================================================

class DojoPrivateInfoCmd : public ::google::protobuf::Message {
 public:
  DojoPrivateInfoCmd();
  virtual ~DojoPrivateInfoCmd();

  DojoPrivateInfoCmd(const DojoPrivateInfoCmd& from);

  inline DojoPrivateInfoCmd& operator=(const DojoPrivateInfoCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DojoPrivateInfoCmd& default_instance();

  void Swap(DojoPrivateInfoCmd* other);

  // implements Message ----------------------------------------------

  DojoPrivateInfoCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DojoPrivateInfoCmd& from);
  void MergeFrom(const DojoPrivateInfoCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = DOJO_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.DojoParam param = 2 [default = EDOJOPARAM_DOJO_PRIVATE_INFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::DojoParam param() const;
  inline void set_param(::Cmd::DojoParam value);

  // optional uint32 groupid = 3;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupidFieldNumber = 3;
  inline ::google::protobuf::uint32 groupid() const;
  inline void set_groupid(::google::protobuf::uint32 value);

  // repeated uint32 completed_id = 4;
  inline int completed_id_size() const;
  inline void clear_completed_id();
  static const int kCompletedIdFieldNumber = 4;
  inline ::google::protobuf::uint32 completed_id(int index) const;
  inline void set_completed_id(int index, ::google::protobuf::uint32 value);
  inline void add_completed_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      completed_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_completed_id();

  // @@protoc_insertion_point(class_scope:Cmd.DojoPrivateInfoCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_groupid();
  inline void clear_has_groupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > completed_id_;
  ::google::protobuf::uint32 groupid_;
  friend void  protobuf_AddDesc_Dojo_2eproto();
  friend void protobuf_AssignDesc_Dojo_2eproto();
  friend void protobuf_ShutdownFile_Dojo_2eproto();

  void InitAsDefaultInstance();
  static DojoPrivateInfoCmd* default_instance_;
};
// -------------------------------------------------------------------

class DojoMsg : public ::google::protobuf::Message {
 public:
  DojoMsg();
  virtual ~DojoMsg();

  DojoMsg(const DojoMsg& from);

  inline DojoMsg& operator=(const DojoMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DojoMsg& default_instance();

  void Swap(DojoMsg* other);

  // implements Message ----------------------------------------------

  DojoMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DojoMsg& from);
  void MergeFrom(const DojoMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string conent = 3;
  inline bool has_conent() const;
  inline void clear_conent();
  static const int kConentFieldNumber = 3;
  inline const ::std::string& conent() const;
  inline void set_conent(const ::std::string& value);
  inline void set_conent(const char* value);
  inline void set_conent(const char* value, size_t size);
  inline ::std::string* mutable_conent();
  inline ::std::string* release_conent();
  inline void set_allocated_conent(::std::string* conent);

  // optional bool iscompleted = 4;
  inline bool has_iscompleted() const;
  inline void clear_iscompleted();
  static const int kIscompletedFieldNumber = 4;
  inline bool iscompleted() const;
  inline void set_iscompleted(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.DojoMsg)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_conent();
  inline void clear_has_conent();
  inline void set_has_iscompleted();
  inline void clear_has_iscompleted();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::std::string* name_;
  ::std::string* conent_;
  bool iscompleted_;
  friend void  protobuf_AddDesc_Dojo_2eproto();
  friend void protobuf_AssignDesc_Dojo_2eproto();
  friend void protobuf_ShutdownFile_Dojo_2eproto();

  void InitAsDefaultInstance();
  static DojoMsg* default_instance_;
};
// -------------------------------------------------------------------

class DojoMsgBlob : public ::google::protobuf::Message {
 public:
  DojoMsgBlob();
  virtual ~DojoMsgBlob();

  DojoMsgBlob(const DojoMsgBlob& from);

  inline DojoMsgBlob& operator=(const DojoMsgBlob& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DojoMsgBlob& default_instance();

  void Swap(DojoMsgBlob* other);

  // implements Message ----------------------------------------------

  DojoMsgBlob* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DojoMsgBlob& from);
  void MergeFrom(const DojoMsgBlob& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Cmd.DojoMsg msgs = 1;
  inline int msgs_size() const;
  inline void clear_msgs();
  static const int kMsgsFieldNumber = 1;
  inline const ::Cmd::DojoMsg& msgs(int index) const;
  inline ::Cmd::DojoMsg* mutable_msgs(int index);
  inline ::Cmd::DojoMsg* add_msgs();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::DojoMsg >&
      msgs() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::DojoMsg >*
      mutable_msgs();

  // optional uint32 dojoid = 2;
  inline bool has_dojoid() const;
  inline void clear_dojoid();
  static const int kDojoidFieldNumber = 2;
  inline ::google::protobuf::uint32 dojoid() const;
  inline void set_dojoid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.DojoMsgBlob)
 private:
  inline void set_has_dojoid();
  inline void clear_has_dojoid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::DojoMsg > msgs_;
  ::google::protobuf::uint32 dojoid_;
  friend void  protobuf_AddDesc_Dojo_2eproto();
  friend void protobuf_AssignDesc_Dojo_2eproto();
  friend void protobuf_ShutdownFile_Dojo_2eproto();

  void InitAsDefaultInstance();
  static DojoMsgBlob* default_instance_;
};
// -------------------------------------------------------------------

class DojoPublicInfoCmd : public ::google::protobuf::Message {
 public:
  DojoPublicInfoCmd();
  virtual ~DojoPublicInfoCmd();

  DojoPublicInfoCmd(const DojoPublicInfoCmd& from);

  inline DojoPublicInfoCmd& operator=(const DojoPublicInfoCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DojoPublicInfoCmd& default_instance();

  void Swap(DojoPublicInfoCmd* other);

  // implements Message ----------------------------------------------

  DojoPublicInfoCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DojoPublicInfoCmd& from);
  void MergeFrom(const DojoPublicInfoCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = DOJO_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.DojoParam param = 2 [default = EDOJOPARAM_DOJO_PUBLIC_INFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::DojoParam param() const;
  inline void set_param(::Cmd::DojoParam value);

  // optional uint32 dojoid = 3;
  inline bool has_dojoid() const;
  inline void clear_dojoid();
  static const int kDojoidFieldNumber = 3;
  inline ::google::protobuf::uint32 dojoid() const;
  inline void set_dojoid(::google::protobuf::uint32 value);

  // optional .Cmd.DojoMsgBlob msgblob = 4;
  inline bool has_msgblob() const;
  inline void clear_msgblob();
  static const int kMsgblobFieldNumber = 4;
  inline const ::Cmd::DojoMsgBlob& msgblob() const;
  inline ::Cmd::DojoMsgBlob* mutable_msgblob();
  inline ::Cmd::DojoMsgBlob* release_msgblob();
  inline void set_allocated_msgblob(::Cmd::DojoMsgBlob* msgblob);

  // @@protoc_insertion_point(class_scope:Cmd.DojoPublicInfoCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_dojoid();
  inline void clear_has_dojoid();
  inline void set_has_msgblob();
  inline void clear_has_msgblob();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::DojoMsgBlob* msgblob_;
  ::google::protobuf::uint32 dojoid_;
  friend void  protobuf_AddDesc_Dojo_2eproto();
  friend void protobuf_AssignDesc_Dojo_2eproto();
  friend void protobuf_ShutdownFile_Dojo_2eproto();

  void InitAsDefaultInstance();
  static DojoPublicInfoCmd* default_instance_;
};
// -------------------------------------------------------------------

class DojoInviteCmd : public ::google::protobuf::Message {
 public:
  DojoInviteCmd();
  virtual ~DojoInviteCmd();

  DojoInviteCmd(const DojoInviteCmd& from);

  inline DojoInviteCmd& operator=(const DojoInviteCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DojoInviteCmd& default_instance();

  void Swap(DojoInviteCmd* other);

  // implements Message ----------------------------------------------

  DojoInviteCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DojoInviteCmd& from);
  void MergeFrom(const DojoInviteCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = DOJO_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.DojoParam param = 2 [default = EDOJOPARAM_INVITE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::DojoParam param() const;
  inline void set_param(::Cmd::DojoParam value);

  // optional uint32 dojoid = 3;
  inline bool has_dojoid() const;
  inline void clear_dojoid();
  static const int kDojoidFieldNumber = 3;
  inline ::google::protobuf::uint32 dojoid() const;
  inline void set_dojoid(::google::protobuf::uint32 value);

  // optional uint64 sponsorid = 4;
  inline bool has_sponsorid() const;
  inline void clear_sponsorid();
  static const int kSponsoridFieldNumber = 4;
  inline ::google::protobuf::uint64 sponsorid() const;
  inline void set_sponsorid(::google::protobuf::uint64 value);

  // optional string sponsorname = 5;
  inline bool has_sponsorname() const;
  inline void clear_sponsorname();
  static const int kSponsornameFieldNumber = 5;
  inline const ::std::string& sponsorname() const;
  inline void set_sponsorname(const ::std::string& value);
  inline void set_sponsorname(const char* value);
  inline void set_sponsorname(const char* value, size_t size);
  inline ::std::string* mutable_sponsorname();
  inline ::std::string* release_sponsorname();
  inline void set_allocated_sponsorname(::std::string* sponsorname);

  // @@protoc_insertion_point(class_scope:Cmd.DojoInviteCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_dojoid();
  inline void clear_has_dojoid();
  inline void set_has_sponsorid();
  inline void clear_has_sponsorid();
  inline void set_has_sponsorname();
  inline void clear_has_sponsorname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 sponsorid_;
  ::std::string* sponsorname_;
  ::google::protobuf::uint32 dojoid_;
  friend void  protobuf_AddDesc_Dojo_2eproto();
  friend void protobuf_AssignDesc_Dojo_2eproto();
  friend void protobuf_ShutdownFile_Dojo_2eproto();

  void InitAsDefaultInstance();
  static DojoInviteCmd* default_instance_;
};
// -------------------------------------------------------------------

class DojoReplyCmd : public ::google::protobuf::Message {
 public:
  DojoReplyCmd();
  virtual ~DojoReplyCmd();

  DojoReplyCmd(const DojoReplyCmd& from);

  inline DojoReplyCmd& operator=(const DojoReplyCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DojoReplyCmd& default_instance();

  void Swap(DojoReplyCmd* other);

  // implements Message ----------------------------------------------

  DojoReplyCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DojoReplyCmd& from);
  void MergeFrom(const DojoReplyCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = DOJO_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.DojoParam param = 2 [default = EDOJOPARAM_REPLY];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::DojoParam param() const;
  inline void set_param(::Cmd::DojoParam value);

  // optional .Cmd.EDojoReply eReply = 3 [default = EDOJOREPLY_DISAGREE];
  inline bool has_ereply() const;
  inline void clear_ereply();
  static const int kEReplyFieldNumber = 3;
  inline ::Cmd::EDojoReply ereply() const;
  inline void set_ereply(::Cmd::EDojoReply value);

  // optional uint64 userid = 4 [default = 0];
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 4;
  inline ::google::protobuf::uint64 userid() const;
  inline void set_userid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.DojoReplyCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_ereply();
  inline void clear_has_ereply();
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 userid_;
  int ereply_;
  friend void  protobuf_AddDesc_Dojo_2eproto();
  friend void protobuf_AssignDesc_Dojo_2eproto();
  friend void protobuf_ShutdownFile_Dojo_2eproto();

  void InitAsDefaultInstance();
  static DojoReplyCmd* default_instance_;
};
// -------------------------------------------------------------------

class EnterDojo : public ::google::protobuf::Message {
 public:
  EnterDojo();
  virtual ~EnterDojo();

  EnterDojo(const EnterDojo& from);

  inline EnterDojo& operator=(const EnterDojo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterDojo& default_instance();

  void Swap(EnterDojo* other);

  // implements Message ----------------------------------------------

  EnterDojo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterDojo& from);
  void MergeFrom(const EnterDojo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = DOJO_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.DojoParam param = 2 [default = EDOJOPARAM_ENTERDOJO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::DojoParam param() const;
  inline void set_param(::Cmd::DojoParam value);

  // optional uint32 dojoid = 3 [default = 0];
  inline bool has_dojoid() const;
  inline void clear_dojoid();
  static const int kDojoidFieldNumber = 3;
  inline ::google::protobuf::uint32 dojoid() const;
  inline void set_dojoid(::google::protobuf::uint32 value);

  // optional uint64 userid = 4 [default = 0];
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 4;
  inline ::google::protobuf::uint64 userid() const;
  inline void set_userid(::google::protobuf::uint64 value);

  // optional uint32 zoneid = 5 [default = 0];
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 5;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 time = 6 [default = 0];
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // optional string sign = 7;
  inline bool has_sign() const;
  inline void clear_sign();
  static const int kSignFieldNumber = 7;
  inline const ::std::string& sign() const;
  inline void set_sign(const ::std::string& value);
  inline void set_sign(const char* value);
  inline void set_sign(const char* value, size_t size);
  inline ::std::string* mutable_sign();
  inline ::std::string* release_sign();
  inline void set_allocated_sign(::std::string* sign);

  // @@protoc_insertion_point(class_scope:Cmd.EnterDojo)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_dojoid();
  inline void clear_has_dojoid();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_sign();
  inline void clear_has_sign();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 userid_;
  ::google::protobuf::uint32 dojoid_;
  ::google::protobuf::uint32 zoneid_;
  ::std::string* sign_;
  ::google::protobuf::uint32 time_;
  friend void  protobuf_AddDesc_Dojo_2eproto();
  friend void protobuf_AssignDesc_Dojo_2eproto();
  friend void protobuf_ShutdownFile_Dojo_2eproto();

  void InitAsDefaultInstance();
  static EnterDojo* default_instance_;
};
// -------------------------------------------------------------------

class DojoAddMsg : public ::google::protobuf::Message {
 public:
  DojoAddMsg();
  virtual ~DojoAddMsg();

  DojoAddMsg(const DojoAddMsg& from);

  inline DojoAddMsg& operator=(const DojoAddMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DojoAddMsg& default_instance();

  void Swap(DojoAddMsg* other);

  // implements Message ----------------------------------------------

  DojoAddMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DojoAddMsg& from);
  void MergeFrom(const DojoAddMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = DOJO_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.DojoParam param = 2 [default = EDOJOPARAM_ADD_MSG];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::DojoParam param() const;
  inline void set_param(::Cmd::DojoParam value);

  // optional uint32 dojoid = 3;
  inline bool has_dojoid() const;
  inline void clear_dojoid();
  static const int kDojoidFieldNumber = 3;
  inline ::google::protobuf::uint32 dojoid() const;
  inline void set_dojoid(::google::protobuf::uint32 value);

  // optional .Cmd.DojoMsg dojomsg = 4;
  inline bool has_dojomsg() const;
  inline void clear_dojomsg();
  static const int kDojomsgFieldNumber = 4;
  inline const ::Cmd::DojoMsg& dojomsg() const;
  inline ::Cmd::DojoMsg* mutable_dojomsg();
  inline ::Cmd::DojoMsg* release_dojomsg();
  inline void set_allocated_dojomsg(::Cmd::DojoMsg* dojomsg);

  // @@protoc_insertion_point(class_scope:Cmd.DojoAddMsg)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_dojoid();
  inline void clear_has_dojoid();
  inline void set_has_dojomsg();
  inline void clear_has_dojomsg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::DojoMsg* dojomsg_;
  ::google::protobuf::uint32 dojoid_;
  friend void  protobuf_AddDesc_Dojo_2eproto();
  friend void protobuf_AssignDesc_Dojo_2eproto();
  friend void protobuf_ShutdownFile_Dojo_2eproto();

  void InitAsDefaultInstance();
  static DojoAddMsg* default_instance_;
};
// -------------------------------------------------------------------

class DojoPanelOper : public ::google::protobuf::Message {
 public:
  DojoPanelOper();
  virtual ~DojoPanelOper();

  DojoPanelOper(const DojoPanelOper& from);

  inline DojoPanelOper& operator=(const DojoPanelOper& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DojoPanelOper& default_instance();

  void Swap(DojoPanelOper* other);

  // implements Message ----------------------------------------------

  DojoPanelOper* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DojoPanelOper& from);
  void MergeFrom(const DojoPanelOper& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = DOJO_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.DojoParam param = 2 [default = EDOJOPARAM_PANEL_OPER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::DojoParam param() const;
  inline void set_param(::Cmd::DojoParam value);

  // @@protoc_insertion_point(class_scope:Cmd.DojoPanelOper)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  friend void  protobuf_AddDesc_Dojo_2eproto();
  friend void protobuf_AssignDesc_Dojo_2eproto();
  friend void protobuf_ShutdownFile_Dojo_2eproto();

  void InitAsDefaultInstance();
  static DojoPanelOper* default_instance_;
};
// -------------------------------------------------------------------

class DojoSponsorCmd : public ::google::protobuf::Message {
 public:
  DojoSponsorCmd();
  virtual ~DojoSponsorCmd();

  DojoSponsorCmd(const DojoSponsorCmd& from);

  inline DojoSponsorCmd& operator=(const DojoSponsorCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DojoSponsorCmd& default_instance();

  void Swap(DojoSponsorCmd* other);

  // implements Message ----------------------------------------------

  DojoSponsorCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DojoSponsorCmd& from);
  void MergeFrom(const DojoSponsorCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = DOJO_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.DojoParam param = 2 [default = EDOJOPARAM_SPONSOR];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::DojoParam param() const;
  inline void set_param(::Cmd::DojoParam value);

  // optional uint32 dojoid = 3;
  inline bool has_dojoid() const;
  inline void clear_dojoid();
  static const int kDojoidFieldNumber = 3;
  inline ::google::protobuf::uint32 dojoid() const;
  inline void set_dojoid(::google::protobuf::uint32 value);

  // optional bool is_cancel = 4 [default = false];
  inline bool has_is_cancel() const;
  inline void clear_is_cancel();
  static const int kIsCancelFieldNumber = 4;
  inline bool is_cancel() const;
  inline void set_is_cancel(bool value);

  // optional uint64 sponsorid = 5;
  inline bool has_sponsorid() const;
  inline void clear_sponsorid();
  static const int kSponsoridFieldNumber = 5;
  inline ::google::protobuf::uint64 sponsorid() const;
  inline void set_sponsorid(::google::protobuf::uint64 value);

  // optional string sponsorname = 6;
  inline bool has_sponsorname() const;
  inline void clear_sponsorname();
  static const int kSponsornameFieldNumber = 6;
  inline const ::std::string& sponsorname() const;
  inline void set_sponsorname(const ::std::string& value);
  inline void set_sponsorname(const char* value);
  inline void set_sponsorname(const char* value, size_t size);
  inline ::std::string* mutable_sponsorname();
  inline ::std::string* release_sponsorname();
  inline void set_allocated_sponsorname(::std::string* sponsorname);

  // optional bool ret = 7;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 7;
  inline bool ret() const;
  inline void set_ret(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.DojoSponsorCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_dojoid();
  inline void clear_has_dojoid();
  inline void set_has_is_cancel();
  inline void clear_has_is_cancel();
  inline void set_has_sponsorid();
  inline void clear_has_sponsorid();
  inline void set_has_sponsorname();
  inline void clear_has_sponsorname();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 dojoid_;
  bool is_cancel_;
  bool ret_;
  ::google::protobuf::uint64 sponsorid_;
  ::std::string* sponsorname_;
  friend void  protobuf_AddDesc_Dojo_2eproto();
  friend void protobuf_AssignDesc_Dojo_2eproto();
  friend void protobuf_ShutdownFile_Dojo_2eproto();

  void InitAsDefaultInstance();
  static DojoSponsorCmd* default_instance_;
};
// -------------------------------------------------------------------

class DojoQueryStateCmd : public ::google::protobuf::Message {
 public:
  DojoQueryStateCmd();
  virtual ~DojoQueryStateCmd();

  DojoQueryStateCmd(const DojoQueryStateCmd& from);

  inline DojoQueryStateCmd& operator=(const DojoQueryStateCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DojoQueryStateCmd& default_instance();

  void Swap(DojoQueryStateCmd* other);

  // implements Message ----------------------------------------------

  DojoQueryStateCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DojoQueryStateCmd& from);
  void MergeFrom(const DojoQueryStateCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = DOJO_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.DojoParam param = 2 [default = EDOJOPARAM_QUERYSTATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::DojoParam param() const;
  inline void set_param(::Cmd::DojoParam value);

  // optional .Cmd.DojoState state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::Cmd::DojoState state() const;
  inline void set_state(::Cmd::DojoState value);

  // optional uint32 dojoid = 4;
  inline bool has_dojoid() const;
  inline void clear_dojoid();
  static const int kDojoidFieldNumber = 4;
  inline ::google::protobuf::uint32 dojoid() const;
  inline void set_dojoid(::google::protobuf::uint32 value);

  // optional uint64 sponsorid = 5;
  inline bool has_sponsorid() const;
  inline void clear_sponsorid();
  static const int kSponsoridFieldNumber = 5;
  inline ::google::protobuf::uint64 sponsorid() const;
  inline void set_sponsorid(::google::protobuf::uint64 value);

  // optional string sponsorname = 6;
  inline bool has_sponsorname() const;
  inline void clear_sponsorname();
  static const int kSponsornameFieldNumber = 6;
  inline const ::std::string& sponsorname() const;
  inline void set_sponsorname(const ::std::string& value);
  inline void set_sponsorname(const char* value);
  inline void set_sponsorname(const char* value, size_t size);
  inline ::std::string* mutable_sponsorname();
  inline ::std::string* release_sponsorname();
  inline void set_allocated_sponsorname(::std::string* sponsorname);

  // optional bool ret = 7;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 7;
  inline bool ret() const;
  inline void set_ret(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.DojoQueryStateCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_dojoid();
  inline void clear_has_dojoid();
  inline void set_has_sponsorid();
  inline void clear_has_sponsorid();
  inline void set_has_sponsorname();
  inline void clear_has_sponsorname();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  int state_;
  ::google::protobuf::uint32 dojoid_;
  ::google::protobuf::uint64 sponsorid_;
  ::std::string* sponsorname_;
  bool ret_;
  friend void  protobuf_AddDesc_Dojo_2eproto();
  friend void protobuf_AssignDesc_Dojo_2eproto();
  friend void protobuf_ShutdownFile_Dojo_2eproto();

  void InitAsDefaultInstance();
  static DojoQueryStateCmd* default_instance_;
};
// -------------------------------------------------------------------

class DojoRewardCmd : public ::google::protobuf::Message {
 public:
  DojoRewardCmd();
  virtual ~DojoRewardCmd();

  DojoRewardCmd(const DojoRewardCmd& from);

  inline DojoRewardCmd& operator=(const DojoRewardCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DojoRewardCmd& default_instance();

  void Swap(DojoRewardCmd* other);

  // implements Message ----------------------------------------------

  DojoRewardCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DojoRewardCmd& from);
  void MergeFrom(const DojoRewardCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = DOJO_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.DojoParam param = 2 [default = EDOJOPARAM_REWARD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::DojoParam param() const;
  inline void set_param(::Cmd::DojoParam value);

  // optional uint32 dojoid = 3;
  inline bool has_dojoid() const;
  inline void clear_dojoid();
  static const int kDojoidFieldNumber = 3;
  inline ::google::protobuf::uint32 dojoid() const;
  inline void set_dojoid(::google::protobuf::uint32 value);

  // optional .Cmd.EPassType passtype = 4;
  inline bool has_passtype() const;
  inline void clear_passtype();
  static const int kPasstypeFieldNumber = 4;
  inline ::Cmd::EPassType passtype() const;
  inline void set_passtype(::Cmd::EPassType value);

  // repeated .Cmd.ItemInfo items = 5;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 5;
  inline const ::Cmd::ItemInfo& items(int index) const;
  inline ::Cmd::ItemInfo* mutable_items(int index);
  inline ::Cmd::ItemInfo* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:Cmd.DojoRewardCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_dojoid();
  inline void clear_has_dojoid();
  inline void set_has_passtype();
  inline void clear_has_passtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 dojoid_;
  int passtype_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo > items_;
  friend void  protobuf_AddDesc_Dojo_2eproto();
  friend void protobuf_AssignDesc_Dojo_2eproto();
  friend void protobuf_ShutdownFile_Dojo_2eproto();

  void InitAsDefaultInstance();
  static DojoRewardCmd* default_instance_;
};
// ===================================================================


// ===================================================================

// DojoPrivateInfoCmd

// optional .Cmd.Command cmd = 1 [default = DOJO_PROTOCMD];
inline bool DojoPrivateInfoCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DojoPrivateInfoCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DojoPrivateInfoCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DojoPrivateInfoCmd::clear_cmd() {
  cmd_ = 58;
  clear_has_cmd();
}
inline ::Cmd::Command DojoPrivateInfoCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoPrivateInfoCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void DojoPrivateInfoCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoPrivateInfoCmd.cmd)
}

// optional .Cmd.DojoParam param = 2 [default = EDOJOPARAM_DOJO_PRIVATE_INFO];
inline bool DojoPrivateInfoCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DojoPrivateInfoCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DojoPrivateInfoCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DojoPrivateInfoCmd::clear_param() {
  param_ = 1;
  clear_has_param();
}
inline ::Cmd::DojoParam DojoPrivateInfoCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoPrivateInfoCmd.param)
  return static_cast< ::Cmd::DojoParam >(param_);
}
inline void DojoPrivateInfoCmd::set_param(::Cmd::DojoParam value) {
  assert(::Cmd::DojoParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoPrivateInfoCmd.param)
}

// optional uint32 groupid = 3;
inline bool DojoPrivateInfoCmd::has_groupid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DojoPrivateInfoCmd::set_has_groupid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DojoPrivateInfoCmd::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DojoPrivateInfoCmd::clear_groupid() {
  groupid_ = 0u;
  clear_has_groupid();
}
inline ::google::protobuf::uint32 DojoPrivateInfoCmd::groupid() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoPrivateInfoCmd.groupid)
  return groupid_;
}
inline void DojoPrivateInfoCmd::set_groupid(::google::protobuf::uint32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoPrivateInfoCmd.groupid)
}

// repeated uint32 completed_id = 4;
inline int DojoPrivateInfoCmd::completed_id_size() const {
  return completed_id_.size();
}
inline void DojoPrivateInfoCmd::clear_completed_id() {
  completed_id_.Clear();
}
inline ::google::protobuf::uint32 DojoPrivateInfoCmd::completed_id(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.DojoPrivateInfoCmd.completed_id)
  return completed_id_.Get(index);
}
inline void DojoPrivateInfoCmd::set_completed_id(int index, ::google::protobuf::uint32 value) {
  completed_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.DojoPrivateInfoCmd.completed_id)
}
inline void DojoPrivateInfoCmd::add_completed_id(::google::protobuf::uint32 value) {
  completed_id_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.DojoPrivateInfoCmd.completed_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DojoPrivateInfoCmd::completed_id() const {
  // @@protoc_insertion_point(field_list:Cmd.DojoPrivateInfoCmd.completed_id)
  return completed_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DojoPrivateInfoCmd::mutable_completed_id() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.DojoPrivateInfoCmd.completed_id)
  return &completed_id_;
}

// -------------------------------------------------------------------

// DojoMsg

// optional uint64 charid = 1;
inline bool DojoMsg::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DojoMsg::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DojoMsg::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DojoMsg::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 DojoMsg::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoMsg.charid)
  return charid_;
}
inline void DojoMsg::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoMsg.charid)
}

// optional string name = 2;
inline bool DojoMsg::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DojoMsg::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DojoMsg::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DojoMsg::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& DojoMsg::name() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoMsg.name)
  return *name_;
}
inline void DojoMsg::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.DojoMsg.name)
}
inline void DojoMsg::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.DojoMsg.name)
}
inline void DojoMsg::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.DojoMsg.name)
}
inline ::std::string* DojoMsg::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.DojoMsg.name)
  return name_;
}
inline ::std::string* DojoMsg::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DojoMsg::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.DojoMsg.name)
}

// optional string conent = 3;
inline bool DojoMsg::has_conent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DojoMsg::set_has_conent() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DojoMsg::clear_has_conent() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DojoMsg::clear_conent() {
  if (conent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    conent_->clear();
  }
  clear_has_conent();
}
inline const ::std::string& DojoMsg::conent() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoMsg.conent)
  return *conent_;
}
inline void DojoMsg::set_conent(const ::std::string& value) {
  set_has_conent();
  if (conent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    conent_ = new ::std::string;
  }
  conent_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.DojoMsg.conent)
}
inline void DojoMsg::set_conent(const char* value) {
  set_has_conent();
  if (conent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    conent_ = new ::std::string;
  }
  conent_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.DojoMsg.conent)
}
inline void DojoMsg::set_conent(const char* value, size_t size) {
  set_has_conent();
  if (conent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    conent_ = new ::std::string;
  }
  conent_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.DojoMsg.conent)
}
inline ::std::string* DojoMsg::mutable_conent() {
  set_has_conent();
  if (conent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    conent_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.DojoMsg.conent)
  return conent_;
}
inline ::std::string* DojoMsg::release_conent() {
  clear_has_conent();
  if (conent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = conent_;
    conent_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DojoMsg::set_allocated_conent(::std::string* conent) {
  if (conent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete conent_;
  }
  if (conent) {
    set_has_conent();
    conent_ = conent;
  } else {
    clear_has_conent();
    conent_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.DojoMsg.conent)
}

// optional bool iscompleted = 4;
inline bool DojoMsg::has_iscompleted() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DojoMsg::set_has_iscompleted() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DojoMsg::clear_has_iscompleted() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DojoMsg::clear_iscompleted() {
  iscompleted_ = false;
  clear_has_iscompleted();
}
inline bool DojoMsg::iscompleted() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoMsg.iscompleted)
  return iscompleted_;
}
inline void DojoMsg::set_iscompleted(bool value) {
  set_has_iscompleted();
  iscompleted_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoMsg.iscompleted)
}

// -------------------------------------------------------------------

// DojoMsgBlob

// repeated .Cmd.DojoMsg msgs = 1;
inline int DojoMsgBlob::msgs_size() const {
  return msgs_.size();
}
inline void DojoMsgBlob::clear_msgs() {
  msgs_.Clear();
}
inline const ::Cmd::DojoMsg& DojoMsgBlob::msgs(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.DojoMsgBlob.msgs)
  return msgs_.Get(index);
}
inline ::Cmd::DojoMsg* DojoMsgBlob::mutable_msgs(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.DojoMsgBlob.msgs)
  return msgs_.Mutable(index);
}
inline ::Cmd::DojoMsg* DojoMsgBlob::add_msgs() {
  // @@protoc_insertion_point(field_add:Cmd.DojoMsgBlob.msgs)
  return msgs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::DojoMsg >&
DojoMsgBlob::msgs() const {
  // @@protoc_insertion_point(field_list:Cmd.DojoMsgBlob.msgs)
  return msgs_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::DojoMsg >*
DojoMsgBlob::mutable_msgs() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.DojoMsgBlob.msgs)
  return &msgs_;
}

// optional uint32 dojoid = 2;
inline bool DojoMsgBlob::has_dojoid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DojoMsgBlob::set_has_dojoid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DojoMsgBlob::clear_has_dojoid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DojoMsgBlob::clear_dojoid() {
  dojoid_ = 0u;
  clear_has_dojoid();
}
inline ::google::protobuf::uint32 DojoMsgBlob::dojoid() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoMsgBlob.dojoid)
  return dojoid_;
}
inline void DojoMsgBlob::set_dojoid(::google::protobuf::uint32 value) {
  set_has_dojoid();
  dojoid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoMsgBlob.dojoid)
}

// -------------------------------------------------------------------

// DojoPublicInfoCmd

// optional .Cmd.Command cmd = 1 [default = DOJO_PROTOCMD];
inline bool DojoPublicInfoCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DojoPublicInfoCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DojoPublicInfoCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DojoPublicInfoCmd::clear_cmd() {
  cmd_ = 58;
  clear_has_cmd();
}
inline ::Cmd::Command DojoPublicInfoCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoPublicInfoCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void DojoPublicInfoCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoPublicInfoCmd.cmd)
}

// optional .Cmd.DojoParam param = 2 [default = EDOJOPARAM_DOJO_PUBLIC_INFO];
inline bool DojoPublicInfoCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DojoPublicInfoCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DojoPublicInfoCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DojoPublicInfoCmd::clear_param() {
  param_ = 2;
  clear_has_param();
}
inline ::Cmd::DojoParam DojoPublicInfoCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoPublicInfoCmd.param)
  return static_cast< ::Cmd::DojoParam >(param_);
}
inline void DojoPublicInfoCmd::set_param(::Cmd::DojoParam value) {
  assert(::Cmd::DojoParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoPublicInfoCmd.param)
}

// optional uint32 dojoid = 3;
inline bool DojoPublicInfoCmd::has_dojoid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DojoPublicInfoCmd::set_has_dojoid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DojoPublicInfoCmd::clear_has_dojoid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DojoPublicInfoCmd::clear_dojoid() {
  dojoid_ = 0u;
  clear_has_dojoid();
}
inline ::google::protobuf::uint32 DojoPublicInfoCmd::dojoid() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoPublicInfoCmd.dojoid)
  return dojoid_;
}
inline void DojoPublicInfoCmd::set_dojoid(::google::protobuf::uint32 value) {
  set_has_dojoid();
  dojoid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoPublicInfoCmd.dojoid)
}

// optional .Cmd.DojoMsgBlob msgblob = 4;
inline bool DojoPublicInfoCmd::has_msgblob() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DojoPublicInfoCmd::set_has_msgblob() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DojoPublicInfoCmd::clear_has_msgblob() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DojoPublicInfoCmd::clear_msgblob() {
  if (msgblob_ != NULL) msgblob_->::Cmd::DojoMsgBlob::Clear();
  clear_has_msgblob();
}
inline const ::Cmd::DojoMsgBlob& DojoPublicInfoCmd::msgblob() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoPublicInfoCmd.msgblob)
  return msgblob_ != NULL ? *msgblob_ : *default_instance_->msgblob_;
}
inline ::Cmd::DojoMsgBlob* DojoPublicInfoCmd::mutable_msgblob() {
  set_has_msgblob();
  if (msgblob_ == NULL) msgblob_ = new ::Cmd::DojoMsgBlob;
  // @@protoc_insertion_point(field_mutable:Cmd.DojoPublicInfoCmd.msgblob)
  return msgblob_;
}
inline ::Cmd::DojoMsgBlob* DojoPublicInfoCmd::release_msgblob() {
  clear_has_msgblob();
  ::Cmd::DojoMsgBlob* temp = msgblob_;
  msgblob_ = NULL;
  return temp;
}
inline void DojoPublicInfoCmd::set_allocated_msgblob(::Cmd::DojoMsgBlob* msgblob) {
  delete msgblob_;
  msgblob_ = msgblob;
  if (msgblob) {
    set_has_msgblob();
  } else {
    clear_has_msgblob();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.DojoPublicInfoCmd.msgblob)
}

// -------------------------------------------------------------------

// DojoInviteCmd

// optional .Cmd.Command cmd = 1 [default = DOJO_PROTOCMD];
inline bool DojoInviteCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DojoInviteCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DojoInviteCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DojoInviteCmd::clear_cmd() {
  cmd_ = 58;
  clear_has_cmd();
}
inline ::Cmd::Command DojoInviteCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoInviteCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void DojoInviteCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoInviteCmd.cmd)
}

// optional .Cmd.DojoParam param = 2 [default = EDOJOPARAM_INVITE];
inline bool DojoInviteCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DojoInviteCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DojoInviteCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DojoInviteCmd::clear_param() {
  param_ = 3;
  clear_has_param();
}
inline ::Cmd::DojoParam DojoInviteCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoInviteCmd.param)
  return static_cast< ::Cmd::DojoParam >(param_);
}
inline void DojoInviteCmd::set_param(::Cmd::DojoParam value) {
  assert(::Cmd::DojoParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoInviteCmd.param)
}

// optional uint32 dojoid = 3;
inline bool DojoInviteCmd::has_dojoid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DojoInviteCmd::set_has_dojoid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DojoInviteCmd::clear_has_dojoid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DojoInviteCmd::clear_dojoid() {
  dojoid_ = 0u;
  clear_has_dojoid();
}
inline ::google::protobuf::uint32 DojoInviteCmd::dojoid() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoInviteCmd.dojoid)
  return dojoid_;
}
inline void DojoInviteCmd::set_dojoid(::google::protobuf::uint32 value) {
  set_has_dojoid();
  dojoid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoInviteCmd.dojoid)
}

// optional uint64 sponsorid = 4;
inline bool DojoInviteCmd::has_sponsorid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DojoInviteCmd::set_has_sponsorid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DojoInviteCmd::clear_has_sponsorid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DojoInviteCmd::clear_sponsorid() {
  sponsorid_ = GOOGLE_ULONGLONG(0);
  clear_has_sponsorid();
}
inline ::google::protobuf::uint64 DojoInviteCmd::sponsorid() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoInviteCmd.sponsorid)
  return sponsorid_;
}
inline void DojoInviteCmd::set_sponsorid(::google::protobuf::uint64 value) {
  set_has_sponsorid();
  sponsorid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoInviteCmd.sponsorid)
}

// optional string sponsorname = 5;
inline bool DojoInviteCmd::has_sponsorname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DojoInviteCmd::set_has_sponsorname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DojoInviteCmd::clear_has_sponsorname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DojoInviteCmd::clear_sponsorname() {
  if (sponsorname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sponsorname_->clear();
  }
  clear_has_sponsorname();
}
inline const ::std::string& DojoInviteCmd::sponsorname() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoInviteCmd.sponsorname)
  return *sponsorname_;
}
inline void DojoInviteCmd::set_sponsorname(const ::std::string& value) {
  set_has_sponsorname();
  if (sponsorname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sponsorname_ = new ::std::string;
  }
  sponsorname_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.DojoInviteCmd.sponsorname)
}
inline void DojoInviteCmd::set_sponsorname(const char* value) {
  set_has_sponsorname();
  if (sponsorname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sponsorname_ = new ::std::string;
  }
  sponsorname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.DojoInviteCmd.sponsorname)
}
inline void DojoInviteCmd::set_sponsorname(const char* value, size_t size) {
  set_has_sponsorname();
  if (sponsorname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sponsorname_ = new ::std::string;
  }
  sponsorname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.DojoInviteCmd.sponsorname)
}
inline ::std::string* DojoInviteCmd::mutable_sponsorname() {
  set_has_sponsorname();
  if (sponsorname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sponsorname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.DojoInviteCmd.sponsorname)
  return sponsorname_;
}
inline ::std::string* DojoInviteCmd::release_sponsorname() {
  clear_has_sponsorname();
  if (sponsorname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sponsorname_;
    sponsorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DojoInviteCmd::set_allocated_sponsorname(::std::string* sponsorname) {
  if (sponsorname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sponsorname_;
  }
  if (sponsorname) {
    set_has_sponsorname();
    sponsorname_ = sponsorname;
  } else {
    clear_has_sponsorname();
    sponsorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.DojoInviteCmd.sponsorname)
}

// -------------------------------------------------------------------

// DojoReplyCmd

// optional .Cmd.Command cmd = 1 [default = DOJO_PROTOCMD];
inline bool DojoReplyCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DojoReplyCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DojoReplyCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DojoReplyCmd::clear_cmd() {
  cmd_ = 58;
  clear_has_cmd();
}
inline ::Cmd::Command DojoReplyCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoReplyCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void DojoReplyCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoReplyCmd.cmd)
}

// optional .Cmd.DojoParam param = 2 [default = EDOJOPARAM_REPLY];
inline bool DojoReplyCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DojoReplyCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DojoReplyCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DojoReplyCmd::clear_param() {
  param_ = 4;
  clear_has_param();
}
inline ::Cmd::DojoParam DojoReplyCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoReplyCmd.param)
  return static_cast< ::Cmd::DojoParam >(param_);
}
inline void DojoReplyCmd::set_param(::Cmd::DojoParam value) {
  assert(::Cmd::DojoParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoReplyCmd.param)
}

// optional .Cmd.EDojoReply eReply = 3 [default = EDOJOREPLY_DISAGREE];
inline bool DojoReplyCmd::has_ereply() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DojoReplyCmd::set_has_ereply() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DojoReplyCmd::clear_has_ereply() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DojoReplyCmd::clear_ereply() {
  ereply_ = 2;
  clear_has_ereply();
}
inline ::Cmd::EDojoReply DojoReplyCmd::ereply() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoReplyCmd.eReply)
  return static_cast< ::Cmd::EDojoReply >(ereply_);
}
inline void DojoReplyCmd::set_ereply(::Cmd::EDojoReply value) {
  assert(::Cmd::EDojoReply_IsValid(value));
  set_has_ereply();
  ereply_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoReplyCmd.eReply)
}

// optional uint64 userid = 4 [default = 0];
inline bool DojoReplyCmd::has_userid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DojoReplyCmd::set_has_userid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DojoReplyCmd::clear_has_userid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DojoReplyCmd::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
  clear_has_userid();
}
inline ::google::protobuf::uint64 DojoReplyCmd::userid() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoReplyCmd.userid)
  return userid_;
}
inline void DojoReplyCmd::set_userid(::google::protobuf::uint64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoReplyCmd.userid)
}

// -------------------------------------------------------------------

// EnterDojo

// optional .Cmd.Command cmd = 1 [default = DOJO_PROTOCMD];
inline bool EnterDojo::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterDojo::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterDojo::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterDojo::clear_cmd() {
  cmd_ = 58;
  clear_has_cmd();
}
inline ::Cmd::Command EnterDojo::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterDojo.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void EnterDojo::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterDojo.cmd)
}

// optional .Cmd.DojoParam param = 2 [default = EDOJOPARAM_ENTERDOJO];
inline bool EnterDojo::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterDojo::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterDojo::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterDojo::clear_param() {
  param_ = 5;
  clear_has_param();
}
inline ::Cmd::DojoParam EnterDojo::param() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterDojo.param)
  return static_cast< ::Cmd::DojoParam >(param_);
}
inline void EnterDojo::set_param(::Cmd::DojoParam value) {
  assert(::Cmd::DojoParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterDojo.param)
}

// optional uint32 dojoid = 3 [default = 0];
inline bool EnterDojo::has_dojoid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnterDojo::set_has_dojoid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnterDojo::clear_has_dojoid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnterDojo::clear_dojoid() {
  dojoid_ = 0u;
  clear_has_dojoid();
}
inline ::google::protobuf::uint32 EnterDojo::dojoid() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterDojo.dojoid)
  return dojoid_;
}
inline void EnterDojo::set_dojoid(::google::protobuf::uint32 value) {
  set_has_dojoid();
  dojoid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterDojo.dojoid)
}

// optional uint64 userid = 4 [default = 0];
inline bool EnterDojo::has_userid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EnterDojo::set_has_userid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EnterDojo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EnterDojo::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
  clear_has_userid();
}
inline ::google::protobuf::uint64 EnterDojo::userid() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterDojo.userid)
  return userid_;
}
inline void EnterDojo::set_userid(::google::protobuf::uint64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterDojo.userid)
}

// optional uint32 zoneid = 5 [default = 0];
inline bool EnterDojo::has_zoneid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EnterDojo::set_has_zoneid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EnterDojo::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EnterDojo::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 EnterDojo::zoneid() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterDojo.zoneid)
  return zoneid_;
}
inline void EnterDojo::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterDojo.zoneid)
}

// optional uint32 time = 6 [default = 0];
inline bool EnterDojo::has_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EnterDojo::set_has_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void EnterDojo::clear_has_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void EnterDojo::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 EnterDojo::time() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterDojo.time)
  return time_;
}
inline void EnterDojo::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterDojo.time)
}

// optional string sign = 7;
inline bool EnterDojo::has_sign() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void EnterDojo::set_has_sign() {
  _has_bits_[0] |= 0x00000040u;
}
inline void EnterDojo::clear_has_sign() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void EnterDojo::clear_sign() {
  if (sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_->clear();
  }
  clear_has_sign();
}
inline const ::std::string& EnterDojo::sign() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterDojo.sign)
  return *sign_;
}
inline void EnterDojo::set_sign(const ::std::string& value) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.EnterDojo.sign)
}
inline void EnterDojo::set_sign(const char* value) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.EnterDojo.sign)
}
inline void EnterDojo::set_sign(const char* value, size_t size) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.EnterDojo.sign)
}
inline ::std::string* EnterDojo::mutable_sign() {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.EnterDojo.sign)
  return sign_;
}
inline ::std::string* EnterDojo::release_sign() {
  clear_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sign_;
    sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void EnterDojo::set_allocated_sign(::std::string* sign) {
  if (sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sign_;
  }
  if (sign) {
    set_has_sign();
    sign_ = sign;
  } else {
    clear_has_sign();
    sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.EnterDojo.sign)
}

// -------------------------------------------------------------------

// DojoAddMsg

// optional .Cmd.Command cmd = 1 [default = DOJO_PROTOCMD];
inline bool DojoAddMsg::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DojoAddMsg::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DojoAddMsg::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DojoAddMsg::clear_cmd() {
  cmd_ = 58;
  clear_has_cmd();
}
inline ::Cmd::Command DojoAddMsg::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoAddMsg.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void DojoAddMsg::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoAddMsg.cmd)
}

// optional .Cmd.DojoParam param = 2 [default = EDOJOPARAM_ADD_MSG];
inline bool DojoAddMsg::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DojoAddMsg::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DojoAddMsg::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DojoAddMsg::clear_param() {
  param_ = 6;
  clear_has_param();
}
inline ::Cmd::DojoParam DojoAddMsg::param() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoAddMsg.param)
  return static_cast< ::Cmd::DojoParam >(param_);
}
inline void DojoAddMsg::set_param(::Cmd::DojoParam value) {
  assert(::Cmd::DojoParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoAddMsg.param)
}

// optional uint32 dojoid = 3;
inline bool DojoAddMsg::has_dojoid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DojoAddMsg::set_has_dojoid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DojoAddMsg::clear_has_dojoid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DojoAddMsg::clear_dojoid() {
  dojoid_ = 0u;
  clear_has_dojoid();
}
inline ::google::protobuf::uint32 DojoAddMsg::dojoid() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoAddMsg.dojoid)
  return dojoid_;
}
inline void DojoAddMsg::set_dojoid(::google::protobuf::uint32 value) {
  set_has_dojoid();
  dojoid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoAddMsg.dojoid)
}

// optional .Cmd.DojoMsg dojomsg = 4;
inline bool DojoAddMsg::has_dojomsg() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DojoAddMsg::set_has_dojomsg() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DojoAddMsg::clear_has_dojomsg() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DojoAddMsg::clear_dojomsg() {
  if (dojomsg_ != NULL) dojomsg_->::Cmd::DojoMsg::Clear();
  clear_has_dojomsg();
}
inline const ::Cmd::DojoMsg& DojoAddMsg::dojomsg() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoAddMsg.dojomsg)
  return dojomsg_ != NULL ? *dojomsg_ : *default_instance_->dojomsg_;
}
inline ::Cmd::DojoMsg* DojoAddMsg::mutable_dojomsg() {
  set_has_dojomsg();
  if (dojomsg_ == NULL) dojomsg_ = new ::Cmd::DojoMsg;
  // @@protoc_insertion_point(field_mutable:Cmd.DojoAddMsg.dojomsg)
  return dojomsg_;
}
inline ::Cmd::DojoMsg* DojoAddMsg::release_dojomsg() {
  clear_has_dojomsg();
  ::Cmd::DojoMsg* temp = dojomsg_;
  dojomsg_ = NULL;
  return temp;
}
inline void DojoAddMsg::set_allocated_dojomsg(::Cmd::DojoMsg* dojomsg) {
  delete dojomsg_;
  dojomsg_ = dojomsg;
  if (dojomsg) {
    set_has_dojomsg();
  } else {
    clear_has_dojomsg();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.DojoAddMsg.dojomsg)
}

// -------------------------------------------------------------------

// DojoPanelOper

// optional .Cmd.Command cmd = 1 [default = DOJO_PROTOCMD];
inline bool DojoPanelOper::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DojoPanelOper::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DojoPanelOper::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DojoPanelOper::clear_cmd() {
  cmd_ = 58;
  clear_has_cmd();
}
inline ::Cmd::Command DojoPanelOper::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoPanelOper.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void DojoPanelOper::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoPanelOper.cmd)
}

// optional .Cmd.DojoParam param = 2 [default = EDOJOPARAM_PANEL_OPER];
inline bool DojoPanelOper::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DojoPanelOper::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DojoPanelOper::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DojoPanelOper::clear_param() {
  param_ = 7;
  clear_has_param();
}
inline ::Cmd::DojoParam DojoPanelOper::param() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoPanelOper.param)
  return static_cast< ::Cmd::DojoParam >(param_);
}
inline void DojoPanelOper::set_param(::Cmd::DojoParam value) {
  assert(::Cmd::DojoParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoPanelOper.param)
}

// -------------------------------------------------------------------

// DojoSponsorCmd

// optional .Cmd.Command cmd = 1 [default = DOJO_PROTOCMD];
inline bool DojoSponsorCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DojoSponsorCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DojoSponsorCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DojoSponsorCmd::clear_cmd() {
  cmd_ = 58;
  clear_has_cmd();
}
inline ::Cmd::Command DojoSponsorCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoSponsorCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void DojoSponsorCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoSponsorCmd.cmd)
}

// optional .Cmd.DojoParam param = 2 [default = EDOJOPARAM_SPONSOR];
inline bool DojoSponsorCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DojoSponsorCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DojoSponsorCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DojoSponsorCmd::clear_param() {
  param_ = 9;
  clear_has_param();
}
inline ::Cmd::DojoParam DojoSponsorCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoSponsorCmd.param)
  return static_cast< ::Cmd::DojoParam >(param_);
}
inline void DojoSponsorCmd::set_param(::Cmd::DojoParam value) {
  assert(::Cmd::DojoParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoSponsorCmd.param)
}

// optional uint32 dojoid = 3;
inline bool DojoSponsorCmd::has_dojoid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DojoSponsorCmd::set_has_dojoid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DojoSponsorCmd::clear_has_dojoid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DojoSponsorCmd::clear_dojoid() {
  dojoid_ = 0u;
  clear_has_dojoid();
}
inline ::google::protobuf::uint32 DojoSponsorCmd::dojoid() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoSponsorCmd.dojoid)
  return dojoid_;
}
inline void DojoSponsorCmd::set_dojoid(::google::protobuf::uint32 value) {
  set_has_dojoid();
  dojoid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoSponsorCmd.dojoid)
}

// optional bool is_cancel = 4 [default = false];
inline bool DojoSponsorCmd::has_is_cancel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DojoSponsorCmd::set_has_is_cancel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DojoSponsorCmd::clear_has_is_cancel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DojoSponsorCmd::clear_is_cancel() {
  is_cancel_ = false;
  clear_has_is_cancel();
}
inline bool DojoSponsorCmd::is_cancel() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoSponsorCmd.is_cancel)
  return is_cancel_;
}
inline void DojoSponsorCmd::set_is_cancel(bool value) {
  set_has_is_cancel();
  is_cancel_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoSponsorCmd.is_cancel)
}

// optional uint64 sponsorid = 5;
inline bool DojoSponsorCmd::has_sponsorid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DojoSponsorCmd::set_has_sponsorid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DojoSponsorCmd::clear_has_sponsorid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DojoSponsorCmd::clear_sponsorid() {
  sponsorid_ = GOOGLE_ULONGLONG(0);
  clear_has_sponsorid();
}
inline ::google::protobuf::uint64 DojoSponsorCmd::sponsorid() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoSponsorCmd.sponsorid)
  return sponsorid_;
}
inline void DojoSponsorCmd::set_sponsorid(::google::protobuf::uint64 value) {
  set_has_sponsorid();
  sponsorid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoSponsorCmd.sponsorid)
}

// optional string sponsorname = 6;
inline bool DojoSponsorCmd::has_sponsorname() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DojoSponsorCmd::set_has_sponsorname() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DojoSponsorCmd::clear_has_sponsorname() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DojoSponsorCmd::clear_sponsorname() {
  if (sponsorname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sponsorname_->clear();
  }
  clear_has_sponsorname();
}
inline const ::std::string& DojoSponsorCmd::sponsorname() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoSponsorCmd.sponsorname)
  return *sponsorname_;
}
inline void DojoSponsorCmd::set_sponsorname(const ::std::string& value) {
  set_has_sponsorname();
  if (sponsorname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sponsorname_ = new ::std::string;
  }
  sponsorname_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.DojoSponsorCmd.sponsorname)
}
inline void DojoSponsorCmd::set_sponsorname(const char* value) {
  set_has_sponsorname();
  if (sponsorname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sponsorname_ = new ::std::string;
  }
  sponsorname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.DojoSponsorCmd.sponsorname)
}
inline void DojoSponsorCmd::set_sponsorname(const char* value, size_t size) {
  set_has_sponsorname();
  if (sponsorname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sponsorname_ = new ::std::string;
  }
  sponsorname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.DojoSponsorCmd.sponsorname)
}
inline ::std::string* DojoSponsorCmd::mutable_sponsorname() {
  set_has_sponsorname();
  if (sponsorname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sponsorname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.DojoSponsorCmd.sponsorname)
  return sponsorname_;
}
inline ::std::string* DojoSponsorCmd::release_sponsorname() {
  clear_has_sponsorname();
  if (sponsorname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sponsorname_;
    sponsorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DojoSponsorCmd::set_allocated_sponsorname(::std::string* sponsorname) {
  if (sponsorname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sponsorname_;
  }
  if (sponsorname) {
    set_has_sponsorname();
    sponsorname_ = sponsorname;
  } else {
    clear_has_sponsorname();
    sponsorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.DojoSponsorCmd.sponsorname)
}

// optional bool ret = 7;
inline bool DojoSponsorCmd::has_ret() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DojoSponsorCmd::set_has_ret() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DojoSponsorCmd::clear_has_ret() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DojoSponsorCmd::clear_ret() {
  ret_ = false;
  clear_has_ret();
}
inline bool DojoSponsorCmd::ret() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoSponsorCmd.ret)
  return ret_;
}
inline void DojoSponsorCmd::set_ret(bool value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoSponsorCmd.ret)
}

// -------------------------------------------------------------------

// DojoQueryStateCmd

// optional .Cmd.Command cmd = 1 [default = DOJO_PROTOCMD];
inline bool DojoQueryStateCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DojoQueryStateCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DojoQueryStateCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DojoQueryStateCmd::clear_cmd() {
  cmd_ = 58;
  clear_has_cmd();
}
inline ::Cmd::Command DojoQueryStateCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoQueryStateCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void DojoQueryStateCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoQueryStateCmd.cmd)
}

// optional .Cmd.DojoParam param = 2 [default = EDOJOPARAM_QUERYSTATE];
inline bool DojoQueryStateCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DojoQueryStateCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DojoQueryStateCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DojoQueryStateCmd::clear_param() {
  param_ = 10;
  clear_has_param();
}
inline ::Cmd::DojoParam DojoQueryStateCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoQueryStateCmd.param)
  return static_cast< ::Cmd::DojoParam >(param_);
}
inline void DojoQueryStateCmd::set_param(::Cmd::DojoParam value) {
  assert(::Cmd::DojoParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoQueryStateCmd.param)
}

// optional .Cmd.DojoState state = 3;
inline bool DojoQueryStateCmd::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DojoQueryStateCmd::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DojoQueryStateCmd::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DojoQueryStateCmd::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::Cmd::DojoState DojoQueryStateCmd::state() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoQueryStateCmd.state)
  return static_cast< ::Cmd::DojoState >(state_);
}
inline void DojoQueryStateCmd::set_state(::Cmd::DojoState value) {
  assert(::Cmd::DojoState_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoQueryStateCmd.state)
}

// optional uint32 dojoid = 4;
inline bool DojoQueryStateCmd::has_dojoid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DojoQueryStateCmd::set_has_dojoid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DojoQueryStateCmd::clear_has_dojoid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DojoQueryStateCmd::clear_dojoid() {
  dojoid_ = 0u;
  clear_has_dojoid();
}
inline ::google::protobuf::uint32 DojoQueryStateCmd::dojoid() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoQueryStateCmd.dojoid)
  return dojoid_;
}
inline void DojoQueryStateCmd::set_dojoid(::google::protobuf::uint32 value) {
  set_has_dojoid();
  dojoid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoQueryStateCmd.dojoid)
}

// optional uint64 sponsorid = 5;
inline bool DojoQueryStateCmd::has_sponsorid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DojoQueryStateCmd::set_has_sponsorid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DojoQueryStateCmd::clear_has_sponsorid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DojoQueryStateCmd::clear_sponsorid() {
  sponsorid_ = GOOGLE_ULONGLONG(0);
  clear_has_sponsorid();
}
inline ::google::protobuf::uint64 DojoQueryStateCmd::sponsorid() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoQueryStateCmd.sponsorid)
  return sponsorid_;
}
inline void DojoQueryStateCmd::set_sponsorid(::google::protobuf::uint64 value) {
  set_has_sponsorid();
  sponsorid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoQueryStateCmd.sponsorid)
}

// optional string sponsorname = 6;
inline bool DojoQueryStateCmd::has_sponsorname() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DojoQueryStateCmd::set_has_sponsorname() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DojoQueryStateCmd::clear_has_sponsorname() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DojoQueryStateCmd::clear_sponsorname() {
  if (sponsorname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sponsorname_->clear();
  }
  clear_has_sponsorname();
}
inline const ::std::string& DojoQueryStateCmd::sponsorname() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoQueryStateCmd.sponsorname)
  return *sponsorname_;
}
inline void DojoQueryStateCmd::set_sponsorname(const ::std::string& value) {
  set_has_sponsorname();
  if (sponsorname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sponsorname_ = new ::std::string;
  }
  sponsorname_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.DojoQueryStateCmd.sponsorname)
}
inline void DojoQueryStateCmd::set_sponsorname(const char* value) {
  set_has_sponsorname();
  if (sponsorname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sponsorname_ = new ::std::string;
  }
  sponsorname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.DojoQueryStateCmd.sponsorname)
}
inline void DojoQueryStateCmd::set_sponsorname(const char* value, size_t size) {
  set_has_sponsorname();
  if (sponsorname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sponsorname_ = new ::std::string;
  }
  sponsorname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.DojoQueryStateCmd.sponsorname)
}
inline ::std::string* DojoQueryStateCmd::mutable_sponsorname() {
  set_has_sponsorname();
  if (sponsorname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sponsorname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.DojoQueryStateCmd.sponsorname)
  return sponsorname_;
}
inline ::std::string* DojoQueryStateCmd::release_sponsorname() {
  clear_has_sponsorname();
  if (sponsorname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sponsorname_;
    sponsorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DojoQueryStateCmd::set_allocated_sponsorname(::std::string* sponsorname) {
  if (sponsorname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sponsorname_;
  }
  if (sponsorname) {
    set_has_sponsorname();
    sponsorname_ = sponsorname;
  } else {
    clear_has_sponsorname();
    sponsorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.DojoQueryStateCmd.sponsorname)
}

// optional bool ret = 7;
inline bool DojoQueryStateCmd::has_ret() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DojoQueryStateCmd::set_has_ret() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DojoQueryStateCmd::clear_has_ret() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DojoQueryStateCmd::clear_ret() {
  ret_ = false;
  clear_has_ret();
}
inline bool DojoQueryStateCmd::ret() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoQueryStateCmd.ret)
  return ret_;
}
inline void DojoQueryStateCmd::set_ret(bool value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoQueryStateCmd.ret)
}

// -------------------------------------------------------------------

// DojoRewardCmd

// optional .Cmd.Command cmd = 1 [default = DOJO_PROTOCMD];
inline bool DojoRewardCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DojoRewardCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DojoRewardCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DojoRewardCmd::clear_cmd() {
  cmd_ = 58;
  clear_has_cmd();
}
inline ::Cmd::Command DojoRewardCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoRewardCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void DojoRewardCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoRewardCmd.cmd)
}

// optional .Cmd.DojoParam param = 2 [default = EDOJOPARAM_REWARD];
inline bool DojoRewardCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DojoRewardCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DojoRewardCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DojoRewardCmd::clear_param() {
  param_ = 11;
  clear_has_param();
}
inline ::Cmd::DojoParam DojoRewardCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoRewardCmd.param)
  return static_cast< ::Cmd::DojoParam >(param_);
}
inline void DojoRewardCmd::set_param(::Cmd::DojoParam value) {
  assert(::Cmd::DojoParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoRewardCmd.param)
}

// optional uint32 dojoid = 3;
inline bool DojoRewardCmd::has_dojoid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DojoRewardCmd::set_has_dojoid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DojoRewardCmd::clear_has_dojoid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DojoRewardCmd::clear_dojoid() {
  dojoid_ = 0u;
  clear_has_dojoid();
}
inline ::google::protobuf::uint32 DojoRewardCmd::dojoid() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoRewardCmd.dojoid)
  return dojoid_;
}
inline void DojoRewardCmd::set_dojoid(::google::protobuf::uint32 value) {
  set_has_dojoid();
  dojoid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoRewardCmd.dojoid)
}

// optional .Cmd.EPassType passtype = 4;
inline bool DojoRewardCmd::has_passtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DojoRewardCmd::set_has_passtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DojoRewardCmd::clear_has_passtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DojoRewardCmd::clear_passtype() {
  passtype_ = 1;
  clear_has_passtype();
}
inline ::Cmd::EPassType DojoRewardCmd::passtype() const {
  // @@protoc_insertion_point(field_get:Cmd.DojoRewardCmd.passtype)
  return static_cast< ::Cmd::EPassType >(passtype_);
}
inline void DojoRewardCmd::set_passtype(::Cmd::EPassType value) {
  assert(::Cmd::EPassType_IsValid(value));
  set_has_passtype();
  passtype_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DojoRewardCmd.passtype)
}

// repeated .Cmd.ItemInfo items = 5;
inline int DojoRewardCmd::items_size() const {
  return items_.size();
}
inline void DojoRewardCmd::clear_items() {
  items_.Clear();
}
inline const ::Cmd::ItemInfo& DojoRewardCmd::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.DojoRewardCmd.items)
  return items_.Get(index);
}
inline ::Cmd::ItemInfo* DojoRewardCmd::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.DojoRewardCmd.items)
  return items_.Mutable(index);
}
inline ::Cmd::ItemInfo* DojoRewardCmd::add_items() {
  // @@protoc_insertion_point(field_add:Cmd.DojoRewardCmd.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo >&
DojoRewardCmd::items() const {
  // @@protoc_insertion_point(field_list:Cmd.DojoRewardCmd.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo >*
DojoRewardCmd::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.DojoRewardCmd.items)
  return &items_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cmd

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Cmd::DojoParam> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::DojoParam>() {
  return ::Cmd::DojoParam_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EDojoReply> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EDojoReply>() {
  return ::Cmd::EDojoReply_descriptor();
}
template <> struct is_proto_enum< ::Cmd::DojoState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::DojoState>() {
  return ::Cmd::DojoState_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EPassType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EPassType>() {
  return ::Cmd::EPassType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Dojo_2eproto__INCLUDED
