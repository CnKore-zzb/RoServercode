// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PlatCmd.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PlatCmd.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Cmd {

namespace {

const ::google::protobuf::Descriptor* Boolean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Boolean_reflection_ = NULL;
const ::google::protobuf::Descriptor* TextCheck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TextCheck_reflection_ = NULL;
const ::google::protobuf::Descriptor* TextCheckResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TextCheckResult_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PCommand_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_PlatCmd_2eproto() {
  protobuf_AddDesc_PlatCmd_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "PlatCmd.proto");
  GOOGLE_CHECK(file != NULL);
  Boolean_descriptor_ = file->message_type(0);
  static const int Boolean_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Boolean, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Boolean, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Boolean, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Boolean, message_),
  };
  Boolean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Boolean_descriptor_,
      Boolean::default_instance_,
      Boolean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Boolean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Boolean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Boolean));
  TextCheck_descriptor_ = file->message_type(1);
  static const int TextCheck_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextCheck, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextCheck, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextCheck, project_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextCheck, app_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextCheck, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextCheck, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextCheck, group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextCheck, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextCheck, replacement_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextCheck, createtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextCheck, ext_),
  };
  TextCheck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TextCheck_descriptor_,
      TextCheck::default_instance_,
      TextCheck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextCheck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextCheck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TextCheck));
  TextCheckResult_descriptor_ = file->message_type(2);
  static const int TextCheckResult_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextCheckResult, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextCheckResult, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextCheckResult, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextCheckResult, content_),
  };
  TextCheckResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TextCheckResult_descriptor_,
      TextCheckResult::default_instance_,
      TextCheckResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextCheckResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextCheckResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TextCheckResult));
  PCommand_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_PlatCmd_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Boolean_descriptor_, &Boolean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TextCheck_descriptor_, &TextCheck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TextCheckResult_descriptor_, &TextCheckResult::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_PlatCmd_2eproto() {
  delete Boolean::default_instance_;
  delete Boolean_reflection_;
  delete TextCheck::default_instance_;
  delete TextCheck_reflection_;
  delete TextCheck::_default_replacement_;
  delete TextCheckResult::default_instance_;
  delete TextCheckResult_reflection_;
}

void protobuf_AddDesc_PlatCmd_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rPlatCmd.proto\022\003Cmd\"b\n\007Boolean\022#\n\003cmd\030\001"
    " \001(\0162\r.Cmd.PCommand:\007BOOLEAN\022\020\n\005param\030\002 "
    "\001(\r:\0010\022\017\n\004code\030\003 \001(\r:\0010\022\017\n\007message\030\004 \001(\t"
    "\"\327\001\n\tTextCheck\022&\n\003cmd\030\001 \001(\0162\r.Cmd.PComma"
    "nd:\nTEXT_CHECK\022\020\n\005param\030\002 \001(\r:\0010\022\017\n\007proj"
    "ect\030\003 \001(\t\022\013\n\003app\030\004 \001(\t\022\013\n\003uid\030\005 \001(\t\022\014\n\004n"
    "ame\030\006 \001(\t\022\r\n\005group\030\007 \001(\r\022\017\n\007content\030\010 \001("
    "\t\022\026\n\013replacement\030\t \001(\t:\001*\022\022\n\ncreateTime\030"
    "\n \001(\r\022\013\n\003ext\030\013 \001(\t\"t\n\017TextCheckResult\022-\n"
    "\003cmd\030\001 \001(\0162\r.Cmd.PCommand:\021TEXT_CHECK_RE"
    "SULT\022\020\n\005param\030\002 \001(\r:\0010\022\017\n\004type\030\003 \001(\r:\0011\022"
    "\017\n\007content\030\004 \001(\t*>\n\010PCommand\022\013\n\007BOOLEAN\020"
    "\000\022\016\n\nTEXT_CHECK\020\001\022\025\n\021TEXT_CHECK_RESULT\020\002", 520);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PlatCmd.proto", &protobuf_RegisterTypes);
  Boolean::default_instance_ = new Boolean();
  TextCheck::_default_replacement_ =
      new ::std::string("*", 1);
  TextCheck::default_instance_ = new TextCheck();
  TextCheckResult::default_instance_ = new TextCheckResult();
  Boolean::default_instance_->InitAsDefaultInstance();
  TextCheck::default_instance_->InitAsDefaultInstance();
  TextCheckResult::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_PlatCmd_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_PlatCmd_2eproto {
  StaticDescriptorInitializer_PlatCmd_2eproto() {
    protobuf_AddDesc_PlatCmd_2eproto();
  }
} static_descriptor_initializer_PlatCmd_2eproto_;
const ::google::protobuf::EnumDescriptor* PCommand_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PCommand_descriptor_;
}
bool PCommand_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int Boolean::kCmdFieldNumber;
const int Boolean::kParamFieldNumber;
const int Boolean::kCodeFieldNumber;
const int Boolean::kMessageFieldNumber;
#endif  // !_MSC_VER

Boolean::Boolean()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.Boolean)
}

void Boolean::InitAsDefaultInstance() {
}

Boolean::Boolean(const Boolean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.Boolean)
}

void Boolean::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  cmd_ = 0;
  param_ = 0u;
  code_ = 0u;
  message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Boolean::~Boolean() {
  // @@protoc_insertion_point(destructor:Cmd.Boolean)
  SharedDtor();
}

void Boolean::SharedDtor() {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (this != default_instance_) {
  }
}

void Boolean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Boolean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Boolean_descriptor_;
}

const Boolean& Boolean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PlatCmd_2eproto();
  return *default_instance_;
}

Boolean* Boolean::default_instance_ = NULL;

Boolean* Boolean::New() const {
  return new Boolean;
}

void Boolean::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Boolean*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(cmd_, param_);
    code_ = 0u;
    if (has_message()) {
      if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        message_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Boolean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.Boolean)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.PCommand cmd = 1 [default = BOOLEAN];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::PCommand_IsValid(value)) {
            set_cmd(static_cast< ::Cmd::PCommand >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_param;
        break;
      }

      // optional uint32 param = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_param:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param_)));
          set_has_param();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_code;
        break;
      }

      // optional uint32 code = 3 [default = 0];
      case 3: {
        if (tag == 24) {
         parse_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &code_)));
          set_has_code();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_message;
        break;
      }

      // optional string message = 4;
      case 4: {
        if (tag == 34) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.Boolean)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.Boolean)
  return false;
#undef DO_
}

void Boolean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.Boolean)
  // optional .Cmd.PCommand cmd = 1 [default = BOOLEAN];
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional uint32 param = 2 [default = 0];
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->param(), output);
  }

  // optional uint32 code = 3 [default = 0];
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->code(), output);
  }

  // optional string message = 4;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->message(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.Boolean)
}

::google::protobuf::uint8* Boolean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.Boolean)
  // optional .Cmd.PCommand cmd = 1 [default = BOOLEAN];
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional uint32 param = 2 [default = 0];
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->param(), target);
  }

  // optional uint32 code = 3 [default = 0];
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->code(), target);
  }

  // optional string message = 4;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->message(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.Boolean)
  return target;
}

int Boolean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.PCommand cmd = 1 [default = BOOLEAN];
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
    }

    // optional uint32 param = 2 [default = 0];
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->param());
    }

    // optional uint32 code = 3 [default = 0];
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->code());
    }

    // optional string message = 4;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Boolean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Boolean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Boolean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Boolean::MergeFrom(const Boolean& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
    if (from.has_code()) {
      set_code(from.code());
    }
    if (from.has_message()) {
      set_message(from.message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Boolean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Boolean::CopyFrom(const Boolean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Boolean::IsInitialized() const {

  return true;
}

void Boolean::Swap(Boolean* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(param_, other->param_);
    std::swap(code_, other->code_);
    std::swap(message_, other->message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Boolean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Boolean_descriptor_;
  metadata.reflection = Boolean_reflection_;
  return metadata;
}


// ===================================================================

::std::string* TextCheck::_default_replacement_ = NULL;
#ifndef _MSC_VER
const int TextCheck::kCmdFieldNumber;
const int TextCheck::kParamFieldNumber;
const int TextCheck::kProjectFieldNumber;
const int TextCheck::kAppFieldNumber;
const int TextCheck::kUidFieldNumber;
const int TextCheck::kNameFieldNumber;
const int TextCheck::kGroupFieldNumber;
const int TextCheck::kContentFieldNumber;
const int TextCheck::kReplacementFieldNumber;
const int TextCheck::kCreateTimeFieldNumber;
const int TextCheck::kExtFieldNumber;
#endif  // !_MSC_VER

TextCheck::TextCheck()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.TextCheck)
}

void TextCheck::InitAsDefaultInstance() {
}

TextCheck::TextCheck(const TextCheck& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.TextCheck)
}

void TextCheck::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  cmd_ = 1;
  param_ = 0u;
  project_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_ = 0u;
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  replacement_ = const_cast< ::std::string*>(_default_replacement_);
  createtime_ = 0u;
  ext_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TextCheck::~TextCheck() {
  // @@protoc_insertion_point(destructor:Cmd.TextCheck)
  SharedDtor();
}

void TextCheck::SharedDtor() {
  if (project_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete project_;
  }
  if (app_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete app_;
  }
  if (uid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uid_;
  }
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (replacement_ != _default_replacement_) {
    delete replacement_;
  }
  if (ext_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ext_;
  }
  if (this != default_instance_) {
  }
}

void TextCheck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TextCheck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TextCheck_descriptor_;
}

const TextCheck& TextCheck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PlatCmd_2eproto();
  return *default_instance_;
}

TextCheck* TextCheck::default_instance_ = NULL;

TextCheck* TextCheck::New() const {
  return new TextCheck;
}

void TextCheck::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    cmd_ = 1;
    param_ = 0u;
    if (has_project()) {
      if (project_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        project_->clear();
      }
    }
    if (has_app()) {
      if (app_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        app_->clear();
      }
    }
    if (has_uid()) {
      if (uid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        uid_->clear();
      }
    }
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    group_ = 0u;
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        content_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 1792) {
    if (has_replacement()) {
      if (replacement_ != _default_replacement_) {
        replacement_->assign(*_default_replacement_);
      }
    }
    createtime_ = 0u;
    if (has_ext()) {
      if (ext_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        ext_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TextCheck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.TextCheck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.PCommand cmd = 1 [default = TEXT_CHECK];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::PCommand_IsValid(value)) {
            set_cmd(static_cast< ::Cmd::PCommand >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_param;
        break;
      }

      // optional uint32 param = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_param:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param_)));
          set_has_param();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_project;
        break;
      }

      // optional string project = 3;
      case 3: {
        if (tag == 26) {
         parse_project:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->project().data(), this->project().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "project");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_app;
        break;
      }

      // optional string app = 4;
      case 4: {
        if (tag == 34) {
         parse_app:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->app().data(), this->app().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "app");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_uid;
        break;
      }

      // optional string uid = 5;
      case 5: {
        if (tag == 42) {
         parse_uid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uid().data(), this->uid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "uid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_name;
        break;
      }

      // optional string name = 6;
      case 6: {
        if (tag == 50) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_group;
        break;
      }

      // optional uint32 group = 7;
      case 7: {
        if (tag == 56) {
         parse_group:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_)));
          set_has_group();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_content;
        break;
      }

      // optional string content = 8;
      case 8: {
        if (tag == 66) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "content");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_replacement;
        break;
      }

      // optional string replacement = 9 [default = "*"];
      case 9: {
        if (tag == 74) {
         parse_replacement:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_replacement()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->replacement().data(), this->replacement().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "replacement");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_createTime;
        break;
      }

      // optional uint32 createTime = 10;
      case 10: {
        if (tag == 80) {
         parse_createTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &createtime_)));
          set_has_createtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_ext;
        break;
      }

      // optional string ext = 11;
      case 11: {
        if (tag == 90) {
         parse_ext:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ext()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ext().data(), this->ext().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ext");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.TextCheck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.TextCheck)
  return false;
#undef DO_
}

void TextCheck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.TextCheck)
  // optional .Cmd.PCommand cmd = 1 [default = TEXT_CHECK];
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional uint32 param = 2 [default = 0];
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->param(), output);
  }

  // optional string project = 3;
  if (has_project()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->project().data(), this->project().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "project");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->project(), output);
  }

  // optional string app = 4;
  if (has_app()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app().data(), this->app().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "app");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->app(), output);
  }

  // optional string uid = 5;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->uid(), output);
  }

  // optional string name = 6;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  // optional uint32 group = 7;
  if (has_group()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->group(), output);
  }

  // optional string content = 8;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->content(), output);
  }

  // optional string replacement = 9 [default = "*"];
  if (has_replacement()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->replacement().data(), this->replacement().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "replacement");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->replacement(), output);
  }

  // optional uint32 createTime = 10;
  if (has_createtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->createtime(), output);
  }

  // optional string ext = 11;
  if (has_ext()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ext().data(), this->ext().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ext");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->ext(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.TextCheck)
}

::google::protobuf::uint8* TextCheck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.TextCheck)
  // optional .Cmd.PCommand cmd = 1 [default = TEXT_CHECK];
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional uint32 param = 2 [default = 0];
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->param(), target);
  }

  // optional string project = 3;
  if (has_project()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->project().data(), this->project().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "project");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->project(), target);
  }

  // optional string app = 4;
  if (has_app()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app().data(), this->app().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "app");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->app(), target);
  }

  // optional string uid = 5;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->uid(), target);
  }

  // optional string name = 6;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  // optional uint32 group = 7;
  if (has_group()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->group(), target);
  }

  // optional string content = 8;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->content(), target);
  }

  // optional string replacement = 9 [default = "*"];
  if (has_replacement()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->replacement().data(), this->replacement().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "replacement");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->replacement(), target);
  }

  // optional uint32 createTime = 10;
  if (has_createtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->createtime(), target);
  }

  // optional string ext = 11;
  if (has_ext()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ext().data(), this->ext().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ext");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->ext(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.TextCheck)
  return target;
}

int TextCheck::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.PCommand cmd = 1 [default = TEXT_CHECK];
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
    }

    // optional uint32 param = 2 [default = 0];
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->param());
    }

    // optional string project = 3;
    if (has_project()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->project());
    }

    // optional string app = 4;
    if (has_app()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->app());
    }

    // optional string uid = 5;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uid());
    }

    // optional string name = 6;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint32 group = 7;
    if (has_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->group());
    }

    // optional string content = 8;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string replacement = 9 [default = "*"];
    if (has_replacement()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->replacement());
    }

    // optional uint32 createTime = 10;
    if (has_createtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->createtime());
    }

    // optional string ext = 11;
    if (has_ext()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ext());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TextCheck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TextCheck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TextCheck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TextCheck::MergeFrom(const TextCheck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
    if (from.has_project()) {
      set_project(from.project());
    }
    if (from.has_app()) {
      set_app(from.app());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_group()) {
      set_group(from.group());
    }
    if (from.has_content()) {
      set_content(from.content());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_replacement()) {
      set_replacement(from.replacement());
    }
    if (from.has_createtime()) {
      set_createtime(from.createtime());
    }
    if (from.has_ext()) {
      set_ext(from.ext());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TextCheck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TextCheck::CopyFrom(const TextCheck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextCheck::IsInitialized() const {

  return true;
}

void TextCheck::Swap(TextCheck* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(param_, other->param_);
    std::swap(project_, other->project_);
    std::swap(app_, other->app_);
    std::swap(uid_, other->uid_);
    std::swap(name_, other->name_);
    std::swap(group_, other->group_);
    std::swap(content_, other->content_);
    std::swap(replacement_, other->replacement_);
    std::swap(createtime_, other->createtime_);
    std::swap(ext_, other->ext_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TextCheck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TextCheck_descriptor_;
  metadata.reflection = TextCheck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TextCheckResult::kCmdFieldNumber;
const int TextCheckResult::kParamFieldNumber;
const int TextCheckResult::kTypeFieldNumber;
const int TextCheckResult::kContentFieldNumber;
#endif  // !_MSC_VER

TextCheckResult::TextCheckResult()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.TextCheckResult)
}

void TextCheckResult::InitAsDefaultInstance() {
}

TextCheckResult::TextCheckResult(const TextCheckResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.TextCheckResult)
}

void TextCheckResult::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  cmd_ = 2;
  param_ = 0u;
  type_ = 1u;
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TextCheckResult::~TextCheckResult() {
  // @@protoc_insertion_point(destructor:Cmd.TextCheckResult)
  SharedDtor();
}

void TextCheckResult::SharedDtor() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (this != default_instance_) {
  }
}

void TextCheckResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TextCheckResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TextCheckResult_descriptor_;
}

const TextCheckResult& TextCheckResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PlatCmd_2eproto();
  return *default_instance_;
}

TextCheckResult* TextCheckResult::default_instance_ = NULL;

TextCheckResult* TextCheckResult::New() const {
  return new TextCheckResult;
}

void TextCheckResult::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    cmd_ = 2;
    param_ = 0u;
    type_ = 1u;
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        content_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TextCheckResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.TextCheckResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.PCommand cmd = 1 [default = TEXT_CHECK_RESULT];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::PCommand_IsValid(value)) {
            set_cmd(static_cast< ::Cmd::PCommand >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_param;
        break;
      }

      // optional uint32 param = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_param:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param_)));
          set_has_param();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // optional uint32 type = 3 [default = 1];
      case 3: {
        if (tag == 24) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_content;
        break;
      }

      // optional string content = 4;
      case 4: {
        if (tag == 34) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "content");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.TextCheckResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.TextCheckResult)
  return false;
#undef DO_
}

void TextCheckResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.TextCheckResult)
  // optional .Cmd.PCommand cmd = 1 [default = TEXT_CHECK_RESULT];
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional uint32 param = 2 [default = 0];
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->param(), output);
  }

  // optional uint32 type = 3 [default = 1];
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->type(), output);
  }

  // optional string content = 4;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->content(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.TextCheckResult)
}

::google::protobuf::uint8* TextCheckResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.TextCheckResult)
  // optional .Cmd.PCommand cmd = 1 [default = TEXT_CHECK_RESULT];
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional uint32 param = 2 [default = 0];
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->param(), target);
  }

  // optional uint32 type = 3 [default = 1];
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->type(), target);
  }

  // optional string content = 4;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->content(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.TextCheckResult)
  return target;
}

int TextCheckResult::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.PCommand cmd = 1 [default = TEXT_CHECK_RESULT];
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
    }

    // optional uint32 param = 2 [default = 0];
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->param());
    }

    // optional uint32 type = 3 [default = 1];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // optional string content = 4;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TextCheckResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TextCheckResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TextCheckResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TextCheckResult::MergeFrom(const TextCheckResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_content()) {
      set_content(from.content());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TextCheckResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TextCheckResult::CopyFrom(const TextCheckResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextCheckResult::IsInitialized() const {

  return true;
}

void TextCheckResult::Swap(TextCheckResult* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(param_, other->param_);
    std::swap(type_, other->type_);
    std::swap(content_, other->content_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TextCheckResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TextCheckResult_descriptor_;
  metadata.reflection = TextCheckResult_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cmd

// @@protoc_insertion_point(global_scope)
