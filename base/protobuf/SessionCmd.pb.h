// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SessionCmd.proto

#ifndef PROTOBUF_SessionCmd_2eproto__INCLUDED
#define PROTOBUF_SessionCmd_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "xCmd.pb.h"
#include "ProtoCommon.pb.h"
#include "SceneUser.pb.h"
#include "SceneItem.pb.h"
#include "SessionMail.pb.h"
#include "ChatCmd.pb.h"
#include "SceneUser2.pb.h"
#include "SystemCmd.pb.h"
#include "RecordTrade.pb.h"
#include "GuildSCmd.pb.h"
#include "ActivityEvent.pb.h"
#include "Var.pb.h"
// @@protoc_insertion_point(includes)

namespace Cmd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SessionCmd_2eproto();
void protobuf_AssignDesc_SessionCmd_2eproto();
void protobuf_ShutdownFile_SessionCmd_2eproto();

class RaidMapData;
class MapRegSessionCmd;
class CreateRaidMapSessionCmd;
class DeleteDMapSessionCmd;
class ChangeSceneSessionCmd;
class ChangeSceneResultSessionCmd;
class UserDataSync;
class GoToUserMapSessionCmd;
class LoadLuaSessionCmd;
class ExecGMCmdSessionCmd;
class TowerLayer;
class TowerInfo;
class SceneTowerUpdate;
class TowerMonsterKill;
class SendMail;
class SessionSceneUserCmd;
class GetMailAttachSessionCmd;
class FollowerIDCheck;
class Event;
class ChatMsgSession;
class SetGlobalDaily;
class RefreshQuest;
class QuerySealTimer;
class DelSceneImage;
class SetTeamSeal;
class UserLoginNtfSessionCmd;
class RefreshTower;
class NotifyLoginSessionCmd;
class ErrSetUserDataSessionCmd;
class ChangeSceneSingleSessionCmd;
class RegMapFailSessionCmd;
class RegMapOKSessionCmd;
class ForwardUserSessionCmd;
class ForwardUserSceneSessionCmd;
class ForwardUserSessionSessionCmd;
class ForwardUserSceneSvrSessionCmd;
class EnterGuildTerritorySessionCmd;
class SyncDojoSessionCmd;
class ChargeSessionCmd;
class GagSessionCmd;
class LockSessionCmd;
class IteamImageSessionCmd;
class FerrisInviteSessionCmd;
class EnterFerrisReadySessionCmd;
class ActivityTestAndSetSessionCmd;
class ActivityStatusSessionCmd;
class ChangeTeamSessionCmd;
class ForwardRegionSessionCmd;
class BreakHandSessionCmd;
class ActivityStopSessionCmd;
class WantedInfoSyncSessionCmd;
class QueryZoneStatusSessionCmd;
class SendMailFromScene;
class GetTradeLogSessionCmd;
class QuestRaidCloseSessionCmd;
class AuthorizeInfoSessionCmd;
class GuildRaidCloseSessionCmd;
class DeletePwdSessionCmd;
class GoBackSessionCmd;
class WantedQuestFinishCmd;
class AddOfflineItemSessionCmd;
class UpdateOperActivitySessionCmd;
class SessionShopData;
class SyncShopSessionCmd;
class UpdateActivityEventSessionCmd;
class ActivityEventNtfSessionCmd;
class LoveLetterSessionCmd;
class LoveLetterSendSessionCmd;
class UseItemCodeSessionCmd;
class ReqUsedItemCodeSessionCmd;
class GlobalActivityStartSessionCmd;
class GlobalActivityStopSessionCmd;
class ReqLotteryGiveSessionCmd;
class SyncOperateRewardSessionCmd;
class NotifyActivitySessionCmd;
class GiveRewardSessionCmd;
class WantedQuestSetCDSessionCmd;
class UserQuotaOperSessionCmd;
class SyncWorldLevelSessionCmd;
class UserEnterSceneSessionCmd;
class SyncUserVarSessionCmd;

enum SessionParam {
  MAP_REG_SESSIONCMD = 1,
  CREATE_RAIDMAP_SESSIONCMD = 2,
  DELETE_DMAP_SESSIONCMD = 3,
  CHANGE_SCENE_SESSIONCMD = 4,
  CHANGE_SCENE_RESULT_SESSIONCMD = 5,
  CMDPARAM_USER_DATA_SYNC = 6,
  GOTO_USER_MAP_SESSIONCMD = 9,
  LOAD_LUA_SESSIONCMD = 10,
  CHAT_MSG = 11,
  TOWERINFO_UPDATE = 13,
  TOWER_MONSTERKILL = 15,
  CMDPARAM_SEND_MAIL = 19,
  SESSIONPARAM_GET_MAILATTACH = 20,
  CMDPARAM_SCENEUSERCMD = 21,
  CMDPARAM_FOLLOWERIDCHECK = 22,
  CMDPARAM_EVENT = 23,
  CMDPARAM_SET_GLOBL_DAILY = 24,
  CMDPARAM_SEALTIMER = 25,
  DEL_SCENE_IMAGE = 26,
  CMDPARAM_SET_SEAL = 27,
  CMDPARAM_REFRESH_QUEST = 28,
  CMDPARAM_INVITE_HANDS = 29,
  SESSIONPARAM_USERLOGIN_NTF = 31,
  CMDPARAM_REFRESH_TOWER = 32,
  SESSIONPARAM_NOTIFY_LOGIN = 33,
  SESSIONPARAM_ERR_SET_USERDATA = 34,
  SESSIONPARAM_CHANGESCENE = 35,
  SESSIONPARAM_REGMAPFAIL = 36,
  SESSIONPARAM_REGMAPOK = 37,
  SESSIONPARAM_FORWARDUSER = 38,
  SESSIONPARAM_FORWARDUSERSCENE = 39,
  SESSIONPARAM_FORWARDUSERSESSION = 40,
  SESSIONPARAM_FORWARDUSERSCENESVR = 41,
  SESSIONPARAM_ENTERGUILD = 50,
  SESSIONPARAM_SYNC_DOJO = 52,
  SESSIONPARAM_CHARGE = 54,
  SESSIONPARAM_GM_GAG = 55,
  SESSIONPARAM_GM_LOCK = 56,
  SESSIONPARAM_ITEMIMAGE = 59,
  SESSIONPARAM_FERRIS_INVITE = 60,
  SESSIONPARAM_FERRIS_READYENTER = 61,
  SESSIONPARAM_ACTIVITY_TESTANDSET = 62,
  SESSIONPARAM_ACTIVITY_STATUS = 63,
  SESSIONPARAM_CHANGE_TEAM = 64,
  SESSIONPARAM_FORWARD_REGION = 65,
  SESSIONPARAM_BREAK_HAND = 66,
  SESSIONPARAM_ACTIVITY_STOP = 67,
  SESSIONPARAM_WANTED_INFO_SYNC = 68,
  SESSIONPARAM_ZONE_QUERYSTATUS = 69,
  CMDPARAM_SEND_MAIL_FROM_SCENE = 70,
  SESSIONPARAM_GET_TRADELOG = 71,
  EXEC_GM_CMD_SESSIONCMD = 72,
  SESSIONPARAM_QUEST_RAID_CLOSE = 73,
  SESSIONPARAM_GUILDRAID_CLOSE = 74,
  SESSIONPARAM_SYNC_AUTHORIZE = 75,
  SESSIONPARAM_DELETE_AUTHORIZE = 76,
  SESSIONPARAM_GO_BACK = 77,
  SESSIONPARAM_WANTED_QUEST_FINISH = 78,
  SESSIONPARAM_ADD_OFFLINE_ITEM = 79,
  SESSIONPARAM_UPDATE_OPERACTIVITY = 81,
  SESSIONPARAM_SYNC_SHOP = 82,
  SESSIONPARAM_LOVELETTER_USE = 85,
  SESSIONPARAM_LOVELETTER_SEND = 86,
  SESSIONPARAM_UPDATE_ACTIVITYEVENT = 87,
  SESSIONPARAM_ACTIVITYEVENT_NTF = 88,
  SESSIONPARAM_USE_ITEMCODE = 89,
  SESSIONPARAM_REQ_USED_ITEMCODE = 90,
  SESSIONPARAM_GLOBALACTIVITY_START = 91,
  SESSIONPARAM_GLOBALACTIVITY_STOP = 92,
  SESSIONPARAM_REQ_LOTTERY_GIVE = 93,
  SESSIONPARAM_OPERATE_REWARD = 95,
  SESSIONPARAM_NOTIFY_ACTIVITY = 96,
  SESSIONPARAM_WANTED_QUEST_SET_CD = 97,
  SESSIONPARAM_GIVE_REWARD = 98,
  SESSIONPARAM_SYNC_WORLD_LEVEL = 99,
  SESSIONPARAM_USER_QUOTA_OPER = 100,
  SESSIONPARAM_USER_VAR_SYNC = 101,
  SESSIONPARAM_USER_ENTERSCENE = 102
};
bool SessionParam_IsValid(int value);
const SessionParam SessionParam_MIN = MAP_REG_SESSIONCMD;
const SessionParam SessionParam_MAX = SESSIONPARAM_USER_ENTERSCENE;
const int SessionParam_ARRAYSIZE = SessionParam_MAX + 1;

const ::google::protobuf::EnumDescriptor* SessionParam_descriptor();
inline const ::std::string& SessionParam_Name(SessionParam value) {
  return ::google::protobuf::internal::NameOfEnum(
    SessionParam_descriptor(), value);
}
inline bool SessionParam_Parse(
    const ::std::string& name, SessionParam* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SessionParam>(
    SessionParam_descriptor(), name, value);
}
enum EGetMailOpt {
  EGetMailOpt_Normal = 0,
  EGetMailOpt_LotteryGive = 1,
  EGetMailOpt_LotteryGive_Auto = 2
};
bool EGetMailOpt_IsValid(int value);
const EGetMailOpt EGetMailOpt_MIN = EGetMailOpt_Normal;
const EGetMailOpt EGetMailOpt_MAX = EGetMailOpt_LotteryGive_Auto;
const int EGetMailOpt_ARRAYSIZE = EGetMailOpt_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGetMailOpt_descriptor();
inline const ::std::string& EGetMailOpt_Name(EGetMailOpt value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGetMailOpt_descriptor(), value);
}
inline bool EGetMailOpt_Parse(
    const ::std::string& name, EGetMailOpt* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGetMailOpt>(
    EGetMailOpt_descriptor(), name, value);
}
enum EEventType {
  EEVENTTYPE_MIN = 0,
  EEVENTTYPE_SOCIALAPPLY_ADD = 1,
  EEVENTTYPE_MAX = 5
};
bool EEventType_IsValid(int value);
const EEventType EEventType_MIN = EEVENTTYPE_MIN;
const EEventType EEventType_MAX = EEVENTTYPE_MAX;
const int EEventType_ARRAYSIZE = EEventType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EEventType_descriptor();
inline const ::std::string& EEventType_Name(EEventType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EEventType_descriptor(), value);
}
inline bool EEventType_Parse(
    const ::std::string& name, EEventType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EEventType>(
    EEventType_descriptor(), name, value);
}
enum ESceneImageType {
  ESCENEIMAGE_MIN = 0,
  ESCENEIMAGE_SEAL = 1,
  ESCENEIMAGE_MAX = 2
};
bool ESceneImageType_IsValid(int value);
const ESceneImageType ESceneImageType_MIN = ESCENEIMAGE_MIN;
const ESceneImageType ESceneImageType_MAX = ESCENEIMAGE_MAX;
const int ESceneImageType_ARRAYSIZE = ESceneImageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ESceneImageType_descriptor();
inline const ::std::string& ESceneImageType_Name(ESceneImageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ESceneImageType_descriptor(), value);
}
inline bool ESceneImageType_Parse(
    const ::std::string& name, ESceneImageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESceneImageType>(
    ESceneImageType_descriptor(), name, value);
}
enum ESetSealStatus {
  ESETSEALSTATUS_MIN = 0,
  ESETSEALSTATUS_BEGIN = 1,
  ESETSEALSTATUS_FINISH = 2,
  ESETSEALSTATUS_FAIL = 3,
  ESETSEALSTATUS_CREATE = 4,
  ESETSEALSTATUS_SETPOS = 5,
  ESETSEALSTATUS_ABANDON = 6,
  ESETSEALSTATUS_INVALID = 7
};
bool ESetSealStatus_IsValid(int value);
const ESetSealStatus ESetSealStatus_MIN = ESETSEALSTATUS_MIN;
const ESetSealStatus ESetSealStatus_MAX = ESETSEALSTATUS_INVALID;
const int ESetSealStatus_ARRAYSIZE = ESetSealStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* ESetSealStatus_descriptor();
inline const ::std::string& ESetSealStatus_Name(ESetSealStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    ESetSealStatus_descriptor(), value);
}
inline bool ESetSealStatus_Parse(
    const ::std::string& name, ESetSealStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESetSealStatus>(
    ESetSealStatus_descriptor(), name, value);
}
// ===================================================================

class RaidMapData : public ::google::protobuf::Message {
 public:
  RaidMapData();
  virtual ~RaidMapData();

  RaidMapData(const RaidMapData& from);

  inline RaidMapData& operator=(const RaidMapData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RaidMapData& default_instance();

  void Swap(RaidMapData* other);

  // implements Message ----------------------------------------------

  RaidMapData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RaidMapData& from);
  void MergeFrom(const RaidMapData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 raidid = 1;
  inline bool has_raidid() const;
  inline void clear_raidid();
  static const int kRaididFieldNumber = 1;
  inline ::google::protobuf::uint32 raidid() const;
  inline void set_raidid(::google::protobuf::uint32 value);

  // optional uint32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint64 guildid = 4;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 4;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional uint32 guildlv = 5;
  inline bool has_guildlv() const;
  inline void clear_guildlv();
  static const int kGuildlvFieldNumber = 5;
  inline ::google::protobuf::uint32 guildlv() const;
  inline void set_guildlv(::google::protobuf::uint32 value);

  // optional uint64 teamid = 6;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 6;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional uint32 restrict = 7;
  inline bool has_restrict() const;
  inline void clear_restrict();
  static const int kRestrictFieldNumber = 7;
  inline ::google::protobuf::uint32 restrict() const;
  inline void set_restrict(::google::protobuf::uint32 value);

  // repeated uint64 memberlist = 8;
  inline int memberlist_size() const;
  inline void clear_memberlist();
  static const int kMemberlistFieldNumber = 8;
  inline ::google::protobuf::uint64 memberlist(int index) const;
  inline void set_memberlist(int index, ::google::protobuf::uint64 value);
  inline void add_memberlist(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      memberlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_memberlist();

  // optional .Cmd.ScenePos imagecenter = 9;
  inline bool has_imagecenter() const;
  inline void clear_imagecenter();
  static const int kImagecenterFieldNumber = 9;
  inline const ::Cmd::ScenePos& imagecenter() const;
  inline ::Cmd::ScenePos* mutable_imagecenter();
  inline ::Cmd::ScenePos* release_imagecenter();
  inline void set_allocated_imagecenter(::Cmd::ScenePos* imagecenter);

  // optional uint32 imagerange = 10;
  inline bool has_imagerange() const;
  inline void clear_imagerange();
  static const int kImagerangeFieldNumber = 10;
  inline ::google::protobuf::uint32 imagerange() const;
  inline void set_imagerange(::google::protobuf::uint32 value);

  // optional .Cmd.ScenePos enterpos = 11;
  inline bool has_enterpos() const;
  inline void clear_enterpos();
  static const int kEnterposFieldNumber = 11;
  inline const ::Cmd::ScenePos& enterpos() const;
  inline ::Cmd::ScenePos* mutable_enterpos();
  inline ::Cmd::ScenePos* release_enterpos();
  inline void set_allocated_enterpos(::Cmd::ScenePos* enterpos);

  // optional uint32 sealid = 12 [default = 0];
  inline bool has_sealid() const;
  inline void clear_sealid();
  static const int kSealidFieldNumber = 12;
  inline ::google::protobuf::uint32 sealid() const;
  inline void set_sealid(::google::protobuf::uint32 value);

  // optional uint32 follow = 13 [default = 0];
  inline bool has_follow() const;
  inline void clear_follow();
  static const int kFollowFieldNumber = 13;
  inline ::google::protobuf::uint32 follow() const;
  inline void set_follow(::google::protobuf::uint32 value);

  // optional uint32 dojoid = 14 [default = 0];
  inline bool has_dojoid() const;
  inline void clear_dojoid();
  static const int kDojoidFieldNumber = 14;
  inline ::google::protobuf::uint32 dojoid() const;
  inline void set_dojoid(::google::protobuf::uint32 value);

  // optional uint32 layer = 15 [default = 0];
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 15;
  inline ::google::protobuf::uint32 layer() const;
  inline void set_layer(::google::protobuf::uint32 value);

  // optional uint32 guildraidindex = 16 [default = 0];
  inline bool has_guildraidindex() const;
  inline void clear_guildraidindex();
  static const int kGuildraidindexFieldNumber = 16;
  inline ::google::protobuf::uint32 guildraidindex() const;
  inline void set_guildraidindex(::google::protobuf::uint32 value);

  // optional uint64 roomid = 17;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomidFieldNumber = 17;
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // optional .Cmd.GuildInfo guildinfo = 18;
  inline bool has_guildinfo() const;
  inline void clear_guildinfo();
  static const int kGuildinfoFieldNumber = 18;
  inline const ::Cmd::GuildInfo& guildinfo() const;
  inline ::Cmd::GuildInfo* mutable_guildinfo();
  inline ::Cmd::GuildInfo* release_guildinfo();
  inline void set_allocated_guildinfo(::Cmd::GuildInfo* guildinfo);

  // optional uint32 npcid = 19;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcidFieldNumber = 19;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);

  // optional uint32 nomonsterlayer = 20 [default = 0];
  inline bool has_nomonsterlayer() const;
  inline void clear_nomonsterlayer();
  static const int kNomonsterlayerFieldNumber = 20;
  inline ::google::protobuf::uint32 nomonsterlayer() const;
  inline void set_nomonsterlayer(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.RaidMapData)
 private:
  inline void set_has_raidid();
  inline void clear_has_raidid();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_guildlv();
  inline void clear_has_guildlv();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_restrict();
  inline void clear_has_restrict();
  inline void set_has_imagecenter();
  inline void clear_has_imagecenter();
  inline void set_has_imagerange();
  inline void clear_has_imagerange();
  inline void set_has_enterpos();
  inline void clear_has_enterpos();
  inline void set_has_sealid();
  inline void clear_has_sealid();
  inline void set_has_follow();
  inline void clear_has_follow();
  inline void set_has_dojoid();
  inline void clear_has_dojoid();
  inline void set_has_layer();
  inline void clear_has_layer();
  inline void set_has_guildraidindex();
  inline void clear_has_guildraidindex();
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_guildinfo();
  inline void clear_has_guildinfo();
  inline void set_has_npcid();
  inline void clear_has_npcid();
  inline void set_has_nomonsterlayer();
  inline void clear_has_nomonsterlayer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 raidid_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint32 guildlv_;
  ::google::protobuf::uint32 restrict_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > memberlist_;
  ::Cmd::ScenePos* imagecenter_;
  ::Cmd::ScenePos* enterpos_;
  ::google::protobuf::uint32 imagerange_;
  ::google::protobuf::uint32 sealid_;
  ::google::protobuf::uint32 follow_;
  ::google::protobuf::uint32 dojoid_;
  ::google::protobuf::uint32 layer_;
  ::google::protobuf::uint32 guildraidindex_;
  ::google::protobuf::uint64 roomid_;
  ::Cmd::GuildInfo* guildinfo_;
  ::google::protobuf::uint32 npcid_;
  ::google::protobuf::uint32 nomonsterlayer_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static RaidMapData* default_instance_;
};
// -------------------------------------------------------------------

class MapRegSessionCmd : public ::google::protobuf::Message {
 public:
  MapRegSessionCmd();
  virtual ~MapRegSessionCmd();

  MapRegSessionCmd(const MapRegSessionCmd& from);

  inline MapRegSessionCmd& operator=(const MapRegSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MapRegSessionCmd& default_instance();

  void Swap(MapRegSessionCmd* other);

  // implements Message ----------------------------------------------

  MapRegSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MapRegSessionCmd& from);
  void MergeFrom(const MapRegSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = MAP_REG_SESSIONCMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint32 mapid = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // optional string mapname = 4;
  inline bool has_mapname() const;
  inline void clear_mapname();
  static const int kMapnameFieldNumber = 4;
  inline const ::std::string& mapname() const;
  inline void set_mapname(const ::std::string& value);
  inline void set_mapname(const char* value);
  inline void set_mapname(const char* value, size_t size);
  inline ::std::string* mutable_mapname();
  inline ::std::string* release_mapname();
  inline void set_allocated_mapname(::std::string* mapname);

  // optional string scenename = 5;
  inline bool has_scenename() const;
  inline void clear_scenename();
  static const int kScenenameFieldNumber = 5;
  inline const ::std::string& scenename() const;
  inline void set_scenename(const ::std::string& value);
  inline void set_scenename(const char* value);
  inline void set_scenename(const char* value, size_t size);
  inline ::std::string* mutable_scenename();
  inline ::std::string* release_scenename();
  inline void set_allocated_scenename(::std::string* scenename);

  // optional .Cmd.RaidMapData data = 6;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 6;
  inline const ::Cmd::RaidMapData& data() const;
  inline ::Cmd::RaidMapData* mutable_data();
  inline ::Cmd::RaidMapData* release_data();
  inline void set_allocated_data(::Cmd::RaidMapData* data);

  // @@protoc_insertion_point(class_scope:Cmd.MapRegSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_mapname();
  inline void clear_has_mapname();
  inline void set_has_scenename();
  inline void clear_has_scenename();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::std::string* mapname_;
  ::std::string* scenename_;
  ::Cmd::RaidMapData* data_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static MapRegSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class CreateRaidMapSessionCmd : public ::google::protobuf::Message {
 public:
  CreateRaidMapSessionCmd();
  virtual ~CreateRaidMapSessionCmd();

  CreateRaidMapSessionCmd(const CreateRaidMapSessionCmd& from);

  inline CreateRaidMapSessionCmd& operator=(const CreateRaidMapSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateRaidMapSessionCmd& default_instance();

  void Swap(CreateRaidMapSessionCmd* other);

  // implements Message ----------------------------------------------

  CreateRaidMapSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateRaidMapSessionCmd& from);
  void MergeFrom(const CreateRaidMapSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = CREATE_RAIDMAP_SESSIONCMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional .Cmd.RaidMapData data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::Cmd::RaidMapData& data() const;
  inline ::Cmd::RaidMapData* mutable_data();
  inline ::Cmd::RaidMapData* release_data();
  inline void set_allocated_data(::Cmd::RaidMapData* data);

  // @@protoc_insertion_point(class_scope:Cmd.CreateRaidMapSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::RaidMapData* data_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static CreateRaidMapSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class DeleteDMapSessionCmd : public ::google::protobuf::Message {
 public:
  DeleteDMapSessionCmd();
  virtual ~DeleteDMapSessionCmd();

  DeleteDMapSessionCmd(const DeleteDMapSessionCmd& from);

  inline DeleteDMapSessionCmd& operator=(const DeleteDMapSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteDMapSessionCmd& default_instance();

  void Swap(DeleteDMapSessionCmd* other);

  // implements Message ----------------------------------------------

  DeleteDMapSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteDMapSessionCmd& from);
  void MergeFrom(const DeleteDMapSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = DELETE_DMAP_SESSIONCMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint32 mapid = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.DeleteDMapSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static DeleteDMapSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class ChangeSceneSessionCmd : public ::google::protobuf::Message {
 public:
  ChangeSceneSessionCmd();
  virtual ~ChangeSceneSessionCmd();

  ChangeSceneSessionCmd(const ChangeSceneSessionCmd& from);

  inline ChangeSceneSessionCmd& operator=(const ChangeSceneSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeSceneSessionCmd& default_instance();

  void Swap(ChangeSceneSessionCmd* other);

  // implements Message ----------------------------------------------

  ChangeSceneSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeSceneSessionCmd& from);
  void MergeFrom(const ChangeSceneSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = CHANGE_SCENE_SESSIONCMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint32 mapid = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // repeated uint64 charid = 4;
  inline int charid_size() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 4;
  inline ::google::protobuf::uint64 charid(int index) const;
  inline void set_charid(int index, ::google::protobuf::uint64 value);
  inline void add_charid(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      charid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_charid();

  // optional .Cmd.ScenePos pos = 5;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 5;
  inline const ::Cmd::ScenePos& pos() const;
  inline ::Cmd::ScenePos* mutable_pos();
  inline ::Cmd::ScenePos* release_pos();
  inline void set_allocated_pos(::Cmd::ScenePos* pos);

  // @@protoc_insertion_point(class_scope:Cmd.ChangeSceneSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > charid_;
  ::Cmd::ScenePos* pos_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static ChangeSceneSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class ChangeSceneResultSessionCmd : public ::google::protobuf::Message {
 public:
  ChangeSceneResultSessionCmd();
  virtual ~ChangeSceneResultSessionCmd();

  ChangeSceneResultSessionCmd(const ChangeSceneResultSessionCmd& from);

  inline ChangeSceneResultSessionCmd& operator=(const ChangeSceneResultSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeSceneResultSessionCmd& default_instance();

  void Swap(ChangeSceneResultSessionCmd* other);

  // implements Message ----------------------------------------------

  ChangeSceneResultSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeSceneResultSessionCmd& from);
  void MergeFrom(const ChangeSceneResultSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = CHANGE_SCENE_RESULT_SESSIONCMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint32 mapid = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // optional uint64 charid = 4;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 4;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional .Cmd.ScenePos pos = 6;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 6;
  inline const ::Cmd::ScenePos& pos() const;
  inline ::Cmd::ScenePos* mutable_pos();
  inline ::Cmd::ScenePos* release_pos();
  inline void set_allocated_pos(::Cmd::ScenePos* pos);

  // @@protoc_insertion_point(class_scope:Cmd.ChangeSceneResultSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::Cmd::ScenePos* pos_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static ChangeSceneResultSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class UserDataSync : public ::google::protobuf::Message {
 public:
  UserDataSync();
  virtual ~UserDataSync();

  UserDataSync(const UserDataSync& from);

  inline UserDataSync& operator=(const UserDataSync& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserDataSync& default_instance();

  void Swap(UserDataSync* other);

  // implements Message ----------------------------------------------

  UserDataSync* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserDataSync& from);
  void MergeFrom(const UserDataSync& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = CMDPARAM_USER_DATA_SYNC];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 id = 3 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional float x = 4 [default = 0];
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 4;
  inline float x() const;
  inline void set_x(float value);

  // optional float y = 5 [default = 0];
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 5;
  inline float y() const;
  inline void set_y(float value);

  // optional float z = 6 [default = 0];
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 6;
  inline float z() const;
  inline void set_z(float value);

  // repeated .Cmd.UserData datas = 7;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 7;
  inline const ::Cmd::UserData& datas(int index) const;
  inline ::Cmd::UserData* mutable_datas(int index);
  inline ::Cmd::UserData* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UserData >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::UserData >*
      mutable_datas();

  // repeated .Cmd.UserAttr attrs = 8;
  inline int attrs_size() const;
  inline void clear_attrs();
  static const int kAttrsFieldNumber = 8;
  inline const ::Cmd::UserAttr& attrs(int index) const;
  inline ::Cmd::UserAttr* mutable_attrs(int index);
  inline ::Cmd::UserAttr* add_attrs();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >&
      attrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >*
      mutable_attrs();

  // @@protoc_insertion_point(class_scope:Cmd.UserDataSync)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 id_;
  float x_;
  float y_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::UserData > datas_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr > attrs_;
  float z_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static UserDataSync* default_instance_;
};
// -------------------------------------------------------------------

class GoToUserMapSessionCmd : public ::google::protobuf::Message {
 public:
  GoToUserMapSessionCmd();
  virtual ~GoToUserMapSessionCmd();

  GoToUserMapSessionCmd(const GoToUserMapSessionCmd& from);

  inline GoToUserMapSessionCmd& operator=(const GoToUserMapSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GoToUserMapSessionCmd& default_instance();

  void Swap(GoToUserMapSessionCmd* other);

  // implements Message ----------------------------------------------

  GoToUserMapSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GoToUserMapSessionCmd& from);
  void MergeFrom(const GoToUserMapSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = GOTO_USER_MAP_SESSIONCMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 targetuserid = 3 [default = 0];
  inline bool has_targetuserid() const;
  inline void clear_targetuserid();
  static const int kTargetuseridFieldNumber = 3;
  inline ::google::protobuf::uint64 targetuserid() const;
  inline void set_targetuserid(::google::protobuf::uint64 value);

  // optional uint64 gotouserid = 4 [default = 0];
  inline bool has_gotouserid() const;
  inline void clear_gotouserid();
  static const int kGotouseridFieldNumber = 4;
  inline ::google::protobuf::uint64 gotouserid() const;
  inline void set_gotouserid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.GoToUserMapSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_targetuserid();
  inline void clear_has_targetuserid();
  inline void set_has_gotouserid();
  inline void clear_has_gotouserid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 targetuserid_;
  ::google::protobuf::uint64 gotouserid_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static GoToUserMapSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class LoadLuaSessionCmd : public ::google::protobuf::Message {
 public:
  LoadLuaSessionCmd();
  virtual ~LoadLuaSessionCmd();

  LoadLuaSessionCmd(const LoadLuaSessionCmd& from);

  inline LoadLuaSessionCmd& operator=(const LoadLuaSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadLuaSessionCmd& default_instance();

  void Swap(LoadLuaSessionCmd* other);

  // implements Message ----------------------------------------------

  LoadLuaSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoadLuaSessionCmd& from);
  void MergeFrom(const LoadLuaSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = LOAD_LUA_SESSIONCMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional string table = 3;
  inline bool has_table() const;
  inline void clear_table();
  static const int kTableFieldNumber = 3;
  inline const ::std::string& table() const;
  inline void set_table(const ::std::string& value);
  inline void set_table(const char* value);
  inline void set_table(const char* value, size_t size);
  inline ::std::string* mutable_table();
  inline ::std::string* release_table();
  inline void set_allocated_table(::std::string* table);

  // optional string lua = 4;
  inline bool has_lua() const;
  inline void clear_lua();
  static const int kLuaFieldNumber = 4;
  inline const ::std::string& lua() const;
  inline void set_lua(const ::std::string& value);
  inline void set_lua(const char* value);
  inline void set_lua(const char* value, size_t size);
  inline ::std::string* mutable_lua();
  inline ::std::string* release_lua();
  inline void set_allocated_lua(::std::string* lua);

  // optional string log = 5;
  inline bool has_log() const;
  inline void clear_log();
  static const int kLogFieldNumber = 5;
  inline const ::std::string& log() const;
  inline void set_log(const ::std::string& value);
  inline void set_log(const char* value);
  inline void set_log(const char* value, size_t size);
  inline ::std::string* mutable_log();
  inline ::std::string* release_log();
  inline void set_allocated_log(::std::string* log);

  // optional uint32 serverid = 6;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServeridFieldNumber = 6;
  inline ::google::protobuf::uint32 serverid() const;
  inline void set_serverid(::google::protobuf::uint32 value);

  // optional bool allzone = 7 [default = true];
  inline bool has_allzone() const;
  inline void clear_allzone();
  static const int kAllzoneFieldNumber = 7;
  inline bool allzone() const;
  inline void set_allzone(bool value);

  // optional .Cmd.EComLoadType load_type = 8;
  inline bool has_load_type() const;
  inline void clear_load_type();
  static const int kLoadTypeFieldNumber = 8;
  inline ::Cmd::EComLoadType load_type() const;
  inline void set_load_type(::Cmd::EComLoadType value);

  // @@protoc_insertion_point(class_scope:Cmd.LoadLuaSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_table();
  inline void clear_has_table();
  inline void set_has_lua();
  inline void clear_has_lua();
  inline void set_has_log();
  inline void clear_has_log();
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_allzone();
  inline void clear_has_allzone();
  inline void set_has_load_type();
  inline void clear_has_load_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::std::string* table_;
  ::std::string* lua_;
  ::std::string* log_;
  ::google::protobuf::uint32 serverid_;
  bool allzone_;
  int load_type_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static LoadLuaSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class ExecGMCmdSessionCmd : public ::google::protobuf::Message {
 public:
  ExecGMCmdSessionCmd();
  virtual ~ExecGMCmdSessionCmd();

  ExecGMCmdSessionCmd(const ExecGMCmdSessionCmd& from);

  inline ExecGMCmdSessionCmd& operator=(const ExecGMCmdSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecGMCmdSessionCmd& default_instance();

  void Swap(ExecGMCmdSessionCmd* other);

  // implements Message ----------------------------------------------

  ExecGMCmdSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExecGMCmdSessionCmd& from);
  void MergeFrom(const ExecGMCmdSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = EXEC_GM_CMD_SESSIONCMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint32 serverid = 3;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServeridFieldNumber = 3;
  inline ::google::protobuf::uint32 serverid() const;
  inline void set_serverid(::google::protobuf::uint32 value);

  // optional string gmcmd = 4;
  inline bool has_gmcmd() const;
  inline void clear_gmcmd();
  static const int kGmcmdFieldNumber = 4;
  inline const ::std::string& gmcmd() const;
  inline void set_gmcmd(const ::std::string& value);
  inline void set_gmcmd(const char* value);
  inline void set_gmcmd(const char* value, size_t size);
  inline ::std::string* mutable_gmcmd();
  inline ::std::string* release_gmcmd();
  inline void set_allocated_gmcmd(::std::string* gmcmd);

  // optional bool allzone = 5 [default = true];
  inline bool has_allzone() const;
  inline void clear_allzone();
  static const int kAllzoneFieldNumber = 5;
  inline bool allzone() const;
  inline void set_allzone(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.ExecGMCmdSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_gmcmd();
  inline void clear_has_gmcmd();
  inline void set_has_allzone();
  inline void clear_has_allzone();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::std::string* gmcmd_;
  ::google::protobuf::uint32 serverid_;
  bool allzone_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static ExecGMCmdSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class TowerLayer : public ::google::protobuf::Message {
 public:
  TowerLayer();
  virtual ~TowerLayer();

  TowerLayer(const TowerLayer& from);

  inline TowerLayer& operator=(const TowerLayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerLayer& default_instance();

  void Swap(TowerLayer* other);

  // implements Message ----------------------------------------------

  TowerLayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TowerLayer& from);
  void MergeFrom(const TowerLayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 layer = 1 [default = 0];
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 1;
  inline ::google::protobuf::uint32 layer() const;
  inline void set_layer(::google::protobuf::uint32 value);

  // repeated uint32 curmonsterids = 3;
  inline int curmonsterids_size() const;
  inline void clear_curmonsterids();
  static const int kCurmonsteridsFieldNumber = 3;
  inline ::google::protobuf::uint32 curmonsterids(int index) const;
  inline void set_curmonsterids(int index, ::google::protobuf::uint32 value);
  inline void add_curmonsterids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      curmonsterids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_curmonsterids();

  // @@protoc_insertion_point(class_scope:Cmd.TowerLayer)
 private:
  inline void set_has_layer();
  inline void clear_has_layer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > curmonsterids_;
  ::google::protobuf::uint32 layer_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static TowerLayer* default_instance_;
};
// -------------------------------------------------------------------

class TowerInfo : public ::google::protobuf::Message {
 public:
  TowerInfo();
  virtual ~TowerInfo();

  TowerInfo(const TowerInfo& from);

  inline TowerInfo& operator=(const TowerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerInfo& default_instance();

  void Swap(TowerInfo* other);

  // implements Message ----------------------------------------------

  TowerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TowerInfo& from);
  void MergeFrom(const TowerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 maxlayer = 1 [default = 0];
  inline bool has_maxlayer() const;
  inline void clear_maxlayer();
  static const int kMaxlayerFieldNumber = 1;
  inline ::google::protobuf::uint32 maxlayer() const;
  inline void set_maxlayer(::google::protobuf::uint32 value);

  // repeated uint32 killmonsters = 3;
  inline int killmonsters_size() const;
  inline void clear_killmonsters();
  static const int kKillmonstersFieldNumber = 3;
  inline ::google::protobuf::uint32 killmonsters(int index) const;
  inline void set_killmonsters(int index, ::google::protobuf::uint32 value);
  inline void add_killmonsters(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      killmonsters() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_killmonsters();

  // repeated .Cmd.TowerLayer layers = 4;
  inline int layers_size() const;
  inline void clear_layers();
  static const int kLayersFieldNumber = 4;
  inline const ::Cmd::TowerLayer& layers(int index) const;
  inline ::Cmd::TowerLayer* mutable_layers(int index);
  inline ::Cmd::TowerLayer* add_layers();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TowerLayer >&
      layers() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TowerLayer >*
      mutable_layers();

  // @@protoc_insertion_point(class_scope:Cmd.TowerInfo)
 private:
  inline void set_has_maxlayer();
  inline void clear_has_maxlayer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > killmonsters_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TowerLayer > layers_;
  ::google::protobuf::uint32 maxlayer_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static TowerInfo* default_instance_;
};
// -------------------------------------------------------------------

class SceneTowerUpdate : public ::google::protobuf::Message {
 public:
  SceneTowerUpdate();
  virtual ~SceneTowerUpdate();

  SceneTowerUpdate(const SceneTowerUpdate& from);

  inline SceneTowerUpdate& operator=(const SceneTowerUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneTowerUpdate& default_instance();

  void Swap(SceneTowerUpdate* other);

  // implements Message ----------------------------------------------

  SceneTowerUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneTowerUpdate& from);
  void MergeFrom(const SceneTowerUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = TOWERINFO_UPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional .Cmd.TowerInfo info = 3;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 3;
  inline const ::Cmd::TowerInfo& info() const;
  inline ::Cmd::TowerInfo* mutable_info();
  inline ::Cmd::TowerInfo* release_info();
  inline void set_allocated_info(::Cmd::TowerInfo* info);

  // @@protoc_insertion_point(class_scope:Cmd.SceneTowerUpdate)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::TowerInfo* info_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static SceneTowerUpdate* default_instance_;
};
// -------------------------------------------------------------------

class TowerMonsterKill : public ::google::protobuf::Message {
 public:
  TowerMonsterKill();
  virtual ~TowerMonsterKill();

  TowerMonsterKill(const TowerMonsterKill& from);

  inline TowerMonsterKill& operator=(const TowerMonsterKill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerMonsterKill& default_instance();

  void Swap(TowerMonsterKill* other);

  // implements Message ----------------------------------------------

  TowerMonsterKill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TowerMonsterKill& from);
  void MergeFrom(const TowerMonsterKill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = TOWER_MONSTERKILL];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint32 monsterid = 3 [default = 0];
  inline bool has_monsterid() const;
  inline void clear_monsterid();
  static const int kMonsteridFieldNumber = 3;
  inline ::google::protobuf::uint32 monsterid() const;
  inline void set_monsterid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.TowerMonsterKill)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_monsterid();
  inline void clear_has_monsterid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 monsterid_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static TowerMonsterKill* default_instance_;
};
// -------------------------------------------------------------------

class SendMail : public ::google::protobuf::Message {
 public:
  SendMail();
  virtual ~SendMail();

  SendMail(const SendMail& from);

  inline SendMail& operator=(const SendMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendMail& default_instance();

  void Swap(SendMail* other);

  // implements Message ----------------------------------------------

  SendMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendMail& from);
  void MergeFrom(const SendMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = CMDPARAM_SEND_MAIL];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional .Cmd.MailData data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::Cmd::MailData& data() const;
  inline ::Cmd::MailData* mutable_data();
  inline ::Cmd::MailData* release_data();
  inline void set_allocated_data(::Cmd::MailData* data);

  // @@protoc_insertion_point(class_scope:Cmd.SendMail)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::MailData* data_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static SendMail* default_instance_;
};
// -------------------------------------------------------------------

class SessionSceneUserCmd : public ::google::protobuf::Message {
 public:
  SessionSceneUserCmd();
  virtual ~SessionSceneUserCmd();

  SessionSceneUserCmd(const SessionSceneUserCmd& from);

  inline SessionSceneUserCmd& operator=(const SessionSceneUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SessionSceneUserCmd& default_instance();

  void Swap(SessionSceneUserCmd* other);

  // implements Message ----------------------------------------------

  SessionSceneUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SessionSceneUserCmd& from);
  void MergeFrom(const SessionSceneUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = CMDPARAM_SCENEUSERCMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 userid = 3 [default = 0];
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 3;
  inline ::google::protobuf::uint64 userid() const;
  inline void set_userid(::google::protobuf::uint64 value);

  // optional bytes cmddata = 4;
  inline bool has_cmddata() const;
  inline void clear_cmddata();
  static const int kCmddataFieldNumber = 4;
  inline const ::std::string& cmddata() const;
  inline void set_cmddata(const ::std::string& value);
  inline void set_cmddata(const char* value);
  inline void set_cmddata(const void* value, size_t size);
  inline ::std::string* mutable_cmddata();
  inline ::std::string* release_cmddata();
  inline void set_allocated_cmddata(::std::string* cmddata);

  // @@protoc_insertion_point(class_scope:Cmd.SessionSceneUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_cmddata();
  inline void clear_has_cmddata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 userid_;
  ::std::string* cmddata_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static SessionSceneUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class GetMailAttachSessionCmd : public ::google::protobuf::Message {
 public:
  GetMailAttachSessionCmd();
  virtual ~GetMailAttachSessionCmd();

  GetMailAttachSessionCmd(const GetMailAttachSessionCmd& from);

  inline GetMailAttachSessionCmd& operator=(const GetMailAttachSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMailAttachSessionCmd& default_instance();

  void Swap(GetMailAttachSessionCmd* other);

  // implements Message ----------------------------------------------

  GetMailAttachSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetMailAttachSessionCmd& from);
  void MergeFrom(const GetMailAttachSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_GET_MAILATTACH];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint64 mailid = 4 [default = 0];
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailidFieldNumber = 4;
  inline ::google::protobuf::uint64 mailid() const;
  inline void set_mailid(::google::protobuf::uint64 value);

  // optional uint32 msgid = 5 [default = 0];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 5;
  inline ::google::protobuf::uint32 msgid() const;
  inline void set_msgid(::google::protobuf::uint32 value);

  // repeated .Cmd.ItemInfo items = 6;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 6;
  inline const ::Cmd::ItemInfo& items(int index) const;
  inline ::Cmd::ItemInfo* mutable_items(int index);
  inline ::Cmd::ItemInfo* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo >*
      mutable_items();

  // repeated .Cmd.ItemData itemDatas = 7;
  inline int itemdatas_size() const;
  inline void clear_itemdatas();
  static const int kItemDatasFieldNumber = 7;
  inline const ::Cmd::ItemData& itemdatas(int index) const;
  inline ::Cmd::ItemData* mutable_itemdatas(int index);
  inline ::Cmd::ItemData* add_itemdatas();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
      itemdatas() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
      mutable_itemdatas();

  // optional string groupid = 8;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupidFieldNumber = 8;
  inline const ::std::string& groupid() const;
  inline void set_groupid(const ::std::string& value);
  inline void set_groupid(const char* value);
  inline void set_groupid(const char* value, size_t size);
  inline ::std::string* mutable_groupid();
  inline ::std::string* release_groupid();
  inline void set_allocated_groupid(::std::string* groupid);

  // optional .Cmd.EGetMailOpt opt = 9;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 9;
  inline ::Cmd::EGetMailOpt opt() const;
  inline void set_opt(::Cmd::EGetMailOpt value);

  // @@protoc_insertion_point(class_scope:Cmd.GetMailAttachSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_opt();
  inline void clear_has_opt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 mailid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo > items_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData > itemdatas_;
  ::google::protobuf::uint32 msgid_;
  int opt_;
  ::std::string* groupid_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static GetMailAttachSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class FollowerIDCheck : public ::google::protobuf::Message {
 public:
  FollowerIDCheck();
  virtual ~FollowerIDCheck();

  FollowerIDCheck(const FollowerIDCheck& from);

  inline FollowerIDCheck& operator=(const FollowerIDCheck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FollowerIDCheck& default_instance();

  void Swap(FollowerIDCheck* other);

  // implements Message ----------------------------------------------

  FollowerIDCheck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FollowerIDCheck& from);
  void MergeFrom(const FollowerIDCheck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = CMDPARAM_FOLLOWERIDCHECK];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 userid = 3 [default = 0];
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 3;
  inline ::google::protobuf::uint64 userid() const;
  inline void set_userid(::google::protobuf::uint64 value);

  // optional uint64 followid = 4 [default = 0];
  inline bool has_followid() const;
  inline void clear_followid();
  static const int kFollowidFieldNumber = 4;
  inline ::google::protobuf::uint64 followid() const;
  inline void set_followid(::google::protobuf::uint64 value);

  // optional .Cmd.EFollowType etype = 5 [default = EFOLLOWTYPE_MIN];
  inline bool has_etype() const;
  inline void clear_etype();
  static const int kEtypeFieldNumber = 5;
  inline ::Cmd::EFollowType etype() const;
  inline void set_etype(::Cmd::EFollowType value);

  // @@protoc_insertion_point(class_scope:Cmd.FollowerIDCheck)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_followid();
  inline void clear_has_followid();
  inline void set_has_etype();
  inline void clear_has_etype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 userid_;
  ::google::protobuf::uint64 followid_;
  int etype_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static FollowerIDCheck* default_instance_;
};
// -------------------------------------------------------------------

class Event : public ::google::protobuf::Message {
 public:
  Event();
  virtual ~Event();

  Event(const Event& from);

  inline Event& operator=(const Event& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Event& default_instance();

  void Swap(Event* other);

  // implements Message ----------------------------------------------

  Event* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Event& from);
  void MergeFrom(const Event& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = CMDPARAM_EVENT];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 guid = 3 [default = 0];
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 3;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional .Cmd.EEventType type = 4 [default = EEVENTTYPE_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::Cmd::EEventType type() const;
  inline void set_type(::Cmd::EEventType value);

  // repeated uint64 params = 5;
  inline int params_size() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 5;
  inline ::google::protobuf::uint64 params(int index) const;
  inline void set_params(int index, ::google::protobuf::uint64 value);
  inline void add_params(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      params() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_params();

  // @@protoc_insertion_point(class_scope:Cmd.Event)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > params_;
  int type_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static Event* default_instance_;
};
// -------------------------------------------------------------------

class ChatMsgSession : public ::google::protobuf::Message {
 public:
  ChatMsgSession();
  virtual ~ChatMsgSession();

  ChatMsgSession(const ChatMsgSession& from);

  inline ChatMsgSession& operator=(const ChatMsgSession& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatMsgSession& default_instance();

  void Swap(ChatMsgSession* other);

  // implements Message ----------------------------------------------

  ChatMsgSession* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChatMsgSession& from);
  void MergeFrom(const ChatMsgSession& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = CHAT_MSG];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // repeated uint64 targetid = 3;
  inline int targetid_size() const;
  inline void clear_targetid();
  static const int kTargetidFieldNumber = 3;
  inline ::google::protobuf::uint64 targetid(int index) const;
  inline void set_targetid(int index, ::google::protobuf::uint64 value);
  inline void add_targetid(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      targetid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_targetid();

  // optional string msg = 4;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 4;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  inline void set_allocated_msg(::std::string* msg);

  // optional .Cmd.EGameChatChannel channel = 5 [default = ECHAT_CHANNEL_MIN];
  inline bool has_channel() const;
  inline void clear_channel();
  static const int kChannelFieldNumber = 5;
  inline ::Cmd::EGameChatChannel channel() const;
  inline void set_channel(::Cmd::EGameChatChannel value);

  // optional uint64 selfid = 6 [default = 0];
  inline bool has_selfid() const;
  inline void clear_selfid();
  static const int kSelfidFieldNumber = 6;
  inline ::google::protobuf::uint64 selfid() const;
  inline void set_selfid(::google::protobuf::uint64 value);

  // optional bytes voice = 7;
  inline bool has_voice() const;
  inline void clear_voice();
  static const int kVoiceFieldNumber = 7;
  inline const ::std::string& voice() const;
  inline void set_voice(const ::std::string& value);
  inline void set_voice(const char* value);
  inline void set_voice(const void* value, size_t size);
  inline ::std::string* mutable_voice();
  inline ::std::string* release_voice();
  inline void set_allocated_voice(::std::string* voice);

  // optional uint32 voicetime = 8 [default = 0];
  inline bool has_voicetime() const;
  inline void clear_voicetime();
  static const int kVoicetimeFieldNumber = 8;
  inline ::google::protobuf::uint32 voicetime() const;
  inline void set_voicetime(::google::protobuf::uint32 value);

  // optional bool blink = 9 [default = false];
  inline bool has_blink() const;
  inline void clear_blink();
  static const int kBlinkFieldNumber = 9;
  inline bool blink() const;
  inline void set_blink(bool value);

  // optional uint32 msgid = 10 [default = 0];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 10;
  inline ::google::protobuf::uint32 msgid() const;
  inline void set_msgid(::google::protobuf::uint32 value);

  // optional bool msgover = 11 [default = false];
  inline bool has_msgover() const;
  inline void clear_msgover();
  static const int kMsgoverFieldNumber = 11;
  inline bool msgover() const;
  inline void set_msgover(bool value);

  // optional .Cmd.BarrageMsgChatCmd barrage = 12;
  inline bool has_barrage() const;
  inline void clear_barrage();
  static const int kBarrageFieldNumber = 12;
  inline const ::Cmd::BarrageMsgChatCmd& barrage() const;
  inline ::Cmd::BarrageMsgChatCmd* mutable_barrage();
  inline ::Cmd::BarrageMsgChatCmd* release_barrage();
  inline void set_allocated_barrage(::Cmd::BarrageMsgChatCmd* barrage);

  // @@protoc_insertion_point(class_scope:Cmd.ChatMsgSession)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_msg();
  inline void clear_has_msg();
  inline void set_has_channel();
  inline void clear_has_channel();
  inline void set_has_selfid();
  inline void clear_has_selfid();
  inline void set_has_voice();
  inline void clear_has_voice();
  inline void set_has_voicetime();
  inline void clear_has_voicetime();
  inline void set_has_blink();
  inline void clear_has_blink();
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_msgover();
  inline void clear_has_msgover();
  inline void set_has_barrage();
  inline void clear_has_barrage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > targetid_;
  ::std::string* msg_;
  ::google::protobuf::uint64 selfid_;
  int channel_;
  ::google::protobuf::uint32 voicetime_;
  ::std::string* voice_;
  ::google::protobuf::uint32 msgid_;
  bool blink_;
  bool msgover_;
  ::Cmd::BarrageMsgChatCmd* barrage_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static ChatMsgSession* default_instance_;
};
// -------------------------------------------------------------------

class SetGlobalDaily : public ::google::protobuf::Message {
 public:
  SetGlobalDaily();
  virtual ~SetGlobalDaily();

  SetGlobalDaily(const SetGlobalDaily& from);

  inline SetGlobalDaily& operator=(const SetGlobalDaily& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetGlobalDaily& default_instance();

  void Swap(SetGlobalDaily* other);

  // implements Message ----------------------------------------------

  SetGlobalDaily* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetGlobalDaily& from);
  void MergeFrom(const SetGlobalDaily& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = CMDPARAM_SET_GLOBL_DAILY];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint32 value = 3 [default = 0];
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.SetGlobalDaily)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static SetGlobalDaily* default_instance_;
};
// -------------------------------------------------------------------

class RefreshQuest : public ::google::protobuf::Message {
 public:
  RefreshQuest();
  virtual ~RefreshQuest();

  RefreshQuest(const RefreshQuest& from);

  inline RefreshQuest& operator=(const RefreshQuest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RefreshQuest& default_instance();

  void Swap(RefreshQuest* other);

  // implements Message ----------------------------------------------

  RefreshQuest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RefreshQuest& from);
  void MergeFrom(const RefreshQuest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = CMDPARAM_REFRESH_QUEST];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint32 value = 3 [default = 0];
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.RefreshQuest)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static RefreshQuest* default_instance_;
};
// -------------------------------------------------------------------

class QuerySealTimer : public ::google::protobuf::Message {
 public:
  QuerySealTimer();
  virtual ~QuerySealTimer();

  QuerySealTimer(const QuerySealTimer& from);

  inline QuerySealTimer& operator=(const QuerySealTimer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuerySealTimer& default_instance();

  void Swap(QuerySealTimer* other);

  // implements Message ----------------------------------------------

  QuerySealTimer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuerySealTimer& from);
  void MergeFrom(const QuerySealTimer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = CMDPARAM_SEALTIMER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // required uint64 userid = 3 [default = 0];
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 3;
  inline ::google::protobuf::uint64 userid() const;
  inline void set_userid(::google::protobuf::uint64 value);

  // required uint64 teamid = 4 [default = 0];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 4;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.QuerySealTimer)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 userid_;
  ::google::protobuf::uint64 teamid_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static QuerySealTimer* default_instance_;
};
// -------------------------------------------------------------------

class DelSceneImage : public ::google::protobuf::Message {
 public:
  DelSceneImage();
  virtual ~DelSceneImage();

  DelSceneImage(const DelSceneImage& from);

  inline DelSceneImage& operator=(const DelSceneImage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelSceneImage& default_instance();

  void Swap(DelSceneImage* other);

  // implements Message ----------------------------------------------

  DelSceneImage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DelSceneImage& from);
  void MergeFrom(const DelSceneImage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = DEL_SCENE_IMAGE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 guid = 3 [default = 0];
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 3;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional uint32 realscene = 4 [default = 0];
  inline bool has_realscene() const;
  inline void clear_realscene();
  static const int kRealsceneFieldNumber = 4;
  inline ::google::protobuf::uint32 realscene() const;
  inline void set_realscene(::google::protobuf::uint32 value);

  // optional .Cmd.ESceneImageType etype = 5 [default = ESCENEIMAGE_MIN];
  inline bool has_etype() const;
  inline void clear_etype();
  static const int kEtypeFieldNumber = 5;
  inline ::Cmd::ESceneImageType etype() const;
  inline void set_etype(::Cmd::ESceneImageType value);

  // optional uint32 raid = 6 [default = 0];
  inline bool has_raid() const;
  inline void clear_raid();
  static const int kRaidFieldNumber = 6;
  inline ::google::protobuf::uint32 raid() const;
  inline void set_raid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.DelSceneImage)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_realscene();
  inline void clear_has_realscene();
  inline void set_has_etype();
  inline void clear_has_etype();
  inline void set_has_raid();
  inline void clear_has_raid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint32 realscene_;
  int etype_;
  ::google::protobuf::uint32 raid_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static DelSceneImage* default_instance_;
};
// -------------------------------------------------------------------

class SetTeamSeal : public ::google::protobuf::Message {
 public:
  SetTeamSeal();
  virtual ~SetTeamSeal();

  SetTeamSeal(const SetTeamSeal& from);

  inline SetTeamSeal& operator=(const SetTeamSeal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetTeamSeal& default_instance();

  void Swap(SetTeamSeal* other);

  // implements Message ----------------------------------------------

  SetTeamSeal* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetTeamSeal& from);
  void MergeFrom(const SetTeamSeal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = CMDPARAM_SET_SEAL];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint32 sealid = 3 [default = 0];
  inline bool has_sealid() const;
  inline void clear_sealid();
  static const int kSealidFieldNumber = 3;
  inline ::google::protobuf::uint32 sealid() const;
  inline void set_sealid(::google::protobuf::uint32 value);

  // optional uint64 teamid = 4 [default = 0];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 4;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional uint32 mapid = 5 [default = 0];
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 5;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // optional .Cmd.ESetSealStatus estatus = 6 [default = ESETSEALSTATUS_MIN];
  inline bool has_estatus() const;
  inline void clear_estatus();
  static const int kEstatusFieldNumber = 6;
  inline ::Cmd::ESetSealStatus estatus() const;
  inline void set_estatus(::Cmd::ESetSealStatus value);

  // optional .Cmd.ScenePos pos = 7;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 7;
  inline const ::Cmd::ScenePos& pos() const;
  inline ::Cmd::ScenePos* mutable_pos();
  inline ::Cmd::ScenePos* release_pos();
  inline void set_allocated_pos(::Cmd::ScenePos* pos);

  // optional uint64 leaderid = 8 [default = 0];
  inline bool has_leaderid() const;
  inline void clear_leaderid();
  static const int kLeaderidFieldNumber = 8;
  inline ::google::protobuf::uint64 leaderid() const;
  inline void set_leaderid(::google::protobuf::uint64 value);

  // repeated uint64 teamers = 9;
  inline int teamers_size() const;
  inline void clear_teamers();
  static const int kTeamersFieldNumber = 9;
  inline ::google::protobuf::uint64 teamers(int index) const;
  inline void set_teamers(int index, ::google::protobuf::uint64 value);
  inline void add_teamers(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      teamers() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_teamers();

  // @@protoc_insertion_point(class_scope:Cmd.SetTeamSeal)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_sealid();
  inline void clear_has_sealid();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_estatus();
  inline void clear_has_estatus();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_leaderid();
  inline void clear_has_leaderid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint32 sealid_;
  ::google::protobuf::uint32 mapid_;
  ::Cmd::ScenePos* pos_;
  ::google::protobuf::uint64 leaderid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > teamers_;
  int estatus_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static SetTeamSeal* default_instance_;
};
// -------------------------------------------------------------------

class UserLoginNtfSessionCmd : public ::google::protobuf::Message {
 public:
  UserLoginNtfSessionCmd();
  virtual ~UserLoginNtfSessionCmd();

  UserLoginNtfSessionCmd(const UserLoginNtfSessionCmd& from);

  inline UserLoginNtfSessionCmd& operator=(const UserLoginNtfSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserLoginNtfSessionCmd& default_instance();

  void Swap(UserLoginNtfSessionCmd* other);

  // implements Message ----------------------------------------------

  UserLoginNtfSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserLoginNtfSessionCmd& from);
  void MergeFrom(const UserLoginNtfSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_USERLOGIN_NTF];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string servername = 4;
  inline bool has_servername() const;
  inline void clear_servername();
  static const int kServernameFieldNumber = 4;
  inline const ::std::string& servername() const;
  inline void set_servername(const ::std::string& value);
  inline void set_servername(const char* value);
  inline void set_servername(const char* value, size_t size);
  inline ::std::string* mutable_servername();
  inline ::std::string* release_servername();
  inline void set_allocated_servername(::std::string* servername);

  // @@protoc_insertion_point(class_scope:Cmd.UserLoginNtfSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_servername();
  inline void clear_has_servername();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::std::string* servername_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static UserLoginNtfSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class RefreshTower : public ::google::protobuf::Message {
 public:
  RefreshTower();
  virtual ~RefreshTower();

  RefreshTower(const RefreshTower& from);

  inline RefreshTower& operator=(const RefreshTower& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RefreshTower& default_instance();

  void Swap(RefreshTower* other);

  // implements Message ----------------------------------------------

  RefreshTower* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RefreshTower& from);
  void MergeFrom(const RefreshTower& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = CMDPARAM_REFRESH_TOWER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // @@protoc_insertion_point(class_scope:Cmd.RefreshTower)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static RefreshTower* default_instance_;
};
// -------------------------------------------------------------------

class NotifyLoginSessionCmd : public ::google::protobuf::Message {
 public:
  NotifyLoginSessionCmd();
  virtual ~NotifyLoginSessionCmd();

  NotifyLoginSessionCmd(const NotifyLoginSessionCmd& from);

  inline NotifyLoginSessionCmd& operator=(const NotifyLoginSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyLoginSessionCmd& default_instance();

  void Swap(NotifyLoginSessionCmd* other);

  // implements Message ----------------------------------------------

  NotifyLoginSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyLoginSessionCmd& from);
  void MergeFrom(const NotifyLoginSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_NOTIFY_LOGIN];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 id = 3 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint64 accid = 4 [default = 0];
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 4;
  inline ::google::protobuf::uint64 accid() const;
  inline void set_accid(::google::protobuf::uint64 value);

  // optional uint32 mapid = 5 [default = 0];
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 5;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // optional bool ischangescene = 6 [default = false];
  inline bool has_ischangescene() const;
  inline void clear_ischangescene();
  static const int kIschangesceneFieldNumber = 6;
  inline bool ischangescene() const;
  inline void set_ischangescene(bool value);

  // optional string name = 7;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 7;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string gatename = 8;
  inline bool has_gatename() const;
  inline void clear_gatename();
  static const int kGatenameFieldNumber = 8;
  inline const ::std::string& gatename() const;
  inline void set_gatename(const ::std::string& value);
  inline void set_gatename(const char* value);
  inline void set_gatename(const char* value, size_t size);
  inline ::std::string* mutable_gatename();
  inline ::std::string* release_gatename();
  inline void set_allocated_gatename(::std::string* gatename);

  // optional string phone = 9;
  inline bool has_phone() const;
  inline void clear_phone();
  static const int kPhoneFieldNumber = 9;
  inline const ::std::string& phone() const;
  inline void set_phone(const ::std::string& value);
  inline void set_phone(const char* value);
  inline void set_phone(const char* value, size_t size);
  inline ::std::string* mutable_phone();
  inline ::std::string* release_phone();
  inline void set_allocated_phone(::std::string* phone);

  // optional bool ignorepwd = 10;
  inline bool has_ignorepwd() const;
  inline void clear_ignorepwd();
  static const int kIgnorepwdFieldNumber = 10;
  inline bool ignorepwd() const;
  inline void set_ignorepwd(bool value);

  // optional uint32 language = 11;
  inline bool has_language() const;
  inline void clear_language();
  static const int kLanguageFieldNumber = 11;
  inline ::google::protobuf::uint32 language() const;
  inline void set_language(::google::protobuf::uint32 value);

  // optional bool realauthorized = 12;
  inline bool has_realauthorized() const;
  inline void clear_realauthorized();
  static const int kRealauthorizedFieldNumber = 12;
  inline bool realauthorized() const;
  inline void set_realauthorized(bool value);

  // optional uint32 maxbaselv = 13;
  inline bool has_maxbaselv() const;
  inline void clear_maxbaselv();
  static const int kMaxbaselvFieldNumber = 13;
  inline ::google::protobuf::uint32 maxbaselv() const;
  inline void set_maxbaselv(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.NotifyLoginSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_accid();
  inline void clear_has_accid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_ischangescene();
  inline void clear_has_ischangescene();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_gatename();
  inline void clear_has_gatename();
  inline void set_has_phone();
  inline void clear_has_phone();
  inline void set_has_ignorepwd();
  inline void clear_has_ignorepwd();
  inline void set_has_language();
  inline void clear_has_language();
  inline void set_has_realauthorized();
  inline void clear_has_realauthorized();
  inline void set_has_maxbaselv();
  inline void clear_has_maxbaselv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 accid_;
  ::std::string* name_;
  ::std::string* gatename_;
  ::google::protobuf::uint32 mapid_;
  bool ischangescene_;
  bool ignorepwd_;
  bool realauthorized_;
  ::std::string* phone_;
  ::google::protobuf::uint32 language_;
  ::google::protobuf::uint32 maxbaselv_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static NotifyLoginSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class ErrSetUserDataSessionCmd : public ::google::protobuf::Message {
 public:
  ErrSetUserDataSessionCmd();
  virtual ~ErrSetUserDataSessionCmd();

  ErrSetUserDataSessionCmd(const ErrSetUserDataSessionCmd& from);

  inline ErrSetUserDataSessionCmd& operator=(const ErrSetUserDataSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ErrSetUserDataSessionCmd& default_instance();

  void Swap(ErrSetUserDataSessionCmd* other);

  // implements Message ----------------------------------------------

  ErrSetUserDataSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ErrSetUserDataSessionCmd& from);
  void MergeFrom(const ErrSetUserDataSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_ERR_SET_USERDATA];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 id = 3 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.ErrSetUserDataSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 id_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static ErrSetUserDataSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class ChangeSceneSingleSessionCmd : public ::google::protobuf::Message {
 public:
  ChangeSceneSingleSessionCmd();
  virtual ~ChangeSceneSingleSessionCmd();

  ChangeSceneSingleSessionCmd(const ChangeSceneSingleSessionCmd& from);

  inline ChangeSceneSingleSessionCmd& operator=(const ChangeSceneSingleSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeSceneSingleSessionCmd& default_instance();

  void Swap(ChangeSceneSingleSessionCmd* other);

  // implements Message ----------------------------------------------

  ChangeSceneSingleSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeSceneSingleSessionCmd& from);
  void MergeFrom(const ChangeSceneSingleSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_CHANGESCENE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 mapid = 4 [default = 0];
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 4;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ChangeSceneSingleSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static ChangeSceneSingleSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class RegMapFailSessionCmd : public ::google::protobuf::Message {
 public:
  RegMapFailSessionCmd();
  virtual ~RegMapFailSessionCmd();

  RegMapFailSessionCmd(const RegMapFailSessionCmd& from);

  inline RegMapFailSessionCmd& operator=(const RegMapFailSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegMapFailSessionCmd& default_instance();

  void Swap(RegMapFailSessionCmd* other);

  // implements Message ----------------------------------------------

  RegMapFailSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RegMapFailSessionCmd& from);
  void MergeFrom(const RegMapFailSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_REGMAPFAIL];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint32 mapid = 3 [default = 0];
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.RegMapFailSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static RegMapFailSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class RegMapOKSessionCmd : public ::google::protobuf::Message {
 public:
  RegMapOKSessionCmd();
  virtual ~RegMapOKSessionCmd();

  RegMapOKSessionCmd(const RegMapOKSessionCmd& from);

  inline RegMapOKSessionCmd& operator=(const RegMapOKSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegMapOKSessionCmd& default_instance();

  void Swap(RegMapOKSessionCmd* other);

  // implements Message ----------------------------------------------

  RegMapOKSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RegMapOKSessionCmd& from);
  void MergeFrom(const RegMapOKSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_REGMAPOK];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint32 mapid = 3 [default = 0];
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.RegMapOKSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static RegMapOKSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class ForwardUserSessionCmd : public ::google::protobuf::Message {
 public:
  ForwardUserSessionCmd();
  virtual ~ForwardUserSessionCmd();

  ForwardUserSessionCmd(const ForwardUserSessionCmd& from);

  inline ForwardUserSessionCmd& operator=(const ForwardUserSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ForwardUserSessionCmd& default_instance();

  void Swap(ForwardUserSessionCmd* other);

  // implements Message ----------------------------------------------

  ForwardUserSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ForwardUserSessionCmd& from);
  void MergeFrom(const ForwardUserSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_FORWARDUSER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional bytes data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Cmd.ForwardUserSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static ForwardUserSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class ForwardUserSceneSessionCmd : public ::google::protobuf::Message {
 public:
  ForwardUserSceneSessionCmd();
  virtual ~ForwardUserSceneSessionCmd();

  ForwardUserSceneSessionCmd(const ForwardUserSceneSessionCmd& from);

  inline ForwardUserSceneSessionCmd& operator=(const ForwardUserSceneSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ForwardUserSceneSessionCmd& default_instance();

  void Swap(ForwardUserSceneSessionCmd* other);

  // implements Message ----------------------------------------------

  ForwardUserSceneSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ForwardUserSceneSessionCmd& from);
  void MergeFrom(const ForwardUserSceneSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_FORWARDUSERSCENE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional bytes data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Cmd.ForwardUserSceneSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static ForwardUserSceneSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class ForwardUserSessionSessionCmd : public ::google::protobuf::Message {
 public:
  ForwardUserSessionSessionCmd();
  virtual ~ForwardUserSessionSessionCmd();

  ForwardUserSessionSessionCmd(const ForwardUserSessionSessionCmd& from);

  inline ForwardUserSessionSessionCmd& operator=(const ForwardUserSessionSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ForwardUserSessionSessionCmd& default_instance();

  void Swap(ForwardUserSessionSessionCmd* other);

  // implements Message ----------------------------------------------

  ForwardUserSessionSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ForwardUserSessionSessionCmd& from);
  void MergeFrom(const ForwardUserSessionSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_FORWARDUSERSESSION];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional bytes data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Cmd.ForwardUserSessionSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static ForwardUserSessionSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class ForwardUserSceneSvrSessionCmd : public ::google::protobuf::Message {
 public:
  ForwardUserSceneSvrSessionCmd();
  virtual ~ForwardUserSceneSvrSessionCmd();

  ForwardUserSceneSvrSessionCmd(const ForwardUserSceneSvrSessionCmd& from);

  inline ForwardUserSceneSvrSessionCmd& operator=(const ForwardUserSceneSvrSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ForwardUserSceneSvrSessionCmd& default_instance();

  void Swap(ForwardUserSceneSvrSessionCmd* other);

  // implements Message ----------------------------------------------

  ForwardUserSceneSvrSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ForwardUserSceneSvrSessionCmd& from);
  void MergeFrom(const ForwardUserSceneSvrSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_FORWARDUSERSCENESVR];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional bytes data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Cmd.ForwardUserSceneSvrSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static ForwardUserSceneSvrSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class EnterGuildTerritorySessionCmd : public ::google::protobuf::Message {
 public:
  EnterGuildTerritorySessionCmd();
  virtual ~EnterGuildTerritorySessionCmd();

  EnterGuildTerritorySessionCmd(const EnterGuildTerritorySessionCmd& from);

  inline EnterGuildTerritorySessionCmd& operator=(const EnterGuildTerritorySessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterGuildTerritorySessionCmd& default_instance();

  void Swap(EnterGuildTerritorySessionCmd* other);

  // implements Message ----------------------------------------------

  EnterGuildTerritorySessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterGuildTerritorySessionCmd& from);
  void MergeFrom(const EnterGuildTerritorySessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_ENTERGUILD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint64 targetid = 4 [default = 0];
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetidFieldNumber = 4;
  inline ::google::protobuf::uint64 targetid() const;
  inline void set_targetid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.EnterGuildTerritorySessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_targetid();
  inline void clear_has_targetid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 targetid_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static EnterGuildTerritorySessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class SyncDojoSessionCmd : public ::google::protobuf::Message {
 public:
  SyncDojoSessionCmd();
  virtual ~SyncDojoSessionCmd();

  SyncDojoSessionCmd(const SyncDojoSessionCmd& from);

  inline SyncDojoSessionCmd& operator=(const SyncDojoSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncDojoSessionCmd& default_instance();

  void Swap(SyncDojoSessionCmd* other);

  // implements Message ----------------------------------------------

  SyncDojoSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncDojoSessionCmd& from);
  void MergeFrom(const SyncDojoSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_SYNC_DOJO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 teamguid = 3;
  inline bool has_teamguid() const;
  inline void clear_teamguid();
  static const int kTeamguidFieldNumber = 3;
  inline ::google::protobuf::uint64 teamguid() const;
  inline void set_teamguid(::google::protobuf::uint64 value);

  // optional uint32 dojoid = 4;
  inline bool has_dojoid() const;
  inline void clear_dojoid();
  static const int kDojoidFieldNumber = 4;
  inline ::google::protobuf::uint32 dojoid() const;
  inline void set_dojoid(::google::protobuf::uint32 value);

  // optional uint64 sponsorid = 5;
  inline bool has_sponsorid() const;
  inline void clear_sponsorid();
  static const int kSponsoridFieldNumber = 5;
  inline ::google::protobuf::uint64 sponsorid() const;
  inline void set_sponsorid(::google::protobuf::uint64 value);

  // optional bool isopen = 6;
  inline bool has_isopen() const;
  inline void clear_isopen();
  static const int kIsopenFieldNumber = 6;
  inline bool isopen() const;
  inline void set_isopen(bool value);

  // optional uint64 guildid = 7;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 7;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional bool del = 8 [default = false];
  inline bool has_del() const;
  inline void clear_del();
  static const int kDelFieldNumber = 8;
  inline bool del() const;
  inline void set_del(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.SyncDojoSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_teamguid();
  inline void clear_has_teamguid();
  inline void set_has_dojoid();
  inline void clear_has_dojoid();
  inline void set_has_sponsorid();
  inline void clear_has_sponsorid();
  inline void set_has_isopen();
  inline void clear_has_isopen();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_del();
  inline void clear_has_del();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 teamguid_;
  ::google::protobuf::uint64 sponsorid_;
  ::google::protobuf::uint32 dojoid_;
  bool isopen_;
  bool del_;
  ::google::protobuf::uint64 guildid_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static SyncDojoSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class ChargeSessionCmd : public ::google::protobuf::Message {
 public:
  ChargeSessionCmd();
  virtual ~ChargeSessionCmd();

  ChargeSessionCmd(const ChargeSessionCmd& from);

  inline ChargeSessionCmd& operator=(const ChargeSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChargeSessionCmd& default_instance();

  void Swap(ChargeSessionCmd* other);

  // implements Message ----------------------------------------------

  ChargeSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChargeSessionCmd& from);
  void MergeFrom(const ChargeSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_CHARGE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional float charge = 4 [default = 0];
  inline bool has_charge() const;
  inline void clear_charge();
  static const int kChargeFieldNumber = 4;
  inline float charge() const;
  inline void set_charge(float value);

  // optional uint32 itemid = 5;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 5;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // optional uint32 count = 6;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 6;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // optional string source = 7;
  inline bool has_source() const;
  inline void clear_source();
  static const int kSourceFieldNumber = 7;
  inline const ::std::string& source() const;
  inline void set_source(const ::std::string& value);
  inline void set_source(const char* value);
  inline void set_source(const char* value, size_t size);
  inline ::std::string* mutable_source();
  inline ::std::string* release_source();
  inline void set_allocated_source(::std::string* source);

  // optional string orderid = 8;
  inline bool has_orderid() const;
  inline void clear_orderid();
  static const int kOrderidFieldNumber = 8;
  inline const ::std::string& orderid() const;
  inline void set_orderid(const ::std::string& value);
  inline void set_orderid(const char* value);
  inline void set_orderid(const char* value, size_t size);
  inline ::std::string* mutable_orderid();
  inline ::std::string* release_orderid();
  inline void set_allocated_orderid(::std::string* orderid);

  // optional uint32 dataid = 9;
  inline bool has_dataid() const;
  inline void clear_dataid();
  static const int kDataidFieldNumber = 9;
  inline ::google::protobuf::uint32 dataid() const;
  inline void set_dataid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ChargeSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charge();
  inline void clear_has_charge();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_source();
  inline void clear_has_source();
  inline void set_has_orderid();
  inline void clear_has_orderid();
  inline void set_has_dataid();
  inline void clear_has_dataid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  float charge_;
  ::google::protobuf::uint32 itemid_;
  ::std::string* source_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 dataid_;
  ::std::string* orderid_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static ChargeSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class GagSessionCmd : public ::google::protobuf::Message {
 public:
  GagSessionCmd();
  virtual ~GagSessionCmd();

  GagSessionCmd(const GagSessionCmd& from);

  inline GagSessionCmd& operator=(const GagSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GagSessionCmd& default_instance();

  void Swap(GagSessionCmd* other);

  // implements Message ----------------------------------------------

  GagSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GagSessionCmd& from);
  void MergeFrom(const GagSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_GM_GAG];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 time = 4 [default = 0];
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // optional string reason = 5;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 5;
  inline const ::std::string& reason() const;
  inline void set_reason(const ::std::string& value);
  inline void set_reason(const char* value);
  inline void set_reason(const char* value, size_t size);
  inline ::std::string* mutable_reason();
  inline ::std::string* release_reason();
  inline void set_allocated_reason(::std::string* reason);

  // @@protoc_insertion_point(class_scope:Cmd.GagSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_reason();
  inline void clear_has_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::std::string* reason_;
  ::google::protobuf::uint32 time_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static GagSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class LockSessionCmd : public ::google::protobuf::Message {
 public:
  LockSessionCmd();
  virtual ~LockSessionCmd();

  LockSessionCmd(const LockSessionCmd& from);

  inline LockSessionCmd& operator=(const LockSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LockSessionCmd& default_instance();

  void Swap(LockSessionCmd* other);

  // implements Message ----------------------------------------------

  LockSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LockSessionCmd& from);
  void MergeFrom(const LockSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_GM_LOCK];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 time = 4 [default = 0];
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // optional string reason = 5;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 5;
  inline const ::std::string& reason() const;
  inline void set_reason(const ::std::string& value);
  inline void set_reason(const char* value);
  inline void set_reason(const char* value, size_t size);
  inline ::std::string* mutable_reason();
  inline ::std::string* release_reason();
  inline void set_allocated_reason(::std::string* reason);

  // optional bool account = 6 [default = false];
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 6;
  inline bool account() const;
  inline void set_account(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.LockSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_reason();
  inline void clear_has_reason();
  inline void set_has_account();
  inline void clear_has_account();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::std::string* reason_;
  ::google::protobuf::uint32 time_;
  bool account_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static LockSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class IteamImageSessionCmd : public ::google::protobuf::Message {
 public:
  IteamImageSessionCmd();
  virtual ~IteamImageSessionCmd();

  IteamImageSessionCmd(const IteamImageSessionCmd& from);

  inline IteamImageSessionCmd& operator=(const IteamImageSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IteamImageSessionCmd& default_instance();

  void Swap(IteamImageSessionCmd* other);

  // implements Message ----------------------------------------------

  IteamImageSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IteamImageSessionCmd& from);
  void MergeFrom(const IteamImageSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_ITEMIMAGE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint64 teamid = 4 [default = 0];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 4;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.IteamImageSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 teamid_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static IteamImageSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class FerrisInviteSessionCmd : public ::google::protobuf::Message {
 public:
  FerrisInviteSessionCmd();
  virtual ~FerrisInviteSessionCmd();

  FerrisInviteSessionCmd(const FerrisInviteSessionCmd& from);

  inline FerrisInviteSessionCmd& operator=(const FerrisInviteSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FerrisInviteSessionCmd& default_instance();

  void Swap(FerrisInviteSessionCmd* other);

  // implements Message ----------------------------------------------

  FerrisInviteSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FerrisInviteSessionCmd& from);
  void MergeFrom(const FerrisInviteSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_FERRIS_INVITE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint64 targetid = 4 [default = 0];
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetidFieldNumber = 4;
  inline ::google::protobuf::uint64 targetid() const;
  inline void set_targetid(::google::protobuf::uint64 value);

  // optional uint32 msgid = 5 [default = 0];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 5;
  inline ::google::protobuf::uint32 msgid() const;
  inline void set_msgid(::google::protobuf::uint32 value);

  // optional uint32 id = 6 [default = 1];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 6;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.FerrisInviteSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_targetid();
  inline void clear_has_targetid();
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 targetid_;
  ::google::protobuf::uint32 msgid_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static FerrisInviteSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class EnterFerrisReadySessionCmd : public ::google::protobuf::Message {
 public:
  EnterFerrisReadySessionCmd();
  virtual ~EnterFerrisReadySessionCmd();

  EnterFerrisReadySessionCmd(const EnterFerrisReadySessionCmd& from);

  inline EnterFerrisReadySessionCmd& operator=(const EnterFerrisReadySessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterFerrisReadySessionCmd& default_instance();

  void Swap(EnterFerrisReadySessionCmd* other);

  // implements Message ----------------------------------------------

  EnterFerrisReadySessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterFerrisReadySessionCmd& from);
  void MergeFrom(const EnterFerrisReadySessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_FERRIS_READYENTER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 msgid = 4 [default = 0];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 4;
  inline ::google::protobuf::uint32 msgid() const;
  inline void set_msgid(::google::protobuf::uint32 value);

  // optional uint32 id = 5 [default = 1];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 5;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.EnterFerrisReadySessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 msgid_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static EnterFerrisReadySessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class ActivityTestAndSetSessionCmd : public ::google::protobuf::Message {
 public:
  ActivityTestAndSetSessionCmd();
  virtual ~ActivityTestAndSetSessionCmd();

  ActivityTestAndSetSessionCmd(const ActivityTestAndSetSessionCmd& from);

  inline ActivityTestAndSetSessionCmd& operator=(const ActivityTestAndSetSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityTestAndSetSessionCmd& default_instance();

  void Swap(ActivityTestAndSetSessionCmd* other);

  // implements Message ----------------------------------------------

  ActivityTestAndSetSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityTestAndSetSessionCmd& from);
  void MergeFrom(const ActivityTestAndSetSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_ACTIVITY_TESTANDSET];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint64 uid = 4;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 4;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional uint32 mapid = 5;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 5;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // optional uint32 starttime = 6;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 6;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // optional uint64 charid = 7;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 7;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 ret = 8;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 8;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ActivityTestAndSetSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 starttime_;
  ::google::protobuf::uint32 ret_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static ActivityTestAndSetSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class ActivityStatusSessionCmd : public ::google::protobuf::Message {
 public:
  ActivityStatusSessionCmd();
  virtual ~ActivityStatusSessionCmd();

  ActivityStatusSessionCmd(const ActivityStatusSessionCmd& from);

  inline ActivityStatusSessionCmd& operator=(const ActivityStatusSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityStatusSessionCmd& default_instance();

  void Swap(ActivityStatusSessionCmd* other);

  // implements Message ----------------------------------------------

  ActivityStatusSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityStatusSessionCmd& from);
  void MergeFrom(const ActivityStatusSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_ACTIVITY_STATUS];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint32 id = 3 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 mapid = 4 [default = 0];
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 4;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // optional bool start = 5 [default = false];
  inline bool has_start() const;
  inline void clear_start();
  static const int kStartFieldNumber = 5;
  inline bool start() const;
  inline void set_start(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.ActivityStatusSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_start();
  inline void clear_has_start();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 mapid_;
  bool start_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static ActivityStatusSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class ChangeTeamSessionCmd : public ::google::protobuf::Message {
 public:
  ChangeTeamSessionCmd();
  virtual ~ChangeTeamSessionCmd();

  ChangeTeamSessionCmd(const ChangeTeamSessionCmd& from);

  inline ChangeTeamSessionCmd& operator=(const ChangeTeamSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeTeamSessionCmd& default_instance();

  void Swap(ChangeTeamSessionCmd* other);

  // implements Message ----------------------------------------------

  ChangeTeamSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeTeamSessionCmd& from);
  void MergeFrom(const ChangeTeamSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_CHANGE_TEAM];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional bool join = 3 [default = true];
  inline bool has_join() const;
  inline void clear_join();
  static const int kJoinFieldNumber = 3;
  inline bool join() const;
  inline void set_join(bool value);

  // optional uint64 userid = 4 [default = 0];
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 4;
  inline ::google::protobuf::uint64 userid() const;
  inline void set_userid(::google::protobuf::uint64 value);

  // optional uint64 teamid = 5 [default = 0];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 5;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.ChangeTeamSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_join();
  inline void clear_has_join();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 userid_;
  ::google::protobuf::uint64 teamid_;
  bool join_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static ChangeTeamSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class ForwardRegionSessionCmd : public ::google::protobuf::Message {
 public:
  ForwardRegionSessionCmd();
  virtual ~ForwardRegionSessionCmd();

  ForwardRegionSessionCmd(const ForwardRegionSessionCmd& from);

  inline ForwardRegionSessionCmd& operator=(const ForwardRegionSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ForwardRegionSessionCmd& default_instance();

  void Swap(ForwardRegionSessionCmd* other);

  // implements Message ----------------------------------------------

  ForwardRegionSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ForwardRegionSessionCmd& from);
  void MergeFrom(const ForwardRegionSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_FORWARD_REGION];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint32 region_type = 3;
  inline bool has_region_type() const;
  inline void clear_region_type();
  static const int kRegionTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 region_type() const;
  inline void set_region_type(::google::protobuf::uint32 value);

  // optional bytes data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // optional uint32 len = 5;
  inline bool has_len() const;
  inline void clear_len();
  static const int kLenFieldNumber = 5;
  inline ::google::protobuf::uint32 len() const;
  inline void set_len(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ForwardRegionSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_region_type();
  inline void clear_has_region_type();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_len();
  inline void clear_has_len();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::std::string* data_;
  ::google::protobuf::uint32 region_type_;
  ::google::protobuf::uint32 len_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static ForwardRegionSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class BreakHandSessionCmd : public ::google::protobuf::Message {
 public:
  BreakHandSessionCmd();
  virtual ~BreakHandSessionCmd();

  BreakHandSessionCmd(const BreakHandSessionCmd& from);

  inline BreakHandSessionCmd& operator=(const BreakHandSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BreakHandSessionCmd& default_instance();

  void Swap(BreakHandSessionCmd* other);

  // implements Message ----------------------------------------------

  BreakHandSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BreakHandSessionCmd& from);
  void MergeFrom(const BreakHandSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_BREAK_HAND];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 userid = 3 [default = 0];
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 3;
  inline ::google::protobuf::uint64 userid() const;
  inline void set_userid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.BreakHandSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 userid_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static BreakHandSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class ActivityStopSessionCmd : public ::google::protobuf::Message {
 public:
  ActivityStopSessionCmd();
  virtual ~ActivityStopSessionCmd();

  ActivityStopSessionCmd(const ActivityStopSessionCmd& from);

  inline ActivityStopSessionCmd& operator=(const ActivityStopSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityStopSessionCmd& default_instance();

  void Swap(ActivityStopSessionCmd* other);

  // implements Message ----------------------------------------------

  ActivityStopSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityStopSessionCmd& from);
  void MergeFrom(const ActivityStopSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_ACTIVITY_STOP];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint64 uid = 4;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 4;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional uint32 mapid = 5;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 5;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ActivityStopSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static ActivityStopSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class WantedInfoSyncSessionCmd : public ::google::protobuf::Message {
 public:
  WantedInfoSyncSessionCmd();
  virtual ~WantedInfoSyncSessionCmd();

  WantedInfoSyncSessionCmd(const WantedInfoSyncSessionCmd& from);

  inline WantedInfoSyncSessionCmd& operator=(const WantedInfoSyncSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WantedInfoSyncSessionCmd& default_instance();

  void Swap(WantedInfoSyncSessionCmd* other);

  // implements Message ----------------------------------------------

  WantedInfoSyncSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WantedInfoSyncSessionCmd& from);
  void MergeFrom(const WantedInfoSyncSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_WANTED_INFO_SYNC];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional bool active = 3 [default = false];
  inline bool has_active() const;
  inline void clear_active();
  static const int kActiveFieldNumber = 3;
  inline bool active() const;
  inline void set_active(bool value);

  // optional uint32 maxcount = 4 [default = 0];
  inline bool has_maxcount() const;
  inline void clear_maxcount();
  static const int kMaxcountFieldNumber = 4;
  inline ::google::protobuf::uint32 maxcount() const;
  inline void set_maxcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.WantedInfoSyncSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_active();
  inline void clear_has_active();
  inline void set_has_maxcount();
  inline void clear_has_maxcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  bool active_;
  ::google::protobuf::uint32 maxcount_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static WantedInfoSyncSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class QueryZoneStatusSessionCmd : public ::google::protobuf::Message {
 public:
  QueryZoneStatusSessionCmd();
  virtual ~QueryZoneStatusSessionCmd();

  QueryZoneStatusSessionCmd(const QueryZoneStatusSessionCmd& from);

  inline QueryZoneStatusSessionCmd& operator=(const QueryZoneStatusSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryZoneStatusSessionCmd& default_instance();

  void Swap(QueryZoneStatusSessionCmd* other);

  // implements Message ----------------------------------------------

  QueryZoneStatusSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryZoneStatusSessionCmd& from);
  void MergeFrom(const QueryZoneStatusSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_ZONE_QUERYSTATUS];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // repeated .Cmd.ZoneInfo infos = 4;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 4;
  inline const ::Cmd::ZoneInfo& infos(int index) const;
  inline ::Cmd::ZoneInfo* mutable_infos(int index);
  inline ::Cmd::ZoneInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ZoneInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ZoneInfo >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:Cmd.QueryZoneStatusSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ZoneInfo > infos_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static QueryZoneStatusSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class SendMailFromScene : public ::google::protobuf::Message {
 public:
  SendMailFromScene();
  virtual ~SendMailFromScene();

  SendMailFromScene(const SendMailFromScene& from);

  inline SendMailFromScene& operator=(const SendMailFromScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendMailFromScene& default_instance();

  void Swap(SendMailFromScene* other);

  // implements Message ----------------------------------------------

  SendMailFromScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendMailFromScene& from);
  void MergeFrom(const SendMailFromScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = CMDPARAM_SEND_MAIL_FROM_SCENE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional .Cmd.MailData data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::Cmd::MailData& data() const;
  inline ::Cmd::MailData* mutable_data();
  inline ::Cmd::MailData* release_data();
  inline void set_allocated_data(::Cmd::MailData* data);

  // @@protoc_insertion_point(class_scope:Cmd.SendMailFromScene)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::MailData* data_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static SendMailFromScene* default_instance_;
};
// -------------------------------------------------------------------

class GetTradeLogSessionCmd : public ::google::protobuf::Message {
 public:
  GetTradeLogSessionCmd();
  virtual ~GetTradeLogSessionCmd();

  GetTradeLogSessionCmd(const GetTradeLogSessionCmd& from);

  inline GetTradeLogSessionCmd& operator=(const GetTradeLogSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTradeLogSessionCmd& default_instance();

  void Swap(GetTradeLogSessionCmd* other);

  // implements Message ----------------------------------------------

  GetTradeLogSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTradeLogSessionCmd& from);
  void MergeFrom(const GetTradeLogSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_GET_TRADELOG];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint64 id = 4 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 4;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional .Cmd.EOperType logtype = 5;
  inline bool has_logtype() const;
  inline void clear_logtype();
  static const int kLogtypeFieldNumber = 5;
  inline ::Cmd::EOperType logtype() const;
  inline void set_logtype(::Cmd::EOperType value);

  // optional .Cmd.ItemInfo item = 6;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 6;
  inline const ::Cmd::ItemInfo& item() const;
  inline ::Cmd::ItemInfo* mutable_item();
  inline ::Cmd::ItemInfo* release_item();
  inline void set_allocated_item(::Cmd::ItemInfo* item);

  // optional .Cmd.ItemData itemData = 7;
  inline bool has_itemdata() const;
  inline void clear_itemdata();
  static const int kItemDataFieldNumber = 7;
  inline const ::Cmd::ItemData& itemdata() const;
  inline ::Cmd::ItemData* mutable_itemdata();
  inline ::Cmd::ItemData* release_itemdata();
  inline void set_allocated_itemdata(::Cmd::ItemData* itemdata);

  // optional bool success = 8;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 8;
  inline bool success() const;
  inline void set_success(bool value);

  // optional uint32 sell_item_id = 9;
  inline bool has_sell_item_id() const;
  inline void clear_sell_item_id();
  static const int kSellItemIdFieldNumber = 9;
  inline ::google::protobuf::uint32 sell_item_id() const;
  inline void set_sell_item_id(::google::protobuf::uint32 value);

  // optional uint64 sell_price = 10;
  inline bool has_sell_price() const;
  inline void clear_sell_price();
  static const int kSellPriceFieldNumber = 10;
  inline ::google::protobuf::uint64 sell_price() const;
  inline void set_sell_price(::google::protobuf::uint64 value);

  // optional uint32 sell_count = 11;
  inline bool has_sell_count() const;
  inline void clear_sell_count();
  static const int kSellCountFieldNumber = 11;
  inline ::google::protobuf::uint32 sell_count() const;
  inline void set_sell_count(::google::protobuf::uint32 value);

  // optional uint32 refine_lv = 12;
  inline bool has_refine_lv() const;
  inline void clear_refine_lv();
  static const int kRefineLvFieldNumber = 12;
  inline ::google::protobuf::uint32 refine_lv() const;
  inline void set_refine_lv(::google::protobuf::uint32 value);

  // optional uint32 ret_cost = 13;
  inline bool has_ret_cost() const;
  inline void clear_ret_cost();
  static const int kRetCostFieldNumber = 13;
  inline ::google::protobuf::uint32 ret_cost() const;
  inline void set_ret_cost(::google::protobuf::uint32 value);

  // optional .Cmd.ETradeType trade_type = 14;
  inline bool has_trade_type() const;
  inline void clear_trade_type();
  static const int kTradeTypeFieldNumber = 14;
  inline ::Cmd::ETradeType trade_type() const;
  inline void set_trade_type(::Cmd::ETradeType value);

  // optional uint64 tax = 15;
  inline bool has_tax() const;
  inline void clear_tax();
  static const int kTaxFieldNumber = 15;
  inline ::google::protobuf::uint64 tax() const;
  inline void set_tax(::google::protobuf::uint64 value);

  // optional uint64 quota = 16;
  inline bool has_quota() const;
  inline void clear_quota();
  static const int kQuotaFieldNumber = 16;
  inline ::google::protobuf::uint64 quota() const;
  inline void set_quota(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.GetTradeLogSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_logtype();
  inline void clear_has_logtype();
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_itemdata();
  inline void clear_has_itemdata();
  inline void set_has_success();
  inline void clear_has_success();
  inline void set_has_sell_item_id();
  inline void clear_has_sell_item_id();
  inline void set_has_sell_price();
  inline void clear_has_sell_price();
  inline void set_has_sell_count();
  inline void clear_has_sell_count();
  inline void set_has_refine_lv();
  inline void clear_has_refine_lv();
  inline void set_has_ret_cost();
  inline void clear_has_ret_cost();
  inline void set_has_trade_type();
  inline void clear_has_trade_type();
  inline void set_has_tax();
  inline void clear_has_tax();
  inline void set_has_quota();
  inline void clear_has_quota();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 id_;
  ::Cmd::ItemInfo* item_;
  int logtype_;
  bool success_;
  ::Cmd::ItemData* itemdata_;
  ::google::protobuf::uint64 sell_price_;
  ::google::protobuf::uint32 sell_item_id_;
  ::google::protobuf::uint32 sell_count_;
  ::google::protobuf::uint32 refine_lv_;
  ::google::protobuf::uint32 ret_cost_;
  ::google::protobuf::uint64 tax_;
  ::google::protobuf::uint64 quota_;
  int trade_type_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static GetTradeLogSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class QuestRaidCloseSessionCmd : public ::google::protobuf::Message {
 public:
  QuestRaidCloseSessionCmd();
  virtual ~QuestRaidCloseSessionCmd();

  QuestRaidCloseSessionCmd(const QuestRaidCloseSessionCmd& from);

  inline QuestRaidCloseSessionCmd& operator=(const QuestRaidCloseSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRaidCloseSessionCmd& default_instance();

  void Swap(QuestRaidCloseSessionCmd* other);

  // implements Message ----------------------------------------------

  QuestRaidCloseSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRaidCloseSessionCmd& from);
  void MergeFrom(const QuestRaidCloseSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_QUEST_RAID_CLOSE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 userid = 3 [default = 0];
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 3;
  inline ::google::protobuf::uint64 userid() const;
  inline void set_userid(::google::protobuf::uint64 value);

  // optional uint32 raidid = 4 [default = 0];
  inline bool has_raidid() const;
  inline void clear_raidid();
  static const int kRaididFieldNumber = 4;
  inline ::google::protobuf::uint32 raidid() const;
  inline void set_raidid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.QuestRaidCloseSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_raidid();
  inline void clear_has_raidid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 userid_;
  ::google::protobuf::uint32 raidid_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static QuestRaidCloseSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class AuthorizeInfoSessionCmd : public ::google::protobuf::Message {
 public:
  AuthorizeInfoSessionCmd();
  virtual ~AuthorizeInfoSessionCmd();

  AuthorizeInfoSessionCmd(const AuthorizeInfoSessionCmd& from);

  inline AuthorizeInfoSessionCmd& operator=(const AuthorizeInfoSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthorizeInfoSessionCmd& default_instance();

  void Swap(AuthorizeInfoSessionCmd* other);

  // implements Message ----------------------------------------------

  AuthorizeInfoSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthorizeInfoSessionCmd& from);
  void MergeFrom(const AuthorizeInfoSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_SYNC_AUTHORIZE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional bool ignorepwd = 4 [default = false];
  inline bool has_ignorepwd() const;
  inline void clear_ignorepwd();
  static const int kIgnorepwdFieldNumber = 4;
  inline bool ignorepwd() const;
  inline void set_ignorepwd(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.AuthorizeInfoSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_ignorepwd();
  inline void clear_has_ignorepwd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  bool ignorepwd_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static AuthorizeInfoSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildRaidCloseSessionCmd : public ::google::protobuf::Message {
 public:
  GuildRaidCloseSessionCmd();
  virtual ~GuildRaidCloseSessionCmd();

  GuildRaidCloseSessionCmd(const GuildRaidCloseSessionCmd& from);

  inline GuildRaidCloseSessionCmd& operator=(const GuildRaidCloseSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRaidCloseSessionCmd& default_instance();

  void Swap(GuildRaidCloseSessionCmd* other);

  // implements Message ----------------------------------------------

  GuildRaidCloseSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildRaidCloseSessionCmd& from);
  void MergeFrom(const GuildRaidCloseSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_GUILDRAID_CLOSE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint32 mapid = 3 [default = 0];
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // optional uint32 curmapindex = 4 [default = 0];
  inline bool has_curmapindex() const;
  inline void clear_curmapindex();
  static const int kCurmapindexFieldNumber = 4;
  inline ::google::protobuf::uint32 curmapindex() const;
  inline void set_curmapindex(::google::protobuf::uint32 value);

  // optional uint64 guildid = 5 [default = 0];
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 5;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional uint64 teamid = 6 [default = 0];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 6;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildRaidCloseSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_curmapindex();
  inline void clear_has_curmapindex();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 curmapindex_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint64 teamid_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildRaidCloseSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class DeletePwdSessionCmd : public ::google::protobuf::Message {
 public:
  DeletePwdSessionCmd();
  virtual ~DeletePwdSessionCmd();

  DeletePwdSessionCmd(const DeletePwdSessionCmd& from);

  inline DeletePwdSessionCmd& operator=(const DeletePwdSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeletePwdSessionCmd& default_instance();

  void Swap(DeletePwdSessionCmd* other);

  // implements Message ----------------------------------------------

  DeletePwdSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeletePwdSessionCmd& from);
  void MergeFrom(const DeletePwdSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_DELETE_AUTHORIZE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.DeletePwdSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static DeletePwdSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class GoBackSessionCmd : public ::google::protobuf::Message {
 public:
  GoBackSessionCmd();
  virtual ~GoBackSessionCmd();

  GoBackSessionCmd(const GoBackSessionCmd& from);

  inline GoBackSessionCmd& operator=(const GoBackSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GoBackSessionCmd& default_instance();

  void Swap(GoBackSessionCmd* other);

  // implements Message ----------------------------------------------

  GoBackSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GoBackSessionCmd& from);
  void MergeFrom(const GoBackSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_GO_BACK];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.GoBackSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static GoBackSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class WantedQuestFinishCmd : public ::google::protobuf::Message {
 public:
  WantedQuestFinishCmd();
  virtual ~WantedQuestFinishCmd();

  WantedQuestFinishCmd(const WantedQuestFinishCmd& from);

  inline WantedQuestFinishCmd& operator=(const WantedQuestFinishCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WantedQuestFinishCmd& default_instance();

  void Swap(WantedQuestFinishCmd* other);

  // implements Message ----------------------------------------------

  WantedQuestFinishCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WantedQuestFinishCmd& from);
  void MergeFrom(const WantedQuestFinishCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_WANTED_QUEST_FINISH];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 leaderid = 3 [default = 0];
  inline bool has_leaderid() const;
  inline void clear_leaderid();
  static const int kLeaderidFieldNumber = 3;
  inline ::google::protobuf::uint64 leaderid() const;
  inline void set_leaderid(::google::protobuf::uint64 value);

  // optional uint64 teammateid = 4 [default = 0];
  inline bool has_teammateid() const;
  inline void clear_teammateid();
  static const int kTeammateidFieldNumber = 4;
  inline ::google::protobuf::uint64 teammateid() const;
  inline void set_teammateid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.WantedQuestFinishCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_leaderid();
  inline void clear_has_leaderid();
  inline void set_has_teammateid();
  inline void clear_has_teammateid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 leaderid_;
  ::google::protobuf::uint64 teammateid_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static WantedQuestFinishCmd* default_instance_;
};
// -------------------------------------------------------------------

class AddOfflineItemSessionCmd : public ::google::protobuf::Message {
 public:
  AddOfflineItemSessionCmd();
  virtual ~AddOfflineItemSessionCmd();

  AddOfflineItemSessionCmd(const AddOfflineItemSessionCmd& from);

  inline AddOfflineItemSessionCmd& operator=(const AddOfflineItemSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddOfflineItemSessionCmd& default_instance();

  void Swap(AddOfflineItemSessionCmd* other);

  // implements Message ----------------------------------------------

  AddOfflineItemSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddOfflineItemSessionCmd& from);
  void MergeFrom(const AddOfflineItemSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_ADD_OFFLINE_ITEM];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional .Cmd.ItemData data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::Cmd::ItemData& data() const;
  inline ::Cmd::ItemData* mutable_data();
  inline ::Cmd::ItemData* release_data();
  inline void set_allocated_data(::Cmd::ItemData* data);

  // @@protoc_insertion_point(class_scope:Cmd.AddOfflineItemSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::Cmd::ItemData* data_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static AddOfflineItemSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class UpdateOperActivitySessionCmd : public ::google::protobuf::Message {
 public:
  UpdateOperActivitySessionCmd();
  virtual ~UpdateOperActivitySessionCmd();

  UpdateOperActivitySessionCmd(const UpdateOperActivitySessionCmd& from);

  inline UpdateOperActivitySessionCmd& operator=(const UpdateOperActivitySessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateOperActivitySessionCmd& default_instance();

  void Swap(UpdateOperActivitySessionCmd* other);

  // implements Message ----------------------------------------------

  UpdateOperActivitySessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateOperActivitySessionCmd& from);
  void MergeFrom(const UpdateOperActivitySessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_UPDATE_OPERACTIVITY];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // @@protoc_insertion_point(class_scope:Cmd.UpdateOperActivitySessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static UpdateOperActivitySessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class SessionShopData : public ::google::protobuf::Message {
 public:
  SessionShopData();
  virtual ~SessionShopData();

  SessionShopData(const SessionShopData& from);

  inline SessionShopData& operator=(const SessionShopData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SessionShopData& default_instance();

  void Swap(SessionShopData* other);

  // implements Message ----------------------------------------------

  SessionShopData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SessionShopData& from);
  void MergeFrom(const SessionShopData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 old = 1;
  inline int old_size() const;
  inline void clear_old();
  static const int kOldFieldNumber = 1;
  inline ::google::protobuf::uint32 old(int index) const;
  inline void set_old(int index, ::google::protobuf::uint32 value);
  inline void add_old(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      old() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_old();

  // optional uint32 now = 2;
  inline bool has_now() const;
  inline void clear_now();
  static const int kNowFieldNumber = 2;
  inline ::google::protobuf::uint32 now() const;
  inline void set_now(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.SessionShopData)
 private:
  inline void set_has_now();
  inline void clear_has_now();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > old_;
  ::google::protobuf::uint32 now_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static SessionShopData* default_instance_;
};
// -------------------------------------------------------------------

class SyncShopSessionCmd : public ::google::protobuf::Message {
 public:
  SyncShopSessionCmd();
  virtual ~SyncShopSessionCmd();

  SyncShopSessionCmd(const SyncShopSessionCmd& from);

  inline SyncShopSessionCmd& operator=(const SyncShopSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncShopSessionCmd& default_instance();

  void Swap(SyncShopSessionCmd* other);

  // implements Message ----------------------------------------------

  SyncShopSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncShopSessionCmd& from);
  void MergeFrom(const SyncShopSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_SYNC_SHOP];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint32 item = 3;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 3;
  inline ::google::protobuf::uint32 item() const;
  inline void set_item(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.SyncShopSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_item();
  inline void clear_has_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 item_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static SyncShopSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class UpdateActivityEventSessionCmd : public ::google::protobuf::Message {
 public:
  UpdateActivityEventSessionCmd();
  virtual ~UpdateActivityEventSessionCmd();

  UpdateActivityEventSessionCmd(const UpdateActivityEventSessionCmd& from);

  inline UpdateActivityEventSessionCmd& operator=(const UpdateActivityEventSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateActivityEventSessionCmd& default_instance();

  void Swap(UpdateActivityEventSessionCmd* other);

  // implements Message ----------------------------------------------

  UpdateActivityEventSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateActivityEventSessionCmd& from);
  void MergeFrom(const UpdateActivityEventSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_UPDATE_ACTIVITYEVENT];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // @@protoc_insertion_point(class_scope:Cmd.UpdateActivityEventSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static UpdateActivityEventSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class ActivityEventNtfSessionCmd : public ::google::protobuf::Message {
 public:
  ActivityEventNtfSessionCmd();
  virtual ~ActivityEventNtfSessionCmd();

  ActivityEventNtfSessionCmd(const ActivityEventNtfSessionCmd& from);

  inline ActivityEventNtfSessionCmd& operator=(const ActivityEventNtfSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityEventNtfSessionCmd& default_instance();

  void Swap(ActivityEventNtfSessionCmd* other);

  // implements Message ----------------------------------------------

  ActivityEventNtfSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityEventNtfSessionCmd& from);
  void MergeFrom(const ActivityEventNtfSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_ACTIVITYEVENT_NTF];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // repeated .Cmd.ActivityEventInfo infos = 3;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 3;
  inline const ::Cmd::ActivityEventInfo& infos(int index) const;
  inline ::Cmd::ActivityEventInfo* mutable_infos(int index);
  inline ::Cmd::ActivityEventInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ActivityEventInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ActivityEventInfo >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:Cmd.ActivityEventNtfSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ActivityEventInfo > infos_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static ActivityEventNtfSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class LoveLetterSessionCmd : public ::google::protobuf::Message {
 public:
  LoveLetterSessionCmd();
  virtual ~LoveLetterSessionCmd();

  LoveLetterSessionCmd(const LoveLetterSessionCmd& from);

  inline LoveLetterSessionCmd& operator=(const LoveLetterSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoveLetterSessionCmd& default_instance();

  void Swap(LoveLetterSessionCmd* other);

  // implements Message ----------------------------------------------

  LoveLetterSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoveLetterSessionCmd& from);
  void MergeFrom(const LoveLetterSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_LOVELETTER_USE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string itemguid = 4;
  inline bool has_itemguid() const;
  inline void clear_itemguid();
  static const int kItemguidFieldNumber = 4;
  inline const ::std::string& itemguid() const;
  inline void set_itemguid(const ::std::string& value);
  inline void set_itemguid(const char* value);
  inline void set_itemguid(const char* value, size_t size);
  inline ::std::string* mutable_itemguid();
  inline ::std::string* release_itemguid();
  inline void set_allocated_itemguid(::std::string* itemguid);

  // optional uint64 targets = 5 [default = 0];
  inline bool has_targets() const;
  inline void clear_targets();
  static const int kTargetsFieldNumber = 5;
  inline ::google::protobuf::uint64 targets() const;
  inline void set_targets(::google::protobuf::uint64 value);

  // optional string content = 6;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 6;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // optional .Cmd.ELetterType type = 7 [default = ELETTERTYPE_CHRISTMAS];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 7;
  inline ::Cmd::ELetterType type() const;
  inline void set_type(::Cmd::ELetterType value);

  // @@protoc_insertion_point(class_scope:Cmd.LoveLetterSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_itemguid();
  inline void clear_has_itemguid();
  inline void set_has_targets();
  inline void clear_has_targets();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::std::string* itemguid_;
  ::google::protobuf::uint64 targets_;
  ::std::string* content_;
  int type_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static LoveLetterSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class LoveLetterSendSessionCmd : public ::google::protobuf::Message {
 public:
  LoveLetterSendSessionCmd();
  virtual ~LoveLetterSendSessionCmd();

  LoveLetterSendSessionCmd(const LoveLetterSendSessionCmd& from);

  inline LoveLetterSendSessionCmd& operator=(const LoveLetterSendSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoveLetterSendSessionCmd& default_instance();

  void Swap(LoveLetterSendSessionCmd* other);

  // implements Message ----------------------------------------------

  LoveLetterSendSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoveLetterSendSessionCmd& from);
  void MergeFrom(const LoveLetterSendSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_LOVELETTER_SEND];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string sendname = 4;
  inline bool has_sendname() const;
  inline void clear_sendname();
  static const int kSendnameFieldNumber = 4;
  inline const ::std::string& sendname() const;
  inline void set_sendname(const ::std::string& value);
  inline void set_sendname(const char* value);
  inline void set_sendname(const char* value, size_t size);
  inline ::std::string* mutable_sendname();
  inline ::std::string* release_sendname();
  inline void set_allocated_sendname(::std::string* sendname);

  // optional string content = 5;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 5;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // optional .Cmd.ELetterType type = 6 [default = ELETTERTYPE_CHRISTMAS];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline ::Cmd::ELetterType type() const;
  inline void set_type(::Cmd::ELetterType value);

  // @@protoc_insertion_point(class_scope:Cmd.LoveLetterSendSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_sendname();
  inline void clear_has_sendname();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::std::string* sendname_;
  ::std::string* content_;
  int type_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static LoveLetterSendSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class UseItemCodeSessionCmd : public ::google::protobuf::Message {
 public:
  UseItemCodeSessionCmd();
  virtual ~UseItemCodeSessionCmd();

  UseItemCodeSessionCmd(const UseItemCodeSessionCmd& from);

  inline UseItemCodeSessionCmd& operator=(const UseItemCodeSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UseItemCodeSessionCmd& default_instance();

  void Swap(UseItemCodeSessionCmd* other);

  // implements Message ----------------------------------------------

  UseItemCodeSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UseItemCodeSessionCmd& from);
  void MergeFrom(const UseItemCodeSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_USE_ITEMCODE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string guid = 4;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 4;
  inline const ::std::string& guid() const;
  inline void set_guid(const ::std::string& value);
  inline void set_guid(const char* value);
  inline void set_guid(const char* value, size_t size);
  inline ::std::string* mutable_guid();
  inline ::std::string* release_guid();
  inline void set_allocated_guid(::std::string* guid);

  // optional uint32 itemid = 5;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 5;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // optional uint32 type = 7 [default = 0];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 7;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional string code = 6;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 6;
  inline const ::std::string& code() const;
  inline void set_code(const ::std::string& value);
  inline void set_code(const char* value);
  inline void set_code(const char* value, size_t size);
  inline ::std::string* mutable_code();
  inline ::std::string* release_code();
  inline void set_allocated_code(::std::string* code);

  // @@protoc_insertion_point(class_scope:Cmd.UseItemCodeSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_code();
  inline void clear_has_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::std::string* guid_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 type_;
  ::std::string* code_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static UseItemCodeSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class ReqUsedItemCodeSessionCmd : public ::google::protobuf::Message {
 public:
  ReqUsedItemCodeSessionCmd();
  virtual ~ReqUsedItemCodeSessionCmd();

  ReqUsedItemCodeSessionCmd(const ReqUsedItemCodeSessionCmd& from);

  inline ReqUsedItemCodeSessionCmd& operator=(const ReqUsedItemCodeSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqUsedItemCodeSessionCmd& default_instance();

  void Swap(ReqUsedItemCodeSessionCmd* other);

  // implements Message ----------------------------------------------

  ReqUsedItemCodeSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqUsedItemCodeSessionCmd& from);
  void MergeFrom(const ReqUsedItemCodeSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_REQ_USED_ITEMCODE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // repeated string guid = 4;
  inline int guid_size() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 4;
  inline const ::std::string& guid(int index) const;
  inline ::std::string* mutable_guid(int index);
  inline void set_guid(int index, const ::std::string& value);
  inline void set_guid(int index, const char* value);
  inline void set_guid(int index, const char* value, size_t size);
  inline ::std::string* add_guid();
  inline void add_guid(const ::std::string& value);
  inline void add_guid(const char* value);
  inline void add_guid(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& guid() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_guid();

  // optional uint32 type = 5 [default = 0];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ReqUsedItemCodeSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> guid_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static ReqUsedItemCodeSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class GlobalActivityStartSessionCmd : public ::google::protobuf::Message {
 public:
  GlobalActivityStartSessionCmd();
  virtual ~GlobalActivityStartSessionCmd();

  GlobalActivityStartSessionCmd(const GlobalActivityStartSessionCmd& from);

  inline GlobalActivityStartSessionCmd& operator=(const GlobalActivityStartSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GlobalActivityStartSessionCmd& default_instance();

  void Swap(GlobalActivityStartSessionCmd* other);

  // implements Message ----------------------------------------------

  GlobalActivityStartSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GlobalActivityStartSessionCmd& from);
  void MergeFrom(const GlobalActivityStartSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_GLOBALACTIVITY_START];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint32 id = 3 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GlobalActivityStartSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static GlobalActivityStartSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class GlobalActivityStopSessionCmd : public ::google::protobuf::Message {
 public:
  GlobalActivityStopSessionCmd();
  virtual ~GlobalActivityStopSessionCmd();

  GlobalActivityStopSessionCmd(const GlobalActivityStopSessionCmd& from);

  inline GlobalActivityStopSessionCmd& operator=(const GlobalActivityStopSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GlobalActivityStopSessionCmd& default_instance();

  void Swap(GlobalActivityStopSessionCmd* other);

  // implements Message ----------------------------------------------

  GlobalActivityStopSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GlobalActivityStopSessionCmd& from);
  void MergeFrom(const GlobalActivityStopSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_GLOBALACTIVITY_STOP];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint32 id = 4 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 4;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GlobalActivityStopSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static GlobalActivityStopSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class ReqLotteryGiveSessionCmd : public ::google::protobuf::Message {
 public:
  ReqLotteryGiveSessionCmd();
  virtual ~ReqLotteryGiveSessionCmd();

  ReqLotteryGiveSessionCmd(const ReqLotteryGiveSessionCmd& from);

  inline ReqLotteryGiveSessionCmd& operator=(const ReqLotteryGiveSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqLotteryGiveSessionCmd& default_instance();

  void Swap(ReqLotteryGiveSessionCmd* other);

  // implements Message ----------------------------------------------

  ReqLotteryGiveSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqLotteryGiveSessionCmd& from);
  void MergeFrom(const ReqLotteryGiveSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_REQ_LOTTERY_GIVE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional .Cmd.LotteryGiveInfo iteminfo = 4;
  inline bool has_iteminfo() const;
  inline void clear_iteminfo();
  static const int kIteminfoFieldNumber = 4;
  inline const ::Cmd::LotteryGiveInfo& iteminfo() const;
  inline ::Cmd::LotteryGiveInfo* mutable_iteminfo();
  inline ::Cmd::LotteryGiveInfo* release_iteminfo();
  inline void set_allocated_iteminfo(::Cmd::LotteryGiveInfo* iteminfo);

  // @@protoc_insertion_point(class_scope:Cmd.ReqLotteryGiveSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_iteminfo();
  inline void clear_has_iteminfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::Cmd::LotteryGiveInfo* iteminfo_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static ReqLotteryGiveSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class SyncOperateRewardSessionCmd : public ::google::protobuf::Message {
 public:
  SyncOperateRewardSessionCmd();
  virtual ~SyncOperateRewardSessionCmd();

  SyncOperateRewardSessionCmd(const SyncOperateRewardSessionCmd& from);

  inline SyncOperateRewardSessionCmd& operator=(const SyncOperateRewardSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncOperateRewardSessionCmd& default_instance();

  void Swap(SyncOperateRewardSessionCmd* other);

  // implements Message ----------------------------------------------

  SyncOperateRewardSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncOperateRewardSessionCmd& from);
  void MergeFrom(const SyncOperateRewardSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_OPERATE_REWARD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 var = 4 [default = 0];
  inline bool has_var() const;
  inline void clear_var();
  static const int kVarFieldNumber = 4;
  inline ::google::protobuf::uint32 var() const;
  inline void set_var(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.SyncOperateRewardSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_var();
  inline void clear_has_var();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 var_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static SyncOperateRewardSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class NotifyActivitySessionCmd : public ::google::protobuf::Message {
 public:
  NotifyActivitySessionCmd();
  virtual ~NotifyActivitySessionCmd();

  NotifyActivitySessionCmd(const NotifyActivitySessionCmd& from);

  inline NotifyActivitySessionCmd& operator=(const NotifyActivitySessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyActivitySessionCmd& default_instance();

  void Swap(NotifyActivitySessionCmd* other);

  // implements Message ----------------------------------------------

  NotifyActivitySessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyActivitySessionCmd& from);
  void MergeFrom(const NotifyActivitySessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_NOTIFY_ACTIVITY];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint32 actid = 3 [default = 0];
  inline bool has_actid() const;
  inline void clear_actid();
  static const int kActidFieldNumber = 3;
  inline ::google::protobuf::uint32 actid() const;
  inline void set_actid(::google::protobuf::uint32 value);

  // optional bool open = 4 [default = true];
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 4;
  inline bool open() const;
  inline void set_open(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.NotifyActivitySessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_actid();
  inline void clear_has_actid();
  inline void set_has_open();
  inline void clear_has_open();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 actid_;
  bool open_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static NotifyActivitySessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class GiveRewardSessionCmd : public ::google::protobuf::Message {
 public:
  GiveRewardSessionCmd();
  virtual ~GiveRewardSessionCmd();

  GiveRewardSessionCmd(const GiveRewardSessionCmd& from);

  inline GiveRewardSessionCmd& operator=(const GiveRewardSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GiveRewardSessionCmd& default_instance();

  void Swap(GiveRewardSessionCmd* other);

  // implements Message ----------------------------------------------

  GiveRewardSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GiveRewardSessionCmd& from);
  void MergeFrom(const GiveRewardSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_GIVE_REWARD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 rewardid = 4 [default = 0];
  inline bool has_rewardid() const;
  inline void clear_rewardid();
  static const int kRewardidFieldNumber = 4;
  inline ::google::protobuf::uint32 rewardid() const;
  inline void set_rewardid(::google::protobuf::uint32 value);

  // optional uint32 buffid = 5 [default = 0];
  inline bool has_buffid() const;
  inline void clear_buffid();
  static const int kBuffidFieldNumber = 5;
  inline ::google::protobuf::uint32 buffid() const;
  inline void set_buffid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GiveRewardSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_rewardid();
  inline void clear_has_rewardid();
  inline void set_has_buffid();
  inline void clear_has_buffid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 rewardid_;
  ::google::protobuf::uint32 buffid_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static GiveRewardSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class WantedQuestSetCDSessionCmd : public ::google::protobuf::Message {
 public:
  WantedQuestSetCDSessionCmd();
  virtual ~WantedQuestSetCDSessionCmd();

  WantedQuestSetCDSessionCmd(const WantedQuestSetCDSessionCmd& from);

  inline WantedQuestSetCDSessionCmd& operator=(const WantedQuestSetCDSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WantedQuestSetCDSessionCmd& default_instance();

  void Swap(WantedQuestSetCDSessionCmd* other);

  // implements Message ----------------------------------------------

  WantedQuestSetCDSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WantedQuestSetCDSessionCmd& from);
  void MergeFrom(const WantedQuestSetCDSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_WANTED_QUEST_SET_CD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 time = 4 [default = 0];
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.WantedQuestSetCDSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 time_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static WantedQuestSetCDSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class UserQuotaOperSessionCmd : public ::google::protobuf::Message {
 public:
  UserQuotaOperSessionCmd();
  virtual ~UserQuotaOperSessionCmd();

  UserQuotaOperSessionCmd(const UserQuotaOperSessionCmd& from);

  inline UserQuotaOperSessionCmd& operator=(const UserQuotaOperSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserQuotaOperSessionCmd& default_instance();

  void Swap(UserQuotaOperSessionCmd* other);

  // implements Message ----------------------------------------------

  UserQuotaOperSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserQuotaOperSessionCmd& from);
  void MergeFrom(const UserQuotaOperSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_USER_QUOTA_OPER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint64 quota = 4 [default = 0];
  inline bool has_quota() const;
  inline void clear_quota();
  static const int kQuotaFieldNumber = 4;
  inline ::google::protobuf::uint64 quota() const;
  inline void set_quota(::google::protobuf::uint64 value);

  // optional .Cmd.EUserQuotaOper oper = 5 [default = EUSERQUOTAOPER_MIN];
  inline bool has_oper() const;
  inline void clear_oper();
  static const int kOperFieldNumber = 5;
  inline ::Cmd::EUserQuotaOper oper() const;
  inline void set_oper(::Cmd::EUserQuotaOper value);

  // optional .Cmd.EQuotaType type = 6 [default = EQuotaType_U_Give_Trade];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline ::Cmd::EQuotaType type() const;
  inline void set_type(::Cmd::EQuotaType value);

  // @@protoc_insertion_point(class_scope:Cmd.UserQuotaOperSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_quota();
  inline void clear_has_quota();
  inline void set_has_oper();
  inline void clear_has_oper();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 quota_;
  int oper_;
  int type_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static UserQuotaOperSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class SyncWorldLevelSessionCmd : public ::google::protobuf::Message {
 public:
  SyncWorldLevelSessionCmd();
  virtual ~SyncWorldLevelSessionCmd();

  SyncWorldLevelSessionCmd(const SyncWorldLevelSessionCmd& from);

  inline SyncWorldLevelSessionCmd& operator=(const SyncWorldLevelSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncWorldLevelSessionCmd& default_instance();

  void Swap(SyncWorldLevelSessionCmd* other);

  // implements Message ----------------------------------------------

  SyncWorldLevelSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncWorldLevelSessionCmd& from);
  void MergeFrom(const SyncWorldLevelSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_SYNC_WORLD_LEVEL];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 base_worldlevel = 4 [default = 0];
  inline bool has_base_worldlevel() const;
  inline void clear_base_worldlevel();
  static const int kBaseWorldlevelFieldNumber = 4;
  inline ::google::protobuf::uint32 base_worldlevel() const;
  inline void set_base_worldlevel(::google::protobuf::uint32 value);

  // optional uint32 job_worldlevel = 5 [default = 0];
  inline bool has_job_worldlevel() const;
  inline void clear_job_worldlevel();
  static const int kJobWorldlevelFieldNumber = 5;
  inline ::google::protobuf::uint32 job_worldlevel() const;
  inline void set_job_worldlevel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.SyncWorldLevelSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_base_worldlevel();
  inline void clear_has_base_worldlevel();
  inline void set_has_job_worldlevel();
  inline void clear_has_job_worldlevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 base_worldlevel_;
  ::google::protobuf::uint32 job_worldlevel_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static SyncWorldLevelSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class UserEnterSceneSessionCmd : public ::google::protobuf::Message {
 public:
  UserEnterSceneSessionCmd();
  virtual ~UserEnterSceneSessionCmd();

  UserEnterSceneSessionCmd(const UserEnterSceneSessionCmd& from);

  inline UserEnterSceneSessionCmd& operator=(const UserEnterSceneSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserEnterSceneSessionCmd& default_instance();

  void Swap(UserEnterSceneSessionCmd* other);

  // implements Message ----------------------------------------------

  UserEnterSceneSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserEnterSceneSessionCmd& from);
  void MergeFrom(const UserEnterSceneSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_USER_ENTERSCENE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.UserEnterSceneSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static UserEnterSceneSessionCmd* default_instance_;
};
// -------------------------------------------------------------------

class SyncUserVarSessionCmd : public ::google::protobuf::Message {
 public:
  SyncUserVarSessionCmd();
  virtual ~SyncUserVarSessionCmd();

  SyncUserVarSessionCmd(const SyncUserVarSessionCmd& from);

  inline SyncUserVarSessionCmd& operator=(const SyncUserVarSessionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncUserVarSessionCmd& default_instance();

  void Swap(SyncUserVarSessionCmd* other);

  // implements Message ----------------------------------------------

  SyncUserVarSessionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncUserVarSessionCmd& from);
  void MergeFrom(const SyncUserVarSessionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_USER_VAR_SYNC];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SessionParam param() const;
  inline void set_param(::Cmd::SessionParam value);

  // required uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // repeated .Cmd.Var vars = 4;
  inline int vars_size() const;
  inline void clear_vars();
  static const int kVarsFieldNumber = 4;
  inline const ::Cmd::Var& vars(int index) const;
  inline ::Cmd::Var* mutable_vars(int index);
  inline ::Cmd::Var* add_vars();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::Var >&
      vars() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::Var >*
      mutable_vars();

  // @@protoc_insertion_point(class_scope:Cmd.SyncUserVarSessionCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::Var > vars_;
  friend void  protobuf_AddDesc_SessionCmd_2eproto();
  friend void protobuf_AssignDesc_SessionCmd_2eproto();
  friend void protobuf_ShutdownFile_SessionCmd_2eproto();

  void InitAsDefaultInstance();
  static SyncUserVarSessionCmd* default_instance_;
};
// ===================================================================


// ===================================================================

// RaidMapData

// optional uint32 raidid = 1;
inline bool RaidMapData::has_raidid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RaidMapData::set_has_raidid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RaidMapData::clear_has_raidid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RaidMapData::clear_raidid() {
  raidid_ = 0u;
  clear_has_raidid();
}
inline ::google::protobuf::uint32 RaidMapData::raidid() const {
  // @@protoc_insertion_point(field_get:Cmd.RaidMapData.raidid)
  return raidid_;
}
inline void RaidMapData::set_raidid(::google::protobuf::uint32 value) {
  set_has_raidid();
  raidid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RaidMapData.raidid)
}

// optional uint32 index = 2;
inline bool RaidMapData::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RaidMapData::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RaidMapData::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RaidMapData::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 RaidMapData::index() const {
  // @@protoc_insertion_point(field_get:Cmd.RaidMapData.index)
  return index_;
}
inline void RaidMapData::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RaidMapData.index)
}

// optional uint64 charid = 3;
inline bool RaidMapData::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RaidMapData::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RaidMapData::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RaidMapData::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 RaidMapData::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.RaidMapData.charid)
  return charid_;
}
inline void RaidMapData::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RaidMapData.charid)
}

// optional uint64 guildid = 4;
inline bool RaidMapData::has_guildid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RaidMapData::set_has_guildid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RaidMapData::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RaidMapData::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 RaidMapData::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.RaidMapData.guildid)
  return guildid_;
}
inline void RaidMapData::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RaidMapData.guildid)
}

// optional uint32 guildlv = 5;
inline bool RaidMapData::has_guildlv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RaidMapData::set_has_guildlv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RaidMapData::clear_has_guildlv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RaidMapData::clear_guildlv() {
  guildlv_ = 0u;
  clear_has_guildlv();
}
inline ::google::protobuf::uint32 RaidMapData::guildlv() const {
  // @@protoc_insertion_point(field_get:Cmd.RaidMapData.guildlv)
  return guildlv_;
}
inline void RaidMapData::set_guildlv(::google::protobuf::uint32 value) {
  set_has_guildlv();
  guildlv_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RaidMapData.guildlv)
}

// optional uint64 teamid = 6;
inline bool RaidMapData::has_teamid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RaidMapData::set_has_teamid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RaidMapData::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RaidMapData::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 RaidMapData::teamid() const {
  // @@protoc_insertion_point(field_get:Cmd.RaidMapData.teamid)
  return teamid_;
}
inline void RaidMapData::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RaidMapData.teamid)
}

// optional uint32 restrict = 7;
inline bool RaidMapData::has_restrict() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RaidMapData::set_has_restrict() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RaidMapData::clear_has_restrict() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RaidMapData::clear_restrict() {
  restrict_ = 0u;
  clear_has_restrict();
}
inline ::google::protobuf::uint32 RaidMapData::restrict() const {
  // @@protoc_insertion_point(field_get:Cmd.RaidMapData.restrict)
  return restrict_;
}
inline void RaidMapData::set_restrict(::google::protobuf::uint32 value) {
  set_has_restrict();
  restrict_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RaidMapData.restrict)
}

// repeated uint64 memberlist = 8;
inline int RaidMapData::memberlist_size() const {
  return memberlist_.size();
}
inline void RaidMapData::clear_memberlist() {
  memberlist_.Clear();
}
inline ::google::protobuf::uint64 RaidMapData::memberlist(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.RaidMapData.memberlist)
  return memberlist_.Get(index);
}
inline void RaidMapData::set_memberlist(int index, ::google::protobuf::uint64 value) {
  memberlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.RaidMapData.memberlist)
}
inline void RaidMapData::add_memberlist(::google::protobuf::uint64 value) {
  memberlist_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.RaidMapData.memberlist)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
RaidMapData::memberlist() const {
  // @@protoc_insertion_point(field_list:Cmd.RaidMapData.memberlist)
  return memberlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
RaidMapData::mutable_memberlist() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.RaidMapData.memberlist)
  return &memberlist_;
}

// optional .Cmd.ScenePos imagecenter = 9;
inline bool RaidMapData::has_imagecenter() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RaidMapData::set_has_imagecenter() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RaidMapData::clear_has_imagecenter() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RaidMapData::clear_imagecenter() {
  if (imagecenter_ != NULL) imagecenter_->::Cmd::ScenePos::Clear();
  clear_has_imagecenter();
}
inline const ::Cmd::ScenePos& RaidMapData::imagecenter() const {
  // @@protoc_insertion_point(field_get:Cmd.RaidMapData.imagecenter)
  return imagecenter_ != NULL ? *imagecenter_ : *default_instance_->imagecenter_;
}
inline ::Cmd::ScenePos* RaidMapData::mutable_imagecenter() {
  set_has_imagecenter();
  if (imagecenter_ == NULL) imagecenter_ = new ::Cmd::ScenePos;
  // @@protoc_insertion_point(field_mutable:Cmd.RaidMapData.imagecenter)
  return imagecenter_;
}
inline ::Cmd::ScenePos* RaidMapData::release_imagecenter() {
  clear_has_imagecenter();
  ::Cmd::ScenePos* temp = imagecenter_;
  imagecenter_ = NULL;
  return temp;
}
inline void RaidMapData::set_allocated_imagecenter(::Cmd::ScenePos* imagecenter) {
  delete imagecenter_;
  imagecenter_ = imagecenter;
  if (imagecenter) {
    set_has_imagecenter();
  } else {
    clear_has_imagecenter();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.RaidMapData.imagecenter)
}

// optional uint32 imagerange = 10;
inline bool RaidMapData::has_imagerange() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RaidMapData::set_has_imagerange() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RaidMapData::clear_has_imagerange() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RaidMapData::clear_imagerange() {
  imagerange_ = 0u;
  clear_has_imagerange();
}
inline ::google::protobuf::uint32 RaidMapData::imagerange() const {
  // @@protoc_insertion_point(field_get:Cmd.RaidMapData.imagerange)
  return imagerange_;
}
inline void RaidMapData::set_imagerange(::google::protobuf::uint32 value) {
  set_has_imagerange();
  imagerange_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RaidMapData.imagerange)
}

// optional .Cmd.ScenePos enterpos = 11;
inline bool RaidMapData::has_enterpos() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RaidMapData::set_has_enterpos() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RaidMapData::clear_has_enterpos() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RaidMapData::clear_enterpos() {
  if (enterpos_ != NULL) enterpos_->::Cmd::ScenePos::Clear();
  clear_has_enterpos();
}
inline const ::Cmd::ScenePos& RaidMapData::enterpos() const {
  // @@protoc_insertion_point(field_get:Cmd.RaidMapData.enterpos)
  return enterpos_ != NULL ? *enterpos_ : *default_instance_->enterpos_;
}
inline ::Cmd::ScenePos* RaidMapData::mutable_enterpos() {
  set_has_enterpos();
  if (enterpos_ == NULL) enterpos_ = new ::Cmd::ScenePos;
  // @@protoc_insertion_point(field_mutable:Cmd.RaidMapData.enterpos)
  return enterpos_;
}
inline ::Cmd::ScenePos* RaidMapData::release_enterpos() {
  clear_has_enterpos();
  ::Cmd::ScenePos* temp = enterpos_;
  enterpos_ = NULL;
  return temp;
}
inline void RaidMapData::set_allocated_enterpos(::Cmd::ScenePos* enterpos) {
  delete enterpos_;
  enterpos_ = enterpos;
  if (enterpos) {
    set_has_enterpos();
  } else {
    clear_has_enterpos();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.RaidMapData.enterpos)
}

// optional uint32 sealid = 12 [default = 0];
inline bool RaidMapData::has_sealid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RaidMapData::set_has_sealid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RaidMapData::clear_has_sealid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RaidMapData::clear_sealid() {
  sealid_ = 0u;
  clear_has_sealid();
}
inline ::google::protobuf::uint32 RaidMapData::sealid() const {
  // @@protoc_insertion_point(field_get:Cmd.RaidMapData.sealid)
  return sealid_;
}
inline void RaidMapData::set_sealid(::google::protobuf::uint32 value) {
  set_has_sealid();
  sealid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RaidMapData.sealid)
}

// optional uint32 follow = 13 [default = 0];
inline bool RaidMapData::has_follow() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void RaidMapData::set_has_follow() {
  _has_bits_[0] |= 0x00001000u;
}
inline void RaidMapData::clear_has_follow() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void RaidMapData::clear_follow() {
  follow_ = 0u;
  clear_has_follow();
}
inline ::google::protobuf::uint32 RaidMapData::follow() const {
  // @@protoc_insertion_point(field_get:Cmd.RaidMapData.follow)
  return follow_;
}
inline void RaidMapData::set_follow(::google::protobuf::uint32 value) {
  set_has_follow();
  follow_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RaidMapData.follow)
}

// optional uint32 dojoid = 14 [default = 0];
inline bool RaidMapData::has_dojoid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void RaidMapData::set_has_dojoid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void RaidMapData::clear_has_dojoid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void RaidMapData::clear_dojoid() {
  dojoid_ = 0u;
  clear_has_dojoid();
}
inline ::google::protobuf::uint32 RaidMapData::dojoid() const {
  // @@protoc_insertion_point(field_get:Cmd.RaidMapData.dojoid)
  return dojoid_;
}
inline void RaidMapData::set_dojoid(::google::protobuf::uint32 value) {
  set_has_dojoid();
  dojoid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RaidMapData.dojoid)
}

// optional uint32 layer = 15 [default = 0];
inline bool RaidMapData::has_layer() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void RaidMapData::set_has_layer() {
  _has_bits_[0] |= 0x00004000u;
}
inline void RaidMapData::clear_has_layer() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void RaidMapData::clear_layer() {
  layer_ = 0u;
  clear_has_layer();
}
inline ::google::protobuf::uint32 RaidMapData::layer() const {
  // @@protoc_insertion_point(field_get:Cmd.RaidMapData.layer)
  return layer_;
}
inline void RaidMapData::set_layer(::google::protobuf::uint32 value) {
  set_has_layer();
  layer_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RaidMapData.layer)
}

// optional uint32 guildraidindex = 16 [default = 0];
inline bool RaidMapData::has_guildraidindex() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void RaidMapData::set_has_guildraidindex() {
  _has_bits_[0] |= 0x00008000u;
}
inline void RaidMapData::clear_has_guildraidindex() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void RaidMapData::clear_guildraidindex() {
  guildraidindex_ = 0u;
  clear_has_guildraidindex();
}
inline ::google::protobuf::uint32 RaidMapData::guildraidindex() const {
  // @@protoc_insertion_point(field_get:Cmd.RaidMapData.guildraidindex)
  return guildraidindex_;
}
inline void RaidMapData::set_guildraidindex(::google::protobuf::uint32 value) {
  set_has_guildraidindex();
  guildraidindex_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RaidMapData.guildraidindex)
}

// optional uint64 roomid = 17;
inline bool RaidMapData::has_roomid() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void RaidMapData::set_has_roomid() {
  _has_bits_[0] |= 0x00010000u;
}
inline void RaidMapData::clear_has_roomid() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void RaidMapData::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 RaidMapData::roomid() const {
  // @@protoc_insertion_point(field_get:Cmd.RaidMapData.roomid)
  return roomid_;
}
inline void RaidMapData::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RaidMapData.roomid)
}

// optional .Cmd.GuildInfo guildinfo = 18;
inline bool RaidMapData::has_guildinfo() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void RaidMapData::set_has_guildinfo() {
  _has_bits_[0] |= 0x00020000u;
}
inline void RaidMapData::clear_has_guildinfo() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void RaidMapData::clear_guildinfo() {
  if (guildinfo_ != NULL) guildinfo_->::Cmd::GuildInfo::Clear();
  clear_has_guildinfo();
}
inline const ::Cmd::GuildInfo& RaidMapData::guildinfo() const {
  // @@protoc_insertion_point(field_get:Cmd.RaidMapData.guildinfo)
  return guildinfo_ != NULL ? *guildinfo_ : *default_instance_->guildinfo_;
}
inline ::Cmd::GuildInfo* RaidMapData::mutable_guildinfo() {
  set_has_guildinfo();
  if (guildinfo_ == NULL) guildinfo_ = new ::Cmd::GuildInfo;
  // @@protoc_insertion_point(field_mutable:Cmd.RaidMapData.guildinfo)
  return guildinfo_;
}
inline ::Cmd::GuildInfo* RaidMapData::release_guildinfo() {
  clear_has_guildinfo();
  ::Cmd::GuildInfo* temp = guildinfo_;
  guildinfo_ = NULL;
  return temp;
}
inline void RaidMapData::set_allocated_guildinfo(::Cmd::GuildInfo* guildinfo) {
  delete guildinfo_;
  guildinfo_ = guildinfo;
  if (guildinfo) {
    set_has_guildinfo();
  } else {
    clear_has_guildinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.RaidMapData.guildinfo)
}

// optional uint32 npcid = 19;
inline bool RaidMapData::has_npcid() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void RaidMapData::set_has_npcid() {
  _has_bits_[0] |= 0x00040000u;
}
inline void RaidMapData::clear_has_npcid() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void RaidMapData::clear_npcid() {
  npcid_ = 0u;
  clear_has_npcid();
}
inline ::google::protobuf::uint32 RaidMapData::npcid() const {
  // @@protoc_insertion_point(field_get:Cmd.RaidMapData.npcid)
  return npcid_;
}
inline void RaidMapData::set_npcid(::google::protobuf::uint32 value) {
  set_has_npcid();
  npcid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RaidMapData.npcid)
}

// optional uint32 nomonsterlayer = 20 [default = 0];
inline bool RaidMapData::has_nomonsterlayer() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void RaidMapData::set_has_nomonsterlayer() {
  _has_bits_[0] |= 0x00080000u;
}
inline void RaidMapData::clear_has_nomonsterlayer() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void RaidMapData::clear_nomonsterlayer() {
  nomonsterlayer_ = 0u;
  clear_has_nomonsterlayer();
}
inline ::google::protobuf::uint32 RaidMapData::nomonsterlayer() const {
  // @@protoc_insertion_point(field_get:Cmd.RaidMapData.nomonsterlayer)
  return nomonsterlayer_;
}
inline void RaidMapData::set_nomonsterlayer(::google::protobuf::uint32 value) {
  set_has_nomonsterlayer();
  nomonsterlayer_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RaidMapData.nomonsterlayer)
}

// -------------------------------------------------------------------

// MapRegSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool MapRegSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MapRegSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MapRegSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MapRegSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command MapRegSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.MapRegSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void MapRegSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MapRegSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = MAP_REG_SESSIONCMD];
inline bool MapRegSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MapRegSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MapRegSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MapRegSessionCmd::clear_param() {
  param_ = 1;
  clear_has_param();
}
inline ::Cmd::SessionParam MapRegSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.MapRegSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void MapRegSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MapRegSessionCmd.param)
}

// optional uint32 mapid = 3;
inline bool MapRegSessionCmd::has_mapid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MapRegSessionCmd::set_has_mapid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MapRegSessionCmd::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MapRegSessionCmd::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 MapRegSessionCmd::mapid() const {
  // @@protoc_insertion_point(field_get:Cmd.MapRegSessionCmd.mapid)
  return mapid_;
}
inline void MapRegSessionCmd::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MapRegSessionCmd.mapid)
}

// optional string mapname = 4;
inline bool MapRegSessionCmd::has_mapname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MapRegSessionCmd::set_has_mapname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MapRegSessionCmd::clear_has_mapname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MapRegSessionCmd::clear_mapname() {
  if (mapname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapname_->clear();
  }
  clear_has_mapname();
}
inline const ::std::string& MapRegSessionCmd::mapname() const {
  // @@protoc_insertion_point(field_get:Cmd.MapRegSessionCmd.mapname)
  return *mapname_;
}
inline void MapRegSessionCmd::set_mapname(const ::std::string& value) {
  set_has_mapname();
  if (mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapname_ = new ::std::string;
  }
  mapname_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.MapRegSessionCmd.mapname)
}
inline void MapRegSessionCmd::set_mapname(const char* value) {
  set_has_mapname();
  if (mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapname_ = new ::std::string;
  }
  mapname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.MapRegSessionCmd.mapname)
}
inline void MapRegSessionCmd::set_mapname(const char* value, size_t size) {
  set_has_mapname();
  if (mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapname_ = new ::std::string;
  }
  mapname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.MapRegSessionCmd.mapname)
}
inline ::std::string* MapRegSessionCmd::mutable_mapname() {
  set_has_mapname();
  if (mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.MapRegSessionCmd.mapname)
  return mapname_;
}
inline ::std::string* MapRegSessionCmd::release_mapname() {
  clear_has_mapname();
  if (mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mapname_;
    mapname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MapRegSessionCmd::set_allocated_mapname(::std::string* mapname) {
  if (mapname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mapname_;
  }
  if (mapname) {
    set_has_mapname();
    mapname_ = mapname;
  } else {
    clear_has_mapname();
    mapname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.MapRegSessionCmd.mapname)
}

// optional string scenename = 5;
inline bool MapRegSessionCmd::has_scenename() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MapRegSessionCmd::set_has_scenename() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MapRegSessionCmd::clear_has_scenename() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MapRegSessionCmd::clear_scenename() {
  if (scenename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scenename_->clear();
  }
  clear_has_scenename();
}
inline const ::std::string& MapRegSessionCmd::scenename() const {
  // @@protoc_insertion_point(field_get:Cmd.MapRegSessionCmd.scenename)
  return *scenename_;
}
inline void MapRegSessionCmd::set_scenename(const ::std::string& value) {
  set_has_scenename();
  if (scenename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scenename_ = new ::std::string;
  }
  scenename_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.MapRegSessionCmd.scenename)
}
inline void MapRegSessionCmd::set_scenename(const char* value) {
  set_has_scenename();
  if (scenename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scenename_ = new ::std::string;
  }
  scenename_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.MapRegSessionCmd.scenename)
}
inline void MapRegSessionCmd::set_scenename(const char* value, size_t size) {
  set_has_scenename();
  if (scenename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scenename_ = new ::std::string;
  }
  scenename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.MapRegSessionCmd.scenename)
}
inline ::std::string* MapRegSessionCmd::mutable_scenename() {
  set_has_scenename();
  if (scenename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scenename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.MapRegSessionCmd.scenename)
  return scenename_;
}
inline ::std::string* MapRegSessionCmd::release_scenename() {
  clear_has_scenename();
  if (scenename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = scenename_;
    scenename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MapRegSessionCmd::set_allocated_scenename(::std::string* scenename) {
  if (scenename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete scenename_;
  }
  if (scenename) {
    set_has_scenename();
    scenename_ = scenename;
  } else {
    clear_has_scenename();
    scenename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.MapRegSessionCmd.scenename)
}

// optional .Cmd.RaidMapData data = 6;
inline bool MapRegSessionCmd::has_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MapRegSessionCmd::set_has_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MapRegSessionCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MapRegSessionCmd::clear_data() {
  if (data_ != NULL) data_->::Cmd::RaidMapData::Clear();
  clear_has_data();
}
inline const ::Cmd::RaidMapData& MapRegSessionCmd::data() const {
  // @@protoc_insertion_point(field_get:Cmd.MapRegSessionCmd.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Cmd::RaidMapData* MapRegSessionCmd::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Cmd::RaidMapData;
  // @@protoc_insertion_point(field_mutable:Cmd.MapRegSessionCmd.data)
  return data_;
}
inline ::Cmd::RaidMapData* MapRegSessionCmd::release_data() {
  clear_has_data();
  ::Cmd::RaidMapData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void MapRegSessionCmd::set_allocated_data(::Cmd::RaidMapData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.MapRegSessionCmd.data)
}

// -------------------------------------------------------------------

// CreateRaidMapSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool CreateRaidMapSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateRaidMapSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateRaidMapSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateRaidMapSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command CreateRaidMapSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.CreateRaidMapSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void CreateRaidMapSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CreateRaidMapSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = CREATE_RAIDMAP_SESSIONCMD];
inline bool CreateRaidMapSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateRaidMapSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateRaidMapSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateRaidMapSessionCmd::clear_param() {
  param_ = 2;
  clear_has_param();
}
inline ::Cmd::SessionParam CreateRaidMapSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.CreateRaidMapSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void CreateRaidMapSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CreateRaidMapSessionCmd.param)
}

// optional .Cmd.RaidMapData data = 3;
inline bool CreateRaidMapSessionCmd::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateRaidMapSessionCmd::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateRaidMapSessionCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateRaidMapSessionCmd::clear_data() {
  if (data_ != NULL) data_->::Cmd::RaidMapData::Clear();
  clear_has_data();
}
inline const ::Cmd::RaidMapData& CreateRaidMapSessionCmd::data() const {
  // @@protoc_insertion_point(field_get:Cmd.CreateRaidMapSessionCmd.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Cmd::RaidMapData* CreateRaidMapSessionCmd::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Cmd::RaidMapData;
  // @@protoc_insertion_point(field_mutable:Cmd.CreateRaidMapSessionCmd.data)
  return data_;
}
inline ::Cmd::RaidMapData* CreateRaidMapSessionCmd::release_data() {
  clear_has_data();
  ::Cmd::RaidMapData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void CreateRaidMapSessionCmd::set_allocated_data(::Cmd::RaidMapData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.CreateRaidMapSessionCmd.data)
}

// -------------------------------------------------------------------

// DeleteDMapSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool DeleteDMapSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteDMapSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteDMapSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteDMapSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command DeleteDMapSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.DeleteDMapSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void DeleteDMapSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DeleteDMapSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = DELETE_DMAP_SESSIONCMD];
inline bool DeleteDMapSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteDMapSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteDMapSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteDMapSessionCmd::clear_param() {
  param_ = 3;
  clear_has_param();
}
inline ::Cmd::SessionParam DeleteDMapSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.DeleteDMapSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void DeleteDMapSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DeleteDMapSessionCmd.param)
}

// optional uint32 mapid = 3;
inline bool DeleteDMapSessionCmd::has_mapid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeleteDMapSessionCmd::set_has_mapid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeleteDMapSessionCmd::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeleteDMapSessionCmd::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 DeleteDMapSessionCmd::mapid() const {
  // @@protoc_insertion_point(field_get:Cmd.DeleteDMapSessionCmd.mapid)
  return mapid_;
}
inline void DeleteDMapSessionCmd::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DeleteDMapSessionCmd.mapid)
}

// -------------------------------------------------------------------

// ChangeSceneSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool ChangeSceneSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeSceneSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeSceneSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeSceneSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command ChangeSceneSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeSceneSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ChangeSceneSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeSceneSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = CHANGE_SCENE_SESSIONCMD];
inline bool ChangeSceneSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeSceneSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeSceneSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeSceneSessionCmd::clear_param() {
  param_ = 4;
  clear_has_param();
}
inline ::Cmd::SessionParam ChangeSceneSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeSceneSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void ChangeSceneSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeSceneSessionCmd.param)
}

// optional uint32 mapid = 3;
inline bool ChangeSceneSessionCmd::has_mapid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChangeSceneSessionCmd::set_has_mapid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChangeSceneSessionCmd::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChangeSceneSessionCmd::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 ChangeSceneSessionCmd::mapid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeSceneSessionCmd.mapid)
  return mapid_;
}
inline void ChangeSceneSessionCmd::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeSceneSessionCmd.mapid)
}

// repeated uint64 charid = 4;
inline int ChangeSceneSessionCmd::charid_size() const {
  return charid_.size();
}
inline void ChangeSceneSessionCmd::clear_charid() {
  charid_.Clear();
}
inline ::google::protobuf::uint64 ChangeSceneSessionCmd::charid(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeSceneSessionCmd.charid)
  return charid_.Get(index);
}
inline void ChangeSceneSessionCmd::set_charid(int index, ::google::protobuf::uint64 value) {
  charid_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.ChangeSceneSessionCmd.charid)
}
inline void ChangeSceneSessionCmd::add_charid(::google::protobuf::uint64 value) {
  charid_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.ChangeSceneSessionCmd.charid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ChangeSceneSessionCmd::charid() const {
  // @@protoc_insertion_point(field_list:Cmd.ChangeSceneSessionCmd.charid)
  return charid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ChangeSceneSessionCmd::mutable_charid() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.ChangeSceneSessionCmd.charid)
  return &charid_;
}

// optional .Cmd.ScenePos pos = 5;
inline bool ChangeSceneSessionCmd::has_pos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChangeSceneSessionCmd::set_has_pos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChangeSceneSessionCmd::clear_has_pos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChangeSceneSessionCmd::clear_pos() {
  if (pos_ != NULL) pos_->::Cmd::ScenePos::Clear();
  clear_has_pos();
}
inline const ::Cmd::ScenePos& ChangeSceneSessionCmd::pos() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeSceneSessionCmd.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Cmd::ScenePos* ChangeSceneSessionCmd::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Cmd::ScenePos;
  // @@protoc_insertion_point(field_mutable:Cmd.ChangeSceneSessionCmd.pos)
  return pos_;
}
inline ::Cmd::ScenePos* ChangeSceneSessionCmd::release_pos() {
  clear_has_pos();
  ::Cmd::ScenePos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void ChangeSceneSessionCmd::set_allocated_pos(::Cmd::ScenePos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ChangeSceneSessionCmd.pos)
}

// -------------------------------------------------------------------

// ChangeSceneResultSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool ChangeSceneResultSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeSceneResultSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeSceneResultSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeSceneResultSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command ChangeSceneResultSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeSceneResultSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ChangeSceneResultSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeSceneResultSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = CHANGE_SCENE_RESULT_SESSIONCMD];
inline bool ChangeSceneResultSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeSceneResultSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeSceneResultSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeSceneResultSessionCmd::clear_param() {
  param_ = 5;
  clear_has_param();
}
inline ::Cmd::SessionParam ChangeSceneResultSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeSceneResultSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void ChangeSceneResultSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeSceneResultSessionCmd.param)
}

// optional uint32 mapid = 3;
inline bool ChangeSceneResultSessionCmd::has_mapid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChangeSceneResultSessionCmd::set_has_mapid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChangeSceneResultSessionCmd::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChangeSceneResultSessionCmd::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 ChangeSceneResultSessionCmd::mapid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeSceneResultSessionCmd.mapid)
  return mapid_;
}
inline void ChangeSceneResultSessionCmd::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeSceneResultSessionCmd.mapid)
}

// optional uint64 charid = 4;
inline bool ChangeSceneResultSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChangeSceneResultSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChangeSceneResultSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChangeSceneResultSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ChangeSceneResultSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeSceneResultSessionCmd.charid)
  return charid_;
}
inline void ChangeSceneResultSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeSceneResultSessionCmd.charid)
}

// optional .Cmd.ScenePos pos = 6;
inline bool ChangeSceneResultSessionCmd::has_pos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChangeSceneResultSessionCmd::set_has_pos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChangeSceneResultSessionCmd::clear_has_pos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChangeSceneResultSessionCmd::clear_pos() {
  if (pos_ != NULL) pos_->::Cmd::ScenePos::Clear();
  clear_has_pos();
}
inline const ::Cmd::ScenePos& ChangeSceneResultSessionCmd::pos() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeSceneResultSessionCmd.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Cmd::ScenePos* ChangeSceneResultSessionCmd::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Cmd::ScenePos;
  // @@protoc_insertion_point(field_mutable:Cmd.ChangeSceneResultSessionCmd.pos)
  return pos_;
}
inline ::Cmd::ScenePos* ChangeSceneResultSessionCmd::release_pos() {
  clear_has_pos();
  ::Cmd::ScenePos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void ChangeSceneResultSessionCmd::set_allocated_pos(::Cmd::ScenePos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ChangeSceneResultSessionCmd.pos)
}

// -------------------------------------------------------------------

// UserDataSync

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool UserDataSync::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserDataSync::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserDataSync::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserDataSync::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command UserDataSync::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UserDataSync.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UserDataSync::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserDataSync.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = CMDPARAM_USER_DATA_SYNC];
inline bool UserDataSync::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserDataSync::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserDataSync::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserDataSync::clear_param() {
  param_ = 6;
  clear_has_param();
}
inline ::Cmd::SessionParam UserDataSync::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UserDataSync.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void UserDataSync::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserDataSync.param)
}

// optional uint64 id = 3 [default = 0];
inline bool UserDataSync::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserDataSync::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserDataSync::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserDataSync::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 UserDataSync::id() const {
  // @@protoc_insertion_point(field_get:Cmd.UserDataSync.id)
  return id_;
}
inline void UserDataSync::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserDataSync.id)
}

// optional float x = 4 [default = 0];
inline bool UserDataSync::has_x() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserDataSync::set_has_x() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserDataSync::clear_has_x() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserDataSync::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float UserDataSync::x() const {
  // @@protoc_insertion_point(field_get:Cmd.UserDataSync.x)
  return x_;
}
inline void UserDataSync::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserDataSync.x)
}

// optional float y = 5 [default = 0];
inline bool UserDataSync::has_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserDataSync::set_has_y() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserDataSync::clear_has_y() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserDataSync::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float UserDataSync::y() const {
  // @@protoc_insertion_point(field_get:Cmd.UserDataSync.y)
  return y_;
}
inline void UserDataSync::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserDataSync.y)
}

// optional float z = 6 [default = 0];
inline bool UserDataSync::has_z() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserDataSync::set_has_z() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserDataSync::clear_has_z() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserDataSync::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float UserDataSync::z() const {
  // @@protoc_insertion_point(field_get:Cmd.UserDataSync.z)
  return z_;
}
inline void UserDataSync::set_z(float value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserDataSync.z)
}

// repeated .Cmd.UserData datas = 7;
inline int UserDataSync::datas_size() const {
  return datas_.size();
}
inline void UserDataSync::clear_datas() {
  datas_.Clear();
}
inline const ::Cmd::UserData& UserDataSync::datas(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UserDataSync.datas)
  return datas_.Get(index);
}
inline ::Cmd::UserData* UserDataSync::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.UserDataSync.datas)
  return datas_.Mutable(index);
}
inline ::Cmd::UserData* UserDataSync::add_datas() {
  // @@protoc_insertion_point(field_add:Cmd.UserDataSync.datas)
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UserData >&
UserDataSync::datas() const {
  // @@protoc_insertion_point(field_list:Cmd.UserDataSync.datas)
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::UserData >*
UserDataSync::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UserDataSync.datas)
  return &datas_;
}

// repeated .Cmd.UserAttr attrs = 8;
inline int UserDataSync::attrs_size() const {
  return attrs_.size();
}
inline void UserDataSync::clear_attrs() {
  attrs_.Clear();
}
inline const ::Cmd::UserAttr& UserDataSync::attrs(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UserDataSync.attrs)
  return attrs_.Get(index);
}
inline ::Cmd::UserAttr* UserDataSync::mutable_attrs(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.UserDataSync.attrs)
  return attrs_.Mutable(index);
}
inline ::Cmd::UserAttr* UserDataSync::add_attrs() {
  // @@protoc_insertion_point(field_add:Cmd.UserDataSync.attrs)
  return attrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >&
UserDataSync::attrs() const {
  // @@protoc_insertion_point(field_list:Cmd.UserDataSync.attrs)
  return attrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::UserAttr >*
UserDataSync::mutable_attrs() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UserDataSync.attrs)
  return &attrs_;
}

// -------------------------------------------------------------------

// GoToUserMapSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool GoToUserMapSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GoToUserMapSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GoToUserMapSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GoToUserMapSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command GoToUserMapSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GoToUserMapSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GoToUserMapSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GoToUserMapSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = GOTO_USER_MAP_SESSIONCMD];
inline bool GoToUserMapSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GoToUserMapSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GoToUserMapSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GoToUserMapSessionCmd::clear_param() {
  param_ = 9;
  clear_has_param();
}
inline ::Cmd::SessionParam GoToUserMapSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GoToUserMapSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void GoToUserMapSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GoToUserMapSessionCmd.param)
}

// optional uint64 targetuserid = 3 [default = 0];
inline bool GoToUserMapSessionCmd::has_targetuserid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GoToUserMapSessionCmd::set_has_targetuserid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GoToUserMapSessionCmd::clear_has_targetuserid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GoToUserMapSessionCmd::clear_targetuserid() {
  targetuserid_ = GOOGLE_ULONGLONG(0);
  clear_has_targetuserid();
}
inline ::google::protobuf::uint64 GoToUserMapSessionCmd::targetuserid() const {
  // @@protoc_insertion_point(field_get:Cmd.GoToUserMapSessionCmd.targetuserid)
  return targetuserid_;
}
inline void GoToUserMapSessionCmd::set_targetuserid(::google::protobuf::uint64 value) {
  set_has_targetuserid();
  targetuserid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GoToUserMapSessionCmd.targetuserid)
}

// optional uint64 gotouserid = 4 [default = 0];
inline bool GoToUserMapSessionCmd::has_gotouserid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GoToUserMapSessionCmd::set_has_gotouserid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GoToUserMapSessionCmd::clear_has_gotouserid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GoToUserMapSessionCmd::clear_gotouserid() {
  gotouserid_ = GOOGLE_ULONGLONG(0);
  clear_has_gotouserid();
}
inline ::google::protobuf::uint64 GoToUserMapSessionCmd::gotouserid() const {
  // @@protoc_insertion_point(field_get:Cmd.GoToUserMapSessionCmd.gotouserid)
  return gotouserid_;
}
inline void GoToUserMapSessionCmd::set_gotouserid(::google::protobuf::uint64 value) {
  set_has_gotouserid();
  gotouserid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GoToUserMapSessionCmd.gotouserid)
}

// -------------------------------------------------------------------

// LoadLuaSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool LoadLuaSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoadLuaSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoadLuaSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoadLuaSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command LoadLuaSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.LoadLuaSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void LoadLuaSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LoadLuaSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = LOAD_LUA_SESSIONCMD];
inline bool LoadLuaSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoadLuaSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoadLuaSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoadLuaSessionCmd::clear_param() {
  param_ = 10;
  clear_has_param();
}
inline ::Cmd::SessionParam LoadLuaSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.LoadLuaSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void LoadLuaSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LoadLuaSessionCmd.param)
}

// optional string table = 3;
inline bool LoadLuaSessionCmd::has_table() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoadLuaSessionCmd::set_has_table() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoadLuaSessionCmd::clear_has_table() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoadLuaSessionCmd::clear_table() {
  if (table_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_->clear();
  }
  clear_has_table();
}
inline const ::std::string& LoadLuaSessionCmd::table() const {
  // @@protoc_insertion_point(field_get:Cmd.LoadLuaSessionCmd.table)
  return *table_;
}
inline void LoadLuaSessionCmd::set_table(const ::std::string& value) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_ = new ::std::string;
  }
  table_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.LoadLuaSessionCmd.table)
}
inline void LoadLuaSessionCmd::set_table(const char* value) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_ = new ::std::string;
  }
  table_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.LoadLuaSessionCmd.table)
}
inline void LoadLuaSessionCmd::set_table(const char* value, size_t size) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_ = new ::std::string;
  }
  table_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.LoadLuaSessionCmd.table)
}
inline ::std::string* LoadLuaSessionCmd::mutable_table() {
  set_has_table();
  if (table_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.LoadLuaSessionCmd.table)
  return table_;
}
inline ::std::string* LoadLuaSessionCmd::release_table() {
  clear_has_table();
  if (table_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = table_;
    table_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoadLuaSessionCmd::set_allocated_table(::std::string* table) {
  if (table_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete table_;
  }
  if (table) {
    set_has_table();
    table_ = table;
  } else {
    clear_has_table();
    table_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.LoadLuaSessionCmd.table)
}

// optional string lua = 4;
inline bool LoadLuaSessionCmd::has_lua() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoadLuaSessionCmd::set_has_lua() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoadLuaSessionCmd::clear_has_lua() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoadLuaSessionCmd::clear_lua() {
  if (lua_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lua_->clear();
  }
  clear_has_lua();
}
inline const ::std::string& LoadLuaSessionCmd::lua() const {
  // @@protoc_insertion_point(field_get:Cmd.LoadLuaSessionCmd.lua)
  return *lua_;
}
inline void LoadLuaSessionCmd::set_lua(const ::std::string& value) {
  set_has_lua();
  if (lua_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lua_ = new ::std::string;
  }
  lua_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.LoadLuaSessionCmd.lua)
}
inline void LoadLuaSessionCmd::set_lua(const char* value) {
  set_has_lua();
  if (lua_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lua_ = new ::std::string;
  }
  lua_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.LoadLuaSessionCmd.lua)
}
inline void LoadLuaSessionCmd::set_lua(const char* value, size_t size) {
  set_has_lua();
  if (lua_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lua_ = new ::std::string;
  }
  lua_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.LoadLuaSessionCmd.lua)
}
inline ::std::string* LoadLuaSessionCmd::mutable_lua() {
  set_has_lua();
  if (lua_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lua_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.LoadLuaSessionCmd.lua)
  return lua_;
}
inline ::std::string* LoadLuaSessionCmd::release_lua() {
  clear_has_lua();
  if (lua_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = lua_;
    lua_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoadLuaSessionCmd::set_allocated_lua(::std::string* lua) {
  if (lua_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete lua_;
  }
  if (lua) {
    set_has_lua();
    lua_ = lua;
  } else {
    clear_has_lua();
    lua_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.LoadLuaSessionCmd.lua)
}

// optional string log = 5;
inline bool LoadLuaSessionCmd::has_log() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoadLuaSessionCmd::set_has_log() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoadLuaSessionCmd::clear_has_log() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoadLuaSessionCmd::clear_log() {
  if (log_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    log_->clear();
  }
  clear_has_log();
}
inline const ::std::string& LoadLuaSessionCmd::log() const {
  // @@protoc_insertion_point(field_get:Cmd.LoadLuaSessionCmd.log)
  return *log_;
}
inline void LoadLuaSessionCmd::set_log(const ::std::string& value) {
  set_has_log();
  if (log_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    log_ = new ::std::string;
  }
  log_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.LoadLuaSessionCmd.log)
}
inline void LoadLuaSessionCmd::set_log(const char* value) {
  set_has_log();
  if (log_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    log_ = new ::std::string;
  }
  log_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.LoadLuaSessionCmd.log)
}
inline void LoadLuaSessionCmd::set_log(const char* value, size_t size) {
  set_has_log();
  if (log_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    log_ = new ::std::string;
  }
  log_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.LoadLuaSessionCmd.log)
}
inline ::std::string* LoadLuaSessionCmd::mutable_log() {
  set_has_log();
  if (log_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    log_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.LoadLuaSessionCmd.log)
  return log_;
}
inline ::std::string* LoadLuaSessionCmd::release_log() {
  clear_has_log();
  if (log_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = log_;
    log_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoadLuaSessionCmd::set_allocated_log(::std::string* log) {
  if (log_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete log_;
  }
  if (log) {
    set_has_log();
    log_ = log;
  } else {
    clear_has_log();
    log_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.LoadLuaSessionCmd.log)
}

// optional uint32 serverid = 6;
inline bool LoadLuaSessionCmd::has_serverid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LoadLuaSessionCmd::set_has_serverid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LoadLuaSessionCmd::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LoadLuaSessionCmd::clear_serverid() {
  serverid_ = 0u;
  clear_has_serverid();
}
inline ::google::protobuf::uint32 LoadLuaSessionCmd::serverid() const {
  // @@protoc_insertion_point(field_get:Cmd.LoadLuaSessionCmd.serverid)
  return serverid_;
}
inline void LoadLuaSessionCmd::set_serverid(::google::protobuf::uint32 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LoadLuaSessionCmd.serverid)
}

// optional bool allzone = 7 [default = true];
inline bool LoadLuaSessionCmd::has_allzone() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LoadLuaSessionCmd::set_has_allzone() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LoadLuaSessionCmd::clear_has_allzone() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LoadLuaSessionCmd::clear_allzone() {
  allzone_ = true;
  clear_has_allzone();
}
inline bool LoadLuaSessionCmd::allzone() const {
  // @@protoc_insertion_point(field_get:Cmd.LoadLuaSessionCmd.allzone)
  return allzone_;
}
inline void LoadLuaSessionCmd::set_allzone(bool value) {
  set_has_allzone();
  allzone_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LoadLuaSessionCmd.allzone)
}

// optional .Cmd.EComLoadType load_type = 8;
inline bool LoadLuaSessionCmd::has_load_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LoadLuaSessionCmd::set_has_load_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LoadLuaSessionCmd::clear_has_load_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LoadLuaSessionCmd::clear_load_type() {
  load_type_ = 0;
  clear_has_load_type();
}
inline ::Cmd::EComLoadType LoadLuaSessionCmd::load_type() const {
  // @@protoc_insertion_point(field_get:Cmd.LoadLuaSessionCmd.load_type)
  return static_cast< ::Cmd::EComLoadType >(load_type_);
}
inline void LoadLuaSessionCmd::set_load_type(::Cmd::EComLoadType value) {
  assert(::Cmd::EComLoadType_IsValid(value));
  set_has_load_type();
  load_type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LoadLuaSessionCmd.load_type)
}

// -------------------------------------------------------------------

// ExecGMCmdSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool ExecGMCmdSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExecGMCmdSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExecGMCmdSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExecGMCmdSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command ExecGMCmdSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ExecGMCmdSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ExecGMCmdSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ExecGMCmdSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = EXEC_GM_CMD_SESSIONCMD];
inline bool ExecGMCmdSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExecGMCmdSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExecGMCmdSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExecGMCmdSessionCmd::clear_param() {
  param_ = 72;
  clear_has_param();
}
inline ::Cmd::SessionParam ExecGMCmdSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ExecGMCmdSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void ExecGMCmdSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ExecGMCmdSessionCmd.param)
}

// optional uint32 serverid = 3;
inline bool ExecGMCmdSessionCmd::has_serverid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExecGMCmdSessionCmd::set_has_serverid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExecGMCmdSessionCmd::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExecGMCmdSessionCmd::clear_serverid() {
  serverid_ = 0u;
  clear_has_serverid();
}
inline ::google::protobuf::uint32 ExecGMCmdSessionCmd::serverid() const {
  // @@protoc_insertion_point(field_get:Cmd.ExecGMCmdSessionCmd.serverid)
  return serverid_;
}
inline void ExecGMCmdSessionCmd::set_serverid(::google::protobuf::uint32 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ExecGMCmdSessionCmd.serverid)
}

// optional string gmcmd = 4;
inline bool ExecGMCmdSessionCmd::has_gmcmd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ExecGMCmdSessionCmd::set_has_gmcmd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ExecGMCmdSessionCmd::clear_has_gmcmd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ExecGMCmdSessionCmd::clear_gmcmd() {
  if (gmcmd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmcmd_->clear();
  }
  clear_has_gmcmd();
}
inline const ::std::string& ExecGMCmdSessionCmd::gmcmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ExecGMCmdSessionCmd.gmcmd)
  return *gmcmd_;
}
inline void ExecGMCmdSessionCmd::set_gmcmd(const ::std::string& value) {
  set_has_gmcmd();
  if (gmcmd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmcmd_ = new ::std::string;
  }
  gmcmd_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.ExecGMCmdSessionCmd.gmcmd)
}
inline void ExecGMCmdSessionCmd::set_gmcmd(const char* value) {
  set_has_gmcmd();
  if (gmcmd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmcmd_ = new ::std::string;
  }
  gmcmd_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.ExecGMCmdSessionCmd.gmcmd)
}
inline void ExecGMCmdSessionCmd::set_gmcmd(const char* value, size_t size) {
  set_has_gmcmd();
  if (gmcmd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmcmd_ = new ::std::string;
  }
  gmcmd_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.ExecGMCmdSessionCmd.gmcmd)
}
inline ::std::string* ExecGMCmdSessionCmd::mutable_gmcmd() {
  set_has_gmcmd();
  if (gmcmd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmcmd_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.ExecGMCmdSessionCmd.gmcmd)
  return gmcmd_;
}
inline ::std::string* ExecGMCmdSessionCmd::release_gmcmd() {
  clear_has_gmcmd();
  if (gmcmd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gmcmd_;
    gmcmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ExecGMCmdSessionCmd::set_allocated_gmcmd(::std::string* gmcmd) {
  if (gmcmd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gmcmd_;
  }
  if (gmcmd) {
    set_has_gmcmd();
    gmcmd_ = gmcmd;
  } else {
    clear_has_gmcmd();
    gmcmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ExecGMCmdSessionCmd.gmcmd)
}

// optional bool allzone = 5 [default = true];
inline bool ExecGMCmdSessionCmd::has_allzone() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ExecGMCmdSessionCmd::set_has_allzone() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ExecGMCmdSessionCmd::clear_has_allzone() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ExecGMCmdSessionCmd::clear_allzone() {
  allzone_ = true;
  clear_has_allzone();
}
inline bool ExecGMCmdSessionCmd::allzone() const {
  // @@protoc_insertion_point(field_get:Cmd.ExecGMCmdSessionCmd.allzone)
  return allzone_;
}
inline void ExecGMCmdSessionCmd::set_allzone(bool value) {
  set_has_allzone();
  allzone_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ExecGMCmdSessionCmd.allzone)
}

// -------------------------------------------------------------------

// TowerLayer

// optional uint32 layer = 1 [default = 0];
inline bool TowerLayer::has_layer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TowerLayer::set_has_layer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TowerLayer::clear_has_layer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TowerLayer::clear_layer() {
  layer_ = 0u;
  clear_has_layer();
}
inline ::google::protobuf::uint32 TowerLayer::layer() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerLayer.layer)
  return layer_;
}
inline void TowerLayer::set_layer(::google::protobuf::uint32 value) {
  set_has_layer();
  layer_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TowerLayer.layer)
}

// repeated uint32 curmonsterids = 3;
inline int TowerLayer::curmonsterids_size() const {
  return curmonsterids_.size();
}
inline void TowerLayer::clear_curmonsterids() {
  curmonsterids_.Clear();
}
inline ::google::protobuf::uint32 TowerLayer::curmonsterids(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TowerLayer.curmonsterids)
  return curmonsterids_.Get(index);
}
inline void TowerLayer::set_curmonsterids(int index, ::google::protobuf::uint32 value) {
  curmonsterids_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.TowerLayer.curmonsterids)
}
inline void TowerLayer::add_curmonsterids(::google::protobuf::uint32 value) {
  curmonsterids_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.TowerLayer.curmonsterids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TowerLayer::curmonsterids() const {
  // @@protoc_insertion_point(field_list:Cmd.TowerLayer.curmonsterids)
  return curmonsterids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TowerLayer::mutable_curmonsterids() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TowerLayer.curmonsterids)
  return &curmonsterids_;
}

// -------------------------------------------------------------------

// TowerInfo

// optional uint32 maxlayer = 1 [default = 0];
inline bool TowerInfo::has_maxlayer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TowerInfo::set_has_maxlayer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TowerInfo::clear_has_maxlayer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TowerInfo::clear_maxlayer() {
  maxlayer_ = 0u;
  clear_has_maxlayer();
}
inline ::google::protobuf::uint32 TowerInfo::maxlayer() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerInfo.maxlayer)
  return maxlayer_;
}
inline void TowerInfo::set_maxlayer(::google::protobuf::uint32 value) {
  set_has_maxlayer();
  maxlayer_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TowerInfo.maxlayer)
}

// repeated uint32 killmonsters = 3;
inline int TowerInfo::killmonsters_size() const {
  return killmonsters_.size();
}
inline void TowerInfo::clear_killmonsters() {
  killmonsters_.Clear();
}
inline ::google::protobuf::uint32 TowerInfo::killmonsters(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TowerInfo.killmonsters)
  return killmonsters_.Get(index);
}
inline void TowerInfo::set_killmonsters(int index, ::google::protobuf::uint32 value) {
  killmonsters_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.TowerInfo.killmonsters)
}
inline void TowerInfo::add_killmonsters(::google::protobuf::uint32 value) {
  killmonsters_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.TowerInfo.killmonsters)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TowerInfo::killmonsters() const {
  // @@protoc_insertion_point(field_list:Cmd.TowerInfo.killmonsters)
  return killmonsters_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TowerInfo::mutable_killmonsters() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TowerInfo.killmonsters)
  return &killmonsters_;
}

// repeated .Cmd.TowerLayer layers = 4;
inline int TowerInfo::layers_size() const {
  return layers_.size();
}
inline void TowerInfo::clear_layers() {
  layers_.Clear();
}
inline const ::Cmd::TowerLayer& TowerInfo::layers(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TowerInfo.layers)
  return layers_.Get(index);
}
inline ::Cmd::TowerLayer* TowerInfo::mutable_layers(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.TowerInfo.layers)
  return layers_.Mutable(index);
}
inline ::Cmd::TowerLayer* TowerInfo::add_layers() {
  // @@protoc_insertion_point(field_add:Cmd.TowerInfo.layers)
  return layers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TowerLayer >&
TowerInfo::layers() const {
  // @@protoc_insertion_point(field_list:Cmd.TowerInfo.layers)
  return layers_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TowerLayer >*
TowerInfo::mutable_layers() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TowerInfo.layers)
  return &layers_;
}

// -------------------------------------------------------------------

// SceneTowerUpdate

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool SceneTowerUpdate::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneTowerUpdate::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneTowerUpdate::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneTowerUpdate::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command SceneTowerUpdate::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SceneTowerUpdate.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SceneTowerUpdate::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SceneTowerUpdate.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = TOWERINFO_UPDATE];
inline bool SceneTowerUpdate::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SceneTowerUpdate::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SceneTowerUpdate::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SceneTowerUpdate::clear_param() {
  param_ = 13;
  clear_has_param();
}
inline ::Cmd::SessionParam SceneTowerUpdate::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SceneTowerUpdate.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void SceneTowerUpdate::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SceneTowerUpdate.param)
}

// optional .Cmd.TowerInfo info = 3;
inline bool SceneTowerUpdate::has_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SceneTowerUpdate::set_has_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SceneTowerUpdate::clear_has_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SceneTowerUpdate::clear_info() {
  if (info_ != NULL) info_->::Cmd::TowerInfo::Clear();
  clear_has_info();
}
inline const ::Cmd::TowerInfo& SceneTowerUpdate::info() const {
  // @@protoc_insertion_point(field_get:Cmd.SceneTowerUpdate.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::Cmd::TowerInfo* SceneTowerUpdate::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::Cmd::TowerInfo;
  // @@protoc_insertion_point(field_mutable:Cmd.SceneTowerUpdate.info)
  return info_;
}
inline ::Cmd::TowerInfo* SceneTowerUpdate::release_info() {
  clear_has_info();
  ::Cmd::TowerInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void SceneTowerUpdate::set_allocated_info(::Cmd::TowerInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.SceneTowerUpdate.info)
}

// -------------------------------------------------------------------

// TowerMonsterKill

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool TowerMonsterKill::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TowerMonsterKill::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TowerMonsterKill::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TowerMonsterKill::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command TowerMonsterKill::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerMonsterKill.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TowerMonsterKill::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TowerMonsterKill.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = TOWER_MONSTERKILL];
inline bool TowerMonsterKill::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TowerMonsterKill::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TowerMonsterKill::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TowerMonsterKill::clear_param() {
  param_ = 15;
  clear_has_param();
}
inline ::Cmd::SessionParam TowerMonsterKill::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerMonsterKill.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void TowerMonsterKill::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TowerMonsterKill.param)
}

// optional uint32 monsterid = 3 [default = 0];
inline bool TowerMonsterKill::has_monsterid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TowerMonsterKill::set_has_monsterid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TowerMonsterKill::clear_has_monsterid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TowerMonsterKill::clear_monsterid() {
  monsterid_ = 0u;
  clear_has_monsterid();
}
inline ::google::protobuf::uint32 TowerMonsterKill::monsterid() const {
  // @@protoc_insertion_point(field_get:Cmd.TowerMonsterKill.monsterid)
  return monsterid_;
}
inline void TowerMonsterKill::set_monsterid(::google::protobuf::uint32 value) {
  set_has_monsterid();
  monsterid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TowerMonsterKill.monsterid)
}

// -------------------------------------------------------------------

// SendMail

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool SendMail::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendMail::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendMail::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendMail::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command SendMail::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SendMail.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SendMail::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SendMail.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = CMDPARAM_SEND_MAIL];
inline bool SendMail::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendMail::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendMail::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendMail::clear_param() {
  param_ = 19;
  clear_has_param();
}
inline ::Cmd::SessionParam SendMail::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SendMail.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void SendMail::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SendMail.param)
}

// optional .Cmd.MailData data = 3;
inline bool SendMail::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendMail::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendMail::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendMail::clear_data() {
  if (data_ != NULL) data_->::Cmd::MailData::Clear();
  clear_has_data();
}
inline const ::Cmd::MailData& SendMail::data() const {
  // @@protoc_insertion_point(field_get:Cmd.SendMail.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Cmd::MailData* SendMail::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Cmd::MailData;
  // @@protoc_insertion_point(field_mutable:Cmd.SendMail.data)
  return data_;
}
inline ::Cmd::MailData* SendMail::release_data() {
  clear_has_data();
  ::Cmd::MailData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void SendMail::set_allocated_data(::Cmd::MailData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.SendMail.data)
}

// -------------------------------------------------------------------

// SessionSceneUserCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool SessionSceneUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SessionSceneUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SessionSceneUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SessionSceneUserCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command SessionSceneUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SessionSceneUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SessionSceneUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SessionSceneUserCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = CMDPARAM_SCENEUSERCMD];
inline bool SessionSceneUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SessionSceneUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SessionSceneUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SessionSceneUserCmd::clear_param() {
  param_ = 21;
  clear_has_param();
}
inline ::Cmd::SessionParam SessionSceneUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SessionSceneUserCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void SessionSceneUserCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SessionSceneUserCmd.param)
}

// optional uint64 userid = 3 [default = 0];
inline bool SessionSceneUserCmd::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SessionSceneUserCmd::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SessionSceneUserCmd::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SessionSceneUserCmd::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
  clear_has_userid();
}
inline ::google::protobuf::uint64 SessionSceneUserCmd::userid() const {
  // @@protoc_insertion_point(field_get:Cmd.SessionSceneUserCmd.userid)
  return userid_;
}
inline void SessionSceneUserCmd::set_userid(::google::protobuf::uint64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SessionSceneUserCmd.userid)
}

// optional bytes cmddata = 4;
inline bool SessionSceneUserCmd::has_cmddata() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SessionSceneUserCmd::set_has_cmddata() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SessionSceneUserCmd::clear_has_cmddata() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SessionSceneUserCmd::clear_cmddata() {
  if (cmddata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cmddata_->clear();
  }
  clear_has_cmddata();
}
inline const ::std::string& SessionSceneUserCmd::cmddata() const {
  // @@protoc_insertion_point(field_get:Cmd.SessionSceneUserCmd.cmddata)
  return *cmddata_;
}
inline void SessionSceneUserCmd::set_cmddata(const ::std::string& value) {
  set_has_cmddata();
  if (cmddata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cmddata_ = new ::std::string;
  }
  cmddata_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.SessionSceneUserCmd.cmddata)
}
inline void SessionSceneUserCmd::set_cmddata(const char* value) {
  set_has_cmddata();
  if (cmddata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cmddata_ = new ::std::string;
  }
  cmddata_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.SessionSceneUserCmd.cmddata)
}
inline void SessionSceneUserCmd::set_cmddata(const void* value, size_t size) {
  set_has_cmddata();
  if (cmddata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cmddata_ = new ::std::string;
  }
  cmddata_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.SessionSceneUserCmd.cmddata)
}
inline ::std::string* SessionSceneUserCmd::mutable_cmddata() {
  set_has_cmddata();
  if (cmddata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cmddata_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.SessionSceneUserCmd.cmddata)
  return cmddata_;
}
inline ::std::string* SessionSceneUserCmd::release_cmddata() {
  clear_has_cmddata();
  if (cmddata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = cmddata_;
    cmddata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SessionSceneUserCmd::set_allocated_cmddata(::std::string* cmddata) {
  if (cmddata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete cmddata_;
  }
  if (cmddata) {
    set_has_cmddata();
    cmddata_ = cmddata;
  } else {
    clear_has_cmddata();
    cmddata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.SessionSceneUserCmd.cmddata)
}

// -------------------------------------------------------------------

// GetMailAttachSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool GetMailAttachSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetMailAttachSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetMailAttachSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetMailAttachSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command GetMailAttachSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GetMailAttachSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GetMailAttachSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetMailAttachSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_GET_MAILATTACH];
inline bool GetMailAttachSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetMailAttachSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetMailAttachSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetMailAttachSessionCmd::clear_param() {
  param_ = 20;
  clear_has_param();
}
inline ::Cmd::SessionParam GetMailAttachSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GetMailAttachSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void GetMailAttachSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetMailAttachSessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool GetMailAttachSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetMailAttachSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetMailAttachSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetMailAttachSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GetMailAttachSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.GetMailAttachSessionCmd.charid)
  return charid_;
}
inline void GetMailAttachSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetMailAttachSessionCmd.charid)
}

// optional uint64 mailid = 4 [default = 0];
inline bool GetMailAttachSessionCmd::has_mailid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetMailAttachSessionCmd::set_has_mailid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetMailAttachSessionCmd::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetMailAttachSessionCmd::clear_mailid() {
  mailid_ = GOOGLE_ULONGLONG(0);
  clear_has_mailid();
}
inline ::google::protobuf::uint64 GetMailAttachSessionCmd::mailid() const {
  // @@protoc_insertion_point(field_get:Cmd.GetMailAttachSessionCmd.mailid)
  return mailid_;
}
inline void GetMailAttachSessionCmd::set_mailid(::google::protobuf::uint64 value) {
  set_has_mailid();
  mailid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetMailAttachSessionCmd.mailid)
}

// optional uint32 msgid = 5 [default = 0];
inline bool GetMailAttachSessionCmd::has_msgid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetMailAttachSessionCmd::set_has_msgid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetMailAttachSessionCmd::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetMailAttachSessionCmd::clear_msgid() {
  msgid_ = 0u;
  clear_has_msgid();
}
inline ::google::protobuf::uint32 GetMailAttachSessionCmd::msgid() const {
  // @@protoc_insertion_point(field_get:Cmd.GetMailAttachSessionCmd.msgid)
  return msgid_;
}
inline void GetMailAttachSessionCmd::set_msgid(::google::protobuf::uint32 value) {
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetMailAttachSessionCmd.msgid)
}

// repeated .Cmd.ItemInfo items = 6;
inline int GetMailAttachSessionCmd::items_size() const {
  return items_.size();
}
inline void GetMailAttachSessionCmd::clear_items() {
  items_.Clear();
}
inline const ::Cmd::ItemInfo& GetMailAttachSessionCmd::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GetMailAttachSessionCmd.items)
  return items_.Get(index);
}
inline ::Cmd::ItemInfo* GetMailAttachSessionCmd::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GetMailAttachSessionCmd.items)
  return items_.Mutable(index);
}
inline ::Cmd::ItemInfo* GetMailAttachSessionCmd::add_items() {
  // @@protoc_insertion_point(field_add:Cmd.GetMailAttachSessionCmd.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo >&
GetMailAttachSessionCmd::items() const {
  // @@protoc_insertion_point(field_list:Cmd.GetMailAttachSessionCmd.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo >*
GetMailAttachSessionCmd::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GetMailAttachSessionCmd.items)
  return &items_;
}

// repeated .Cmd.ItemData itemDatas = 7;
inline int GetMailAttachSessionCmd::itemdatas_size() const {
  return itemdatas_.size();
}
inline void GetMailAttachSessionCmd::clear_itemdatas() {
  itemdatas_.Clear();
}
inline const ::Cmd::ItemData& GetMailAttachSessionCmd::itemdatas(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GetMailAttachSessionCmd.itemDatas)
  return itemdatas_.Get(index);
}
inline ::Cmd::ItemData* GetMailAttachSessionCmd::mutable_itemdatas(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GetMailAttachSessionCmd.itemDatas)
  return itemdatas_.Mutable(index);
}
inline ::Cmd::ItemData* GetMailAttachSessionCmd::add_itemdatas() {
  // @@protoc_insertion_point(field_add:Cmd.GetMailAttachSessionCmd.itemDatas)
  return itemdatas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
GetMailAttachSessionCmd::itemdatas() const {
  // @@protoc_insertion_point(field_list:Cmd.GetMailAttachSessionCmd.itemDatas)
  return itemdatas_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
GetMailAttachSessionCmd::mutable_itemdatas() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GetMailAttachSessionCmd.itemDatas)
  return &itemdatas_;
}

// optional string groupid = 8;
inline bool GetMailAttachSessionCmd::has_groupid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GetMailAttachSessionCmd::set_has_groupid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GetMailAttachSessionCmd::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GetMailAttachSessionCmd::clear_groupid() {
  if (groupid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupid_->clear();
  }
  clear_has_groupid();
}
inline const ::std::string& GetMailAttachSessionCmd::groupid() const {
  // @@protoc_insertion_point(field_get:Cmd.GetMailAttachSessionCmd.groupid)
  return *groupid_;
}
inline void GetMailAttachSessionCmd::set_groupid(const ::std::string& value) {
  set_has_groupid();
  if (groupid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupid_ = new ::std::string;
  }
  groupid_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GetMailAttachSessionCmd.groupid)
}
inline void GetMailAttachSessionCmd::set_groupid(const char* value) {
  set_has_groupid();
  if (groupid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupid_ = new ::std::string;
  }
  groupid_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GetMailAttachSessionCmd.groupid)
}
inline void GetMailAttachSessionCmd::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  if (groupid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupid_ = new ::std::string;
  }
  groupid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GetMailAttachSessionCmd.groupid)
}
inline ::std::string* GetMailAttachSessionCmd::mutable_groupid() {
  set_has_groupid();
  if (groupid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GetMailAttachSessionCmd.groupid)
  return groupid_;
}
inline ::std::string* GetMailAttachSessionCmd::release_groupid() {
  clear_has_groupid();
  if (groupid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = groupid_;
    groupid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetMailAttachSessionCmd::set_allocated_groupid(::std::string* groupid) {
  if (groupid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete groupid_;
  }
  if (groupid) {
    set_has_groupid();
    groupid_ = groupid;
  } else {
    clear_has_groupid();
    groupid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GetMailAttachSessionCmd.groupid)
}

// optional .Cmd.EGetMailOpt opt = 9;
inline bool GetMailAttachSessionCmd::has_opt() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GetMailAttachSessionCmd::set_has_opt() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GetMailAttachSessionCmd::clear_has_opt() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GetMailAttachSessionCmd::clear_opt() {
  opt_ = 0;
  clear_has_opt();
}
inline ::Cmd::EGetMailOpt GetMailAttachSessionCmd::opt() const {
  // @@protoc_insertion_point(field_get:Cmd.GetMailAttachSessionCmd.opt)
  return static_cast< ::Cmd::EGetMailOpt >(opt_);
}
inline void GetMailAttachSessionCmd::set_opt(::Cmd::EGetMailOpt value) {
  assert(::Cmd::EGetMailOpt_IsValid(value));
  set_has_opt();
  opt_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetMailAttachSessionCmd.opt)
}

// -------------------------------------------------------------------

// FollowerIDCheck

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool FollowerIDCheck::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FollowerIDCheck::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FollowerIDCheck::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FollowerIDCheck::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command FollowerIDCheck::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.FollowerIDCheck.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void FollowerIDCheck::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FollowerIDCheck.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = CMDPARAM_FOLLOWERIDCHECK];
inline bool FollowerIDCheck::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FollowerIDCheck::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FollowerIDCheck::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FollowerIDCheck::clear_param() {
  param_ = 22;
  clear_has_param();
}
inline ::Cmd::SessionParam FollowerIDCheck::param() const {
  // @@protoc_insertion_point(field_get:Cmd.FollowerIDCheck.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void FollowerIDCheck::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FollowerIDCheck.param)
}

// optional uint64 userid = 3 [default = 0];
inline bool FollowerIDCheck::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FollowerIDCheck::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FollowerIDCheck::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FollowerIDCheck::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
  clear_has_userid();
}
inline ::google::protobuf::uint64 FollowerIDCheck::userid() const {
  // @@protoc_insertion_point(field_get:Cmd.FollowerIDCheck.userid)
  return userid_;
}
inline void FollowerIDCheck::set_userid(::google::protobuf::uint64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FollowerIDCheck.userid)
}

// optional uint64 followid = 4 [default = 0];
inline bool FollowerIDCheck::has_followid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FollowerIDCheck::set_has_followid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FollowerIDCheck::clear_has_followid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FollowerIDCheck::clear_followid() {
  followid_ = GOOGLE_ULONGLONG(0);
  clear_has_followid();
}
inline ::google::protobuf::uint64 FollowerIDCheck::followid() const {
  // @@protoc_insertion_point(field_get:Cmd.FollowerIDCheck.followid)
  return followid_;
}
inline void FollowerIDCheck::set_followid(::google::protobuf::uint64 value) {
  set_has_followid();
  followid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FollowerIDCheck.followid)
}

// optional .Cmd.EFollowType etype = 5 [default = EFOLLOWTYPE_MIN];
inline bool FollowerIDCheck::has_etype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FollowerIDCheck::set_has_etype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FollowerIDCheck::clear_has_etype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FollowerIDCheck::clear_etype() {
  etype_ = 0;
  clear_has_etype();
}
inline ::Cmd::EFollowType FollowerIDCheck::etype() const {
  // @@protoc_insertion_point(field_get:Cmd.FollowerIDCheck.etype)
  return static_cast< ::Cmd::EFollowType >(etype_);
}
inline void FollowerIDCheck::set_etype(::Cmd::EFollowType value) {
  assert(::Cmd::EFollowType_IsValid(value));
  set_has_etype();
  etype_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FollowerIDCheck.etype)
}

// -------------------------------------------------------------------

// Event

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool Event::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Event::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Event::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Event::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command Event::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.Event.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void Event::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.Event.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = CMDPARAM_EVENT];
inline bool Event::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Event::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Event::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Event::clear_param() {
  param_ = 23;
  clear_has_param();
}
inline ::Cmd::SessionParam Event::param() const {
  // @@protoc_insertion_point(field_get:Cmd.Event.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void Event::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.Event.param)
}

// optional uint64 guid = 3 [default = 0];
inline bool Event::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Event::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Event::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Event::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 Event::guid() const {
  // @@protoc_insertion_point(field_get:Cmd.Event.guid)
  return guid_;
}
inline void Event::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.Event.guid)
}

// optional .Cmd.EEventType type = 4 [default = EEVENTTYPE_MIN];
inline bool Event::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Event::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Event::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Event::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::EEventType Event::type() const {
  // @@protoc_insertion_point(field_get:Cmd.Event.type)
  return static_cast< ::Cmd::EEventType >(type_);
}
inline void Event::set_type(::Cmd::EEventType value) {
  assert(::Cmd::EEventType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.Event.type)
}

// repeated uint64 params = 5;
inline int Event::params_size() const {
  return params_.size();
}
inline void Event::clear_params() {
  params_.Clear();
}
inline ::google::protobuf::uint64 Event::params(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.Event.params)
  return params_.Get(index);
}
inline void Event::set_params(int index, ::google::protobuf::uint64 value) {
  params_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.Event.params)
}
inline void Event::add_params(::google::protobuf::uint64 value) {
  params_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.Event.params)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Event::params() const {
  // @@protoc_insertion_point(field_list:Cmd.Event.params)
  return params_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Event::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.Event.params)
  return &params_;
}

// -------------------------------------------------------------------

// ChatMsgSession

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool ChatMsgSession::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatMsgSession::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatMsgSession::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatMsgSession::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command ChatMsgSession::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ChatMsgSession.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ChatMsgSession::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChatMsgSession.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = CHAT_MSG];
inline bool ChatMsgSession::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatMsgSession::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatMsgSession::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatMsgSession::clear_param() {
  param_ = 11;
  clear_has_param();
}
inline ::Cmd::SessionParam ChatMsgSession::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ChatMsgSession.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void ChatMsgSession::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChatMsgSession.param)
}

// repeated uint64 targetid = 3;
inline int ChatMsgSession::targetid_size() const {
  return targetid_.size();
}
inline void ChatMsgSession::clear_targetid() {
  targetid_.Clear();
}
inline ::google::protobuf::uint64 ChatMsgSession::targetid(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.ChatMsgSession.targetid)
  return targetid_.Get(index);
}
inline void ChatMsgSession::set_targetid(int index, ::google::protobuf::uint64 value) {
  targetid_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.ChatMsgSession.targetid)
}
inline void ChatMsgSession::add_targetid(::google::protobuf::uint64 value) {
  targetid_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.ChatMsgSession.targetid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ChatMsgSession::targetid() const {
  // @@protoc_insertion_point(field_list:Cmd.ChatMsgSession.targetid)
  return targetid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ChatMsgSession::mutable_targetid() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.ChatMsgSession.targetid)
  return &targetid_;
}

// optional string msg = 4;
inline bool ChatMsgSession::has_msg() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChatMsgSession::set_has_msg() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChatMsgSession::clear_has_msg() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChatMsgSession::clear_msg() {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& ChatMsgSession::msg() const {
  // @@protoc_insertion_point(field_get:Cmd.ChatMsgSession.msg)
  return *msg_;
}
inline void ChatMsgSession::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.ChatMsgSession.msg)
}
inline void ChatMsgSession::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.ChatMsgSession.msg)
}
inline void ChatMsgSession::set_msg(const char* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.ChatMsgSession.msg)
}
inline ::std::string* ChatMsgSession::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.ChatMsgSession.msg)
  return msg_;
}
inline ::std::string* ChatMsgSession::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ChatMsgSession::set_allocated_msg(::std::string* msg) {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_;
  }
  if (msg) {
    set_has_msg();
    msg_ = msg;
  } else {
    clear_has_msg();
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ChatMsgSession.msg)
}

// optional .Cmd.EGameChatChannel channel = 5 [default = ECHAT_CHANNEL_MIN];
inline bool ChatMsgSession::has_channel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChatMsgSession::set_has_channel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChatMsgSession::clear_has_channel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChatMsgSession::clear_channel() {
  channel_ = 0;
  clear_has_channel();
}
inline ::Cmd::EGameChatChannel ChatMsgSession::channel() const {
  // @@protoc_insertion_point(field_get:Cmd.ChatMsgSession.channel)
  return static_cast< ::Cmd::EGameChatChannel >(channel_);
}
inline void ChatMsgSession::set_channel(::Cmd::EGameChatChannel value) {
  assert(::Cmd::EGameChatChannel_IsValid(value));
  set_has_channel();
  channel_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChatMsgSession.channel)
}

// optional uint64 selfid = 6 [default = 0];
inline bool ChatMsgSession::has_selfid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ChatMsgSession::set_has_selfid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ChatMsgSession::clear_has_selfid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ChatMsgSession::clear_selfid() {
  selfid_ = GOOGLE_ULONGLONG(0);
  clear_has_selfid();
}
inline ::google::protobuf::uint64 ChatMsgSession::selfid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChatMsgSession.selfid)
  return selfid_;
}
inline void ChatMsgSession::set_selfid(::google::protobuf::uint64 value) {
  set_has_selfid();
  selfid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChatMsgSession.selfid)
}

// optional bytes voice = 7;
inline bool ChatMsgSession::has_voice() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ChatMsgSession::set_has_voice() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ChatMsgSession::clear_has_voice() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ChatMsgSession::clear_voice() {
  if (voice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voice_->clear();
  }
  clear_has_voice();
}
inline const ::std::string& ChatMsgSession::voice() const {
  // @@protoc_insertion_point(field_get:Cmd.ChatMsgSession.voice)
  return *voice_;
}
inline void ChatMsgSession::set_voice(const ::std::string& value) {
  set_has_voice();
  if (voice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voice_ = new ::std::string;
  }
  voice_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.ChatMsgSession.voice)
}
inline void ChatMsgSession::set_voice(const char* value) {
  set_has_voice();
  if (voice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voice_ = new ::std::string;
  }
  voice_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.ChatMsgSession.voice)
}
inline void ChatMsgSession::set_voice(const void* value, size_t size) {
  set_has_voice();
  if (voice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voice_ = new ::std::string;
  }
  voice_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.ChatMsgSession.voice)
}
inline ::std::string* ChatMsgSession::mutable_voice() {
  set_has_voice();
  if (voice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voice_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.ChatMsgSession.voice)
  return voice_;
}
inline ::std::string* ChatMsgSession::release_voice() {
  clear_has_voice();
  if (voice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = voice_;
    voice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ChatMsgSession::set_allocated_voice(::std::string* voice) {
  if (voice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete voice_;
  }
  if (voice) {
    set_has_voice();
    voice_ = voice;
  } else {
    clear_has_voice();
    voice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ChatMsgSession.voice)
}

// optional uint32 voicetime = 8 [default = 0];
inline bool ChatMsgSession::has_voicetime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ChatMsgSession::set_has_voicetime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ChatMsgSession::clear_has_voicetime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ChatMsgSession::clear_voicetime() {
  voicetime_ = 0u;
  clear_has_voicetime();
}
inline ::google::protobuf::uint32 ChatMsgSession::voicetime() const {
  // @@protoc_insertion_point(field_get:Cmd.ChatMsgSession.voicetime)
  return voicetime_;
}
inline void ChatMsgSession::set_voicetime(::google::protobuf::uint32 value) {
  set_has_voicetime();
  voicetime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChatMsgSession.voicetime)
}

// optional bool blink = 9 [default = false];
inline bool ChatMsgSession::has_blink() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ChatMsgSession::set_has_blink() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ChatMsgSession::clear_has_blink() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ChatMsgSession::clear_blink() {
  blink_ = false;
  clear_has_blink();
}
inline bool ChatMsgSession::blink() const {
  // @@protoc_insertion_point(field_get:Cmd.ChatMsgSession.blink)
  return blink_;
}
inline void ChatMsgSession::set_blink(bool value) {
  set_has_blink();
  blink_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChatMsgSession.blink)
}

// optional uint32 msgid = 10 [default = 0];
inline bool ChatMsgSession::has_msgid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ChatMsgSession::set_has_msgid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ChatMsgSession::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ChatMsgSession::clear_msgid() {
  msgid_ = 0u;
  clear_has_msgid();
}
inline ::google::protobuf::uint32 ChatMsgSession::msgid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChatMsgSession.msgid)
  return msgid_;
}
inline void ChatMsgSession::set_msgid(::google::protobuf::uint32 value) {
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChatMsgSession.msgid)
}

// optional bool msgover = 11 [default = false];
inline bool ChatMsgSession::has_msgover() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ChatMsgSession::set_has_msgover() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ChatMsgSession::clear_has_msgover() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ChatMsgSession::clear_msgover() {
  msgover_ = false;
  clear_has_msgover();
}
inline bool ChatMsgSession::msgover() const {
  // @@protoc_insertion_point(field_get:Cmd.ChatMsgSession.msgover)
  return msgover_;
}
inline void ChatMsgSession::set_msgover(bool value) {
  set_has_msgover();
  msgover_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChatMsgSession.msgover)
}

// optional .Cmd.BarrageMsgChatCmd barrage = 12;
inline bool ChatMsgSession::has_barrage() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ChatMsgSession::set_has_barrage() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ChatMsgSession::clear_has_barrage() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ChatMsgSession::clear_barrage() {
  if (barrage_ != NULL) barrage_->::Cmd::BarrageMsgChatCmd::Clear();
  clear_has_barrage();
}
inline const ::Cmd::BarrageMsgChatCmd& ChatMsgSession::barrage() const {
  // @@protoc_insertion_point(field_get:Cmd.ChatMsgSession.barrage)
  return barrage_ != NULL ? *barrage_ : *default_instance_->barrage_;
}
inline ::Cmd::BarrageMsgChatCmd* ChatMsgSession::mutable_barrage() {
  set_has_barrage();
  if (barrage_ == NULL) barrage_ = new ::Cmd::BarrageMsgChatCmd;
  // @@protoc_insertion_point(field_mutable:Cmd.ChatMsgSession.barrage)
  return barrage_;
}
inline ::Cmd::BarrageMsgChatCmd* ChatMsgSession::release_barrage() {
  clear_has_barrage();
  ::Cmd::BarrageMsgChatCmd* temp = barrage_;
  barrage_ = NULL;
  return temp;
}
inline void ChatMsgSession::set_allocated_barrage(::Cmd::BarrageMsgChatCmd* barrage) {
  delete barrage_;
  barrage_ = barrage;
  if (barrage) {
    set_has_barrage();
  } else {
    clear_has_barrage();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ChatMsgSession.barrage)
}

// -------------------------------------------------------------------

// SetGlobalDaily

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool SetGlobalDaily::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetGlobalDaily::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetGlobalDaily::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetGlobalDaily::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command SetGlobalDaily::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SetGlobalDaily.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SetGlobalDaily::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SetGlobalDaily.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = CMDPARAM_SET_GLOBL_DAILY];
inline bool SetGlobalDaily::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetGlobalDaily::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetGlobalDaily::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetGlobalDaily::clear_param() {
  param_ = 24;
  clear_has_param();
}
inline ::Cmd::SessionParam SetGlobalDaily::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SetGlobalDaily.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void SetGlobalDaily::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SetGlobalDaily.param)
}

// optional uint32 value = 3 [default = 0];
inline bool SetGlobalDaily::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetGlobalDaily::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetGlobalDaily::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetGlobalDaily::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 SetGlobalDaily::value() const {
  // @@protoc_insertion_point(field_get:Cmd.SetGlobalDaily.value)
  return value_;
}
inline void SetGlobalDaily::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SetGlobalDaily.value)
}

// -------------------------------------------------------------------

// RefreshQuest

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool RefreshQuest::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RefreshQuest::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RefreshQuest::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RefreshQuest::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command RefreshQuest::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.RefreshQuest.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void RefreshQuest::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RefreshQuest.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = CMDPARAM_REFRESH_QUEST];
inline bool RefreshQuest::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RefreshQuest::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RefreshQuest::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RefreshQuest::clear_param() {
  param_ = 28;
  clear_has_param();
}
inline ::Cmd::SessionParam RefreshQuest::param() const {
  // @@protoc_insertion_point(field_get:Cmd.RefreshQuest.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void RefreshQuest::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RefreshQuest.param)
}

// optional uint32 value = 3 [default = 0];
inline bool RefreshQuest::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RefreshQuest::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RefreshQuest::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RefreshQuest::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 RefreshQuest::value() const {
  // @@protoc_insertion_point(field_get:Cmd.RefreshQuest.value)
  return value_;
}
inline void RefreshQuest::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RefreshQuest.value)
}

// -------------------------------------------------------------------

// QuerySealTimer

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool QuerySealTimer::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuerySealTimer::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuerySealTimer::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuerySealTimer::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command QuerySealTimer::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QuerySealTimer.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QuerySealTimer::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QuerySealTimer.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = CMDPARAM_SEALTIMER];
inline bool QuerySealTimer::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuerySealTimer::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuerySealTimer::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuerySealTimer::clear_param() {
  param_ = 25;
  clear_has_param();
}
inline ::Cmd::SessionParam QuerySealTimer::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QuerySealTimer.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void QuerySealTimer::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QuerySealTimer.param)
}

// required uint64 userid = 3 [default = 0];
inline bool QuerySealTimer::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QuerySealTimer::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QuerySealTimer::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QuerySealTimer::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
  clear_has_userid();
}
inline ::google::protobuf::uint64 QuerySealTimer::userid() const {
  // @@protoc_insertion_point(field_get:Cmd.QuerySealTimer.userid)
  return userid_;
}
inline void QuerySealTimer::set_userid(::google::protobuf::uint64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QuerySealTimer.userid)
}

// required uint64 teamid = 4 [default = 0];
inline bool QuerySealTimer::has_teamid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QuerySealTimer::set_has_teamid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QuerySealTimer::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QuerySealTimer::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 QuerySealTimer::teamid() const {
  // @@protoc_insertion_point(field_get:Cmd.QuerySealTimer.teamid)
  return teamid_;
}
inline void QuerySealTimer::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QuerySealTimer.teamid)
}

// -------------------------------------------------------------------

// DelSceneImage

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool DelSceneImage::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelSceneImage::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelSceneImage::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelSceneImage::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command DelSceneImage::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.DelSceneImage.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void DelSceneImage::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DelSceneImage.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = DEL_SCENE_IMAGE];
inline bool DelSceneImage::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DelSceneImage::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DelSceneImage::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DelSceneImage::clear_param() {
  param_ = 26;
  clear_has_param();
}
inline ::Cmd::SessionParam DelSceneImage::param() const {
  // @@protoc_insertion_point(field_get:Cmd.DelSceneImage.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void DelSceneImage::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DelSceneImage.param)
}

// optional uint64 guid = 3 [default = 0];
inline bool DelSceneImage::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DelSceneImage::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DelSceneImage::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DelSceneImage::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 DelSceneImage::guid() const {
  // @@protoc_insertion_point(field_get:Cmd.DelSceneImage.guid)
  return guid_;
}
inline void DelSceneImage::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DelSceneImage.guid)
}

// optional uint32 realscene = 4 [default = 0];
inline bool DelSceneImage::has_realscene() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DelSceneImage::set_has_realscene() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DelSceneImage::clear_has_realscene() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DelSceneImage::clear_realscene() {
  realscene_ = 0u;
  clear_has_realscene();
}
inline ::google::protobuf::uint32 DelSceneImage::realscene() const {
  // @@protoc_insertion_point(field_get:Cmd.DelSceneImage.realscene)
  return realscene_;
}
inline void DelSceneImage::set_realscene(::google::protobuf::uint32 value) {
  set_has_realscene();
  realscene_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DelSceneImage.realscene)
}

// optional .Cmd.ESceneImageType etype = 5 [default = ESCENEIMAGE_MIN];
inline bool DelSceneImage::has_etype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DelSceneImage::set_has_etype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DelSceneImage::clear_has_etype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DelSceneImage::clear_etype() {
  etype_ = 0;
  clear_has_etype();
}
inline ::Cmd::ESceneImageType DelSceneImage::etype() const {
  // @@protoc_insertion_point(field_get:Cmd.DelSceneImage.etype)
  return static_cast< ::Cmd::ESceneImageType >(etype_);
}
inline void DelSceneImage::set_etype(::Cmd::ESceneImageType value) {
  assert(::Cmd::ESceneImageType_IsValid(value));
  set_has_etype();
  etype_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DelSceneImage.etype)
}

// optional uint32 raid = 6 [default = 0];
inline bool DelSceneImage::has_raid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DelSceneImage::set_has_raid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DelSceneImage::clear_has_raid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DelSceneImage::clear_raid() {
  raid_ = 0u;
  clear_has_raid();
}
inline ::google::protobuf::uint32 DelSceneImage::raid() const {
  // @@protoc_insertion_point(field_get:Cmd.DelSceneImage.raid)
  return raid_;
}
inline void DelSceneImage::set_raid(::google::protobuf::uint32 value) {
  set_has_raid();
  raid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DelSceneImage.raid)
}

// -------------------------------------------------------------------

// SetTeamSeal

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool SetTeamSeal::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetTeamSeal::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetTeamSeal::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetTeamSeal::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command SetTeamSeal::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SetTeamSeal.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SetTeamSeal::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SetTeamSeal.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = CMDPARAM_SET_SEAL];
inline bool SetTeamSeal::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetTeamSeal::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetTeamSeal::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetTeamSeal::clear_param() {
  param_ = 27;
  clear_has_param();
}
inline ::Cmd::SessionParam SetTeamSeal::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SetTeamSeal.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void SetTeamSeal::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SetTeamSeal.param)
}

// optional uint32 sealid = 3 [default = 0];
inline bool SetTeamSeal::has_sealid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetTeamSeal::set_has_sealid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetTeamSeal::clear_has_sealid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetTeamSeal::clear_sealid() {
  sealid_ = 0u;
  clear_has_sealid();
}
inline ::google::protobuf::uint32 SetTeamSeal::sealid() const {
  // @@protoc_insertion_point(field_get:Cmd.SetTeamSeal.sealid)
  return sealid_;
}
inline void SetTeamSeal::set_sealid(::google::protobuf::uint32 value) {
  set_has_sealid();
  sealid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SetTeamSeal.sealid)
}

// optional uint64 teamid = 4 [default = 0];
inline bool SetTeamSeal::has_teamid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SetTeamSeal::set_has_teamid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SetTeamSeal::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SetTeamSeal::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 SetTeamSeal::teamid() const {
  // @@protoc_insertion_point(field_get:Cmd.SetTeamSeal.teamid)
  return teamid_;
}
inline void SetTeamSeal::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SetTeamSeal.teamid)
}

// optional uint32 mapid = 5 [default = 0];
inline bool SetTeamSeal::has_mapid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SetTeamSeal::set_has_mapid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SetTeamSeal::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SetTeamSeal::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 SetTeamSeal::mapid() const {
  // @@protoc_insertion_point(field_get:Cmd.SetTeamSeal.mapid)
  return mapid_;
}
inline void SetTeamSeal::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SetTeamSeal.mapid)
}

// optional .Cmd.ESetSealStatus estatus = 6 [default = ESETSEALSTATUS_MIN];
inline bool SetTeamSeal::has_estatus() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SetTeamSeal::set_has_estatus() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SetTeamSeal::clear_has_estatus() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SetTeamSeal::clear_estatus() {
  estatus_ = 0;
  clear_has_estatus();
}
inline ::Cmd::ESetSealStatus SetTeamSeal::estatus() const {
  // @@protoc_insertion_point(field_get:Cmd.SetTeamSeal.estatus)
  return static_cast< ::Cmd::ESetSealStatus >(estatus_);
}
inline void SetTeamSeal::set_estatus(::Cmd::ESetSealStatus value) {
  assert(::Cmd::ESetSealStatus_IsValid(value));
  set_has_estatus();
  estatus_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SetTeamSeal.estatus)
}

// optional .Cmd.ScenePos pos = 7;
inline bool SetTeamSeal::has_pos() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SetTeamSeal::set_has_pos() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SetTeamSeal::clear_has_pos() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SetTeamSeal::clear_pos() {
  if (pos_ != NULL) pos_->::Cmd::ScenePos::Clear();
  clear_has_pos();
}
inline const ::Cmd::ScenePos& SetTeamSeal::pos() const {
  // @@protoc_insertion_point(field_get:Cmd.SetTeamSeal.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Cmd::ScenePos* SetTeamSeal::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Cmd::ScenePos;
  // @@protoc_insertion_point(field_mutable:Cmd.SetTeamSeal.pos)
  return pos_;
}
inline ::Cmd::ScenePos* SetTeamSeal::release_pos() {
  clear_has_pos();
  ::Cmd::ScenePos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void SetTeamSeal::set_allocated_pos(::Cmd::ScenePos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.SetTeamSeal.pos)
}

// optional uint64 leaderid = 8 [default = 0];
inline bool SetTeamSeal::has_leaderid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SetTeamSeal::set_has_leaderid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SetTeamSeal::clear_has_leaderid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SetTeamSeal::clear_leaderid() {
  leaderid_ = GOOGLE_ULONGLONG(0);
  clear_has_leaderid();
}
inline ::google::protobuf::uint64 SetTeamSeal::leaderid() const {
  // @@protoc_insertion_point(field_get:Cmd.SetTeamSeal.leaderid)
  return leaderid_;
}
inline void SetTeamSeal::set_leaderid(::google::protobuf::uint64 value) {
  set_has_leaderid();
  leaderid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SetTeamSeal.leaderid)
}

// repeated uint64 teamers = 9;
inline int SetTeamSeal::teamers_size() const {
  return teamers_.size();
}
inline void SetTeamSeal::clear_teamers() {
  teamers_.Clear();
}
inline ::google::protobuf::uint64 SetTeamSeal::teamers(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SetTeamSeal.teamers)
  return teamers_.Get(index);
}
inline void SetTeamSeal::set_teamers(int index, ::google::protobuf::uint64 value) {
  teamers_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.SetTeamSeal.teamers)
}
inline void SetTeamSeal::add_teamers(::google::protobuf::uint64 value) {
  teamers_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.SetTeamSeal.teamers)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
SetTeamSeal::teamers() const {
  // @@protoc_insertion_point(field_list:Cmd.SetTeamSeal.teamers)
  return teamers_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
SetTeamSeal::mutable_teamers() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SetTeamSeal.teamers)
  return &teamers_;
}

// -------------------------------------------------------------------

// UserLoginNtfSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool UserLoginNtfSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserLoginNtfSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserLoginNtfSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserLoginNtfSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command UserLoginNtfSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UserLoginNtfSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UserLoginNtfSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserLoginNtfSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_USERLOGIN_NTF];
inline bool UserLoginNtfSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserLoginNtfSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserLoginNtfSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserLoginNtfSessionCmd::clear_param() {
  param_ = 31;
  clear_has_param();
}
inline ::Cmd::SessionParam UserLoginNtfSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UserLoginNtfSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void UserLoginNtfSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserLoginNtfSessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool UserLoginNtfSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserLoginNtfSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserLoginNtfSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserLoginNtfSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 UserLoginNtfSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.UserLoginNtfSessionCmd.charid)
  return charid_;
}
inline void UserLoginNtfSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserLoginNtfSessionCmd.charid)
}

// optional string servername = 4;
inline bool UserLoginNtfSessionCmd::has_servername() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserLoginNtfSessionCmd::set_has_servername() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserLoginNtfSessionCmd::clear_has_servername() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserLoginNtfSessionCmd::clear_servername() {
  if (servername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_->clear();
  }
  clear_has_servername();
}
inline const ::std::string& UserLoginNtfSessionCmd::servername() const {
  // @@protoc_insertion_point(field_get:Cmd.UserLoginNtfSessionCmd.servername)
  return *servername_;
}
inline void UserLoginNtfSessionCmd::set_servername(const ::std::string& value) {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_ = new ::std::string;
  }
  servername_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.UserLoginNtfSessionCmd.servername)
}
inline void UserLoginNtfSessionCmd::set_servername(const char* value) {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_ = new ::std::string;
  }
  servername_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.UserLoginNtfSessionCmd.servername)
}
inline void UserLoginNtfSessionCmd::set_servername(const char* value, size_t size) {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_ = new ::std::string;
  }
  servername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.UserLoginNtfSessionCmd.servername)
}
inline ::std::string* UserLoginNtfSessionCmd::mutable_servername() {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.UserLoginNtfSessionCmd.servername)
  return servername_;
}
inline ::std::string* UserLoginNtfSessionCmd::release_servername() {
  clear_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = servername_;
    servername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserLoginNtfSessionCmd::set_allocated_servername(::std::string* servername) {
  if (servername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete servername_;
  }
  if (servername) {
    set_has_servername();
    servername_ = servername;
  } else {
    clear_has_servername();
    servername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.UserLoginNtfSessionCmd.servername)
}

// -------------------------------------------------------------------

// RefreshTower

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool RefreshTower::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RefreshTower::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RefreshTower::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RefreshTower::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command RefreshTower::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.RefreshTower.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void RefreshTower::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RefreshTower.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = CMDPARAM_REFRESH_TOWER];
inline bool RefreshTower::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RefreshTower::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RefreshTower::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RefreshTower::clear_param() {
  param_ = 32;
  clear_has_param();
}
inline ::Cmd::SessionParam RefreshTower::param() const {
  // @@protoc_insertion_point(field_get:Cmd.RefreshTower.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void RefreshTower::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RefreshTower.param)
}

// -------------------------------------------------------------------

// NotifyLoginSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool NotifyLoginSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyLoginSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyLoginSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyLoginSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command NotifyLoginSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.NotifyLoginSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void NotifyLoginSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.NotifyLoginSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_NOTIFY_LOGIN];
inline bool NotifyLoginSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyLoginSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyLoginSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyLoginSessionCmd::clear_param() {
  param_ = 33;
  clear_has_param();
}
inline ::Cmd::SessionParam NotifyLoginSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.NotifyLoginSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void NotifyLoginSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.NotifyLoginSessionCmd.param)
}

// optional uint64 id = 3 [default = 0];
inline bool NotifyLoginSessionCmd::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyLoginSessionCmd::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyLoginSessionCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyLoginSessionCmd::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 NotifyLoginSessionCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.NotifyLoginSessionCmd.id)
  return id_;
}
inline void NotifyLoginSessionCmd::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.NotifyLoginSessionCmd.id)
}

// optional uint64 accid = 4 [default = 0];
inline bool NotifyLoginSessionCmd::has_accid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyLoginSessionCmd::set_has_accid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyLoginSessionCmd::clear_has_accid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyLoginSessionCmd::clear_accid() {
  accid_ = GOOGLE_ULONGLONG(0);
  clear_has_accid();
}
inline ::google::protobuf::uint64 NotifyLoginSessionCmd::accid() const {
  // @@protoc_insertion_point(field_get:Cmd.NotifyLoginSessionCmd.accid)
  return accid_;
}
inline void NotifyLoginSessionCmd::set_accid(::google::protobuf::uint64 value) {
  set_has_accid();
  accid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.NotifyLoginSessionCmd.accid)
}

// optional uint32 mapid = 5 [default = 0];
inline bool NotifyLoginSessionCmd::has_mapid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifyLoginSessionCmd::set_has_mapid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifyLoginSessionCmd::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifyLoginSessionCmd::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 NotifyLoginSessionCmd::mapid() const {
  // @@protoc_insertion_point(field_get:Cmd.NotifyLoginSessionCmd.mapid)
  return mapid_;
}
inline void NotifyLoginSessionCmd::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.NotifyLoginSessionCmd.mapid)
}

// optional bool ischangescene = 6 [default = false];
inline bool NotifyLoginSessionCmd::has_ischangescene() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NotifyLoginSessionCmd::set_has_ischangescene() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NotifyLoginSessionCmd::clear_has_ischangescene() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NotifyLoginSessionCmd::clear_ischangescene() {
  ischangescene_ = false;
  clear_has_ischangescene();
}
inline bool NotifyLoginSessionCmd::ischangescene() const {
  // @@protoc_insertion_point(field_get:Cmd.NotifyLoginSessionCmd.ischangescene)
  return ischangescene_;
}
inline void NotifyLoginSessionCmd::set_ischangescene(bool value) {
  set_has_ischangescene();
  ischangescene_ = value;
  // @@protoc_insertion_point(field_set:Cmd.NotifyLoginSessionCmd.ischangescene)
}

// optional string name = 7;
inline bool NotifyLoginSessionCmd::has_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void NotifyLoginSessionCmd::set_has_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void NotifyLoginSessionCmd::clear_has_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void NotifyLoginSessionCmd::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& NotifyLoginSessionCmd::name() const {
  // @@protoc_insertion_point(field_get:Cmd.NotifyLoginSessionCmd.name)
  return *name_;
}
inline void NotifyLoginSessionCmd::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.NotifyLoginSessionCmd.name)
}
inline void NotifyLoginSessionCmd::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.NotifyLoginSessionCmd.name)
}
inline void NotifyLoginSessionCmd::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.NotifyLoginSessionCmd.name)
}
inline ::std::string* NotifyLoginSessionCmd::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.NotifyLoginSessionCmd.name)
  return name_;
}
inline ::std::string* NotifyLoginSessionCmd::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NotifyLoginSessionCmd::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.NotifyLoginSessionCmd.name)
}

// optional string gatename = 8;
inline bool NotifyLoginSessionCmd::has_gatename() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void NotifyLoginSessionCmd::set_has_gatename() {
  _has_bits_[0] |= 0x00000080u;
}
inline void NotifyLoginSessionCmd::clear_has_gatename() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void NotifyLoginSessionCmd::clear_gatename() {
  if (gatename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gatename_->clear();
  }
  clear_has_gatename();
}
inline const ::std::string& NotifyLoginSessionCmd::gatename() const {
  // @@protoc_insertion_point(field_get:Cmd.NotifyLoginSessionCmd.gatename)
  return *gatename_;
}
inline void NotifyLoginSessionCmd::set_gatename(const ::std::string& value) {
  set_has_gatename();
  if (gatename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gatename_ = new ::std::string;
  }
  gatename_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.NotifyLoginSessionCmd.gatename)
}
inline void NotifyLoginSessionCmd::set_gatename(const char* value) {
  set_has_gatename();
  if (gatename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gatename_ = new ::std::string;
  }
  gatename_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.NotifyLoginSessionCmd.gatename)
}
inline void NotifyLoginSessionCmd::set_gatename(const char* value, size_t size) {
  set_has_gatename();
  if (gatename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gatename_ = new ::std::string;
  }
  gatename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.NotifyLoginSessionCmd.gatename)
}
inline ::std::string* NotifyLoginSessionCmd::mutable_gatename() {
  set_has_gatename();
  if (gatename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gatename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.NotifyLoginSessionCmd.gatename)
  return gatename_;
}
inline ::std::string* NotifyLoginSessionCmd::release_gatename() {
  clear_has_gatename();
  if (gatename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gatename_;
    gatename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NotifyLoginSessionCmd::set_allocated_gatename(::std::string* gatename) {
  if (gatename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gatename_;
  }
  if (gatename) {
    set_has_gatename();
    gatename_ = gatename;
  } else {
    clear_has_gatename();
    gatename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.NotifyLoginSessionCmd.gatename)
}

// optional string phone = 9;
inline bool NotifyLoginSessionCmd::has_phone() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void NotifyLoginSessionCmd::set_has_phone() {
  _has_bits_[0] |= 0x00000100u;
}
inline void NotifyLoginSessionCmd::clear_has_phone() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void NotifyLoginSessionCmd::clear_phone() {
  if (phone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phone_->clear();
  }
  clear_has_phone();
}
inline const ::std::string& NotifyLoginSessionCmd::phone() const {
  // @@protoc_insertion_point(field_get:Cmd.NotifyLoginSessionCmd.phone)
  return *phone_;
}
inline void NotifyLoginSessionCmd::set_phone(const ::std::string& value) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phone_ = new ::std::string;
  }
  phone_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.NotifyLoginSessionCmd.phone)
}
inline void NotifyLoginSessionCmd::set_phone(const char* value) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phone_ = new ::std::string;
  }
  phone_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.NotifyLoginSessionCmd.phone)
}
inline void NotifyLoginSessionCmd::set_phone(const char* value, size_t size) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phone_ = new ::std::string;
  }
  phone_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.NotifyLoginSessionCmd.phone)
}
inline ::std::string* NotifyLoginSessionCmd::mutable_phone() {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phone_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.NotifyLoginSessionCmd.phone)
  return phone_;
}
inline ::std::string* NotifyLoginSessionCmd::release_phone() {
  clear_has_phone();
  if (phone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = phone_;
    phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NotifyLoginSessionCmd::set_allocated_phone(::std::string* phone) {
  if (phone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete phone_;
  }
  if (phone) {
    set_has_phone();
    phone_ = phone;
  } else {
    clear_has_phone();
    phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.NotifyLoginSessionCmd.phone)
}

// optional bool ignorepwd = 10;
inline bool NotifyLoginSessionCmd::has_ignorepwd() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void NotifyLoginSessionCmd::set_has_ignorepwd() {
  _has_bits_[0] |= 0x00000200u;
}
inline void NotifyLoginSessionCmd::clear_has_ignorepwd() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void NotifyLoginSessionCmd::clear_ignorepwd() {
  ignorepwd_ = false;
  clear_has_ignorepwd();
}
inline bool NotifyLoginSessionCmd::ignorepwd() const {
  // @@protoc_insertion_point(field_get:Cmd.NotifyLoginSessionCmd.ignorepwd)
  return ignorepwd_;
}
inline void NotifyLoginSessionCmd::set_ignorepwd(bool value) {
  set_has_ignorepwd();
  ignorepwd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.NotifyLoginSessionCmd.ignorepwd)
}

// optional uint32 language = 11;
inline bool NotifyLoginSessionCmd::has_language() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void NotifyLoginSessionCmd::set_has_language() {
  _has_bits_[0] |= 0x00000400u;
}
inline void NotifyLoginSessionCmd::clear_has_language() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void NotifyLoginSessionCmd::clear_language() {
  language_ = 0u;
  clear_has_language();
}
inline ::google::protobuf::uint32 NotifyLoginSessionCmd::language() const {
  // @@protoc_insertion_point(field_get:Cmd.NotifyLoginSessionCmd.language)
  return language_;
}
inline void NotifyLoginSessionCmd::set_language(::google::protobuf::uint32 value) {
  set_has_language();
  language_ = value;
  // @@protoc_insertion_point(field_set:Cmd.NotifyLoginSessionCmd.language)
}

// optional bool realauthorized = 12;
inline bool NotifyLoginSessionCmd::has_realauthorized() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void NotifyLoginSessionCmd::set_has_realauthorized() {
  _has_bits_[0] |= 0x00000800u;
}
inline void NotifyLoginSessionCmd::clear_has_realauthorized() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void NotifyLoginSessionCmd::clear_realauthorized() {
  realauthorized_ = false;
  clear_has_realauthorized();
}
inline bool NotifyLoginSessionCmd::realauthorized() const {
  // @@protoc_insertion_point(field_get:Cmd.NotifyLoginSessionCmd.realauthorized)
  return realauthorized_;
}
inline void NotifyLoginSessionCmd::set_realauthorized(bool value) {
  set_has_realauthorized();
  realauthorized_ = value;
  // @@protoc_insertion_point(field_set:Cmd.NotifyLoginSessionCmd.realauthorized)
}

// optional uint32 maxbaselv = 13;
inline bool NotifyLoginSessionCmd::has_maxbaselv() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void NotifyLoginSessionCmd::set_has_maxbaselv() {
  _has_bits_[0] |= 0x00001000u;
}
inline void NotifyLoginSessionCmd::clear_has_maxbaselv() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void NotifyLoginSessionCmd::clear_maxbaselv() {
  maxbaselv_ = 0u;
  clear_has_maxbaselv();
}
inline ::google::protobuf::uint32 NotifyLoginSessionCmd::maxbaselv() const {
  // @@protoc_insertion_point(field_get:Cmd.NotifyLoginSessionCmd.maxbaselv)
  return maxbaselv_;
}
inline void NotifyLoginSessionCmd::set_maxbaselv(::google::protobuf::uint32 value) {
  set_has_maxbaselv();
  maxbaselv_ = value;
  // @@protoc_insertion_point(field_set:Cmd.NotifyLoginSessionCmd.maxbaselv)
}

// -------------------------------------------------------------------

// ErrSetUserDataSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool ErrSetUserDataSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ErrSetUserDataSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ErrSetUserDataSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ErrSetUserDataSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command ErrSetUserDataSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ErrSetUserDataSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ErrSetUserDataSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ErrSetUserDataSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_ERR_SET_USERDATA];
inline bool ErrSetUserDataSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ErrSetUserDataSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ErrSetUserDataSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ErrSetUserDataSessionCmd::clear_param() {
  param_ = 34;
  clear_has_param();
}
inline ::Cmd::SessionParam ErrSetUserDataSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ErrSetUserDataSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void ErrSetUserDataSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ErrSetUserDataSessionCmd.param)
}

// optional uint64 id = 3 [default = 0];
inline bool ErrSetUserDataSessionCmd::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ErrSetUserDataSessionCmd::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ErrSetUserDataSessionCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ErrSetUserDataSessionCmd::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 ErrSetUserDataSessionCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.ErrSetUserDataSessionCmd.id)
  return id_;
}
inline void ErrSetUserDataSessionCmd::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ErrSetUserDataSessionCmd.id)
}

// -------------------------------------------------------------------

// ChangeSceneSingleSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool ChangeSceneSingleSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeSceneSingleSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeSceneSingleSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeSceneSingleSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command ChangeSceneSingleSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeSceneSingleSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ChangeSceneSingleSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeSceneSingleSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_CHANGESCENE];
inline bool ChangeSceneSingleSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeSceneSingleSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeSceneSingleSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeSceneSingleSessionCmd::clear_param() {
  param_ = 35;
  clear_has_param();
}
inline ::Cmd::SessionParam ChangeSceneSingleSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeSceneSingleSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void ChangeSceneSingleSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeSceneSingleSessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool ChangeSceneSingleSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChangeSceneSingleSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChangeSceneSingleSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChangeSceneSingleSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ChangeSceneSingleSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeSceneSingleSessionCmd.charid)
  return charid_;
}
inline void ChangeSceneSingleSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeSceneSingleSessionCmd.charid)
}

// optional uint32 mapid = 4 [default = 0];
inline bool ChangeSceneSingleSessionCmd::has_mapid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChangeSceneSingleSessionCmd::set_has_mapid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChangeSceneSingleSessionCmd::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChangeSceneSingleSessionCmd::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 ChangeSceneSingleSessionCmd::mapid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeSceneSingleSessionCmd.mapid)
  return mapid_;
}
inline void ChangeSceneSingleSessionCmd::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeSceneSingleSessionCmd.mapid)
}

// -------------------------------------------------------------------

// RegMapFailSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool RegMapFailSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RegMapFailSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RegMapFailSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RegMapFailSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command RegMapFailSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.RegMapFailSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void RegMapFailSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RegMapFailSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_REGMAPFAIL];
inline bool RegMapFailSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RegMapFailSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RegMapFailSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RegMapFailSessionCmd::clear_param() {
  param_ = 36;
  clear_has_param();
}
inline ::Cmd::SessionParam RegMapFailSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.RegMapFailSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void RegMapFailSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RegMapFailSessionCmd.param)
}

// optional uint32 mapid = 3 [default = 0];
inline bool RegMapFailSessionCmd::has_mapid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RegMapFailSessionCmd::set_has_mapid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RegMapFailSessionCmd::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RegMapFailSessionCmd::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 RegMapFailSessionCmd::mapid() const {
  // @@protoc_insertion_point(field_get:Cmd.RegMapFailSessionCmd.mapid)
  return mapid_;
}
inline void RegMapFailSessionCmd::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RegMapFailSessionCmd.mapid)
}

// -------------------------------------------------------------------

// RegMapOKSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool RegMapOKSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RegMapOKSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RegMapOKSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RegMapOKSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command RegMapOKSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.RegMapOKSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void RegMapOKSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RegMapOKSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_REGMAPOK];
inline bool RegMapOKSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RegMapOKSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RegMapOKSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RegMapOKSessionCmd::clear_param() {
  param_ = 37;
  clear_has_param();
}
inline ::Cmd::SessionParam RegMapOKSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.RegMapOKSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void RegMapOKSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RegMapOKSessionCmd.param)
}

// optional uint32 mapid = 3 [default = 0];
inline bool RegMapOKSessionCmd::has_mapid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RegMapOKSessionCmd::set_has_mapid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RegMapOKSessionCmd::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RegMapOKSessionCmd::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 RegMapOKSessionCmd::mapid() const {
  // @@protoc_insertion_point(field_get:Cmd.RegMapOKSessionCmd.mapid)
  return mapid_;
}
inline void RegMapOKSessionCmd::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RegMapOKSessionCmd.mapid)
}

// -------------------------------------------------------------------

// ForwardUserSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool ForwardUserSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ForwardUserSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ForwardUserSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ForwardUserSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command ForwardUserSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardUserSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ForwardUserSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardUserSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_FORWARDUSER];
inline bool ForwardUserSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ForwardUserSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ForwardUserSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ForwardUserSessionCmd::clear_param() {
  param_ = 38;
  clear_has_param();
}
inline ::Cmd::SessionParam ForwardUserSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardUserSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void ForwardUserSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardUserSessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool ForwardUserSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ForwardUserSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ForwardUserSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ForwardUserSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ForwardUserSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardUserSessionCmd.charid)
  return charid_;
}
inline void ForwardUserSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardUserSessionCmd.charid)
}

// optional bytes data = 4;
inline bool ForwardUserSessionCmd::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ForwardUserSessionCmd::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ForwardUserSessionCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ForwardUserSessionCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& ForwardUserSessionCmd::data() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardUserSessionCmd.data)
  return *data_;
}
inline void ForwardUserSessionCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.ForwardUserSessionCmd.data)
}
inline void ForwardUserSessionCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.ForwardUserSessionCmd.data)
}
inline void ForwardUserSessionCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.ForwardUserSessionCmd.data)
}
inline ::std::string* ForwardUserSessionCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.ForwardUserSessionCmd.data)
  return data_;
}
inline ::std::string* ForwardUserSessionCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ForwardUserSessionCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ForwardUserSessionCmd.data)
}

// -------------------------------------------------------------------

// ForwardUserSceneSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool ForwardUserSceneSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ForwardUserSceneSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ForwardUserSceneSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ForwardUserSceneSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command ForwardUserSceneSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardUserSceneSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ForwardUserSceneSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardUserSceneSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_FORWARDUSERSCENE];
inline bool ForwardUserSceneSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ForwardUserSceneSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ForwardUserSceneSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ForwardUserSceneSessionCmd::clear_param() {
  param_ = 39;
  clear_has_param();
}
inline ::Cmd::SessionParam ForwardUserSceneSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardUserSceneSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void ForwardUserSceneSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardUserSceneSessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool ForwardUserSceneSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ForwardUserSceneSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ForwardUserSceneSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ForwardUserSceneSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ForwardUserSceneSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardUserSceneSessionCmd.charid)
  return charid_;
}
inline void ForwardUserSceneSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardUserSceneSessionCmd.charid)
}

// optional bytes data = 4;
inline bool ForwardUserSceneSessionCmd::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ForwardUserSceneSessionCmd::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ForwardUserSceneSessionCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ForwardUserSceneSessionCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& ForwardUserSceneSessionCmd::data() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardUserSceneSessionCmd.data)
  return *data_;
}
inline void ForwardUserSceneSessionCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.ForwardUserSceneSessionCmd.data)
}
inline void ForwardUserSceneSessionCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.ForwardUserSceneSessionCmd.data)
}
inline void ForwardUserSceneSessionCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.ForwardUserSceneSessionCmd.data)
}
inline ::std::string* ForwardUserSceneSessionCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.ForwardUserSceneSessionCmd.data)
  return data_;
}
inline ::std::string* ForwardUserSceneSessionCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ForwardUserSceneSessionCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ForwardUserSceneSessionCmd.data)
}

// -------------------------------------------------------------------

// ForwardUserSessionSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool ForwardUserSessionSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ForwardUserSessionSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ForwardUserSessionSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ForwardUserSessionSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command ForwardUserSessionSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardUserSessionSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ForwardUserSessionSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardUserSessionSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_FORWARDUSERSESSION];
inline bool ForwardUserSessionSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ForwardUserSessionSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ForwardUserSessionSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ForwardUserSessionSessionCmd::clear_param() {
  param_ = 40;
  clear_has_param();
}
inline ::Cmd::SessionParam ForwardUserSessionSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardUserSessionSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void ForwardUserSessionSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardUserSessionSessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool ForwardUserSessionSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ForwardUserSessionSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ForwardUserSessionSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ForwardUserSessionSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ForwardUserSessionSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardUserSessionSessionCmd.charid)
  return charid_;
}
inline void ForwardUserSessionSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardUserSessionSessionCmd.charid)
}

// optional bytes data = 4;
inline bool ForwardUserSessionSessionCmd::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ForwardUserSessionSessionCmd::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ForwardUserSessionSessionCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ForwardUserSessionSessionCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& ForwardUserSessionSessionCmd::data() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardUserSessionSessionCmd.data)
  return *data_;
}
inline void ForwardUserSessionSessionCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.ForwardUserSessionSessionCmd.data)
}
inline void ForwardUserSessionSessionCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.ForwardUserSessionSessionCmd.data)
}
inline void ForwardUserSessionSessionCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.ForwardUserSessionSessionCmd.data)
}
inline ::std::string* ForwardUserSessionSessionCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.ForwardUserSessionSessionCmd.data)
  return data_;
}
inline ::std::string* ForwardUserSessionSessionCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ForwardUserSessionSessionCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ForwardUserSessionSessionCmd.data)
}

// -------------------------------------------------------------------

// ForwardUserSceneSvrSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool ForwardUserSceneSvrSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ForwardUserSceneSvrSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ForwardUserSceneSvrSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ForwardUserSceneSvrSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command ForwardUserSceneSvrSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardUserSceneSvrSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ForwardUserSceneSvrSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardUserSceneSvrSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_FORWARDUSERSCENESVR];
inline bool ForwardUserSceneSvrSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ForwardUserSceneSvrSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ForwardUserSceneSvrSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ForwardUserSceneSvrSessionCmd::clear_param() {
  param_ = 41;
  clear_has_param();
}
inline ::Cmd::SessionParam ForwardUserSceneSvrSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardUserSceneSvrSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void ForwardUserSceneSvrSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardUserSceneSvrSessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool ForwardUserSceneSvrSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ForwardUserSceneSvrSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ForwardUserSceneSvrSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ForwardUserSceneSvrSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ForwardUserSceneSvrSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardUserSceneSvrSessionCmd.charid)
  return charid_;
}
inline void ForwardUserSceneSvrSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardUserSceneSvrSessionCmd.charid)
}

// optional bytes data = 4;
inline bool ForwardUserSceneSvrSessionCmd::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ForwardUserSceneSvrSessionCmd::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ForwardUserSceneSvrSessionCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ForwardUserSceneSvrSessionCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& ForwardUserSceneSvrSessionCmd::data() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardUserSceneSvrSessionCmd.data)
  return *data_;
}
inline void ForwardUserSceneSvrSessionCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.ForwardUserSceneSvrSessionCmd.data)
}
inline void ForwardUserSceneSvrSessionCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.ForwardUserSceneSvrSessionCmd.data)
}
inline void ForwardUserSceneSvrSessionCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.ForwardUserSceneSvrSessionCmd.data)
}
inline ::std::string* ForwardUserSceneSvrSessionCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.ForwardUserSceneSvrSessionCmd.data)
  return data_;
}
inline ::std::string* ForwardUserSceneSvrSessionCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ForwardUserSceneSvrSessionCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ForwardUserSceneSvrSessionCmd.data)
}

// -------------------------------------------------------------------

// EnterGuildTerritorySessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool EnterGuildTerritorySessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterGuildTerritorySessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterGuildTerritorySessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterGuildTerritorySessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command EnterGuildTerritorySessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterGuildTerritorySessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void EnterGuildTerritorySessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterGuildTerritorySessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_ENTERGUILD];
inline bool EnterGuildTerritorySessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterGuildTerritorySessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterGuildTerritorySessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterGuildTerritorySessionCmd::clear_param() {
  param_ = 50;
  clear_has_param();
}
inline ::Cmd::SessionParam EnterGuildTerritorySessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterGuildTerritorySessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void EnterGuildTerritorySessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterGuildTerritorySessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool EnterGuildTerritorySessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnterGuildTerritorySessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnterGuildTerritorySessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnterGuildTerritorySessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 EnterGuildTerritorySessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterGuildTerritorySessionCmd.charid)
  return charid_;
}
inline void EnterGuildTerritorySessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterGuildTerritorySessionCmd.charid)
}

// optional uint64 targetid = 4 [default = 0];
inline bool EnterGuildTerritorySessionCmd::has_targetid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EnterGuildTerritorySessionCmd::set_has_targetid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EnterGuildTerritorySessionCmd::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EnterGuildTerritorySessionCmd::clear_targetid() {
  targetid_ = GOOGLE_ULONGLONG(0);
  clear_has_targetid();
}
inline ::google::protobuf::uint64 EnterGuildTerritorySessionCmd::targetid() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterGuildTerritorySessionCmd.targetid)
  return targetid_;
}
inline void EnterGuildTerritorySessionCmd::set_targetid(::google::protobuf::uint64 value) {
  set_has_targetid();
  targetid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterGuildTerritorySessionCmd.targetid)
}

// -------------------------------------------------------------------

// SyncDojoSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool SyncDojoSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncDojoSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncDojoSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncDojoSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command SyncDojoSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncDojoSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SyncDojoSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncDojoSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_SYNC_DOJO];
inline bool SyncDojoSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncDojoSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncDojoSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncDojoSessionCmd::clear_param() {
  param_ = 52;
  clear_has_param();
}
inline ::Cmd::SessionParam SyncDojoSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncDojoSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void SyncDojoSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncDojoSessionCmd.param)
}

// optional uint64 teamguid = 3;
inline bool SyncDojoSessionCmd::has_teamguid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SyncDojoSessionCmd::set_has_teamguid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SyncDojoSessionCmd::clear_has_teamguid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SyncDojoSessionCmd::clear_teamguid() {
  teamguid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamguid();
}
inline ::google::protobuf::uint64 SyncDojoSessionCmd::teamguid() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncDojoSessionCmd.teamguid)
  return teamguid_;
}
inline void SyncDojoSessionCmd::set_teamguid(::google::protobuf::uint64 value) {
  set_has_teamguid();
  teamguid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncDojoSessionCmd.teamguid)
}

// optional uint32 dojoid = 4;
inline bool SyncDojoSessionCmd::has_dojoid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SyncDojoSessionCmd::set_has_dojoid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SyncDojoSessionCmd::clear_has_dojoid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SyncDojoSessionCmd::clear_dojoid() {
  dojoid_ = 0u;
  clear_has_dojoid();
}
inline ::google::protobuf::uint32 SyncDojoSessionCmd::dojoid() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncDojoSessionCmd.dojoid)
  return dojoid_;
}
inline void SyncDojoSessionCmd::set_dojoid(::google::protobuf::uint32 value) {
  set_has_dojoid();
  dojoid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncDojoSessionCmd.dojoid)
}

// optional uint64 sponsorid = 5;
inline bool SyncDojoSessionCmd::has_sponsorid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SyncDojoSessionCmd::set_has_sponsorid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SyncDojoSessionCmd::clear_has_sponsorid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SyncDojoSessionCmd::clear_sponsorid() {
  sponsorid_ = GOOGLE_ULONGLONG(0);
  clear_has_sponsorid();
}
inline ::google::protobuf::uint64 SyncDojoSessionCmd::sponsorid() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncDojoSessionCmd.sponsorid)
  return sponsorid_;
}
inline void SyncDojoSessionCmd::set_sponsorid(::google::protobuf::uint64 value) {
  set_has_sponsorid();
  sponsorid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncDojoSessionCmd.sponsorid)
}

// optional bool isopen = 6;
inline bool SyncDojoSessionCmd::has_isopen() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SyncDojoSessionCmd::set_has_isopen() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SyncDojoSessionCmd::clear_has_isopen() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SyncDojoSessionCmd::clear_isopen() {
  isopen_ = false;
  clear_has_isopen();
}
inline bool SyncDojoSessionCmd::isopen() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncDojoSessionCmd.isopen)
  return isopen_;
}
inline void SyncDojoSessionCmd::set_isopen(bool value) {
  set_has_isopen();
  isopen_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncDojoSessionCmd.isopen)
}

// optional uint64 guildid = 7;
inline bool SyncDojoSessionCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SyncDojoSessionCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SyncDojoSessionCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SyncDojoSessionCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 SyncDojoSessionCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncDojoSessionCmd.guildid)
  return guildid_;
}
inline void SyncDojoSessionCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncDojoSessionCmd.guildid)
}

// optional bool del = 8 [default = false];
inline bool SyncDojoSessionCmd::has_del() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SyncDojoSessionCmd::set_has_del() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SyncDojoSessionCmd::clear_has_del() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SyncDojoSessionCmd::clear_del() {
  del_ = false;
  clear_has_del();
}
inline bool SyncDojoSessionCmd::del() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncDojoSessionCmd.del)
  return del_;
}
inline void SyncDojoSessionCmd::set_del(bool value) {
  set_has_del();
  del_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncDojoSessionCmd.del)
}

// -------------------------------------------------------------------

// ChargeSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool ChargeSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChargeSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChargeSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChargeSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command ChargeSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ChargeSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ChargeSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChargeSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_CHARGE];
inline bool ChargeSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChargeSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChargeSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChargeSessionCmd::clear_param() {
  param_ = 54;
  clear_has_param();
}
inline ::Cmd::SessionParam ChargeSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ChargeSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void ChargeSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChargeSessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool ChargeSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChargeSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChargeSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChargeSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ChargeSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChargeSessionCmd.charid)
  return charid_;
}
inline void ChargeSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChargeSessionCmd.charid)
}

// optional float charge = 4 [default = 0];
inline bool ChargeSessionCmd::has_charge() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChargeSessionCmd::set_has_charge() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChargeSessionCmd::clear_has_charge() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChargeSessionCmd::clear_charge() {
  charge_ = 0;
  clear_has_charge();
}
inline float ChargeSessionCmd::charge() const {
  // @@protoc_insertion_point(field_get:Cmd.ChargeSessionCmd.charge)
  return charge_;
}
inline void ChargeSessionCmd::set_charge(float value) {
  set_has_charge();
  charge_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChargeSessionCmd.charge)
}

// optional uint32 itemid = 5;
inline bool ChargeSessionCmd::has_itemid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChargeSessionCmd::set_has_itemid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChargeSessionCmd::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChargeSessionCmd::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 ChargeSessionCmd::itemid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChargeSessionCmd.itemid)
  return itemid_;
}
inline void ChargeSessionCmd::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChargeSessionCmd.itemid)
}

// optional uint32 count = 6;
inline bool ChargeSessionCmd::has_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ChargeSessionCmd::set_has_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ChargeSessionCmd::clear_has_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ChargeSessionCmd::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 ChargeSessionCmd::count() const {
  // @@protoc_insertion_point(field_get:Cmd.ChargeSessionCmd.count)
  return count_;
}
inline void ChargeSessionCmd::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChargeSessionCmd.count)
}

// optional string source = 7;
inline bool ChargeSessionCmd::has_source() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ChargeSessionCmd::set_has_source() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ChargeSessionCmd::clear_has_source() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ChargeSessionCmd::clear_source() {
  if (source_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    source_->clear();
  }
  clear_has_source();
}
inline const ::std::string& ChargeSessionCmd::source() const {
  // @@protoc_insertion_point(field_get:Cmd.ChargeSessionCmd.source)
  return *source_;
}
inline void ChargeSessionCmd::set_source(const ::std::string& value) {
  set_has_source();
  if (source_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    source_ = new ::std::string;
  }
  source_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.ChargeSessionCmd.source)
}
inline void ChargeSessionCmd::set_source(const char* value) {
  set_has_source();
  if (source_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    source_ = new ::std::string;
  }
  source_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.ChargeSessionCmd.source)
}
inline void ChargeSessionCmd::set_source(const char* value, size_t size) {
  set_has_source();
  if (source_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    source_ = new ::std::string;
  }
  source_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.ChargeSessionCmd.source)
}
inline ::std::string* ChargeSessionCmd::mutable_source() {
  set_has_source();
  if (source_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    source_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.ChargeSessionCmd.source)
  return source_;
}
inline ::std::string* ChargeSessionCmd::release_source() {
  clear_has_source();
  if (source_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = source_;
    source_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ChargeSessionCmd::set_allocated_source(::std::string* source) {
  if (source_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete source_;
  }
  if (source) {
    set_has_source();
    source_ = source;
  } else {
    clear_has_source();
    source_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ChargeSessionCmd.source)
}

// optional string orderid = 8;
inline bool ChargeSessionCmd::has_orderid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ChargeSessionCmd::set_has_orderid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ChargeSessionCmd::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ChargeSessionCmd::clear_orderid() {
  if (orderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_->clear();
  }
  clear_has_orderid();
}
inline const ::std::string& ChargeSessionCmd::orderid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChargeSessionCmd.orderid)
  return *orderid_;
}
inline void ChargeSessionCmd::set_orderid(const ::std::string& value) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.ChargeSessionCmd.orderid)
}
inline void ChargeSessionCmd::set_orderid(const char* value) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.ChargeSessionCmd.orderid)
}
inline void ChargeSessionCmd::set_orderid(const char* value, size_t size) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.ChargeSessionCmd.orderid)
}
inline ::std::string* ChargeSessionCmd::mutable_orderid() {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.ChargeSessionCmd.orderid)
  return orderid_;
}
inline ::std::string* ChargeSessionCmd::release_orderid() {
  clear_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = orderid_;
    orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ChargeSessionCmd::set_allocated_orderid(::std::string* orderid) {
  if (orderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete orderid_;
  }
  if (orderid) {
    set_has_orderid();
    orderid_ = orderid;
  } else {
    clear_has_orderid();
    orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ChargeSessionCmd.orderid)
}

// optional uint32 dataid = 9;
inline bool ChargeSessionCmd::has_dataid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ChargeSessionCmd::set_has_dataid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ChargeSessionCmd::clear_has_dataid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ChargeSessionCmd::clear_dataid() {
  dataid_ = 0u;
  clear_has_dataid();
}
inline ::google::protobuf::uint32 ChargeSessionCmd::dataid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChargeSessionCmd.dataid)
  return dataid_;
}
inline void ChargeSessionCmd::set_dataid(::google::protobuf::uint32 value) {
  set_has_dataid();
  dataid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChargeSessionCmd.dataid)
}

// -------------------------------------------------------------------

// GagSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool GagSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GagSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GagSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GagSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command GagSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GagSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GagSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GagSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_GM_GAG];
inline bool GagSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GagSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GagSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GagSessionCmd::clear_param() {
  param_ = 55;
  clear_has_param();
}
inline ::Cmd::SessionParam GagSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GagSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void GagSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GagSessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool GagSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GagSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GagSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GagSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GagSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.GagSessionCmd.charid)
  return charid_;
}
inline void GagSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GagSessionCmd.charid)
}

// optional uint32 time = 4 [default = 0];
inline bool GagSessionCmd::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GagSessionCmd::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GagSessionCmd::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GagSessionCmd::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 GagSessionCmd::time() const {
  // @@protoc_insertion_point(field_get:Cmd.GagSessionCmd.time)
  return time_;
}
inline void GagSessionCmd::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GagSessionCmd.time)
}

// optional string reason = 5;
inline bool GagSessionCmd::has_reason() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GagSessionCmd::set_has_reason() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GagSessionCmd::clear_has_reason() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GagSessionCmd::clear_reason() {
  if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_->clear();
  }
  clear_has_reason();
}
inline const ::std::string& GagSessionCmd::reason() const {
  // @@protoc_insertion_point(field_get:Cmd.GagSessionCmd.reason)
  return *reason_;
}
inline void GagSessionCmd::set_reason(const ::std::string& value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GagSessionCmd.reason)
}
inline void GagSessionCmd::set_reason(const char* value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GagSessionCmd.reason)
}
inline void GagSessionCmd::set_reason(const char* value, size_t size) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GagSessionCmd.reason)
}
inline ::std::string* GagSessionCmd::mutable_reason() {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GagSessionCmd.reason)
  return reason_;
}
inline ::std::string* GagSessionCmd::release_reason() {
  clear_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = reason_;
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GagSessionCmd::set_allocated_reason(::std::string* reason) {
  if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reason_;
  }
  if (reason) {
    set_has_reason();
    reason_ = reason;
  } else {
    clear_has_reason();
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GagSessionCmd.reason)
}

// -------------------------------------------------------------------

// LockSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool LockSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LockSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LockSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LockSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command LockSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.LockSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void LockSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LockSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_GM_LOCK];
inline bool LockSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LockSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LockSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LockSessionCmd::clear_param() {
  param_ = 56;
  clear_has_param();
}
inline ::Cmd::SessionParam LockSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.LockSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void LockSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LockSessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool LockSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LockSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LockSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LockSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 LockSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.LockSessionCmd.charid)
  return charid_;
}
inline void LockSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LockSessionCmd.charid)
}

// optional uint32 time = 4 [default = 0];
inline bool LockSessionCmd::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LockSessionCmd::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LockSessionCmd::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LockSessionCmd::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 LockSessionCmd::time() const {
  // @@protoc_insertion_point(field_get:Cmd.LockSessionCmd.time)
  return time_;
}
inline void LockSessionCmd::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LockSessionCmd.time)
}

// optional string reason = 5;
inline bool LockSessionCmd::has_reason() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LockSessionCmd::set_has_reason() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LockSessionCmd::clear_has_reason() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LockSessionCmd::clear_reason() {
  if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_->clear();
  }
  clear_has_reason();
}
inline const ::std::string& LockSessionCmd::reason() const {
  // @@protoc_insertion_point(field_get:Cmd.LockSessionCmd.reason)
  return *reason_;
}
inline void LockSessionCmd::set_reason(const ::std::string& value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.LockSessionCmd.reason)
}
inline void LockSessionCmd::set_reason(const char* value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.LockSessionCmd.reason)
}
inline void LockSessionCmd::set_reason(const char* value, size_t size) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.LockSessionCmd.reason)
}
inline ::std::string* LockSessionCmd::mutable_reason() {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.LockSessionCmd.reason)
  return reason_;
}
inline ::std::string* LockSessionCmd::release_reason() {
  clear_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = reason_;
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LockSessionCmd::set_allocated_reason(::std::string* reason) {
  if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reason_;
  }
  if (reason) {
    set_has_reason();
    reason_ = reason;
  } else {
    clear_has_reason();
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.LockSessionCmd.reason)
}

// optional bool account = 6 [default = false];
inline bool LockSessionCmd::has_account() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LockSessionCmd::set_has_account() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LockSessionCmd::clear_has_account() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LockSessionCmd::clear_account() {
  account_ = false;
  clear_has_account();
}
inline bool LockSessionCmd::account() const {
  // @@protoc_insertion_point(field_get:Cmd.LockSessionCmd.account)
  return account_;
}
inline void LockSessionCmd::set_account(bool value) {
  set_has_account();
  account_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LockSessionCmd.account)
}

// -------------------------------------------------------------------

// IteamImageSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool IteamImageSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IteamImageSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IteamImageSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IteamImageSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command IteamImageSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.IteamImageSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void IteamImageSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.IteamImageSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_ITEMIMAGE];
inline bool IteamImageSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IteamImageSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IteamImageSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IteamImageSessionCmd::clear_param() {
  param_ = 59;
  clear_has_param();
}
inline ::Cmd::SessionParam IteamImageSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.IteamImageSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void IteamImageSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.IteamImageSessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool IteamImageSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IteamImageSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IteamImageSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IteamImageSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 IteamImageSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.IteamImageSessionCmd.charid)
  return charid_;
}
inline void IteamImageSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.IteamImageSessionCmd.charid)
}

// optional uint64 teamid = 4 [default = 0];
inline bool IteamImageSessionCmd::has_teamid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IteamImageSessionCmd::set_has_teamid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IteamImageSessionCmd::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IteamImageSessionCmd::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 IteamImageSessionCmd::teamid() const {
  // @@protoc_insertion_point(field_get:Cmd.IteamImageSessionCmd.teamid)
  return teamid_;
}
inline void IteamImageSessionCmd::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.IteamImageSessionCmd.teamid)
}

// -------------------------------------------------------------------

// FerrisInviteSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool FerrisInviteSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FerrisInviteSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FerrisInviteSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FerrisInviteSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command FerrisInviteSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.FerrisInviteSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void FerrisInviteSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FerrisInviteSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_FERRIS_INVITE];
inline bool FerrisInviteSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FerrisInviteSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FerrisInviteSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FerrisInviteSessionCmd::clear_param() {
  param_ = 60;
  clear_has_param();
}
inline ::Cmd::SessionParam FerrisInviteSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.FerrisInviteSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void FerrisInviteSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FerrisInviteSessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool FerrisInviteSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FerrisInviteSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FerrisInviteSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FerrisInviteSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 FerrisInviteSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.FerrisInviteSessionCmd.charid)
  return charid_;
}
inline void FerrisInviteSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FerrisInviteSessionCmd.charid)
}

// optional uint64 targetid = 4 [default = 0];
inline bool FerrisInviteSessionCmd::has_targetid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FerrisInviteSessionCmd::set_has_targetid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FerrisInviteSessionCmd::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FerrisInviteSessionCmd::clear_targetid() {
  targetid_ = GOOGLE_ULONGLONG(0);
  clear_has_targetid();
}
inline ::google::protobuf::uint64 FerrisInviteSessionCmd::targetid() const {
  // @@protoc_insertion_point(field_get:Cmd.FerrisInviteSessionCmd.targetid)
  return targetid_;
}
inline void FerrisInviteSessionCmd::set_targetid(::google::protobuf::uint64 value) {
  set_has_targetid();
  targetid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FerrisInviteSessionCmd.targetid)
}

// optional uint32 msgid = 5 [default = 0];
inline bool FerrisInviteSessionCmd::has_msgid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FerrisInviteSessionCmd::set_has_msgid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FerrisInviteSessionCmd::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FerrisInviteSessionCmd::clear_msgid() {
  msgid_ = 0u;
  clear_has_msgid();
}
inline ::google::protobuf::uint32 FerrisInviteSessionCmd::msgid() const {
  // @@protoc_insertion_point(field_get:Cmd.FerrisInviteSessionCmd.msgid)
  return msgid_;
}
inline void FerrisInviteSessionCmd::set_msgid(::google::protobuf::uint32 value) {
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FerrisInviteSessionCmd.msgid)
}

// optional uint32 id = 6 [default = 1];
inline bool FerrisInviteSessionCmd::has_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FerrisInviteSessionCmd::set_has_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FerrisInviteSessionCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FerrisInviteSessionCmd::clear_id() {
  id_ = 1u;
  clear_has_id();
}
inline ::google::protobuf::uint32 FerrisInviteSessionCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.FerrisInviteSessionCmd.id)
  return id_;
}
inline void FerrisInviteSessionCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FerrisInviteSessionCmd.id)
}

// -------------------------------------------------------------------

// EnterFerrisReadySessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool EnterFerrisReadySessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterFerrisReadySessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterFerrisReadySessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterFerrisReadySessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command EnterFerrisReadySessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterFerrisReadySessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void EnterFerrisReadySessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterFerrisReadySessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_FERRIS_READYENTER];
inline bool EnterFerrisReadySessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterFerrisReadySessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterFerrisReadySessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterFerrisReadySessionCmd::clear_param() {
  param_ = 61;
  clear_has_param();
}
inline ::Cmd::SessionParam EnterFerrisReadySessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterFerrisReadySessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void EnterFerrisReadySessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterFerrisReadySessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool EnterFerrisReadySessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnterFerrisReadySessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnterFerrisReadySessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnterFerrisReadySessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 EnterFerrisReadySessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterFerrisReadySessionCmd.charid)
  return charid_;
}
inline void EnterFerrisReadySessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterFerrisReadySessionCmd.charid)
}

// optional uint32 msgid = 4 [default = 0];
inline bool EnterFerrisReadySessionCmd::has_msgid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EnterFerrisReadySessionCmd::set_has_msgid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EnterFerrisReadySessionCmd::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EnterFerrisReadySessionCmd::clear_msgid() {
  msgid_ = 0u;
  clear_has_msgid();
}
inline ::google::protobuf::uint32 EnterFerrisReadySessionCmd::msgid() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterFerrisReadySessionCmd.msgid)
  return msgid_;
}
inline void EnterFerrisReadySessionCmd::set_msgid(::google::protobuf::uint32 value) {
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterFerrisReadySessionCmd.msgid)
}

// optional uint32 id = 5 [default = 1];
inline bool EnterFerrisReadySessionCmd::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EnterFerrisReadySessionCmd::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EnterFerrisReadySessionCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EnterFerrisReadySessionCmd::clear_id() {
  id_ = 1u;
  clear_has_id();
}
inline ::google::protobuf::uint32 EnterFerrisReadySessionCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterFerrisReadySessionCmd.id)
  return id_;
}
inline void EnterFerrisReadySessionCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterFerrisReadySessionCmd.id)
}

// -------------------------------------------------------------------

// ActivityTestAndSetSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool ActivityTestAndSetSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityTestAndSetSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityTestAndSetSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityTestAndSetSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command ActivityTestAndSetSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ActivityTestAndSetSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ActivityTestAndSetSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActivityTestAndSetSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_ACTIVITY_TESTANDSET];
inline bool ActivityTestAndSetSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActivityTestAndSetSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActivityTestAndSetSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActivityTestAndSetSessionCmd::clear_param() {
  param_ = 62;
  clear_has_param();
}
inline ::Cmd::SessionParam ActivityTestAndSetSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ActivityTestAndSetSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void ActivityTestAndSetSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActivityTestAndSetSessionCmd.param)
}

// optional uint32 id = 3;
inline bool ActivityTestAndSetSessionCmd::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActivityTestAndSetSessionCmd::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActivityTestAndSetSessionCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActivityTestAndSetSessionCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ActivityTestAndSetSessionCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.ActivityTestAndSetSessionCmd.id)
  return id_;
}
inline void ActivityTestAndSetSessionCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActivityTestAndSetSessionCmd.id)
}

// optional uint64 uid = 4;
inline bool ActivityTestAndSetSessionCmd::has_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActivityTestAndSetSessionCmd::set_has_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActivityTestAndSetSessionCmd::clear_has_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActivityTestAndSetSessionCmd::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 ActivityTestAndSetSessionCmd::uid() const {
  // @@protoc_insertion_point(field_get:Cmd.ActivityTestAndSetSessionCmd.uid)
  return uid_;
}
inline void ActivityTestAndSetSessionCmd::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActivityTestAndSetSessionCmd.uid)
}

// optional uint32 mapid = 5;
inline bool ActivityTestAndSetSessionCmd::has_mapid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ActivityTestAndSetSessionCmd::set_has_mapid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ActivityTestAndSetSessionCmd::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ActivityTestAndSetSessionCmd::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 ActivityTestAndSetSessionCmd::mapid() const {
  // @@protoc_insertion_point(field_get:Cmd.ActivityTestAndSetSessionCmd.mapid)
  return mapid_;
}
inline void ActivityTestAndSetSessionCmd::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActivityTestAndSetSessionCmd.mapid)
}

// optional uint32 starttime = 6;
inline bool ActivityTestAndSetSessionCmd::has_starttime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ActivityTestAndSetSessionCmd::set_has_starttime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ActivityTestAndSetSessionCmd::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ActivityTestAndSetSessionCmd::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 ActivityTestAndSetSessionCmd::starttime() const {
  // @@protoc_insertion_point(field_get:Cmd.ActivityTestAndSetSessionCmd.starttime)
  return starttime_;
}
inline void ActivityTestAndSetSessionCmd::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActivityTestAndSetSessionCmd.starttime)
}

// optional uint64 charid = 7;
inline bool ActivityTestAndSetSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ActivityTestAndSetSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ActivityTestAndSetSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ActivityTestAndSetSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ActivityTestAndSetSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.ActivityTestAndSetSessionCmd.charid)
  return charid_;
}
inline void ActivityTestAndSetSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActivityTestAndSetSessionCmd.charid)
}

// optional uint32 ret = 8;
inline bool ActivityTestAndSetSessionCmd::has_ret() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ActivityTestAndSetSessionCmd::set_has_ret() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ActivityTestAndSetSessionCmd::clear_has_ret() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ActivityTestAndSetSessionCmd::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 ActivityTestAndSetSessionCmd::ret() const {
  // @@protoc_insertion_point(field_get:Cmd.ActivityTestAndSetSessionCmd.ret)
  return ret_;
}
inline void ActivityTestAndSetSessionCmd::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActivityTestAndSetSessionCmd.ret)
}

// -------------------------------------------------------------------

// ActivityStatusSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool ActivityStatusSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityStatusSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityStatusSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityStatusSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command ActivityStatusSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ActivityStatusSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ActivityStatusSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActivityStatusSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_ACTIVITY_STATUS];
inline bool ActivityStatusSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActivityStatusSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActivityStatusSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActivityStatusSessionCmd::clear_param() {
  param_ = 63;
  clear_has_param();
}
inline ::Cmd::SessionParam ActivityStatusSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ActivityStatusSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void ActivityStatusSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActivityStatusSessionCmd.param)
}

// optional uint32 id = 3 [default = 0];
inline bool ActivityStatusSessionCmd::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActivityStatusSessionCmd::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActivityStatusSessionCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActivityStatusSessionCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ActivityStatusSessionCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.ActivityStatusSessionCmd.id)
  return id_;
}
inline void ActivityStatusSessionCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActivityStatusSessionCmd.id)
}

// optional uint32 mapid = 4 [default = 0];
inline bool ActivityStatusSessionCmd::has_mapid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActivityStatusSessionCmd::set_has_mapid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActivityStatusSessionCmd::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActivityStatusSessionCmd::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 ActivityStatusSessionCmd::mapid() const {
  // @@protoc_insertion_point(field_get:Cmd.ActivityStatusSessionCmd.mapid)
  return mapid_;
}
inline void ActivityStatusSessionCmd::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActivityStatusSessionCmd.mapid)
}

// optional bool start = 5 [default = false];
inline bool ActivityStatusSessionCmd::has_start() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ActivityStatusSessionCmd::set_has_start() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ActivityStatusSessionCmd::clear_has_start() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ActivityStatusSessionCmd::clear_start() {
  start_ = false;
  clear_has_start();
}
inline bool ActivityStatusSessionCmd::start() const {
  // @@protoc_insertion_point(field_get:Cmd.ActivityStatusSessionCmd.start)
  return start_;
}
inline void ActivityStatusSessionCmd::set_start(bool value) {
  set_has_start();
  start_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActivityStatusSessionCmd.start)
}

// -------------------------------------------------------------------

// ChangeTeamSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool ChangeTeamSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeTeamSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeTeamSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeTeamSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command ChangeTeamSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeTeamSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ChangeTeamSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeTeamSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_CHANGE_TEAM];
inline bool ChangeTeamSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeTeamSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeTeamSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeTeamSessionCmd::clear_param() {
  param_ = 64;
  clear_has_param();
}
inline ::Cmd::SessionParam ChangeTeamSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeTeamSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void ChangeTeamSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeTeamSessionCmd.param)
}

// optional bool join = 3 [default = true];
inline bool ChangeTeamSessionCmd::has_join() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChangeTeamSessionCmd::set_has_join() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChangeTeamSessionCmd::clear_has_join() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChangeTeamSessionCmd::clear_join() {
  join_ = true;
  clear_has_join();
}
inline bool ChangeTeamSessionCmd::join() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeTeamSessionCmd.join)
  return join_;
}
inline void ChangeTeamSessionCmd::set_join(bool value) {
  set_has_join();
  join_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeTeamSessionCmd.join)
}

// optional uint64 userid = 4 [default = 0];
inline bool ChangeTeamSessionCmd::has_userid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChangeTeamSessionCmd::set_has_userid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChangeTeamSessionCmd::clear_has_userid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChangeTeamSessionCmd::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
  clear_has_userid();
}
inline ::google::protobuf::uint64 ChangeTeamSessionCmd::userid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeTeamSessionCmd.userid)
  return userid_;
}
inline void ChangeTeamSessionCmd::set_userid(::google::protobuf::uint64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeTeamSessionCmd.userid)
}

// optional uint64 teamid = 5 [default = 0];
inline bool ChangeTeamSessionCmd::has_teamid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChangeTeamSessionCmd::set_has_teamid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChangeTeamSessionCmd::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChangeTeamSessionCmd::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 ChangeTeamSessionCmd::teamid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeTeamSessionCmd.teamid)
  return teamid_;
}
inline void ChangeTeamSessionCmd::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeTeamSessionCmd.teamid)
}

// -------------------------------------------------------------------

// ForwardRegionSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool ForwardRegionSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ForwardRegionSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ForwardRegionSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ForwardRegionSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command ForwardRegionSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardRegionSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ForwardRegionSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardRegionSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_FORWARD_REGION];
inline bool ForwardRegionSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ForwardRegionSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ForwardRegionSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ForwardRegionSessionCmd::clear_param() {
  param_ = 65;
  clear_has_param();
}
inline ::Cmd::SessionParam ForwardRegionSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardRegionSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void ForwardRegionSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardRegionSessionCmd.param)
}

// optional uint32 region_type = 3;
inline bool ForwardRegionSessionCmd::has_region_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ForwardRegionSessionCmd::set_has_region_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ForwardRegionSessionCmd::clear_has_region_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ForwardRegionSessionCmd::clear_region_type() {
  region_type_ = 0u;
  clear_has_region_type();
}
inline ::google::protobuf::uint32 ForwardRegionSessionCmd::region_type() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardRegionSessionCmd.region_type)
  return region_type_;
}
inline void ForwardRegionSessionCmd::set_region_type(::google::protobuf::uint32 value) {
  set_has_region_type();
  region_type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardRegionSessionCmd.region_type)
}

// optional bytes data = 4;
inline bool ForwardRegionSessionCmd::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ForwardRegionSessionCmd::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ForwardRegionSessionCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ForwardRegionSessionCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& ForwardRegionSessionCmd::data() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardRegionSessionCmd.data)
  return *data_;
}
inline void ForwardRegionSessionCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.ForwardRegionSessionCmd.data)
}
inline void ForwardRegionSessionCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.ForwardRegionSessionCmd.data)
}
inline void ForwardRegionSessionCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.ForwardRegionSessionCmd.data)
}
inline ::std::string* ForwardRegionSessionCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.ForwardRegionSessionCmd.data)
  return data_;
}
inline ::std::string* ForwardRegionSessionCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ForwardRegionSessionCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ForwardRegionSessionCmd.data)
}

// optional uint32 len = 5;
inline bool ForwardRegionSessionCmd::has_len() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ForwardRegionSessionCmd::set_has_len() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ForwardRegionSessionCmd::clear_has_len() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ForwardRegionSessionCmd::clear_len() {
  len_ = 0u;
  clear_has_len();
}
inline ::google::protobuf::uint32 ForwardRegionSessionCmd::len() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardRegionSessionCmd.len)
  return len_;
}
inline void ForwardRegionSessionCmd::set_len(::google::protobuf::uint32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardRegionSessionCmd.len)
}

// -------------------------------------------------------------------

// BreakHandSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool BreakHandSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BreakHandSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BreakHandSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BreakHandSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command BreakHandSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.BreakHandSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void BreakHandSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BreakHandSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_BREAK_HAND];
inline bool BreakHandSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BreakHandSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BreakHandSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BreakHandSessionCmd::clear_param() {
  param_ = 66;
  clear_has_param();
}
inline ::Cmd::SessionParam BreakHandSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.BreakHandSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void BreakHandSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BreakHandSessionCmd.param)
}

// optional uint64 userid = 3 [default = 0];
inline bool BreakHandSessionCmd::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BreakHandSessionCmd::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BreakHandSessionCmd::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BreakHandSessionCmd::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
  clear_has_userid();
}
inline ::google::protobuf::uint64 BreakHandSessionCmd::userid() const {
  // @@protoc_insertion_point(field_get:Cmd.BreakHandSessionCmd.userid)
  return userid_;
}
inline void BreakHandSessionCmd::set_userid(::google::protobuf::uint64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BreakHandSessionCmd.userid)
}

// -------------------------------------------------------------------

// ActivityStopSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool ActivityStopSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityStopSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityStopSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityStopSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command ActivityStopSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ActivityStopSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ActivityStopSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActivityStopSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_ACTIVITY_STOP];
inline bool ActivityStopSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActivityStopSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActivityStopSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActivityStopSessionCmd::clear_param() {
  param_ = 67;
  clear_has_param();
}
inline ::Cmd::SessionParam ActivityStopSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ActivityStopSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void ActivityStopSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActivityStopSessionCmd.param)
}

// optional uint32 id = 3;
inline bool ActivityStopSessionCmd::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActivityStopSessionCmd::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActivityStopSessionCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActivityStopSessionCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ActivityStopSessionCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.ActivityStopSessionCmd.id)
  return id_;
}
inline void ActivityStopSessionCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActivityStopSessionCmd.id)
}

// optional uint64 uid = 4;
inline bool ActivityStopSessionCmd::has_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActivityStopSessionCmd::set_has_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActivityStopSessionCmd::clear_has_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActivityStopSessionCmd::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 ActivityStopSessionCmd::uid() const {
  // @@protoc_insertion_point(field_get:Cmd.ActivityStopSessionCmd.uid)
  return uid_;
}
inline void ActivityStopSessionCmd::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActivityStopSessionCmd.uid)
}

// optional uint32 mapid = 5;
inline bool ActivityStopSessionCmd::has_mapid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ActivityStopSessionCmd::set_has_mapid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ActivityStopSessionCmd::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ActivityStopSessionCmd::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 ActivityStopSessionCmd::mapid() const {
  // @@protoc_insertion_point(field_get:Cmd.ActivityStopSessionCmd.mapid)
  return mapid_;
}
inline void ActivityStopSessionCmd::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActivityStopSessionCmd.mapid)
}

// -------------------------------------------------------------------

// WantedInfoSyncSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool WantedInfoSyncSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WantedInfoSyncSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WantedInfoSyncSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WantedInfoSyncSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command WantedInfoSyncSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.WantedInfoSyncSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void WantedInfoSyncSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WantedInfoSyncSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_WANTED_INFO_SYNC];
inline bool WantedInfoSyncSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WantedInfoSyncSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WantedInfoSyncSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WantedInfoSyncSessionCmd::clear_param() {
  param_ = 68;
  clear_has_param();
}
inline ::Cmd::SessionParam WantedInfoSyncSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.WantedInfoSyncSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void WantedInfoSyncSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WantedInfoSyncSessionCmd.param)
}

// optional bool active = 3 [default = false];
inline bool WantedInfoSyncSessionCmd::has_active() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WantedInfoSyncSessionCmd::set_has_active() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WantedInfoSyncSessionCmd::clear_has_active() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WantedInfoSyncSessionCmd::clear_active() {
  active_ = false;
  clear_has_active();
}
inline bool WantedInfoSyncSessionCmd::active() const {
  // @@protoc_insertion_point(field_get:Cmd.WantedInfoSyncSessionCmd.active)
  return active_;
}
inline void WantedInfoSyncSessionCmd::set_active(bool value) {
  set_has_active();
  active_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WantedInfoSyncSessionCmd.active)
}

// optional uint32 maxcount = 4 [default = 0];
inline bool WantedInfoSyncSessionCmd::has_maxcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WantedInfoSyncSessionCmd::set_has_maxcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WantedInfoSyncSessionCmd::clear_has_maxcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WantedInfoSyncSessionCmd::clear_maxcount() {
  maxcount_ = 0u;
  clear_has_maxcount();
}
inline ::google::protobuf::uint32 WantedInfoSyncSessionCmd::maxcount() const {
  // @@protoc_insertion_point(field_get:Cmd.WantedInfoSyncSessionCmd.maxcount)
  return maxcount_;
}
inline void WantedInfoSyncSessionCmd::set_maxcount(::google::protobuf::uint32 value) {
  set_has_maxcount();
  maxcount_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WantedInfoSyncSessionCmd.maxcount)
}

// -------------------------------------------------------------------

// QueryZoneStatusSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool QueryZoneStatusSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryZoneStatusSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryZoneStatusSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryZoneStatusSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command QueryZoneStatusSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryZoneStatusSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryZoneStatusSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryZoneStatusSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_ZONE_QUERYSTATUS];
inline bool QueryZoneStatusSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryZoneStatusSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryZoneStatusSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryZoneStatusSessionCmd::clear_param() {
  param_ = 69;
  clear_has_param();
}
inline ::Cmd::SessionParam QueryZoneStatusSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryZoneStatusSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void QueryZoneStatusSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryZoneStatusSessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool QueryZoneStatusSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryZoneStatusSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryZoneStatusSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryZoneStatusSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 QueryZoneStatusSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryZoneStatusSessionCmd.charid)
  return charid_;
}
inline void QueryZoneStatusSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryZoneStatusSessionCmd.charid)
}

// repeated .Cmd.ZoneInfo infos = 4;
inline int QueryZoneStatusSessionCmd::infos_size() const {
  return infos_.size();
}
inline void QueryZoneStatusSessionCmd::clear_infos() {
  infos_.Clear();
}
inline const ::Cmd::ZoneInfo& QueryZoneStatusSessionCmd::infos(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QueryZoneStatusSessionCmd.infos)
  return infos_.Get(index);
}
inline ::Cmd::ZoneInfo* QueryZoneStatusSessionCmd::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.QueryZoneStatusSessionCmd.infos)
  return infos_.Mutable(index);
}
inline ::Cmd::ZoneInfo* QueryZoneStatusSessionCmd::add_infos() {
  // @@protoc_insertion_point(field_add:Cmd.QueryZoneStatusSessionCmd.infos)
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ZoneInfo >&
QueryZoneStatusSessionCmd::infos() const {
  // @@protoc_insertion_point(field_list:Cmd.QueryZoneStatusSessionCmd.infos)
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ZoneInfo >*
QueryZoneStatusSessionCmd::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QueryZoneStatusSessionCmd.infos)
  return &infos_;
}

// -------------------------------------------------------------------

// SendMailFromScene

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool SendMailFromScene::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendMailFromScene::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendMailFromScene::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendMailFromScene::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command SendMailFromScene::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SendMailFromScene.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SendMailFromScene::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SendMailFromScene.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = CMDPARAM_SEND_MAIL_FROM_SCENE];
inline bool SendMailFromScene::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendMailFromScene::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendMailFromScene::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendMailFromScene::clear_param() {
  param_ = 70;
  clear_has_param();
}
inline ::Cmd::SessionParam SendMailFromScene::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SendMailFromScene.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void SendMailFromScene::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SendMailFromScene.param)
}

// optional .Cmd.MailData data = 3;
inline bool SendMailFromScene::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendMailFromScene::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendMailFromScene::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendMailFromScene::clear_data() {
  if (data_ != NULL) data_->::Cmd::MailData::Clear();
  clear_has_data();
}
inline const ::Cmd::MailData& SendMailFromScene::data() const {
  // @@protoc_insertion_point(field_get:Cmd.SendMailFromScene.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Cmd::MailData* SendMailFromScene::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Cmd::MailData;
  // @@protoc_insertion_point(field_mutable:Cmd.SendMailFromScene.data)
  return data_;
}
inline ::Cmd::MailData* SendMailFromScene::release_data() {
  clear_has_data();
  ::Cmd::MailData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void SendMailFromScene::set_allocated_data(::Cmd::MailData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.SendMailFromScene.data)
}

// -------------------------------------------------------------------

// GetTradeLogSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool GetTradeLogSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetTradeLogSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetTradeLogSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetTradeLogSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command GetTradeLogSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GetTradeLogSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GetTradeLogSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetTradeLogSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_GET_TRADELOG];
inline bool GetTradeLogSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetTradeLogSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetTradeLogSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetTradeLogSessionCmd::clear_param() {
  param_ = 71;
  clear_has_param();
}
inline ::Cmd::SessionParam GetTradeLogSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GetTradeLogSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void GetTradeLogSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetTradeLogSessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool GetTradeLogSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetTradeLogSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetTradeLogSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetTradeLogSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GetTradeLogSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.GetTradeLogSessionCmd.charid)
  return charid_;
}
inline void GetTradeLogSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetTradeLogSessionCmd.charid)
}

// optional uint64 id = 4 [default = 0];
inline bool GetTradeLogSessionCmd::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetTradeLogSessionCmd::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetTradeLogSessionCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetTradeLogSessionCmd::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 GetTradeLogSessionCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.GetTradeLogSessionCmd.id)
  return id_;
}
inline void GetTradeLogSessionCmd::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetTradeLogSessionCmd.id)
}

// optional .Cmd.EOperType logtype = 5;
inline bool GetTradeLogSessionCmd::has_logtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetTradeLogSessionCmd::set_has_logtype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetTradeLogSessionCmd::clear_has_logtype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetTradeLogSessionCmd::clear_logtype() {
  logtype_ = 0;
  clear_has_logtype();
}
inline ::Cmd::EOperType GetTradeLogSessionCmd::logtype() const {
  // @@protoc_insertion_point(field_get:Cmd.GetTradeLogSessionCmd.logtype)
  return static_cast< ::Cmd::EOperType >(logtype_);
}
inline void GetTradeLogSessionCmd::set_logtype(::Cmd::EOperType value) {
  assert(::Cmd::EOperType_IsValid(value));
  set_has_logtype();
  logtype_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetTradeLogSessionCmd.logtype)
}

// optional .Cmd.ItemInfo item = 6;
inline bool GetTradeLogSessionCmd::has_item() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetTradeLogSessionCmd::set_has_item() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetTradeLogSessionCmd::clear_has_item() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetTradeLogSessionCmd::clear_item() {
  if (item_ != NULL) item_->::Cmd::ItemInfo::Clear();
  clear_has_item();
}
inline const ::Cmd::ItemInfo& GetTradeLogSessionCmd::item() const {
  // @@protoc_insertion_point(field_get:Cmd.GetTradeLogSessionCmd.item)
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::Cmd::ItemInfo* GetTradeLogSessionCmd::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::Cmd::ItemInfo;
  // @@protoc_insertion_point(field_mutable:Cmd.GetTradeLogSessionCmd.item)
  return item_;
}
inline ::Cmd::ItemInfo* GetTradeLogSessionCmd::release_item() {
  clear_has_item();
  ::Cmd::ItemInfo* temp = item_;
  item_ = NULL;
  return temp;
}
inline void GetTradeLogSessionCmd::set_allocated_item(::Cmd::ItemInfo* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GetTradeLogSessionCmd.item)
}

// optional .Cmd.ItemData itemData = 7;
inline bool GetTradeLogSessionCmd::has_itemdata() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetTradeLogSessionCmd::set_has_itemdata() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetTradeLogSessionCmd::clear_has_itemdata() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetTradeLogSessionCmd::clear_itemdata() {
  if (itemdata_ != NULL) itemdata_->::Cmd::ItemData::Clear();
  clear_has_itemdata();
}
inline const ::Cmd::ItemData& GetTradeLogSessionCmd::itemdata() const {
  // @@protoc_insertion_point(field_get:Cmd.GetTradeLogSessionCmd.itemData)
  return itemdata_ != NULL ? *itemdata_ : *default_instance_->itemdata_;
}
inline ::Cmd::ItemData* GetTradeLogSessionCmd::mutable_itemdata() {
  set_has_itemdata();
  if (itemdata_ == NULL) itemdata_ = new ::Cmd::ItemData;
  // @@protoc_insertion_point(field_mutable:Cmd.GetTradeLogSessionCmd.itemData)
  return itemdata_;
}
inline ::Cmd::ItemData* GetTradeLogSessionCmd::release_itemdata() {
  clear_has_itemdata();
  ::Cmd::ItemData* temp = itemdata_;
  itemdata_ = NULL;
  return temp;
}
inline void GetTradeLogSessionCmd::set_allocated_itemdata(::Cmd::ItemData* itemdata) {
  delete itemdata_;
  itemdata_ = itemdata;
  if (itemdata) {
    set_has_itemdata();
  } else {
    clear_has_itemdata();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GetTradeLogSessionCmd.itemData)
}

// optional bool success = 8;
inline bool GetTradeLogSessionCmd::has_success() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GetTradeLogSessionCmd::set_has_success() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GetTradeLogSessionCmd::clear_has_success() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GetTradeLogSessionCmd::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool GetTradeLogSessionCmd::success() const {
  // @@protoc_insertion_point(field_get:Cmd.GetTradeLogSessionCmd.success)
  return success_;
}
inline void GetTradeLogSessionCmd::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetTradeLogSessionCmd.success)
}

// optional uint32 sell_item_id = 9;
inline bool GetTradeLogSessionCmd::has_sell_item_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GetTradeLogSessionCmd::set_has_sell_item_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GetTradeLogSessionCmd::clear_has_sell_item_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GetTradeLogSessionCmd::clear_sell_item_id() {
  sell_item_id_ = 0u;
  clear_has_sell_item_id();
}
inline ::google::protobuf::uint32 GetTradeLogSessionCmd::sell_item_id() const {
  // @@protoc_insertion_point(field_get:Cmd.GetTradeLogSessionCmd.sell_item_id)
  return sell_item_id_;
}
inline void GetTradeLogSessionCmd::set_sell_item_id(::google::protobuf::uint32 value) {
  set_has_sell_item_id();
  sell_item_id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetTradeLogSessionCmd.sell_item_id)
}

// optional uint64 sell_price = 10;
inline bool GetTradeLogSessionCmd::has_sell_price() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GetTradeLogSessionCmd::set_has_sell_price() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GetTradeLogSessionCmd::clear_has_sell_price() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GetTradeLogSessionCmd::clear_sell_price() {
  sell_price_ = GOOGLE_ULONGLONG(0);
  clear_has_sell_price();
}
inline ::google::protobuf::uint64 GetTradeLogSessionCmd::sell_price() const {
  // @@protoc_insertion_point(field_get:Cmd.GetTradeLogSessionCmd.sell_price)
  return sell_price_;
}
inline void GetTradeLogSessionCmd::set_sell_price(::google::protobuf::uint64 value) {
  set_has_sell_price();
  sell_price_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetTradeLogSessionCmd.sell_price)
}

// optional uint32 sell_count = 11;
inline bool GetTradeLogSessionCmd::has_sell_count() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GetTradeLogSessionCmd::set_has_sell_count() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GetTradeLogSessionCmd::clear_has_sell_count() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GetTradeLogSessionCmd::clear_sell_count() {
  sell_count_ = 0u;
  clear_has_sell_count();
}
inline ::google::protobuf::uint32 GetTradeLogSessionCmd::sell_count() const {
  // @@protoc_insertion_point(field_get:Cmd.GetTradeLogSessionCmd.sell_count)
  return sell_count_;
}
inline void GetTradeLogSessionCmd::set_sell_count(::google::protobuf::uint32 value) {
  set_has_sell_count();
  sell_count_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetTradeLogSessionCmd.sell_count)
}

// optional uint32 refine_lv = 12;
inline bool GetTradeLogSessionCmd::has_refine_lv() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GetTradeLogSessionCmd::set_has_refine_lv() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GetTradeLogSessionCmd::clear_has_refine_lv() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GetTradeLogSessionCmd::clear_refine_lv() {
  refine_lv_ = 0u;
  clear_has_refine_lv();
}
inline ::google::protobuf::uint32 GetTradeLogSessionCmd::refine_lv() const {
  // @@protoc_insertion_point(field_get:Cmd.GetTradeLogSessionCmd.refine_lv)
  return refine_lv_;
}
inline void GetTradeLogSessionCmd::set_refine_lv(::google::protobuf::uint32 value) {
  set_has_refine_lv();
  refine_lv_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetTradeLogSessionCmd.refine_lv)
}

// optional uint32 ret_cost = 13;
inline bool GetTradeLogSessionCmd::has_ret_cost() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GetTradeLogSessionCmd::set_has_ret_cost() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GetTradeLogSessionCmd::clear_has_ret_cost() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GetTradeLogSessionCmd::clear_ret_cost() {
  ret_cost_ = 0u;
  clear_has_ret_cost();
}
inline ::google::protobuf::uint32 GetTradeLogSessionCmd::ret_cost() const {
  // @@protoc_insertion_point(field_get:Cmd.GetTradeLogSessionCmd.ret_cost)
  return ret_cost_;
}
inline void GetTradeLogSessionCmd::set_ret_cost(::google::protobuf::uint32 value) {
  set_has_ret_cost();
  ret_cost_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetTradeLogSessionCmd.ret_cost)
}

// optional .Cmd.ETradeType trade_type = 14;
inline bool GetTradeLogSessionCmd::has_trade_type() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GetTradeLogSessionCmd::set_has_trade_type() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GetTradeLogSessionCmd::clear_has_trade_type() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GetTradeLogSessionCmd::clear_trade_type() {
  trade_type_ = 0;
  clear_has_trade_type();
}
inline ::Cmd::ETradeType GetTradeLogSessionCmd::trade_type() const {
  // @@protoc_insertion_point(field_get:Cmd.GetTradeLogSessionCmd.trade_type)
  return static_cast< ::Cmd::ETradeType >(trade_type_);
}
inline void GetTradeLogSessionCmd::set_trade_type(::Cmd::ETradeType value) {
  assert(::Cmd::ETradeType_IsValid(value));
  set_has_trade_type();
  trade_type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetTradeLogSessionCmd.trade_type)
}

// optional uint64 tax = 15;
inline bool GetTradeLogSessionCmd::has_tax() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GetTradeLogSessionCmd::set_has_tax() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GetTradeLogSessionCmd::clear_has_tax() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GetTradeLogSessionCmd::clear_tax() {
  tax_ = GOOGLE_ULONGLONG(0);
  clear_has_tax();
}
inline ::google::protobuf::uint64 GetTradeLogSessionCmd::tax() const {
  // @@protoc_insertion_point(field_get:Cmd.GetTradeLogSessionCmd.tax)
  return tax_;
}
inline void GetTradeLogSessionCmd::set_tax(::google::protobuf::uint64 value) {
  set_has_tax();
  tax_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetTradeLogSessionCmd.tax)
}

// optional uint64 quota = 16;
inline bool GetTradeLogSessionCmd::has_quota() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GetTradeLogSessionCmd::set_has_quota() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GetTradeLogSessionCmd::clear_has_quota() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GetTradeLogSessionCmd::clear_quota() {
  quota_ = GOOGLE_ULONGLONG(0);
  clear_has_quota();
}
inline ::google::protobuf::uint64 GetTradeLogSessionCmd::quota() const {
  // @@protoc_insertion_point(field_get:Cmd.GetTradeLogSessionCmd.quota)
  return quota_;
}
inline void GetTradeLogSessionCmd::set_quota(::google::protobuf::uint64 value) {
  set_has_quota();
  quota_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetTradeLogSessionCmd.quota)
}

// -------------------------------------------------------------------

// QuestRaidCloseSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool QuestRaidCloseSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestRaidCloseSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestRaidCloseSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestRaidCloseSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command QuestRaidCloseSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QuestRaidCloseSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QuestRaidCloseSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QuestRaidCloseSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_QUEST_RAID_CLOSE];
inline bool QuestRaidCloseSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuestRaidCloseSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuestRaidCloseSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuestRaidCloseSessionCmd::clear_param() {
  param_ = 73;
  clear_has_param();
}
inline ::Cmd::SessionParam QuestRaidCloseSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QuestRaidCloseSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void QuestRaidCloseSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QuestRaidCloseSessionCmd.param)
}

// optional uint64 userid = 3 [default = 0];
inline bool QuestRaidCloseSessionCmd::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QuestRaidCloseSessionCmd::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QuestRaidCloseSessionCmd::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QuestRaidCloseSessionCmd::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
  clear_has_userid();
}
inline ::google::protobuf::uint64 QuestRaidCloseSessionCmd::userid() const {
  // @@protoc_insertion_point(field_get:Cmd.QuestRaidCloseSessionCmd.userid)
  return userid_;
}
inline void QuestRaidCloseSessionCmd::set_userid(::google::protobuf::uint64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QuestRaidCloseSessionCmd.userid)
}

// optional uint32 raidid = 4 [default = 0];
inline bool QuestRaidCloseSessionCmd::has_raidid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QuestRaidCloseSessionCmd::set_has_raidid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QuestRaidCloseSessionCmd::clear_has_raidid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QuestRaidCloseSessionCmd::clear_raidid() {
  raidid_ = 0u;
  clear_has_raidid();
}
inline ::google::protobuf::uint32 QuestRaidCloseSessionCmd::raidid() const {
  // @@protoc_insertion_point(field_get:Cmd.QuestRaidCloseSessionCmd.raidid)
  return raidid_;
}
inline void QuestRaidCloseSessionCmd::set_raidid(::google::protobuf::uint32 value) {
  set_has_raidid();
  raidid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QuestRaidCloseSessionCmd.raidid)
}

// -------------------------------------------------------------------

// AuthorizeInfoSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool AuthorizeInfoSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthorizeInfoSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthorizeInfoSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthorizeInfoSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command AuthorizeInfoSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.AuthorizeInfoSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void AuthorizeInfoSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AuthorizeInfoSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_SYNC_AUTHORIZE];
inline bool AuthorizeInfoSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuthorizeInfoSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuthorizeInfoSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuthorizeInfoSessionCmd::clear_param() {
  param_ = 75;
  clear_has_param();
}
inline ::Cmd::SessionParam AuthorizeInfoSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.AuthorizeInfoSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void AuthorizeInfoSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AuthorizeInfoSessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool AuthorizeInfoSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AuthorizeInfoSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AuthorizeInfoSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AuthorizeInfoSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 AuthorizeInfoSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.AuthorizeInfoSessionCmd.charid)
  return charid_;
}
inline void AuthorizeInfoSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AuthorizeInfoSessionCmd.charid)
}

// optional bool ignorepwd = 4 [default = false];
inline bool AuthorizeInfoSessionCmd::has_ignorepwd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AuthorizeInfoSessionCmd::set_has_ignorepwd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AuthorizeInfoSessionCmd::clear_has_ignorepwd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AuthorizeInfoSessionCmd::clear_ignorepwd() {
  ignorepwd_ = false;
  clear_has_ignorepwd();
}
inline bool AuthorizeInfoSessionCmd::ignorepwd() const {
  // @@protoc_insertion_point(field_get:Cmd.AuthorizeInfoSessionCmd.ignorepwd)
  return ignorepwd_;
}
inline void AuthorizeInfoSessionCmd::set_ignorepwd(bool value) {
  set_has_ignorepwd();
  ignorepwd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AuthorizeInfoSessionCmd.ignorepwd)
}

// -------------------------------------------------------------------

// GuildRaidCloseSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool GuildRaidCloseSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRaidCloseSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRaidCloseSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRaidCloseSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command GuildRaidCloseSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildRaidCloseSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildRaidCloseSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildRaidCloseSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_GUILDRAID_CLOSE];
inline bool GuildRaidCloseSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildRaidCloseSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildRaidCloseSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildRaidCloseSessionCmd::clear_param() {
  param_ = 74;
  clear_has_param();
}
inline ::Cmd::SessionParam GuildRaidCloseSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildRaidCloseSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void GuildRaidCloseSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildRaidCloseSessionCmd.param)
}

// optional uint32 mapid = 3 [default = 0];
inline bool GuildRaidCloseSessionCmd::has_mapid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildRaidCloseSessionCmd::set_has_mapid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildRaidCloseSessionCmd::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildRaidCloseSessionCmd::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 GuildRaidCloseSessionCmd::mapid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildRaidCloseSessionCmd.mapid)
  return mapid_;
}
inline void GuildRaidCloseSessionCmd::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildRaidCloseSessionCmd.mapid)
}

// optional uint32 curmapindex = 4 [default = 0];
inline bool GuildRaidCloseSessionCmd::has_curmapindex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildRaidCloseSessionCmd::set_has_curmapindex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildRaidCloseSessionCmd::clear_has_curmapindex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildRaidCloseSessionCmd::clear_curmapindex() {
  curmapindex_ = 0u;
  clear_has_curmapindex();
}
inline ::google::protobuf::uint32 GuildRaidCloseSessionCmd::curmapindex() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildRaidCloseSessionCmd.curmapindex)
  return curmapindex_;
}
inline void GuildRaidCloseSessionCmd::set_curmapindex(::google::protobuf::uint32 value) {
  set_has_curmapindex();
  curmapindex_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildRaidCloseSessionCmd.curmapindex)
}

// optional uint64 guildid = 5 [default = 0];
inline bool GuildRaidCloseSessionCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildRaidCloseSessionCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildRaidCloseSessionCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildRaidCloseSessionCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 GuildRaidCloseSessionCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildRaidCloseSessionCmd.guildid)
  return guildid_;
}
inline void GuildRaidCloseSessionCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildRaidCloseSessionCmd.guildid)
}

// optional uint64 teamid = 6 [default = 0];
inline bool GuildRaidCloseSessionCmd::has_teamid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildRaidCloseSessionCmd::set_has_teamid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildRaidCloseSessionCmd::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildRaidCloseSessionCmd::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 GuildRaidCloseSessionCmd::teamid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildRaidCloseSessionCmd.teamid)
  return teamid_;
}
inline void GuildRaidCloseSessionCmd::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildRaidCloseSessionCmd.teamid)
}

// -------------------------------------------------------------------

// DeletePwdSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool DeletePwdSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeletePwdSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeletePwdSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeletePwdSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command DeletePwdSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.DeletePwdSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void DeletePwdSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DeletePwdSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_DELETE_AUTHORIZE];
inline bool DeletePwdSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeletePwdSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeletePwdSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeletePwdSessionCmd::clear_param() {
  param_ = 76;
  clear_has_param();
}
inline ::Cmd::SessionParam DeletePwdSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.DeletePwdSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void DeletePwdSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DeletePwdSessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool DeletePwdSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeletePwdSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeletePwdSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeletePwdSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 DeletePwdSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.DeletePwdSessionCmd.charid)
  return charid_;
}
inline void DeletePwdSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DeletePwdSessionCmd.charid)
}

// -------------------------------------------------------------------

// GoBackSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool GoBackSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GoBackSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GoBackSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GoBackSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command GoBackSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GoBackSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GoBackSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GoBackSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_GO_BACK];
inline bool GoBackSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GoBackSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GoBackSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GoBackSessionCmd::clear_param() {
  param_ = 77;
  clear_has_param();
}
inline ::Cmd::SessionParam GoBackSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GoBackSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void GoBackSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GoBackSessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool GoBackSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GoBackSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GoBackSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GoBackSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GoBackSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.GoBackSessionCmd.charid)
  return charid_;
}
inline void GoBackSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GoBackSessionCmd.charid)
}

// -------------------------------------------------------------------

// WantedQuestFinishCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool WantedQuestFinishCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WantedQuestFinishCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WantedQuestFinishCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WantedQuestFinishCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command WantedQuestFinishCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.WantedQuestFinishCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void WantedQuestFinishCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WantedQuestFinishCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_WANTED_QUEST_FINISH];
inline bool WantedQuestFinishCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WantedQuestFinishCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WantedQuestFinishCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WantedQuestFinishCmd::clear_param() {
  param_ = 78;
  clear_has_param();
}
inline ::Cmd::SessionParam WantedQuestFinishCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.WantedQuestFinishCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void WantedQuestFinishCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WantedQuestFinishCmd.param)
}

// optional uint64 leaderid = 3 [default = 0];
inline bool WantedQuestFinishCmd::has_leaderid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WantedQuestFinishCmd::set_has_leaderid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WantedQuestFinishCmd::clear_has_leaderid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WantedQuestFinishCmd::clear_leaderid() {
  leaderid_ = GOOGLE_ULONGLONG(0);
  clear_has_leaderid();
}
inline ::google::protobuf::uint64 WantedQuestFinishCmd::leaderid() const {
  // @@protoc_insertion_point(field_get:Cmd.WantedQuestFinishCmd.leaderid)
  return leaderid_;
}
inline void WantedQuestFinishCmd::set_leaderid(::google::protobuf::uint64 value) {
  set_has_leaderid();
  leaderid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WantedQuestFinishCmd.leaderid)
}

// optional uint64 teammateid = 4 [default = 0];
inline bool WantedQuestFinishCmd::has_teammateid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WantedQuestFinishCmd::set_has_teammateid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WantedQuestFinishCmd::clear_has_teammateid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WantedQuestFinishCmd::clear_teammateid() {
  teammateid_ = GOOGLE_ULONGLONG(0);
  clear_has_teammateid();
}
inline ::google::protobuf::uint64 WantedQuestFinishCmd::teammateid() const {
  // @@protoc_insertion_point(field_get:Cmd.WantedQuestFinishCmd.teammateid)
  return teammateid_;
}
inline void WantedQuestFinishCmd::set_teammateid(::google::protobuf::uint64 value) {
  set_has_teammateid();
  teammateid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WantedQuestFinishCmd.teammateid)
}

// -------------------------------------------------------------------

// AddOfflineItemSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool AddOfflineItemSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddOfflineItemSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddOfflineItemSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddOfflineItemSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command AddOfflineItemSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.AddOfflineItemSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void AddOfflineItemSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AddOfflineItemSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_ADD_OFFLINE_ITEM];
inline bool AddOfflineItemSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddOfflineItemSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddOfflineItemSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddOfflineItemSessionCmd::clear_param() {
  param_ = 79;
  clear_has_param();
}
inline ::Cmd::SessionParam AddOfflineItemSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.AddOfflineItemSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void AddOfflineItemSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AddOfflineItemSessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool AddOfflineItemSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddOfflineItemSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddOfflineItemSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddOfflineItemSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 AddOfflineItemSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.AddOfflineItemSessionCmd.charid)
  return charid_;
}
inline void AddOfflineItemSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AddOfflineItemSessionCmd.charid)
}

// optional .Cmd.ItemData data = 4;
inline bool AddOfflineItemSessionCmd::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddOfflineItemSessionCmd::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddOfflineItemSessionCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddOfflineItemSessionCmd::clear_data() {
  if (data_ != NULL) data_->::Cmd::ItemData::Clear();
  clear_has_data();
}
inline const ::Cmd::ItemData& AddOfflineItemSessionCmd::data() const {
  // @@protoc_insertion_point(field_get:Cmd.AddOfflineItemSessionCmd.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Cmd::ItemData* AddOfflineItemSessionCmd::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Cmd::ItemData;
  // @@protoc_insertion_point(field_mutable:Cmd.AddOfflineItemSessionCmd.data)
  return data_;
}
inline ::Cmd::ItemData* AddOfflineItemSessionCmd::release_data() {
  clear_has_data();
  ::Cmd::ItemData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void AddOfflineItemSessionCmd::set_allocated_data(::Cmd::ItemData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.AddOfflineItemSessionCmd.data)
}

// -------------------------------------------------------------------

// UpdateOperActivitySessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool UpdateOperActivitySessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateOperActivitySessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateOperActivitySessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateOperActivitySessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command UpdateOperActivitySessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateOperActivitySessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UpdateOperActivitySessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateOperActivitySessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_UPDATE_OPERACTIVITY];
inline bool UpdateOperActivitySessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateOperActivitySessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateOperActivitySessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateOperActivitySessionCmd::clear_param() {
  param_ = 81;
  clear_has_param();
}
inline ::Cmd::SessionParam UpdateOperActivitySessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateOperActivitySessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void UpdateOperActivitySessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateOperActivitySessionCmd.param)
}

// -------------------------------------------------------------------

// SessionShopData

// repeated uint32 old = 1;
inline int SessionShopData::old_size() const {
  return old_.size();
}
inline void SessionShopData::clear_old() {
  old_.Clear();
}
inline ::google::protobuf::uint32 SessionShopData::old(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SessionShopData.old)
  return old_.Get(index);
}
inline void SessionShopData::set_old(int index, ::google::protobuf::uint32 value) {
  old_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.SessionShopData.old)
}
inline void SessionShopData::add_old(::google::protobuf::uint32 value) {
  old_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.SessionShopData.old)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SessionShopData::old() const {
  // @@protoc_insertion_point(field_list:Cmd.SessionShopData.old)
  return old_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SessionShopData::mutable_old() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SessionShopData.old)
  return &old_;
}

// optional uint32 now = 2;
inline bool SessionShopData::has_now() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SessionShopData::set_has_now() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SessionShopData::clear_has_now() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SessionShopData::clear_now() {
  now_ = 0u;
  clear_has_now();
}
inline ::google::protobuf::uint32 SessionShopData::now() const {
  // @@protoc_insertion_point(field_get:Cmd.SessionShopData.now)
  return now_;
}
inline void SessionShopData::set_now(::google::protobuf::uint32 value) {
  set_has_now();
  now_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SessionShopData.now)
}

// -------------------------------------------------------------------

// SyncShopSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool SyncShopSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncShopSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncShopSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncShopSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command SyncShopSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncShopSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SyncShopSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncShopSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_SYNC_SHOP];
inline bool SyncShopSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncShopSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncShopSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncShopSessionCmd::clear_param() {
  param_ = 82;
  clear_has_param();
}
inline ::Cmd::SessionParam SyncShopSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncShopSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void SyncShopSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncShopSessionCmd.param)
}

// optional uint32 item = 3;
inline bool SyncShopSessionCmd::has_item() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SyncShopSessionCmd::set_has_item() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SyncShopSessionCmd::clear_has_item() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SyncShopSessionCmd::clear_item() {
  item_ = 0u;
  clear_has_item();
}
inline ::google::protobuf::uint32 SyncShopSessionCmd::item() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncShopSessionCmd.item)
  return item_;
}
inline void SyncShopSessionCmd::set_item(::google::protobuf::uint32 value) {
  set_has_item();
  item_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncShopSessionCmd.item)
}

// -------------------------------------------------------------------

// UpdateActivityEventSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool UpdateActivityEventSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateActivityEventSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateActivityEventSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateActivityEventSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command UpdateActivityEventSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateActivityEventSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UpdateActivityEventSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateActivityEventSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_UPDATE_ACTIVITYEVENT];
inline bool UpdateActivityEventSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateActivityEventSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateActivityEventSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateActivityEventSessionCmd::clear_param() {
  param_ = 87;
  clear_has_param();
}
inline ::Cmd::SessionParam UpdateActivityEventSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateActivityEventSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void UpdateActivityEventSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateActivityEventSessionCmd.param)
}

// -------------------------------------------------------------------

// ActivityEventNtfSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool ActivityEventNtfSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityEventNtfSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityEventNtfSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityEventNtfSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command ActivityEventNtfSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ActivityEventNtfSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ActivityEventNtfSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActivityEventNtfSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_ACTIVITYEVENT_NTF];
inline bool ActivityEventNtfSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActivityEventNtfSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActivityEventNtfSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActivityEventNtfSessionCmd::clear_param() {
  param_ = 88;
  clear_has_param();
}
inline ::Cmd::SessionParam ActivityEventNtfSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ActivityEventNtfSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void ActivityEventNtfSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActivityEventNtfSessionCmd.param)
}

// repeated .Cmd.ActivityEventInfo infos = 3;
inline int ActivityEventNtfSessionCmd::infos_size() const {
  return infos_.size();
}
inline void ActivityEventNtfSessionCmd::clear_infos() {
  infos_.Clear();
}
inline const ::Cmd::ActivityEventInfo& ActivityEventNtfSessionCmd::infos(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.ActivityEventNtfSessionCmd.infos)
  return infos_.Get(index);
}
inline ::Cmd::ActivityEventInfo* ActivityEventNtfSessionCmd::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.ActivityEventNtfSessionCmd.infos)
  return infos_.Mutable(index);
}
inline ::Cmd::ActivityEventInfo* ActivityEventNtfSessionCmd::add_infos() {
  // @@protoc_insertion_point(field_add:Cmd.ActivityEventNtfSessionCmd.infos)
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ActivityEventInfo >&
ActivityEventNtfSessionCmd::infos() const {
  // @@protoc_insertion_point(field_list:Cmd.ActivityEventNtfSessionCmd.infos)
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ActivityEventInfo >*
ActivityEventNtfSessionCmd::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.ActivityEventNtfSessionCmd.infos)
  return &infos_;
}

// -------------------------------------------------------------------

// LoveLetterSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool LoveLetterSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoveLetterSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoveLetterSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoveLetterSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command LoveLetterSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.LoveLetterSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void LoveLetterSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LoveLetterSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_LOVELETTER_USE];
inline bool LoveLetterSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoveLetterSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoveLetterSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoveLetterSessionCmd::clear_param() {
  param_ = 85;
  clear_has_param();
}
inline ::Cmd::SessionParam LoveLetterSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.LoveLetterSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void LoveLetterSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LoveLetterSessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool LoveLetterSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoveLetterSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoveLetterSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoveLetterSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 LoveLetterSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.LoveLetterSessionCmd.charid)
  return charid_;
}
inline void LoveLetterSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LoveLetterSessionCmd.charid)
}

// optional string itemguid = 4;
inline bool LoveLetterSessionCmd::has_itemguid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoveLetterSessionCmd::set_has_itemguid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoveLetterSessionCmd::clear_has_itemguid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoveLetterSessionCmd::clear_itemguid() {
  if (itemguid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemguid_->clear();
  }
  clear_has_itemguid();
}
inline const ::std::string& LoveLetterSessionCmd::itemguid() const {
  // @@protoc_insertion_point(field_get:Cmd.LoveLetterSessionCmd.itemguid)
  return *itemguid_;
}
inline void LoveLetterSessionCmd::set_itemguid(const ::std::string& value) {
  set_has_itemguid();
  if (itemguid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemguid_ = new ::std::string;
  }
  itemguid_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.LoveLetterSessionCmd.itemguid)
}
inline void LoveLetterSessionCmd::set_itemguid(const char* value) {
  set_has_itemguid();
  if (itemguid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemguid_ = new ::std::string;
  }
  itemguid_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.LoveLetterSessionCmd.itemguid)
}
inline void LoveLetterSessionCmd::set_itemguid(const char* value, size_t size) {
  set_has_itemguid();
  if (itemguid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemguid_ = new ::std::string;
  }
  itemguid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.LoveLetterSessionCmd.itemguid)
}
inline ::std::string* LoveLetterSessionCmd::mutable_itemguid() {
  set_has_itemguid();
  if (itemguid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemguid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.LoveLetterSessionCmd.itemguid)
  return itemguid_;
}
inline ::std::string* LoveLetterSessionCmd::release_itemguid() {
  clear_has_itemguid();
  if (itemguid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = itemguid_;
    itemguid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoveLetterSessionCmd::set_allocated_itemguid(::std::string* itemguid) {
  if (itemguid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete itemguid_;
  }
  if (itemguid) {
    set_has_itemguid();
    itemguid_ = itemguid;
  } else {
    clear_has_itemguid();
    itemguid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.LoveLetterSessionCmd.itemguid)
}

// optional uint64 targets = 5 [default = 0];
inline bool LoveLetterSessionCmd::has_targets() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoveLetterSessionCmd::set_has_targets() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoveLetterSessionCmd::clear_has_targets() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoveLetterSessionCmd::clear_targets() {
  targets_ = GOOGLE_ULONGLONG(0);
  clear_has_targets();
}
inline ::google::protobuf::uint64 LoveLetterSessionCmd::targets() const {
  // @@protoc_insertion_point(field_get:Cmd.LoveLetterSessionCmd.targets)
  return targets_;
}
inline void LoveLetterSessionCmd::set_targets(::google::protobuf::uint64 value) {
  set_has_targets();
  targets_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LoveLetterSessionCmd.targets)
}

// optional string content = 6;
inline bool LoveLetterSessionCmd::has_content() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LoveLetterSessionCmd::set_has_content() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LoveLetterSessionCmd::clear_has_content() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LoveLetterSessionCmd::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& LoveLetterSessionCmd::content() const {
  // @@protoc_insertion_point(field_get:Cmd.LoveLetterSessionCmd.content)
  return *content_;
}
inline void LoveLetterSessionCmd::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.LoveLetterSessionCmd.content)
}
inline void LoveLetterSessionCmd::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.LoveLetterSessionCmd.content)
}
inline void LoveLetterSessionCmd::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.LoveLetterSessionCmd.content)
}
inline ::std::string* LoveLetterSessionCmd::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.LoveLetterSessionCmd.content)
  return content_;
}
inline ::std::string* LoveLetterSessionCmd::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoveLetterSessionCmd::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.LoveLetterSessionCmd.content)
}

// optional .Cmd.ELetterType type = 7 [default = ELETTERTYPE_CHRISTMAS];
inline bool LoveLetterSessionCmd::has_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LoveLetterSessionCmd::set_has_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LoveLetterSessionCmd::clear_has_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LoveLetterSessionCmd::clear_type() {
  type_ = 3;
  clear_has_type();
}
inline ::Cmd::ELetterType LoveLetterSessionCmd::type() const {
  // @@protoc_insertion_point(field_get:Cmd.LoveLetterSessionCmd.type)
  return static_cast< ::Cmd::ELetterType >(type_);
}
inline void LoveLetterSessionCmd::set_type(::Cmd::ELetterType value) {
  assert(::Cmd::ELetterType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LoveLetterSessionCmd.type)
}

// -------------------------------------------------------------------

// LoveLetterSendSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool LoveLetterSendSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoveLetterSendSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoveLetterSendSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoveLetterSendSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command LoveLetterSendSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.LoveLetterSendSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void LoveLetterSendSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LoveLetterSendSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_LOVELETTER_SEND];
inline bool LoveLetterSendSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoveLetterSendSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoveLetterSendSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoveLetterSendSessionCmd::clear_param() {
  param_ = 86;
  clear_has_param();
}
inline ::Cmd::SessionParam LoveLetterSendSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.LoveLetterSendSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void LoveLetterSendSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LoveLetterSendSessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool LoveLetterSendSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoveLetterSendSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoveLetterSendSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoveLetterSendSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 LoveLetterSendSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.LoveLetterSendSessionCmd.charid)
  return charid_;
}
inline void LoveLetterSendSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LoveLetterSendSessionCmd.charid)
}

// optional string sendname = 4;
inline bool LoveLetterSendSessionCmd::has_sendname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoveLetterSendSessionCmd::set_has_sendname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoveLetterSendSessionCmd::clear_has_sendname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoveLetterSendSessionCmd::clear_sendname() {
  if (sendname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendname_->clear();
  }
  clear_has_sendname();
}
inline const ::std::string& LoveLetterSendSessionCmd::sendname() const {
  // @@protoc_insertion_point(field_get:Cmd.LoveLetterSendSessionCmd.sendname)
  return *sendname_;
}
inline void LoveLetterSendSessionCmd::set_sendname(const ::std::string& value) {
  set_has_sendname();
  if (sendname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendname_ = new ::std::string;
  }
  sendname_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.LoveLetterSendSessionCmd.sendname)
}
inline void LoveLetterSendSessionCmd::set_sendname(const char* value) {
  set_has_sendname();
  if (sendname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendname_ = new ::std::string;
  }
  sendname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.LoveLetterSendSessionCmd.sendname)
}
inline void LoveLetterSendSessionCmd::set_sendname(const char* value, size_t size) {
  set_has_sendname();
  if (sendname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendname_ = new ::std::string;
  }
  sendname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.LoveLetterSendSessionCmd.sendname)
}
inline ::std::string* LoveLetterSendSessionCmd::mutable_sendname() {
  set_has_sendname();
  if (sendname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.LoveLetterSendSessionCmd.sendname)
  return sendname_;
}
inline ::std::string* LoveLetterSendSessionCmd::release_sendname() {
  clear_has_sendname();
  if (sendname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sendname_;
    sendname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoveLetterSendSessionCmd::set_allocated_sendname(::std::string* sendname) {
  if (sendname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sendname_;
  }
  if (sendname) {
    set_has_sendname();
    sendname_ = sendname;
  } else {
    clear_has_sendname();
    sendname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.LoveLetterSendSessionCmd.sendname)
}

// optional string content = 5;
inline bool LoveLetterSendSessionCmd::has_content() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoveLetterSendSessionCmd::set_has_content() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoveLetterSendSessionCmd::clear_has_content() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoveLetterSendSessionCmd::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& LoveLetterSendSessionCmd::content() const {
  // @@protoc_insertion_point(field_get:Cmd.LoveLetterSendSessionCmd.content)
  return *content_;
}
inline void LoveLetterSendSessionCmd::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.LoveLetterSendSessionCmd.content)
}
inline void LoveLetterSendSessionCmd::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.LoveLetterSendSessionCmd.content)
}
inline void LoveLetterSendSessionCmd::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.LoveLetterSendSessionCmd.content)
}
inline ::std::string* LoveLetterSendSessionCmd::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.LoveLetterSendSessionCmd.content)
  return content_;
}
inline ::std::string* LoveLetterSendSessionCmd::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoveLetterSendSessionCmd::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.LoveLetterSendSessionCmd.content)
}

// optional .Cmd.ELetterType type = 6 [default = ELETTERTYPE_CHRISTMAS];
inline bool LoveLetterSendSessionCmd::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LoveLetterSendSessionCmd::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LoveLetterSendSessionCmd::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LoveLetterSendSessionCmd::clear_type() {
  type_ = 3;
  clear_has_type();
}
inline ::Cmd::ELetterType LoveLetterSendSessionCmd::type() const {
  // @@protoc_insertion_point(field_get:Cmd.LoveLetterSendSessionCmd.type)
  return static_cast< ::Cmd::ELetterType >(type_);
}
inline void LoveLetterSendSessionCmd::set_type(::Cmd::ELetterType value) {
  assert(::Cmd::ELetterType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LoveLetterSendSessionCmd.type)
}

// -------------------------------------------------------------------

// UseItemCodeSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool UseItemCodeSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UseItemCodeSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UseItemCodeSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UseItemCodeSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command UseItemCodeSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UseItemCodeSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UseItemCodeSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UseItemCodeSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_USE_ITEMCODE];
inline bool UseItemCodeSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UseItemCodeSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UseItemCodeSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UseItemCodeSessionCmd::clear_param() {
  param_ = 89;
  clear_has_param();
}
inline ::Cmd::SessionParam UseItemCodeSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UseItemCodeSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void UseItemCodeSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UseItemCodeSessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool UseItemCodeSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UseItemCodeSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UseItemCodeSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UseItemCodeSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 UseItemCodeSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.UseItemCodeSessionCmd.charid)
  return charid_;
}
inline void UseItemCodeSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UseItemCodeSessionCmd.charid)
}

// optional string guid = 4;
inline bool UseItemCodeSessionCmd::has_guid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UseItemCodeSessionCmd::set_has_guid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UseItemCodeSessionCmd::clear_has_guid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UseItemCodeSessionCmd::clear_guid() {
  if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_->clear();
  }
  clear_has_guid();
}
inline const ::std::string& UseItemCodeSessionCmd::guid() const {
  // @@protoc_insertion_point(field_get:Cmd.UseItemCodeSessionCmd.guid)
  return *guid_;
}
inline void UseItemCodeSessionCmd::set_guid(const ::std::string& value) {
  set_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_ = new ::std::string;
  }
  guid_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.UseItemCodeSessionCmd.guid)
}
inline void UseItemCodeSessionCmd::set_guid(const char* value) {
  set_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_ = new ::std::string;
  }
  guid_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.UseItemCodeSessionCmd.guid)
}
inline void UseItemCodeSessionCmd::set_guid(const char* value, size_t size) {
  set_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_ = new ::std::string;
  }
  guid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.UseItemCodeSessionCmd.guid)
}
inline ::std::string* UseItemCodeSessionCmd::mutable_guid() {
  set_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.UseItemCodeSessionCmd.guid)
  return guid_;
}
inline ::std::string* UseItemCodeSessionCmd::release_guid() {
  clear_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guid_;
    guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UseItemCodeSessionCmd::set_allocated_guid(::std::string* guid) {
  if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guid_;
  }
  if (guid) {
    set_has_guid();
    guid_ = guid;
  } else {
    clear_has_guid();
    guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.UseItemCodeSessionCmd.guid)
}

// optional uint32 itemid = 5;
inline bool UseItemCodeSessionCmd::has_itemid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UseItemCodeSessionCmd::set_has_itemid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UseItemCodeSessionCmd::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UseItemCodeSessionCmd::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 UseItemCodeSessionCmd::itemid() const {
  // @@protoc_insertion_point(field_get:Cmd.UseItemCodeSessionCmd.itemid)
  return itemid_;
}
inline void UseItemCodeSessionCmd::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UseItemCodeSessionCmd.itemid)
}

// optional uint32 type = 7 [default = 0];
inline bool UseItemCodeSessionCmd::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UseItemCodeSessionCmd::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UseItemCodeSessionCmd::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UseItemCodeSessionCmd::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 UseItemCodeSessionCmd::type() const {
  // @@protoc_insertion_point(field_get:Cmd.UseItemCodeSessionCmd.type)
  return type_;
}
inline void UseItemCodeSessionCmd::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UseItemCodeSessionCmd.type)
}

// optional string code = 6;
inline bool UseItemCodeSessionCmd::has_code() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UseItemCodeSessionCmd::set_has_code() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UseItemCodeSessionCmd::clear_has_code() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UseItemCodeSessionCmd::clear_code() {
  if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_->clear();
  }
  clear_has_code();
}
inline const ::std::string& UseItemCodeSessionCmd::code() const {
  // @@protoc_insertion_point(field_get:Cmd.UseItemCodeSessionCmd.code)
  return *code_;
}
inline void UseItemCodeSessionCmd::set_code(const ::std::string& value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.UseItemCodeSessionCmd.code)
}
inline void UseItemCodeSessionCmd::set_code(const char* value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.UseItemCodeSessionCmd.code)
}
inline void UseItemCodeSessionCmd::set_code(const char* value, size_t size) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.UseItemCodeSessionCmd.code)
}
inline ::std::string* UseItemCodeSessionCmd::mutable_code() {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.UseItemCodeSessionCmd.code)
  return code_;
}
inline ::std::string* UseItemCodeSessionCmd::release_code() {
  clear_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = code_;
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UseItemCodeSessionCmd::set_allocated_code(::std::string* code) {
  if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete code_;
  }
  if (code) {
    set_has_code();
    code_ = code;
  } else {
    clear_has_code();
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.UseItemCodeSessionCmd.code)
}

// -------------------------------------------------------------------

// ReqUsedItemCodeSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool ReqUsedItemCodeSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqUsedItemCodeSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqUsedItemCodeSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqUsedItemCodeSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command ReqUsedItemCodeSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ReqUsedItemCodeSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ReqUsedItemCodeSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ReqUsedItemCodeSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_REQ_USED_ITEMCODE];
inline bool ReqUsedItemCodeSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqUsedItemCodeSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqUsedItemCodeSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqUsedItemCodeSessionCmd::clear_param() {
  param_ = 90;
  clear_has_param();
}
inline ::Cmd::SessionParam ReqUsedItemCodeSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ReqUsedItemCodeSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void ReqUsedItemCodeSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ReqUsedItemCodeSessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool ReqUsedItemCodeSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqUsedItemCodeSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqUsedItemCodeSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqUsedItemCodeSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ReqUsedItemCodeSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.ReqUsedItemCodeSessionCmd.charid)
  return charid_;
}
inline void ReqUsedItemCodeSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ReqUsedItemCodeSessionCmd.charid)
}

// repeated string guid = 4;
inline int ReqUsedItemCodeSessionCmd::guid_size() const {
  return guid_.size();
}
inline void ReqUsedItemCodeSessionCmd::clear_guid() {
  guid_.Clear();
}
inline const ::std::string& ReqUsedItemCodeSessionCmd::guid(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.ReqUsedItemCodeSessionCmd.guid)
  return guid_.Get(index);
}
inline ::std::string* ReqUsedItemCodeSessionCmd::mutable_guid(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.ReqUsedItemCodeSessionCmd.guid)
  return guid_.Mutable(index);
}
inline void ReqUsedItemCodeSessionCmd::set_guid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Cmd.ReqUsedItemCodeSessionCmd.guid)
  guid_.Mutable(index)->assign(value);
}
inline void ReqUsedItemCodeSessionCmd::set_guid(int index, const char* value) {
  guid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.ReqUsedItemCodeSessionCmd.guid)
}
inline void ReqUsedItemCodeSessionCmd::set_guid(int index, const char* value, size_t size) {
  guid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.ReqUsedItemCodeSessionCmd.guid)
}
inline ::std::string* ReqUsedItemCodeSessionCmd::add_guid() {
  return guid_.Add();
}
inline void ReqUsedItemCodeSessionCmd::add_guid(const ::std::string& value) {
  guid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Cmd.ReqUsedItemCodeSessionCmd.guid)
}
inline void ReqUsedItemCodeSessionCmd::add_guid(const char* value) {
  guid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Cmd.ReqUsedItemCodeSessionCmd.guid)
}
inline void ReqUsedItemCodeSessionCmd::add_guid(const char* value, size_t size) {
  guid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Cmd.ReqUsedItemCodeSessionCmd.guid)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ReqUsedItemCodeSessionCmd::guid() const {
  // @@protoc_insertion_point(field_list:Cmd.ReqUsedItemCodeSessionCmd.guid)
  return guid_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ReqUsedItemCodeSessionCmd::mutable_guid() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.ReqUsedItemCodeSessionCmd.guid)
  return &guid_;
}

// optional uint32 type = 5 [default = 0];
inline bool ReqUsedItemCodeSessionCmd::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReqUsedItemCodeSessionCmd::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReqUsedItemCodeSessionCmd::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReqUsedItemCodeSessionCmd::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ReqUsedItemCodeSessionCmd::type() const {
  // @@protoc_insertion_point(field_get:Cmd.ReqUsedItemCodeSessionCmd.type)
  return type_;
}
inline void ReqUsedItemCodeSessionCmd::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ReqUsedItemCodeSessionCmd.type)
}

// -------------------------------------------------------------------

// GlobalActivityStartSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool GlobalActivityStartSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GlobalActivityStartSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GlobalActivityStartSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GlobalActivityStartSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command GlobalActivityStartSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GlobalActivityStartSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GlobalActivityStartSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GlobalActivityStartSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_GLOBALACTIVITY_START];
inline bool GlobalActivityStartSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GlobalActivityStartSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GlobalActivityStartSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GlobalActivityStartSessionCmd::clear_param() {
  param_ = 91;
  clear_has_param();
}
inline ::Cmd::SessionParam GlobalActivityStartSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GlobalActivityStartSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void GlobalActivityStartSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GlobalActivityStartSessionCmd.param)
}

// optional uint32 id = 3 [default = 0];
inline bool GlobalActivityStartSessionCmd::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GlobalActivityStartSessionCmd::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GlobalActivityStartSessionCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GlobalActivityStartSessionCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GlobalActivityStartSessionCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.GlobalActivityStartSessionCmd.id)
  return id_;
}
inline void GlobalActivityStartSessionCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GlobalActivityStartSessionCmd.id)
}

// -------------------------------------------------------------------

// GlobalActivityStopSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool GlobalActivityStopSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GlobalActivityStopSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GlobalActivityStopSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GlobalActivityStopSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command GlobalActivityStopSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GlobalActivityStopSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GlobalActivityStopSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GlobalActivityStopSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_GLOBALACTIVITY_STOP];
inline bool GlobalActivityStopSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GlobalActivityStopSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GlobalActivityStopSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GlobalActivityStopSessionCmd::clear_param() {
  param_ = 92;
  clear_has_param();
}
inline ::Cmd::SessionParam GlobalActivityStopSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GlobalActivityStopSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void GlobalActivityStopSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GlobalActivityStopSessionCmd.param)
}

// optional uint32 id = 4 [default = 0];
inline bool GlobalActivityStopSessionCmd::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GlobalActivityStopSessionCmd::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GlobalActivityStopSessionCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GlobalActivityStopSessionCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GlobalActivityStopSessionCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.GlobalActivityStopSessionCmd.id)
  return id_;
}
inline void GlobalActivityStopSessionCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GlobalActivityStopSessionCmd.id)
}

// -------------------------------------------------------------------

// ReqLotteryGiveSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool ReqLotteryGiveSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqLotteryGiveSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqLotteryGiveSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqLotteryGiveSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command ReqLotteryGiveSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ReqLotteryGiveSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ReqLotteryGiveSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ReqLotteryGiveSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_REQ_LOTTERY_GIVE];
inline bool ReqLotteryGiveSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqLotteryGiveSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqLotteryGiveSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqLotteryGiveSessionCmd::clear_param() {
  param_ = 93;
  clear_has_param();
}
inline ::Cmd::SessionParam ReqLotteryGiveSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ReqLotteryGiveSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void ReqLotteryGiveSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ReqLotteryGiveSessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool ReqLotteryGiveSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqLotteryGiveSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqLotteryGiveSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqLotteryGiveSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ReqLotteryGiveSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.ReqLotteryGiveSessionCmd.charid)
  return charid_;
}
inline void ReqLotteryGiveSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ReqLotteryGiveSessionCmd.charid)
}

// optional .Cmd.LotteryGiveInfo iteminfo = 4;
inline bool ReqLotteryGiveSessionCmd::has_iteminfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqLotteryGiveSessionCmd::set_has_iteminfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqLotteryGiveSessionCmd::clear_has_iteminfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqLotteryGiveSessionCmd::clear_iteminfo() {
  if (iteminfo_ != NULL) iteminfo_->::Cmd::LotteryGiveInfo::Clear();
  clear_has_iteminfo();
}
inline const ::Cmd::LotteryGiveInfo& ReqLotteryGiveSessionCmd::iteminfo() const {
  // @@protoc_insertion_point(field_get:Cmd.ReqLotteryGiveSessionCmd.iteminfo)
  return iteminfo_ != NULL ? *iteminfo_ : *default_instance_->iteminfo_;
}
inline ::Cmd::LotteryGiveInfo* ReqLotteryGiveSessionCmd::mutable_iteminfo() {
  set_has_iteminfo();
  if (iteminfo_ == NULL) iteminfo_ = new ::Cmd::LotteryGiveInfo;
  // @@protoc_insertion_point(field_mutable:Cmd.ReqLotteryGiveSessionCmd.iteminfo)
  return iteminfo_;
}
inline ::Cmd::LotteryGiveInfo* ReqLotteryGiveSessionCmd::release_iteminfo() {
  clear_has_iteminfo();
  ::Cmd::LotteryGiveInfo* temp = iteminfo_;
  iteminfo_ = NULL;
  return temp;
}
inline void ReqLotteryGiveSessionCmd::set_allocated_iteminfo(::Cmd::LotteryGiveInfo* iteminfo) {
  delete iteminfo_;
  iteminfo_ = iteminfo;
  if (iteminfo) {
    set_has_iteminfo();
  } else {
    clear_has_iteminfo();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ReqLotteryGiveSessionCmd.iteminfo)
}

// -------------------------------------------------------------------

// SyncOperateRewardSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool SyncOperateRewardSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncOperateRewardSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncOperateRewardSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncOperateRewardSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command SyncOperateRewardSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncOperateRewardSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SyncOperateRewardSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncOperateRewardSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_OPERATE_REWARD];
inline bool SyncOperateRewardSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncOperateRewardSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncOperateRewardSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncOperateRewardSessionCmd::clear_param() {
  param_ = 95;
  clear_has_param();
}
inline ::Cmd::SessionParam SyncOperateRewardSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncOperateRewardSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void SyncOperateRewardSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncOperateRewardSessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool SyncOperateRewardSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SyncOperateRewardSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SyncOperateRewardSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SyncOperateRewardSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 SyncOperateRewardSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncOperateRewardSessionCmd.charid)
  return charid_;
}
inline void SyncOperateRewardSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncOperateRewardSessionCmd.charid)
}

// optional uint32 var = 4 [default = 0];
inline bool SyncOperateRewardSessionCmd::has_var() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SyncOperateRewardSessionCmd::set_has_var() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SyncOperateRewardSessionCmd::clear_has_var() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SyncOperateRewardSessionCmd::clear_var() {
  var_ = 0u;
  clear_has_var();
}
inline ::google::protobuf::uint32 SyncOperateRewardSessionCmd::var() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncOperateRewardSessionCmd.var)
  return var_;
}
inline void SyncOperateRewardSessionCmd::set_var(::google::protobuf::uint32 value) {
  set_has_var();
  var_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncOperateRewardSessionCmd.var)
}

// -------------------------------------------------------------------

// NotifyActivitySessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool NotifyActivitySessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyActivitySessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyActivitySessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyActivitySessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command NotifyActivitySessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.NotifyActivitySessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void NotifyActivitySessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.NotifyActivitySessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_NOTIFY_ACTIVITY];
inline bool NotifyActivitySessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyActivitySessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyActivitySessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyActivitySessionCmd::clear_param() {
  param_ = 96;
  clear_has_param();
}
inline ::Cmd::SessionParam NotifyActivitySessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.NotifyActivitySessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void NotifyActivitySessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.NotifyActivitySessionCmd.param)
}

// optional uint32 actid = 3 [default = 0];
inline bool NotifyActivitySessionCmd::has_actid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyActivitySessionCmd::set_has_actid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyActivitySessionCmd::clear_has_actid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyActivitySessionCmd::clear_actid() {
  actid_ = 0u;
  clear_has_actid();
}
inline ::google::protobuf::uint32 NotifyActivitySessionCmd::actid() const {
  // @@protoc_insertion_point(field_get:Cmd.NotifyActivitySessionCmd.actid)
  return actid_;
}
inline void NotifyActivitySessionCmd::set_actid(::google::protobuf::uint32 value) {
  set_has_actid();
  actid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.NotifyActivitySessionCmd.actid)
}

// optional bool open = 4 [default = true];
inline bool NotifyActivitySessionCmd::has_open() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyActivitySessionCmd::set_has_open() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyActivitySessionCmd::clear_has_open() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyActivitySessionCmd::clear_open() {
  open_ = true;
  clear_has_open();
}
inline bool NotifyActivitySessionCmd::open() const {
  // @@protoc_insertion_point(field_get:Cmd.NotifyActivitySessionCmd.open)
  return open_;
}
inline void NotifyActivitySessionCmd::set_open(bool value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:Cmd.NotifyActivitySessionCmd.open)
}

// -------------------------------------------------------------------

// GiveRewardSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool GiveRewardSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GiveRewardSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GiveRewardSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GiveRewardSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command GiveRewardSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GiveRewardSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GiveRewardSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GiveRewardSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_GIVE_REWARD];
inline bool GiveRewardSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GiveRewardSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GiveRewardSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GiveRewardSessionCmd::clear_param() {
  param_ = 98;
  clear_has_param();
}
inline ::Cmd::SessionParam GiveRewardSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GiveRewardSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void GiveRewardSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GiveRewardSessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool GiveRewardSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GiveRewardSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GiveRewardSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GiveRewardSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GiveRewardSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.GiveRewardSessionCmd.charid)
  return charid_;
}
inline void GiveRewardSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GiveRewardSessionCmd.charid)
}

// optional uint32 rewardid = 4 [default = 0];
inline bool GiveRewardSessionCmd::has_rewardid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GiveRewardSessionCmd::set_has_rewardid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GiveRewardSessionCmd::clear_has_rewardid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GiveRewardSessionCmd::clear_rewardid() {
  rewardid_ = 0u;
  clear_has_rewardid();
}
inline ::google::protobuf::uint32 GiveRewardSessionCmd::rewardid() const {
  // @@protoc_insertion_point(field_get:Cmd.GiveRewardSessionCmd.rewardid)
  return rewardid_;
}
inline void GiveRewardSessionCmd::set_rewardid(::google::protobuf::uint32 value) {
  set_has_rewardid();
  rewardid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GiveRewardSessionCmd.rewardid)
}

// optional uint32 buffid = 5 [default = 0];
inline bool GiveRewardSessionCmd::has_buffid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GiveRewardSessionCmd::set_has_buffid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GiveRewardSessionCmd::clear_has_buffid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GiveRewardSessionCmd::clear_buffid() {
  buffid_ = 0u;
  clear_has_buffid();
}
inline ::google::protobuf::uint32 GiveRewardSessionCmd::buffid() const {
  // @@protoc_insertion_point(field_get:Cmd.GiveRewardSessionCmd.buffid)
  return buffid_;
}
inline void GiveRewardSessionCmd::set_buffid(::google::protobuf::uint32 value) {
  set_has_buffid();
  buffid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GiveRewardSessionCmd.buffid)
}

// -------------------------------------------------------------------

// WantedQuestSetCDSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool WantedQuestSetCDSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WantedQuestSetCDSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WantedQuestSetCDSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WantedQuestSetCDSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command WantedQuestSetCDSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.WantedQuestSetCDSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void WantedQuestSetCDSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WantedQuestSetCDSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_WANTED_QUEST_SET_CD];
inline bool WantedQuestSetCDSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WantedQuestSetCDSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WantedQuestSetCDSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WantedQuestSetCDSessionCmd::clear_param() {
  param_ = 97;
  clear_has_param();
}
inline ::Cmd::SessionParam WantedQuestSetCDSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.WantedQuestSetCDSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void WantedQuestSetCDSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WantedQuestSetCDSessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool WantedQuestSetCDSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WantedQuestSetCDSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WantedQuestSetCDSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WantedQuestSetCDSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 WantedQuestSetCDSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.WantedQuestSetCDSessionCmd.charid)
  return charid_;
}
inline void WantedQuestSetCDSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WantedQuestSetCDSessionCmd.charid)
}

// optional uint32 time = 4 [default = 0];
inline bool WantedQuestSetCDSessionCmd::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WantedQuestSetCDSessionCmd::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WantedQuestSetCDSessionCmd::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WantedQuestSetCDSessionCmd::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 WantedQuestSetCDSessionCmd::time() const {
  // @@protoc_insertion_point(field_get:Cmd.WantedQuestSetCDSessionCmd.time)
  return time_;
}
inline void WantedQuestSetCDSessionCmd::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WantedQuestSetCDSessionCmd.time)
}

// -------------------------------------------------------------------

// UserQuotaOperSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool UserQuotaOperSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserQuotaOperSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserQuotaOperSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserQuotaOperSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command UserQuotaOperSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UserQuotaOperSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UserQuotaOperSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserQuotaOperSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_USER_QUOTA_OPER];
inline bool UserQuotaOperSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserQuotaOperSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserQuotaOperSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserQuotaOperSessionCmd::clear_param() {
  param_ = 100;
  clear_has_param();
}
inline ::Cmd::SessionParam UserQuotaOperSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UserQuotaOperSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void UserQuotaOperSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserQuotaOperSessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool UserQuotaOperSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserQuotaOperSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserQuotaOperSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserQuotaOperSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 UserQuotaOperSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.UserQuotaOperSessionCmd.charid)
  return charid_;
}
inline void UserQuotaOperSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserQuotaOperSessionCmd.charid)
}

// optional uint64 quota = 4 [default = 0];
inline bool UserQuotaOperSessionCmd::has_quota() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserQuotaOperSessionCmd::set_has_quota() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserQuotaOperSessionCmd::clear_has_quota() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserQuotaOperSessionCmd::clear_quota() {
  quota_ = GOOGLE_ULONGLONG(0);
  clear_has_quota();
}
inline ::google::protobuf::uint64 UserQuotaOperSessionCmd::quota() const {
  // @@protoc_insertion_point(field_get:Cmd.UserQuotaOperSessionCmd.quota)
  return quota_;
}
inline void UserQuotaOperSessionCmd::set_quota(::google::protobuf::uint64 value) {
  set_has_quota();
  quota_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserQuotaOperSessionCmd.quota)
}

// optional .Cmd.EUserQuotaOper oper = 5 [default = EUSERQUOTAOPER_MIN];
inline bool UserQuotaOperSessionCmd::has_oper() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserQuotaOperSessionCmd::set_has_oper() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserQuotaOperSessionCmd::clear_has_oper() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserQuotaOperSessionCmd::clear_oper() {
  oper_ = 0;
  clear_has_oper();
}
inline ::Cmd::EUserQuotaOper UserQuotaOperSessionCmd::oper() const {
  // @@protoc_insertion_point(field_get:Cmd.UserQuotaOperSessionCmd.oper)
  return static_cast< ::Cmd::EUserQuotaOper >(oper_);
}
inline void UserQuotaOperSessionCmd::set_oper(::Cmd::EUserQuotaOper value) {
  assert(::Cmd::EUserQuotaOper_IsValid(value));
  set_has_oper();
  oper_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserQuotaOperSessionCmd.oper)
}

// optional .Cmd.EQuotaType type = 6 [default = EQuotaType_U_Give_Trade];
inline bool UserQuotaOperSessionCmd::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserQuotaOperSessionCmd::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserQuotaOperSessionCmd::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserQuotaOperSessionCmd::clear_type() {
  type_ = 12;
  clear_has_type();
}
inline ::Cmd::EQuotaType UserQuotaOperSessionCmd::type() const {
  // @@protoc_insertion_point(field_get:Cmd.UserQuotaOperSessionCmd.type)
  return static_cast< ::Cmd::EQuotaType >(type_);
}
inline void UserQuotaOperSessionCmd::set_type(::Cmd::EQuotaType value) {
  assert(::Cmd::EQuotaType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserQuotaOperSessionCmd.type)
}

// -------------------------------------------------------------------

// SyncWorldLevelSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool SyncWorldLevelSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncWorldLevelSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncWorldLevelSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncWorldLevelSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command SyncWorldLevelSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncWorldLevelSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SyncWorldLevelSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncWorldLevelSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_SYNC_WORLD_LEVEL];
inline bool SyncWorldLevelSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncWorldLevelSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncWorldLevelSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncWorldLevelSessionCmd::clear_param() {
  param_ = 99;
  clear_has_param();
}
inline ::Cmd::SessionParam SyncWorldLevelSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncWorldLevelSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void SyncWorldLevelSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncWorldLevelSessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool SyncWorldLevelSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SyncWorldLevelSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SyncWorldLevelSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SyncWorldLevelSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 SyncWorldLevelSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncWorldLevelSessionCmd.charid)
  return charid_;
}
inline void SyncWorldLevelSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncWorldLevelSessionCmd.charid)
}

// optional uint32 base_worldlevel = 4 [default = 0];
inline bool SyncWorldLevelSessionCmd::has_base_worldlevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SyncWorldLevelSessionCmd::set_has_base_worldlevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SyncWorldLevelSessionCmd::clear_has_base_worldlevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SyncWorldLevelSessionCmd::clear_base_worldlevel() {
  base_worldlevel_ = 0u;
  clear_has_base_worldlevel();
}
inline ::google::protobuf::uint32 SyncWorldLevelSessionCmd::base_worldlevel() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncWorldLevelSessionCmd.base_worldlevel)
  return base_worldlevel_;
}
inline void SyncWorldLevelSessionCmd::set_base_worldlevel(::google::protobuf::uint32 value) {
  set_has_base_worldlevel();
  base_worldlevel_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncWorldLevelSessionCmd.base_worldlevel)
}

// optional uint32 job_worldlevel = 5 [default = 0];
inline bool SyncWorldLevelSessionCmd::has_job_worldlevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SyncWorldLevelSessionCmd::set_has_job_worldlevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SyncWorldLevelSessionCmd::clear_has_job_worldlevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SyncWorldLevelSessionCmd::clear_job_worldlevel() {
  job_worldlevel_ = 0u;
  clear_has_job_worldlevel();
}
inline ::google::protobuf::uint32 SyncWorldLevelSessionCmd::job_worldlevel() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncWorldLevelSessionCmd.job_worldlevel)
  return job_worldlevel_;
}
inline void SyncWorldLevelSessionCmd::set_job_worldlevel(::google::protobuf::uint32 value) {
  set_has_job_worldlevel();
  job_worldlevel_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncWorldLevelSessionCmd.job_worldlevel)
}

// -------------------------------------------------------------------

// UserEnterSceneSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool UserEnterSceneSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserEnterSceneSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserEnterSceneSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserEnterSceneSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command UserEnterSceneSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UserEnterSceneSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UserEnterSceneSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserEnterSceneSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_USER_ENTERSCENE];
inline bool UserEnterSceneSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserEnterSceneSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserEnterSceneSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserEnterSceneSessionCmd::clear_param() {
  param_ = 102;
  clear_has_param();
}
inline ::Cmd::SessionParam UserEnterSceneSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UserEnterSceneSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void UserEnterSceneSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserEnterSceneSessionCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool UserEnterSceneSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserEnterSceneSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserEnterSceneSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserEnterSceneSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 UserEnterSceneSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.UserEnterSceneSessionCmd.charid)
  return charid_;
}
inline void UserEnterSceneSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserEnterSceneSessionCmd.charid)
}

// -------------------------------------------------------------------

// SyncUserVarSessionCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_PROTOCMD];
inline bool SyncUserVarSessionCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncUserVarSessionCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncUserVarSessionCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncUserVarSessionCmd::clear_cmd() {
  cmd_ = 202;
  clear_has_cmd();
}
inline ::Cmd::Command SyncUserVarSessionCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncUserVarSessionCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SyncUserVarSessionCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncUserVarSessionCmd.cmd)
}

// optional .Cmd.SessionParam param = 2 [default = SESSIONPARAM_USER_VAR_SYNC];
inline bool SyncUserVarSessionCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncUserVarSessionCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncUserVarSessionCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncUserVarSessionCmd::clear_param() {
  param_ = 101;
  clear_has_param();
}
inline ::Cmd::SessionParam SyncUserVarSessionCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncUserVarSessionCmd.param)
  return static_cast< ::Cmd::SessionParam >(param_);
}
inline void SyncUserVarSessionCmd::set_param(::Cmd::SessionParam value) {
  assert(::Cmd::SessionParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncUserVarSessionCmd.param)
}

// required uint64 charid = 3;
inline bool SyncUserVarSessionCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SyncUserVarSessionCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SyncUserVarSessionCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SyncUserVarSessionCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 SyncUserVarSessionCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncUserVarSessionCmd.charid)
  return charid_;
}
inline void SyncUserVarSessionCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncUserVarSessionCmd.charid)
}

// repeated .Cmd.Var vars = 4;
inline int SyncUserVarSessionCmd::vars_size() const {
  return vars_.size();
}
inline void SyncUserVarSessionCmd::clear_vars() {
  vars_.Clear();
}
inline const ::Cmd::Var& SyncUserVarSessionCmd::vars(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SyncUserVarSessionCmd.vars)
  return vars_.Get(index);
}
inline ::Cmd::Var* SyncUserVarSessionCmd::mutable_vars(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.SyncUserVarSessionCmd.vars)
  return vars_.Mutable(index);
}
inline ::Cmd::Var* SyncUserVarSessionCmd::add_vars() {
  // @@protoc_insertion_point(field_add:Cmd.SyncUserVarSessionCmd.vars)
  return vars_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::Var >&
SyncUserVarSessionCmd::vars() const {
  // @@protoc_insertion_point(field_list:Cmd.SyncUserVarSessionCmd.vars)
  return vars_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::Var >*
SyncUserVarSessionCmd::mutable_vars() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SyncUserVarSessionCmd.vars)
  return &vars_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cmd

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Cmd::SessionParam> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::SessionParam>() {
  return ::Cmd::SessionParam_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EGetMailOpt> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EGetMailOpt>() {
  return ::Cmd::EGetMailOpt_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EEventType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EEventType>() {
  return ::Cmd::EEventType_descriptor();
}
template <> struct is_proto_enum< ::Cmd::ESceneImageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::ESceneImageType>() {
  return ::Cmd::ESceneImageType_descriptor();
}
template <> struct is_proto_enum< ::Cmd::ESetSealStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::ESetSealStatus>() {
  return ::Cmd::ESetSealStatus_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SessionCmd_2eproto__INCLUDED
