// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserEvent.proto

#ifndef PROTOBUF_UserEvent_2eproto__INCLUDED
#define PROTOBUF_UserEvent_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "xCmd.pb.h"
#include "ProtoCommon.pb.h"
#include "SceneUser.pb.h"
#include "ActivityEvent.pb.h"
#include "SceneItem.pb.h"
// @@protoc_insertion_point(includes)

namespace Cmd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_UserEvent_2eproto();
void protobuf_AssignDesc_UserEvent_2eproto();
void protobuf_ShutdownFile_UserEvent_2eproto();

class FirstActionUserEvent;
class DamageNpcUserEvent;
class TitleData;
class NewTitle;
class AllTitle;
class UpdateRandomUserEvent;
class BuffDamageUserEvent;
class ChargeNtfUserEvent;
class DepositTypeData;
class DepositCardData;
class ChargeQueryCmd;
class DepositCardInfo;
class DelTransformUserEvent;
class InviteCatFailUserEvent;
class TrigNpcFuncUserEvent;
class SystemStringUserEvent;
class HandCatUserEvent;
class ChangeTitle;
class ChargeCntInfo;
class QueryChargeCnt;
class NTFMonthCardEnd;
class LoveLetterUse;
class ActivityCntItem;
class QueryActivityCnt;
class UpdateActivityCnt;
class VersionCardInfo;
class NtfVersionCardInfo;
class DieTimeCountEventCmd;
class GetFirstShareRewardUserEvent;
class QueryResetTimeEventCmd;
class InOutActEventCmd;
class UserEventMailCmd;
class LevelupDeadUserEvent;

enum EventParam {
  USER_EVENT_FIRST_ACTION = 1,
  USER_EVENT_ATTACK_NPC = 2,
  USER_EVENT_NEW_TITLE = 3,
  USER_EVENT_ALL_TITLE = 4,
  USER_EVENT_UPDATE_RANDOM = 5,
  USER_EVENT_BUFF_DAMAGE = 6,
  USER_EVENT_CHARGE_NTF = 7,
  USER_EVENT_CHARGE_QUERY = 8,
  USER_EVENT_DEPOSIT_CARD_INFO = 9,
  USER_EVENT_DEL_TRANSFORM = 10,
  USER_EVENT_INVITECAT_FAIL = 11,
  USER_EVENT_NPC_FUNCTION = 12,
  USER_EVENT_SYSTEM_STRING = 13,
  USER_EVENT_HAND_CAT = 14,
  USER_EVENT_CHANGE_TITLE = 15,
  USER_EVENT_QUERY_CHARGE_CNT = 16,
  USER_EVENT_NTF_MONTHCARD_END = 17,
  USER_EVENT_LOVELETTER_USE = 18,
  USER_EVENT_QUERY_ACTIVITY_CNT = 19,
  USER_EVENT_UPDATE_ACTIVITY_CNT = 20,
  USER_EVENT_GET_RECALL_SHARE_REWARD = 22,
  USER_EVENT_NTF_VERSION_CARD = 23,
  USER_EVENT_WAIT_RELIVE = 24,
  USER_EVENT_QUERY_RESETTIME = 25,
  USER_EVENT_INOUT_ACT = 26,
  USER_EVENT_MAIL = 27,
  USER_EVENT_LEVELUP_DEAD = 28
};
bool EventParam_IsValid(int value);
const EventParam EventParam_MIN = USER_EVENT_FIRST_ACTION;
const EventParam EventParam_MAX = USER_EVENT_LEVELUP_DEAD;
const int EventParam_ARRAYSIZE = EventParam_MAX + 1;

const ::google::protobuf::EnumDescriptor* EventParam_descriptor();
inline const ::std::string& EventParam_Name(EventParam value) {
  return ::google::protobuf::internal::NameOfEnum(
    EventParam_descriptor(), value);
}
inline bool EventParam_Parse(
    const ::std::string& name, EventParam* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EventParam>(
    EventParam_descriptor(), name, value);
}
enum EFirstActionType {
  EFIRSTACTION_MIN = 0,
  EFIRSTACTION_SKILL_OVERFLOW = 1,
  EFIRSTACTION_EXCHANGECARD = 2,
  EFIRSTACTION_COMPOSECARD = 3,
  EFIRSTACTION_COOKFOOD = 4,
  EFIRSTACTION_LOTTERY = 5,
  EFIRSTACTION_FOOD_MAIL = 6,
  EFIRSTACTION_LOTTERY_EQUIP = 7,
  EFIRSTACTION_LOTTERY_CARD = 8,
  EFIRSTACTION_LOTTERY_MAGIC = 9,
  EFIRSTACTION_RECALL_SHARE = 10,
  EFIRSTACTION_DECOMPOSECARD = 11,
  EFIRSTACTION_KFC_SHARE = 12
};
bool EFirstActionType_IsValid(int value);
const EFirstActionType EFirstActionType_MIN = EFIRSTACTION_MIN;
const EFirstActionType EFirstActionType_MAX = EFIRSTACTION_KFC_SHARE;
const int EFirstActionType_ARRAYSIZE = EFirstActionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EFirstActionType_descriptor();
inline const ::std::string& EFirstActionType_Name(EFirstActionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EFirstActionType_descriptor(), value);
}
inline bool EFirstActionType_Parse(
    const ::std::string& name, EFirstActionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EFirstActionType>(
    EFirstActionType_descriptor(), name, value);
}
enum ETitleType {
  ETITLE_TYPE_MIN = 0,
  ETITLE_TYPE_MANNUAL = 1,
  ETITLE_TYPE_ACHIEVEMENT = 2,
  ETITLE_TYPE_ACHIEVEMENT_ORDER = 3,
  ETITLE_TYPE_FOODCOOKER = 7,
  ETITLE_TYPE_FOODTASTER = 8,
  ETITLE_TYPE_MAX = 9
};
bool ETitleType_IsValid(int value);
const ETitleType ETitleType_MIN = ETITLE_TYPE_MIN;
const ETitleType ETitleType_MAX = ETITLE_TYPE_MAX;
const int ETitleType_ARRAYSIZE = ETitleType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ETitleType_descriptor();
inline const ::std::string& ETitleType_Name(ETitleType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ETitleType_descriptor(), value);
}
inline bool ETitleType_Parse(
    const ::std::string& name, ETitleType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ETitleType>(
    ETitleType_descriptor(), name, value);
}
enum EDepositState {
  EDEPOSITSTAT_NONE = 0,
  EDEPOSITSTAT_VALID = 1,
  EDEPOSITSTAT_INVALID = 2
};
bool EDepositState_IsValid(int value);
const EDepositState EDepositState_MIN = EDEPOSITSTAT_NONE;
const EDepositState EDepositState_MAX = EDEPOSITSTAT_INVALID;
const int EDepositState_ARRAYSIZE = EDepositState_MAX + 1;

const ::google::protobuf::EnumDescriptor* EDepositState_descriptor();
inline const ::std::string& EDepositState_Name(EDepositState value) {
  return ::google::protobuf::internal::NameOfEnum(
    EDepositState_descriptor(), value);
}
inline bool EDepositState_Parse(
    const ::std::string& name, EDepositState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EDepositState>(
    EDepositState_descriptor(), name, value);
}
enum ESystemStringType {
  ESYSTEMSTRING_MIN = 0,
  ESYSTEMSTRING_MEMO = 1
};
bool ESystemStringType_IsValid(int value);
const ESystemStringType ESystemStringType_MIN = ESYSTEMSTRING_MIN;
const ESystemStringType ESystemStringType_MAX = ESYSTEMSTRING_MEMO;
const int ESystemStringType_ARRAYSIZE = ESystemStringType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ESystemStringType_descriptor();
inline const ::std::string& ESystemStringType_Name(ESystemStringType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ESystemStringType_descriptor(), value);
}
inline bool ESystemStringType_Parse(
    const ::std::string& name, ESystemStringType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESystemStringType>(
    ESystemStringType_descriptor(), name, value);
}
enum EEventMailType {
  EEVENTMAILTYPE_MIN = 0,
  EEVENTMAILTYPE_DELCAHR = 1
};
bool EEventMailType_IsValid(int value);
const EEventMailType EEventMailType_MIN = EEVENTMAILTYPE_MIN;
const EEventMailType EEventMailType_MAX = EEVENTMAILTYPE_DELCAHR;
const int EEventMailType_ARRAYSIZE = EEventMailType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EEventMailType_descriptor();
inline const ::std::string& EEventMailType_Name(EEventMailType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EEventMailType_descriptor(), value);
}
inline bool EEventMailType_Parse(
    const ::std::string& name, EEventMailType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EEventMailType>(
    EEventMailType_descriptor(), name, value);
}
// ===================================================================

class FirstActionUserEvent : public ::google::protobuf::Message {
 public:
  FirstActionUserEvent();
  virtual ~FirstActionUserEvent();

  FirstActionUserEvent(const FirstActionUserEvent& from);

  inline FirstActionUserEvent& operator=(const FirstActionUserEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FirstActionUserEvent& default_instance();

  void Swap(FirstActionUserEvent* other);

  // implements Message ----------------------------------------------

  FirstActionUserEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FirstActionUserEvent& from);
  void MergeFrom(const FirstActionUserEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.EventParam param = 2 [default = USER_EVENT_FIRST_ACTION];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::EventParam param() const;
  inline void set_param(::Cmd::EventParam value);

  // optional uint32 firstaction = 3 [default = 0];
  inline bool has_firstaction() const;
  inline void clear_firstaction();
  static const int kFirstactionFieldNumber = 3;
  inline ::google::protobuf::uint32 firstaction() const;
  inline void set_firstaction(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.FirstActionUserEvent)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_firstaction();
  inline void clear_has_firstaction();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 firstaction_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static FirstActionUserEvent* default_instance_;
};
// -------------------------------------------------------------------

class DamageNpcUserEvent : public ::google::protobuf::Message {
 public:
  DamageNpcUserEvent();
  virtual ~DamageNpcUserEvent();

  DamageNpcUserEvent(const DamageNpcUserEvent& from);

  inline DamageNpcUserEvent& operator=(const DamageNpcUserEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DamageNpcUserEvent& default_instance();

  void Swap(DamageNpcUserEvent* other);

  // implements Message ----------------------------------------------

  DamageNpcUserEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DamageNpcUserEvent& from);
  void MergeFrom(const DamageNpcUserEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.EventParam param = 2 [default = USER_EVENT_ATTACK_NPC];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::EventParam param() const;
  inline void set_param(::Cmd::EventParam value);

  // optional uint64 npcguid = 3 [default = 0];
  inline bool has_npcguid() const;
  inline void clear_npcguid();
  static const int kNpcguidFieldNumber = 3;
  inline ::google::protobuf::uint64 npcguid() const;
  inline void set_npcguid(::google::protobuf::uint64 value);

  // optional uint64 userid = 4 [default = 0];
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 4;
  inline ::google::protobuf::uint64 userid() const;
  inline void set_userid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.DamageNpcUserEvent)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_npcguid();
  inline void clear_has_npcguid();
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 npcguid_;
  ::google::protobuf::uint64 userid_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static DamageNpcUserEvent* default_instance_;
};
// -------------------------------------------------------------------

class TitleData : public ::google::protobuf::Message {
 public:
  TitleData();
  virtual ~TitleData();

  TitleData(const TitleData& from);

  inline TitleData& operator=(const TitleData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TitleData& default_instance();

  void Swap(TitleData* other);

  // implements Message ----------------------------------------------

  TitleData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TitleData& from);
  void MergeFrom(const TitleData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.ETitleType title_type = 1;
  inline bool has_title_type() const;
  inline void clear_title_type();
  static const int kTitleTypeFieldNumber = 1;
  inline ::Cmd::ETitleType title_type() const;
  inline void set_title_type(::Cmd::ETitleType value);

  // optional uint32 id = 2 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 createtime = 3 [default = 0];
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 3;
  inline ::google::protobuf::uint32 createtime() const;
  inline void set_createtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.TitleData)
 private:
  inline void set_has_title_type();
  inline void clear_has_title_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_createtime();
  inline void clear_has_createtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int title_type_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 createtime_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static TitleData* default_instance_;
};
// -------------------------------------------------------------------

class NewTitle : public ::google::protobuf::Message {
 public:
  NewTitle();
  virtual ~NewTitle();

  NewTitle(const NewTitle& from);

  inline NewTitle& operator=(const NewTitle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewTitle& default_instance();

  void Swap(NewTitle* other);

  // implements Message ----------------------------------------------

  NewTitle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NewTitle& from);
  void MergeFrom(const NewTitle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.EventParam param = 2 [default = USER_EVENT_NEW_TITLE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::EventParam param() const;
  inline void set_param(::Cmd::EventParam value);

  // optional .Cmd.TitleData title_data = 3;
  inline bool has_title_data() const;
  inline void clear_title_data();
  static const int kTitleDataFieldNumber = 3;
  inline const ::Cmd::TitleData& title_data() const;
  inline ::Cmd::TitleData* mutable_title_data();
  inline ::Cmd::TitleData* release_title_data();
  inline void set_allocated_title_data(::Cmd::TitleData* title_data);

  // optional uint64 charid = 4;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 4;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.NewTitle)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_title_data();
  inline void clear_has_title_data();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::TitleData* title_data_;
  ::google::protobuf::uint64 charid_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static NewTitle* default_instance_;
};
// -------------------------------------------------------------------

class AllTitle : public ::google::protobuf::Message {
 public:
  AllTitle();
  virtual ~AllTitle();

  AllTitle(const AllTitle& from);

  inline AllTitle& operator=(const AllTitle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllTitle& default_instance();

  void Swap(AllTitle* other);

  // implements Message ----------------------------------------------

  AllTitle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllTitle& from);
  void MergeFrom(const AllTitle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.EventParam param = 2 [default = USER_EVENT_ALL_TITLE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::EventParam param() const;
  inline void set_param(::Cmd::EventParam value);

  // repeated .Cmd.TitleData title_datas = 3;
  inline int title_datas_size() const;
  inline void clear_title_datas();
  static const int kTitleDatasFieldNumber = 3;
  inline const ::Cmd::TitleData& title_datas(int index) const;
  inline ::Cmd::TitleData* mutable_title_datas(int index);
  inline ::Cmd::TitleData* add_title_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TitleData >&
      title_datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TitleData >*
      mutable_title_datas();

  // @@protoc_insertion_point(class_scope:Cmd.AllTitle)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TitleData > title_datas_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static AllTitle* default_instance_;
};
// -------------------------------------------------------------------

class UpdateRandomUserEvent : public ::google::protobuf::Message {
 public:
  UpdateRandomUserEvent();
  virtual ~UpdateRandomUserEvent();

  UpdateRandomUserEvent(const UpdateRandomUserEvent& from);

  inline UpdateRandomUserEvent& operator=(const UpdateRandomUserEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateRandomUserEvent& default_instance();

  void Swap(UpdateRandomUserEvent* other);

  // implements Message ----------------------------------------------

  UpdateRandomUserEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateRandomUserEvent& from);
  void MergeFrom(const UpdateRandomUserEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.EventParam param = 2 [default = USER_EVENT_UPDATE_RANDOM];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::EventParam param() const;
  inline void set_param(::Cmd::EventParam value);

  // optional uint32 beginindex = 3 [default = 0];
  inline bool has_beginindex() const;
  inline void clear_beginindex();
  static const int kBeginindexFieldNumber = 3;
  inline ::google::protobuf::uint32 beginindex() const;
  inline void set_beginindex(::google::protobuf::uint32 value);

  // optional uint32 endindex = 4 [default = 0];
  inline bool has_endindex() const;
  inline void clear_endindex();
  static const int kEndindexFieldNumber = 4;
  inline ::google::protobuf::uint32 endindex() const;
  inline void set_endindex(::google::protobuf::uint32 value);

  // repeated uint32 randoms = 5;
  inline int randoms_size() const;
  inline void clear_randoms();
  static const int kRandomsFieldNumber = 5;
  inline ::google::protobuf::uint32 randoms(int index) const;
  inline void set_randoms(int index, ::google::protobuf::uint32 value);
  inline void add_randoms(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      randoms() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_randoms();

  // @@protoc_insertion_point(class_scope:Cmd.UpdateRandomUserEvent)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_beginindex();
  inline void clear_has_beginindex();
  inline void set_has_endindex();
  inline void clear_has_endindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 beginindex_;
  ::google::protobuf::uint32 endindex_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > randoms_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static UpdateRandomUserEvent* default_instance_;
};
// -------------------------------------------------------------------

class BuffDamageUserEvent : public ::google::protobuf::Message {
 public:
  BuffDamageUserEvent();
  virtual ~BuffDamageUserEvent();

  BuffDamageUserEvent(const BuffDamageUserEvent& from);

  inline BuffDamageUserEvent& operator=(const BuffDamageUserEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuffDamageUserEvent& default_instance();

  void Swap(BuffDamageUserEvent* other);

  // implements Message ----------------------------------------------

  BuffDamageUserEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuffDamageUserEvent& from);
  void MergeFrom(const BuffDamageUserEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.EventParam param = 2 [default = USER_EVENT_BUFF_DAMAGE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::EventParam param() const;
  inline void set_param(::Cmd::EventParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional int32 damage = 4 [default = 0];
  inline bool has_damage() const;
  inline void clear_damage();
  static const int kDamageFieldNumber = 4;
  inline ::google::protobuf::int32 damage() const;
  inline void set_damage(::google::protobuf::int32 value);

  // optional .Cmd.DamageType etype = 5 [default = DAMAGE_TYPE_NORMAL];
  inline bool has_etype() const;
  inline void clear_etype();
  static const int kEtypeFieldNumber = 5;
  inline ::Cmd::DamageType etype() const;
  inline void set_etype(::Cmd::DamageType value);

  // @@protoc_insertion_point(class_scope:Cmd.BuffDamageUserEvent)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_damage();
  inline void clear_has_damage();
  inline void set_has_etype();
  inline void clear_has_etype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::int32 damage_;
  int etype_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static BuffDamageUserEvent* default_instance_;
};
// -------------------------------------------------------------------

class ChargeNtfUserEvent : public ::google::protobuf::Message {
 public:
  ChargeNtfUserEvent();
  virtual ~ChargeNtfUserEvent();

  ChargeNtfUserEvent(const ChargeNtfUserEvent& from);

  inline ChargeNtfUserEvent& operator=(const ChargeNtfUserEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChargeNtfUserEvent& default_instance();

  void Swap(ChargeNtfUserEvent* other);

  // implements Message ----------------------------------------------

  ChargeNtfUserEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChargeNtfUserEvent& from);
  void MergeFrom(const ChargeNtfUserEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.EventParam param = 2 [default = USER_EVENT_CHARGE_NTF];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::EventParam param() const;
  inline void set_param(::Cmd::EventParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 dataid = 4 [default = 0];
  inline bool has_dataid() const;
  inline void clear_dataid();
  static const int kDataidFieldNumber = 4;
  inline ::google::protobuf::uint32 dataid() const;
  inline void set_dataid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ChargeNtfUserEvent)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_dataid();
  inline void clear_has_dataid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 dataid_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static ChargeNtfUserEvent* default_instance_;
};
// -------------------------------------------------------------------

class DepositTypeData : public ::google::protobuf::Message {
 public:
  DepositTypeData();
  virtual ~DepositTypeData();

  DepositTypeData(const DepositTypeData& from);

  inline DepositTypeData& operator=(const DepositTypeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DepositTypeData& default_instance();

  void Swap(DepositTypeData* other);

  // implements Message ----------------------------------------------

  DepositTypeData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DepositTypeData& from);
  void MergeFrom(const DepositTypeData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.EDepositCardType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Cmd::EDepositCardType type() const;
  inline void set_type(::Cmd::EDepositCardType value);

  // optional uint32 expiretime = 2;
  inline bool has_expiretime() const;
  inline void clear_expiretime();
  static const int kExpiretimeFieldNumber = 2;
  inline ::google::protobuf::uint32 expiretime() const;
  inline void set_expiretime(::google::protobuf::uint32 value);

  // optional uint32 starttime = 3;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 3;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // optional .Cmd.EDepositState state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::Cmd::EDepositState state() const;
  inline void set_state(::Cmd::EDepositState value);

  // optional bool invalid = 5 [default = false];
  inline bool has_invalid() const;
  inline void clear_invalid();
  static const int kInvalidFieldNumber = 5;
  inline bool invalid() const;
  inline void set_invalid(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.DepositTypeData)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_expiretime();
  inline void clear_has_expiretime();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_invalid();
  inline void clear_has_invalid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 expiretime_;
  ::google::protobuf::uint32 starttime_;
  int state_;
  bool invalid_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static DepositTypeData* default_instance_;
};
// -------------------------------------------------------------------

class DepositCardData : public ::google::protobuf::Message {
 public:
  DepositCardData();
  virtual ~DepositCardData();

  DepositCardData(const DepositCardData& from);

  inline DepositCardData& operator=(const DepositCardData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DepositCardData& default_instance();

  void Swap(DepositCardData* other);

  // implements Message ----------------------------------------------

  DepositCardData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DepositCardData& from);
  void MergeFrom(const DepositCardData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 itemid = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 1;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // optional bool isused = 2 [default = false];
  inline bool has_isused() const;
  inline void clear_isused();
  static const int kIsusedFieldNumber = 2;
  inline bool isused() const;
  inline void set_isused(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.DepositCardData)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_isused();
  inline void clear_has_isused();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 itemid_;
  bool isused_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static DepositCardData* default_instance_;
};
// -------------------------------------------------------------------

class ChargeQueryCmd : public ::google::protobuf::Message {
 public:
  ChargeQueryCmd();
  virtual ~ChargeQueryCmd();

  ChargeQueryCmd(const ChargeQueryCmd& from);

  inline ChargeQueryCmd& operator=(const ChargeQueryCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChargeQueryCmd& default_instance();

  void Swap(ChargeQueryCmd* other);

  // implements Message ----------------------------------------------

  ChargeQueryCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChargeQueryCmd& from);
  void MergeFrom(const ChargeQueryCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.EventParam param = 2 [default = USER_EVENT_CHARGE_QUERY];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::EventParam param() const;
  inline void set_param(::Cmd::EventParam value);

  // optional uint32 data_id = 3;
  inline bool has_data_id() const;
  inline void clear_data_id();
  static const int kDataIdFieldNumber = 3;
  inline ::google::protobuf::uint32 data_id() const;
  inline void set_data_id(::google::protobuf::uint32 value);

  // optional bool ret = 4;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 4;
  inline bool ret() const;
  inline void set_ret(bool value);

  // optional uint32 charged_count = 5;
  inline bool has_charged_count() const;
  inline void clear_charged_count();
  static const int kChargedCountFieldNumber = 5;
  inline ::google::protobuf::uint32 charged_count() const;
  inline void set_charged_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ChargeQueryCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_data_id();
  inline void clear_has_data_id();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_charged_count();
  inline void clear_has_charged_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 data_id_;
  bool ret_;
  ::google::protobuf::uint32 charged_count_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static ChargeQueryCmd* default_instance_;
};
// -------------------------------------------------------------------

class DepositCardInfo : public ::google::protobuf::Message {
 public:
  DepositCardInfo();
  virtual ~DepositCardInfo();

  DepositCardInfo(const DepositCardInfo& from);

  inline DepositCardInfo& operator=(const DepositCardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DepositCardInfo& default_instance();

  void Swap(DepositCardInfo* other);

  // implements Message ----------------------------------------------

  DepositCardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DepositCardInfo& from);
  void MergeFrom(const DepositCardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.EventParam param = 2 [default = USER_EVENT_DEPOSIT_CARD_INFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::EventParam param() const;
  inline void set_param(::Cmd::EventParam value);

  // repeated .Cmd.DepositTypeData card_datas = 3;
  inline int card_datas_size() const;
  inline void clear_card_datas();
  static const int kCardDatasFieldNumber = 3;
  inline const ::Cmd::DepositTypeData& card_datas(int index) const;
  inline ::Cmd::DepositTypeData* mutable_card_datas(int index);
  inline ::Cmd::DepositTypeData* add_card_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::DepositTypeData >&
      card_datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::DepositTypeData >*
      mutable_card_datas();

  // @@protoc_insertion_point(class_scope:Cmd.DepositCardInfo)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::DepositTypeData > card_datas_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static DepositCardInfo* default_instance_;
};
// -------------------------------------------------------------------

class DelTransformUserEvent : public ::google::protobuf::Message {
 public:
  DelTransformUserEvent();
  virtual ~DelTransformUserEvent();

  DelTransformUserEvent(const DelTransformUserEvent& from);

  inline DelTransformUserEvent& operator=(const DelTransformUserEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelTransformUserEvent& default_instance();

  void Swap(DelTransformUserEvent* other);

  // implements Message ----------------------------------------------

  DelTransformUserEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DelTransformUserEvent& from);
  void MergeFrom(const DelTransformUserEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.EventParam param = 2 [default = USER_EVENT_DEL_TRANSFORM];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::EventParam param() const;
  inline void set_param(::Cmd::EventParam value);

  // @@protoc_insertion_point(class_scope:Cmd.DelTransformUserEvent)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static DelTransformUserEvent* default_instance_;
};
// -------------------------------------------------------------------

class InviteCatFailUserEvent : public ::google::protobuf::Message {
 public:
  InviteCatFailUserEvent();
  virtual ~InviteCatFailUserEvent();

  InviteCatFailUserEvent(const InviteCatFailUserEvent& from);

  inline InviteCatFailUserEvent& operator=(const InviteCatFailUserEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InviteCatFailUserEvent& default_instance();

  void Swap(InviteCatFailUserEvent* other);

  // implements Message ----------------------------------------------

  InviteCatFailUserEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InviteCatFailUserEvent& from);
  void MergeFrom(const InviteCatFailUserEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.EventParam param = 2 [default = USER_EVENT_INVITECAT_FAIL];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::EventParam param() const;
  inline void set_param(::Cmd::EventParam value);

  // @@protoc_insertion_point(class_scope:Cmd.InviteCatFailUserEvent)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static InviteCatFailUserEvent* default_instance_;
};
// -------------------------------------------------------------------

class TrigNpcFuncUserEvent : public ::google::protobuf::Message {
 public:
  TrigNpcFuncUserEvent();
  virtual ~TrigNpcFuncUserEvent();

  TrigNpcFuncUserEvent(const TrigNpcFuncUserEvent& from);

  inline TrigNpcFuncUserEvent& operator=(const TrigNpcFuncUserEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrigNpcFuncUserEvent& default_instance();

  void Swap(TrigNpcFuncUserEvent* other);

  // implements Message ----------------------------------------------

  TrigNpcFuncUserEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrigNpcFuncUserEvent& from);
  void MergeFrom(const TrigNpcFuncUserEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.EventParam param = 2 [default = USER_EVENT_NPC_FUNCTION];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::EventParam param() const;
  inline void set_param(::Cmd::EventParam value);

  // required uint64 npcguid = 3;
  inline bool has_npcguid() const;
  inline void clear_npcguid();
  static const int kNpcguidFieldNumber = 3;
  inline ::google::protobuf::uint64 npcguid() const;
  inline void set_npcguid(::google::protobuf::uint64 value);

  // required uint32 funcid = 4;
  inline bool has_funcid() const;
  inline void clear_funcid();
  static const int kFuncidFieldNumber = 4;
  inline ::google::protobuf::uint32 funcid() const;
  inline void set_funcid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.TrigNpcFuncUserEvent)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_npcguid();
  inline void clear_has_npcguid();
  inline void set_has_funcid();
  inline void clear_has_funcid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 npcguid_;
  ::google::protobuf::uint32 funcid_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static TrigNpcFuncUserEvent* default_instance_;
};
// -------------------------------------------------------------------

class SystemStringUserEvent : public ::google::protobuf::Message {
 public:
  SystemStringUserEvent();
  virtual ~SystemStringUserEvent();

  SystemStringUserEvent(const SystemStringUserEvent& from);

  inline SystemStringUserEvent& operator=(const SystemStringUserEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SystemStringUserEvent& default_instance();

  void Swap(SystemStringUserEvent* other);

  // implements Message ----------------------------------------------

  SystemStringUserEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SystemStringUserEvent& from);
  void MergeFrom(const SystemStringUserEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.EventParam param = 2 [default = USER_EVENT_SYSTEM_STRING];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::EventParam param() const;
  inline void set_param(::Cmd::EventParam value);

  // optional .Cmd.ESystemStringType etype = 3 [default = ESYSTEMSTRING_MIN];
  inline bool has_etype() const;
  inline void clear_etype();
  static const int kEtypeFieldNumber = 3;
  inline ::Cmd::ESystemStringType etype() const;
  inline void set_etype(::Cmd::ESystemStringType value);

  // @@protoc_insertion_point(class_scope:Cmd.SystemStringUserEvent)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_etype();
  inline void clear_has_etype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  int etype_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static SystemStringUserEvent* default_instance_;
};
// -------------------------------------------------------------------

class HandCatUserEvent : public ::google::protobuf::Message {
 public:
  HandCatUserEvent();
  virtual ~HandCatUserEvent();

  HandCatUserEvent(const HandCatUserEvent& from);

  inline HandCatUserEvent& operator=(const HandCatUserEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HandCatUserEvent& default_instance();

  void Swap(HandCatUserEvent* other);

  // implements Message ----------------------------------------------

  HandCatUserEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HandCatUserEvent& from);
  void MergeFrom(const HandCatUserEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.EventParam param = 2 [default = USER_EVENT_HAND_CAT];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::EventParam param() const;
  inline void set_param(::Cmd::EventParam value);

  // required uint64 catguid = 3;
  inline bool has_catguid() const;
  inline void clear_catguid();
  static const int kCatguidFieldNumber = 3;
  inline ::google::protobuf::uint64 catguid() const;
  inline void set_catguid(::google::protobuf::uint64 value);

  // optional bool breakup = 4 [default = false];
  inline bool has_breakup() const;
  inline void clear_breakup();
  static const int kBreakupFieldNumber = 4;
  inline bool breakup() const;
  inline void set_breakup(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.HandCatUserEvent)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_catguid();
  inline void clear_has_catguid();
  inline void set_has_breakup();
  inline void clear_has_breakup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 catguid_;
  bool breakup_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static HandCatUserEvent* default_instance_;
};
// -------------------------------------------------------------------

class ChangeTitle : public ::google::protobuf::Message {
 public:
  ChangeTitle();
  virtual ~ChangeTitle();

  ChangeTitle(const ChangeTitle& from);

  inline ChangeTitle& operator=(const ChangeTitle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeTitle& default_instance();

  void Swap(ChangeTitle* other);

  // implements Message ----------------------------------------------

  ChangeTitle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeTitle& from);
  void MergeFrom(const ChangeTitle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.EventParam param = 2 [default = USER_EVENT_CHANGE_TITLE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::EventParam param() const;
  inline void set_param(::Cmd::EventParam value);

  // optional .Cmd.TitleData title_data = 3;
  inline bool has_title_data() const;
  inline void clear_title_data();
  static const int kTitleDataFieldNumber = 3;
  inline const ::Cmd::TitleData& title_data() const;
  inline ::Cmd::TitleData* mutable_title_data();
  inline ::Cmd::TitleData* release_title_data();
  inline void set_allocated_title_data(::Cmd::TitleData* title_data);

  // optional uint64 charid = 4;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 4;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.ChangeTitle)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_title_data();
  inline void clear_has_title_data();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::TitleData* title_data_;
  ::google::protobuf::uint64 charid_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static ChangeTitle* default_instance_;
};
// -------------------------------------------------------------------

class ChargeCntInfo : public ::google::protobuf::Message {
 public:
  ChargeCntInfo();
  virtual ~ChargeCntInfo();

  ChargeCntInfo(const ChargeCntInfo& from);

  inline ChargeCntInfo& operator=(const ChargeCntInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChargeCntInfo& default_instance();

  void Swap(ChargeCntInfo* other);

  // implements Message ----------------------------------------------

  ChargeCntInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChargeCntInfo& from);
  void MergeFrom(const ChargeCntInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 dataid = 1;
  inline bool has_dataid() const;
  inline void clear_dataid();
  static const int kDataidFieldNumber = 1;
  inline ::google::protobuf::uint32 dataid() const;
  inline void set_dataid(::google::protobuf::uint32 value);

  // optional uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // optional uint32 limit = 3 [default = 0];
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 3;
  inline ::google::protobuf::uint32 limit() const;
  inline void set_limit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ChargeCntInfo)
 private:
  inline void set_has_dataid();
  inline void clear_has_dataid();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_limit();
  inline void clear_has_limit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 dataid_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 limit_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static ChargeCntInfo* default_instance_;
};
// -------------------------------------------------------------------

class QueryChargeCnt : public ::google::protobuf::Message {
 public:
  QueryChargeCnt();
  virtual ~QueryChargeCnt();

  QueryChargeCnt(const QueryChargeCnt& from);

  inline QueryChargeCnt& operator=(const QueryChargeCnt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryChargeCnt& default_instance();

  void Swap(QueryChargeCnt* other);

  // implements Message ----------------------------------------------

  QueryChargeCnt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryChargeCnt& from);
  void MergeFrom(const QueryChargeCnt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.EventParam param = 2 [default = USER_EVENT_QUERY_CHARGE_CNT];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::EventParam param() const;
  inline void set_param(::Cmd::EventParam value);

  // repeated .Cmd.ChargeCntInfo info = 3;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 3;
  inline const ::Cmd::ChargeCntInfo& info(int index) const;
  inline ::Cmd::ChargeCntInfo* mutable_info(int index);
  inline ::Cmd::ChargeCntInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ChargeCntInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ChargeCntInfo >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:Cmd.QueryChargeCnt)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ChargeCntInfo > info_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static QueryChargeCnt* default_instance_;
};
// -------------------------------------------------------------------

class NTFMonthCardEnd : public ::google::protobuf::Message {
 public:
  NTFMonthCardEnd();
  virtual ~NTFMonthCardEnd();

  NTFMonthCardEnd(const NTFMonthCardEnd& from);

  inline NTFMonthCardEnd& operator=(const NTFMonthCardEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NTFMonthCardEnd& default_instance();

  void Swap(NTFMonthCardEnd* other);

  // implements Message ----------------------------------------------

  NTFMonthCardEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NTFMonthCardEnd& from);
  void MergeFrom(const NTFMonthCardEnd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.EventParam param = 2 [default = USER_EVENT_NTF_MONTHCARD_END];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::EventParam param() const;
  inline void set_param(::Cmd::EventParam value);

  // @@protoc_insertion_point(class_scope:Cmd.NTFMonthCardEnd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static NTFMonthCardEnd* default_instance_;
};
// -------------------------------------------------------------------

class LoveLetterUse : public ::google::protobuf::Message {
 public:
  LoveLetterUse();
  virtual ~LoveLetterUse();

  LoveLetterUse(const LoveLetterUse& from);

  inline LoveLetterUse& operator=(const LoveLetterUse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoveLetterUse& default_instance();

  void Swap(LoveLetterUse* other);

  // implements Message ----------------------------------------------

  LoveLetterUse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoveLetterUse& from);
  void MergeFrom(const LoveLetterUse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.EventParam param = 2 [default = USER_EVENT_LOVELETTER_USE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::EventParam param() const;
  inline void set_param(::Cmd::EventParam value);

  // optional string itemguid = 3;
  inline bool has_itemguid() const;
  inline void clear_itemguid();
  static const int kItemguidFieldNumber = 3;
  inline const ::std::string& itemguid() const;
  inline void set_itemguid(const ::std::string& value);
  inline void set_itemguid(const char* value);
  inline void set_itemguid(const char* value, size_t size);
  inline ::std::string* mutable_itemguid();
  inline ::std::string* release_itemguid();
  inline void set_allocated_itemguid(::std::string* itemguid);

  // optional uint64 targets = 4;
  inline bool has_targets() const;
  inline void clear_targets();
  static const int kTargetsFieldNumber = 4;
  inline ::google::protobuf::uint64 targets() const;
  inline void set_targets(::google::protobuf::uint64 value);

  // optional string content = 5;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 5;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // optional .Cmd.ELetterType type = 6 [default = ELETTERTYPE_CHRISTMAS];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline ::Cmd::ELetterType type() const;
  inline void set_type(::Cmd::ELetterType value);

  // @@protoc_insertion_point(class_scope:Cmd.LoveLetterUse)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_itemguid();
  inline void clear_has_itemguid();
  inline void set_has_targets();
  inline void clear_has_targets();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::std::string* itemguid_;
  ::google::protobuf::uint64 targets_;
  ::std::string* content_;
  int type_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static LoveLetterUse* default_instance_;
};
// -------------------------------------------------------------------

class ActivityCntItem : public ::google::protobuf::Message {
 public:
  ActivityCntItem();
  virtual ~ActivityCntItem();

  ActivityCntItem(const ActivityCntItem& from);

  inline ActivityCntItem& operator=(const ActivityCntItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityCntItem& default_instance();

  void Swap(ActivityCntItem* other);

  // implements Message ----------------------------------------------

  ActivityCntItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityCntItem& from);
  void MergeFrom(const ActivityCntItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 activityid = 1;
  inline bool has_activityid() const;
  inline void clear_activityid();
  static const int kActivityidFieldNumber = 1;
  inline ::google::protobuf::uint32 activityid() const;
  inline void set_activityid(::google::protobuf::uint32 value);

  // optional uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ActivityCntItem)
 private:
  inline void set_has_activityid();
  inline void clear_has_activityid();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 activityid_;
  ::google::protobuf::uint32 count_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static ActivityCntItem* default_instance_;
};
// -------------------------------------------------------------------

class QueryActivityCnt : public ::google::protobuf::Message {
 public:
  QueryActivityCnt();
  virtual ~QueryActivityCnt();

  QueryActivityCnt(const QueryActivityCnt& from);

  inline QueryActivityCnt& operator=(const QueryActivityCnt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryActivityCnt& default_instance();

  void Swap(QueryActivityCnt* other);

  // implements Message ----------------------------------------------

  QueryActivityCnt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryActivityCnt& from);
  void MergeFrom(const QueryActivityCnt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.EventParam param = 2 [default = USER_EVENT_QUERY_ACTIVITY_CNT];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::EventParam param() const;
  inline void set_param(::Cmd::EventParam value);

  // repeated .Cmd.ActivityCntItem info = 3;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 3;
  inline const ::Cmd::ActivityCntItem& info(int index) const;
  inline ::Cmd::ActivityCntItem* mutable_info(int index);
  inline ::Cmd::ActivityCntItem* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ActivityCntItem >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ActivityCntItem >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:Cmd.QueryActivityCnt)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ActivityCntItem > info_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static QueryActivityCnt* default_instance_;
};
// -------------------------------------------------------------------

class UpdateActivityCnt : public ::google::protobuf::Message {
 public:
  UpdateActivityCnt();
  virtual ~UpdateActivityCnt();

  UpdateActivityCnt(const UpdateActivityCnt& from);

  inline UpdateActivityCnt& operator=(const UpdateActivityCnt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateActivityCnt& default_instance();

  void Swap(UpdateActivityCnt* other);

  // implements Message ----------------------------------------------

  UpdateActivityCnt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateActivityCnt& from);
  void MergeFrom(const UpdateActivityCnt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.EventParam param = 2 [default = USER_EVENT_UPDATE_ACTIVITY_CNT];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::EventParam param() const;
  inline void set_param(::Cmd::EventParam value);

  // optional .Cmd.ActivityCntItem info = 3;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 3;
  inline const ::Cmd::ActivityCntItem& info() const;
  inline ::Cmd::ActivityCntItem* mutable_info();
  inline ::Cmd::ActivityCntItem* release_info();
  inline void set_allocated_info(::Cmd::ActivityCntItem* info);

  // @@protoc_insertion_point(class_scope:Cmd.UpdateActivityCnt)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::ActivityCntItem* info_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static UpdateActivityCnt* default_instance_;
};
// -------------------------------------------------------------------

class VersionCardInfo : public ::google::protobuf::Message {
 public:
  VersionCardInfo();
  virtual ~VersionCardInfo();

  VersionCardInfo(const VersionCardInfo& from);

  inline VersionCardInfo& operator=(const VersionCardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VersionCardInfo& default_instance();

  void Swap(VersionCardInfo* other);

  // implements Message ----------------------------------------------

  VersionCardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VersionCardInfo& from);
  void MergeFrom(const VersionCardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // optional uint32 id1 = 2;
  inline bool has_id1() const;
  inline void clear_id1();
  static const int kId1FieldNumber = 2;
  inline ::google::protobuf::uint32 id1() const;
  inline void set_id1(::google::protobuf::uint32 value);

  // optional uint32 id2 = 3;
  inline bool has_id2() const;
  inline void clear_id2();
  static const int kId2FieldNumber = 3;
  inline ::google::protobuf::uint32 id2() const;
  inline void set_id2(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.VersionCardInfo)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_id1();
  inline void clear_has_id1();
  inline void set_has_id2();
  inline void clear_has_id2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 id1_;
  ::google::protobuf::uint32 id2_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static VersionCardInfo* default_instance_;
};
// -------------------------------------------------------------------

class NtfVersionCardInfo : public ::google::protobuf::Message {
 public:
  NtfVersionCardInfo();
  virtual ~NtfVersionCardInfo();

  NtfVersionCardInfo(const NtfVersionCardInfo& from);

  inline NtfVersionCardInfo& operator=(const NtfVersionCardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NtfVersionCardInfo& default_instance();

  void Swap(NtfVersionCardInfo* other);

  // implements Message ----------------------------------------------

  NtfVersionCardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NtfVersionCardInfo& from);
  void MergeFrom(const NtfVersionCardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.EventParam param = 2 [default = USER_EVENT_NTF_VERSION_CARD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::EventParam param() const;
  inline void set_param(::Cmd::EventParam value);

  // repeated .Cmd.VersionCardInfo info = 3;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 3;
  inline const ::Cmd::VersionCardInfo& info(int index) const;
  inline ::Cmd::VersionCardInfo* mutable_info(int index);
  inline ::Cmd::VersionCardInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::VersionCardInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::VersionCardInfo >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:Cmd.NtfVersionCardInfo)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::VersionCardInfo > info_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static NtfVersionCardInfo* default_instance_;
};
// -------------------------------------------------------------------

class DieTimeCountEventCmd : public ::google::protobuf::Message {
 public:
  DieTimeCountEventCmd();
  virtual ~DieTimeCountEventCmd();

  DieTimeCountEventCmd(const DieTimeCountEventCmd& from);

  inline DieTimeCountEventCmd& operator=(const DieTimeCountEventCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DieTimeCountEventCmd& default_instance();

  void Swap(DieTimeCountEventCmd* other);

  // implements Message ----------------------------------------------

  DieTimeCountEventCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DieTimeCountEventCmd& from);
  void MergeFrom(const DieTimeCountEventCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.EventParam param = 2 [default = USER_EVENT_WAIT_RELIVE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::EventParam param() const;
  inline void set_param(::Cmd::EventParam value);

  // optional uint32 time = 3 [default = 0];
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // optional string name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:Cmd.DieTimeCountEventCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::std::string* name_;
  ::google::protobuf::uint32 time_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static DieTimeCountEventCmd* default_instance_;
};
// -------------------------------------------------------------------

class GetFirstShareRewardUserEvent : public ::google::protobuf::Message {
 public:
  GetFirstShareRewardUserEvent();
  virtual ~GetFirstShareRewardUserEvent();

  GetFirstShareRewardUserEvent(const GetFirstShareRewardUserEvent& from);

  inline GetFirstShareRewardUserEvent& operator=(const GetFirstShareRewardUserEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFirstShareRewardUserEvent& default_instance();

  void Swap(GetFirstShareRewardUserEvent* other);

  // implements Message ----------------------------------------------

  GetFirstShareRewardUserEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFirstShareRewardUserEvent& from);
  void MergeFrom(const GetFirstShareRewardUserEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.EventParam param = 2 [default = USER_EVENT_GET_RECALL_SHARE_REWARD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::EventParam param() const;
  inline void set_param(::Cmd::EventParam value);

  // @@protoc_insertion_point(class_scope:Cmd.GetFirstShareRewardUserEvent)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static GetFirstShareRewardUserEvent* default_instance_;
};
// -------------------------------------------------------------------

class QueryResetTimeEventCmd : public ::google::protobuf::Message {
 public:
  QueryResetTimeEventCmd();
  virtual ~QueryResetTimeEventCmd();

  QueryResetTimeEventCmd(const QueryResetTimeEventCmd& from);

  inline QueryResetTimeEventCmd& operator=(const QueryResetTimeEventCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryResetTimeEventCmd& default_instance();

  void Swap(QueryResetTimeEventCmd* other);

  // implements Message ----------------------------------------------

  QueryResetTimeEventCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryResetTimeEventCmd& from);
  void MergeFrom(const QueryResetTimeEventCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.EventParam param = 2 [default = USER_EVENT_QUERY_RESETTIME];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::EventParam param() const;
  inline void set_param(::Cmd::EventParam value);

  // required .Cmd.EAERewardMode etype = 3;
  inline bool has_etype() const;
  inline void clear_etype();
  static const int kEtypeFieldNumber = 3;
  inline ::Cmd::EAERewardMode etype() const;
  inline void set_etype(::Cmd::EAERewardMode value);

  // optional uint32 resettime = 4 [default = 0];
  inline bool has_resettime() const;
  inline void clear_resettime();
  static const int kResettimeFieldNumber = 4;
  inline ::google::protobuf::uint32 resettime() const;
  inline void set_resettime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.QueryResetTimeEventCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_etype();
  inline void clear_has_etype();
  inline void set_has_resettime();
  inline void clear_has_resettime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  int etype_;
  ::google::protobuf::uint32 resettime_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static QueryResetTimeEventCmd* default_instance_;
};
// -------------------------------------------------------------------

class InOutActEventCmd : public ::google::protobuf::Message {
 public:
  InOutActEventCmd();
  virtual ~InOutActEventCmd();

  InOutActEventCmd(const InOutActEventCmd& from);

  inline InOutActEventCmd& operator=(const InOutActEventCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InOutActEventCmd& default_instance();

  void Swap(InOutActEventCmd* other);

  // implements Message ----------------------------------------------

  InOutActEventCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InOutActEventCmd& from);
  void MergeFrom(const InOutActEventCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.EventParam param = 2 [default = USER_EVENT_INOUT_ACT];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::EventParam param() const;
  inline void set_param(::Cmd::EventParam value);

  // required uint64 actid = 3;
  inline bool has_actid() const;
  inline void clear_actid();
  static const int kActidFieldNumber = 3;
  inline ::google::protobuf::uint64 actid() const;
  inline void set_actid(::google::protobuf::uint64 value);

  // optional bool inout = 4 [default = false];
  inline bool has_inout() const;
  inline void clear_inout();
  static const int kInoutFieldNumber = 4;
  inline bool inout() const;
  inline void set_inout(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.InOutActEventCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_actid();
  inline void clear_has_actid();
  inline void set_has_inout();
  inline void clear_has_inout();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 actid_;
  bool inout_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static InOutActEventCmd* default_instance_;
};
// -------------------------------------------------------------------

class UserEventMailCmd : public ::google::protobuf::Message {
 public:
  UserEventMailCmd();
  virtual ~UserEventMailCmd();

  UserEventMailCmd(const UserEventMailCmd& from);

  inline UserEventMailCmd& operator=(const UserEventMailCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserEventMailCmd& default_instance();

  void Swap(UserEventMailCmd* other);

  // implements Message ----------------------------------------------

  UserEventMailCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserEventMailCmd& from);
  void MergeFrom(const UserEventMailCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.EventParam param = 2 [default = USER_EVENT_MAIL];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::EventParam param() const;
  inline void set_param(::Cmd::EventParam value);

  // optional .Cmd.EEventMailType eType = 3 [default = EEVENTMAILTYPE_MIN];
  inline bool has_etype() const;
  inline void clear_etype();
  static const int kETypeFieldNumber = 3;
  inline ::Cmd::EEventMailType etype() const;
  inline void set_etype(::Cmd::EEventMailType value);

  // repeated uint32 param32 = 4;
  inline int param32_size() const;
  inline void clear_param32();
  static const int kParam32FieldNumber = 4;
  inline ::google::protobuf::uint32 param32(int index) const;
  inline void set_param32(int index, ::google::protobuf::uint32 value);
  inline void add_param32(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      param32() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_param32();

  // repeated uint64 param64 = 5;
  inline int param64_size() const;
  inline void clear_param64();
  static const int kParam64FieldNumber = 5;
  inline ::google::protobuf::uint64 param64(int index) const;
  inline void set_param64(int index, ::google::protobuf::uint64 value);
  inline void add_param64(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      param64() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_param64();

  // @@protoc_insertion_point(class_scope:Cmd.UserEventMailCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_etype();
  inline void clear_has_etype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > param32_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > param64_;
  int etype_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static UserEventMailCmd* default_instance_;
};
// -------------------------------------------------------------------

class LevelupDeadUserEvent : public ::google::protobuf::Message {
 public:
  LevelupDeadUserEvent();
  virtual ~LevelupDeadUserEvent();

  LevelupDeadUserEvent(const LevelupDeadUserEvent& from);

  inline LevelupDeadUserEvent& operator=(const LevelupDeadUserEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LevelupDeadUserEvent& default_instance();

  void Swap(LevelupDeadUserEvent* other);

  // implements Message ----------------------------------------------

  LevelupDeadUserEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LevelupDeadUserEvent& from);
  void MergeFrom(const LevelupDeadUserEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.EventParam param = 2 [default = USER_EVENT_LEVELUP_DEAD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::EventParam param() const;
  inline void set_param(::Cmd::EventParam value);

  // @@protoc_insertion_point(class_scope:Cmd.LevelupDeadUserEvent)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  friend void  protobuf_AddDesc_UserEvent_2eproto();
  friend void protobuf_AssignDesc_UserEvent_2eproto();
  friend void protobuf_ShutdownFile_UserEvent_2eproto();

  void InitAsDefaultInstance();
  static LevelupDeadUserEvent* default_instance_;
};
// ===================================================================


// ===================================================================

// FirstActionUserEvent

// optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
inline bool FirstActionUserEvent::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FirstActionUserEvent::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FirstActionUserEvent::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FirstActionUserEvent::clear_cmd() {
  cmd_ = 25;
  clear_has_cmd();
}
inline ::Cmd::Command FirstActionUserEvent::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.FirstActionUserEvent.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void FirstActionUserEvent::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FirstActionUserEvent.cmd)
}

// optional .Cmd.EventParam param = 2 [default = USER_EVENT_FIRST_ACTION];
inline bool FirstActionUserEvent::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FirstActionUserEvent::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FirstActionUserEvent::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FirstActionUserEvent::clear_param() {
  param_ = 1;
  clear_has_param();
}
inline ::Cmd::EventParam FirstActionUserEvent::param() const {
  // @@protoc_insertion_point(field_get:Cmd.FirstActionUserEvent.param)
  return static_cast< ::Cmd::EventParam >(param_);
}
inline void FirstActionUserEvent::set_param(::Cmd::EventParam value) {
  assert(::Cmd::EventParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FirstActionUserEvent.param)
}

// optional uint32 firstaction = 3 [default = 0];
inline bool FirstActionUserEvent::has_firstaction() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FirstActionUserEvent::set_has_firstaction() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FirstActionUserEvent::clear_has_firstaction() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FirstActionUserEvent::clear_firstaction() {
  firstaction_ = 0u;
  clear_has_firstaction();
}
inline ::google::protobuf::uint32 FirstActionUserEvent::firstaction() const {
  // @@protoc_insertion_point(field_get:Cmd.FirstActionUserEvent.firstaction)
  return firstaction_;
}
inline void FirstActionUserEvent::set_firstaction(::google::protobuf::uint32 value) {
  set_has_firstaction();
  firstaction_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FirstActionUserEvent.firstaction)
}

// -------------------------------------------------------------------

// DamageNpcUserEvent

// optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
inline bool DamageNpcUserEvent::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DamageNpcUserEvent::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DamageNpcUserEvent::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DamageNpcUserEvent::clear_cmd() {
  cmd_ = 25;
  clear_has_cmd();
}
inline ::Cmd::Command DamageNpcUserEvent::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.DamageNpcUserEvent.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void DamageNpcUserEvent::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DamageNpcUserEvent.cmd)
}

// optional .Cmd.EventParam param = 2 [default = USER_EVENT_ATTACK_NPC];
inline bool DamageNpcUserEvent::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DamageNpcUserEvent::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DamageNpcUserEvent::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DamageNpcUserEvent::clear_param() {
  param_ = 2;
  clear_has_param();
}
inline ::Cmd::EventParam DamageNpcUserEvent::param() const {
  // @@protoc_insertion_point(field_get:Cmd.DamageNpcUserEvent.param)
  return static_cast< ::Cmd::EventParam >(param_);
}
inline void DamageNpcUserEvent::set_param(::Cmd::EventParam value) {
  assert(::Cmd::EventParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DamageNpcUserEvent.param)
}

// optional uint64 npcguid = 3 [default = 0];
inline bool DamageNpcUserEvent::has_npcguid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DamageNpcUserEvent::set_has_npcguid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DamageNpcUserEvent::clear_has_npcguid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DamageNpcUserEvent::clear_npcguid() {
  npcguid_ = GOOGLE_ULONGLONG(0);
  clear_has_npcguid();
}
inline ::google::protobuf::uint64 DamageNpcUserEvent::npcguid() const {
  // @@protoc_insertion_point(field_get:Cmd.DamageNpcUserEvent.npcguid)
  return npcguid_;
}
inline void DamageNpcUserEvent::set_npcguid(::google::protobuf::uint64 value) {
  set_has_npcguid();
  npcguid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DamageNpcUserEvent.npcguid)
}

// optional uint64 userid = 4 [default = 0];
inline bool DamageNpcUserEvent::has_userid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DamageNpcUserEvent::set_has_userid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DamageNpcUserEvent::clear_has_userid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DamageNpcUserEvent::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
  clear_has_userid();
}
inline ::google::protobuf::uint64 DamageNpcUserEvent::userid() const {
  // @@protoc_insertion_point(field_get:Cmd.DamageNpcUserEvent.userid)
  return userid_;
}
inline void DamageNpcUserEvent::set_userid(::google::protobuf::uint64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DamageNpcUserEvent.userid)
}

// -------------------------------------------------------------------

// TitleData

// optional .Cmd.ETitleType title_type = 1;
inline bool TitleData::has_title_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TitleData::set_has_title_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TitleData::clear_has_title_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TitleData::clear_title_type() {
  title_type_ = 0;
  clear_has_title_type();
}
inline ::Cmd::ETitleType TitleData::title_type() const {
  // @@protoc_insertion_point(field_get:Cmd.TitleData.title_type)
  return static_cast< ::Cmd::ETitleType >(title_type_);
}
inline void TitleData::set_title_type(::Cmd::ETitleType value) {
  assert(::Cmd::ETitleType_IsValid(value));
  set_has_title_type();
  title_type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TitleData.title_type)
}

// optional uint32 id = 2 [default = 0];
inline bool TitleData::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TitleData::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TitleData::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TitleData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TitleData::id() const {
  // @@protoc_insertion_point(field_get:Cmd.TitleData.id)
  return id_;
}
inline void TitleData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TitleData.id)
}

// optional uint32 createtime = 3 [default = 0];
inline bool TitleData::has_createtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TitleData::set_has_createtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TitleData::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TitleData::clear_createtime() {
  createtime_ = 0u;
  clear_has_createtime();
}
inline ::google::protobuf::uint32 TitleData::createtime() const {
  // @@protoc_insertion_point(field_get:Cmd.TitleData.createtime)
  return createtime_;
}
inline void TitleData::set_createtime(::google::protobuf::uint32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TitleData.createtime)
}

// -------------------------------------------------------------------

// NewTitle

// optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
inline bool NewTitle::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewTitle::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewTitle::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewTitle::clear_cmd() {
  cmd_ = 25;
  clear_has_cmd();
}
inline ::Cmd::Command NewTitle::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.NewTitle.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void NewTitle::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.NewTitle.cmd)
}

// optional .Cmd.EventParam param = 2 [default = USER_EVENT_NEW_TITLE];
inline bool NewTitle::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewTitle::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewTitle::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewTitle::clear_param() {
  param_ = 3;
  clear_has_param();
}
inline ::Cmd::EventParam NewTitle::param() const {
  // @@protoc_insertion_point(field_get:Cmd.NewTitle.param)
  return static_cast< ::Cmd::EventParam >(param_);
}
inline void NewTitle::set_param(::Cmd::EventParam value) {
  assert(::Cmd::EventParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.NewTitle.param)
}

// optional .Cmd.TitleData title_data = 3;
inline bool NewTitle::has_title_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NewTitle::set_has_title_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NewTitle::clear_has_title_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NewTitle::clear_title_data() {
  if (title_data_ != NULL) title_data_->::Cmd::TitleData::Clear();
  clear_has_title_data();
}
inline const ::Cmd::TitleData& NewTitle::title_data() const {
  // @@protoc_insertion_point(field_get:Cmd.NewTitle.title_data)
  return title_data_ != NULL ? *title_data_ : *default_instance_->title_data_;
}
inline ::Cmd::TitleData* NewTitle::mutable_title_data() {
  set_has_title_data();
  if (title_data_ == NULL) title_data_ = new ::Cmd::TitleData;
  // @@protoc_insertion_point(field_mutable:Cmd.NewTitle.title_data)
  return title_data_;
}
inline ::Cmd::TitleData* NewTitle::release_title_data() {
  clear_has_title_data();
  ::Cmd::TitleData* temp = title_data_;
  title_data_ = NULL;
  return temp;
}
inline void NewTitle::set_allocated_title_data(::Cmd::TitleData* title_data) {
  delete title_data_;
  title_data_ = title_data;
  if (title_data) {
    set_has_title_data();
  } else {
    clear_has_title_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.NewTitle.title_data)
}

// optional uint64 charid = 4;
inline bool NewTitle::has_charid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NewTitle::set_has_charid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NewTitle::clear_has_charid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NewTitle::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 NewTitle::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.NewTitle.charid)
  return charid_;
}
inline void NewTitle::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.NewTitle.charid)
}

// -------------------------------------------------------------------

// AllTitle

// optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
inline bool AllTitle::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AllTitle::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AllTitle::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AllTitle::clear_cmd() {
  cmd_ = 25;
  clear_has_cmd();
}
inline ::Cmd::Command AllTitle::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.AllTitle.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void AllTitle::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AllTitle.cmd)
}

// optional .Cmd.EventParam param = 2 [default = USER_EVENT_ALL_TITLE];
inline bool AllTitle::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AllTitle::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AllTitle::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AllTitle::clear_param() {
  param_ = 4;
  clear_has_param();
}
inline ::Cmd::EventParam AllTitle::param() const {
  // @@protoc_insertion_point(field_get:Cmd.AllTitle.param)
  return static_cast< ::Cmd::EventParam >(param_);
}
inline void AllTitle::set_param(::Cmd::EventParam value) {
  assert(::Cmd::EventParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AllTitle.param)
}

// repeated .Cmd.TitleData title_datas = 3;
inline int AllTitle::title_datas_size() const {
  return title_datas_.size();
}
inline void AllTitle::clear_title_datas() {
  title_datas_.Clear();
}
inline const ::Cmd::TitleData& AllTitle::title_datas(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.AllTitle.title_datas)
  return title_datas_.Get(index);
}
inline ::Cmd::TitleData* AllTitle::mutable_title_datas(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.AllTitle.title_datas)
  return title_datas_.Mutable(index);
}
inline ::Cmd::TitleData* AllTitle::add_title_datas() {
  // @@protoc_insertion_point(field_add:Cmd.AllTitle.title_datas)
  return title_datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TitleData >&
AllTitle::title_datas() const {
  // @@protoc_insertion_point(field_list:Cmd.AllTitle.title_datas)
  return title_datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TitleData >*
AllTitle::mutable_title_datas() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.AllTitle.title_datas)
  return &title_datas_;
}

// -------------------------------------------------------------------

// UpdateRandomUserEvent

// optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
inline bool UpdateRandomUserEvent::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateRandomUserEvent::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateRandomUserEvent::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateRandomUserEvent::clear_cmd() {
  cmd_ = 25;
  clear_has_cmd();
}
inline ::Cmd::Command UpdateRandomUserEvent::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateRandomUserEvent.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UpdateRandomUserEvent::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateRandomUserEvent.cmd)
}

// optional .Cmd.EventParam param = 2 [default = USER_EVENT_UPDATE_RANDOM];
inline bool UpdateRandomUserEvent::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateRandomUserEvent::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateRandomUserEvent::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateRandomUserEvent::clear_param() {
  param_ = 5;
  clear_has_param();
}
inline ::Cmd::EventParam UpdateRandomUserEvent::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateRandomUserEvent.param)
  return static_cast< ::Cmd::EventParam >(param_);
}
inline void UpdateRandomUserEvent::set_param(::Cmd::EventParam value) {
  assert(::Cmd::EventParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateRandomUserEvent.param)
}

// optional uint32 beginindex = 3 [default = 0];
inline bool UpdateRandomUserEvent::has_beginindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateRandomUserEvent::set_has_beginindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateRandomUserEvent::clear_has_beginindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateRandomUserEvent::clear_beginindex() {
  beginindex_ = 0u;
  clear_has_beginindex();
}
inline ::google::protobuf::uint32 UpdateRandomUserEvent::beginindex() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateRandomUserEvent.beginindex)
  return beginindex_;
}
inline void UpdateRandomUserEvent::set_beginindex(::google::protobuf::uint32 value) {
  set_has_beginindex();
  beginindex_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateRandomUserEvent.beginindex)
}

// optional uint32 endindex = 4 [default = 0];
inline bool UpdateRandomUserEvent::has_endindex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateRandomUserEvent::set_has_endindex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateRandomUserEvent::clear_has_endindex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateRandomUserEvent::clear_endindex() {
  endindex_ = 0u;
  clear_has_endindex();
}
inline ::google::protobuf::uint32 UpdateRandomUserEvent::endindex() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateRandomUserEvent.endindex)
  return endindex_;
}
inline void UpdateRandomUserEvent::set_endindex(::google::protobuf::uint32 value) {
  set_has_endindex();
  endindex_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateRandomUserEvent.endindex)
}

// repeated uint32 randoms = 5;
inline int UpdateRandomUserEvent::randoms_size() const {
  return randoms_.size();
}
inline void UpdateRandomUserEvent::clear_randoms() {
  randoms_.Clear();
}
inline ::google::protobuf::uint32 UpdateRandomUserEvent::randoms(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateRandomUserEvent.randoms)
  return randoms_.Get(index);
}
inline void UpdateRandomUserEvent::set_randoms(int index, ::google::protobuf::uint32 value) {
  randoms_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.UpdateRandomUserEvent.randoms)
}
inline void UpdateRandomUserEvent::add_randoms(::google::protobuf::uint32 value) {
  randoms_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.UpdateRandomUserEvent.randoms)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UpdateRandomUserEvent::randoms() const {
  // @@protoc_insertion_point(field_list:Cmd.UpdateRandomUserEvent.randoms)
  return randoms_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UpdateRandomUserEvent::mutable_randoms() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UpdateRandomUserEvent.randoms)
  return &randoms_;
}

// -------------------------------------------------------------------

// BuffDamageUserEvent

// optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
inline bool BuffDamageUserEvent::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuffDamageUserEvent::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuffDamageUserEvent::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuffDamageUserEvent::clear_cmd() {
  cmd_ = 25;
  clear_has_cmd();
}
inline ::Cmd::Command BuffDamageUserEvent::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.BuffDamageUserEvent.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void BuffDamageUserEvent::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuffDamageUserEvent.cmd)
}

// optional .Cmd.EventParam param = 2 [default = USER_EVENT_BUFF_DAMAGE];
inline bool BuffDamageUserEvent::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuffDamageUserEvent::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuffDamageUserEvent::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuffDamageUserEvent::clear_param() {
  param_ = 6;
  clear_has_param();
}
inline ::Cmd::EventParam BuffDamageUserEvent::param() const {
  // @@protoc_insertion_point(field_get:Cmd.BuffDamageUserEvent.param)
  return static_cast< ::Cmd::EventParam >(param_);
}
inline void BuffDamageUserEvent::set_param(::Cmd::EventParam value) {
  assert(::Cmd::EventParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuffDamageUserEvent.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool BuffDamageUserEvent::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuffDamageUserEvent::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuffDamageUserEvent::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuffDamageUserEvent::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 BuffDamageUserEvent::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.BuffDamageUserEvent.charid)
  return charid_;
}
inline void BuffDamageUserEvent::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuffDamageUserEvent.charid)
}

// optional int32 damage = 4 [default = 0];
inline bool BuffDamageUserEvent::has_damage() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BuffDamageUserEvent::set_has_damage() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BuffDamageUserEvent::clear_has_damage() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BuffDamageUserEvent::clear_damage() {
  damage_ = 0;
  clear_has_damage();
}
inline ::google::protobuf::int32 BuffDamageUserEvent::damage() const {
  // @@protoc_insertion_point(field_get:Cmd.BuffDamageUserEvent.damage)
  return damage_;
}
inline void BuffDamageUserEvent::set_damage(::google::protobuf::int32 value) {
  set_has_damage();
  damage_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuffDamageUserEvent.damage)
}

// optional .Cmd.DamageType etype = 5 [default = DAMAGE_TYPE_NORMAL];
inline bool BuffDamageUserEvent::has_etype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BuffDamageUserEvent::set_has_etype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BuffDamageUserEvent::clear_has_etype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BuffDamageUserEvent::clear_etype() {
  etype_ = 1;
  clear_has_etype();
}
inline ::Cmd::DamageType BuffDamageUserEvent::etype() const {
  // @@protoc_insertion_point(field_get:Cmd.BuffDamageUserEvent.etype)
  return static_cast< ::Cmd::DamageType >(etype_);
}
inline void BuffDamageUserEvent::set_etype(::Cmd::DamageType value) {
  assert(::Cmd::DamageType_IsValid(value));
  set_has_etype();
  etype_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BuffDamageUserEvent.etype)
}

// -------------------------------------------------------------------

// ChargeNtfUserEvent

// optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
inline bool ChargeNtfUserEvent::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChargeNtfUserEvent::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChargeNtfUserEvent::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChargeNtfUserEvent::clear_cmd() {
  cmd_ = 25;
  clear_has_cmd();
}
inline ::Cmd::Command ChargeNtfUserEvent::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ChargeNtfUserEvent.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ChargeNtfUserEvent::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChargeNtfUserEvent.cmd)
}

// optional .Cmd.EventParam param = 2 [default = USER_EVENT_CHARGE_NTF];
inline bool ChargeNtfUserEvent::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChargeNtfUserEvent::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChargeNtfUserEvent::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChargeNtfUserEvent::clear_param() {
  param_ = 7;
  clear_has_param();
}
inline ::Cmd::EventParam ChargeNtfUserEvent::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ChargeNtfUserEvent.param)
  return static_cast< ::Cmd::EventParam >(param_);
}
inline void ChargeNtfUserEvent::set_param(::Cmd::EventParam value) {
  assert(::Cmd::EventParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChargeNtfUserEvent.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool ChargeNtfUserEvent::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChargeNtfUserEvent::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChargeNtfUserEvent::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChargeNtfUserEvent::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ChargeNtfUserEvent::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChargeNtfUserEvent.charid)
  return charid_;
}
inline void ChargeNtfUserEvent::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChargeNtfUserEvent.charid)
}

// optional uint32 dataid = 4 [default = 0];
inline bool ChargeNtfUserEvent::has_dataid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChargeNtfUserEvent::set_has_dataid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChargeNtfUserEvent::clear_has_dataid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChargeNtfUserEvent::clear_dataid() {
  dataid_ = 0u;
  clear_has_dataid();
}
inline ::google::protobuf::uint32 ChargeNtfUserEvent::dataid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChargeNtfUserEvent.dataid)
  return dataid_;
}
inline void ChargeNtfUserEvent::set_dataid(::google::protobuf::uint32 value) {
  set_has_dataid();
  dataid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChargeNtfUserEvent.dataid)
}

// -------------------------------------------------------------------

// DepositTypeData

// optional .Cmd.EDepositCardType type = 1;
inline bool DepositTypeData::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DepositTypeData::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DepositTypeData::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DepositTypeData::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::Cmd::EDepositCardType DepositTypeData::type() const {
  // @@protoc_insertion_point(field_get:Cmd.DepositTypeData.type)
  return static_cast< ::Cmd::EDepositCardType >(type_);
}
inline void DepositTypeData::set_type(::Cmd::EDepositCardType value) {
  assert(::Cmd::EDepositCardType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DepositTypeData.type)
}

// optional uint32 expiretime = 2;
inline bool DepositTypeData::has_expiretime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DepositTypeData::set_has_expiretime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DepositTypeData::clear_has_expiretime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DepositTypeData::clear_expiretime() {
  expiretime_ = 0u;
  clear_has_expiretime();
}
inline ::google::protobuf::uint32 DepositTypeData::expiretime() const {
  // @@protoc_insertion_point(field_get:Cmd.DepositTypeData.expiretime)
  return expiretime_;
}
inline void DepositTypeData::set_expiretime(::google::protobuf::uint32 value) {
  set_has_expiretime();
  expiretime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DepositTypeData.expiretime)
}

// optional uint32 starttime = 3;
inline bool DepositTypeData::has_starttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DepositTypeData::set_has_starttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DepositTypeData::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DepositTypeData::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 DepositTypeData::starttime() const {
  // @@protoc_insertion_point(field_get:Cmd.DepositTypeData.starttime)
  return starttime_;
}
inline void DepositTypeData::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DepositTypeData.starttime)
}

// optional .Cmd.EDepositState state = 4;
inline bool DepositTypeData::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DepositTypeData::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DepositTypeData::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DepositTypeData::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::Cmd::EDepositState DepositTypeData::state() const {
  // @@protoc_insertion_point(field_get:Cmd.DepositTypeData.state)
  return static_cast< ::Cmd::EDepositState >(state_);
}
inline void DepositTypeData::set_state(::Cmd::EDepositState value) {
  assert(::Cmd::EDepositState_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DepositTypeData.state)
}

// optional bool invalid = 5 [default = false];
inline bool DepositTypeData::has_invalid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DepositTypeData::set_has_invalid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DepositTypeData::clear_has_invalid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DepositTypeData::clear_invalid() {
  invalid_ = false;
  clear_has_invalid();
}
inline bool DepositTypeData::invalid() const {
  // @@protoc_insertion_point(field_get:Cmd.DepositTypeData.invalid)
  return invalid_;
}
inline void DepositTypeData::set_invalid(bool value) {
  set_has_invalid();
  invalid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DepositTypeData.invalid)
}

// -------------------------------------------------------------------

// DepositCardData

// optional uint32 itemid = 1;
inline bool DepositCardData::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DepositCardData::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DepositCardData::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DepositCardData::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 DepositCardData::itemid() const {
  // @@protoc_insertion_point(field_get:Cmd.DepositCardData.itemid)
  return itemid_;
}
inline void DepositCardData::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DepositCardData.itemid)
}

// optional bool isused = 2 [default = false];
inline bool DepositCardData::has_isused() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DepositCardData::set_has_isused() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DepositCardData::clear_has_isused() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DepositCardData::clear_isused() {
  isused_ = false;
  clear_has_isused();
}
inline bool DepositCardData::isused() const {
  // @@protoc_insertion_point(field_get:Cmd.DepositCardData.isused)
  return isused_;
}
inline void DepositCardData::set_isused(bool value) {
  set_has_isused();
  isused_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DepositCardData.isused)
}

// -------------------------------------------------------------------

// ChargeQueryCmd

// optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
inline bool ChargeQueryCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChargeQueryCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChargeQueryCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChargeQueryCmd::clear_cmd() {
  cmd_ = 25;
  clear_has_cmd();
}
inline ::Cmd::Command ChargeQueryCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ChargeQueryCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ChargeQueryCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChargeQueryCmd.cmd)
}

// optional .Cmd.EventParam param = 2 [default = USER_EVENT_CHARGE_QUERY];
inline bool ChargeQueryCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChargeQueryCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChargeQueryCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChargeQueryCmd::clear_param() {
  param_ = 8;
  clear_has_param();
}
inline ::Cmd::EventParam ChargeQueryCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ChargeQueryCmd.param)
  return static_cast< ::Cmd::EventParam >(param_);
}
inline void ChargeQueryCmd::set_param(::Cmd::EventParam value) {
  assert(::Cmd::EventParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChargeQueryCmd.param)
}

// optional uint32 data_id = 3;
inline bool ChargeQueryCmd::has_data_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChargeQueryCmd::set_has_data_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChargeQueryCmd::clear_has_data_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChargeQueryCmd::clear_data_id() {
  data_id_ = 0u;
  clear_has_data_id();
}
inline ::google::protobuf::uint32 ChargeQueryCmd::data_id() const {
  // @@protoc_insertion_point(field_get:Cmd.ChargeQueryCmd.data_id)
  return data_id_;
}
inline void ChargeQueryCmd::set_data_id(::google::protobuf::uint32 value) {
  set_has_data_id();
  data_id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChargeQueryCmd.data_id)
}

// optional bool ret = 4;
inline bool ChargeQueryCmd::has_ret() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChargeQueryCmd::set_has_ret() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChargeQueryCmd::clear_has_ret() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChargeQueryCmd::clear_ret() {
  ret_ = false;
  clear_has_ret();
}
inline bool ChargeQueryCmd::ret() const {
  // @@protoc_insertion_point(field_get:Cmd.ChargeQueryCmd.ret)
  return ret_;
}
inline void ChargeQueryCmd::set_ret(bool value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChargeQueryCmd.ret)
}

// optional uint32 charged_count = 5;
inline bool ChargeQueryCmd::has_charged_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChargeQueryCmd::set_has_charged_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChargeQueryCmd::clear_has_charged_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChargeQueryCmd::clear_charged_count() {
  charged_count_ = 0u;
  clear_has_charged_count();
}
inline ::google::protobuf::uint32 ChargeQueryCmd::charged_count() const {
  // @@protoc_insertion_point(field_get:Cmd.ChargeQueryCmd.charged_count)
  return charged_count_;
}
inline void ChargeQueryCmd::set_charged_count(::google::protobuf::uint32 value) {
  set_has_charged_count();
  charged_count_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChargeQueryCmd.charged_count)
}

// -------------------------------------------------------------------

// DepositCardInfo

// optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
inline bool DepositCardInfo::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DepositCardInfo::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DepositCardInfo::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DepositCardInfo::clear_cmd() {
  cmd_ = 25;
  clear_has_cmd();
}
inline ::Cmd::Command DepositCardInfo::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.DepositCardInfo.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void DepositCardInfo::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DepositCardInfo.cmd)
}

// optional .Cmd.EventParam param = 2 [default = USER_EVENT_DEPOSIT_CARD_INFO];
inline bool DepositCardInfo::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DepositCardInfo::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DepositCardInfo::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DepositCardInfo::clear_param() {
  param_ = 9;
  clear_has_param();
}
inline ::Cmd::EventParam DepositCardInfo::param() const {
  // @@protoc_insertion_point(field_get:Cmd.DepositCardInfo.param)
  return static_cast< ::Cmd::EventParam >(param_);
}
inline void DepositCardInfo::set_param(::Cmd::EventParam value) {
  assert(::Cmd::EventParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DepositCardInfo.param)
}

// repeated .Cmd.DepositTypeData card_datas = 3;
inline int DepositCardInfo::card_datas_size() const {
  return card_datas_.size();
}
inline void DepositCardInfo::clear_card_datas() {
  card_datas_.Clear();
}
inline const ::Cmd::DepositTypeData& DepositCardInfo::card_datas(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.DepositCardInfo.card_datas)
  return card_datas_.Get(index);
}
inline ::Cmd::DepositTypeData* DepositCardInfo::mutable_card_datas(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.DepositCardInfo.card_datas)
  return card_datas_.Mutable(index);
}
inline ::Cmd::DepositTypeData* DepositCardInfo::add_card_datas() {
  // @@protoc_insertion_point(field_add:Cmd.DepositCardInfo.card_datas)
  return card_datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::DepositTypeData >&
DepositCardInfo::card_datas() const {
  // @@protoc_insertion_point(field_list:Cmd.DepositCardInfo.card_datas)
  return card_datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::DepositTypeData >*
DepositCardInfo::mutable_card_datas() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.DepositCardInfo.card_datas)
  return &card_datas_;
}

// -------------------------------------------------------------------

// DelTransformUserEvent

// optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
inline bool DelTransformUserEvent::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelTransformUserEvent::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelTransformUserEvent::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelTransformUserEvent::clear_cmd() {
  cmd_ = 25;
  clear_has_cmd();
}
inline ::Cmd::Command DelTransformUserEvent::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.DelTransformUserEvent.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void DelTransformUserEvent::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DelTransformUserEvent.cmd)
}

// optional .Cmd.EventParam param = 2 [default = USER_EVENT_DEL_TRANSFORM];
inline bool DelTransformUserEvent::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DelTransformUserEvent::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DelTransformUserEvent::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DelTransformUserEvent::clear_param() {
  param_ = 10;
  clear_has_param();
}
inline ::Cmd::EventParam DelTransformUserEvent::param() const {
  // @@protoc_insertion_point(field_get:Cmd.DelTransformUserEvent.param)
  return static_cast< ::Cmd::EventParam >(param_);
}
inline void DelTransformUserEvent::set_param(::Cmd::EventParam value) {
  assert(::Cmd::EventParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DelTransformUserEvent.param)
}

// -------------------------------------------------------------------

// InviteCatFailUserEvent

// optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
inline bool InviteCatFailUserEvent::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InviteCatFailUserEvent::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InviteCatFailUserEvent::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InviteCatFailUserEvent::clear_cmd() {
  cmd_ = 25;
  clear_has_cmd();
}
inline ::Cmd::Command InviteCatFailUserEvent::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.InviteCatFailUserEvent.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void InviteCatFailUserEvent::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.InviteCatFailUserEvent.cmd)
}

// optional .Cmd.EventParam param = 2 [default = USER_EVENT_INVITECAT_FAIL];
inline bool InviteCatFailUserEvent::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InviteCatFailUserEvent::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InviteCatFailUserEvent::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InviteCatFailUserEvent::clear_param() {
  param_ = 11;
  clear_has_param();
}
inline ::Cmd::EventParam InviteCatFailUserEvent::param() const {
  // @@protoc_insertion_point(field_get:Cmd.InviteCatFailUserEvent.param)
  return static_cast< ::Cmd::EventParam >(param_);
}
inline void InviteCatFailUserEvent::set_param(::Cmd::EventParam value) {
  assert(::Cmd::EventParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.InviteCatFailUserEvent.param)
}

// -------------------------------------------------------------------

// TrigNpcFuncUserEvent

// optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
inline bool TrigNpcFuncUserEvent::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TrigNpcFuncUserEvent::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TrigNpcFuncUserEvent::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TrigNpcFuncUserEvent::clear_cmd() {
  cmd_ = 25;
  clear_has_cmd();
}
inline ::Cmd::Command TrigNpcFuncUserEvent::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TrigNpcFuncUserEvent.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TrigNpcFuncUserEvent::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TrigNpcFuncUserEvent.cmd)
}

// optional .Cmd.EventParam param = 2 [default = USER_EVENT_NPC_FUNCTION];
inline bool TrigNpcFuncUserEvent::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TrigNpcFuncUserEvent::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TrigNpcFuncUserEvent::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TrigNpcFuncUserEvent::clear_param() {
  param_ = 12;
  clear_has_param();
}
inline ::Cmd::EventParam TrigNpcFuncUserEvent::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TrigNpcFuncUserEvent.param)
  return static_cast< ::Cmd::EventParam >(param_);
}
inline void TrigNpcFuncUserEvent::set_param(::Cmd::EventParam value) {
  assert(::Cmd::EventParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TrigNpcFuncUserEvent.param)
}

// required uint64 npcguid = 3;
inline bool TrigNpcFuncUserEvent::has_npcguid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TrigNpcFuncUserEvent::set_has_npcguid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TrigNpcFuncUserEvent::clear_has_npcguid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TrigNpcFuncUserEvent::clear_npcguid() {
  npcguid_ = GOOGLE_ULONGLONG(0);
  clear_has_npcguid();
}
inline ::google::protobuf::uint64 TrigNpcFuncUserEvent::npcguid() const {
  // @@protoc_insertion_point(field_get:Cmd.TrigNpcFuncUserEvent.npcguid)
  return npcguid_;
}
inline void TrigNpcFuncUserEvent::set_npcguid(::google::protobuf::uint64 value) {
  set_has_npcguid();
  npcguid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TrigNpcFuncUserEvent.npcguid)
}

// required uint32 funcid = 4;
inline bool TrigNpcFuncUserEvent::has_funcid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TrigNpcFuncUserEvent::set_has_funcid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TrigNpcFuncUserEvent::clear_has_funcid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TrigNpcFuncUserEvent::clear_funcid() {
  funcid_ = 0u;
  clear_has_funcid();
}
inline ::google::protobuf::uint32 TrigNpcFuncUserEvent::funcid() const {
  // @@protoc_insertion_point(field_get:Cmd.TrigNpcFuncUserEvent.funcid)
  return funcid_;
}
inline void TrigNpcFuncUserEvent::set_funcid(::google::protobuf::uint32 value) {
  set_has_funcid();
  funcid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TrigNpcFuncUserEvent.funcid)
}

// -------------------------------------------------------------------

// SystemStringUserEvent

// optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
inline bool SystemStringUserEvent::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemStringUserEvent::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SystemStringUserEvent::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SystemStringUserEvent::clear_cmd() {
  cmd_ = 25;
  clear_has_cmd();
}
inline ::Cmd::Command SystemStringUserEvent::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SystemStringUserEvent.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SystemStringUserEvent::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SystemStringUserEvent.cmd)
}

// optional .Cmd.EventParam param = 2 [default = USER_EVENT_SYSTEM_STRING];
inline bool SystemStringUserEvent::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemStringUserEvent::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SystemStringUserEvent::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SystemStringUserEvent::clear_param() {
  param_ = 13;
  clear_has_param();
}
inline ::Cmd::EventParam SystemStringUserEvent::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SystemStringUserEvent.param)
  return static_cast< ::Cmd::EventParam >(param_);
}
inline void SystemStringUserEvent::set_param(::Cmd::EventParam value) {
  assert(::Cmd::EventParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SystemStringUserEvent.param)
}

// optional .Cmd.ESystemStringType etype = 3 [default = ESYSTEMSTRING_MIN];
inline bool SystemStringUserEvent::has_etype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SystemStringUserEvent::set_has_etype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SystemStringUserEvent::clear_has_etype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SystemStringUserEvent::clear_etype() {
  etype_ = 0;
  clear_has_etype();
}
inline ::Cmd::ESystemStringType SystemStringUserEvent::etype() const {
  // @@protoc_insertion_point(field_get:Cmd.SystemStringUserEvent.etype)
  return static_cast< ::Cmd::ESystemStringType >(etype_);
}
inline void SystemStringUserEvent::set_etype(::Cmd::ESystemStringType value) {
  assert(::Cmd::ESystemStringType_IsValid(value));
  set_has_etype();
  etype_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SystemStringUserEvent.etype)
}

// -------------------------------------------------------------------

// HandCatUserEvent

// optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
inline bool HandCatUserEvent::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HandCatUserEvent::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HandCatUserEvent::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HandCatUserEvent::clear_cmd() {
  cmd_ = 25;
  clear_has_cmd();
}
inline ::Cmd::Command HandCatUserEvent::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.HandCatUserEvent.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void HandCatUserEvent::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.HandCatUserEvent.cmd)
}

// optional .Cmd.EventParam param = 2 [default = USER_EVENT_HAND_CAT];
inline bool HandCatUserEvent::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HandCatUserEvent::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HandCatUserEvent::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HandCatUserEvent::clear_param() {
  param_ = 14;
  clear_has_param();
}
inline ::Cmd::EventParam HandCatUserEvent::param() const {
  // @@protoc_insertion_point(field_get:Cmd.HandCatUserEvent.param)
  return static_cast< ::Cmd::EventParam >(param_);
}
inline void HandCatUserEvent::set_param(::Cmd::EventParam value) {
  assert(::Cmd::EventParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.HandCatUserEvent.param)
}

// required uint64 catguid = 3;
inline bool HandCatUserEvent::has_catguid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HandCatUserEvent::set_has_catguid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HandCatUserEvent::clear_has_catguid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HandCatUserEvent::clear_catguid() {
  catguid_ = GOOGLE_ULONGLONG(0);
  clear_has_catguid();
}
inline ::google::protobuf::uint64 HandCatUserEvent::catguid() const {
  // @@protoc_insertion_point(field_get:Cmd.HandCatUserEvent.catguid)
  return catguid_;
}
inline void HandCatUserEvent::set_catguid(::google::protobuf::uint64 value) {
  set_has_catguid();
  catguid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.HandCatUserEvent.catguid)
}

// optional bool breakup = 4 [default = false];
inline bool HandCatUserEvent::has_breakup() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HandCatUserEvent::set_has_breakup() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HandCatUserEvent::clear_has_breakup() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HandCatUserEvent::clear_breakup() {
  breakup_ = false;
  clear_has_breakup();
}
inline bool HandCatUserEvent::breakup() const {
  // @@protoc_insertion_point(field_get:Cmd.HandCatUserEvent.breakup)
  return breakup_;
}
inline void HandCatUserEvent::set_breakup(bool value) {
  set_has_breakup();
  breakup_ = value;
  // @@protoc_insertion_point(field_set:Cmd.HandCatUserEvent.breakup)
}

// -------------------------------------------------------------------

// ChangeTitle

// optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
inline bool ChangeTitle::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeTitle::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeTitle::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeTitle::clear_cmd() {
  cmd_ = 25;
  clear_has_cmd();
}
inline ::Cmd::Command ChangeTitle::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeTitle.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ChangeTitle::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeTitle.cmd)
}

// optional .Cmd.EventParam param = 2 [default = USER_EVENT_CHANGE_TITLE];
inline bool ChangeTitle::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeTitle::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeTitle::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeTitle::clear_param() {
  param_ = 15;
  clear_has_param();
}
inline ::Cmd::EventParam ChangeTitle::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeTitle.param)
  return static_cast< ::Cmd::EventParam >(param_);
}
inline void ChangeTitle::set_param(::Cmd::EventParam value) {
  assert(::Cmd::EventParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeTitle.param)
}

// optional .Cmd.TitleData title_data = 3;
inline bool ChangeTitle::has_title_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChangeTitle::set_has_title_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChangeTitle::clear_has_title_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChangeTitle::clear_title_data() {
  if (title_data_ != NULL) title_data_->::Cmd::TitleData::Clear();
  clear_has_title_data();
}
inline const ::Cmd::TitleData& ChangeTitle::title_data() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeTitle.title_data)
  return title_data_ != NULL ? *title_data_ : *default_instance_->title_data_;
}
inline ::Cmd::TitleData* ChangeTitle::mutable_title_data() {
  set_has_title_data();
  if (title_data_ == NULL) title_data_ = new ::Cmd::TitleData;
  // @@protoc_insertion_point(field_mutable:Cmd.ChangeTitle.title_data)
  return title_data_;
}
inline ::Cmd::TitleData* ChangeTitle::release_title_data() {
  clear_has_title_data();
  ::Cmd::TitleData* temp = title_data_;
  title_data_ = NULL;
  return temp;
}
inline void ChangeTitle::set_allocated_title_data(::Cmd::TitleData* title_data) {
  delete title_data_;
  title_data_ = title_data;
  if (title_data) {
    set_has_title_data();
  } else {
    clear_has_title_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ChangeTitle.title_data)
}

// optional uint64 charid = 4;
inline bool ChangeTitle::has_charid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChangeTitle::set_has_charid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChangeTitle::clear_has_charid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChangeTitle::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ChangeTitle::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeTitle.charid)
  return charid_;
}
inline void ChangeTitle::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeTitle.charid)
}

// -------------------------------------------------------------------

// ChargeCntInfo

// optional uint32 dataid = 1;
inline bool ChargeCntInfo::has_dataid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChargeCntInfo::set_has_dataid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChargeCntInfo::clear_has_dataid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChargeCntInfo::clear_dataid() {
  dataid_ = 0u;
  clear_has_dataid();
}
inline ::google::protobuf::uint32 ChargeCntInfo::dataid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChargeCntInfo.dataid)
  return dataid_;
}
inline void ChargeCntInfo::set_dataid(::google::protobuf::uint32 value) {
  set_has_dataid();
  dataid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChargeCntInfo.dataid)
}

// optional uint32 count = 2;
inline bool ChargeCntInfo::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChargeCntInfo::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChargeCntInfo::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChargeCntInfo::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 ChargeCntInfo::count() const {
  // @@protoc_insertion_point(field_get:Cmd.ChargeCntInfo.count)
  return count_;
}
inline void ChargeCntInfo::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChargeCntInfo.count)
}

// optional uint32 limit = 3 [default = 0];
inline bool ChargeCntInfo::has_limit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChargeCntInfo::set_has_limit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChargeCntInfo::clear_has_limit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChargeCntInfo::clear_limit() {
  limit_ = 0u;
  clear_has_limit();
}
inline ::google::protobuf::uint32 ChargeCntInfo::limit() const {
  // @@protoc_insertion_point(field_get:Cmd.ChargeCntInfo.limit)
  return limit_;
}
inline void ChargeCntInfo::set_limit(::google::protobuf::uint32 value) {
  set_has_limit();
  limit_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChargeCntInfo.limit)
}

// -------------------------------------------------------------------

// QueryChargeCnt

// optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
inline bool QueryChargeCnt::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryChargeCnt::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryChargeCnt::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryChargeCnt::clear_cmd() {
  cmd_ = 25;
  clear_has_cmd();
}
inline ::Cmd::Command QueryChargeCnt::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryChargeCnt.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryChargeCnt::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryChargeCnt.cmd)
}

// optional .Cmd.EventParam param = 2 [default = USER_EVENT_QUERY_CHARGE_CNT];
inline bool QueryChargeCnt::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryChargeCnt::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryChargeCnt::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryChargeCnt::clear_param() {
  param_ = 16;
  clear_has_param();
}
inline ::Cmd::EventParam QueryChargeCnt::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryChargeCnt.param)
  return static_cast< ::Cmd::EventParam >(param_);
}
inline void QueryChargeCnt::set_param(::Cmd::EventParam value) {
  assert(::Cmd::EventParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryChargeCnt.param)
}

// repeated .Cmd.ChargeCntInfo info = 3;
inline int QueryChargeCnt::info_size() const {
  return info_.size();
}
inline void QueryChargeCnt::clear_info() {
  info_.Clear();
}
inline const ::Cmd::ChargeCntInfo& QueryChargeCnt::info(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QueryChargeCnt.info)
  return info_.Get(index);
}
inline ::Cmd::ChargeCntInfo* QueryChargeCnt::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.QueryChargeCnt.info)
  return info_.Mutable(index);
}
inline ::Cmd::ChargeCntInfo* QueryChargeCnt::add_info() {
  // @@protoc_insertion_point(field_add:Cmd.QueryChargeCnt.info)
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ChargeCntInfo >&
QueryChargeCnt::info() const {
  // @@protoc_insertion_point(field_list:Cmd.QueryChargeCnt.info)
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ChargeCntInfo >*
QueryChargeCnt::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QueryChargeCnt.info)
  return &info_;
}

// -------------------------------------------------------------------

// NTFMonthCardEnd

// optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
inline bool NTFMonthCardEnd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NTFMonthCardEnd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NTFMonthCardEnd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NTFMonthCardEnd::clear_cmd() {
  cmd_ = 25;
  clear_has_cmd();
}
inline ::Cmd::Command NTFMonthCardEnd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.NTFMonthCardEnd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void NTFMonthCardEnd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.NTFMonthCardEnd.cmd)
}

// optional .Cmd.EventParam param = 2 [default = USER_EVENT_NTF_MONTHCARD_END];
inline bool NTFMonthCardEnd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NTFMonthCardEnd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NTFMonthCardEnd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NTFMonthCardEnd::clear_param() {
  param_ = 17;
  clear_has_param();
}
inline ::Cmd::EventParam NTFMonthCardEnd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.NTFMonthCardEnd.param)
  return static_cast< ::Cmd::EventParam >(param_);
}
inline void NTFMonthCardEnd::set_param(::Cmd::EventParam value) {
  assert(::Cmd::EventParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.NTFMonthCardEnd.param)
}

// -------------------------------------------------------------------

// LoveLetterUse

// optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
inline bool LoveLetterUse::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoveLetterUse::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoveLetterUse::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoveLetterUse::clear_cmd() {
  cmd_ = 25;
  clear_has_cmd();
}
inline ::Cmd::Command LoveLetterUse::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.LoveLetterUse.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void LoveLetterUse::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LoveLetterUse.cmd)
}

// optional .Cmd.EventParam param = 2 [default = USER_EVENT_LOVELETTER_USE];
inline bool LoveLetterUse::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoveLetterUse::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoveLetterUse::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoveLetterUse::clear_param() {
  param_ = 18;
  clear_has_param();
}
inline ::Cmd::EventParam LoveLetterUse::param() const {
  // @@protoc_insertion_point(field_get:Cmd.LoveLetterUse.param)
  return static_cast< ::Cmd::EventParam >(param_);
}
inline void LoveLetterUse::set_param(::Cmd::EventParam value) {
  assert(::Cmd::EventParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LoveLetterUse.param)
}

// optional string itemguid = 3;
inline bool LoveLetterUse::has_itemguid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoveLetterUse::set_has_itemguid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoveLetterUse::clear_has_itemguid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoveLetterUse::clear_itemguid() {
  if (itemguid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemguid_->clear();
  }
  clear_has_itemguid();
}
inline const ::std::string& LoveLetterUse::itemguid() const {
  // @@protoc_insertion_point(field_get:Cmd.LoveLetterUse.itemguid)
  return *itemguid_;
}
inline void LoveLetterUse::set_itemguid(const ::std::string& value) {
  set_has_itemguid();
  if (itemguid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemguid_ = new ::std::string;
  }
  itemguid_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.LoveLetterUse.itemguid)
}
inline void LoveLetterUse::set_itemguid(const char* value) {
  set_has_itemguid();
  if (itemguid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemguid_ = new ::std::string;
  }
  itemguid_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.LoveLetterUse.itemguid)
}
inline void LoveLetterUse::set_itemguid(const char* value, size_t size) {
  set_has_itemguid();
  if (itemguid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemguid_ = new ::std::string;
  }
  itemguid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.LoveLetterUse.itemguid)
}
inline ::std::string* LoveLetterUse::mutable_itemguid() {
  set_has_itemguid();
  if (itemguid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemguid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.LoveLetterUse.itemguid)
  return itemguid_;
}
inline ::std::string* LoveLetterUse::release_itemguid() {
  clear_has_itemguid();
  if (itemguid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = itemguid_;
    itemguid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoveLetterUse::set_allocated_itemguid(::std::string* itemguid) {
  if (itemguid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete itemguid_;
  }
  if (itemguid) {
    set_has_itemguid();
    itemguid_ = itemguid;
  } else {
    clear_has_itemguid();
    itemguid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.LoveLetterUse.itemguid)
}

// optional uint64 targets = 4;
inline bool LoveLetterUse::has_targets() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoveLetterUse::set_has_targets() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoveLetterUse::clear_has_targets() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoveLetterUse::clear_targets() {
  targets_ = GOOGLE_ULONGLONG(0);
  clear_has_targets();
}
inline ::google::protobuf::uint64 LoveLetterUse::targets() const {
  // @@protoc_insertion_point(field_get:Cmd.LoveLetterUse.targets)
  return targets_;
}
inline void LoveLetterUse::set_targets(::google::protobuf::uint64 value) {
  set_has_targets();
  targets_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LoveLetterUse.targets)
}

// optional string content = 5;
inline bool LoveLetterUse::has_content() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoveLetterUse::set_has_content() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoveLetterUse::clear_has_content() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoveLetterUse::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& LoveLetterUse::content() const {
  // @@protoc_insertion_point(field_get:Cmd.LoveLetterUse.content)
  return *content_;
}
inline void LoveLetterUse::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.LoveLetterUse.content)
}
inline void LoveLetterUse::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.LoveLetterUse.content)
}
inline void LoveLetterUse::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.LoveLetterUse.content)
}
inline ::std::string* LoveLetterUse::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.LoveLetterUse.content)
  return content_;
}
inline ::std::string* LoveLetterUse::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoveLetterUse::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.LoveLetterUse.content)
}

// optional .Cmd.ELetterType type = 6 [default = ELETTERTYPE_CHRISTMAS];
inline bool LoveLetterUse::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LoveLetterUse::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LoveLetterUse::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LoveLetterUse::clear_type() {
  type_ = 3;
  clear_has_type();
}
inline ::Cmd::ELetterType LoveLetterUse::type() const {
  // @@protoc_insertion_point(field_get:Cmd.LoveLetterUse.type)
  return static_cast< ::Cmd::ELetterType >(type_);
}
inline void LoveLetterUse::set_type(::Cmd::ELetterType value) {
  assert(::Cmd::ELetterType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LoveLetterUse.type)
}

// -------------------------------------------------------------------

// ActivityCntItem

// optional uint32 activityid = 1;
inline bool ActivityCntItem::has_activityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityCntItem::set_has_activityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityCntItem::clear_has_activityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityCntItem::clear_activityid() {
  activityid_ = 0u;
  clear_has_activityid();
}
inline ::google::protobuf::uint32 ActivityCntItem::activityid() const {
  // @@protoc_insertion_point(field_get:Cmd.ActivityCntItem.activityid)
  return activityid_;
}
inline void ActivityCntItem::set_activityid(::google::protobuf::uint32 value) {
  set_has_activityid();
  activityid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActivityCntItem.activityid)
}

// optional uint32 count = 2;
inline bool ActivityCntItem::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActivityCntItem::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActivityCntItem::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActivityCntItem::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 ActivityCntItem::count() const {
  // @@protoc_insertion_point(field_get:Cmd.ActivityCntItem.count)
  return count_;
}
inline void ActivityCntItem::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ActivityCntItem.count)
}

// -------------------------------------------------------------------

// QueryActivityCnt

// optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
inline bool QueryActivityCnt::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryActivityCnt::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryActivityCnt::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryActivityCnt::clear_cmd() {
  cmd_ = 25;
  clear_has_cmd();
}
inline ::Cmd::Command QueryActivityCnt::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryActivityCnt.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryActivityCnt::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryActivityCnt.cmd)
}

// optional .Cmd.EventParam param = 2 [default = USER_EVENT_QUERY_ACTIVITY_CNT];
inline bool QueryActivityCnt::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryActivityCnt::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryActivityCnt::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryActivityCnt::clear_param() {
  param_ = 19;
  clear_has_param();
}
inline ::Cmd::EventParam QueryActivityCnt::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryActivityCnt.param)
  return static_cast< ::Cmd::EventParam >(param_);
}
inline void QueryActivityCnt::set_param(::Cmd::EventParam value) {
  assert(::Cmd::EventParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryActivityCnt.param)
}

// repeated .Cmd.ActivityCntItem info = 3;
inline int QueryActivityCnt::info_size() const {
  return info_.size();
}
inline void QueryActivityCnt::clear_info() {
  info_.Clear();
}
inline const ::Cmd::ActivityCntItem& QueryActivityCnt::info(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QueryActivityCnt.info)
  return info_.Get(index);
}
inline ::Cmd::ActivityCntItem* QueryActivityCnt::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.QueryActivityCnt.info)
  return info_.Mutable(index);
}
inline ::Cmd::ActivityCntItem* QueryActivityCnt::add_info() {
  // @@protoc_insertion_point(field_add:Cmd.QueryActivityCnt.info)
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ActivityCntItem >&
QueryActivityCnt::info() const {
  // @@protoc_insertion_point(field_list:Cmd.QueryActivityCnt.info)
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ActivityCntItem >*
QueryActivityCnt::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QueryActivityCnt.info)
  return &info_;
}

// -------------------------------------------------------------------

// UpdateActivityCnt

// optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
inline bool UpdateActivityCnt::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateActivityCnt::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateActivityCnt::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateActivityCnt::clear_cmd() {
  cmd_ = 25;
  clear_has_cmd();
}
inline ::Cmd::Command UpdateActivityCnt::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateActivityCnt.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UpdateActivityCnt::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateActivityCnt.cmd)
}

// optional .Cmd.EventParam param = 2 [default = USER_EVENT_UPDATE_ACTIVITY_CNT];
inline bool UpdateActivityCnt::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateActivityCnt::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateActivityCnt::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateActivityCnt::clear_param() {
  param_ = 20;
  clear_has_param();
}
inline ::Cmd::EventParam UpdateActivityCnt::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateActivityCnt.param)
  return static_cast< ::Cmd::EventParam >(param_);
}
inline void UpdateActivityCnt::set_param(::Cmd::EventParam value) {
  assert(::Cmd::EventParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateActivityCnt.param)
}

// optional .Cmd.ActivityCntItem info = 3;
inline bool UpdateActivityCnt::has_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateActivityCnt::set_has_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateActivityCnt::clear_has_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateActivityCnt::clear_info() {
  if (info_ != NULL) info_->::Cmd::ActivityCntItem::Clear();
  clear_has_info();
}
inline const ::Cmd::ActivityCntItem& UpdateActivityCnt::info() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateActivityCnt.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::Cmd::ActivityCntItem* UpdateActivityCnt::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::Cmd::ActivityCntItem;
  // @@protoc_insertion_point(field_mutable:Cmd.UpdateActivityCnt.info)
  return info_;
}
inline ::Cmd::ActivityCntItem* UpdateActivityCnt::release_info() {
  clear_has_info();
  ::Cmd::ActivityCntItem* temp = info_;
  info_ = NULL;
  return temp;
}
inline void UpdateActivityCnt::set_allocated_info(::Cmd::ActivityCntItem* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.UpdateActivityCnt.info)
}

// -------------------------------------------------------------------

// VersionCardInfo

// optional uint32 version = 1;
inline bool VersionCardInfo::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VersionCardInfo::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VersionCardInfo::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VersionCardInfo::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 VersionCardInfo::version() const {
  // @@protoc_insertion_point(field_get:Cmd.VersionCardInfo.version)
  return version_;
}
inline void VersionCardInfo::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:Cmd.VersionCardInfo.version)
}

// optional uint32 id1 = 2;
inline bool VersionCardInfo::has_id1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VersionCardInfo::set_has_id1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VersionCardInfo::clear_has_id1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VersionCardInfo::clear_id1() {
  id1_ = 0u;
  clear_has_id1();
}
inline ::google::protobuf::uint32 VersionCardInfo::id1() const {
  // @@protoc_insertion_point(field_get:Cmd.VersionCardInfo.id1)
  return id1_;
}
inline void VersionCardInfo::set_id1(::google::protobuf::uint32 value) {
  set_has_id1();
  id1_ = value;
  // @@protoc_insertion_point(field_set:Cmd.VersionCardInfo.id1)
}

// optional uint32 id2 = 3;
inline bool VersionCardInfo::has_id2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VersionCardInfo::set_has_id2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VersionCardInfo::clear_has_id2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VersionCardInfo::clear_id2() {
  id2_ = 0u;
  clear_has_id2();
}
inline ::google::protobuf::uint32 VersionCardInfo::id2() const {
  // @@protoc_insertion_point(field_get:Cmd.VersionCardInfo.id2)
  return id2_;
}
inline void VersionCardInfo::set_id2(::google::protobuf::uint32 value) {
  set_has_id2();
  id2_ = value;
  // @@protoc_insertion_point(field_set:Cmd.VersionCardInfo.id2)
}

// -------------------------------------------------------------------

// NtfVersionCardInfo

// optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
inline bool NtfVersionCardInfo::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NtfVersionCardInfo::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NtfVersionCardInfo::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NtfVersionCardInfo::clear_cmd() {
  cmd_ = 25;
  clear_has_cmd();
}
inline ::Cmd::Command NtfVersionCardInfo::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.NtfVersionCardInfo.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void NtfVersionCardInfo::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.NtfVersionCardInfo.cmd)
}

// optional .Cmd.EventParam param = 2 [default = USER_EVENT_NTF_VERSION_CARD];
inline bool NtfVersionCardInfo::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NtfVersionCardInfo::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NtfVersionCardInfo::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NtfVersionCardInfo::clear_param() {
  param_ = 23;
  clear_has_param();
}
inline ::Cmd::EventParam NtfVersionCardInfo::param() const {
  // @@protoc_insertion_point(field_get:Cmd.NtfVersionCardInfo.param)
  return static_cast< ::Cmd::EventParam >(param_);
}
inline void NtfVersionCardInfo::set_param(::Cmd::EventParam value) {
  assert(::Cmd::EventParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.NtfVersionCardInfo.param)
}

// repeated .Cmd.VersionCardInfo info = 3;
inline int NtfVersionCardInfo::info_size() const {
  return info_.size();
}
inline void NtfVersionCardInfo::clear_info() {
  info_.Clear();
}
inline const ::Cmd::VersionCardInfo& NtfVersionCardInfo::info(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.NtfVersionCardInfo.info)
  return info_.Get(index);
}
inline ::Cmd::VersionCardInfo* NtfVersionCardInfo::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.NtfVersionCardInfo.info)
  return info_.Mutable(index);
}
inline ::Cmd::VersionCardInfo* NtfVersionCardInfo::add_info() {
  // @@protoc_insertion_point(field_add:Cmd.NtfVersionCardInfo.info)
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::VersionCardInfo >&
NtfVersionCardInfo::info() const {
  // @@protoc_insertion_point(field_list:Cmd.NtfVersionCardInfo.info)
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::VersionCardInfo >*
NtfVersionCardInfo::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.NtfVersionCardInfo.info)
  return &info_;
}

// -------------------------------------------------------------------

// DieTimeCountEventCmd

// optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
inline bool DieTimeCountEventCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DieTimeCountEventCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DieTimeCountEventCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DieTimeCountEventCmd::clear_cmd() {
  cmd_ = 25;
  clear_has_cmd();
}
inline ::Cmd::Command DieTimeCountEventCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.DieTimeCountEventCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void DieTimeCountEventCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DieTimeCountEventCmd.cmd)
}

// optional .Cmd.EventParam param = 2 [default = USER_EVENT_WAIT_RELIVE];
inline bool DieTimeCountEventCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DieTimeCountEventCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DieTimeCountEventCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DieTimeCountEventCmd::clear_param() {
  param_ = 24;
  clear_has_param();
}
inline ::Cmd::EventParam DieTimeCountEventCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.DieTimeCountEventCmd.param)
  return static_cast< ::Cmd::EventParam >(param_);
}
inline void DieTimeCountEventCmd::set_param(::Cmd::EventParam value) {
  assert(::Cmd::EventParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DieTimeCountEventCmd.param)
}

// optional uint32 time = 3 [default = 0];
inline bool DieTimeCountEventCmd::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DieTimeCountEventCmd::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DieTimeCountEventCmd::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DieTimeCountEventCmd::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 DieTimeCountEventCmd::time() const {
  // @@protoc_insertion_point(field_get:Cmd.DieTimeCountEventCmd.time)
  return time_;
}
inline void DieTimeCountEventCmd::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Cmd.DieTimeCountEventCmd.time)
}

// optional string name = 4;
inline bool DieTimeCountEventCmd::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DieTimeCountEventCmd::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DieTimeCountEventCmd::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DieTimeCountEventCmd::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& DieTimeCountEventCmd::name() const {
  // @@protoc_insertion_point(field_get:Cmd.DieTimeCountEventCmd.name)
  return *name_;
}
inline void DieTimeCountEventCmd::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.DieTimeCountEventCmd.name)
}
inline void DieTimeCountEventCmd::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.DieTimeCountEventCmd.name)
}
inline void DieTimeCountEventCmd::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.DieTimeCountEventCmd.name)
}
inline ::std::string* DieTimeCountEventCmd::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.DieTimeCountEventCmd.name)
  return name_;
}
inline ::std::string* DieTimeCountEventCmd::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DieTimeCountEventCmd::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.DieTimeCountEventCmd.name)
}

// -------------------------------------------------------------------

// GetFirstShareRewardUserEvent

// optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
inline bool GetFirstShareRewardUserEvent::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetFirstShareRewardUserEvent::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetFirstShareRewardUserEvent::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetFirstShareRewardUserEvent::clear_cmd() {
  cmd_ = 25;
  clear_has_cmd();
}
inline ::Cmd::Command GetFirstShareRewardUserEvent::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GetFirstShareRewardUserEvent.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GetFirstShareRewardUserEvent::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetFirstShareRewardUserEvent.cmd)
}

// optional .Cmd.EventParam param = 2 [default = USER_EVENT_GET_RECALL_SHARE_REWARD];
inline bool GetFirstShareRewardUserEvent::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetFirstShareRewardUserEvent::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetFirstShareRewardUserEvent::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetFirstShareRewardUserEvent::clear_param() {
  param_ = 22;
  clear_has_param();
}
inline ::Cmd::EventParam GetFirstShareRewardUserEvent::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GetFirstShareRewardUserEvent.param)
  return static_cast< ::Cmd::EventParam >(param_);
}
inline void GetFirstShareRewardUserEvent::set_param(::Cmd::EventParam value) {
  assert(::Cmd::EventParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetFirstShareRewardUserEvent.param)
}

// -------------------------------------------------------------------

// QueryResetTimeEventCmd

// optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
inline bool QueryResetTimeEventCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryResetTimeEventCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryResetTimeEventCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryResetTimeEventCmd::clear_cmd() {
  cmd_ = 25;
  clear_has_cmd();
}
inline ::Cmd::Command QueryResetTimeEventCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryResetTimeEventCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryResetTimeEventCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryResetTimeEventCmd.cmd)
}

// optional .Cmd.EventParam param = 2 [default = USER_EVENT_QUERY_RESETTIME];
inline bool QueryResetTimeEventCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryResetTimeEventCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryResetTimeEventCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryResetTimeEventCmd::clear_param() {
  param_ = 25;
  clear_has_param();
}
inline ::Cmd::EventParam QueryResetTimeEventCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryResetTimeEventCmd.param)
  return static_cast< ::Cmd::EventParam >(param_);
}
inline void QueryResetTimeEventCmd::set_param(::Cmd::EventParam value) {
  assert(::Cmd::EventParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryResetTimeEventCmd.param)
}

// required .Cmd.EAERewardMode etype = 3;
inline bool QueryResetTimeEventCmd::has_etype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryResetTimeEventCmd::set_has_etype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryResetTimeEventCmd::clear_has_etype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryResetTimeEventCmd::clear_etype() {
  etype_ = 0;
  clear_has_etype();
}
inline ::Cmd::EAERewardMode QueryResetTimeEventCmd::etype() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryResetTimeEventCmd.etype)
  return static_cast< ::Cmd::EAERewardMode >(etype_);
}
inline void QueryResetTimeEventCmd::set_etype(::Cmd::EAERewardMode value) {
  assert(::Cmd::EAERewardMode_IsValid(value));
  set_has_etype();
  etype_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryResetTimeEventCmd.etype)
}

// optional uint32 resettime = 4 [default = 0];
inline bool QueryResetTimeEventCmd::has_resettime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryResetTimeEventCmd::set_has_resettime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryResetTimeEventCmd::clear_has_resettime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryResetTimeEventCmd::clear_resettime() {
  resettime_ = 0u;
  clear_has_resettime();
}
inline ::google::protobuf::uint32 QueryResetTimeEventCmd::resettime() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryResetTimeEventCmd.resettime)
  return resettime_;
}
inline void QueryResetTimeEventCmd::set_resettime(::google::protobuf::uint32 value) {
  set_has_resettime();
  resettime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryResetTimeEventCmd.resettime)
}

// -------------------------------------------------------------------

// InOutActEventCmd

// optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
inline bool InOutActEventCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InOutActEventCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InOutActEventCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InOutActEventCmd::clear_cmd() {
  cmd_ = 25;
  clear_has_cmd();
}
inline ::Cmd::Command InOutActEventCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.InOutActEventCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void InOutActEventCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.InOutActEventCmd.cmd)
}

// optional .Cmd.EventParam param = 2 [default = USER_EVENT_INOUT_ACT];
inline bool InOutActEventCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InOutActEventCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InOutActEventCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InOutActEventCmd::clear_param() {
  param_ = 26;
  clear_has_param();
}
inline ::Cmd::EventParam InOutActEventCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.InOutActEventCmd.param)
  return static_cast< ::Cmd::EventParam >(param_);
}
inline void InOutActEventCmd::set_param(::Cmd::EventParam value) {
  assert(::Cmd::EventParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.InOutActEventCmd.param)
}

// required uint64 actid = 3;
inline bool InOutActEventCmd::has_actid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InOutActEventCmd::set_has_actid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InOutActEventCmd::clear_has_actid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InOutActEventCmd::clear_actid() {
  actid_ = GOOGLE_ULONGLONG(0);
  clear_has_actid();
}
inline ::google::protobuf::uint64 InOutActEventCmd::actid() const {
  // @@protoc_insertion_point(field_get:Cmd.InOutActEventCmd.actid)
  return actid_;
}
inline void InOutActEventCmd::set_actid(::google::protobuf::uint64 value) {
  set_has_actid();
  actid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.InOutActEventCmd.actid)
}

// optional bool inout = 4 [default = false];
inline bool InOutActEventCmd::has_inout() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InOutActEventCmd::set_has_inout() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InOutActEventCmd::clear_has_inout() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InOutActEventCmd::clear_inout() {
  inout_ = false;
  clear_has_inout();
}
inline bool InOutActEventCmd::inout() const {
  // @@protoc_insertion_point(field_get:Cmd.InOutActEventCmd.inout)
  return inout_;
}
inline void InOutActEventCmd::set_inout(bool value) {
  set_has_inout();
  inout_ = value;
  // @@protoc_insertion_point(field_set:Cmd.InOutActEventCmd.inout)
}

// -------------------------------------------------------------------

// UserEventMailCmd

// optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
inline bool UserEventMailCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserEventMailCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserEventMailCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserEventMailCmd::clear_cmd() {
  cmd_ = 25;
  clear_has_cmd();
}
inline ::Cmd::Command UserEventMailCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UserEventMailCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UserEventMailCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserEventMailCmd.cmd)
}

// optional .Cmd.EventParam param = 2 [default = USER_EVENT_MAIL];
inline bool UserEventMailCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserEventMailCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserEventMailCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserEventMailCmd::clear_param() {
  param_ = 27;
  clear_has_param();
}
inline ::Cmd::EventParam UserEventMailCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UserEventMailCmd.param)
  return static_cast< ::Cmd::EventParam >(param_);
}
inline void UserEventMailCmd::set_param(::Cmd::EventParam value) {
  assert(::Cmd::EventParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserEventMailCmd.param)
}

// optional .Cmd.EEventMailType eType = 3 [default = EEVENTMAILTYPE_MIN];
inline bool UserEventMailCmd::has_etype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserEventMailCmd::set_has_etype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserEventMailCmd::clear_has_etype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserEventMailCmd::clear_etype() {
  etype_ = 0;
  clear_has_etype();
}
inline ::Cmd::EEventMailType UserEventMailCmd::etype() const {
  // @@protoc_insertion_point(field_get:Cmd.UserEventMailCmd.eType)
  return static_cast< ::Cmd::EEventMailType >(etype_);
}
inline void UserEventMailCmd::set_etype(::Cmd::EEventMailType value) {
  assert(::Cmd::EEventMailType_IsValid(value));
  set_has_etype();
  etype_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserEventMailCmd.eType)
}

// repeated uint32 param32 = 4;
inline int UserEventMailCmd::param32_size() const {
  return param32_.size();
}
inline void UserEventMailCmd::clear_param32() {
  param32_.Clear();
}
inline ::google::protobuf::uint32 UserEventMailCmd::param32(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UserEventMailCmd.param32)
  return param32_.Get(index);
}
inline void UserEventMailCmd::set_param32(int index, ::google::protobuf::uint32 value) {
  param32_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.UserEventMailCmd.param32)
}
inline void UserEventMailCmd::add_param32(::google::protobuf::uint32 value) {
  param32_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.UserEventMailCmd.param32)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UserEventMailCmd::param32() const {
  // @@protoc_insertion_point(field_list:Cmd.UserEventMailCmd.param32)
  return param32_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UserEventMailCmd::mutable_param32() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UserEventMailCmd.param32)
  return &param32_;
}

// repeated uint64 param64 = 5;
inline int UserEventMailCmd::param64_size() const {
  return param64_.size();
}
inline void UserEventMailCmd::clear_param64() {
  param64_.Clear();
}
inline ::google::protobuf::uint64 UserEventMailCmd::param64(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UserEventMailCmd.param64)
  return param64_.Get(index);
}
inline void UserEventMailCmd::set_param64(int index, ::google::protobuf::uint64 value) {
  param64_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.UserEventMailCmd.param64)
}
inline void UserEventMailCmd::add_param64(::google::protobuf::uint64 value) {
  param64_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.UserEventMailCmd.param64)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
UserEventMailCmd::param64() const {
  // @@protoc_insertion_point(field_list:Cmd.UserEventMailCmd.param64)
  return param64_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
UserEventMailCmd::mutable_param64() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UserEventMailCmd.param64)
  return &param64_;
}

// -------------------------------------------------------------------

// LevelupDeadUserEvent

// optional .Cmd.Command cmd = 1 [default = USER_EVENT_PROTOCMD];
inline bool LevelupDeadUserEvent::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LevelupDeadUserEvent::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LevelupDeadUserEvent::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LevelupDeadUserEvent::clear_cmd() {
  cmd_ = 25;
  clear_has_cmd();
}
inline ::Cmd::Command LevelupDeadUserEvent::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.LevelupDeadUserEvent.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void LevelupDeadUserEvent::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LevelupDeadUserEvent.cmd)
}

// optional .Cmd.EventParam param = 2 [default = USER_EVENT_LEVELUP_DEAD];
inline bool LevelupDeadUserEvent::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LevelupDeadUserEvent::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LevelupDeadUserEvent::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LevelupDeadUserEvent::clear_param() {
  param_ = 28;
  clear_has_param();
}
inline ::Cmd::EventParam LevelupDeadUserEvent::param() const {
  // @@protoc_insertion_point(field_get:Cmd.LevelupDeadUserEvent.param)
  return static_cast< ::Cmd::EventParam >(param_);
}
inline void LevelupDeadUserEvent::set_param(::Cmd::EventParam value) {
  assert(::Cmd::EventParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LevelupDeadUserEvent.param)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cmd

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Cmd::EventParam> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EventParam>() {
  return ::Cmd::EventParam_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EFirstActionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EFirstActionType>() {
  return ::Cmd::EFirstActionType_descriptor();
}
template <> struct is_proto_enum< ::Cmd::ETitleType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::ETitleType>() {
  return ::Cmd::ETitleType_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EDepositState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EDepositState>() {
  return ::Cmd::EDepositState_descriptor();
}
template <> struct is_proto_enum< ::Cmd::ESystemStringType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::ESystemStringType>() {
  return ::Cmd::ESystemStringType_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EEventMailType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EEventMailType>() {
  return ::Cmd::EEventMailType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_UserEvent_2eproto__INCLUDED
