// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TeamCmd.proto

#ifndef PROTOBUF_TeamCmd_2eproto__INCLUDED
#define PROTOBUF_TeamCmd_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "xCmd.pb.h"
#include "ProtoCommon.pb.h"
#include "SessionTeam.pb.h"
// @@protoc_insertion_point(includes)

namespace Cmd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_TeamCmd_2eproto();
void protobuf_AssignDesc_TeamCmd_2eproto();
void protobuf_ShutdownFile_TeamCmd_2eproto();

class ForwardAllServerTeamCmd;
class UpdateGuildServerTeamCmd;
class AddRelationTeamCmd;
class LoadLuaTeamCmd;
class TeamMemberInfo;
class TeamInfo;
class TeamDataSyncTeamCmd;
class TeamDataUpdateTeamCmd;
class TeamMemberUpdateTeamCmd;
class MemberDataUpdateTeamCmd;
class BroadcastCmdTeamCmd;
class CatEnterTeamCmd;
class CatExitTeamCmd;
class CatFireTeamCmd;
class CatCallTeamCmd;
class BeLeaderTeamCmd;
class CatEnterOwnTeamCmd;

enum ServerTeamParam {
  SERVERTEAMPARAM_FORWARD_ALL_CMD = 1,
  SERVERTEAMPARAM_UPDATE_GUILD = 2,
  SERVERTEAMPARAM_SOCIAL_ADDRELATION = 4,
  SERVERTEAMPARAM_LOADLUA = 5,
  SERVERTEAMPARAM_TEAMDATA_SYNC = 8,
  SERVERTEAMPARAM_TEAMDATA_UPDATE = 9,
  SERVERTEAMPARAM_TEAMMEMBER_UPDATE = 10,
  SERVERTEAMPARAM_MEMBERDATA_UPDATE = 11,
  SERVERTEAMPARAM_BROADCAST_CMD = 12,
  SERVERTEAMPARAM_CAT_ENTERTEAM = 13,
  SERVERTEAMPARAM_CAT_EXITTEAM = 14,
  SERVERTEAMPARAM_CAT_FIRE = 15,
  SERVERTEAMPARAM_CAT_CALL = 16,
  SERVERTEAMPARAM_BE_LEADER = 17,
  SERVERTEAMPARAM_CAT_ENTEROWNTEAM = 18
};
bool ServerTeamParam_IsValid(int value);
const ServerTeamParam ServerTeamParam_MIN = SERVERTEAMPARAM_FORWARD_ALL_CMD;
const ServerTeamParam ServerTeamParam_MAX = SERVERTEAMPARAM_CAT_ENTEROWNTEAM;
const int ServerTeamParam_ARRAYSIZE = ServerTeamParam_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServerTeamParam_descriptor();
inline const ::std::string& ServerTeamParam_Name(ServerTeamParam value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServerTeamParam_descriptor(), value);
}
inline bool ServerTeamParam_Parse(
    const ::std::string& name, ServerTeamParam* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServerTeamParam>(
    ServerTeamParam_descriptor(), name, value);
}
// ===================================================================

class ForwardAllServerTeamCmd : public ::google::protobuf::Message {
 public:
  ForwardAllServerTeamCmd();
  virtual ~ForwardAllServerTeamCmd();

  ForwardAllServerTeamCmd(const ForwardAllServerTeamCmd& from);

  inline ForwardAllServerTeamCmd& operator=(const ForwardAllServerTeamCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ForwardAllServerTeamCmd& default_instance();

  void Swap(ForwardAllServerTeamCmd* other);

  // implements Message ----------------------------------------------

  ForwardAllServerTeamCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ForwardAllServerTeamCmd& from);
  void MergeFrom(const ForwardAllServerTeamCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_FORWARD_ALL_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ServerTeamParam param() const;
  inline void set_param(::Cmd::ServerTeamParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional bytes data = 5;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 5;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // optional uint32 len = 6 [default = 0];
  inline bool has_len() const;
  inline void clear_len();
  static const int kLenFieldNumber = 6;
  inline ::google::protobuf::uint32 len() const;
  inline void set_len(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ForwardAllServerTeamCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_len();
  inline void clear_has_len();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::std::string* data_;
  ::google::protobuf::uint32 len_;
  friend void  protobuf_AddDesc_TeamCmd_2eproto();
  friend void protobuf_AssignDesc_TeamCmd_2eproto();
  friend void protobuf_ShutdownFile_TeamCmd_2eproto();

  void InitAsDefaultInstance();
  static ForwardAllServerTeamCmd* default_instance_;
};
// -------------------------------------------------------------------

class UpdateGuildServerTeamCmd : public ::google::protobuf::Message {
 public:
  UpdateGuildServerTeamCmd();
  virtual ~UpdateGuildServerTeamCmd();

  UpdateGuildServerTeamCmd(const UpdateGuildServerTeamCmd& from);

  inline UpdateGuildServerTeamCmd& operator=(const UpdateGuildServerTeamCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateGuildServerTeamCmd& default_instance();

  void Swap(UpdateGuildServerTeamCmd* other);

  // implements Message ----------------------------------------------

  UpdateGuildServerTeamCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateGuildServerTeamCmd& from);
  void MergeFrom(const UpdateGuildServerTeamCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_UPDATE_GUILD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ServerTeamParam param() const;
  inline void set_param(::Cmd::ServerTeamParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint64 guildid = 4 [default = 0];
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 4;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional string guildname = 5;
  inline bool has_guildname() const;
  inline void clear_guildname();
  static const int kGuildnameFieldNumber = 5;
  inline const ::std::string& guildname() const;
  inline void set_guildname(const ::std::string& value);
  inline void set_guildname(const char* value);
  inline void set_guildname(const char* value, size_t size);
  inline ::std::string* mutable_guildname();
  inline ::std::string* release_guildname();
  inline void set_allocated_guildname(::std::string* guildname);

  // @@protoc_insertion_point(class_scope:Cmd.UpdateGuildServerTeamCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_guildname();
  inline void clear_has_guildname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 guildid_;
  ::std::string* guildname_;
  friend void  protobuf_AddDesc_TeamCmd_2eproto();
  friend void protobuf_AssignDesc_TeamCmd_2eproto();
  friend void protobuf_ShutdownFile_TeamCmd_2eproto();

  void InitAsDefaultInstance();
  static UpdateGuildServerTeamCmd* default_instance_;
};
// -------------------------------------------------------------------

class AddRelationTeamCmd : public ::google::protobuf::Message {
 public:
  AddRelationTeamCmd();
  virtual ~AddRelationTeamCmd();

  AddRelationTeamCmd(const AddRelationTeamCmd& from);

  inline AddRelationTeamCmd& operator=(const AddRelationTeamCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddRelationTeamCmd& default_instance();

  void Swap(AddRelationTeamCmd* other);

  // implements Message ----------------------------------------------

  AddRelationTeamCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddRelationTeamCmd& from);
  void MergeFrom(const AddRelationTeamCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_SOCIAL_ADDRELATION];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ServerTeamParam param() const;
  inline void set_param(::Cmd::ServerTeamParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint64 targetid = 4 [default = 0];
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetidFieldNumber = 4;
  inline ::google::protobuf::uint64 targetid() const;
  inline void set_targetid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.AddRelationTeamCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_targetid();
  inline void clear_has_targetid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 targetid_;
  friend void  protobuf_AddDesc_TeamCmd_2eproto();
  friend void protobuf_AssignDesc_TeamCmd_2eproto();
  friend void protobuf_ShutdownFile_TeamCmd_2eproto();

  void InitAsDefaultInstance();
  static AddRelationTeamCmd* default_instance_;
};
// -------------------------------------------------------------------

class LoadLuaTeamCmd : public ::google::protobuf::Message {
 public:
  LoadLuaTeamCmd();
  virtual ~LoadLuaTeamCmd();

  LoadLuaTeamCmd(const LoadLuaTeamCmd& from);

  inline LoadLuaTeamCmd& operator=(const LoadLuaTeamCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadLuaTeamCmd& default_instance();

  void Swap(LoadLuaTeamCmd* other);

  // implements Message ----------------------------------------------

  LoadLuaTeamCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoadLuaTeamCmd& from);
  void MergeFrom(const LoadLuaTeamCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_LOADLUA];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ServerTeamParam param() const;
  inline void set_param(::Cmd::ServerTeamParam value);

  // optional string table = 3;
  inline bool has_table() const;
  inline void clear_table();
  static const int kTableFieldNumber = 3;
  inline const ::std::string& table() const;
  inline void set_table(const ::std::string& value);
  inline void set_table(const char* value);
  inline void set_table(const char* value, size_t size);
  inline ::std::string* mutable_table();
  inline ::std::string* release_table();
  inline void set_allocated_table(::std::string* table);

  // optional string lua = 4;
  inline bool has_lua() const;
  inline void clear_lua();
  static const int kLuaFieldNumber = 4;
  inline const ::std::string& lua() const;
  inline void set_lua(const ::std::string& value);
  inline void set_lua(const char* value);
  inline void set_lua(const char* value, size_t size);
  inline ::std::string* mutable_lua();
  inline ::std::string* release_lua();
  inline void set_allocated_lua(::std::string* lua);

  // optional string log = 5;
  inline bool has_log() const;
  inline void clear_log();
  static const int kLogFieldNumber = 5;
  inline const ::std::string& log() const;
  inline void set_log(const ::std::string& value);
  inline void set_log(const char* value);
  inline void set_log(const char* value, size_t size);
  inline ::std::string* mutable_log();
  inline ::std::string* release_log();
  inline void set_allocated_log(::std::string* log);

  // @@protoc_insertion_point(class_scope:Cmd.LoadLuaTeamCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_table();
  inline void clear_has_table();
  inline void set_has_lua();
  inline void clear_has_lua();
  inline void set_has_log();
  inline void clear_has_log();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::std::string* table_;
  ::std::string* lua_;
  ::std::string* log_;
  friend void  protobuf_AddDesc_TeamCmd_2eproto();
  friend void protobuf_AssignDesc_TeamCmd_2eproto();
  friend void protobuf_ShutdownFile_TeamCmd_2eproto();

  void InitAsDefaultInstance();
  static LoadLuaTeamCmd* default_instance_;
};
// -------------------------------------------------------------------

class TeamMemberInfo : public ::google::protobuf::Message {
 public:
  TeamMemberInfo();
  virtual ~TeamMemberInfo();

  TeamMemberInfo(const TeamMemberInfo& from);

  inline TeamMemberInfo& operator=(const TeamMemberInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamMemberInfo& default_instance();

  void Swap(TeamMemberInfo* other);

  // implements Message ----------------------------------------------

  TeamMemberInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamMemberInfo& from);
  void MergeFrom(const TeamMemberInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charid = 1 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 mapid = 2 [default = 0];
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 2;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // optional uint32 raidid = 3 [default = 0];
  inline bool has_raidid() const;
  inline void clear_raidid();
  static const int kRaididFieldNumber = 3;
  inline ::google::protobuf::uint32 raidid() const;
  inline void set_raidid(::google::protobuf::uint32 value);

  // optional uint32 zoneid = 4 [default = 0];
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 4;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional .Cmd.EGender gender = 5 [default = EGENDER_MIN];
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 5;
  inline ::Cmd::EGender gender() const;
  inline void set_gender(::Cmd::EGender value);

  // optional string name = 6;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 6;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 catid = 7 [default = 0];
  inline bool has_catid() const;
  inline void clear_catid();
  static const int kCatidFieldNumber = 7;
  inline ::google::protobuf::uint32 catid() const;
  inline void set_catid(::google::protobuf::uint32 value);

  // optional uint32 guildraidindex = 8 [default = 0];
  inline bool has_guildraidindex() const;
  inline void clear_guildraidindex();
  static const int kGuildraidindexFieldNumber = 8;
  inline ::google::protobuf::uint32 guildraidindex() const;
  inline void set_guildraidindex(::google::protobuf::uint32 value);

  // optional bool online = 9 [default = false];
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 9;
  inline bool online() const;
  inline void set_online(bool value);

  // optional uint32 level = 10 [default = 0];
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 10;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.TeamMemberInfo)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_raidid();
  inline void clear_has_raidid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_gender();
  inline void clear_has_gender();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_catid();
  inline void clear_has_catid();
  inline void set_has_guildraidindex();
  inline void clear_has_guildraidindex();
  inline void set_has_online();
  inline void clear_has_online();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 raidid_;
  ::google::protobuf::uint32 zoneid_;
  int gender_;
  ::std::string* name_;
  ::google::protobuf::uint32 catid_;
  ::google::protobuf::uint32 guildraidindex_;
  bool online_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_TeamCmd_2eproto();
  friend void protobuf_AssignDesc_TeamCmd_2eproto();
  friend void protobuf_ShutdownFile_TeamCmd_2eproto();

  void InitAsDefaultInstance();
  static TeamMemberInfo* default_instance_;
};
// -------------------------------------------------------------------

class TeamInfo : public ::google::protobuf::Message {
 public:
  TeamInfo();
  virtual ~TeamInfo();

  TeamInfo(const TeamInfo& from);

  inline TeamInfo& operator=(const TeamInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamInfo& default_instance();

  void Swap(TeamInfo* other);

  // implements Message ----------------------------------------------

  TeamInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamInfo& from);
  void MergeFrom(const TeamInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 teamid = 1 [default = 0];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional uint64 leaderid = 2 [default = 0];
  inline bool has_leaderid() const;
  inline void clear_leaderid();
  static const int kLeaderidFieldNumber = 2;
  inline ::google::protobuf::uint64 leaderid() const;
  inline void set_leaderid(::google::protobuf::uint64 value);

  // optional uint32 pickupmode = 3 [default = 0];
  inline bool has_pickupmode() const;
  inline void clear_pickupmode();
  static const int kPickupmodeFieldNumber = 3;
  inline ::google::protobuf::uint32 pickupmode() const;
  inline void set_pickupmode(::google::protobuf::uint32 value);

  // repeated .Cmd.TeamMemberInfo member = 4;
  inline int member_size() const;
  inline void clear_member();
  static const int kMemberFieldNumber = 4;
  inline const ::Cmd::TeamMemberInfo& member(int index) const;
  inline ::Cmd::TeamMemberInfo* mutable_member(int index);
  inline ::Cmd::TeamMemberInfo* add_member();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMemberInfo >&
      member() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMemberInfo >*
      mutable_member();

  // optional string name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:Cmd.TeamInfo)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_leaderid();
  inline void clear_has_leaderid();
  inline void set_has_pickupmode();
  inline void clear_has_pickupmode();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint64 leaderid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMemberInfo > member_;
  ::std::string* name_;
  ::google::protobuf::uint32 pickupmode_;
  friend void  protobuf_AddDesc_TeamCmd_2eproto();
  friend void protobuf_AssignDesc_TeamCmd_2eproto();
  friend void protobuf_ShutdownFile_TeamCmd_2eproto();

  void InitAsDefaultInstance();
  static TeamInfo* default_instance_;
};
// -------------------------------------------------------------------

class TeamDataSyncTeamCmd : public ::google::protobuf::Message {
 public:
  TeamDataSyncTeamCmd();
  virtual ~TeamDataSyncTeamCmd();

  TeamDataSyncTeamCmd(const TeamDataSyncTeamCmd& from);

  inline TeamDataSyncTeamCmd& operator=(const TeamDataSyncTeamCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamDataSyncTeamCmd& default_instance();

  void Swap(TeamDataSyncTeamCmd* other);

  // implements Message ----------------------------------------------

  TeamDataSyncTeamCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamDataSyncTeamCmd& from);
  void MergeFrom(const TeamDataSyncTeamCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_TEAMDATA_SYNC];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ServerTeamParam param() const;
  inline void set_param(::Cmd::ServerTeamParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional .Cmd.TeamInfo info = 4;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 4;
  inline const ::Cmd::TeamInfo& info() const;
  inline ::Cmd::TeamInfo* mutable_info();
  inline ::Cmd::TeamInfo* release_info();
  inline void set_allocated_info(::Cmd::TeamInfo* info);

  // optional bool online = 5 [default = false];
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 5;
  inline bool online() const;
  inline void set_online(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.TeamDataSyncTeamCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_online();
  inline void clear_has_online();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::Cmd::TeamInfo* info_;
  bool online_;
  friend void  protobuf_AddDesc_TeamCmd_2eproto();
  friend void protobuf_AssignDesc_TeamCmd_2eproto();
  friend void protobuf_ShutdownFile_TeamCmd_2eproto();

  void InitAsDefaultInstance();
  static TeamDataSyncTeamCmd* default_instance_;
};
// -------------------------------------------------------------------

class TeamDataUpdateTeamCmd : public ::google::protobuf::Message {
 public:
  TeamDataUpdateTeamCmd();
  virtual ~TeamDataUpdateTeamCmd();

  TeamDataUpdateTeamCmd(const TeamDataUpdateTeamCmd& from);

  inline TeamDataUpdateTeamCmd& operator=(const TeamDataUpdateTeamCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamDataUpdateTeamCmd& default_instance();

  void Swap(TeamDataUpdateTeamCmd* other);

  // implements Message ----------------------------------------------

  TeamDataUpdateTeamCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamDataUpdateTeamCmd& from);
  void MergeFrom(const TeamDataUpdateTeamCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_TEAMDATA_UPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ServerTeamParam param() const;
  inline void set_param(::Cmd::ServerTeamParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // repeated .Cmd.TeamSummaryItem datas = 4;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 4;
  inline const ::Cmd::TeamSummaryItem& datas(int index) const;
  inline ::Cmd::TeamSummaryItem* mutable_datas(int index);
  inline ::Cmd::TeamSummaryItem* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamSummaryItem >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamSummaryItem >*
      mutable_datas();

  // @@protoc_insertion_point(class_scope:Cmd.TeamDataUpdateTeamCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TeamSummaryItem > datas_;
  friend void  protobuf_AddDesc_TeamCmd_2eproto();
  friend void protobuf_AssignDesc_TeamCmd_2eproto();
  friend void protobuf_ShutdownFile_TeamCmd_2eproto();

  void InitAsDefaultInstance();
  static TeamDataUpdateTeamCmd* default_instance_;
};
// -------------------------------------------------------------------

class TeamMemberUpdateTeamCmd : public ::google::protobuf::Message {
 public:
  TeamMemberUpdateTeamCmd();
  virtual ~TeamMemberUpdateTeamCmd();

  TeamMemberUpdateTeamCmd(const TeamMemberUpdateTeamCmd& from);

  inline TeamMemberUpdateTeamCmd& operator=(const TeamMemberUpdateTeamCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamMemberUpdateTeamCmd& default_instance();

  void Swap(TeamMemberUpdateTeamCmd* other);

  // implements Message ----------------------------------------------

  TeamMemberUpdateTeamCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamMemberUpdateTeamCmd& from);
  void MergeFrom(const TeamMemberUpdateTeamCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_TEAMMEMBER_UPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ServerTeamParam param() const;
  inline void set_param(::Cmd::ServerTeamParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // repeated .Cmd.TeamMemberInfo updates = 4;
  inline int updates_size() const;
  inline void clear_updates();
  static const int kUpdatesFieldNumber = 4;
  inline const ::Cmd::TeamMemberInfo& updates(int index) const;
  inline ::Cmd::TeamMemberInfo* mutable_updates(int index);
  inline ::Cmd::TeamMemberInfo* add_updates();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMemberInfo >&
      updates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMemberInfo >*
      mutable_updates();

  // repeated uint64 dels = 5;
  inline int dels_size() const;
  inline void clear_dels();
  static const int kDelsFieldNumber = 5;
  inline ::google::protobuf::uint64 dels(int index) const;
  inline void set_dels(int index, ::google::protobuf::uint64 value);
  inline void add_dels(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      dels() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_dels();

  // @@protoc_insertion_point(class_scope:Cmd.TeamMemberUpdateTeamCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMemberInfo > updates_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > dels_;
  friend void  protobuf_AddDesc_TeamCmd_2eproto();
  friend void protobuf_AssignDesc_TeamCmd_2eproto();
  friend void protobuf_ShutdownFile_TeamCmd_2eproto();

  void InitAsDefaultInstance();
  static TeamMemberUpdateTeamCmd* default_instance_;
};
// -------------------------------------------------------------------

class MemberDataUpdateTeamCmd : public ::google::protobuf::Message {
 public:
  MemberDataUpdateTeamCmd();
  virtual ~MemberDataUpdateTeamCmd();

  MemberDataUpdateTeamCmd(const MemberDataUpdateTeamCmd& from);

  inline MemberDataUpdateTeamCmd& operator=(const MemberDataUpdateTeamCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MemberDataUpdateTeamCmd& default_instance();

  void Swap(MemberDataUpdateTeamCmd* other);

  // implements Message ----------------------------------------------

  MemberDataUpdateTeamCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MemberDataUpdateTeamCmd& from);
  void MergeFrom(const MemberDataUpdateTeamCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_MEMBERDATA_UPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ServerTeamParam param() const;
  inline void set_param(::Cmd::ServerTeamParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint64 updatecharid = 4 [default = 0];
  inline bool has_updatecharid() const;
  inline void clear_updatecharid();
  static const int kUpdatecharidFieldNumber = 4;
  inline ::google::protobuf::uint64 updatecharid() const;
  inline void set_updatecharid(::google::protobuf::uint64 value);

  // repeated .Cmd.MemberData updates = 5;
  inline int updates_size() const;
  inline void clear_updates();
  static const int kUpdatesFieldNumber = 5;
  inline const ::Cmd::MemberData& updates(int index) const;
  inline ::Cmd::MemberData* mutable_updates(int index);
  inline ::Cmd::MemberData* add_updates();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::MemberData >&
      updates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::MemberData >*
      mutable_updates();

  // @@protoc_insertion_point(class_scope:Cmd.MemberDataUpdateTeamCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_updatecharid();
  inline void clear_has_updatecharid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 updatecharid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::MemberData > updates_;
  friend void  protobuf_AddDesc_TeamCmd_2eproto();
  friend void protobuf_AssignDesc_TeamCmd_2eproto();
  friend void protobuf_ShutdownFile_TeamCmd_2eproto();

  void InitAsDefaultInstance();
  static MemberDataUpdateTeamCmd* default_instance_;
};
// -------------------------------------------------------------------

class BroadcastCmdTeamCmd : public ::google::protobuf::Message {
 public:
  BroadcastCmdTeamCmd();
  virtual ~BroadcastCmdTeamCmd();

  BroadcastCmdTeamCmd(const BroadcastCmdTeamCmd& from);

  inline BroadcastCmdTeamCmd& operator=(const BroadcastCmdTeamCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BroadcastCmdTeamCmd& default_instance();

  void Swap(BroadcastCmdTeamCmd* other);

  // implements Message ----------------------------------------------

  BroadcastCmdTeamCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BroadcastCmdTeamCmd& from);
  void MergeFrom(const BroadcastCmdTeamCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_BROADCAST_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ServerTeamParam param() const;
  inline void set_param(::Cmd::ServerTeamParam value);

  // optional uint32 type = 3 [default = 0];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint64 id = 4 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 4;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional bytes data = 5;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 5;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // optional uint32 len = 6;
  inline bool has_len() const;
  inline void clear_len();
  static const int kLenFieldNumber = 6;
  inline ::google::protobuf::uint32 len() const;
  inline void set_len(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.BroadcastCmdTeamCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_len();
  inline void clear_has_len();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 len_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_TeamCmd_2eproto();
  friend void protobuf_AssignDesc_TeamCmd_2eproto();
  friend void protobuf_ShutdownFile_TeamCmd_2eproto();

  void InitAsDefaultInstance();
  static BroadcastCmdTeamCmd* default_instance_;
};
// -------------------------------------------------------------------

class CatEnterTeamCmd : public ::google::protobuf::Message {
 public:
  CatEnterTeamCmd();
  virtual ~CatEnterTeamCmd();

  CatEnterTeamCmd(const CatEnterTeamCmd& from);

  inline CatEnterTeamCmd& operator=(const CatEnterTeamCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CatEnterTeamCmd& default_instance();

  void Swap(CatEnterTeamCmd* other);

  // implements Message ----------------------------------------------

  CatEnterTeamCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CatEnterTeamCmd& from);
  void MergeFrom(const CatEnterTeamCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_CAT_ENTERTEAM];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ServerTeamParam param() const;
  inline void set_param(::Cmd::ServerTeamParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // repeated .Cmd.MemberCat cats = 4;
  inline int cats_size() const;
  inline void clear_cats();
  static const int kCatsFieldNumber = 4;
  inline const ::Cmd::MemberCat& cats(int index) const;
  inline ::Cmd::MemberCat* mutable_cats(int index);
  inline ::Cmd::MemberCat* add_cats();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::MemberCat >&
      cats() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::MemberCat >*
      mutable_cats();

  // @@protoc_insertion_point(class_scope:Cmd.CatEnterTeamCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::MemberCat > cats_;
  friend void  protobuf_AddDesc_TeamCmd_2eproto();
  friend void protobuf_AssignDesc_TeamCmd_2eproto();
  friend void protobuf_ShutdownFile_TeamCmd_2eproto();

  void InitAsDefaultInstance();
  static CatEnterTeamCmd* default_instance_;
};
// -------------------------------------------------------------------

class CatExitTeamCmd : public ::google::protobuf::Message {
 public:
  CatExitTeamCmd();
  virtual ~CatExitTeamCmd();

  CatExitTeamCmd(const CatExitTeamCmd& from);

  inline CatExitTeamCmd& operator=(const CatExitTeamCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CatExitTeamCmd& default_instance();

  void Swap(CatExitTeamCmd* other);

  // implements Message ----------------------------------------------

  CatExitTeamCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CatExitTeamCmd& from);
  void MergeFrom(const CatExitTeamCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_CAT_EXITTEAM];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ServerTeamParam param() const;
  inline void set_param(::Cmd::ServerTeamParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 catid = 4 [default = 0];
  inline bool has_catid() const;
  inline void clear_catid();
  static const int kCatidFieldNumber = 4;
  inline ::google::protobuf::uint32 catid() const;
  inline void set_catid(::google::protobuf::uint32 value);

  // optional bool enterfail = 5 [default = false];
  inline bool has_enterfail() const;
  inline void clear_enterfail();
  static const int kEnterfailFieldNumber = 5;
  inline bool enterfail() const;
  inline void set_enterfail(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.CatExitTeamCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_catid();
  inline void clear_has_catid();
  inline void set_has_enterfail();
  inline void clear_has_enterfail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 catid_;
  bool enterfail_;
  friend void  protobuf_AddDesc_TeamCmd_2eproto();
  friend void protobuf_AssignDesc_TeamCmd_2eproto();
  friend void protobuf_ShutdownFile_TeamCmd_2eproto();

  void InitAsDefaultInstance();
  static CatExitTeamCmd* default_instance_;
};
// -------------------------------------------------------------------

class CatFireTeamCmd : public ::google::protobuf::Message {
 public:
  CatFireTeamCmd();
  virtual ~CatFireTeamCmd();

  CatFireTeamCmd(const CatFireTeamCmd& from);

  inline CatFireTeamCmd& operator=(const CatFireTeamCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CatFireTeamCmd& default_instance();

  void Swap(CatFireTeamCmd* other);

  // implements Message ----------------------------------------------

  CatFireTeamCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CatFireTeamCmd& from);
  void MergeFrom(const CatFireTeamCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_CAT_FIRE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ServerTeamParam param() const;
  inline void set_param(::Cmd::ServerTeamParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint64 npcid = 4 [default = 0];
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcidFieldNumber = 4;
  inline ::google::protobuf::uint64 npcid() const;
  inline void set_npcid(::google::protobuf::uint64 value);

  // optional uint64 catid = 5 [default = 0];
  inline bool has_catid() const;
  inline void clear_catid();
  static const int kCatidFieldNumber = 5;
  inline ::google::protobuf::uint64 catid() const;
  inline void set_catid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.CatFireTeamCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_npcid();
  inline void clear_has_npcid();
  inline void set_has_catid();
  inline void clear_has_catid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 npcid_;
  ::google::protobuf::uint64 catid_;
  friend void  protobuf_AddDesc_TeamCmd_2eproto();
  friend void protobuf_AssignDesc_TeamCmd_2eproto();
  friend void protobuf_ShutdownFile_TeamCmd_2eproto();

  void InitAsDefaultInstance();
  static CatFireTeamCmd* default_instance_;
};
// -------------------------------------------------------------------

class CatCallTeamCmd : public ::google::protobuf::Message {
 public:
  CatCallTeamCmd();
  virtual ~CatCallTeamCmd();

  CatCallTeamCmd(const CatCallTeamCmd& from);

  inline CatCallTeamCmd& operator=(const CatCallTeamCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CatCallTeamCmd& default_instance();

  void Swap(CatCallTeamCmd* other);

  // implements Message ----------------------------------------------

  CatCallTeamCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CatCallTeamCmd& from);
  void MergeFrom(const CatCallTeamCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_CAT_CALL];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ServerTeamParam param() const;
  inline void set_param(::Cmd::ServerTeamParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.CatCallTeamCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  friend void  protobuf_AddDesc_TeamCmd_2eproto();
  friend void protobuf_AssignDesc_TeamCmd_2eproto();
  friend void protobuf_ShutdownFile_TeamCmd_2eproto();

  void InitAsDefaultInstance();
  static CatCallTeamCmd* default_instance_;
};
// -------------------------------------------------------------------

class BeLeaderTeamCmd : public ::google::protobuf::Message {
 public:
  BeLeaderTeamCmd();
  virtual ~BeLeaderTeamCmd();

  BeLeaderTeamCmd(const BeLeaderTeamCmd& from);

  inline BeLeaderTeamCmd& operator=(const BeLeaderTeamCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BeLeaderTeamCmd& default_instance();

  void Swap(BeLeaderTeamCmd* other);

  // implements Message ----------------------------------------------

  BeLeaderTeamCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BeLeaderTeamCmd& from);
  void MergeFrom(const BeLeaderTeamCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_BE_LEADER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ServerTeamParam param() const;
  inline void set_param(::Cmd::ServerTeamParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 teamjob = 4 [default = 0];
  inline bool has_teamjob() const;
  inline void clear_teamjob();
  static const int kTeamjobFieldNumber = 4;
  inline ::google::protobuf::uint32 teamjob() const;
  inline void set_teamjob(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.BeLeaderTeamCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_teamjob();
  inline void clear_has_teamjob();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 teamjob_;
  friend void  protobuf_AddDesc_TeamCmd_2eproto();
  friend void protobuf_AssignDesc_TeamCmd_2eproto();
  friend void protobuf_ShutdownFile_TeamCmd_2eproto();

  void InitAsDefaultInstance();
  static BeLeaderTeamCmd* default_instance_;
};
// -------------------------------------------------------------------

class CatEnterOwnTeamCmd : public ::google::protobuf::Message {
 public:
  CatEnterOwnTeamCmd();
  virtual ~CatEnterOwnTeamCmd();

  CatEnterOwnTeamCmd(const CatEnterOwnTeamCmd& from);

  inline CatEnterOwnTeamCmd& operator=(const CatEnterOwnTeamCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CatEnterOwnTeamCmd& default_instance();

  void Swap(CatEnterOwnTeamCmd* other);

  // implements Message ----------------------------------------------

  CatEnterOwnTeamCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CatEnterOwnTeamCmd& from);
  void MergeFrom(const CatEnterOwnTeamCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_CAT_ENTEROWNTEAM];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ServerTeamParam param() const;
  inline void set_param(::Cmd::ServerTeamParam value);

  // required uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional .Cmd.TeamData data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::Cmd::TeamData& data() const;
  inline ::Cmd::TeamData* mutable_data();
  inline ::Cmd::TeamData* release_data();
  inline void set_allocated_data(::Cmd::TeamData* data);

  // @@protoc_insertion_point(class_scope:Cmd.CatEnterOwnTeamCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::Cmd::TeamData* data_;
  friend void  protobuf_AddDesc_TeamCmd_2eproto();
  friend void protobuf_AssignDesc_TeamCmd_2eproto();
  friend void protobuf_ShutdownFile_TeamCmd_2eproto();

  void InitAsDefaultInstance();
  static CatEnterOwnTeamCmd* default_instance_;
};
// ===================================================================


// ===================================================================

// ForwardAllServerTeamCmd

// optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
inline bool ForwardAllServerTeamCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ForwardAllServerTeamCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ForwardAllServerTeamCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ForwardAllServerTeamCmd::clear_cmd() {
  cmd_ = 209;
  clear_has_cmd();
}
inline ::Cmd::Command ForwardAllServerTeamCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardAllServerTeamCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ForwardAllServerTeamCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardAllServerTeamCmd.cmd)
}

// optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_FORWARD_ALL_CMD];
inline bool ForwardAllServerTeamCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ForwardAllServerTeamCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ForwardAllServerTeamCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ForwardAllServerTeamCmd::clear_param() {
  param_ = 1;
  clear_has_param();
}
inline ::Cmd::ServerTeamParam ForwardAllServerTeamCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardAllServerTeamCmd.param)
  return static_cast< ::Cmd::ServerTeamParam >(param_);
}
inline void ForwardAllServerTeamCmd::set_param(::Cmd::ServerTeamParam value) {
  assert(::Cmd::ServerTeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardAllServerTeamCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool ForwardAllServerTeamCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ForwardAllServerTeamCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ForwardAllServerTeamCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ForwardAllServerTeamCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ForwardAllServerTeamCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardAllServerTeamCmd.charid)
  return charid_;
}
inline void ForwardAllServerTeamCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardAllServerTeamCmd.charid)
}

// optional bytes data = 5;
inline bool ForwardAllServerTeamCmd::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ForwardAllServerTeamCmd::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ForwardAllServerTeamCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ForwardAllServerTeamCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& ForwardAllServerTeamCmd::data() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardAllServerTeamCmd.data)
  return *data_;
}
inline void ForwardAllServerTeamCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.ForwardAllServerTeamCmd.data)
}
inline void ForwardAllServerTeamCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.ForwardAllServerTeamCmd.data)
}
inline void ForwardAllServerTeamCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.ForwardAllServerTeamCmd.data)
}
inline ::std::string* ForwardAllServerTeamCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.ForwardAllServerTeamCmd.data)
  return data_;
}
inline ::std::string* ForwardAllServerTeamCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ForwardAllServerTeamCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ForwardAllServerTeamCmd.data)
}

// optional uint32 len = 6 [default = 0];
inline bool ForwardAllServerTeamCmd::has_len() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ForwardAllServerTeamCmd::set_has_len() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ForwardAllServerTeamCmd::clear_has_len() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ForwardAllServerTeamCmd::clear_len() {
  len_ = 0u;
  clear_has_len();
}
inline ::google::protobuf::uint32 ForwardAllServerTeamCmd::len() const {
  // @@protoc_insertion_point(field_get:Cmd.ForwardAllServerTeamCmd.len)
  return len_;
}
inline void ForwardAllServerTeamCmd::set_len(::google::protobuf::uint32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ForwardAllServerTeamCmd.len)
}

// -------------------------------------------------------------------

// UpdateGuildServerTeamCmd

// optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
inline bool UpdateGuildServerTeamCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateGuildServerTeamCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateGuildServerTeamCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateGuildServerTeamCmd::clear_cmd() {
  cmd_ = 209;
  clear_has_cmd();
}
inline ::Cmd::Command UpdateGuildServerTeamCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateGuildServerTeamCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UpdateGuildServerTeamCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateGuildServerTeamCmd.cmd)
}

// optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_UPDATE_GUILD];
inline bool UpdateGuildServerTeamCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateGuildServerTeamCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateGuildServerTeamCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateGuildServerTeamCmd::clear_param() {
  param_ = 2;
  clear_has_param();
}
inline ::Cmd::ServerTeamParam UpdateGuildServerTeamCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateGuildServerTeamCmd.param)
  return static_cast< ::Cmd::ServerTeamParam >(param_);
}
inline void UpdateGuildServerTeamCmd::set_param(::Cmd::ServerTeamParam value) {
  assert(::Cmd::ServerTeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateGuildServerTeamCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool UpdateGuildServerTeamCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateGuildServerTeamCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateGuildServerTeamCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateGuildServerTeamCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 UpdateGuildServerTeamCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateGuildServerTeamCmd.charid)
  return charid_;
}
inline void UpdateGuildServerTeamCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateGuildServerTeamCmd.charid)
}

// optional uint64 guildid = 4 [default = 0];
inline bool UpdateGuildServerTeamCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateGuildServerTeamCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateGuildServerTeamCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateGuildServerTeamCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 UpdateGuildServerTeamCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateGuildServerTeamCmd.guildid)
  return guildid_;
}
inline void UpdateGuildServerTeamCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateGuildServerTeamCmd.guildid)
}

// optional string guildname = 5;
inline bool UpdateGuildServerTeamCmd::has_guildname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UpdateGuildServerTeamCmd::set_has_guildname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UpdateGuildServerTeamCmd::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UpdateGuildServerTeamCmd::clear_guildname() {
  if (guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_->clear();
  }
  clear_has_guildname();
}
inline const ::std::string& UpdateGuildServerTeamCmd::guildname() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateGuildServerTeamCmd.guildname)
  return *guildname_;
}
inline void UpdateGuildServerTeamCmd::set_guildname(const ::std::string& value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.UpdateGuildServerTeamCmd.guildname)
}
inline void UpdateGuildServerTeamCmd::set_guildname(const char* value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.UpdateGuildServerTeamCmd.guildname)
}
inline void UpdateGuildServerTeamCmd::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.UpdateGuildServerTeamCmd.guildname)
}
inline ::std::string* UpdateGuildServerTeamCmd::mutable_guildname() {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.UpdateGuildServerTeamCmd.guildname)
  return guildname_;
}
inline ::std::string* UpdateGuildServerTeamCmd::release_guildname() {
  clear_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guildname_;
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateGuildServerTeamCmd::set_allocated_guildname(::std::string* guildname) {
  if (guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guildname_;
  }
  if (guildname) {
    set_has_guildname();
    guildname_ = guildname;
  } else {
    clear_has_guildname();
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.UpdateGuildServerTeamCmd.guildname)
}

// -------------------------------------------------------------------

// AddRelationTeamCmd

// optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
inline bool AddRelationTeamCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddRelationTeamCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddRelationTeamCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddRelationTeamCmd::clear_cmd() {
  cmd_ = 209;
  clear_has_cmd();
}
inline ::Cmd::Command AddRelationTeamCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.AddRelationTeamCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void AddRelationTeamCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AddRelationTeamCmd.cmd)
}

// optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_SOCIAL_ADDRELATION];
inline bool AddRelationTeamCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddRelationTeamCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddRelationTeamCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddRelationTeamCmd::clear_param() {
  param_ = 4;
  clear_has_param();
}
inline ::Cmd::ServerTeamParam AddRelationTeamCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.AddRelationTeamCmd.param)
  return static_cast< ::Cmd::ServerTeamParam >(param_);
}
inline void AddRelationTeamCmd::set_param(::Cmd::ServerTeamParam value) {
  assert(::Cmd::ServerTeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AddRelationTeamCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool AddRelationTeamCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddRelationTeamCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddRelationTeamCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddRelationTeamCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 AddRelationTeamCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.AddRelationTeamCmd.charid)
  return charid_;
}
inline void AddRelationTeamCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AddRelationTeamCmd.charid)
}

// optional uint64 targetid = 4 [default = 0];
inline bool AddRelationTeamCmd::has_targetid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddRelationTeamCmd::set_has_targetid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddRelationTeamCmd::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddRelationTeamCmd::clear_targetid() {
  targetid_ = GOOGLE_ULONGLONG(0);
  clear_has_targetid();
}
inline ::google::protobuf::uint64 AddRelationTeamCmd::targetid() const {
  // @@protoc_insertion_point(field_get:Cmd.AddRelationTeamCmd.targetid)
  return targetid_;
}
inline void AddRelationTeamCmd::set_targetid(::google::protobuf::uint64 value) {
  set_has_targetid();
  targetid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AddRelationTeamCmd.targetid)
}

// -------------------------------------------------------------------

// LoadLuaTeamCmd

// optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
inline bool LoadLuaTeamCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoadLuaTeamCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoadLuaTeamCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoadLuaTeamCmd::clear_cmd() {
  cmd_ = 209;
  clear_has_cmd();
}
inline ::Cmd::Command LoadLuaTeamCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.LoadLuaTeamCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void LoadLuaTeamCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LoadLuaTeamCmd.cmd)
}

// optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_LOADLUA];
inline bool LoadLuaTeamCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoadLuaTeamCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoadLuaTeamCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoadLuaTeamCmd::clear_param() {
  param_ = 5;
  clear_has_param();
}
inline ::Cmd::ServerTeamParam LoadLuaTeamCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.LoadLuaTeamCmd.param)
  return static_cast< ::Cmd::ServerTeamParam >(param_);
}
inline void LoadLuaTeamCmd::set_param(::Cmd::ServerTeamParam value) {
  assert(::Cmd::ServerTeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LoadLuaTeamCmd.param)
}

// optional string table = 3;
inline bool LoadLuaTeamCmd::has_table() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoadLuaTeamCmd::set_has_table() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoadLuaTeamCmd::clear_has_table() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoadLuaTeamCmd::clear_table() {
  if (table_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_->clear();
  }
  clear_has_table();
}
inline const ::std::string& LoadLuaTeamCmd::table() const {
  // @@protoc_insertion_point(field_get:Cmd.LoadLuaTeamCmd.table)
  return *table_;
}
inline void LoadLuaTeamCmd::set_table(const ::std::string& value) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_ = new ::std::string;
  }
  table_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.LoadLuaTeamCmd.table)
}
inline void LoadLuaTeamCmd::set_table(const char* value) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_ = new ::std::string;
  }
  table_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.LoadLuaTeamCmd.table)
}
inline void LoadLuaTeamCmd::set_table(const char* value, size_t size) {
  set_has_table();
  if (table_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_ = new ::std::string;
  }
  table_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.LoadLuaTeamCmd.table)
}
inline ::std::string* LoadLuaTeamCmd::mutable_table() {
  set_has_table();
  if (table_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    table_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.LoadLuaTeamCmd.table)
  return table_;
}
inline ::std::string* LoadLuaTeamCmd::release_table() {
  clear_has_table();
  if (table_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = table_;
    table_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoadLuaTeamCmd::set_allocated_table(::std::string* table) {
  if (table_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete table_;
  }
  if (table) {
    set_has_table();
    table_ = table;
  } else {
    clear_has_table();
    table_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.LoadLuaTeamCmd.table)
}

// optional string lua = 4;
inline bool LoadLuaTeamCmd::has_lua() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoadLuaTeamCmd::set_has_lua() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoadLuaTeamCmd::clear_has_lua() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoadLuaTeamCmd::clear_lua() {
  if (lua_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lua_->clear();
  }
  clear_has_lua();
}
inline const ::std::string& LoadLuaTeamCmd::lua() const {
  // @@protoc_insertion_point(field_get:Cmd.LoadLuaTeamCmd.lua)
  return *lua_;
}
inline void LoadLuaTeamCmd::set_lua(const ::std::string& value) {
  set_has_lua();
  if (lua_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lua_ = new ::std::string;
  }
  lua_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.LoadLuaTeamCmd.lua)
}
inline void LoadLuaTeamCmd::set_lua(const char* value) {
  set_has_lua();
  if (lua_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lua_ = new ::std::string;
  }
  lua_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.LoadLuaTeamCmd.lua)
}
inline void LoadLuaTeamCmd::set_lua(const char* value, size_t size) {
  set_has_lua();
  if (lua_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lua_ = new ::std::string;
  }
  lua_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.LoadLuaTeamCmd.lua)
}
inline ::std::string* LoadLuaTeamCmd::mutable_lua() {
  set_has_lua();
  if (lua_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lua_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.LoadLuaTeamCmd.lua)
  return lua_;
}
inline ::std::string* LoadLuaTeamCmd::release_lua() {
  clear_has_lua();
  if (lua_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = lua_;
    lua_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoadLuaTeamCmd::set_allocated_lua(::std::string* lua) {
  if (lua_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete lua_;
  }
  if (lua) {
    set_has_lua();
    lua_ = lua;
  } else {
    clear_has_lua();
    lua_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.LoadLuaTeamCmd.lua)
}

// optional string log = 5;
inline bool LoadLuaTeamCmd::has_log() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoadLuaTeamCmd::set_has_log() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoadLuaTeamCmd::clear_has_log() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoadLuaTeamCmd::clear_log() {
  if (log_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    log_->clear();
  }
  clear_has_log();
}
inline const ::std::string& LoadLuaTeamCmd::log() const {
  // @@protoc_insertion_point(field_get:Cmd.LoadLuaTeamCmd.log)
  return *log_;
}
inline void LoadLuaTeamCmd::set_log(const ::std::string& value) {
  set_has_log();
  if (log_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    log_ = new ::std::string;
  }
  log_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.LoadLuaTeamCmd.log)
}
inline void LoadLuaTeamCmd::set_log(const char* value) {
  set_has_log();
  if (log_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    log_ = new ::std::string;
  }
  log_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.LoadLuaTeamCmd.log)
}
inline void LoadLuaTeamCmd::set_log(const char* value, size_t size) {
  set_has_log();
  if (log_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    log_ = new ::std::string;
  }
  log_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.LoadLuaTeamCmd.log)
}
inline ::std::string* LoadLuaTeamCmd::mutable_log() {
  set_has_log();
  if (log_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    log_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.LoadLuaTeamCmd.log)
  return log_;
}
inline ::std::string* LoadLuaTeamCmd::release_log() {
  clear_has_log();
  if (log_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = log_;
    log_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoadLuaTeamCmd::set_allocated_log(::std::string* log) {
  if (log_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete log_;
  }
  if (log) {
    set_has_log();
    log_ = log;
  } else {
    clear_has_log();
    log_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.LoadLuaTeamCmd.log)
}

// -------------------------------------------------------------------

// TeamMemberInfo

// optional uint64 charid = 1 [default = 0];
inline bool TeamMemberInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamMemberInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamMemberInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamMemberInfo::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 TeamMemberInfo::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMemberInfo.charid)
  return charid_;
}
inline void TeamMemberInfo::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamMemberInfo.charid)
}

// optional uint32 mapid = 2 [default = 0];
inline bool TeamMemberInfo::has_mapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamMemberInfo::set_has_mapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamMemberInfo::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamMemberInfo::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 TeamMemberInfo::mapid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMemberInfo.mapid)
  return mapid_;
}
inline void TeamMemberInfo::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamMemberInfo.mapid)
}

// optional uint32 raidid = 3 [default = 0];
inline bool TeamMemberInfo::has_raidid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamMemberInfo::set_has_raidid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamMemberInfo::clear_has_raidid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamMemberInfo::clear_raidid() {
  raidid_ = 0u;
  clear_has_raidid();
}
inline ::google::protobuf::uint32 TeamMemberInfo::raidid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMemberInfo.raidid)
  return raidid_;
}
inline void TeamMemberInfo::set_raidid(::google::protobuf::uint32 value) {
  set_has_raidid();
  raidid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamMemberInfo.raidid)
}

// optional uint32 zoneid = 4 [default = 0];
inline bool TeamMemberInfo::has_zoneid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamMemberInfo::set_has_zoneid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamMemberInfo::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamMemberInfo::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 TeamMemberInfo::zoneid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMemberInfo.zoneid)
  return zoneid_;
}
inline void TeamMemberInfo::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamMemberInfo.zoneid)
}

// optional .Cmd.EGender gender = 5 [default = EGENDER_MIN];
inline bool TeamMemberInfo::has_gender() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TeamMemberInfo::set_has_gender() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TeamMemberInfo::clear_has_gender() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TeamMemberInfo::clear_gender() {
  gender_ = 0;
  clear_has_gender();
}
inline ::Cmd::EGender TeamMemberInfo::gender() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMemberInfo.gender)
  return static_cast< ::Cmd::EGender >(gender_);
}
inline void TeamMemberInfo::set_gender(::Cmd::EGender value) {
  assert(::Cmd::EGender_IsValid(value));
  set_has_gender();
  gender_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamMemberInfo.gender)
}

// optional string name = 6;
inline bool TeamMemberInfo::has_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TeamMemberInfo::set_has_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TeamMemberInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TeamMemberInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& TeamMemberInfo::name() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMemberInfo.name)
  return *name_;
}
inline void TeamMemberInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.TeamMemberInfo.name)
}
inline void TeamMemberInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.TeamMemberInfo.name)
}
inline void TeamMemberInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.TeamMemberInfo.name)
}
inline ::std::string* TeamMemberInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.TeamMemberInfo.name)
  return name_;
}
inline ::std::string* TeamMemberInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TeamMemberInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TeamMemberInfo.name)
}

// optional uint32 catid = 7 [default = 0];
inline bool TeamMemberInfo::has_catid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TeamMemberInfo::set_has_catid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TeamMemberInfo::clear_has_catid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TeamMemberInfo::clear_catid() {
  catid_ = 0u;
  clear_has_catid();
}
inline ::google::protobuf::uint32 TeamMemberInfo::catid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMemberInfo.catid)
  return catid_;
}
inline void TeamMemberInfo::set_catid(::google::protobuf::uint32 value) {
  set_has_catid();
  catid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamMemberInfo.catid)
}

// optional uint32 guildraidindex = 8 [default = 0];
inline bool TeamMemberInfo::has_guildraidindex() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TeamMemberInfo::set_has_guildraidindex() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TeamMemberInfo::clear_has_guildraidindex() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TeamMemberInfo::clear_guildraidindex() {
  guildraidindex_ = 0u;
  clear_has_guildraidindex();
}
inline ::google::protobuf::uint32 TeamMemberInfo::guildraidindex() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMemberInfo.guildraidindex)
  return guildraidindex_;
}
inline void TeamMemberInfo::set_guildraidindex(::google::protobuf::uint32 value) {
  set_has_guildraidindex();
  guildraidindex_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamMemberInfo.guildraidindex)
}

// optional bool online = 9 [default = false];
inline bool TeamMemberInfo::has_online() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TeamMemberInfo::set_has_online() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TeamMemberInfo::clear_has_online() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TeamMemberInfo::clear_online() {
  online_ = false;
  clear_has_online();
}
inline bool TeamMemberInfo::online() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMemberInfo.online)
  return online_;
}
inline void TeamMemberInfo::set_online(bool value) {
  set_has_online();
  online_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamMemberInfo.online)
}

// optional uint32 level = 10 [default = 0];
inline bool TeamMemberInfo::has_level() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TeamMemberInfo::set_has_level() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TeamMemberInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TeamMemberInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 TeamMemberInfo::level() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMemberInfo.level)
  return level_;
}
inline void TeamMemberInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamMemberInfo.level)
}

// -------------------------------------------------------------------

// TeamInfo

// optional uint64 teamid = 1 [default = 0];
inline bool TeamInfo::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamInfo::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamInfo::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamInfo::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TeamInfo::teamid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamInfo.teamid)
  return teamid_;
}
inline void TeamInfo::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamInfo.teamid)
}

// optional uint64 leaderid = 2 [default = 0];
inline bool TeamInfo::has_leaderid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamInfo::set_has_leaderid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamInfo::clear_has_leaderid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamInfo::clear_leaderid() {
  leaderid_ = GOOGLE_ULONGLONG(0);
  clear_has_leaderid();
}
inline ::google::protobuf::uint64 TeamInfo::leaderid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamInfo.leaderid)
  return leaderid_;
}
inline void TeamInfo::set_leaderid(::google::protobuf::uint64 value) {
  set_has_leaderid();
  leaderid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamInfo.leaderid)
}

// optional uint32 pickupmode = 3 [default = 0];
inline bool TeamInfo::has_pickupmode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamInfo::set_has_pickupmode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamInfo::clear_has_pickupmode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamInfo::clear_pickupmode() {
  pickupmode_ = 0u;
  clear_has_pickupmode();
}
inline ::google::protobuf::uint32 TeamInfo::pickupmode() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamInfo.pickupmode)
  return pickupmode_;
}
inline void TeamInfo::set_pickupmode(::google::protobuf::uint32 value) {
  set_has_pickupmode();
  pickupmode_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamInfo.pickupmode)
}

// repeated .Cmd.TeamMemberInfo member = 4;
inline int TeamInfo::member_size() const {
  return member_.size();
}
inline void TeamInfo::clear_member() {
  member_.Clear();
}
inline const ::Cmd::TeamMemberInfo& TeamInfo::member(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TeamInfo.member)
  return member_.Get(index);
}
inline ::Cmd::TeamMemberInfo* TeamInfo::mutable_member(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.TeamInfo.member)
  return member_.Mutable(index);
}
inline ::Cmd::TeamMemberInfo* TeamInfo::add_member() {
  // @@protoc_insertion_point(field_add:Cmd.TeamInfo.member)
  return member_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMemberInfo >&
TeamInfo::member() const {
  // @@protoc_insertion_point(field_list:Cmd.TeamInfo.member)
  return member_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMemberInfo >*
TeamInfo::mutable_member() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TeamInfo.member)
  return &member_;
}

// optional string name = 5;
inline bool TeamInfo::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TeamInfo::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TeamInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TeamInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& TeamInfo::name() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamInfo.name)
  return *name_;
}
inline void TeamInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.TeamInfo.name)
}
inline void TeamInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.TeamInfo.name)
}
inline void TeamInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.TeamInfo.name)
}
inline ::std::string* TeamInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.TeamInfo.name)
  return name_;
}
inline ::std::string* TeamInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TeamInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TeamInfo.name)
}

// -------------------------------------------------------------------

// TeamDataSyncTeamCmd

// optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
inline bool TeamDataSyncTeamCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamDataSyncTeamCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamDataSyncTeamCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamDataSyncTeamCmd::clear_cmd() {
  cmd_ = 209;
  clear_has_cmd();
}
inline ::Cmd::Command TeamDataSyncTeamCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamDataSyncTeamCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TeamDataSyncTeamCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamDataSyncTeamCmd.cmd)
}

// optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_TEAMDATA_SYNC];
inline bool TeamDataSyncTeamCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamDataSyncTeamCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamDataSyncTeamCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamDataSyncTeamCmd::clear_param() {
  param_ = 8;
  clear_has_param();
}
inline ::Cmd::ServerTeamParam TeamDataSyncTeamCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamDataSyncTeamCmd.param)
  return static_cast< ::Cmd::ServerTeamParam >(param_);
}
inline void TeamDataSyncTeamCmd::set_param(::Cmd::ServerTeamParam value) {
  assert(::Cmd::ServerTeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamDataSyncTeamCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool TeamDataSyncTeamCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamDataSyncTeamCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamDataSyncTeamCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamDataSyncTeamCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 TeamDataSyncTeamCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamDataSyncTeamCmd.charid)
  return charid_;
}
inline void TeamDataSyncTeamCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamDataSyncTeamCmd.charid)
}

// optional .Cmd.TeamInfo info = 4;
inline bool TeamDataSyncTeamCmd::has_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamDataSyncTeamCmd::set_has_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamDataSyncTeamCmd::clear_has_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamDataSyncTeamCmd::clear_info() {
  if (info_ != NULL) info_->::Cmd::TeamInfo::Clear();
  clear_has_info();
}
inline const ::Cmd::TeamInfo& TeamDataSyncTeamCmd::info() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamDataSyncTeamCmd.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::Cmd::TeamInfo* TeamDataSyncTeamCmd::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::Cmd::TeamInfo;
  // @@protoc_insertion_point(field_mutable:Cmd.TeamDataSyncTeamCmd.info)
  return info_;
}
inline ::Cmd::TeamInfo* TeamDataSyncTeamCmd::release_info() {
  clear_has_info();
  ::Cmd::TeamInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void TeamDataSyncTeamCmd::set_allocated_info(::Cmd::TeamInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TeamDataSyncTeamCmd.info)
}

// optional bool online = 5 [default = false];
inline bool TeamDataSyncTeamCmd::has_online() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TeamDataSyncTeamCmd::set_has_online() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TeamDataSyncTeamCmd::clear_has_online() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TeamDataSyncTeamCmd::clear_online() {
  online_ = false;
  clear_has_online();
}
inline bool TeamDataSyncTeamCmd::online() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamDataSyncTeamCmd.online)
  return online_;
}
inline void TeamDataSyncTeamCmd::set_online(bool value) {
  set_has_online();
  online_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamDataSyncTeamCmd.online)
}

// -------------------------------------------------------------------

// TeamDataUpdateTeamCmd

// optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
inline bool TeamDataUpdateTeamCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamDataUpdateTeamCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamDataUpdateTeamCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamDataUpdateTeamCmd::clear_cmd() {
  cmd_ = 209;
  clear_has_cmd();
}
inline ::Cmd::Command TeamDataUpdateTeamCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamDataUpdateTeamCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TeamDataUpdateTeamCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamDataUpdateTeamCmd.cmd)
}

// optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_TEAMDATA_UPDATE];
inline bool TeamDataUpdateTeamCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamDataUpdateTeamCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamDataUpdateTeamCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamDataUpdateTeamCmd::clear_param() {
  param_ = 9;
  clear_has_param();
}
inline ::Cmd::ServerTeamParam TeamDataUpdateTeamCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamDataUpdateTeamCmd.param)
  return static_cast< ::Cmd::ServerTeamParam >(param_);
}
inline void TeamDataUpdateTeamCmd::set_param(::Cmd::ServerTeamParam value) {
  assert(::Cmd::ServerTeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamDataUpdateTeamCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool TeamDataUpdateTeamCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamDataUpdateTeamCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamDataUpdateTeamCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamDataUpdateTeamCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 TeamDataUpdateTeamCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamDataUpdateTeamCmd.charid)
  return charid_;
}
inline void TeamDataUpdateTeamCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamDataUpdateTeamCmd.charid)
}

// repeated .Cmd.TeamSummaryItem datas = 4;
inline int TeamDataUpdateTeamCmd::datas_size() const {
  return datas_.size();
}
inline void TeamDataUpdateTeamCmd::clear_datas() {
  datas_.Clear();
}
inline const ::Cmd::TeamSummaryItem& TeamDataUpdateTeamCmd::datas(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TeamDataUpdateTeamCmd.datas)
  return datas_.Get(index);
}
inline ::Cmd::TeamSummaryItem* TeamDataUpdateTeamCmd::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.TeamDataUpdateTeamCmd.datas)
  return datas_.Mutable(index);
}
inline ::Cmd::TeamSummaryItem* TeamDataUpdateTeamCmd::add_datas() {
  // @@protoc_insertion_point(field_add:Cmd.TeamDataUpdateTeamCmd.datas)
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamSummaryItem >&
TeamDataUpdateTeamCmd::datas() const {
  // @@protoc_insertion_point(field_list:Cmd.TeamDataUpdateTeamCmd.datas)
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamSummaryItem >*
TeamDataUpdateTeamCmd::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TeamDataUpdateTeamCmd.datas)
  return &datas_;
}

// -------------------------------------------------------------------

// TeamMemberUpdateTeamCmd

// optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
inline bool TeamMemberUpdateTeamCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamMemberUpdateTeamCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamMemberUpdateTeamCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamMemberUpdateTeamCmd::clear_cmd() {
  cmd_ = 209;
  clear_has_cmd();
}
inline ::Cmd::Command TeamMemberUpdateTeamCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMemberUpdateTeamCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TeamMemberUpdateTeamCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamMemberUpdateTeamCmd.cmd)
}

// optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_TEAMMEMBER_UPDATE];
inline bool TeamMemberUpdateTeamCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamMemberUpdateTeamCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamMemberUpdateTeamCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamMemberUpdateTeamCmd::clear_param() {
  param_ = 10;
  clear_has_param();
}
inline ::Cmd::ServerTeamParam TeamMemberUpdateTeamCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMemberUpdateTeamCmd.param)
  return static_cast< ::Cmd::ServerTeamParam >(param_);
}
inline void TeamMemberUpdateTeamCmd::set_param(::Cmd::ServerTeamParam value) {
  assert(::Cmd::ServerTeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamMemberUpdateTeamCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool TeamMemberUpdateTeamCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamMemberUpdateTeamCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamMemberUpdateTeamCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamMemberUpdateTeamCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 TeamMemberUpdateTeamCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMemberUpdateTeamCmd.charid)
  return charid_;
}
inline void TeamMemberUpdateTeamCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamMemberUpdateTeamCmd.charid)
}

// repeated .Cmd.TeamMemberInfo updates = 4;
inline int TeamMemberUpdateTeamCmd::updates_size() const {
  return updates_.size();
}
inline void TeamMemberUpdateTeamCmd::clear_updates() {
  updates_.Clear();
}
inline const ::Cmd::TeamMemberInfo& TeamMemberUpdateTeamCmd::updates(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMemberUpdateTeamCmd.updates)
  return updates_.Get(index);
}
inline ::Cmd::TeamMemberInfo* TeamMemberUpdateTeamCmd::mutable_updates(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.TeamMemberUpdateTeamCmd.updates)
  return updates_.Mutable(index);
}
inline ::Cmd::TeamMemberInfo* TeamMemberUpdateTeamCmd::add_updates() {
  // @@protoc_insertion_point(field_add:Cmd.TeamMemberUpdateTeamCmd.updates)
  return updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMemberInfo >&
TeamMemberUpdateTeamCmd::updates() const {
  // @@protoc_insertion_point(field_list:Cmd.TeamMemberUpdateTeamCmd.updates)
  return updates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMemberInfo >*
TeamMemberUpdateTeamCmd::mutable_updates() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TeamMemberUpdateTeamCmd.updates)
  return &updates_;
}

// repeated uint64 dels = 5;
inline int TeamMemberUpdateTeamCmd::dels_size() const {
  return dels_.size();
}
inline void TeamMemberUpdateTeamCmd::clear_dels() {
  dels_.Clear();
}
inline ::google::protobuf::uint64 TeamMemberUpdateTeamCmd::dels(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMemberUpdateTeamCmd.dels)
  return dels_.Get(index);
}
inline void TeamMemberUpdateTeamCmd::set_dels(int index, ::google::protobuf::uint64 value) {
  dels_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.TeamMemberUpdateTeamCmd.dels)
}
inline void TeamMemberUpdateTeamCmd::add_dels(::google::protobuf::uint64 value) {
  dels_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.TeamMemberUpdateTeamCmd.dels)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TeamMemberUpdateTeamCmd::dels() const {
  // @@protoc_insertion_point(field_list:Cmd.TeamMemberUpdateTeamCmd.dels)
  return dels_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TeamMemberUpdateTeamCmd::mutable_dels() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TeamMemberUpdateTeamCmd.dels)
  return &dels_;
}

// -------------------------------------------------------------------

// MemberDataUpdateTeamCmd

// optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
inline bool MemberDataUpdateTeamCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MemberDataUpdateTeamCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MemberDataUpdateTeamCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MemberDataUpdateTeamCmd::clear_cmd() {
  cmd_ = 209;
  clear_has_cmd();
}
inline ::Cmd::Command MemberDataUpdateTeamCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.MemberDataUpdateTeamCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void MemberDataUpdateTeamCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MemberDataUpdateTeamCmd.cmd)
}

// optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_MEMBERDATA_UPDATE];
inline bool MemberDataUpdateTeamCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MemberDataUpdateTeamCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MemberDataUpdateTeamCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MemberDataUpdateTeamCmd::clear_param() {
  param_ = 11;
  clear_has_param();
}
inline ::Cmd::ServerTeamParam MemberDataUpdateTeamCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.MemberDataUpdateTeamCmd.param)
  return static_cast< ::Cmd::ServerTeamParam >(param_);
}
inline void MemberDataUpdateTeamCmd::set_param(::Cmd::ServerTeamParam value) {
  assert(::Cmd::ServerTeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MemberDataUpdateTeamCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool MemberDataUpdateTeamCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MemberDataUpdateTeamCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MemberDataUpdateTeamCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MemberDataUpdateTeamCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 MemberDataUpdateTeamCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.MemberDataUpdateTeamCmd.charid)
  return charid_;
}
inline void MemberDataUpdateTeamCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MemberDataUpdateTeamCmd.charid)
}

// optional uint64 updatecharid = 4 [default = 0];
inline bool MemberDataUpdateTeamCmd::has_updatecharid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MemberDataUpdateTeamCmd::set_has_updatecharid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MemberDataUpdateTeamCmd::clear_has_updatecharid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MemberDataUpdateTeamCmd::clear_updatecharid() {
  updatecharid_ = GOOGLE_ULONGLONG(0);
  clear_has_updatecharid();
}
inline ::google::protobuf::uint64 MemberDataUpdateTeamCmd::updatecharid() const {
  // @@protoc_insertion_point(field_get:Cmd.MemberDataUpdateTeamCmd.updatecharid)
  return updatecharid_;
}
inline void MemberDataUpdateTeamCmd::set_updatecharid(::google::protobuf::uint64 value) {
  set_has_updatecharid();
  updatecharid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MemberDataUpdateTeamCmd.updatecharid)
}

// repeated .Cmd.MemberData updates = 5;
inline int MemberDataUpdateTeamCmd::updates_size() const {
  return updates_.size();
}
inline void MemberDataUpdateTeamCmd::clear_updates() {
  updates_.Clear();
}
inline const ::Cmd::MemberData& MemberDataUpdateTeamCmd::updates(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.MemberDataUpdateTeamCmd.updates)
  return updates_.Get(index);
}
inline ::Cmd::MemberData* MemberDataUpdateTeamCmd::mutable_updates(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.MemberDataUpdateTeamCmd.updates)
  return updates_.Mutable(index);
}
inline ::Cmd::MemberData* MemberDataUpdateTeamCmd::add_updates() {
  // @@protoc_insertion_point(field_add:Cmd.MemberDataUpdateTeamCmd.updates)
  return updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::MemberData >&
MemberDataUpdateTeamCmd::updates() const {
  // @@protoc_insertion_point(field_list:Cmd.MemberDataUpdateTeamCmd.updates)
  return updates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::MemberData >*
MemberDataUpdateTeamCmd::mutable_updates() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.MemberDataUpdateTeamCmd.updates)
  return &updates_;
}

// -------------------------------------------------------------------

// BroadcastCmdTeamCmd

// optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
inline bool BroadcastCmdTeamCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BroadcastCmdTeamCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BroadcastCmdTeamCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BroadcastCmdTeamCmd::clear_cmd() {
  cmd_ = 209;
  clear_has_cmd();
}
inline ::Cmd::Command BroadcastCmdTeamCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.BroadcastCmdTeamCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void BroadcastCmdTeamCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BroadcastCmdTeamCmd.cmd)
}

// optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_BROADCAST_CMD];
inline bool BroadcastCmdTeamCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BroadcastCmdTeamCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BroadcastCmdTeamCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BroadcastCmdTeamCmd::clear_param() {
  param_ = 12;
  clear_has_param();
}
inline ::Cmd::ServerTeamParam BroadcastCmdTeamCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.BroadcastCmdTeamCmd.param)
  return static_cast< ::Cmd::ServerTeamParam >(param_);
}
inline void BroadcastCmdTeamCmd::set_param(::Cmd::ServerTeamParam value) {
  assert(::Cmd::ServerTeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BroadcastCmdTeamCmd.param)
}

// optional uint32 type = 3 [default = 0];
inline bool BroadcastCmdTeamCmd::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BroadcastCmdTeamCmd::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BroadcastCmdTeamCmd::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BroadcastCmdTeamCmd::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 BroadcastCmdTeamCmd::type() const {
  // @@protoc_insertion_point(field_get:Cmd.BroadcastCmdTeamCmd.type)
  return type_;
}
inline void BroadcastCmdTeamCmd::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BroadcastCmdTeamCmd.type)
}

// optional uint64 id = 4 [default = 0];
inline bool BroadcastCmdTeamCmd::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BroadcastCmdTeamCmd::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BroadcastCmdTeamCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BroadcastCmdTeamCmd::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 BroadcastCmdTeamCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.BroadcastCmdTeamCmd.id)
  return id_;
}
inline void BroadcastCmdTeamCmd::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BroadcastCmdTeamCmd.id)
}

// optional bytes data = 5;
inline bool BroadcastCmdTeamCmd::has_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BroadcastCmdTeamCmd::set_has_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BroadcastCmdTeamCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BroadcastCmdTeamCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& BroadcastCmdTeamCmd::data() const {
  // @@protoc_insertion_point(field_get:Cmd.BroadcastCmdTeamCmd.data)
  return *data_;
}
inline void BroadcastCmdTeamCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.BroadcastCmdTeamCmd.data)
}
inline void BroadcastCmdTeamCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.BroadcastCmdTeamCmd.data)
}
inline void BroadcastCmdTeamCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.BroadcastCmdTeamCmd.data)
}
inline ::std::string* BroadcastCmdTeamCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.BroadcastCmdTeamCmd.data)
  return data_;
}
inline ::std::string* BroadcastCmdTeamCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BroadcastCmdTeamCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.BroadcastCmdTeamCmd.data)
}

// optional uint32 len = 6;
inline bool BroadcastCmdTeamCmd::has_len() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BroadcastCmdTeamCmd::set_has_len() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BroadcastCmdTeamCmd::clear_has_len() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BroadcastCmdTeamCmd::clear_len() {
  len_ = 0u;
  clear_has_len();
}
inline ::google::protobuf::uint32 BroadcastCmdTeamCmd::len() const {
  // @@protoc_insertion_point(field_get:Cmd.BroadcastCmdTeamCmd.len)
  return len_;
}
inline void BroadcastCmdTeamCmd::set_len(::google::protobuf::uint32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BroadcastCmdTeamCmd.len)
}

// -------------------------------------------------------------------

// CatEnterTeamCmd

// optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
inline bool CatEnterTeamCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CatEnterTeamCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CatEnterTeamCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CatEnterTeamCmd::clear_cmd() {
  cmd_ = 209;
  clear_has_cmd();
}
inline ::Cmd::Command CatEnterTeamCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.CatEnterTeamCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void CatEnterTeamCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatEnterTeamCmd.cmd)
}

// optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_CAT_ENTERTEAM];
inline bool CatEnterTeamCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CatEnterTeamCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CatEnterTeamCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CatEnterTeamCmd::clear_param() {
  param_ = 13;
  clear_has_param();
}
inline ::Cmd::ServerTeamParam CatEnterTeamCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.CatEnterTeamCmd.param)
  return static_cast< ::Cmd::ServerTeamParam >(param_);
}
inline void CatEnterTeamCmd::set_param(::Cmd::ServerTeamParam value) {
  assert(::Cmd::ServerTeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatEnterTeamCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool CatEnterTeamCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CatEnterTeamCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CatEnterTeamCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CatEnterTeamCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 CatEnterTeamCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.CatEnterTeamCmd.charid)
  return charid_;
}
inline void CatEnterTeamCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatEnterTeamCmd.charid)
}

// repeated .Cmd.MemberCat cats = 4;
inline int CatEnterTeamCmd::cats_size() const {
  return cats_.size();
}
inline void CatEnterTeamCmd::clear_cats() {
  cats_.Clear();
}
inline const ::Cmd::MemberCat& CatEnterTeamCmd::cats(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.CatEnterTeamCmd.cats)
  return cats_.Get(index);
}
inline ::Cmd::MemberCat* CatEnterTeamCmd::mutable_cats(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.CatEnterTeamCmd.cats)
  return cats_.Mutable(index);
}
inline ::Cmd::MemberCat* CatEnterTeamCmd::add_cats() {
  // @@protoc_insertion_point(field_add:Cmd.CatEnterTeamCmd.cats)
  return cats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::MemberCat >&
CatEnterTeamCmd::cats() const {
  // @@protoc_insertion_point(field_list:Cmd.CatEnterTeamCmd.cats)
  return cats_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::MemberCat >*
CatEnterTeamCmd::mutable_cats() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.CatEnterTeamCmd.cats)
  return &cats_;
}

// -------------------------------------------------------------------

// CatExitTeamCmd

// optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
inline bool CatExitTeamCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CatExitTeamCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CatExitTeamCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CatExitTeamCmd::clear_cmd() {
  cmd_ = 209;
  clear_has_cmd();
}
inline ::Cmd::Command CatExitTeamCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.CatExitTeamCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void CatExitTeamCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatExitTeamCmd.cmd)
}

// optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_CAT_EXITTEAM];
inline bool CatExitTeamCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CatExitTeamCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CatExitTeamCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CatExitTeamCmd::clear_param() {
  param_ = 14;
  clear_has_param();
}
inline ::Cmd::ServerTeamParam CatExitTeamCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.CatExitTeamCmd.param)
  return static_cast< ::Cmd::ServerTeamParam >(param_);
}
inline void CatExitTeamCmd::set_param(::Cmd::ServerTeamParam value) {
  assert(::Cmd::ServerTeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatExitTeamCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool CatExitTeamCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CatExitTeamCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CatExitTeamCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CatExitTeamCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 CatExitTeamCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.CatExitTeamCmd.charid)
  return charid_;
}
inline void CatExitTeamCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatExitTeamCmd.charid)
}

// optional uint32 catid = 4 [default = 0];
inline bool CatExitTeamCmd::has_catid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CatExitTeamCmd::set_has_catid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CatExitTeamCmd::clear_has_catid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CatExitTeamCmd::clear_catid() {
  catid_ = 0u;
  clear_has_catid();
}
inline ::google::protobuf::uint32 CatExitTeamCmd::catid() const {
  // @@protoc_insertion_point(field_get:Cmd.CatExitTeamCmd.catid)
  return catid_;
}
inline void CatExitTeamCmd::set_catid(::google::protobuf::uint32 value) {
  set_has_catid();
  catid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatExitTeamCmd.catid)
}

// optional bool enterfail = 5 [default = false];
inline bool CatExitTeamCmd::has_enterfail() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CatExitTeamCmd::set_has_enterfail() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CatExitTeamCmd::clear_has_enterfail() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CatExitTeamCmd::clear_enterfail() {
  enterfail_ = false;
  clear_has_enterfail();
}
inline bool CatExitTeamCmd::enterfail() const {
  // @@protoc_insertion_point(field_get:Cmd.CatExitTeamCmd.enterfail)
  return enterfail_;
}
inline void CatExitTeamCmd::set_enterfail(bool value) {
  set_has_enterfail();
  enterfail_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatExitTeamCmd.enterfail)
}

// -------------------------------------------------------------------

// CatFireTeamCmd

// optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
inline bool CatFireTeamCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CatFireTeamCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CatFireTeamCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CatFireTeamCmd::clear_cmd() {
  cmd_ = 209;
  clear_has_cmd();
}
inline ::Cmd::Command CatFireTeamCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.CatFireTeamCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void CatFireTeamCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatFireTeamCmd.cmd)
}

// optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_CAT_FIRE];
inline bool CatFireTeamCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CatFireTeamCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CatFireTeamCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CatFireTeamCmd::clear_param() {
  param_ = 15;
  clear_has_param();
}
inline ::Cmd::ServerTeamParam CatFireTeamCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.CatFireTeamCmd.param)
  return static_cast< ::Cmd::ServerTeamParam >(param_);
}
inline void CatFireTeamCmd::set_param(::Cmd::ServerTeamParam value) {
  assert(::Cmd::ServerTeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatFireTeamCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool CatFireTeamCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CatFireTeamCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CatFireTeamCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CatFireTeamCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 CatFireTeamCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.CatFireTeamCmd.charid)
  return charid_;
}
inline void CatFireTeamCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatFireTeamCmd.charid)
}

// optional uint64 npcid = 4 [default = 0];
inline bool CatFireTeamCmd::has_npcid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CatFireTeamCmd::set_has_npcid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CatFireTeamCmd::clear_has_npcid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CatFireTeamCmd::clear_npcid() {
  npcid_ = GOOGLE_ULONGLONG(0);
  clear_has_npcid();
}
inline ::google::protobuf::uint64 CatFireTeamCmd::npcid() const {
  // @@protoc_insertion_point(field_get:Cmd.CatFireTeamCmd.npcid)
  return npcid_;
}
inline void CatFireTeamCmd::set_npcid(::google::protobuf::uint64 value) {
  set_has_npcid();
  npcid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatFireTeamCmd.npcid)
}

// optional uint64 catid = 5 [default = 0];
inline bool CatFireTeamCmd::has_catid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CatFireTeamCmd::set_has_catid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CatFireTeamCmd::clear_has_catid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CatFireTeamCmd::clear_catid() {
  catid_ = GOOGLE_ULONGLONG(0);
  clear_has_catid();
}
inline ::google::protobuf::uint64 CatFireTeamCmd::catid() const {
  // @@protoc_insertion_point(field_get:Cmd.CatFireTeamCmd.catid)
  return catid_;
}
inline void CatFireTeamCmd::set_catid(::google::protobuf::uint64 value) {
  set_has_catid();
  catid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatFireTeamCmd.catid)
}

// -------------------------------------------------------------------

// CatCallTeamCmd

// optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
inline bool CatCallTeamCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CatCallTeamCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CatCallTeamCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CatCallTeamCmd::clear_cmd() {
  cmd_ = 209;
  clear_has_cmd();
}
inline ::Cmd::Command CatCallTeamCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.CatCallTeamCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void CatCallTeamCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatCallTeamCmd.cmd)
}

// optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_CAT_CALL];
inline bool CatCallTeamCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CatCallTeamCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CatCallTeamCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CatCallTeamCmd::clear_param() {
  param_ = 16;
  clear_has_param();
}
inline ::Cmd::ServerTeamParam CatCallTeamCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.CatCallTeamCmd.param)
  return static_cast< ::Cmd::ServerTeamParam >(param_);
}
inline void CatCallTeamCmd::set_param(::Cmd::ServerTeamParam value) {
  assert(::Cmd::ServerTeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatCallTeamCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool CatCallTeamCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CatCallTeamCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CatCallTeamCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CatCallTeamCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 CatCallTeamCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.CatCallTeamCmd.charid)
  return charid_;
}
inline void CatCallTeamCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatCallTeamCmd.charid)
}

// -------------------------------------------------------------------

// BeLeaderTeamCmd

// optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
inline bool BeLeaderTeamCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BeLeaderTeamCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BeLeaderTeamCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BeLeaderTeamCmd::clear_cmd() {
  cmd_ = 209;
  clear_has_cmd();
}
inline ::Cmd::Command BeLeaderTeamCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.BeLeaderTeamCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void BeLeaderTeamCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeLeaderTeamCmd.cmd)
}

// optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_BE_LEADER];
inline bool BeLeaderTeamCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BeLeaderTeamCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BeLeaderTeamCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BeLeaderTeamCmd::clear_param() {
  param_ = 17;
  clear_has_param();
}
inline ::Cmd::ServerTeamParam BeLeaderTeamCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.BeLeaderTeamCmd.param)
  return static_cast< ::Cmd::ServerTeamParam >(param_);
}
inline void BeLeaderTeamCmd::set_param(::Cmd::ServerTeamParam value) {
  assert(::Cmd::ServerTeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeLeaderTeamCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool BeLeaderTeamCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BeLeaderTeamCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BeLeaderTeamCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BeLeaderTeamCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 BeLeaderTeamCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.BeLeaderTeamCmd.charid)
  return charid_;
}
inline void BeLeaderTeamCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeLeaderTeamCmd.charid)
}

// optional uint32 teamjob = 4 [default = 0];
inline bool BeLeaderTeamCmd::has_teamjob() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BeLeaderTeamCmd::set_has_teamjob() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BeLeaderTeamCmd::clear_has_teamjob() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BeLeaderTeamCmd::clear_teamjob() {
  teamjob_ = 0u;
  clear_has_teamjob();
}
inline ::google::protobuf::uint32 BeLeaderTeamCmd::teamjob() const {
  // @@protoc_insertion_point(field_get:Cmd.BeLeaderTeamCmd.teamjob)
  return teamjob_;
}
inline void BeLeaderTeamCmd::set_teamjob(::google::protobuf::uint32 value) {
  set_has_teamjob();
  teamjob_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BeLeaderTeamCmd.teamjob)
}

// -------------------------------------------------------------------

// CatEnterOwnTeamCmd

// optional .Cmd.Command cmd = 1 [default = TEAM_PROTOCMD];
inline bool CatEnterOwnTeamCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CatEnterOwnTeamCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CatEnterOwnTeamCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CatEnterOwnTeamCmd::clear_cmd() {
  cmd_ = 209;
  clear_has_cmd();
}
inline ::Cmd::Command CatEnterOwnTeamCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.CatEnterOwnTeamCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void CatEnterOwnTeamCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatEnterOwnTeamCmd.cmd)
}

// optional .Cmd.ServerTeamParam param = 2 [default = SERVERTEAMPARAM_CAT_ENTEROWNTEAM];
inline bool CatEnterOwnTeamCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CatEnterOwnTeamCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CatEnterOwnTeamCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CatEnterOwnTeamCmd::clear_param() {
  param_ = 18;
  clear_has_param();
}
inline ::Cmd::ServerTeamParam CatEnterOwnTeamCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.CatEnterOwnTeamCmd.param)
  return static_cast< ::Cmd::ServerTeamParam >(param_);
}
inline void CatEnterOwnTeamCmd::set_param(::Cmd::ServerTeamParam value) {
  assert(::Cmd::ServerTeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatEnterOwnTeamCmd.param)
}

// required uint64 charid = 3;
inline bool CatEnterOwnTeamCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CatEnterOwnTeamCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CatEnterOwnTeamCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CatEnterOwnTeamCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 CatEnterOwnTeamCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.CatEnterOwnTeamCmd.charid)
  return charid_;
}
inline void CatEnterOwnTeamCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatEnterOwnTeamCmd.charid)
}

// optional .Cmd.TeamData data = 4;
inline bool CatEnterOwnTeamCmd::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CatEnterOwnTeamCmd::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CatEnterOwnTeamCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CatEnterOwnTeamCmd::clear_data() {
  if (data_ != NULL) data_->::Cmd::TeamData::Clear();
  clear_has_data();
}
inline const ::Cmd::TeamData& CatEnterOwnTeamCmd::data() const {
  // @@protoc_insertion_point(field_get:Cmd.CatEnterOwnTeamCmd.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Cmd::TeamData* CatEnterOwnTeamCmd::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Cmd::TeamData;
  // @@protoc_insertion_point(field_mutable:Cmd.CatEnterOwnTeamCmd.data)
  return data_;
}
inline ::Cmd::TeamData* CatEnterOwnTeamCmd::release_data() {
  clear_has_data();
  ::Cmd::TeamData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void CatEnterOwnTeamCmd::set_allocated_data(::Cmd::TeamData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.CatEnterOwnTeamCmd.data)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cmd

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Cmd::ServerTeamParam> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::ServerTeamParam>() {
  return ::Cmd::ServerTeamParam_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_TeamCmd_2eproto__INCLUDED
