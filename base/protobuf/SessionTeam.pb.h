// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SessionTeam.proto

#ifndef PROTOBUF_SessionTeam_2eproto__INCLUDED
#define PROTOBUF_SessionTeam_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "xCmd.pb.h"
#include "ProtoCommon.pb.h"
#include "SceneQuest.pb.h"
// @@protoc_insertion_point(includes)

namespace Cmd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SessionTeam_2eproto();
void protobuf_AssignDesc_SessionTeam_2eproto();
void protobuf_ShutdownFile_SessionTeam_2eproto();

class MemberData;
class TeamMember;
class BlobTeamMember;
class TeamMemberHelpQuest;
class TeamMemberWantedQuest;
class BlobTeamWanted;
class TeamApply;
class BlobTeamApply;
class TeamSealData;
class TeamSummaryItem;
class TeamData;
class TeamList;
class TeamDataUpdate;
class TeamMemberUpdate;
class TeamApplyUpdate;
class CreateTeam;
class InviteMember;
class ProcessTeamInvite;
class TeamMemberApply;
class ProcessTeamApply;
class KickMember;
class ExchangeLeader;
class ExitTeam;
class EnterTeam;
class MemberPosUpdate;
class MemberDataUpdate;
class LockTarget;
class TeamSummon;
class ClearApplyList;
class QuickEnter;
class SetTeamOption;
class QueryUserTeamInfoTeamCmd;
class SetMemberOptionTeamCmd;
class MemberWantedQuest;
class QuestWantedQuestTeamCmd;
class UpdateWantedQuestTeamCmd;
class AcceptHelpWantedTeamCmd;
class UpdateHelpWantedTeamCmd;
class QueryHelpWantedTeamCmd;
class MemberCat;
class QueryMemberCatTeamCmd;
class MemberCatUpdateTeam;

enum TeamParam {
  TEAMPARAM_TEAMLIST = 1,
  TEAMPARAM_DATAUPDATE = 2,
  TEAMPARAM_MEMBERUPDATE = 3,
  TEAMPARAM_APPLYUPDATE = 4,
  TEAMPARAM_CREATETEAM = 5,
  TEAMPARAM_INVITEMEMBER = 6,
  TEAMPARAM_PROCESSINVITE = 7,
  TEAMPARAM_MEMBERAPPLY = 8,
  TEAMPARAM_PROCESSAPPLY = 9,
  TEAMPARAM_KICKMEMBER = 10,
  TEAMPARAM_EXCHANGELEADER = 11,
  TEAMPARAM_EXITTEAM = 12,
  TEAMPARAM_ENTERTEAM = 13,
  TEAMPARAM_MEMBERPOSUPDATE = 14,
  TEAMPARAM_MEMBERDATAUPDATE = 15,
  TEAMPARAM_LOCKTARGET = 16,
  TEAMPARAM_SUMMON = 17,
  TEAMPARAM_CLEARAPPLYLIST = 18,
  TEAMPARAM_QUICKENTER = 19,
  TEAMPARAM_SETOPTION = 20,
  TEAMPARAM_QUERYUSERTEAMINFO = 21,
  TEAMPARAM_SETMEMBEROPTION = 22,
  TEAMPARAM_QUERYWANTEDQUEST = 23,
  TEAMPARAM_UPDATEWANTEDQUEST = 24,
  TEAMPARAM_ACCEPTHELPWANTED = 25,
  TEAMPARAM_UPDATEHELPWANTED = 26,
  TEAMPARAM_QUERYHELPWANTED = 27,
  TEAMPARAM_QUERYMEMBERCAT = 28,
  TEAMPARAM_MEMBERCAT_UPDATE = 29
};
bool TeamParam_IsValid(int value);
const TeamParam TeamParam_MIN = TEAMPARAM_TEAMLIST;
const TeamParam TeamParam_MAX = TEAMPARAM_MEMBERCAT_UPDATE;
const int TeamParam_ARRAYSIZE = TeamParam_MAX + 1;

const ::google::protobuf::EnumDescriptor* TeamParam_descriptor();
inline const ::std::string& TeamParam_Name(TeamParam value) {
  return ::google::protobuf::internal::NameOfEnum(
    TeamParam_descriptor(), value);
}
inline bool TeamParam_Parse(
    const ::std::string& name, TeamParam* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TeamParam>(
    TeamParam_descriptor(), name, value);
}
enum ETeamGlobal {
  ETEAMGLOBAL_LISTCOUNT_PERPAGE = 20
};
bool ETeamGlobal_IsValid(int value);
const ETeamGlobal ETeamGlobal_MIN = ETEAMGLOBAL_LISTCOUNT_PERPAGE;
const ETeamGlobal ETeamGlobal_MAX = ETEAMGLOBAL_LISTCOUNT_PERPAGE;
const int ETeamGlobal_ARRAYSIZE = ETeamGlobal_MAX + 1;

const ::google::protobuf::EnumDescriptor* ETeamGlobal_descriptor();
inline const ::std::string& ETeamGlobal_Name(ETeamGlobal value) {
  return ::google::protobuf::internal::NameOfEnum(
    ETeamGlobal_descriptor(), value);
}
inline bool ETeamGlobal_Parse(
    const ::std::string& name, ETeamGlobal* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ETeamGlobal>(
    ETeamGlobal_descriptor(), name, value);
}
enum ETeamJob {
  ETEAMJOB_MIN = 0,
  ETEAMJOB_LEADER = 1,
  ETEAMJOB_MEMBER = 2,
  ETEAMJOB_APPLY = 3,
  ETEAMJOB_TEMPLEADER = 4,
  ETEAMJOB_MAX = 5
};
bool ETeamJob_IsValid(int value);
const ETeamJob ETeamJob_MIN = ETEAMJOB_MIN;
const ETeamJob ETeamJob_MAX = ETEAMJOB_MAX;
const int ETeamJob_ARRAYSIZE = ETeamJob_MAX + 1;

const ::google::protobuf::EnumDescriptor* ETeamJob_descriptor();
inline const ::std::string& ETeamJob_Name(ETeamJob value) {
  return ::google::protobuf::internal::NameOfEnum(
    ETeamJob_descriptor(), value);
}
inline bool ETeamJob_Parse(
    const ::std::string& name, ETeamJob* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ETeamJob>(
    ETeamJob_descriptor(), name, value);
}
enum EMemberData {
  EMEMBERDATA_MIN = 0,
  EMEMBERDATA_BASELEVEL = 1,
  EMEMBERDATA_PROFESSION = 2,
  EMEMBERDATA_MAPID = 3,
  EMEMBERDATA_PORTRAIT = 4,
  EMEMBERDATA_FRAME = 5,
  EMEMBERDATA_RAIDID = 6,
  EMEMBERDATA_OFFLINE = 7,
  EMEMBERDATA_HP = 8,
  EMEMBERDATA_MAXHP = 9,
  EMEMBERDATA_SP = 10,
  EMEMBERDATA_MAXSP = 11,
  EMEMBERDATA_JOB = 12,
  EMEMBERDATA_TARGETID = 13,
  EMEMBERDATA_JOINHANDID = 14,
  EMEMBERDATA_BODY = 15,
  EMEMBERDATA_HEAD = 16,
  EMEMBERDATA_BACK = 17,
  EMEMBERDATA_FACE = 18,
  EMEMBERDATA_TAIL = 19,
  EMEMBERDATA_HAIR = 20,
  EMEMBERDATA_HAIRCOLOR = 21,
  EMEMBERDATA_CLOTHCOLOR = 22,
  EMEMBERDATA_LEFTHAND = 23,
  EMEMBERDATA_RIGHTHAND = 24,
  EMEMBERDATA_GUILDID = 25,
  EMEMBERDATA_GUILDNAME = 26,
  EMEMBERDATA_GENDER = 27,
  EMEMBERDATA_BLINK = 28,
  EMEMBERDATA_ZONEID = 29,
  EMEMBERDATA_AUTOFOLLOW = 30,
  EMEMBERDATA_EYE = 31,
  EMEMBERDATA_NAME = 32,
  EMEMBERDATA_MOUTH = 33,
  EMEMBERDATA_CAT = 34,
  EMEMBERDATA_RELIVETIME = 35,
  EMEMBERDATA_EXPIRETIME = 36,
  EMEMBERDATA_CAT_OWNER = 37,
  EMEMBERDATA_ENTERTIME = 38,
  EMEMBERDATA_GUILDRAIDINDEX = 39,
  EMEMBERDATA_ENSEMBLESKILL = 40,
  EMEMBERDATA_MAX = 41
};
bool EMemberData_IsValid(int value);
const EMemberData EMemberData_MIN = EMEMBERDATA_MIN;
const EMemberData EMemberData_MAX = EMEMBERDATA_MAX;
const int EMemberData_ARRAYSIZE = EMemberData_MAX + 1;

const ::google::protobuf::EnumDescriptor* EMemberData_descriptor();
inline const ::std::string& EMemberData_Name(EMemberData value) {
  return ::google::protobuf::internal::NameOfEnum(
    EMemberData_descriptor(), value);
}
inline bool EMemberData_Parse(
    const ::std::string& name, EMemberData* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EMemberData>(
    EMemberData_descriptor(), name, value);
}
enum EAutoType {
  EAUTOTYPE_CLOSE = 0,
  EAUTOTYPE_ALL = 1,
  EAUTOTYPE_GUILDFRIEND = 2,
  EAUTOTYPE_MAX = 3
};
bool EAutoType_IsValid(int value);
const EAutoType EAutoType_MIN = EAUTOTYPE_CLOSE;
const EAutoType EAutoType_MAX = EAUTOTYPE_MAX;
const int EAutoType_ARRAYSIZE = EAutoType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EAutoType_descriptor();
inline const ::std::string& EAutoType_Name(EAutoType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EAutoType_descriptor(), value);
}
inline bool EAutoType_Parse(
    const ::std::string& name, EAutoType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EAutoType>(
    EAutoType_descriptor(), name, value);
}
enum ETeamData {
  ETEAMDATA_MIN = 0,
  ETEAMDATA_TYPE = 1,
  ETEAMDATA_MINLV = 2,
  ETEAMDATA_MAXLV = 3,
  ETEAMDATA_OVERTIME = 4,
  ETEAMDATA_AUTOACCEPT = 5,
  ETEAMDATA_MEMBERCOUNT = 6,
  ETEAMDATA_PICKUP_MODE = 7,
  ETEAMDATA_MEMBER = 8,
  ETEAMDATA_HELPWANTED = 9,
  ETEAMDATA_MAX = 10
};
bool ETeamData_IsValid(int value);
const ETeamData ETeamData_MIN = ETEAMDATA_MIN;
const ETeamData ETeamData_MAX = ETEAMDATA_MAX;
const int ETeamData_ARRAYSIZE = ETeamData_MAX + 1;

const ::google::protobuf::EnumDescriptor* ETeamData_descriptor();
inline const ::std::string& ETeamData_Name(ETeamData value) {
  return ::google::protobuf::internal::NameOfEnum(
    ETeamData_descriptor(), value);
}
inline bool ETeamData_Parse(
    const ::std::string& name, ETeamData* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ETeamData>(
    ETeamData_descriptor(), name, value);
}
enum ETeamInviteType {
  ETEAMINVITETYPE_MIN = 0,
  ETEAMINVITETYPE_AGREE = 1,
  ETEAMINVITETYPE_DISAGREE = 2,
  ETEAMINVITETYPE_MAX = 3
};
bool ETeamInviteType_IsValid(int value);
const ETeamInviteType ETeamInviteType_MIN = ETEAMINVITETYPE_MIN;
const ETeamInviteType ETeamInviteType_MAX = ETEAMINVITETYPE_MAX;
const int ETeamInviteType_ARRAYSIZE = ETeamInviteType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ETeamInviteType_descriptor();
inline const ::std::string& ETeamInviteType_Name(ETeamInviteType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ETeamInviteType_descriptor(), value);
}
inline bool ETeamInviteType_Parse(
    const ::std::string& name, ETeamInviteType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ETeamInviteType>(
    ETeamInviteType_descriptor(), name, value);
}
enum ETeamApplyType {
  ETEAMAPPLYTYPE_MIN = 0,
  ETEAMAPPLYTYPE_AGREE = 1,
  ETEAMAPPLYTYPE_DISAGREE = 2,
  ETEAMAPPLYTYPE_MAX = 3
};
bool ETeamApplyType_IsValid(int value);
const ETeamApplyType ETeamApplyType_MIN = ETEAMAPPLYTYPE_MIN;
const ETeamApplyType ETeamApplyType_MAX = ETEAMAPPLYTYPE_MAX;
const int ETeamApplyType_ARRAYSIZE = ETeamApplyType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ETeamApplyType_descriptor();
inline const ::std::string& ETeamApplyType_Name(ETeamApplyType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ETeamApplyType_descriptor(), value);
}
inline bool ETeamApplyType_Parse(
    const ::std::string& name, ETeamApplyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ETeamApplyType>(
    ETeamApplyType_descriptor(), name, value);
}
// ===================================================================

class MemberData : public ::google::protobuf::Message {
 public:
  MemberData();
  virtual ~MemberData();

  MemberData(const MemberData& from);

  inline MemberData& operator=(const MemberData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MemberData& default_instance();

  void Swap(MemberData* other);

  // implements Message ----------------------------------------------

  MemberData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MemberData& from);
  void MergeFrom(const MemberData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.EMemberData type = 1 [default = EMEMBERDATA_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Cmd::EMemberData type() const;
  inline void set_type(::Cmd::EMemberData value);

  // optional uint64 value = 2 [default = 0];
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);

  // optional string data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const char* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // repeated uint64 values = 4;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 4;
  inline ::google::protobuf::uint64 values(int index) const;
  inline void set_values(int index, ::google::protobuf::uint64 value);
  inline void add_values(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      values() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_values();

  // @@protoc_insertion_point(class_scope:Cmd.MemberData)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 value_;
  ::std::string* data_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > values_;
  int type_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static MemberData* default_instance_;
};
// -------------------------------------------------------------------

class TeamMember : public ::google::protobuf::Message {
 public:
  TeamMember();
  virtual ~TeamMember();

  TeamMember(const TeamMember& from);

  inline TeamMember& operator=(const TeamMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamMember& default_instance();

  void Swap(TeamMember* other);

  // implements Message ----------------------------------------------

  TeamMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamMember& from);
  void MergeFrom(const TeamMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 guid = 1 [default = 0];
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // repeated .Cmd.MemberData datas = 3;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 3;
  inline const ::Cmd::MemberData& datas(int index) const;
  inline ::Cmd::MemberData* mutable_datas(int index);
  inline ::Cmd::MemberData* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::MemberData >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::MemberData >*
      mutable_datas();

  // optional uint32 accid = 4;
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 4;
  inline ::google::protobuf::uint32 accid() const;
  inline void set_accid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.TeamMember)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_accid();
  inline void clear_has_accid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::MemberData > datas_;
  ::google::protobuf::uint32 accid_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static TeamMember* default_instance_;
};
// -------------------------------------------------------------------

class BlobTeamMember : public ::google::protobuf::Message {
 public:
  BlobTeamMember();
  virtual ~BlobTeamMember();

  BlobTeamMember(const BlobTeamMember& from);

  inline BlobTeamMember& operator=(const BlobTeamMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlobTeamMember& default_instance();

  void Swap(BlobTeamMember* other);

  // implements Message ----------------------------------------------

  BlobTeamMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlobTeamMember& from);
  void MergeFrom(const BlobTeamMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Cmd.TeamMember members = 1;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 1;
  inline const ::Cmd::TeamMember& members(int index) const;
  inline ::Cmd::TeamMember* mutable_members(int index);
  inline ::Cmd::TeamMember* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMember >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMember >*
      mutable_members();

  // @@protoc_insertion_point(class_scope:Cmd.BlobTeamMember)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMember > members_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static BlobTeamMember* default_instance_;
};
// -------------------------------------------------------------------

class TeamMemberHelpQuest : public ::google::protobuf::Message {
 public:
  TeamMemberHelpQuest();
  virtual ~TeamMemberHelpQuest();

  TeamMemberHelpQuest(const TeamMemberHelpQuest& from);

  inline TeamMemberHelpQuest& operator=(const TeamMemberHelpQuest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamMemberHelpQuest& default_instance();

  void Swap(TeamMemberHelpQuest* other);

  // implements Message ----------------------------------------------

  TeamMemberHelpQuest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamMemberHelpQuest& from);
  void MergeFrom(const TeamMemberHelpQuest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charid = 1 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // repeated uint32 helpquest = 2;
  inline int helpquest_size() const;
  inline void clear_helpquest();
  static const int kHelpquestFieldNumber = 2;
  inline ::google::protobuf::uint32 helpquest(int index) const;
  inline void set_helpquest(int index, ::google::protobuf::uint32 value);
  inline void add_helpquest(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      helpquest() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_helpquest();

  // @@protoc_insertion_point(class_scope:Cmd.TeamMemberHelpQuest)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > helpquest_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static TeamMemberHelpQuest* default_instance_;
};
// -------------------------------------------------------------------

class TeamMemberWantedQuest : public ::google::protobuf::Message {
 public:
  TeamMemberWantedQuest();
  virtual ~TeamMemberWantedQuest();

  TeamMemberWantedQuest(const TeamMemberWantedQuest& from);

  inline TeamMemberWantedQuest& operator=(const TeamMemberWantedQuest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamMemberWantedQuest& default_instance();

  void Swap(TeamMemberWantedQuest* other);

  // implements Message ----------------------------------------------

  TeamMemberWantedQuest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamMemberWantedQuest& from);
  void MergeFrom(const TeamMemberWantedQuest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charid = 1 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 acceptquest = 2 [default = 0];
  inline bool has_acceptquest() const;
  inline void clear_acceptquest();
  static const int kAcceptquestFieldNumber = 2;
  inline ::google::protobuf::uint32 acceptquest() const;
  inline void set_acceptquest(::google::protobuf::uint32 value);

  // optional uint32 acceptstep = 3 [default = 0];
  inline bool has_acceptstep() const;
  inline void clear_acceptstep();
  static const int kAcceptstepFieldNumber = 3;
  inline ::google::protobuf::uint32 acceptstep() const;
  inline void set_acceptstep(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.TeamMemberWantedQuest)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_acceptquest();
  inline void clear_has_acceptquest();
  inline void set_has_acceptstep();
  inline void clear_has_acceptstep();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 acceptquest_;
  ::google::protobuf::uint32 acceptstep_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static TeamMemberWantedQuest* default_instance_;
};
// -------------------------------------------------------------------

class BlobTeamWanted : public ::google::protobuf::Message {
 public:
  BlobTeamWanted();
  virtual ~BlobTeamWanted();

  BlobTeamWanted(const BlobTeamWanted& from);

  inline BlobTeamWanted& operator=(const BlobTeamWanted& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlobTeamWanted& default_instance();

  void Swap(BlobTeamWanted* other);

  // implements Message ----------------------------------------------

  BlobTeamWanted* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlobTeamWanted& from);
  void MergeFrom(const BlobTeamWanted& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Cmd.TeamMemberWantedQuest memberquest = 1;
  inline int memberquest_size() const;
  inline void clear_memberquest();
  static const int kMemberquestFieldNumber = 1;
  inline const ::Cmd::TeamMemberWantedQuest& memberquest(int index) const;
  inline ::Cmd::TeamMemberWantedQuest* mutable_memberquest(int index);
  inline ::Cmd::TeamMemberWantedQuest* add_memberquest();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMemberWantedQuest >&
      memberquest() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMemberWantedQuest >*
      mutable_memberquest();

  // repeated .Cmd.TeamMemberHelpQuest memberhelp = 2;
  inline int memberhelp_size() const;
  inline void clear_memberhelp();
  static const int kMemberhelpFieldNumber = 2;
  inline const ::Cmd::TeamMemberHelpQuest& memberhelp(int index) const;
  inline ::Cmd::TeamMemberHelpQuest* mutable_memberhelp(int index);
  inline ::Cmd::TeamMemberHelpQuest* add_memberhelp();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMemberHelpQuest >&
      memberhelp() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMemberHelpQuest >*
      mutable_memberhelp();

  // @@protoc_insertion_point(class_scope:Cmd.BlobTeamWanted)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMemberWantedQuest > memberquest_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMemberHelpQuest > memberhelp_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static BlobTeamWanted* default_instance_;
};
// -------------------------------------------------------------------

class TeamApply : public ::google::protobuf::Message {
 public:
  TeamApply();
  virtual ~TeamApply();

  TeamApply(const TeamApply& from);

  inline TeamApply& operator=(const TeamApply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamApply& default_instance();

  void Swap(TeamApply* other);

  // implements Message ----------------------------------------------

  TeamApply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamApply& from);
  void MergeFrom(const TeamApply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 guid = 1 [default = 0];
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional uint32 zoneid = 5 [default = 0];
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 5;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 time = 2 [default = 0];
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // repeated .Cmd.MemberData datas = 4;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 4;
  inline const ::Cmd::MemberData& datas(int index) const;
  inline ::Cmd::MemberData* mutable_datas(int index);
  inline ::Cmd::MemberData* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::MemberData >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::MemberData >*
      mutable_datas();

  // optional uint32 accid = 6;
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 6;
  inline ::google::protobuf::uint32 accid() const;
  inline void set_accid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.TeamApply)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_accid();
  inline void clear_has_accid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 time_;
  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::MemberData > datas_;
  ::google::protobuf::uint32 accid_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static TeamApply* default_instance_;
};
// -------------------------------------------------------------------

class BlobTeamApply : public ::google::protobuf::Message {
 public:
  BlobTeamApply();
  virtual ~BlobTeamApply();

  BlobTeamApply(const BlobTeamApply& from);

  inline BlobTeamApply& operator=(const BlobTeamApply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlobTeamApply& default_instance();

  void Swap(BlobTeamApply* other);

  // implements Message ----------------------------------------------

  BlobTeamApply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlobTeamApply& from);
  void MergeFrom(const BlobTeamApply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Cmd.TeamApply applys = 1;
  inline int applys_size() const;
  inline void clear_applys();
  static const int kApplysFieldNumber = 1;
  inline const ::Cmd::TeamApply& applys(int index) const;
  inline ::Cmd::TeamApply* mutable_applys(int index);
  inline ::Cmd::TeamApply* add_applys();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamApply >&
      applys() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamApply >*
      mutable_applys();

  // @@protoc_insertion_point(class_scope:Cmd.BlobTeamApply)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TeamApply > applys_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static BlobTeamApply* default_instance_;
};
// -------------------------------------------------------------------

class TeamSealData : public ::google::protobuf::Message {
 public:
  TeamSealData();
  virtual ~TeamSealData();

  TeamSealData(const TeamSealData& from);

  inline TeamSealData& operator=(const TeamSealData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamSealData& default_instance();

  void Swap(TeamSealData* other);

  // implements Message ----------------------------------------------

  TeamSealData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamSealData& from);
  void MergeFrom(const TeamSealData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 seal = 1 [default = 0];
  inline bool has_seal() const;
  inline void clear_seal();
  static const int kSealFieldNumber = 1;
  inline ::google::protobuf::uint32 seal() const;
  inline void set_seal(::google::protobuf::uint32 value);

  // optional uint32 zoneid = 3 [default = 0];
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 3;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional .Cmd.ScenePos pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline const ::Cmd::ScenePos& pos() const;
  inline ::Cmd::ScenePos* mutable_pos();
  inline ::Cmd::ScenePos* release_pos();
  inline void set_allocated_pos(::Cmd::ScenePos* pos);

  // optional uint64 teamid = 4 [default = 0];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 4;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional uint32 lastonlinetime = 5 [default = 0];
  inline bool has_lastonlinetime() const;
  inline void clear_lastonlinetime();
  static const int kLastonlinetimeFieldNumber = 5;
  inline ::google::protobuf::uint32 lastonlinetime() const;
  inline void set_lastonlinetime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.TeamSealData)
 private:
  inline void set_has_seal();
  inline void clear_has_seal();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_lastonlinetime();
  inline void clear_has_lastonlinetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 seal_;
  ::google::protobuf::uint32 zoneid_;
  ::Cmd::ScenePos* pos_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint32 lastonlinetime_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static TeamSealData* default_instance_;
};
// -------------------------------------------------------------------

class TeamSummaryItem : public ::google::protobuf::Message {
 public:
  TeamSummaryItem();
  virtual ~TeamSummaryItem();

  TeamSummaryItem(const TeamSummaryItem& from);

  inline TeamSummaryItem& operator=(const TeamSummaryItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamSummaryItem& default_instance();

  void Swap(TeamSummaryItem* other);

  // implements Message ----------------------------------------------

  TeamSummaryItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamSummaryItem& from);
  void MergeFrom(const TeamSummaryItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.ETeamData type = 1 [default = ETEAMDATA_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Cmd::ETeamData type() const;
  inline void set_type(::Cmd::ETeamData value);

  // optional uint64 value = 2 [default = 0];
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.TeamSummaryItem)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 value_;
  int type_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static TeamSummaryItem* default_instance_;
};
// -------------------------------------------------------------------

class TeamData : public ::google::protobuf::Message {
 public:
  TeamData();
  virtual ~TeamData();

  TeamData(const TeamData& from);

  inline TeamData& operator=(const TeamData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamData& default_instance();

  void Swap(TeamData* other);

  // implements Message ----------------------------------------------

  TeamData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamData& from);
  void MergeFrom(const TeamData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 guid = 1 [default = 0];
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional uint32 zoneid = 8 [default = 0];
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 8;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // repeated .Cmd.TeamSummaryItem items = 3;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 3;
  inline const ::Cmd::TeamSummaryItem& items(int index) const;
  inline ::Cmd::TeamSummaryItem* mutable_items(int index);
  inline ::Cmd::TeamSummaryItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamSummaryItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamSummaryItem >*
      mutable_items();

  // repeated .Cmd.TeamMember members = 4;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 4;
  inline const ::Cmd::TeamMember& members(int index) const;
  inline ::Cmd::TeamMember* mutable_members(int index);
  inline ::Cmd::TeamMember* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMember >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMember >*
      mutable_members();

  // repeated .Cmd.TeamApply applys = 5;
  inline int applys_size() const;
  inline void clear_applys();
  static const int kApplysFieldNumber = 5;
  inline const ::Cmd::TeamApply& applys(int index) const;
  inline ::Cmd::TeamApply* mutable_applys(int index);
  inline ::Cmd::TeamApply* add_applys();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamApply >&
      applys() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamApply >*
      mutable_applys();

  // optional .Cmd.TeamSealData seal = 6;
  inline bool has_seal() const;
  inline void clear_seal();
  static const int kSealFieldNumber = 6;
  inline const ::Cmd::TeamSealData& seal() const;
  inline ::Cmd::TeamSealData* mutable_seal();
  inline ::Cmd::TeamSealData* release_seal();
  inline void set_allocated_seal(::Cmd::TeamSealData* seal);

  // @@protoc_insertion_point(class_scope:Cmd.TeamData)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_seal();
  inline void clear_has_seal();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TeamSummaryItem > items_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMember > members_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TeamApply > applys_;
  ::Cmd::TeamSealData* seal_;
  ::google::protobuf::uint32 zoneid_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static TeamData* default_instance_;
};
// -------------------------------------------------------------------

class TeamList : public ::google::protobuf::Message {
 public:
  TeamList();
  virtual ~TeamList();

  TeamList(const TeamList& from);

  inline TeamList& operator=(const TeamList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamList& default_instance();

  void Swap(TeamList* other);

  // implements Message ----------------------------------------------

  TeamList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamList& from);
  void MergeFrom(const TeamList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_TEAMLIST];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TeamParam param() const;
  inline void set_param(::Cmd::TeamParam value);

  // optional uint32 type = 3 [default = 0];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 page = 4 [default = 0];
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 4;
  inline ::google::protobuf::uint32 page() const;
  inline void set_page(::google::protobuf::uint32 value);

  // optional uint32 lv = 5 [default = 0];
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 5;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);

  // repeated .Cmd.TeamData list = 6;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 6;
  inline const ::Cmd::TeamData& list(int index) const;
  inline ::Cmd::TeamData* mutable_list(int index);
  inline ::Cmd::TeamData* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamData >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamData >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:Cmd.TeamList)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_page();
  inline void clear_has_page();
  inline void set_has_lv();
  inline void clear_has_lv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 page_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TeamData > list_;
  ::google::protobuf::uint32 lv_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static TeamList* default_instance_;
};
// -------------------------------------------------------------------

class TeamDataUpdate : public ::google::protobuf::Message {
 public:
  TeamDataUpdate();
  virtual ~TeamDataUpdate();

  TeamDataUpdate(const TeamDataUpdate& from);

  inline TeamDataUpdate& operator=(const TeamDataUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamDataUpdate& default_instance();

  void Swap(TeamDataUpdate* other);

  // implements Message ----------------------------------------------

  TeamDataUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamDataUpdate& from);
  void MergeFrom(const TeamDataUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_DATAUPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TeamParam param() const;
  inline void set_param(::Cmd::TeamParam value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // repeated .Cmd.TeamSummaryItem datas = 4;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 4;
  inline const ::Cmd::TeamSummaryItem& datas(int index) const;
  inline ::Cmd::TeamSummaryItem* mutable_datas(int index);
  inline ::Cmd::TeamSummaryItem* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamSummaryItem >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamSummaryItem >*
      mutable_datas();

  // @@protoc_insertion_point(class_scope:Cmd.TeamDataUpdate)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TeamSummaryItem > datas_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static TeamDataUpdate* default_instance_;
};
// -------------------------------------------------------------------

class TeamMemberUpdate : public ::google::protobuf::Message {
 public:
  TeamMemberUpdate();
  virtual ~TeamMemberUpdate();

  TeamMemberUpdate(const TeamMemberUpdate& from);

  inline TeamMemberUpdate& operator=(const TeamMemberUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamMemberUpdate& default_instance();

  void Swap(TeamMemberUpdate* other);

  // implements Message ----------------------------------------------

  TeamMemberUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamMemberUpdate& from);
  void MergeFrom(const TeamMemberUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_MEMBERUPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TeamParam param() const;
  inline void set_param(::Cmd::TeamParam value);

  // repeated .Cmd.TeamMember updates = 3;
  inline int updates_size() const;
  inline void clear_updates();
  static const int kUpdatesFieldNumber = 3;
  inline const ::Cmd::TeamMember& updates(int index) const;
  inline ::Cmd::TeamMember* mutable_updates(int index);
  inline ::Cmd::TeamMember* add_updates();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMember >&
      updates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMember >*
      mutable_updates();

  // repeated uint64 deletes = 4;
  inline int deletes_size() const;
  inline void clear_deletes();
  static const int kDeletesFieldNumber = 4;
  inline ::google::protobuf::uint64 deletes(int index) const;
  inline void set_deletes(int index, ::google::protobuf::uint64 value);
  inline void add_deletes(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      deletes() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_deletes();

  // @@protoc_insertion_point(class_scope:Cmd.TeamMemberUpdate)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMember > updates_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > deletes_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static TeamMemberUpdate* default_instance_;
};
// -------------------------------------------------------------------

class TeamApplyUpdate : public ::google::protobuf::Message {
 public:
  TeamApplyUpdate();
  virtual ~TeamApplyUpdate();

  TeamApplyUpdate(const TeamApplyUpdate& from);

  inline TeamApplyUpdate& operator=(const TeamApplyUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamApplyUpdate& default_instance();

  void Swap(TeamApplyUpdate* other);

  // implements Message ----------------------------------------------

  TeamApplyUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamApplyUpdate& from);
  void MergeFrom(const TeamApplyUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_APPLYUPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TeamParam param() const;
  inline void set_param(::Cmd::TeamParam value);

  // repeated .Cmd.TeamApply updates = 3;
  inline int updates_size() const;
  inline void clear_updates();
  static const int kUpdatesFieldNumber = 3;
  inline const ::Cmd::TeamApply& updates(int index) const;
  inline ::Cmd::TeamApply* mutable_updates(int index);
  inline ::Cmd::TeamApply* add_updates();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamApply >&
      updates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamApply >*
      mutable_updates();

  // repeated uint64 deletes = 4;
  inline int deletes_size() const;
  inline void clear_deletes();
  static const int kDeletesFieldNumber = 4;
  inline ::google::protobuf::uint64 deletes(int index) const;
  inline void set_deletes(int index, ::google::protobuf::uint64 value);
  inline void add_deletes(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      deletes() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_deletes();

  // @@protoc_insertion_point(class_scope:Cmd.TeamApplyUpdate)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TeamApply > updates_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > deletes_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static TeamApplyUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CreateTeam : public ::google::protobuf::Message {
 public:
  CreateTeam();
  virtual ~CreateTeam();

  CreateTeam(const CreateTeam& from);

  inline CreateTeam& operator=(const CreateTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateTeam& default_instance();

  void Swap(CreateTeam* other);

  // implements Message ----------------------------------------------

  CreateTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateTeam& from);
  void MergeFrom(const CreateTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_CREATETEAM];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TeamParam param() const;
  inline void set_param(::Cmd::TeamParam value);

  // optional uint32 minlv = 3 [default = 0];
  inline bool has_minlv() const;
  inline void clear_minlv();
  static const int kMinlvFieldNumber = 3;
  inline ::google::protobuf::uint32 minlv() const;
  inline void set_minlv(::google::protobuf::uint32 value);

  // optional uint32 maxlv = 4 [default = 0];
  inline bool has_maxlv() const;
  inline void clear_maxlv();
  static const int kMaxlvFieldNumber = 4;
  inline ::google::protobuf::uint32 maxlv() const;
  inline void set_maxlv(::google::protobuf::uint32 value);

  // optional uint32 type = 5 [default = 0];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional .Cmd.EAutoType autoaccept = 6 [default = EAUTOTYPE_CLOSE];
  inline bool has_autoaccept() const;
  inline void clear_autoaccept();
  static const int kAutoacceptFieldNumber = 6;
  inline ::Cmd::EAutoType autoaccept() const;
  inline void set_autoaccept(::Cmd::EAutoType value);

  // optional string name = 7;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 7;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:Cmd.CreateTeam)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_minlv();
  inline void clear_has_minlv();
  inline void set_has_maxlv();
  inline void clear_has_maxlv();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_autoaccept();
  inline void clear_has_autoaccept();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 minlv_;
  ::google::protobuf::uint32 maxlv_;
  ::google::protobuf::uint32 type_;
  int autoaccept_;
  ::std::string* name_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static CreateTeam* default_instance_;
};
// -------------------------------------------------------------------

class InviteMember : public ::google::protobuf::Message {
 public:
  InviteMember();
  virtual ~InviteMember();

  InviteMember(const InviteMember& from);

  inline InviteMember& operator=(const InviteMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InviteMember& default_instance();

  void Swap(InviteMember* other);

  // implements Message ----------------------------------------------

  InviteMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InviteMember& from);
  void MergeFrom(const InviteMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_INVITEMEMBER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TeamParam param() const;
  inline void set_param(::Cmd::TeamParam value);

  // optional uint64 userguid = 3 [default = 0];
  inline bool has_userguid() const;
  inline void clear_userguid();
  static const int kUserguidFieldNumber = 3;
  inline ::google::protobuf::uint64 userguid() const;
  inline void set_userguid(::google::protobuf::uint64 value);

  // optional uint32 catid = 4 [default = 0];
  inline bool has_catid() const;
  inline void clear_catid();
  static const int kCatidFieldNumber = 4;
  inline ::google::protobuf::uint32 catid() const;
  inline void set_catid(::google::protobuf::uint32 value);

  // optional string teamname = 5;
  inline bool has_teamname() const;
  inline void clear_teamname();
  static const int kTeamnameFieldNumber = 5;
  inline const ::std::string& teamname() const;
  inline void set_teamname(const ::std::string& value);
  inline void set_teamname(const char* value);
  inline void set_teamname(const char* value, size_t size);
  inline ::std::string* mutable_teamname();
  inline ::std::string* release_teamname();
  inline void set_allocated_teamname(::std::string* teamname);

  // optional string username = 6;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 6;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // @@protoc_insertion_point(class_scope:Cmd.InviteMember)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_userguid();
  inline void clear_has_userguid();
  inline void set_has_catid();
  inline void clear_has_catid();
  inline void set_has_teamname();
  inline void clear_has_teamname();
  inline void set_has_username();
  inline void clear_has_username();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 userguid_;
  ::std::string* teamname_;
  ::std::string* username_;
  ::google::protobuf::uint32 catid_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static InviteMember* default_instance_;
};
// -------------------------------------------------------------------

class ProcessTeamInvite : public ::google::protobuf::Message {
 public:
  ProcessTeamInvite();
  virtual ~ProcessTeamInvite();

  ProcessTeamInvite(const ProcessTeamInvite& from);

  inline ProcessTeamInvite& operator=(const ProcessTeamInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProcessTeamInvite& default_instance();

  void Swap(ProcessTeamInvite* other);

  // implements Message ----------------------------------------------

  ProcessTeamInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProcessTeamInvite& from);
  void MergeFrom(const ProcessTeamInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_PROCESSINVITE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TeamParam param() const;
  inline void set_param(::Cmd::TeamParam value);

  // optional .Cmd.ETeamInviteType type = 3 [default = ETEAMINVITETYPE_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::Cmd::ETeamInviteType type() const;
  inline void set_type(::Cmd::ETeamInviteType value);

  // optional uint64 userguid = 4 [default = 0];
  inline bool has_userguid() const;
  inline void clear_userguid();
  static const int kUserguidFieldNumber = 4;
  inline ::google::protobuf::uint64 userguid() const;
  inline void set_userguid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.ProcessTeamInvite)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_userguid();
  inline void clear_has_userguid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 userguid_;
  int type_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static ProcessTeamInvite* default_instance_;
};
// -------------------------------------------------------------------

class TeamMemberApply : public ::google::protobuf::Message {
 public:
  TeamMemberApply();
  virtual ~TeamMemberApply();

  TeamMemberApply(const TeamMemberApply& from);

  inline TeamMemberApply& operator=(const TeamMemberApply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamMemberApply& default_instance();

  void Swap(TeamMemberApply* other);

  // implements Message ----------------------------------------------

  TeamMemberApply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamMemberApply& from);
  void MergeFrom(const TeamMemberApply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_MEMBERAPPLY];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TeamParam param() const;
  inline void set_param(::Cmd::TeamParam value);

  // optional uint64 guid = 3 [default = 0];
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 3;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.TeamMemberApply)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_guid();
  inline void clear_has_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 guid_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static TeamMemberApply* default_instance_;
};
// -------------------------------------------------------------------

class ProcessTeamApply : public ::google::protobuf::Message {
 public:
  ProcessTeamApply();
  virtual ~ProcessTeamApply();

  ProcessTeamApply(const ProcessTeamApply& from);

  inline ProcessTeamApply& operator=(const ProcessTeamApply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProcessTeamApply& default_instance();

  void Swap(ProcessTeamApply* other);

  // implements Message ----------------------------------------------

  ProcessTeamApply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProcessTeamApply& from);
  void MergeFrom(const ProcessTeamApply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_PROCESSAPPLY];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TeamParam param() const;
  inline void set_param(::Cmd::TeamParam value);

  // optional .Cmd.ETeamApplyType type = 3 [default = ETEAMAPPLYTYPE_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::Cmd::ETeamApplyType type() const;
  inline void set_type(::Cmd::ETeamApplyType value);

  // optional uint64 userguid = 4 [default = 0];
  inline bool has_userguid() const;
  inline void clear_userguid();
  static const int kUserguidFieldNumber = 4;
  inline ::google::protobuf::uint64 userguid() const;
  inline void set_userguid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.ProcessTeamApply)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_userguid();
  inline void clear_has_userguid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 userguid_;
  int type_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static ProcessTeamApply* default_instance_;
};
// -------------------------------------------------------------------

class KickMember : public ::google::protobuf::Message {
 public:
  KickMember();
  virtual ~KickMember();

  KickMember(const KickMember& from);

  inline KickMember& operator=(const KickMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KickMember& default_instance();

  void Swap(KickMember* other);

  // implements Message ----------------------------------------------

  KickMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KickMember& from);
  void MergeFrom(const KickMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_KICKMEMBER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TeamParam param() const;
  inline void set_param(::Cmd::TeamParam value);

  // optional uint64 userid = 3 [default = 0];
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 3;
  inline ::google::protobuf::uint64 userid() const;
  inline void set_userid(::google::protobuf::uint64 value);

  // optional uint64 catid = 4 [default = 0];
  inline bool has_catid() const;
  inline void clear_catid();
  static const int kCatidFieldNumber = 4;
  inline ::google::protobuf::uint64 catid() const;
  inline void set_catid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.KickMember)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_catid();
  inline void clear_has_catid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 userid_;
  ::google::protobuf::uint64 catid_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static KickMember* default_instance_;
};
// -------------------------------------------------------------------

class ExchangeLeader : public ::google::protobuf::Message {
 public:
  ExchangeLeader();
  virtual ~ExchangeLeader();

  ExchangeLeader(const ExchangeLeader& from);

  inline ExchangeLeader& operator=(const ExchangeLeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExchangeLeader& default_instance();

  void Swap(ExchangeLeader* other);

  // implements Message ----------------------------------------------

  ExchangeLeader* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExchangeLeader& from);
  void MergeFrom(const ExchangeLeader& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_EXCHANGELEADER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TeamParam param() const;
  inline void set_param(::Cmd::TeamParam value);

  // optional uint64 userid = 4 [default = 0];
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 4;
  inline ::google::protobuf::uint64 userid() const;
  inline void set_userid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.ExchangeLeader)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 userid_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static ExchangeLeader* default_instance_;
};
// -------------------------------------------------------------------

class ExitTeam : public ::google::protobuf::Message {
 public:
  ExitTeam();
  virtual ~ExitTeam();

  ExitTeam(const ExitTeam& from);

  inline ExitTeam& operator=(const ExitTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitTeam& default_instance();

  void Swap(ExitTeam* other);

  // implements Message ----------------------------------------------

  ExitTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExitTeam& from);
  void MergeFrom(const ExitTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_EXITTEAM];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TeamParam param() const;
  inline void set_param(::Cmd::TeamParam value);

  // optional uint64 teamid = 3 [default = 0];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 3;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.ExitTeam)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 teamid_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static ExitTeam* default_instance_;
};
// -------------------------------------------------------------------

class EnterTeam : public ::google::protobuf::Message {
 public:
  EnterTeam();
  virtual ~EnterTeam();

  EnterTeam(const EnterTeam& from);

  inline EnterTeam& operator=(const EnterTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterTeam& default_instance();

  void Swap(EnterTeam* other);

  // implements Message ----------------------------------------------

  EnterTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterTeam& from);
  void MergeFrom(const EnterTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_ENTERTEAM];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TeamParam param() const;
  inline void set_param(::Cmd::TeamParam value);

  // optional .Cmd.TeamData data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::Cmd::TeamData& data() const;
  inline ::Cmd::TeamData* mutable_data();
  inline ::Cmd::TeamData* release_data();
  inline void set_allocated_data(::Cmd::TeamData* data);

  // @@protoc_insertion_point(class_scope:Cmd.EnterTeam)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::TeamData* data_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static EnterTeam* default_instance_;
};
// -------------------------------------------------------------------

class MemberPosUpdate : public ::google::protobuf::Message {
 public:
  MemberPosUpdate();
  virtual ~MemberPosUpdate();

  MemberPosUpdate(const MemberPosUpdate& from);

  inline MemberPosUpdate& operator=(const MemberPosUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MemberPosUpdate& default_instance();

  void Swap(MemberPosUpdate* other);

  // implements Message ----------------------------------------------

  MemberPosUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MemberPosUpdate& from);
  void MergeFrom(const MemberPosUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_MEMBERPOSUPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TeamParam param() const;
  inline void set_param(::Cmd::TeamParam value);

  // optional uint64 id = 3 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional .Cmd.ScenePos pos = 4;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 4;
  inline const ::Cmd::ScenePos& pos() const;
  inline ::Cmd::ScenePos* mutable_pos();
  inline ::Cmd::ScenePos* release_pos();
  inline void set_allocated_pos(::Cmd::ScenePos* pos);

  // @@protoc_insertion_point(class_scope:Cmd.MemberPosUpdate)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 id_;
  ::Cmd::ScenePos* pos_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static MemberPosUpdate* default_instance_;
};
// -------------------------------------------------------------------

class MemberDataUpdate : public ::google::protobuf::Message {
 public:
  MemberDataUpdate();
  virtual ~MemberDataUpdate();

  MemberDataUpdate(const MemberDataUpdate& from);

  inline MemberDataUpdate& operator=(const MemberDataUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MemberDataUpdate& default_instance();

  void Swap(MemberDataUpdate* other);

  // implements Message ----------------------------------------------

  MemberDataUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MemberDataUpdate& from);
  void MergeFrom(const MemberDataUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_MEMBERDATAUPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TeamParam param() const;
  inline void set_param(::Cmd::TeamParam value);

  // optional uint64 id = 3 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // repeated .Cmd.MemberData members = 4;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 4;
  inline const ::Cmd::MemberData& members(int index) const;
  inline ::Cmd::MemberData* mutable_members(int index);
  inline ::Cmd::MemberData* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::MemberData >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::MemberData >*
      mutable_members();

  // @@protoc_insertion_point(class_scope:Cmd.MemberDataUpdate)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::MemberData > members_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static MemberDataUpdate* default_instance_;
};
// -------------------------------------------------------------------

class LockTarget : public ::google::protobuf::Message {
 public:
  LockTarget();
  virtual ~LockTarget();

  LockTarget(const LockTarget& from);

  inline LockTarget& operator=(const LockTarget& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LockTarget& default_instance();

  void Swap(LockTarget* other);

  // implements Message ----------------------------------------------

  LockTarget* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LockTarget& from);
  void MergeFrom(const LockTarget& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_LOCKTARGET];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TeamParam param() const;
  inline void set_param(::Cmd::TeamParam value);

  // optional uint64 targetid = 3 [default = 0];
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetidFieldNumber = 3;
  inline ::google::protobuf::uint64 targetid() const;
  inline void set_targetid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.LockTarget)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_targetid();
  inline void clear_has_targetid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 targetid_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static LockTarget* default_instance_;
};
// -------------------------------------------------------------------

class TeamSummon : public ::google::protobuf::Message {
 public:
  TeamSummon();
  virtual ~TeamSummon();

  TeamSummon(const TeamSummon& from);

  inline TeamSummon& operator=(const TeamSummon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamSummon& default_instance();

  void Swap(TeamSummon* other);

  // implements Message ----------------------------------------------

  TeamSummon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamSummon& from);
  void MergeFrom(const TeamSummon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_SUMMON];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TeamParam param() const;
  inline void set_param(::Cmd::TeamParam value);

  // optional uint32 raidid = 3 [default = 0];
  inline bool has_raidid() const;
  inline void clear_raidid();
  static const int kRaididFieldNumber = 3;
  inline ::google::protobuf::uint32 raidid() const;
  inline void set_raidid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.TeamSummon)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_raidid();
  inline void clear_has_raidid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 raidid_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static TeamSummon* default_instance_;
};
// -------------------------------------------------------------------

class ClearApplyList : public ::google::protobuf::Message {
 public:
  ClearApplyList();
  virtual ~ClearApplyList();

  ClearApplyList(const ClearApplyList& from);

  inline ClearApplyList& operator=(const ClearApplyList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClearApplyList& default_instance();

  void Swap(ClearApplyList* other);

  // implements Message ----------------------------------------------

  ClearApplyList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClearApplyList& from);
  void MergeFrom(const ClearApplyList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_CLEARAPPLYLIST];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TeamParam param() const;
  inline void set_param(::Cmd::TeamParam value);

  // @@protoc_insertion_point(class_scope:Cmd.ClearApplyList)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static ClearApplyList* default_instance_;
};
// -------------------------------------------------------------------

class QuickEnter : public ::google::protobuf::Message {
 public:
  QuickEnter();
  virtual ~QuickEnter();

  QuickEnter(const QuickEnter& from);

  inline QuickEnter& operator=(const QuickEnter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuickEnter& default_instance();

  void Swap(QuickEnter* other);

  // implements Message ----------------------------------------------

  QuickEnter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuickEnter& from);
  void MergeFrom(const QuickEnter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_QUICKENTER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TeamParam param() const;
  inline void set_param(::Cmd::TeamParam value);

  // optional uint32 type = 3 [default = 0];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 time = 4 [default = 0];
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // optional bool set = 5 [default = false];
  inline bool has_set() const;
  inline void clear_set();
  static const int kSetFieldNumber = 5;
  inline bool set() const;
  inline void set_set(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.QuickEnter)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_set();
  inline void clear_has_set();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 time_;
  bool set_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static QuickEnter* default_instance_;
};
// -------------------------------------------------------------------

class SetTeamOption : public ::google::protobuf::Message {
 public:
  SetTeamOption();
  virtual ~SetTeamOption();

  SetTeamOption(const SetTeamOption& from);

  inline SetTeamOption& operator=(const SetTeamOption& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetTeamOption& default_instance();

  void Swap(SetTeamOption* other);

  // implements Message ----------------------------------------------

  SetTeamOption* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetTeamOption& from);
  void MergeFrom(const SetTeamOption& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_SETOPTION];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TeamParam param() const;
  inline void set_param(::Cmd::TeamParam value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // repeated .Cmd.TeamSummaryItem items = 4;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 4;
  inline const ::Cmd::TeamSummaryItem& items(int index) const;
  inline ::Cmd::TeamSummaryItem* mutable_items(int index);
  inline ::Cmd::TeamSummaryItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamSummaryItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamSummaryItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:Cmd.SetTeamOption)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TeamSummaryItem > items_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static SetTeamOption* default_instance_;
};
// -------------------------------------------------------------------

class QueryUserTeamInfoTeamCmd : public ::google::protobuf::Message {
 public:
  QueryUserTeamInfoTeamCmd();
  virtual ~QueryUserTeamInfoTeamCmd();

  QueryUserTeamInfoTeamCmd(const QueryUserTeamInfoTeamCmd& from);

  inline QueryUserTeamInfoTeamCmd& operator=(const QueryUserTeamInfoTeamCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryUserTeamInfoTeamCmd& default_instance();

  void Swap(QueryUserTeamInfoTeamCmd* other);

  // implements Message ----------------------------------------------

  QueryUserTeamInfoTeamCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryUserTeamInfoTeamCmd& from);
  void MergeFrom(const QueryUserTeamInfoTeamCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_QUERYUSERTEAMINFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TeamParam param() const;
  inline void set_param(::Cmd::TeamParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint64 teamid = 4 [default = 0];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 4;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.QueryUserTeamInfoTeamCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 teamid_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static QueryUserTeamInfoTeamCmd* default_instance_;
};
// -------------------------------------------------------------------

class SetMemberOptionTeamCmd : public ::google::protobuf::Message {
 public:
  SetMemberOptionTeamCmd();
  virtual ~SetMemberOptionTeamCmd();

  SetMemberOptionTeamCmd(const SetMemberOptionTeamCmd& from);

  inline SetMemberOptionTeamCmd& operator=(const SetMemberOptionTeamCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetMemberOptionTeamCmd& default_instance();

  void Swap(SetMemberOptionTeamCmd* other);

  // implements Message ----------------------------------------------

  SetMemberOptionTeamCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetMemberOptionTeamCmd& from);
  void MergeFrom(const SetMemberOptionTeamCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_SETMEMBEROPTION];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TeamParam param() const;
  inline void set_param(::Cmd::TeamParam value);

  // optional bool autofollow = 3 [default = false];
  inline bool has_autofollow() const;
  inline void clear_autofollow();
  static const int kAutofollowFieldNumber = 3;
  inline bool autofollow() const;
  inline void set_autofollow(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.SetMemberOptionTeamCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_autofollow();
  inline void clear_has_autofollow();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  bool autofollow_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static SetMemberOptionTeamCmd* default_instance_;
};
// -------------------------------------------------------------------

class MemberWantedQuest : public ::google::protobuf::Message {
 public:
  MemberWantedQuest();
  virtual ~MemberWantedQuest();

  MemberWantedQuest(const MemberWantedQuest& from);

  inline MemberWantedQuest& operator=(const MemberWantedQuest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MemberWantedQuest& default_instance();

  void Swap(MemberWantedQuest* other);

  // implements Message ----------------------------------------------

  MemberWantedQuest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MemberWantedQuest& from);
  void MergeFrom(const MemberWantedQuest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charid = 1 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 questid = 2 [default = 0];
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestidFieldNumber = 2;
  inline ::google::protobuf::uint32 questid() const;
  inline void set_questid(::google::protobuf::uint32 value);

  // optional .Cmd.EQuestAction action = 3 [default = EQUESTACTION_MIN];
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 3;
  inline ::Cmd::EQuestAction action() const;
  inline void set_action(::Cmd::EQuestAction value);

  // optional uint32 step = 4 [default = 0];
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 4;
  inline ::google::protobuf::uint32 step() const;
  inline void set_step(::google::protobuf::uint32 value);

  // optional .Cmd.QuestStep questdata = 5;
  inline bool has_questdata() const;
  inline void clear_questdata();
  static const int kQuestdataFieldNumber = 5;
  inline const ::Cmd::QuestStep& questdata() const;
  inline ::Cmd::QuestStep* mutable_questdata();
  inline ::Cmd::QuestStep* release_questdata();
  inline void set_allocated_questdata(::Cmd::QuestStep* questdata);

  // @@protoc_insertion_point(class_scope:Cmd.MemberWantedQuest)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_questid();
  inline void clear_has_questid();
  inline void set_has_action();
  inline void clear_has_action();
  inline void set_has_step();
  inline void clear_has_step();
  inline void set_has_questdata();
  inline void clear_has_questdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 questid_;
  int action_;
  ::Cmd::QuestStep* questdata_;
  ::google::protobuf::uint32 step_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static MemberWantedQuest* default_instance_;
};
// -------------------------------------------------------------------

class QuestWantedQuestTeamCmd : public ::google::protobuf::Message {
 public:
  QuestWantedQuestTeamCmd();
  virtual ~QuestWantedQuestTeamCmd();

  QuestWantedQuestTeamCmd(const QuestWantedQuestTeamCmd& from);

  inline QuestWantedQuestTeamCmd& operator=(const QuestWantedQuestTeamCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestWantedQuestTeamCmd& default_instance();

  void Swap(QuestWantedQuestTeamCmd* other);

  // implements Message ----------------------------------------------

  QuestWantedQuestTeamCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestWantedQuestTeamCmd& from);
  void MergeFrom(const QuestWantedQuestTeamCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_QUERYWANTEDQUEST];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TeamParam param() const;
  inline void set_param(::Cmd::TeamParam value);

  // repeated .Cmd.MemberWantedQuest quests = 3;
  inline int quests_size() const;
  inline void clear_quests();
  static const int kQuestsFieldNumber = 3;
  inline const ::Cmd::MemberWantedQuest& quests(int index) const;
  inline ::Cmd::MemberWantedQuest* mutable_quests(int index);
  inline ::Cmd::MemberWantedQuest* add_quests();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::MemberWantedQuest >&
      quests() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::MemberWantedQuest >*
      mutable_quests();

  // @@protoc_insertion_point(class_scope:Cmd.QuestWantedQuestTeamCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::MemberWantedQuest > quests_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static QuestWantedQuestTeamCmd* default_instance_;
};
// -------------------------------------------------------------------

class UpdateWantedQuestTeamCmd : public ::google::protobuf::Message {
 public:
  UpdateWantedQuestTeamCmd();
  virtual ~UpdateWantedQuestTeamCmd();

  UpdateWantedQuestTeamCmd(const UpdateWantedQuestTeamCmd& from);

  inline UpdateWantedQuestTeamCmd& operator=(const UpdateWantedQuestTeamCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateWantedQuestTeamCmd& default_instance();

  void Swap(UpdateWantedQuestTeamCmd* other);

  // implements Message ----------------------------------------------

  UpdateWantedQuestTeamCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateWantedQuestTeamCmd& from);
  void MergeFrom(const UpdateWantedQuestTeamCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_UPDATEWANTEDQUEST];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TeamParam param() const;
  inline void set_param(::Cmd::TeamParam value);

  // optional .Cmd.MemberWantedQuest quest = 3;
  inline bool has_quest() const;
  inline void clear_quest();
  static const int kQuestFieldNumber = 3;
  inline const ::Cmd::MemberWantedQuest& quest() const;
  inline ::Cmd::MemberWantedQuest* mutable_quest();
  inline ::Cmd::MemberWantedQuest* release_quest();
  inline void set_allocated_quest(::Cmd::MemberWantedQuest* quest);

  // @@protoc_insertion_point(class_scope:Cmd.UpdateWantedQuestTeamCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_quest();
  inline void clear_has_quest();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::MemberWantedQuest* quest_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static UpdateWantedQuestTeamCmd* default_instance_;
};
// -------------------------------------------------------------------

class AcceptHelpWantedTeamCmd : public ::google::protobuf::Message {
 public:
  AcceptHelpWantedTeamCmd();
  virtual ~AcceptHelpWantedTeamCmd();

  AcceptHelpWantedTeamCmd(const AcceptHelpWantedTeamCmd& from);

  inline AcceptHelpWantedTeamCmd& operator=(const AcceptHelpWantedTeamCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AcceptHelpWantedTeamCmd& default_instance();

  void Swap(AcceptHelpWantedTeamCmd* other);

  // implements Message ----------------------------------------------

  AcceptHelpWantedTeamCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AcceptHelpWantedTeamCmd& from);
  void MergeFrom(const AcceptHelpWantedTeamCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_ACCEPTHELPWANTED];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TeamParam param() const;
  inline void set_param(::Cmd::TeamParam value);

  // optional uint32 questid = 3 [default = 0];
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestidFieldNumber = 3;
  inline ::google::protobuf::uint32 questid() const;
  inline void set_questid(::google::protobuf::uint32 value);

  // optional bool isabandon = 4 [default = false];
  inline bool has_isabandon() const;
  inline void clear_isabandon();
  static const int kIsabandonFieldNumber = 4;
  inline bool isabandon() const;
  inline void set_isabandon(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.AcceptHelpWantedTeamCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_questid();
  inline void clear_has_questid();
  inline void set_has_isabandon();
  inline void clear_has_isabandon();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 questid_;
  bool isabandon_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static AcceptHelpWantedTeamCmd* default_instance_;
};
// -------------------------------------------------------------------

class UpdateHelpWantedTeamCmd : public ::google::protobuf::Message {
 public:
  UpdateHelpWantedTeamCmd();
  virtual ~UpdateHelpWantedTeamCmd();

  UpdateHelpWantedTeamCmd(const UpdateHelpWantedTeamCmd& from);

  inline UpdateHelpWantedTeamCmd& operator=(const UpdateHelpWantedTeamCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateHelpWantedTeamCmd& default_instance();

  void Swap(UpdateHelpWantedTeamCmd* other);

  // implements Message ----------------------------------------------

  UpdateHelpWantedTeamCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateHelpWantedTeamCmd& from);
  void MergeFrom(const UpdateHelpWantedTeamCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_UPDATEHELPWANTED];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TeamParam param() const;
  inline void set_param(::Cmd::TeamParam value);

  // repeated uint32 addlist = 3;
  inline int addlist_size() const;
  inline void clear_addlist();
  static const int kAddlistFieldNumber = 3;
  inline ::google::protobuf::uint32 addlist(int index) const;
  inline void set_addlist(int index, ::google::protobuf::uint32 value);
  inline void add_addlist(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      addlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_addlist();

  // repeated uint32 dellist = 4;
  inline int dellist_size() const;
  inline void clear_dellist();
  static const int kDellistFieldNumber = 4;
  inline ::google::protobuf::uint32 dellist(int index) const;
  inline void set_dellist(int index, ::google::protobuf::uint32 value);
  inline void add_dellist(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      dellist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_dellist();

  // @@protoc_insertion_point(class_scope:Cmd.UpdateHelpWantedTeamCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > addlist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > dellist_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static UpdateHelpWantedTeamCmd* default_instance_;
};
// -------------------------------------------------------------------

class QueryHelpWantedTeamCmd : public ::google::protobuf::Message {
 public:
  QueryHelpWantedTeamCmd();
  virtual ~QueryHelpWantedTeamCmd();

  QueryHelpWantedTeamCmd(const QueryHelpWantedTeamCmd& from);

  inline QueryHelpWantedTeamCmd& operator=(const QueryHelpWantedTeamCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryHelpWantedTeamCmd& default_instance();

  void Swap(QueryHelpWantedTeamCmd* other);

  // implements Message ----------------------------------------------

  QueryHelpWantedTeamCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryHelpWantedTeamCmd& from);
  void MergeFrom(const QueryHelpWantedTeamCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_QUERYHELPWANTED];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TeamParam param() const;
  inline void set_param(::Cmd::TeamParam value);

  // repeated uint32 questids = 3;
  inline int questids_size() const;
  inline void clear_questids();
  static const int kQuestidsFieldNumber = 3;
  inline ::google::protobuf::uint32 questids(int index) const;
  inline void set_questids(int index, ::google::protobuf::uint32 value);
  inline void add_questids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      questids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_questids();

  // @@protoc_insertion_point(class_scope:Cmd.QueryHelpWantedTeamCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > questids_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static QueryHelpWantedTeamCmd* default_instance_;
};
// -------------------------------------------------------------------

class MemberCat : public ::google::protobuf::Message {
 public:
  MemberCat();
  virtual ~MemberCat();

  MemberCat(const MemberCat& from);

  inline MemberCat& operator=(const MemberCat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MemberCat& default_instance();

  void Swap(MemberCat* other);

  // implements Message ----------------------------------------------

  MemberCat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MemberCat& from);
  void MergeFrom(const MemberCat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 ownerid = 1 [default = 0];
  inline bool has_ownerid() const;
  inline void clear_ownerid();
  static const int kOwneridFieldNumber = 1;
  inline ::google::protobuf::uint64 ownerid() const;
  inline void set_ownerid(::google::protobuf::uint64 value);

  // optional uint64 id = 2 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 catid = 3 [default = 0];
  inline bool has_catid() const;
  inline void clear_catid();
  static const int kCatidFieldNumber = 3;
  inline ::google::protobuf::uint32 catid() const;
  inline void set_catid(::google::protobuf::uint32 value);

  // optional uint32 relivetime = 4 [default = 0];
  inline bool has_relivetime() const;
  inline void clear_relivetime();
  static const int kRelivetimeFieldNumber = 4;
  inline ::google::protobuf::uint32 relivetime() const;
  inline void set_relivetime(::google::protobuf::uint32 value);

  // optional uint32 lv = 5 [default = 0];
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 5;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);

  // optional uint32 expiretime = 6 [default = 0];
  inline bool has_expiretime() const;
  inline void clear_expiretime();
  static const int kExpiretimeFieldNumber = 6;
  inline ::google::protobuf::uint32 expiretime() const;
  inline void set_expiretime(::google::protobuf::uint32 value);

  // optional string name = 7;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 7;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:Cmd.MemberCat)
 private:
  inline void set_has_ownerid();
  inline void clear_has_ownerid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_catid();
  inline void clear_has_catid();
  inline void set_has_relivetime();
  inline void clear_has_relivetime();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_expiretime();
  inline void clear_has_expiretime();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 ownerid_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 catid_;
  ::google::protobuf::uint32 relivetime_;
  ::google::protobuf::uint32 lv_;
  ::google::protobuf::uint32 expiretime_;
  ::std::string* name_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static MemberCat* default_instance_;
};
// -------------------------------------------------------------------

class QueryMemberCatTeamCmd : public ::google::protobuf::Message {
 public:
  QueryMemberCatTeamCmd();
  virtual ~QueryMemberCatTeamCmd();

  QueryMemberCatTeamCmd(const QueryMemberCatTeamCmd& from);

  inline QueryMemberCatTeamCmd& operator=(const QueryMemberCatTeamCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryMemberCatTeamCmd& default_instance();

  void Swap(QueryMemberCatTeamCmd* other);

  // implements Message ----------------------------------------------

  QueryMemberCatTeamCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryMemberCatTeamCmd& from);
  void MergeFrom(const QueryMemberCatTeamCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_QUERYMEMBERCAT];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TeamParam param() const;
  inline void set_param(::Cmd::TeamParam value);

  // @@protoc_insertion_point(class_scope:Cmd.QueryMemberCatTeamCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static QueryMemberCatTeamCmd* default_instance_;
};
// -------------------------------------------------------------------

class MemberCatUpdateTeam : public ::google::protobuf::Message {
 public:
  MemberCatUpdateTeam();
  virtual ~MemberCatUpdateTeam();

  MemberCatUpdateTeam(const MemberCatUpdateTeam& from);

  inline MemberCatUpdateTeam& operator=(const MemberCatUpdateTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MemberCatUpdateTeam& default_instance();

  void Swap(MemberCatUpdateTeam* other);

  // implements Message ----------------------------------------------

  MemberCatUpdateTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MemberCatUpdateTeam& from);
  void MergeFrom(const MemberCatUpdateTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_MEMBERCAT_UPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::TeamParam param() const;
  inline void set_param(::Cmd::TeamParam value);

  // repeated .Cmd.MemberCat updates = 3;
  inline int updates_size() const;
  inline void clear_updates();
  static const int kUpdatesFieldNumber = 3;
  inline const ::Cmd::MemberCat& updates(int index) const;
  inline ::Cmd::MemberCat* mutable_updates(int index);
  inline ::Cmd::MemberCat* add_updates();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::MemberCat >&
      updates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::MemberCat >*
      mutable_updates();

  // repeated .Cmd.MemberCat dels = 4;
  inline int dels_size() const;
  inline void clear_dels();
  static const int kDelsFieldNumber = 4;
  inline const ::Cmd::MemberCat& dels(int index) const;
  inline ::Cmd::MemberCat* mutable_dels(int index);
  inline ::Cmd::MemberCat* add_dels();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::MemberCat >&
      dels() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::MemberCat >*
      mutable_dels();

  // @@protoc_insertion_point(class_scope:Cmd.MemberCatUpdateTeam)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::MemberCat > updates_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::MemberCat > dels_;
  friend void  protobuf_AddDesc_SessionTeam_2eproto();
  friend void protobuf_AssignDesc_SessionTeam_2eproto();
  friend void protobuf_ShutdownFile_SessionTeam_2eproto();

  void InitAsDefaultInstance();
  static MemberCatUpdateTeam* default_instance_;
};
// ===================================================================


// ===================================================================

// MemberData

// optional .Cmd.EMemberData type = 1 [default = EMEMBERDATA_MIN];
inline bool MemberData::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MemberData::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MemberData::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MemberData::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::EMemberData MemberData::type() const {
  // @@protoc_insertion_point(field_get:Cmd.MemberData.type)
  return static_cast< ::Cmd::EMemberData >(type_);
}
inline void MemberData::set_type(::Cmd::EMemberData value) {
  assert(::Cmd::EMemberData_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MemberData.type)
}

// optional uint64 value = 2 [default = 0];
inline bool MemberData::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MemberData::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MemberData::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MemberData::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 MemberData::value() const {
  // @@protoc_insertion_point(field_get:Cmd.MemberData.value)
  return value_;
}
inline void MemberData::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MemberData.value)
}

// optional string data = 3;
inline bool MemberData::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MemberData::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MemberData::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MemberData::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& MemberData::data() const {
  // @@protoc_insertion_point(field_get:Cmd.MemberData.data)
  return *data_;
}
inline void MemberData::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.MemberData.data)
}
inline void MemberData::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.MemberData.data)
}
inline void MemberData::set_data(const char* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.MemberData.data)
}
inline ::std::string* MemberData::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.MemberData.data)
  return data_;
}
inline ::std::string* MemberData::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MemberData::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.MemberData.data)
}

// repeated uint64 values = 4;
inline int MemberData::values_size() const {
  return values_.size();
}
inline void MemberData::clear_values() {
  values_.Clear();
}
inline ::google::protobuf::uint64 MemberData::values(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.MemberData.values)
  return values_.Get(index);
}
inline void MemberData::set_values(int index, ::google::protobuf::uint64 value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.MemberData.values)
}
inline void MemberData::add_values(::google::protobuf::uint64 value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.MemberData.values)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
MemberData::values() const {
  // @@protoc_insertion_point(field_list:Cmd.MemberData.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
MemberData::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.MemberData.values)
  return &values_;
}

// -------------------------------------------------------------------

// TeamMember

// optional uint64 guid = 1 [default = 0];
inline bool TeamMember::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamMember::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamMember::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamMember::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 TeamMember::guid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMember.guid)
  return guid_;
}
inline void TeamMember::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamMember.guid)
}

// optional string name = 2;
inline bool TeamMember::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamMember::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamMember::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamMember::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& TeamMember::name() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMember.name)
  return *name_;
}
inline void TeamMember::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.TeamMember.name)
}
inline void TeamMember::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.TeamMember.name)
}
inline void TeamMember::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.TeamMember.name)
}
inline ::std::string* TeamMember::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.TeamMember.name)
  return name_;
}
inline ::std::string* TeamMember::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TeamMember::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TeamMember.name)
}

// repeated .Cmd.MemberData datas = 3;
inline int TeamMember::datas_size() const {
  return datas_.size();
}
inline void TeamMember::clear_datas() {
  datas_.Clear();
}
inline const ::Cmd::MemberData& TeamMember::datas(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMember.datas)
  return datas_.Get(index);
}
inline ::Cmd::MemberData* TeamMember::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.TeamMember.datas)
  return datas_.Mutable(index);
}
inline ::Cmd::MemberData* TeamMember::add_datas() {
  // @@protoc_insertion_point(field_add:Cmd.TeamMember.datas)
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::MemberData >&
TeamMember::datas() const {
  // @@protoc_insertion_point(field_list:Cmd.TeamMember.datas)
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::MemberData >*
TeamMember::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TeamMember.datas)
  return &datas_;
}

// optional uint32 accid = 4;
inline bool TeamMember::has_accid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamMember::set_has_accid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamMember::clear_has_accid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamMember::clear_accid() {
  accid_ = 0u;
  clear_has_accid();
}
inline ::google::protobuf::uint32 TeamMember::accid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMember.accid)
  return accid_;
}
inline void TeamMember::set_accid(::google::protobuf::uint32 value) {
  set_has_accid();
  accid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamMember.accid)
}

// -------------------------------------------------------------------

// BlobTeamMember

// repeated .Cmd.TeamMember members = 1;
inline int BlobTeamMember::members_size() const {
  return members_.size();
}
inline void BlobTeamMember::clear_members() {
  members_.Clear();
}
inline const ::Cmd::TeamMember& BlobTeamMember::members(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BlobTeamMember.members)
  return members_.Get(index);
}
inline ::Cmd::TeamMember* BlobTeamMember::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BlobTeamMember.members)
  return members_.Mutable(index);
}
inline ::Cmd::TeamMember* BlobTeamMember::add_members() {
  // @@protoc_insertion_point(field_add:Cmd.BlobTeamMember.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMember >&
BlobTeamMember::members() const {
  // @@protoc_insertion_point(field_list:Cmd.BlobTeamMember.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMember >*
BlobTeamMember::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BlobTeamMember.members)
  return &members_;
}

// -------------------------------------------------------------------

// TeamMemberHelpQuest

// optional uint64 charid = 1 [default = 0];
inline bool TeamMemberHelpQuest::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamMemberHelpQuest::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamMemberHelpQuest::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamMemberHelpQuest::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 TeamMemberHelpQuest::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMemberHelpQuest.charid)
  return charid_;
}
inline void TeamMemberHelpQuest::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamMemberHelpQuest.charid)
}

// repeated uint32 helpquest = 2;
inline int TeamMemberHelpQuest::helpquest_size() const {
  return helpquest_.size();
}
inline void TeamMemberHelpQuest::clear_helpquest() {
  helpquest_.Clear();
}
inline ::google::protobuf::uint32 TeamMemberHelpQuest::helpquest(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMemberHelpQuest.helpquest)
  return helpquest_.Get(index);
}
inline void TeamMemberHelpQuest::set_helpquest(int index, ::google::protobuf::uint32 value) {
  helpquest_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.TeamMemberHelpQuest.helpquest)
}
inline void TeamMemberHelpQuest::add_helpquest(::google::protobuf::uint32 value) {
  helpquest_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.TeamMemberHelpQuest.helpquest)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TeamMemberHelpQuest::helpquest() const {
  // @@protoc_insertion_point(field_list:Cmd.TeamMemberHelpQuest.helpquest)
  return helpquest_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TeamMemberHelpQuest::mutable_helpquest() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TeamMemberHelpQuest.helpquest)
  return &helpquest_;
}

// -------------------------------------------------------------------

// TeamMemberWantedQuest

// optional uint64 charid = 1 [default = 0];
inline bool TeamMemberWantedQuest::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamMemberWantedQuest::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamMemberWantedQuest::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamMemberWantedQuest::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 TeamMemberWantedQuest::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMemberWantedQuest.charid)
  return charid_;
}
inline void TeamMemberWantedQuest::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamMemberWantedQuest.charid)
}

// optional uint32 acceptquest = 2 [default = 0];
inline bool TeamMemberWantedQuest::has_acceptquest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamMemberWantedQuest::set_has_acceptquest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamMemberWantedQuest::clear_has_acceptquest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamMemberWantedQuest::clear_acceptquest() {
  acceptquest_ = 0u;
  clear_has_acceptquest();
}
inline ::google::protobuf::uint32 TeamMemberWantedQuest::acceptquest() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMemberWantedQuest.acceptquest)
  return acceptquest_;
}
inline void TeamMemberWantedQuest::set_acceptquest(::google::protobuf::uint32 value) {
  set_has_acceptquest();
  acceptquest_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamMemberWantedQuest.acceptquest)
}

// optional uint32 acceptstep = 3 [default = 0];
inline bool TeamMemberWantedQuest::has_acceptstep() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamMemberWantedQuest::set_has_acceptstep() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamMemberWantedQuest::clear_has_acceptstep() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamMemberWantedQuest::clear_acceptstep() {
  acceptstep_ = 0u;
  clear_has_acceptstep();
}
inline ::google::protobuf::uint32 TeamMemberWantedQuest::acceptstep() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMemberWantedQuest.acceptstep)
  return acceptstep_;
}
inline void TeamMemberWantedQuest::set_acceptstep(::google::protobuf::uint32 value) {
  set_has_acceptstep();
  acceptstep_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamMemberWantedQuest.acceptstep)
}

// -------------------------------------------------------------------

// BlobTeamWanted

// repeated .Cmd.TeamMemberWantedQuest memberquest = 1;
inline int BlobTeamWanted::memberquest_size() const {
  return memberquest_.size();
}
inline void BlobTeamWanted::clear_memberquest() {
  memberquest_.Clear();
}
inline const ::Cmd::TeamMemberWantedQuest& BlobTeamWanted::memberquest(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BlobTeamWanted.memberquest)
  return memberquest_.Get(index);
}
inline ::Cmd::TeamMemberWantedQuest* BlobTeamWanted::mutable_memberquest(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BlobTeamWanted.memberquest)
  return memberquest_.Mutable(index);
}
inline ::Cmd::TeamMemberWantedQuest* BlobTeamWanted::add_memberquest() {
  // @@protoc_insertion_point(field_add:Cmd.BlobTeamWanted.memberquest)
  return memberquest_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMemberWantedQuest >&
BlobTeamWanted::memberquest() const {
  // @@protoc_insertion_point(field_list:Cmd.BlobTeamWanted.memberquest)
  return memberquest_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMemberWantedQuest >*
BlobTeamWanted::mutable_memberquest() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BlobTeamWanted.memberquest)
  return &memberquest_;
}

// repeated .Cmd.TeamMemberHelpQuest memberhelp = 2;
inline int BlobTeamWanted::memberhelp_size() const {
  return memberhelp_.size();
}
inline void BlobTeamWanted::clear_memberhelp() {
  memberhelp_.Clear();
}
inline const ::Cmd::TeamMemberHelpQuest& BlobTeamWanted::memberhelp(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BlobTeamWanted.memberhelp)
  return memberhelp_.Get(index);
}
inline ::Cmd::TeamMemberHelpQuest* BlobTeamWanted::mutable_memberhelp(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BlobTeamWanted.memberhelp)
  return memberhelp_.Mutable(index);
}
inline ::Cmd::TeamMemberHelpQuest* BlobTeamWanted::add_memberhelp() {
  // @@protoc_insertion_point(field_add:Cmd.BlobTeamWanted.memberhelp)
  return memberhelp_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMemberHelpQuest >&
BlobTeamWanted::memberhelp() const {
  // @@protoc_insertion_point(field_list:Cmd.BlobTeamWanted.memberhelp)
  return memberhelp_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMemberHelpQuest >*
BlobTeamWanted::mutable_memberhelp() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BlobTeamWanted.memberhelp)
  return &memberhelp_;
}

// -------------------------------------------------------------------

// TeamApply

// optional uint64 guid = 1 [default = 0];
inline bool TeamApply::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamApply::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamApply::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamApply::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 TeamApply::guid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamApply.guid)
  return guid_;
}
inline void TeamApply::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamApply.guid)
}

// optional uint32 zoneid = 5 [default = 0];
inline bool TeamApply::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamApply::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamApply::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamApply::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 TeamApply::zoneid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamApply.zoneid)
  return zoneid_;
}
inline void TeamApply::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamApply.zoneid)
}

// optional uint32 time = 2 [default = 0];
inline bool TeamApply::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamApply::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamApply::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamApply::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 TeamApply::time() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamApply.time)
  return time_;
}
inline void TeamApply::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamApply.time)
}

// optional string name = 3;
inline bool TeamApply::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamApply::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamApply::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamApply::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& TeamApply::name() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamApply.name)
  return *name_;
}
inline void TeamApply::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.TeamApply.name)
}
inline void TeamApply::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.TeamApply.name)
}
inline void TeamApply::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.TeamApply.name)
}
inline ::std::string* TeamApply::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.TeamApply.name)
  return name_;
}
inline ::std::string* TeamApply::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TeamApply::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TeamApply.name)
}

// repeated .Cmd.MemberData datas = 4;
inline int TeamApply::datas_size() const {
  return datas_.size();
}
inline void TeamApply::clear_datas() {
  datas_.Clear();
}
inline const ::Cmd::MemberData& TeamApply::datas(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TeamApply.datas)
  return datas_.Get(index);
}
inline ::Cmd::MemberData* TeamApply::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.TeamApply.datas)
  return datas_.Mutable(index);
}
inline ::Cmd::MemberData* TeamApply::add_datas() {
  // @@protoc_insertion_point(field_add:Cmd.TeamApply.datas)
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::MemberData >&
TeamApply::datas() const {
  // @@protoc_insertion_point(field_list:Cmd.TeamApply.datas)
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::MemberData >*
TeamApply::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TeamApply.datas)
  return &datas_;
}

// optional uint32 accid = 6;
inline bool TeamApply::has_accid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TeamApply::set_has_accid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TeamApply::clear_has_accid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TeamApply::clear_accid() {
  accid_ = 0u;
  clear_has_accid();
}
inline ::google::protobuf::uint32 TeamApply::accid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamApply.accid)
  return accid_;
}
inline void TeamApply::set_accid(::google::protobuf::uint32 value) {
  set_has_accid();
  accid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamApply.accid)
}

// -------------------------------------------------------------------

// BlobTeamApply

// repeated .Cmd.TeamApply applys = 1;
inline int BlobTeamApply::applys_size() const {
  return applys_.size();
}
inline void BlobTeamApply::clear_applys() {
  applys_.Clear();
}
inline const ::Cmd::TeamApply& BlobTeamApply::applys(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BlobTeamApply.applys)
  return applys_.Get(index);
}
inline ::Cmd::TeamApply* BlobTeamApply::mutable_applys(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BlobTeamApply.applys)
  return applys_.Mutable(index);
}
inline ::Cmd::TeamApply* BlobTeamApply::add_applys() {
  // @@protoc_insertion_point(field_add:Cmd.BlobTeamApply.applys)
  return applys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamApply >&
BlobTeamApply::applys() const {
  // @@protoc_insertion_point(field_list:Cmd.BlobTeamApply.applys)
  return applys_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamApply >*
BlobTeamApply::mutable_applys() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BlobTeamApply.applys)
  return &applys_;
}

// -------------------------------------------------------------------

// TeamSealData

// optional uint32 seal = 1 [default = 0];
inline bool TeamSealData::has_seal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamSealData::set_has_seal() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamSealData::clear_has_seal() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamSealData::clear_seal() {
  seal_ = 0u;
  clear_has_seal();
}
inline ::google::protobuf::uint32 TeamSealData::seal() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamSealData.seal)
  return seal_;
}
inline void TeamSealData::set_seal(::google::protobuf::uint32 value) {
  set_has_seal();
  seal_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamSealData.seal)
}

// optional uint32 zoneid = 3 [default = 0];
inline bool TeamSealData::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamSealData::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamSealData::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamSealData::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 TeamSealData::zoneid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamSealData.zoneid)
  return zoneid_;
}
inline void TeamSealData::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamSealData.zoneid)
}

// optional .Cmd.ScenePos pos = 2;
inline bool TeamSealData::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamSealData::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamSealData::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamSealData::clear_pos() {
  if (pos_ != NULL) pos_->::Cmd::ScenePos::Clear();
  clear_has_pos();
}
inline const ::Cmd::ScenePos& TeamSealData::pos() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamSealData.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Cmd::ScenePos* TeamSealData::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Cmd::ScenePos;
  // @@protoc_insertion_point(field_mutable:Cmd.TeamSealData.pos)
  return pos_;
}
inline ::Cmd::ScenePos* TeamSealData::release_pos() {
  clear_has_pos();
  ::Cmd::ScenePos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void TeamSealData::set_allocated_pos(::Cmd::ScenePos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TeamSealData.pos)
}

// optional uint64 teamid = 4 [default = 0];
inline bool TeamSealData::has_teamid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamSealData::set_has_teamid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamSealData::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamSealData::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TeamSealData::teamid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamSealData.teamid)
  return teamid_;
}
inline void TeamSealData::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamSealData.teamid)
}

// optional uint32 lastonlinetime = 5 [default = 0];
inline bool TeamSealData::has_lastonlinetime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TeamSealData::set_has_lastonlinetime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TeamSealData::clear_has_lastonlinetime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TeamSealData::clear_lastonlinetime() {
  lastonlinetime_ = 0u;
  clear_has_lastonlinetime();
}
inline ::google::protobuf::uint32 TeamSealData::lastonlinetime() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamSealData.lastonlinetime)
  return lastonlinetime_;
}
inline void TeamSealData::set_lastonlinetime(::google::protobuf::uint32 value) {
  set_has_lastonlinetime();
  lastonlinetime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamSealData.lastonlinetime)
}

// -------------------------------------------------------------------

// TeamSummaryItem

// optional .Cmd.ETeamData type = 1 [default = ETEAMDATA_MIN];
inline bool TeamSummaryItem::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamSummaryItem::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamSummaryItem::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamSummaryItem::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::ETeamData TeamSummaryItem::type() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamSummaryItem.type)
  return static_cast< ::Cmd::ETeamData >(type_);
}
inline void TeamSummaryItem::set_type(::Cmd::ETeamData value) {
  assert(::Cmd::ETeamData_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamSummaryItem.type)
}

// optional uint64 value = 2 [default = 0];
inline bool TeamSummaryItem::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamSummaryItem::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamSummaryItem::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamSummaryItem::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 TeamSummaryItem::value() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamSummaryItem.value)
  return value_;
}
inline void TeamSummaryItem::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamSummaryItem.value)
}

// -------------------------------------------------------------------

// TeamData

// optional uint64 guid = 1 [default = 0];
inline bool TeamData::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamData::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamData::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamData::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 TeamData::guid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamData.guid)
  return guid_;
}
inline void TeamData::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamData.guid)
}

// optional uint32 zoneid = 8 [default = 0];
inline bool TeamData::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamData::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamData::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamData::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 TeamData::zoneid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamData.zoneid)
  return zoneid_;
}
inline void TeamData::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamData.zoneid)
}

// optional string name = 2;
inline bool TeamData::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamData::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamData::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamData::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& TeamData::name() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamData.name)
  return *name_;
}
inline void TeamData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.TeamData.name)
}
inline void TeamData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.TeamData.name)
}
inline void TeamData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.TeamData.name)
}
inline ::std::string* TeamData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.TeamData.name)
  return name_;
}
inline ::std::string* TeamData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TeamData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TeamData.name)
}

// repeated .Cmd.TeamSummaryItem items = 3;
inline int TeamData::items_size() const {
  return items_.size();
}
inline void TeamData::clear_items() {
  items_.Clear();
}
inline const ::Cmd::TeamSummaryItem& TeamData::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TeamData.items)
  return items_.Get(index);
}
inline ::Cmd::TeamSummaryItem* TeamData::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.TeamData.items)
  return items_.Mutable(index);
}
inline ::Cmd::TeamSummaryItem* TeamData::add_items() {
  // @@protoc_insertion_point(field_add:Cmd.TeamData.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamSummaryItem >&
TeamData::items() const {
  // @@protoc_insertion_point(field_list:Cmd.TeamData.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamSummaryItem >*
TeamData::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TeamData.items)
  return &items_;
}

// repeated .Cmd.TeamMember members = 4;
inline int TeamData::members_size() const {
  return members_.size();
}
inline void TeamData::clear_members() {
  members_.Clear();
}
inline const ::Cmd::TeamMember& TeamData::members(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TeamData.members)
  return members_.Get(index);
}
inline ::Cmd::TeamMember* TeamData::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.TeamData.members)
  return members_.Mutable(index);
}
inline ::Cmd::TeamMember* TeamData::add_members() {
  // @@protoc_insertion_point(field_add:Cmd.TeamData.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMember >&
TeamData::members() const {
  // @@protoc_insertion_point(field_list:Cmd.TeamData.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMember >*
TeamData::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TeamData.members)
  return &members_;
}

// repeated .Cmd.TeamApply applys = 5;
inline int TeamData::applys_size() const {
  return applys_.size();
}
inline void TeamData::clear_applys() {
  applys_.Clear();
}
inline const ::Cmd::TeamApply& TeamData::applys(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TeamData.applys)
  return applys_.Get(index);
}
inline ::Cmd::TeamApply* TeamData::mutable_applys(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.TeamData.applys)
  return applys_.Mutable(index);
}
inline ::Cmd::TeamApply* TeamData::add_applys() {
  // @@protoc_insertion_point(field_add:Cmd.TeamData.applys)
  return applys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamApply >&
TeamData::applys() const {
  // @@protoc_insertion_point(field_list:Cmd.TeamData.applys)
  return applys_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamApply >*
TeamData::mutable_applys() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TeamData.applys)
  return &applys_;
}

// optional .Cmd.TeamSealData seal = 6;
inline bool TeamData::has_seal() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TeamData::set_has_seal() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TeamData::clear_has_seal() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TeamData::clear_seal() {
  if (seal_ != NULL) seal_->::Cmd::TeamSealData::Clear();
  clear_has_seal();
}
inline const ::Cmd::TeamSealData& TeamData::seal() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamData.seal)
  return seal_ != NULL ? *seal_ : *default_instance_->seal_;
}
inline ::Cmd::TeamSealData* TeamData::mutable_seal() {
  set_has_seal();
  if (seal_ == NULL) seal_ = new ::Cmd::TeamSealData;
  // @@protoc_insertion_point(field_mutable:Cmd.TeamData.seal)
  return seal_;
}
inline ::Cmd::TeamSealData* TeamData::release_seal() {
  clear_has_seal();
  ::Cmd::TeamSealData* temp = seal_;
  seal_ = NULL;
  return temp;
}
inline void TeamData::set_allocated_seal(::Cmd::TeamSealData* seal) {
  delete seal_;
  seal_ = seal;
  if (seal) {
    set_has_seal();
  } else {
    clear_has_seal();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TeamData.seal)
}

// -------------------------------------------------------------------

// TeamList

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
inline bool TeamList::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamList::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamList::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamList::clear_cmd() {
  cmd_ = 51;
  clear_has_cmd();
}
inline ::Cmd::Command TeamList::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamList.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TeamList::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamList.cmd)
}

// optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_TEAMLIST];
inline bool TeamList::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamList::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamList::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamList::clear_param() {
  param_ = 1;
  clear_has_param();
}
inline ::Cmd::TeamParam TeamList::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamList.param)
  return static_cast< ::Cmd::TeamParam >(param_);
}
inline void TeamList::set_param(::Cmd::TeamParam value) {
  assert(::Cmd::TeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamList.param)
}

// optional uint32 type = 3 [default = 0];
inline bool TeamList::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamList::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamList::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamList::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 TeamList::type() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamList.type)
  return type_;
}
inline void TeamList::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamList.type)
}

// optional uint32 page = 4 [default = 0];
inline bool TeamList::has_page() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamList::set_has_page() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamList::clear_has_page() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamList::clear_page() {
  page_ = 0u;
  clear_has_page();
}
inline ::google::protobuf::uint32 TeamList::page() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamList.page)
  return page_;
}
inline void TeamList::set_page(::google::protobuf::uint32 value) {
  set_has_page();
  page_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamList.page)
}

// optional uint32 lv = 5 [default = 0];
inline bool TeamList::has_lv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TeamList::set_has_lv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TeamList::clear_has_lv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TeamList::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 TeamList::lv() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamList.lv)
  return lv_;
}
inline void TeamList::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamList.lv)
}

// repeated .Cmd.TeamData list = 6;
inline int TeamList::list_size() const {
  return list_.size();
}
inline void TeamList::clear_list() {
  list_.Clear();
}
inline const ::Cmd::TeamData& TeamList::list(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TeamList.list)
  return list_.Get(index);
}
inline ::Cmd::TeamData* TeamList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.TeamList.list)
  return list_.Mutable(index);
}
inline ::Cmd::TeamData* TeamList::add_list() {
  // @@protoc_insertion_point(field_add:Cmd.TeamList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamData >&
TeamList::list() const {
  // @@protoc_insertion_point(field_list:Cmd.TeamList.list)
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamData >*
TeamList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TeamList.list)
  return &list_;
}

// -------------------------------------------------------------------

// TeamDataUpdate

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
inline bool TeamDataUpdate::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamDataUpdate::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamDataUpdate::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamDataUpdate::clear_cmd() {
  cmd_ = 51;
  clear_has_cmd();
}
inline ::Cmd::Command TeamDataUpdate::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamDataUpdate.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TeamDataUpdate::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamDataUpdate.cmd)
}

// optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_DATAUPDATE];
inline bool TeamDataUpdate::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamDataUpdate::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamDataUpdate::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamDataUpdate::clear_param() {
  param_ = 2;
  clear_has_param();
}
inline ::Cmd::TeamParam TeamDataUpdate::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamDataUpdate.param)
  return static_cast< ::Cmd::TeamParam >(param_);
}
inline void TeamDataUpdate::set_param(::Cmd::TeamParam value) {
  assert(::Cmd::TeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamDataUpdate.param)
}

// optional string name = 3;
inline bool TeamDataUpdate::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamDataUpdate::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamDataUpdate::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamDataUpdate::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& TeamDataUpdate::name() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamDataUpdate.name)
  return *name_;
}
inline void TeamDataUpdate::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.TeamDataUpdate.name)
}
inline void TeamDataUpdate::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.TeamDataUpdate.name)
}
inline void TeamDataUpdate::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.TeamDataUpdate.name)
}
inline ::std::string* TeamDataUpdate::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.TeamDataUpdate.name)
  return name_;
}
inline ::std::string* TeamDataUpdate::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TeamDataUpdate::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TeamDataUpdate.name)
}

// repeated .Cmd.TeamSummaryItem datas = 4;
inline int TeamDataUpdate::datas_size() const {
  return datas_.size();
}
inline void TeamDataUpdate::clear_datas() {
  datas_.Clear();
}
inline const ::Cmd::TeamSummaryItem& TeamDataUpdate::datas(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TeamDataUpdate.datas)
  return datas_.Get(index);
}
inline ::Cmd::TeamSummaryItem* TeamDataUpdate::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.TeamDataUpdate.datas)
  return datas_.Mutable(index);
}
inline ::Cmd::TeamSummaryItem* TeamDataUpdate::add_datas() {
  // @@protoc_insertion_point(field_add:Cmd.TeamDataUpdate.datas)
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamSummaryItem >&
TeamDataUpdate::datas() const {
  // @@protoc_insertion_point(field_list:Cmd.TeamDataUpdate.datas)
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamSummaryItem >*
TeamDataUpdate::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TeamDataUpdate.datas)
  return &datas_;
}

// -------------------------------------------------------------------

// TeamMemberUpdate

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
inline bool TeamMemberUpdate::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamMemberUpdate::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamMemberUpdate::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamMemberUpdate::clear_cmd() {
  cmd_ = 51;
  clear_has_cmd();
}
inline ::Cmd::Command TeamMemberUpdate::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMemberUpdate.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TeamMemberUpdate::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamMemberUpdate.cmd)
}

// optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_MEMBERUPDATE];
inline bool TeamMemberUpdate::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamMemberUpdate::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamMemberUpdate::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamMemberUpdate::clear_param() {
  param_ = 3;
  clear_has_param();
}
inline ::Cmd::TeamParam TeamMemberUpdate::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMemberUpdate.param)
  return static_cast< ::Cmd::TeamParam >(param_);
}
inline void TeamMemberUpdate::set_param(::Cmd::TeamParam value) {
  assert(::Cmd::TeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamMemberUpdate.param)
}

// repeated .Cmd.TeamMember updates = 3;
inline int TeamMemberUpdate::updates_size() const {
  return updates_.size();
}
inline void TeamMemberUpdate::clear_updates() {
  updates_.Clear();
}
inline const ::Cmd::TeamMember& TeamMemberUpdate::updates(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMemberUpdate.updates)
  return updates_.Get(index);
}
inline ::Cmd::TeamMember* TeamMemberUpdate::mutable_updates(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.TeamMemberUpdate.updates)
  return updates_.Mutable(index);
}
inline ::Cmd::TeamMember* TeamMemberUpdate::add_updates() {
  // @@protoc_insertion_point(field_add:Cmd.TeamMemberUpdate.updates)
  return updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMember >&
TeamMemberUpdate::updates() const {
  // @@protoc_insertion_point(field_list:Cmd.TeamMemberUpdate.updates)
  return updates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamMember >*
TeamMemberUpdate::mutable_updates() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TeamMemberUpdate.updates)
  return &updates_;
}

// repeated uint64 deletes = 4;
inline int TeamMemberUpdate::deletes_size() const {
  return deletes_.size();
}
inline void TeamMemberUpdate::clear_deletes() {
  deletes_.Clear();
}
inline ::google::protobuf::uint64 TeamMemberUpdate::deletes(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMemberUpdate.deletes)
  return deletes_.Get(index);
}
inline void TeamMemberUpdate::set_deletes(int index, ::google::protobuf::uint64 value) {
  deletes_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.TeamMemberUpdate.deletes)
}
inline void TeamMemberUpdate::add_deletes(::google::protobuf::uint64 value) {
  deletes_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.TeamMemberUpdate.deletes)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TeamMemberUpdate::deletes() const {
  // @@protoc_insertion_point(field_list:Cmd.TeamMemberUpdate.deletes)
  return deletes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TeamMemberUpdate::mutable_deletes() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TeamMemberUpdate.deletes)
  return &deletes_;
}

// -------------------------------------------------------------------

// TeamApplyUpdate

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
inline bool TeamApplyUpdate::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamApplyUpdate::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamApplyUpdate::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamApplyUpdate::clear_cmd() {
  cmd_ = 51;
  clear_has_cmd();
}
inline ::Cmd::Command TeamApplyUpdate::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamApplyUpdate.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TeamApplyUpdate::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamApplyUpdate.cmd)
}

// optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_APPLYUPDATE];
inline bool TeamApplyUpdate::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamApplyUpdate::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamApplyUpdate::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamApplyUpdate::clear_param() {
  param_ = 4;
  clear_has_param();
}
inline ::Cmd::TeamParam TeamApplyUpdate::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamApplyUpdate.param)
  return static_cast< ::Cmd::TeamParam >(param_);
}
inline void TeamApplyUpdate::set_param(::Cmd::TeamParam value) {
  assert(::Cmd::TeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamApplyUpdate.param)
}

// repeated .Cmd.TeamApply updates = 3;
inline int TeamApplyUpdate::updates_size() const {
  return updates_.size();
}
inline void TeamApplyUpdate::clear_updates() {
  updates_.Clear();
}
inline const ::Cmd::TeamApply& TeamApplyUpdate::updates(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TeamApplyUpdate.updates)
  return updates_.Get(index);
}
inline ::Cmd::TeamApply* TeamApplyUpdate::mutable_updates(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.TeamApplyUpdate.updates)
  return updates_.Mutable(index);
}
inline ::Cmd::TeamApply* TeamApplyUpdate::add_updates() {
  // @@protoc_insertion_point(field_add:Cmd.TeamApplyUpdate.updates)
  return updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamApply >&
TeamApplyUpdate::updates() const {
  // @@protoc_insertion_point(field_list:Cmd.TeamApplyUpdate.updates)
  return updates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamApply >*
TeamApplyUpdate::mutable_updates() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TeamApplyUpdate.updates)
  return &updates_;
}

// repeated uint64 deletes = 4;
inline int TeamApplyUpdate::deletes_size() const {
  return deletes_.size();
}
inline void TeamApplyUpdate::clear_deletes() {
  deletes_.Clear();
}
inline ::google::protobuf::uint64 TeamApplyUpdate::deletes(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TeamApplyUpdate.deletes)
  return deletes_.Get(index);
}
inline void TeamApplyUpdate::set_deletes(int index, ::google::protobuf::uint64 value) {
  deletes_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.TeamApplyUpdate.deletes)
}
inline void TeamApplyUpdate::add_deletes(::google::protobuf::uint64 value) {
  deletes_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.TeamApplyUpdate.deletes)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TeamApplyUpdate::deletes() const {
  // @@protoc_insertion_point(field_list:Cmd.TeamApplyUpdate.deletes)
  return deletes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TeamApplyUpdate::mutable_deletes() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TeamApplyUpdate.deletes)
  return &deletes_;
}

// -------------------------------------------------------------------

// CreateTeam

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
inline bool CreateTeam::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateTeam::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateTeam::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateTeam::clear_cmd() {
  cmd_ = 51;
  clear_has_cmd();
}
inline ::Cmd::Command CreateTeam::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.CreateTeam.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void CreateTeam::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CreateTeam.cmd)
}

// optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_CREATETEAM];
inline bool CreateTeam::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateTeam::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateTeam::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateTeam::clear_param() {
  param_ = 5;
  clear_has_param();
}
inline ::Cmd::TeamParam CreateTeam::param() const {
  // @@protoc_insertion_point(field_get:Cmd.CreateTeam.param)
  return static_cast< ::Cmd::TeamParam >(param_);
}
inline void CreateTeam::set_param(::Cmd::TeamParam value) {
  assert(::Cmd::TeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CreateTeam.param)
}

// optional uint32 minlv = 3 [default = 0];
inline bool CreateTeam::has_minlv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateTeam::set_has_minlv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateTeam::clear_has_minlv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateTeam::clear_minlv() {
  minlv_ = 0u;
  clear_has_minlv();
}
inline ::google::protobuf::uint32 CreateTeam::minlv() const {
  // @@protoc_insertion_point(field_get:Cmd.CreateTeam.minlv)
  return minlv_;
}
inline void CreateTeam::set_minlv(::google::protobuf::uint32 value) {
  set_has_minlv();
  minlv_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CreateTeam.minlv)
}

// optional uint32 maxlv = 4 [default = 0];
inline bool CreateTeam::has_maxlv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateTeam::set_has_maxlv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateTeam::clear_has_maxlv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateTeam::clear_maxlv() {
  maxlv_ = 0u;
  clear_has_maxlv();
}
inline ::google::protobuf::uint32 CreateTeam::maxlv() const {
  // @@protoc_insertion_point(field_get:Cmd.CreateTeam.maxlv)
  return maxlv_;
}
inline void CreateTeam::set_maxlv(::google::protobuf::uint32 value) {
  set_has_maxlv();
  maxlv_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CreateTeam.maxlv)
}

// optional uint32 type = 5 [default = 0];
inline bool CreateTeam::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreateTeam::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreateTeam::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreateTeam::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CreateTeam::type() const {
  // @@protoc_insertion_point(field_get:Cmd.CreateTeam.type)
  return type_;
}
inline void CreateTeam::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CreateTeam.type)
}

// optional .Cmd.EAutoType autoaccept = 6 [default = EAUTOTYPE_CLOSE];
inline bool CreateTeam::has_autoaccept() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CreateTeam::set_has_autoaccept() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CreateTeam::clear_has_autoaccept() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CreateTeam::clear_autoaccept() {
  autoaccept_ = 0;
  clear_has_autoaccept();
}
inline ::Cmd::EAutoType CreateTeam::autoaccept() const {
  // @@protoc_insertion_point(field_get:Cmd.CreateTeam.autoaccept)
  return static_cast< ::Cmd::EAutoType >(autoaccept_);
}
inline void CreateTeam::set_autoaccept(::Cmd::EAutoType value) {
  assert(::Cmd::EAutoType_IsValid(value));
  set_has_autoaccept();
  autoaccept_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CreateTeam.autoaccept)
}

// optional string name = 7;
inline bool CreateTeam::has_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CreateTeam::set_has_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CreateTeam::clear_has_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CreateTeam::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CreateTeam::name() const {
  // @@protoc_insertion_point(field_get:Cmd.CreateTeam.name)
  return *name_;
}
inline void CreateTeam::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.CreateTeam.name)
}
inline void CreateTeam::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.CreateTeam.name)
}
inline void CreateTeam::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.CreateTeam.name)
}
inline ::std::string* CreateTeam::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.CreateTeam.name)
  return name_;
}
inline ::std::string* CreateTeam::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreateTeam::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.CreateTeam.name)
}

// -------------------------------------------------------------------

// InviteMember

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
inline bool InviteMember::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InviteMember::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InviteMember::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InviteMember::clear_cmd() {
  cmd_ = 51;
  clear_has_cmd();
}
inline ::Cmd::Command InviteMember::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.InviteMember.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void InviteMember::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.InviteMember.cmd)
}

// optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_INVITEMEMBER];
inline bool InviteMember::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InviteMember::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InviteMember::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InviteMember::clear_param() {
  param_ = 6;
  clear_has_param();
}
inline ::Cmd::TeamParam InviteMember::param() const {
  // @@protoc_insertion_point(field_get:Cmd.InviteMember.param)
  return static_cast< ::Cmd::TeamParam >(param_);
}
inline void InviteMember::set_param(::Cmd::TeamParam value) {
  assert(::Cmd::TeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.InviteMember.param)
}

// optional uint64 userguid = 3 [default = 0];
inline bool InviteMember::has_userguid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InviteMember::set_has_userguid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InviteMember::clear_has_userguid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InviteMember::clear_userguid() {
  userguid_ = GOOGLE_ULONGLONG(0);
  clear_has_userguid();
}
inline ::google::protobuf::uint64 InviteMember::userguid() const {
  // @@protoc_insertion_point(field_get:Cmd.InviteMember.userguid)
  return userguid_;
}
inline void InviteMember::set_userguid(::google::protobuf::uint64 value) {
  set_has_userguid();
  userguid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.InviteMember.userguid)
}

// optional uint32 catid = 4 [default = 0];
inline bool InviteMember::has_catid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InviteMember::set_has_catid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InviteMember::clear_has_catid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InviteMember::clear_catid() {
  catid_ = 0u;
  clear_has_catid();
}
inline ::google::protobuf::uint32 InviteMember::catid() const {
  // @@protoc_insertion_point(field_get:Cmd.InviteMember.catid)
  return catid_;
}
inline void InviteMember::set_catid(::google::protobuf::uint32 value) {
  set_has_catid();
  catid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.InviteMember.catid)
}

// optional string teamname = 5;
inline bool InviteMember::has_teamname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InviteMember::set_has_teamname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InviteMember::clear_has_teamname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InviteMember::clear_teamname() {
  if (teamname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    teamname_->clear();
  }
  clear_has_teamname();
}
inline const ::std::string& InviteMember::teamname() const {
  // @@protoc_insertion_point(field_get:Cmd.InviteMember.teamname)
  return *teamname_;
}
inline void InviteMember::set_teamname(const ::std::string& value) {
  set_has_teamname();
  if (teamname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    teamname_ = new ::std::string;
  }
  teamname_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.InviteMember.teamname)
}
inline void InviteMember::set_teamname(const char* value) {
  set_has_teamname();
  if (teamname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    teamname_ = new ::std::string;
  }
  teamname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.InviteMember.teamname)
}
inline void InviteMember::set_teamname(const char* value, size_t size) {
  set_has_teamname();
  if (teamname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    teamname_ = new ::std::string;
  }
  teamname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.InviteMember.teamname)
}
inline ::std::string* InviteMember::mutable_teamname() {
  set_has_teamname();
  if (teamname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    teamname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.InviteMember.teamname)
  return teamname_;
}
inline ::std::string* InviteMember::release_teamname() {
  clear_has_teamname();
  if (teamname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = teamname_;
    teamname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void InviteMember::set_allocated_teamname(::std::string* teamname) {
  if (teamname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete teamname_;
  }
  if (teamname) {
    set_has_teamname();
    teamname_ = teamname;
  } else {
    clear_has_teamname();
    teamname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.InviteMember.teamname)
}

// optional string username = 6;
inline bool InviteMember::has_username() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void InviteMember::set_has_username() {
  _has_bits_[0] |= 0x00000020u;
}
inline void InviteMember::clear_has_username() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void InviteMember::clear_username() {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& InviteMember::username() const {
  // @@protoc_insertion_point(field_get:Cmd.InviteMember.username)
  return *username_;
}
inline void InviteMember::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.InviteMember.username)
}
inline void InviteMember::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.InviteMember.username)
}
inline void InviteMember::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.InviteMember.username)
}
inline ::std::string* InviteMember::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.InviteMember.username)
  return username_;
}
inline ::std::string* InviteMember::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void InviteMember::set_allocated_username(::std::string* username) {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.InviteMember.username)
}

// -------------------------------------------------------------------

// ProcessTeamInvite

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
inline bool ProcessTeamInvite::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProcessTeamInvite::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProcessTeamInvite::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProcessTeamInvite::clear_cmd() {
  cmd_ = 51;
  clear_has_cmd();
}
inline ::Cmd::Command ProcessTeamInvite::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ProcessTeamInvite.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ProcessTeamInvite::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ProcessTeamInvite.cmd)
}

// optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_PROCESSINVITE];
inline bool ProcessTeamInvite::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProcessTeamInvite::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProcessTeamInvite::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProcessTeamInvite::clear_param() {
  param_ = 7;
  clear_has_param();
}
inline ::Cmd::TeamParam ProcessTeamInvite::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ProcessTeamInvite.param)
  return static_cast< ::Cmd::TeamParam >(param_);
}
inline void ProcessTeamInvite::set_param(::Cmd::TeamParam value) {
  assert(::Cmd::TeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ProcessTeamInvite.param)
}

// optional .Cmd.ETeamInviteType type = 3 [default = ETEAMINVITETYPE_MIN];
inline bool ProcessTeamInvite::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProcessTeamInvite::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProcessTeamInvite::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProcessTeamInvite::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::ETeamInviteType ProcessTeamInvite::type() const {
  // @@protoc_insertion_point(field_get:Cmd.ProcessTeamInvite.type)
  return static_cast< ::Cmd::ETeamInviteType >(type_);
}
inline void ProcessTeamInvite::set_type(::Cmd::ETeamInviteType value) {
  assert(::Cmd::ETeamInviteType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ProcessTeamInvite.type)
}

// optional uint64 userguid = 4 [default = 0];
inline bool ProcessTeamInvite::has_userguid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProcessTeamInvite::set_has_userguid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProcessTeamInvite::clear_has_userguid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProcessTeamInvite::clear_userguid() {
  userguid_ = GOOGLE_ULONGLONG(0);
  clear_has_userguid();
}
inline ::google::protobuf::uint64 ProcessTeamInvite::userguid() const {
  // @@protoc_insertion_point(field_get:Cmd.ProcessTeamInvite.userguid)
  return userguid_;
}
inline void ProcessTeamInvite::set_userguid(::google::protobuf::uint64 value) {
  set_has_userguid();
  userguid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ProcessTeamInvite.userguid)
}

// -------------------------------------------------------------------

// TeamMemberApply

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
inline bool TeamMemberApply::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamMemberApply::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamMemberApply::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamMemberApply::clear_cmd() {
  cmd_ = 51;
  clear_has_cmd();
}
inline ::Cmd::Command TeamMemberApply::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMemberApply.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TeamMemberApply::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamMemberApply.cmd)
}

// optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_MEMBERAPPLY];
inline bool TeamMemberApply::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamMemberApply::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamMemberApply::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamMemberApply::clear_param() {
  param_ = 8;
  clear_has_param();
}
inline ::Cmd::TeamParam TeamMemberApply::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMemberApply.param)
  return static_cast< ::Cmd::TeamParam >(param_);
}
inline void TeamMemberApply::set_param(::Cmd::TeamParam value) {
  assert(::Cmd::TeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamMemberApply.param)
}

// optional uint64 guid = 3 [default = 0];
inline bool TeamMemberApply::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamMemberApply::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamMemberApply::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamMemberApply::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 TeamMemberApply::guid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamMemberApply.guid)
  return guid_;
}
inline void TeamMemberApply::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamMemberApply.guid)
}

// -------------------------------------------------------------------

// ProcessTeamApply

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
inline bool ProcessTeamApply::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProcessTeamApply::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProcessTeamApply::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProcessTeamApply::clear_cmd() {
  cmd_ = 51;
  clear_has_cmd();
}
inline ::Cmd::Command ProcessTeamApply::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ProcessTeamApply.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ProcessTeamApply::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ProcessTeamApply.cmd)
}

// optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_PROCESSAPPLY];
inline bool ProcessTeamApply::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProcessTeamApply::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProcessTeamApply::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProcessTeamApply::clear_param() {
  param_ = 9;
  clear_has_param();
}
inline ::Cmd::TeamParam ProcessTeamApply::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ProcessTeamApply.param)
  return static_cast< ::Cmd::TeamParam >(param_);
}
inline void ProcessTeamApply::set_param(::Cmd::TeamParam value) {
  assert(::Cmd::TeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ProcessTeamApply.param)
}

// optional .Cmd.ETeamApplyType type = 3 [default = ETEAMAPPLYTYPE_MIN];
inline bool ProcessTeamApply::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProcessTeamApply::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProcessTeamApply::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProcessTeamApply::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::ETeamApplyType ProcessTeamApply::type() const {
  // @@protoc_insertion_point(field_get:Cmd.ProcessTeamApply.type)
  return static_cast< ::Cmd::ETeamApplyType >(type_);
}
inline void ProcessTeamApply::set_type(::Cmd::ETeamApplyType value) {
  assert(::Cmd::ETeamApplyType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ProcessTeamApply.type)
}

// optional uint64 userguid = 4 [default = 0];
inline bool ProcessTeamApply::has_userguid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProcessTeamApply::set_has_userguid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProcessTeamApply::clear_has_userguid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProcessTeamApply::clear_userguid() {
  userguid_ = GOOGLE_ULONGLONG(0);
  clear_has_userguid();
}
inline ::google::protobuf::uint64 ProcessTeamApply::userguid() const {
  // @@protoc_insertion_point(field_get:Cmd.ProcessTeamApply.userguid)
  return userguid_;
}
inline void ProcessTeamApply::set_userguid(::google::protobuf::uint64 value) {
  set_has_userguid();
  userguid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ProcessTeamApply.userguid)
}

// -------------------------------------------------------------------

// KickMember

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
inline bool KickMember::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KickMember::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KickMember::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KickMember::clear_cmd() {
  cmd_ = 51;
  clear_has_cmd();
}
inline ::Cmd::Command KickMember::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.KickMember.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void KickMember::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.KickMember.cmd)
}

// optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_KICKMEMBER];
inline bool KickMember::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KickMember::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KickMember::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KickMember::clear_param() {
  param_ = 10;
  clear_has_param();
}
inline ::Cmd::TeamParam KickMember::param() const {
  // @@protoc_insertion_point(field_get:Cmd.KickMember.param)
  return static_cast< ::Cmd::TeamParam >(param_);
}
inline void KickMember::set_param(::Cmd::TeamParam value) {
  assert(::Cmd::TeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.KickMember.param)
}

// optional uint64 userid = 3 [default = 0];
inline bool KickMember::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void KickMember::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void KickMember::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void KickMember::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
  clear_has_userid();
}
inline ::google::protobuf::uint64 KickMember::userid() const {
  // @@protoc_insertion_point(field_get:Cmd.KickMember.userid)
  return userid_;
}
inline void KickMember::set_userid(::google::protobuf::uint64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.KickMember.userid)
}

// optional uint64 catid = 4 [default = 0];
inline bool KickMember::has_catid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void KickMember::set_has_catid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void KickMember::clear_has_catid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void KickMember::clear_catid() {
  catid_ = GOOGLE_ULONGLONG(0);
  clear_has_catid();
}
inline ::google::protobuf::uint64 KickMember::catid() const {
  // @@protoc_insertion_point(field_get:Cmd.KickMember.catid)
  return catid_;
}
inline void KickMember::set_catid(::google::protobuf::uint64 value) {
  set_has_catid();
  catid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.KickMember.catid)
}

// -------------------------------------------------------------------

// ExchangeLeader

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
inline bool ExchangeLeader::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExchangeLeader::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExchangeLeader::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExchangeLeader::clear_cmd() {
  cmd_ = 51;
  clear_has_cmd();
}
inline ::Cmd::Command ExchangeLeader::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ExchangeLeader.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ExchangeLeader::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ExchangeLeader.cmd)
}

// optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_EXCHANGELEADER];
inline bool ExchangeLeader::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExchangeLeader::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExchangeLeader::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExchangeLeader::clear_param() {
  param_ = 11;
  clear_has_param();
}
inline ::Cmd::TeamParam ExchangeLeader::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ExchangeLeader.param)
  return static_cast< ::Cmd::TeamParam >(param_);
}
inline void ExchangeLeader::set_param(::Cmd::TeamParam value) {
  assert(::Cmd::TeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ExchangeLeader.param)
}

// optional uint64 userid = 4 [default = 0];
inline bool ExchangeLeader::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExchangeLeader::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExchangeLeader::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExchangeLeader::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
  clear_has_userid();
}
inline ::google::protobuf::uint64 ExchangeLeader::userid() const {
  // @@protoc_insertion_point(field_get:Cmd.ExchangeLeader.userid)
  return userid_;
}
inline void ExchangeLeader::set_userid(::google::protobuf::uint64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ExchangeLeader.userid)
}

// -------------------------------------------------------------------

// ExitTeam

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
inline bool ExitTeam::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExitTeam::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExitTeam::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExitTeam::clear_cmd() {
  cmd_ = 51;
  clear_has_cmd();
}
inline ::Cmd::Command ExitTeam::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ExitTeam.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ExitTeam::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ExitTeam.cmd)
}

// optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_EXITTEAM];
inline bool ExitTeam::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExitTeam::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExitTeam::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExitTeam::clear_param() {
  param_ = 12;
  clear_has_param();
}
inline ::Cmd::TeamParam ExitTeam::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ExitTeam.param)
  return static_cast< ::Cmd::TeamParam >(param_);
}
inline void ExitTeam::set_param(::Cmd::TeamParam value) {
  assert(::Cmd::TeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ExitTeam.param)
}

// optional uint64 teamid = 3 [default = 0];
inline bool ExitTeam::has_teamid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExitTeam::set_has_teamid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExitTeam::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExitTeam::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 ExitTeam::teamid() const {
  // @@protoc_insertion_point(field_get:Cmd.ExitTeam.teamid)
  return teamid_;
}
inline void ExitTeam::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ExitTeam.teamid)
}

// -------------------------------------------------------------------

// EnterTeam

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
inline bool EnterTeam::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterTeam::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterTeam::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterTeam::clear_cmd() {
  cmd_ = 51;
  clear_has_cmd();
}
inline ::Cmd::Command EnterTeam::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterTeam.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void EnterTeam::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterTeam.cmd)
}

// optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_ENTERTEAM];
inline bool EnterTeam::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterTeam::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterTeam::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterTeam::clear_param() {
  param_ = 13;
  clear_has_param();
}
inline ::Cmd::TeamParam EnterTeam::param() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterTeam.param)
  return static_cast< ::Cmd::TeamParam >(param_);
}
inline void EnterTeam::set_param(::Cmd::TeamParam value) {
  assert(::Cmd::TeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.EnterTeam.param)
}

// optional .Cmd.TeamData data = 3;
inline bool EnterTeam::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnterTeam::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnterTeam::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnterTeam::clear_data() {
  if (data_ != NULL) data_->::Cmd::TeamData::Clear();
  clear_has_data();
}
inline const ::Cmd::TeamData& EnterTeam::data() const {
  // @@protoc_insertion_point(field_get:Cmd.EnterTeam.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Cmd::TeamData* EnterTeam::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Cmd::TeamData;
  // @@protoc_insertion_point(field_mutable:Cmd.EnterTeam.data)
  return data_;
}
inline ::Cmd::TeamData* EnterTeam::release_data() {
  clear_has_data();
  ::Cmd::TeamData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void EnterTeam::set_allocated_data(::Cmd::TeamData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.EnterTeam.data)
}

// -------------------------------------------------------------------

// MemberPosUpdate

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
inline bool MemberPosUpdate::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MemberPosUpdate::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MemberPosUpdate::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MemberPosUpdate::clear_cmd() {
  cmd_ = 51;
  clear_has_cmd();
}
inline ::Cmd::Command MemberPosUpdate::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.MemberPosUpdate.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void MemberPosUpdate::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MemberPosUpdate.cmd)
}

// optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_MEMBERPOSUPDATE];
inline bool MemberPosUpdate::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MemberPosUpdate::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MemberPosUpdate::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MemberPosUpdate::clear_param() {
  param_ = 14;
  clear_has_param();
}
inline ::Cmd::TeamParam MemberPosUpdate::param() const {
  // @@protoc_insertion_point(field_get:Cmd.MemberPosUpdate.param)
  return static_cast< ::Cmd::TeamParam >(param_);
}
inline void MemberPosUpdate::set_param(::Cmd::TeamParam value) {
  assert(::Cmd::TeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MemberPosUpdate.param)
}

// optional uint64 id = 3 [default = 0];
inline bool MemberPosUpdate::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MemberPosUpdate::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MemberPosUpdate::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MemberPosUpdate::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 MemberPosUpdate::id() const {
  // @@protoc_insertion_point(field_get:Cmd.MemberPosUpdate.id)
  return id_;
}
inline void MemberPosUpdate::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MemberPosUpdate.id)
}

// optional .Cmd.ScenePos pos = 4;
inline bool MemberPosUpdate::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MemberPosUpdate::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MemberPosUpdate::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MemberPosUpdate::clear_pos() {
  if (pos_ != NULL) pos_->::Cmd::ScenePos::Clear();
  clear_has_pos();
}
inline const ::Cmd::ScenePos& MemberPosUpdate::pos() const {
  // @@protoc_insertion_point(field_get:Cmd.MemberPosUpdate.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Cmd::ScenePos* MemberPosUpdate::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Cmd::ScenePos;
  // @@protoc_insertion_point(field_mutable:Cmd.MemberPosUpdate.pos)
  return pos_;
}
inline ::Cmd::ScenePos* MemberPosUpdate::release_pos() {
  clear_has_pos();
  ::Cmd::ScenePos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void MemberPosUpdate::set_allocated_pos(::Cmd::ScenePos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.MemberPosUpdate.pos)
}

// -------------------------------------------------------------------

// MemberDataUpdate

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
inline bool MemberDataUpdate::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MemberDataUpdate::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MemberDataUpdate::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MemberDataUpdate::clear_cmd() {
  cmd_ = 51;
  clear_has_cmd();
}
inline ::Cmd::Command MemberDataUpdate::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.MemberDataUpdate.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void MemberDataUpdate::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MemberDataUpdate.cmd)
}

// optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_MEMBERDATAUPDATE];
inline bool MemberDataUpdate::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MemberDataUpdate::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MemberDataUpdate::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MemberDataUpdate::clear_param() {
  param_ = 15;
  clear_has_param();
}
inline ::Cmd::TeamParam MemberDataUpdate::param() const {
  // @@protoc_insertion_point(field_get:Cmd.MemberDataUpdate.param)
  return static_cast< ::Cmd::TeamParam >(param_);
}
inline void MemberDataUpdate::set_param(::Cmd::TeamParam value) {
  assert(::Cmd::TeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MemberDataUpdate.param)
}

// optional uint64 id = 3 [default = 0];
inline bool MemberDataUpdate::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MemberDataUpdate::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MemberDataUpdate::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MemberDataUpdate::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 MemberDataUpdate::id() const {
  // @@protoc_insertion_point(field_get:Cmd.MemberDataUpdate.id)
  return id_;
}
inline void MemberDataUpdate::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MemberDataUpdate.id)
}

// repeated .Cmd.MemberData members = 4;
inline int MemberDataUpdate::members_size() const {
  return members_.size();
}
inline void MemberDataUpdate::clear_members() {
  members_.Clear();
}
inline const ::Cmd::MemberData& MemberDataUpdate::members(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.MemberDataUpdate.members)
  return members_.Get(index);
}
inline ::Cmd::MemberData* MemberDataUpdate::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.MemberDataUpdate.members)
  return members_.Mutable(index);
}
inline ::Cmd::MemberData* MemberDataUpdate::add_members() {
  // @@protoc_insertion_point(field_add:Cmd.MemberDataUpdate.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::MemberData >&
MemberDataUpdate::members() const {
  // @@protoc_insertion_point(field_list:Cmd.MemberDataUpdate.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::MemberData >*
MemberDataUpdate::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.MemberDataUpdate.members)
  return &members_;
}

// -------------------------------------------------------------------

// LockTarget

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
inline bool LockTarget::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LockTarget::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LockTarget::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LockTarget::clear_cmd() {
  cmd_ = 51;
  clear_has_cmd();
}
inline ::Cmd::Command LockTarget::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.LockTarget.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void LockTarget::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LockTarget.cmd)
}

// optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_LOCKTARGET];
inline bool LockTarget::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LockTarget::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LockTarget::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LockTarget::clear_param() {
  param_ = 16;
  clear_has_param();
}
inline ::Cmd::TeamParam LockTarget::param() const {
  // @@protoc_insertion_point(field_get:Cmd.LockTarget.param)
  return static_cast< ::Cmd::TeamParam >(param_);
}
inline void LockTarget::set_param(::Cmd::TeamParam value) {
  assert(::Cmd::TeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LockTarget.param)
}

// optional uint64 targetid = 3 [default = 0];
inline bool LockTarget::has_targetid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LockTarget::set_has_targetid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LockTarget::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LockTarget::clear_targetid() {
  targetid_ = GOOGLE_ULONGLONG(0);
  clear_has_targetid();
}
inline ::google::protobuf::uint64 LockTarget::targetid() const {
  // @@protoc_insertion_point(field_get:Cmd.LockTarget.targetid)
  return targetid_;
}
inline void LockTarget::set_targetid(::google::protobuf::uint64 value) {
  set_has_targetid();
  targetid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LockTarget.targetid)
}

// -------------------------------------------------------------------

// TeamSummon

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
inline bool TeamSummon::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamSummon::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamSummon::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamSummon::clear_cmd() {
  cmd_ = 51;
  clear_has_cmd();
}
inline ::Cmd::Command TeamSummon::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamSummon.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TeamSummon::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamSummon.cmd)
}

// optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_SUMMON];
inline bool TeamSummon::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamSummon::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamSummon::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamSummon::clear_param() {
  param_ = 17;
  clear_has_param();
}
inline ::Cmd::TeamParam TeamSummon::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamSummon.param)
  return static_cast< ::Cmd::TeamParam >(param_);
}
inline void TeamSummon::set_param(::Cmd::TeamParam value) {
  assert(::Cmd::TeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamSummon.param)
}

// optional uint32 raidid = 3 [default = 0];
inline bool TeamSummon::has_raidid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamSummon::set_has_raidid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamSummon::clear_has_raidid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamSummon::clear_raidid() {
  raidid_ = 0u;
  clear_has_raidid();
}
inline ::google::protobuf::uint32 TeamSummon::raidid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamSummon.raidid)
  return raidid_;
}
inline void TeamSummon::set_raidid(::google::protobuf::uint32 value) {
  set_has_raidid();
  raidid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamSummon.raidid)
}

// -------------------------------------------------------------------

// ClearApplyList

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
inline bool ClearApplyList::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClearApplyList::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClearApplyList::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClearApplyList::clear_cmd() {
  cmd_ = 51;
  clear_has_cmd();
}
inline ::Cmd::Command ClearApplyList::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ClearApplyList.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ClearApplyList::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ClearApplyList.cmd)
}

// optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_CLEARAPPLYLIST];
inline bool ClearApplyList::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClearApplyList::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClearApplyList::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClearApplyList::clear_param() {
  param_ = 18;
  clear_has_param();
}
inline ::Cmd::TeamParam ClearApplyList::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ClearApplyList.param)
  return static_cast< ::Cmd::TeamParam >(param_);
}
inline void ClearApplyList::set_param(::Cmd::TeamParam value) {
  assert(::Cmd::TeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ClearApplyList.param)
}

// -------------------------------------------------------------------

// QuickEnter

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
inline bool QuickEnter::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuickEnter::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuickEnter::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuickEnter::clear_cmd() {
  cmd_ = 51;
  clear_has_cmd();
}
inline ::Cmd::Command QuickEnter::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QuickEnter.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QuickEnter::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QuickEnter.cmd)
}

// optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_QUICKENTER];
inline bool QuickEnter::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuickEnter::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuickEnter::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuickEnter::clear_param() {
  param_ = 19;
  clear_has_param();
}
inline ::Cmd::TeamParam QuickEnter::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QuickEnter.param)
  return static_cast< ::Cmd::TeamParam >(param_);
}
inline void QuickEnter::set_param(::Cmd::TeamParam value) {
  assert(::Cmd::TeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QuickEnter.param)
}

// optional uint32 type = 3 [default = 0];
inline bool QuickEnter::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QuickEnter::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QuickEnter::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QuickEnter::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 QuickEnter::type() const {
  // @@protoc_insertion_point(field_get:Cmd.QuickEnter.type)
  return type_;
}
inline void QuickEnter::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QuickEnter.type)
}

// optional uint32 time = 4 [default = 0];
inline bool QuickEnter::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QuickEnter::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QuickEnter::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QuickEnter::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 QuickEnter::time() const {
  // @@protoc_insertion_point(field_get:Cmd.QuickEnter.time)
  return time_;
}
inline void QuickEnter::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QuickEnter.time)
}

// optional bool set = 5 [default = false];
inline bool QuickEnter::has_set() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QuickEnter::set_has_set() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QuickEnter::clear_has_set() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QuickEnter::clear_set() {
  set_ = false;
  clear_has_set();
}
inline bool QuickEnter::set() const {
  // @@protoc_insertion_point(field_get:Cmd.QuickEnter.set)
  return set_;
}
inline void QuickEnter::set_set(bool value) {
  set_has_set();
  set_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QuickEnter.set)
}

// -------------------------------------------------------------------

// SetTeamOption

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
inline bool SetTeamOption::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetTeamOption::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetTeamOption::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetTeamOption::clear_cmd() {
  cmd_ = 51;
  clear_has_cmd();
}
inline ::Cmd::Command SetTeamOption::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SetTeamOption.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SetTeamOption::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SetTeamOption.cmd)
}

// optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_SETOPTION];
inline bool SetTeamOption::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetTeamOption::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetTeamOption::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetTeamOption::clear_param() {
  param_ = 20;
  clear_has_param();
}
inline ::Cmd::TeamParam SetTeamOption::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SetTeamOption.param)
  return static_cast< ::Cmd::TeamParam >(param_);
}
inline void SetTeamOption::set_param(::Cmd::TeamParam value) {
  assert(::Cmd::TeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SetTeamOption.param)
}

// optional string name = 3;
inline bool SetTeamOption::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetTeamOption::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetTeamOption::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetTeamOption::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& SetTeamOption::name() const {
  // @@protoc_insertion_point(field_get:Cmd.SetTeamOption.name)
  return *name_;
}
inline void SetTeamOption::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.SetTeamOption.name)
}
inline void SetTeamOption::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.SetTeamOption.name)
}
inline void SetTeamOption::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.SetTeamOption.name)
}
inline ::std::string* SetTeamOption::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.SetTeamOption.name)
  return name_;
}
inline ::std::string* SetTeamOption::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SetTeamOption::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.SetTeamOption.name)
}

// repeated .Cmd.TeamSummaryItem items = 4;
inline int SetTeamOption::items_size() const {
  return items_.size();
}
inline void SetTeamOption::clear_items() {
  items_.Clear();
}
inline const ::Cmd::TeamSummaryItem& SetTeamOption::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SetTeamOption.items)
  return items_.Get(index);
}
inline ::Cmd::TeamSummaryItem* SetTeamOption::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.SetTeamOption.items)
  return items_.Mutable(index);
}
inline ::Cmd::TeamSummaryItem* SetTeamOption::add_items() {
  // @@protoc_insertion_point(field_add:Cmd.SetTeamOption.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamSummaryItem >&
SetTeamOption::items() const {
  // @@protoc_insertion_point(field_list:Cmd.SetTeamOption.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamSummaryItem >*
SetTeamOption::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SetTeamOption.items)
  return &items_;
}

// -------------------------------------------------------------------

// QueryUserTeamInfoTeamCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
inline bool QueryUserTeamInfoTeamCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryUserTeamInfoTeamCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryUserTeamInfoTeamCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryUserTeamInfoTeamCmd::clear_cmd() {
  cmd_ = 51;
  clear_has_cmd();
}
inline ::Cmd::Command QueryUserTeamInfoTeamCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryUserTeamInfoTeamCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryUserTeamInfoTeamCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryUserTeamInfoTeamCmd.cmd)
}

// optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_QUERYUSERTEAMINFO];
inline bool QueryUserTeamInfoTeamCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryUserTeamInfoTeamCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryUserTeamInfoTeamCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryUserTeamInfoTeamCmd::clear_param() {
  param_ = 21;
  clear_has_param();
}
inline ::Cmd::TeamParam QueryUserTeamInfoTeamCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryUserTeamInfoTeamCmd.param)
  return static_cast< ::Cmd::TeamParam >(param_);
}
inline void QueryUserTeamInfoTeamCmd::set_param(::Cmd::TeamParam value) {
  assert(::Cmd::TeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryUserTeamInfoTeamCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool QueryUserTeamInfoTeamCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryUserTeamInfoTeamCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryUserTeamInfoTeamCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryUserTeamInfoTeamCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 QueryUserTeamInfoTeamCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryUserTeamInfoTeamCmd.charid)
  return charid_;
}
inline void QueryUserTeamInfoTeamCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryUserTeamInfoTeamCmd.charid)
}

// optional uint64 teamid = 4 [default = 0];
inline bool QueryUserTeamInfoTeamCmd::has_teamid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryUserTeamInfoTeamCmd::set_has_teamid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryUserTeamInfoTeamCmd::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryUserTeamInfoTeamCmd::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 QueryUserTeamInfoTeamCmd::teamid() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryUserTeamInfoTeamCmd.teamid)
  return teamid_;
}
inline void QueryUserTeamInfoTeamCmd::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryUserTeamInfoTeamCmd.teamid)
}

// -------------------------------------------------------------------

// SetMemberOptionTeamCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
inline bool SetMemberOptionTeamCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetMemberOptionTeamCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetMemberOptionTeamCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetMemberOptionTeamCmd::clear_cmd() {
  cmd_ = 51;
  clear_has_cmd();
}
inline ::Cmd::Command SetMemberOptionTeamCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SetMemberOptionTeamCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SetMemberOptionTeamCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SetMemberOptionTeamCmd.cmd)
}

// optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_SETMEMBEROPTION];
inline bool SetMemberOptionTeamCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetMemberOptionTeamCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetMemberOptionTeamCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetMemberOptionTeamCmd::clear_param() {
  param_ = 22;
  clear_has_param();
}
inline ::Cmd::TeamParam SetMemberOptionTeamCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SetMemberOptionTeamCmd.param)
  return static_cast< ::Cmd::TeamParam >(param_);
}
inline void SetMemberOptionTeamCmd::set_param(::Cmd::TeamParam value) {
  assert(::Cmd::TeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SetMemberOptionTeamCmd.param)
}

// optional bool autofollow = 3 [default = false];
inline bool SetMemberOptionTeamCmd::has_autofollow() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetMemberOptionTeamCmd::set_has_autofollow() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetMemberOptionTeamCmd::clear_has_autofollow() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetMemberOptionTeamCmd::clear_autofollow() {
  autofollow_ = false;
  clear_has_autofollow();
}
inline bool SetMemberOptionTeamCmd::autofollow() const {
  // @@protoc_insertion_point(field_get:Cmd.SetMemberOptionTeamCmd.autofollow)
  return autofollow_;
}
inline void SetMemberOptionTeamCmd::set_autofollow(bool value) {
  set_has_autofollow();
  autofollow_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SetMemberOptionTeamCmd.autofollow)
}

// -------------------------------------------------------------------

// MemberWantedQuest

// optional uint64 charid = 1 [default = 0];
inline bool MemberWantedQuest::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MemberWantedQuest::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MemberWantedQuest::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MemberWantedQuest::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 MemberWantedQuest::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.MemberWantedQuest.charid)
  return charid_;
}
inline void MemberWantedQuest::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MemberWantedQuest.charid)
}

// optional uint32 questid = 2 [default = 0];
inline bool MemberWantedQuest::has_questid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MemberWantedQuest::set_has_questid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MemberWantedQuest::clear_has_questid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MemberWantedQuest::clear_questid() {
  questid_ = 0u;
  clear_has_questid();
}
inline ::google::protobuf::uint32 MemberWantedQuest::questid() const {
  // @@protoc_insertion_point(field_get:Cmd.MemberWantedQuest.questid)
  return questid_;
}
inline void MemberWantedQuest::set_questid(::google::protobuf::uint32 value) {
  set_has_questid();
  questid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MemberWantedQuest.questid)
}

// optional .Cmd.EQuestAction action = 3 [default = EQUESTACTION_MIN];
inline bool MemberWantedQuest::has_action() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MemberWantedQuest::set_has_action() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MemberWantedQuest::clear_has_action() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MemberWantedQuest::clear_action() {
  action_ = 0;
  clear_has_action();
}
inline ::Cmd::EQuestAction MemberWantedQuest::action() const {
  // @@protoc_insertion_point(field_get:Cmd.MemberWantedQuest.action)
  return static_cast< ::Cmd::EQuestAction >(action_);
}
inline void MemberWantedQuest::set_action(::Cmd::EQuestAction value) {
  assert(::Cmd::EQuestAction_IsValid(value));
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MemberWantedQuest.action)
}

// optional uint32 step = 4 [default = 0];
inline bool MemberWantedQuest::has_step() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MemberWantedQuest::set_has_step() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MemberWantedQuest::clear_has_step() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MemberWantedQuest::clear_step() {
  step_ = 0u;
  clear_has_step();
}
inline ::google::protobuf::uint32 MemberWantedQuest::step() const {
  // @@protoc_insertion_point(field_get:Cmd.MemberWantedQuest.step)
  return step_;
}
inline void MemberWantedQuest::set_step(::google::protobuf::uint32 value) {
  set_has_step();
  step_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MemberWantedQuest.step)
}

// optional .Cmd.QuestStep questdata = 5;
inline bool MemberWantedQuest::has_questdata() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MemberWantedQuest::set_has_questdata() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MemberWantedQuest::clear_has_questdata() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MemberWantedQuest::clear_questdata() {
  if (questdata_ != NULL) questdata_->::Cmd::QuestStep::Clear();
  clear_has_questdata();
}
inline const ::Cmd::QuestStep& MemberWantedQuest::questdata() const {
  // @@protoc_insertion_point(field_get:Cmd.MemberWantedQuest.questdata)
  return questdata_ != NULL ? *questdata_ : *default_instance_->questdata_;
}
inline ::Cmd::QuestStep* MemberWantedQuest::mutable_questdata() {
  set_has_questdata();
  if (questdata_ == NULL) questdata_ = new ::Cmd::QuestStep;
  // @@protoc_insertion_point(field_mutable:Cmd.MemberWantedQuest.questdata)
  return questdata_;
}
inline ::Cmd::QuestStep* MemberWantedQuest::release_questdata() {
  clear_has_questdata();
  ::Cmd::QuestStep* temp = questdata_;
  questdata_ = NULL;
  return temp;
}
inline void MemberWantedQuest::set_allocated_questdata(::Cmd::QuestStep* questdata) {
  delete questdata_;
  questdata_ = questdata;
  if (questdata) {
    set_has_questdata();
  } else {
    clear_has_questdata();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.MemberWantedQuest.questdata)
}

// -------------------------------------------------------------------

// QuestWantedQuestTeamCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
inline bool QuestWantedQuestTeamCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestWantedQuestTeamCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestWantedQuestTeamCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestWantedQuestTeamCmd::clear_cmd() {
  cmd_ = 51;
  clear_has_cmd();
}
inline ::Cmd::Command QuestWantedQuestTeamCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QuestWantedQuestTeamCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QuestWantedQuestTeamCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QuestWantedQuestTeamCmd.cmd)
}

// optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_QUERYWANTEDQUEST];
inline bool QuestWantedQuestTeamCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuestWantedQuestTeamCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuestWantedQuestTeamCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuestWantedQuestTeamCmd::clear_param() {
  param_ = 23;
  clear_has_param();
}
inline ::Cmd::TeamParam QuestWantedQuestTeamCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QuestWantedQuestTeamCmd.param)
  return static_cast< ::Cmd::TeamParam >(param_);
}
inline void QuestWantedQuestTeamCmd::set_param(::Cmd::TeamParam value) {
  assert(::Cmd::TeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QuestWantedQuestTeamCmd.param)
}

// repeated .Cmd.MemberWantedQuest quests = 3;
inline int QuestWantedQuestTeamCmd::quests_size() const {
  return quests_.size();
}
inline void QuestWantedQuestTeamCmd::clear_quests() {
  quests_.Clear();
}
inline const ::Cmd::MemberWantedQuest& QuestWantedQuestTeamCmd::quests(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QuestWantedQuestTeamCmd.quests)
  return quests_.Get(index);
}
inline ::Cmd::MemberWantedQuest* QuestWantedQuestTeamCmd::mutable_quests(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.QuestWantedQuestTeamCmd.quests)
  return quests_.Mutable(index);
}
inline ::Cmd::MemberWantedQuest* QuestWantedQuestTeamCmd::add_quests() {
  // @@protoc_insertion_point(field_add:Cmd.QuestWantedQuestTeamCmd.quests)
  return quests_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::MemberWantedQuest >&
QuestWantedQuestTeamCmd::quests() const {
  // @@protoc_insertion_point(field_list:Cmd.QuestWantedQuestTeamCmd.quests)
  return quests_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::MemberWantedQuest >*
QuestWantedQuestTeamCmd::mutable_quests() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QuestWantedQuestTeamCmd.quests)
  return &quests_;
}

// -------------------------------------------------------------------

// UpdateWantedQuestTeamCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
inline bool UpdateWantedQuestTeamCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateWantedQuestTeamCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateWantedQuestTeamCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateWantedQuestTeamCmd::clear_cmd() {
  cmd_ = 51;
  clear_has_cmd();
}
inline ::Cmd::Command UpdateWantedQuestTeamCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateWantedQuestTeamCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UpdateWantedQuestTeamCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateWantedQuestTeamCmd.cmd)
}

// optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_UPDATEWANTEDQUEST];
inline bool UpdateWantedQuestTeamCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateWantedQuestTeamCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateWantedQuestTeamCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateWantedQuestTeamCmd::clear_param() {
  param_ = 24;
  clear_has_param();
}
inline ::Cmd::TeamParam UpdateWantedQuestTeamCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateWantedQuestTeamCmd.param)
  return static_cast< ::Cmd::TeamParam >(param_);
}
inline void UpdateWantedQuestTeamCmd::set_param(::Cmd::TeamParam value) {
  assert(::Cmd::TeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateWantedQuestTeamCmd.param)
}

// optional .Cmd.MemberWantedQuest quest = 3;
inline bool UpdateWantedQuestTeamCmd::has_quest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateWantedQuestTeamCmd::set_has_quest() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateWantedQuestTeamCmd::clear_has_quest() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateWantedQuestTeamCmd::clear_quest() {
  if (quest_ != NULL) quest_->::Cmd::MemberWantedQuest::Clear();
  clear_has_quest();
}
inline const ::Cmd::MemberWantedQuest& UpdateWantedQuestTeamCmd::quest() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateWantedQuestTeamCmd.quest)
  return quest_ != NULL ? *quest_ : *default_instance_->quest_;
}
inline ::Cmd::MemberWantedQuest* UpdateWantedQuestTeamCmd::mutable_quest() {
  set_has_quest();
  if (quest_ == NULL) quest_ = new ::Cmd::MemberWantedQuest;
  // @@protoc_insertion_point(field_mutable:Cmd.UpdateWantedQuestTeamCmd.quest)
  return quest_;
}
inline ::Cmd::MemberWantedQuest* UpdateWantedQuestTeamCmd::release_quest() {
  clear_has_quest();
  ::Cmd::MemberWantedQuest* temp = quest_;
  quest_ = NULL;
  return temp;
}
inline void UpdateWantedQuestTeamCmd::set_allocated_quest(::Cmd::MemberWantedQuest* quest) {
  delete quest_;
  quest_ = quest;
  if (quest) {
    set_has_quest();
  } else {
    clear_has_quest();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.UpdateWantedQuestTeamCmd.quest)
}

// -------------------------------------------------------------------

// AcceptHelpWantedTeamCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
inline bool AcceptHelpWantedTeamCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AcceptHelpWantedTeamCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AcceptHelpWantedTeamCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AcceptHelpWantedTeamCmd::clear_cmd() {
  cmd_ = 51;
  clear_has_cmd();
}
inline ::Cmd::Command AcceptHelpWantedTeamCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.AcceptHelpWantedTeamCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void AcceptHelpWantedTeamCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AcceptHelpWantedTeamCmd.cmd)
}

// optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_ACCEPTHELPWANTED];
inline bool AcceptHelpWantedTeamCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AcceptHelpWantedTeamCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AcceptHelpWantedTeamCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AcceptHelpWantedTeamCmd::clear_param() {
  param_ = 25;
  clear_has_param();
}
inline ::Cmd::TeamParam AcceptHelpWantedTeamCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.AcceptHelpWantedTeamCmd.param)
  return static_cast< ::Cmd::TeamParam >(param_);
}
inline void AcceptHelpWantedTeamCmd::set_param(::Cmd::TeamParam value) {
  assert(::Cmd::TeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AcceptHelpWantedTeamCmd.param)
}

// optional uint32 questid = 3 [default = 0];
inline bool AcceptHelpWantedTeamCmd::has_questid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AcceptHelpWantedTeamCmd::set_has_questid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AcceptHelpWantedTeamCmd::clear_has_questid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AcceptHelpWantedTeamCmd::clear_questid() {
  questid_ = 0u;
  clear_has_questid();
}
inline ::google::protobuf::uint32 AcceptHelpWantedTeamCmd::questid() const {
  // @@protoc_insertion_point(field_get:Cmd.AcceptHelpWantedTeamCmd.questid)
  return questid_;
}
inline void AcceptHelpWantedTeamCmd::set_questid(::google::protobuf::uint32 value) {
  set_has_questid();
  questid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AcceptHelpWantedTeamCmd.questid)
}

// optional bool isabandon = 4 [default = false];
inline bool AcceptHelpWantedTeamCmd::has_isabandon() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AcceptHelpWantedTeamCmd::set_has_isabandon() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AcceptHelpWantedTeamCmd::clear_has_isabandon() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AcceptHelpWantedTeamCmd::clear_isabandon() {
  isabandon_ = false;
  clear_has_isabandon();
}
inline bool AcceptHelpWantedTeamCmd::isabandon() const {
  // @@protoc_insertion_point(field_get:Cmd.AcceptHelpWantedTeamCmd.isabandon)
  return isabandon_;
}
inline void AcceptHelpWantedTeamCmd::set_isabandon(bool value) {
  set_has_isabandon();
  isabandon_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AcceptHelpWantedTeamCmd.isabandon)
}

// -------------------------------------------------------------------

// UpdateHelpWantedTeamCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
inline bool UpdateHelpWantedTeamCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateHelpWantedTeamCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateHelpWantedTeamCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateHelpWantedTeamCmd::clear_cmd() {
  cmd_ = 51;
  clear_has_cmd();
}
inline ::Cmd::Command UpdateHelpWantedTeamCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateHelpWantedTeamCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UpdateHelpWantedTeamCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateHelpWantedTeamCmd.cmd)
}

// optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_UPDATEHELPWANTED];
inline bool UpdateHelpWantedTeamCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateHelpWantedTeamCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateHelpWantedTeamCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateHelpWantedTeamCmd::clear_param() {
  param_ = 26;
  clear_has_param();
}
inline ::Cmd::TeamParam UpdateHelpWantedTeamCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateHelpWantedTeamCmd.param)
  return static_cast< ::Cmd::TeamParam >(param_);
}
inline void UpdateHelpWantedTeamCmd::set_param(::Cmd::TeamParam value) {
  assert(::Cmd::TeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateHelpWantedTeamCmd.param)
}

// repeated uint32 addlist = 3;
inline int UpdateHelpWantedTeamCmd::addlist_size() const {
  return addlist_.size();
}
inline void UpdateHelpWantedTeamCmd::clear_addlist() {
  addlist_.Clear();
}
inline ::google::protobuf::uint32 UpdateHelpWantedTeamCmd::addlist(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateHelpWantedTeamCmd.addlist)
  return addlist_.Get(index);
}
inline void UpdateHelpWantedTeamCmd::set_addlist(int index, ::google::protobuf::uint32 value) {
  addlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.UpdateHelpWantedTeamCmd.addlist)
}
inline void UpdateHelpWantedTeamCmd::add_addlist(::google::protobuf::uint32 value) {
  addlist_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.UpdateHelpWantedTeamCmd.addlist)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UpdateHelpWantedTeamCmd::addlist() const {
  // @@protoc_insertion_point(field_list:Cmd.UpdateHelpWantedTeamCmd.addlist)
  return addlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UpdateHelpWantedTeamCmd::mutable_addlist() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UpdateHelpWantedTeamCmd.addlist)
  return &addlist_;
}

// repeated uint32 dellist = 4;
inline int UpdateHelpWantedTeamCmd::dellist_size() const {
  return dellist_.size();
}
inline void UpdateHelpWantedTeamCmd::clear_dellist() {
  dellist_.Clear();
}
inline ::google::protobuf::uint32 UpdateHelpWantedTeamCmd::dellist(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateHelpWantedTeamCmd.dellist)
  return dellist_.Get(index);
}
inline void UpdateHelpWantedTeamCmd::set_dellist(int index, ::google::protobuf::uint32 value) {
  dellist_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.UpdateHelpWantedTeamCmd.dellist)
}
inline void UpdateHelpWantedTeamCmd::add_dellist(::google::protobuf::uint32 value) {
  dellist_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.UpdateHelpWantedTeamCmd.dellist)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UpdateHelpWantedTeamCmd::dellist() const {
  // @@protoc_insertion_point(field_list:Cmd.UpdateHelpWantedTeamCmd.dellist)
  return dellist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UpdateHelpWantedTeamCmd::mutable_dellist() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UpdateHelpWantedTeamCmd.dellist)
  return &dellist_;
}

// -------------------------------------------------------------------

// QueryHelpWantedTeamCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
inline bool QueryHelpWantedTeamCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryHelpWantedTeamCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryHelpWantedTeamCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryHelpWantedTeamCmd::clear_cmd() {
  cmd_ = 51;
  clear_has_cmd();
}
inline ::Cmd::Command QueryHelpWantedTeamCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryHelpWantedTeamCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryHelpWantedTeamCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryHelpWantedTeamCmd.cmd)
}

// optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_QUERYHELPWANTED];
inline bool QueryHelpWantedTeamCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryHelpWantedTeamCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryHelpWantedTeamCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryHelpWantedTeamCmd::clear_param() {
  param_ = 27;
  clear_has_param();
}
inline ::Cmd::TeamParam QueryHelpWantedTeamCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryHelpWantedTeamCmd.param)
  return static_cast< ::Cmd::TeamParam >(param_);
}
inline void QueryHelpWantedTeamCmd::set_param(::Cmd::TeamParam value) {
  assert(::Cmd::TeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryHelpWantedTeamCmd.param)
}

// repeated uint32 questids = 3;
inline int QueryHelpWantedTeamCmd::questids_size() const {
  return questids_.size();
}
inline void QueryHelpWantedTeamCmd::clear_questids() {
  questids_.Clear();
}
inline ::google::protobuf::uint32 QueryHelpWantedTeamCmd::questids(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QueryHelpWantedTeamCmd.questids)
  return questids_.Get(index);
}
inline void QueryHelpWantedTeamCmd::set_questids(int index, ::google::protobuf::uint32 value) {
  questids_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.QueryHelpWantedTeamCmd.questids)
}
inline void QueryHelpWantedTeamCmd::add_questids(::google::protobuf::uint32 value) {
  questids_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.QueryHelpWantedTeamCmd.questids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
QueryHelpWantedTeamCmd::questids() const {
  // @@protoc_insertion_point(field_list:Cmd.QueryHelpWantedTeamCmd.questids)
  return questids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
QueryHelpWantedTeamCmd::mutable_questids() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QueryHelpWantedTeamCmd.questids)
  return &questids_;
}

// -------------------------------------------------------------------

// MemberCat

// optional uint64 ownerid = 1 [default = 0];
inline bool MemberCat::has_ownerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MemberCat::set_has_ownerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MemberCat::clear_has_ownerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MemberCat::clear_ownerid() {
  ownerid_ = GOOGLE_ULONGLONG(0);
  clear_has_ownerid();
}
inline ::google::protobuf::uint64 MemberCat::ownerid() const {
  // @@protoc_insertion_point(field_get:Cmd.MemberCat.ownerid)
  return ownerid_;
}
inline void MemberCat::set_ownerid(::google::protobuf::uint64 value) {
  set_has_ownerid();
  ownerid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MemberCat.ownerid)
}

// optional uint64 id = 2 [default = 0];
inline bool MemberCat::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MemberCat::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MemberCat::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MemberCat::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 MemberCat::id() const {
  // @@protoc_insertion_point(field_get:Cmd.MemberCat.id)
  return id_;
}
inline void MemberCat::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MemberCat.id)
}

// optional uint32 catid = 3 [default = 0];
inline bool MemberCat::has_catid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MemberCat::set_has_catid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MemberCat::clear_has_catid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MemberCat::clear_catid() {
  catid_ = 0u;
  clear_has_catid();
}
inline ::google::protobuf::uint32 MemberCat::catid() const {
  // @@protoc_insertion_point(field_get:Cmd.MemberCat.catid)
  return catid_;
}
inline void MemberCat::set_catid(::google::protobuf::uint32 value) {
  set_has_catid();
  catid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MemberCat.catid)
}

// optional uint32 relivetime = 4 [default = 0];
inline bool MemberCat::has_relivetime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MemberCat::set_has_relivetime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MemberCat::clear_has_relivetime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MemberCat::clear_relivetime() {
  relivetime_ = 0u;
  clear_has_relivetime();
}
inline ::google::protobuf::uint32 MemberCat::relivetime() const {
  // @@protoc_insertion_point(field_get:Cmd.MemberCat.relivetime)
  return relivetime_;
}
inline void MemberCat::set_relivetime(::google::protobuf::uint32 value) {
  set_has_relivetime();
  relivetime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MemberCat.relivetime)
}

// optional uint32 lv = 5 [default = 0];
inline bool MemberCat::has_lv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MemberCat::set_has_lv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MemberCat::clear_has_lv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MemberCat::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 MemberCat::lv() const {
  // @@protoc_insertion_point(field_get:Cmd.MemberCat.lv)
  return lv_;
}
inline void MemberCat::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MemberCat.lv)
}

// optional uint32 expiretime = 6 [default = 0];
inline bool MemberCat::has_expiretime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MemberCat::set_has_expiretime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MemberCat::clear_has_expiretime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MemberCat::clear_expiretime() {
  expiretime_ = 0u;
  clear_has_expiretime();
}
inline ::google::protobuf::uint32 MemberCat::expiretime() const {
  // @@protoc_insertion_point(field_get:Cmd.MemberCat.expiretime)
  return expiretime_;
}
inline void MemberCat::set_expiretime(::google::protobuf::uint32 value) {
  set_has_expiretime();
  expiretime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MemberCat.expiretime)
}

// optional string name = 7;
inline bool MemberCat::has_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MemberCat::set_has_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MemberCat::clear_has_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MemberCat::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& MemberCat::name() const {
  // @@protoc_insertion_point(field_get:Cmd.MemberCat.name)
  return *name_;
}
inline void MemberCat::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.MemberCat.name)
}
inline void MemberCat::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.MemberCat.name)
}
inline void MemberCat::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.MemberCat.name)
}
inline ::std::string* MemberCat::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.MemberCat.name)
  return name_;
}
inline ::std::string* MemberCat::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MemberCat::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.MemberCat.name)
}

// -------------------------------------------------------------------

// QueryMemberCatTeamCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
inline bool QueryMemberCatTeamCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryMemberCatTeamCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryMemberCatTeamCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryMemberCatTeamCmd::clear_cmd() {
  cmd_ = 51;
  clear_has_cmd();
}
inline ::Cmd::Command QueryMemberCatTeamCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryMemberCatTeamCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryMemberCatTeamCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryMemberCatTeamCmd.cmd)
}

// optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_QUERYMEMBERCAT];
inline bool QueryMemberCatTeamCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryMemberCatTeamCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryMemberCatTeamCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryMemberCatTeamCmd::clear_param() {
  param_ = 28;
  clear_has_param();
}
inline ::Cmd::TeamParam QueryMemberCatTeamCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryMemberCatTeamCmd.param)
  return static_cast< ::Cmd::TeamParam >(param_);
}
inline void QueryMemberCatTeamCmd::set_param(::Cmd::TeamParam value) {
  assert(::Cmd::TeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryMemberCatTeamCmd.param)
}

// -------------------------------------------------------------------

// MemberCatUpdateTeam

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_TEAM_PROTOCMD];
inline bool MemberCatUpdateTeam::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MemberCatUpdateTeam::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MemberCatUpdateTeam::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MemberCatUpdateTeam::clear_cmd() {
  cmd_ = 51;
  clear_has_cmd();
}
inline ::Cmd::Command MemberCatUpdateTeam::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.MemberCatUpdateTeam.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void MemberCatUpdateTeam::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MemberCatUpdateTeam.cmd)
}

// optional .Cmd.TeamParam param = 2 [default = TEAMPARAM_MEMBERCAT_UPDATE];
inline bool MemberCatUpdateTeam::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MemberCatUpdateTeam::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MemberCatUpdateTeam::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MemberCatUpdateTeam::clear_param() {
  param_ = 29;
  clear_has_param();
}
inline ::Cmd::TeamParam MemberCatUpdateTeam::param() const {
  // @@protoc_insertion_point(field_get:Cmd.MemberCatUpdateTeam.param)
  return static_cast< ::Cmd::TeamParam >(param_);
}
inline void MemberCatUpdateTeam::set_param(::Cmd::TeamParam value) {
  assert(::Cmd::TeamParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MemberCatUpdateTeam.param)
}

// repeated .Cmd.MemberCat updates = 3;
inline int MemberCatUpdateTeam::updates_size() const {
  return updates_.size();
}
inline void MemberCatUpdateTeam::clear_updates() {
  updates_.Clear();
}
inline const ::Cmd::MemberCat& MemberCatUpdateTeam::updates(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.MemberCatUpdateTeam.updates)
  return updates_.Get(index);
}
inline ::Cmd::MemberCat* MemberCatUpdateTeam::mutable_updates(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.MemberCatUpdateTeam.updates)
  return updates_.Mutable(index);
}
inline ::Cmd::MemberCat* MemberCatUpdateTeam::add_updates() {
  // @@protoc_insertion_point(field_add:Cmd.MemberCatUpdateTeam.updates)
  return updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::MemberCat >&
MemberCatUpdateTeam::updates() const {
  // @@protoc_insertion_point(field_list:Cmd.MemberCatUpdateTeam.updates)
  return updates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::MemberCat >*
MemberCatUpdateTeam::mutable_updates() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.MemberCatUpdateTeam.updates)
  return &updates_;
}

// repeated .Cmd.MemberCat dels = 4;
inline int MemberCatUpdateTeam::dels_size() const {
  return dels_.size();
}
inline void MemberCatUpdateTeam::clear_dels() {
  dels_.Clear();
}
inline const ::Cmd::MemberCat& MemberCatUpdateTeam::dels(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.MemberCatUpdateTeam.dels)
  return dels_.Get(index);
}
inline ::Cmd::MemberCat* MemberCatUpdateTeam::mutable_dels(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.MemberCatUpdateTeam.dels)
  return dels_.Mutable(index);
}
inline ::Cmd::MemberCat* MemberCatUpdateTeam::add_dels() {
  // @@protoc_insertion_point(field_add:Cmd.MemberCatUpdateTeam.dels)
  return dels_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::MemberCat >&
MemberCatUpdateTeam::dels() const {
  // @@protoc_insertion_point(field_list:Cmd.MemberCatUpdateTeam.dels)
  return dels_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::MemberCat >*
MemberCatUpdateTeam::mutable_dels() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.MemberCatUpdateTeam.dels)
  return &dels_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cmd

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Cmd::TeamParam> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::TeamParam>() {
  return ::Cmd::TeamParam_descriptor();
}
template <> struct is_proto_enum< ::Cmd::ETeamGlobal> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::ETeamGlobal>() {
  return ::Cmd::ETeamGlobal_descriptor();
}
template <> struct is_proto_enum< ::Cmd::ETeamJob> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::ETeamJob>() {
  return ::Cmd::ETeamJob_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EMemberData> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EMemberData>() {
  return ::Cmd::EMemberData_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EAutoType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EAutoType>() {
  return ::Cmd::EAutoType_descriptor();
}
template <> struct is_proto_enum< ::Cmd::ETeamData> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::ETeamData>() {
  return ::Cmd::ETeamData_descriptor();
}
template <> struct is_proto_enum< ::Cmd::ETeamInviteType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::ETeamInviteType>() {
  return ::Cmd::ETeamInviteType_descriptor();
}
template <> struct is_proto_enum< ::Cmd::ETeamApplyType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::ETeamApplyType>() {
  return ::Cmd::ETeamApplyType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SessionTeam_2eproto__INCLUDED
