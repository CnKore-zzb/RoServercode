// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FuBenCmd.proto

#ifndef PROTOBUF_FuBenCmd_2eproto__INCLUDED
#define PROTOBUF_FuBenCmd_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "xCmd.pb.h"
#include "ProtoCommon.pb.h"
#include "ChatCmd.pb.h"
// @@protoc_insertion_point(includes)

namespace Cmd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_FuBenCmd_2eproto();
void protobuf_AssignDesc_FuBenCmd_2eproto();
void protobuf_ShutdownFile_FuBenCmd_2eproto();

class TrackData;
class RaidPConfig;
class TrackFuBenUserCmd;
class FailFuBenUserCmd;
class LeaveFuBenUserCmd;
class SuccessFuBenUserCmd;
class WorldStageItem;
class StageStepItem;
class WorldStageUserCmd;
class StageNormalStepItem;
class StageHardStepItem;
class StageStepUserCmd;
class StartStageUserCmd;
class GetRewardStageUserCmd;
class StageStepStarUserCmd;
class MonsterCountUserCmd;
class FubenStepSyncCmd;
class FuBenProgressSyncCmd;
class FuBenClearInfoCmd;
class GuildGateData;
class UserGuildRaidFubenCmd;
class GuildGateOptCmd;
class GuildFireInfoFubenCmd;
class GuildFireStopFubenCmd;
class GuildFireDangerFubenCmd;
class GuildFireMetalHpFubenCmd;
class GuildFireCalmFubenCmd;
class GuildFireNewDefFubenCmd;
class GuildFireRestartFubenCmd;
class GuildFireStatusFubenCmd;
class GvgData;
class GvgDataSyncCmd;
class GvgDataUpdateCmd;
class GvgDefNameChangeFubenCmd;
class SyncMvpInfoFubenCmd;
class BossDieFubenCmd;
class UpdateUserNumFubenCmd;
class GvgTowerValue;
class GvgTowerData;
class GvgCrystalInfo;
class GvgGuildInfo;
class SuperGvgSyncFubenCmd;
class GvgTowerUpdateFubenCmd;
class GvgMetalDieFubenCmd;
class GvgCrystalUpdateFubenCmd;
class QueryGvgTowerInfoFubenCmd;
class RewardItemData;
class SuperGvgRewardData;
class SuperGvgRewardInfoFubenCmd;
class SuperGvgUserData;
class SuperGvgGuildUserData;
class SuperGvgQueryUserDataFubenCmd;
class MvpBattleTeamData;
class MvpBattleReportFubenCmd;
class TeamPwsRaidUserInfo;
class TeamPwsRaidTeamInfo;
class QueryTeamPwsUserInfoFubenCmd;
class TeamPwsReportFubenCmd;
class TeamPwsInfoSyncData;
class TeamPwsInfoSyncFubenCmd;
class UpdateTeamPwsInfoFubenCmd;
class SelectTeamPwsMagicFubenCmd;
class InviteSummonBossFubenCmd;
class ReplySummonBossFubenCmd;

enum FuBenParam {
  TRACK_FUBEN_USER_CMD = 1,
  FAIL_FUBEN_USER_CMD = 2,
  LEAVE_FUBEN_USER_CMD = 3,
  SUCCESS_FUBEN_USER_CMD = 4,
  WORLD_STAGE_USER_CMD = 5,
  SUB_STAGE_USER_CMD = 6,
  START_STAGE_USER_CMD = 7,
  GET_REWARD_STAGE_USER_CMD = 8,
  STAGE_STEP_STAR_USER_CMD = 9,
  JOIN_FUBEN_USER_CMD = 10,
  MONSTER_COUNT_USER_CMD = 11,
  FUBEN_STEP_SYNC = 12,
  FUBEN_GOAL_SYNC = 13,
  FUBEN_CLEAR_SYNC = 15,
  GUILD_RAID_USER_INFO = 16,
  GUILD_RAID_GATE_OPT = 17,
  GUILD_FIRE_INFO = 18,
  GUILD_FIRE_STOP = 19,
  GUILD_FIRE_DANGER = 20,
  GUILD_FIRE_METALHP = 21,
  GUILD_FIRE_CALM = 22,
  GUILD_FIRE_CHANGE_GUILD = 23,
  GUILD_FIRE_RESTART = 24,
  GUILD_FIRE_STATUS = 25,
  GVG_DATA_SYNC_CMD = 26,
  GVG_DATA_UPDATE_CMD = 27,
  GUILD_FIRE_CHANGE_GUILD_NAME = 28,
  MVPBATTLE_SYNC_MVPINFO = 29,
  MVPBATTLE_BOSS_DIE = 30,
  FUBEN_USERNUM_COUNT = 31,
  SUPERGVG_INFO_SYNC = 32,
  SUPERGVG_TOWERINFO_UPDATE = 33,
  SUPERGVG_METALINFO_UPDATE = 34,
  SUPERGVG_QUERY_TOWERINFO = 35,
  SUPERGVG_REWARD_INFO = 36,
  SUPERGVG_QUERY_USER_DATA = 37,
  MVPBATTLE_END_REPORT = 38,
  SUPERGVG_METAL_DIE = 39,
  INVITE_SUMMON_DEADBOSS = 40,
  REPLY_SUMMON_DEADBOSS = 41,
  QUERY_RAID_TEAMPWS_USERINFO = 42,
  TEAMPWS_END_REPORT = 43,
  TEAMPWS_SYNC_INFO = 44,
  TEAMPWS_SELECT_MAGIC = 45,
  TEAMPWS_UPDATE_MAGIC = 46,
  TEAMPWS_UPDATE_INFO = 47
};
bool FuBenParam_IsValid(int value);
const FuBenParam FuBenParam_MIN = TRACK_FUBEN_USER_CMD;
const FuBenParam FuBenParam_MAX = TEAMPWS_UPDATE_INFO;
const int FuBenParam_ARRAYSIZE = FuBenParam_MAX + 1;

const ::google::protobuf::EnumDescriptor* FuBenParam_descriptor();
inline const ::std::string& FuBenParam_Name(FuBenParam value) {
  return ::google::protobuf::internal::NameOfEnum(
    FuBenParam_descriptor(), value);
}
inline bool FuBenParam_Parse(
    const ::std::string& name, FuBenParam* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FuBenParam>(
    FuBenParam_descriptor(), name, value);
}
enum ERaidType {
  ERAIDTYPE_MIN = 0,
  ERAIDTYPE_FERRISWHEEL = 1,
  ERAIDTYPE_NORMAL = 2,
  ERAIDTYPE_EXCHANGE = 3,
  ERAIDTYPE_TOWER = 4,
  ERAIDTYPE_LABORATORY = 5,
  ERAIDTYPE_EXCHANGEGALLERY = 6,
  ERAIDTYPE_SEAL = 7,
  ERAIDTYPE_RAIDTEMP2 = 8,
  ERAIDTYPE_DOJO = 9,
  ERAIDTYPE_GUILD = 10,
  ERAIDTYPE_RAIDTEMP4 = 11,
  ERAIDTYPE_ITEMIMAGE = 12,
  ERAIDTYPE_GUILDRAID = 13,
  ERAIDTYPE_GUILDFIRE = 14,
  ERAIDTYPE_PVP_LLH = 21,
  ERAIDTYPE_PVP_SMZL = 22,
  ERAIDTYPE_PVP_HLJS = 23,
  ERAIDTYPE_DATELAND = 24,
  ERAIDTYPE_PVP_POLLY = 25,
  ERAIDTYPE_WEDDING = 26,
  ERAIDTYPE_DIVORCE_ROLLER_COASTER = 27,
  ERAIDTYPE_PVECARD = 28,
  ERAIDTYPE_MVPBATTLE = 29,
  ERAIDTYPE_SUPERGVG = 30,
  ERAIDTYPE_ALTMAN = 31,
  ERAIDTYPE_TEAMPWS = 32,
  ERAIDTYPE_MAX = 33
};
bool ERaidType_IsValid(int value);
const ERaidType ERaidType_MIN = ERAIDTYPE_MIN;
const ERaidType ERaidType_MAX = ERAIDTYPE_MAX;
const int ERaidType_ARRAYSIZE = ERaidType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ERaidType_descriptor();
inline const ::std::string& ERaidType_Name(ERaidType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ERaidType_descriptor(), value);
}
inline bool ERaidType_Parse(
    const ::std::string& name, ERaidType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ERaidType>(
    ERaidType_descriptor(), name, value);
}
enum EGuildGateState {
  EGUILDGATESTATE_MIN = 0,
  EGUILDGATESTATE_LOCK = 1,
  EGUILDGATESTATE_CLOSE = 2,
  EGUILDGATESTATE_OPEN = 3
};
bool EGuildGateState_IsValid(int value);
const EGuildGateState EGuildGateState_MIN = EGUILDGATESTATE_MIN;
const EGuildGateState EGuildGateState_MAX = EGUILDGATESTATE_OPEN;
const int EGuildGateState_ARRAYSIZE = EGuildGateState_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGuildGateState_descriptor();
inline const ::std::string& EGuildGateState_Name(EGuildGateState value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGuildGateState_descriptor(), value);
}
inline bool EGuildGateState_Parse(
    const ::std::string& name, EGuildGateState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGuildGateState>(
    EGuildGateState_descriptor(), name, value);
}
enum EGuildGateOpt {
  EGUILDGATEOPT_UNLOCK = 1,
  EGUILDGATEOPT_OPEN = 2,
  EGUILDGATEOPT_ENTER = 3
};
bool EGuildGateOpt_IsValid(int value);
const EGuildGateOpt EGuildGateOpt_MIN = EGUILDGATEOPT_UNLOCK;
const EGuildGateOpt EGuildGateOpt_MAX = EGUILDGATEOPT_ENTER;
const int EGuildGateOpt_ARRAYSIZE = EGuildGateOpt_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGuildGateOpt_descriptor();
inline const ::std::string& EGuildGateOpt_Name(EGuildGateOpt value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGuildGateOpt_descriptor(), value);
}
inline bool EGuildGateOpt_Parse(
    const ::std::string& name, EGuildGateOpt* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGuildGateOpt>(
    EGuildGateOpt_descriptor(), name, value);
}
enum EGuildFireResult {
  EGUILDFIRERESULT_DEF = 1,
  EGUILDFIRERESULT_DEFSPEC = 2,
  EGUILDFIRERESULT_ATTACK = 3
};
bool EGuildFireResult_IsValid(int value);
const EGuildFireResult EGuildFireResult_MIN = EGUILDFIRERESULT_DEF;
const EGuildFireResult EGuildFireResult_MAX = EGUILDFIRERESULT_ATTACK;
const int EGuildFireResult_ARRAYSIZE = EGuildFireResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGuildFireResult_descriptor();
inline const ::std::string& EGuildFireResult_Name(EGuildFireResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGuildFireResult_descriptor(), value);
}
inline bool EGuildFireResult_Parse(
    const ::std::string& name, EGuildFireResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGuildFireResult>(
    EGuildFireResult_descriptor(), name, value);
}
enum EGvgDataType {
  EGVGDATA_MIN = 0,
  EGVGDATA_PARTINTIME = 1,
  EGVGDATA_KILLMON = 2,
  EGVGDATA_RELIVE = 3,
  EGVGDATA_EXPEL = 4,
  EGVGDATA_DAMMETAL = 5,
  EGVGDATA_KILLMETAL = 6,
  EGVGDATA_KILLUSER = 7,
  EGVGDATA_HONOR = 8
};
bool EGvgDataType_IsValid(int value);
const EGvgDataType EGvgDataType_MIN = EGVGDATA_MIN;
const EGvgDataType EGvgDataType_MAX = EGVGDATA_HONOR;
const int EGvgDataType_ARRAYSIZE = EGvgDataType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGvgDataType_descriptor();
inline const ::std::string& EGvgDataType_Name(EGvgDataType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGvgDataType_descriptor(), value);
}
inline bool EGvgDataType_Parse(
    const ::std::string& name, EGvgDataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGvgDataType>(
    EGvgDataType_descriptor(), name, value);
}
enum EGvgTowerState {
  EGVGTOWERSTATE_INITFREE = 1,
  EGVGTOWERSTATE_OCCUPY = 2,
  EGVGTOWERSTATE_FREE = 3
};
bool EGvgTowerState_IsValid(int value);
const EGvgTowerState EGvgTowerState_MIN = EGVGTOWERSTATE_INITFREE;
const EGvgTowerState EGvgTowerState_MAX = EGVGTOWERSTATE_FREE;
const int EGvgTowerState_ARRAYSIZE = EGvgTowerState_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGvgTowerState_descriptor();
inline const ::std::string& EGvgTowerState_Name(EGvgTowerState value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGvgTowerState_descriptor(), value);
}
inline bool EGvgTowerState_Parse(
    const ::std::string& name, EGvgTowerState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGvgTowerState>(
    EGvgTowerState_descriptor(), name, value);
}
enum EGvgTowerType {
  EGVGTOWERTYPE_MIN = 0,
  EGVGTOWERTYPE_CORE = 1,
  EGVGTOWERTYPE_WEST = 2,
  EGVGTOWERTYPE_EAST = 3
};
bool EGvgTowerType_IsValid(int value);
const EGvgTowerType EGvgTowerType_MIN = EGVGTOWERTYPE_MIN;
const EGvgTowerType EGvgTowerType_MAX = EGVGTOWERTYPE_EAST;
const int EGvgTowerType_ARRAYSIZE = EGvgTowerType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGvgTowerType_descriptor();
inline const ::std::string& EGvgTowerType_Name(EGvgTowerType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGvgTowerType_descriptor(), value);
}
inline bool EGvgTowerType_Parse(
    const ::std::string& name, EGvgTowerType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGvgTowerType>(
    EGvgTowerType_descriptor(), name, value);
}
enum ETeamPwsColor {
  ETEAMPWS_RED = 1,
  ETEAMPWS_BLUE = 2
};
bool ETeamPwsColor_IsValid(int value);
const ETeamPwsColor ETeamPwsColor_MIN = ETEAMPWS_RED;
const ETeamPwsColor ETeamPwsColor_MAX = ETEAMPWS_BLUE;
const int ETeamPwsColor_ARRAYSIZE = ETeamPwsColor_MAX + 1;

const ::google::protobuf::EnumDescriptor* ETeamPwsColor_descriptor();
inline const ::std::string& ETeamPwsColor_Name(ETeamPwsColor value) {
  return ::google::protobuf::internal::NameOfEnum(
    ETeamPwsColor_descriptor(), value);
}
inline bool ETeamPwsColor_Parse(
    const ::std::string& name, ETeamPwsColor* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ETeamPwsColor>(
    ETeamPwsColor_descriptor(), name, value);
}
enum EMagicBallType {
  EMAGICBALL_MIN = 0,
  EMAGICBALL_WIND = 1,
  EMAGICBALL_EARTH = 2,
  EMAGICBALL_WATER = 3,
  EMAGICBALL_FIRE = 4
};
bool EMagicBallType_IsValid(int value);
const EMagicBallType EMagicBallType_MIN = EMAGICBALL_MIN;
const EMagicBallType EMagicBallType_MAX = EMAGICBALL_FIRE;
const int EMagicBallType_ARRAYSIZE = EMagicBallType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EMagicBallType_descriptor();
inline const ::std::string& EMagicBallType_Name(EMagicBallType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EMagicBallType_descriptor(), value);
}
inline bool EMagicBallType_Parse(
    const ::std::string& name, EMagicBallType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EMagicBallType>(
    EMagicBallType_descriptor(), name, value);
}
// ===================================================================

class TrackData : public ::google::protobuf::Message {
 public:
  TrackData();
  virtual ~TrackData();

  TrackData(const TrackData& from);

  inline TrackData& operator=(const TrackData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrackData& default_instance();

  void Swap(TrackData* other);

  // implements Message ----------------------------------------------

  TrackData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrackData& from);
  void MergeFrom(const TrackData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 star = 1;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 1;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.TrackData)
 private:
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 star_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static TrackData* default_instance_;
};
// -------------------------------------------------------------------

class RaidPConfig : public ::google::protobuf::Message {
 public:
  RaidPConfig();
  virtual ~RaidPConfig();

  RaidPConfig(const RaidPConfig& from);

  inline RaidPConfig& operator=(const RaidPConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RaidPConfig& default_instance();

  void Swap(RaidPConfig* other);

  // implements Message ----------------------------------------------

  RaidPConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RaidPConfig& from);
  void MergeFrom(const RaidPConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 RaidID = 1 [default = 0];
  inline bool has_raidid() const;
  inline void clear_raidid();
  static const int kRaidIDFieldNumber = 1;
  inline ::google::protobuf::uint32 raidid() const;
  inline void set_raidid(::google::protobuf::uint32 value);

  // optional uint32 starID = 2 [default = 0];
  inline bool has_starid() const;
  inline void clear_starid();
  static const int kStarIDFieldNumber = 2;
  inline ::google::protobuf::uint32 starid() const;
  inline void set_starid(::google::protobuf::uint32 value);

  // optional uint32 Auto = 3 [default = 0];
  inline bool has_auto_() const;
  inline void clear_auto_();
  static const int kAutoFieldNumber = 3;
  inline ::google::protobuf::uint32 auto_() const;
  inline void set_auto_(::google::protobuf::uint32 value);

  // optional uint32 WhetherTrace = 4 [default = 0];
  inline bool has_whethertrace() const;
  inline void clear_whethertrace();
  static const int kWhetherTraceFieldNumber = 4;
  inline ::google::protobuf::uint32 whethertrace() const;
  inline void set_whethertrace(::google::protobuf::uint32 value);

  // optional string DescInfo = 5;
  inline bool has_descinfo() const;
  inline void clear_descinfo();
  static const int kDescInfoFieldNumber = 5;
  inline const ::std::string& descinfo() const;
  inline void set_descinfo(const ::std::string& value);
  inline void set_descinfo(const char* value);
  inline void set_descinfo(const char* value, size_t size);
  inline ::std::string* mutable_descinfo();
  inline ::std::string* release_descinfo();
  inline void set_allocated_descinfo(::std::string* descinfo);

  // optional string Content = 6;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 6;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // optional string TraceInfo = 7;
  inline bool has_traceinfo() const;
  inline void clear_traceinfo();
  static const int kTraceInfoFieldNumber = 7;
  inline const ::std::string& traceinfo() const;
  inline void set_traceinfo(const ::std::string& value);
  inline void set_traceinfo(const char* value);
  inline void set_traceinfo(const char* value, size_t size);
  inline ::std::string* mutable_traceinfo();
  inline ::std::string* release_traceinfo();
  inline void set_allocated_traceinfo(::std::string* traceinfo);

  // optional .Cmd.ConfigParam params = 8;
  inline bool has_params() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 8;
  inline const ::Cmd::ConfigParam& params() const;
  inline ::Cmd::ConfigParam* mutable_params();
  inline ::Cmd::ConfigParam* release_params();
  inline void set_allocated_params(::Cmd::ConfigParam* params);

  // @@protoc_insertion_point(class_scope:Cmd.RaidPConfig)
 private:
  inline void set_has_raidid();
  inline void clear_has_raidid();
  inline void set_has_starid();
  inline void clear_has_starid();
  inline void set_has_auto_();
  inline void clear_has_auto_();
  inline void set_has_whethertrace();
  inline void clear_has_whethertrace();
  inline void set_has_descinfo();
  inline void clear_has_descinfo();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_traceinfo();
  inline void clear_has_traceinfo();
  inline void set_has_params();
  inline void clear_has_params();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 raidid_;
  ::google::protobuf::uint32 starid_;
  ::google::protobuf::uint32 auto__;
  ::google::protobuf::uint32 whethertrace_;
  ::std::string* descinfo_;
  ::std::string* content_;
  ::std::string* traceinfo_;
  ::Cmd::ConfigParam* params_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static RaidPConfig* default_instance_;
};
// -------------------------------------------------------------------

class TrackFuBenUserCmd : public ::google::protobuf::Message {
 public:
  TrackFuBenUserCmd();
  virtual ~TrackFuBenUserCmd();

  TrackFuBenUserCmd(const TrackFuBenUserCmd& from);

  inline TrackFuBenUserCmd& operator=(const TrackFuBenUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrackFuBenUserCmd& default_instance();

  void Swap(TrackFuBenUserCmd* other);

  // implements Message ----------------------------------------------

  TrackFuBenUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrackFuBenUserCmd& from);
  void MergeFrom(const TrackFuBenUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = TRACK_FUBEN_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // repeated .Cmd.TrackData data = 3;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::Cmd::TrackData& data(int index) const;
  inline ::Cmd::TrackData* mutable_data(int index);
  inline ::Cmd::TrackData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TrackData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TrackData >*
      mutable_data();

  // optional uint32 dmapid = 4;
  inline bool has_dmapid() const;
  inline void clear_dmapid();
  static const int kDmapidFieldNumber = 4;
  inline ::google::protobuf::uint32 dmapid() const;
  inline void set_dmapid(::google::protobuf::uint32 value);

  // optional uint32 endtime = 5;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 5;
  inline ::google::protobuf::uint32 endtime() const;
  inline void set_endtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.TrackFuBenUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_dmapid();
  inline void clear_has_dmapid();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TrackData > data_;
  ::google::protobuf::uint32 dmapid_;
  ::google::protobuf::uint32 endtime_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static TrackFuBenUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class FailFuBenUserCmd : public ::google::protobuf::Message {
 public:
  FailFuBenUserCmd();
  virtual ~FailFuBenUserCmd();

  FailFuBenUserCmd(const FailFuBenUserCmd& from);

  inline FailFuBenUserCmd& operator=(const FailFuBenUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FailFuBenUserCmd& default_instance();

  void Swap(FailFuBenUserCmd* other);

  // implements Message ----------------------------------------------

  FailFuBenUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FailFuBenUserCmd& from);
  void MergeFrom(const FailFuBenUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = FAIL_FUBEN_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // @@protoc_insertion_point(class_scope:Cmd.FailFuBenUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static FailFuBenUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class LeaveFuBenUserCmd : public ::google::protobuf::Message {
 public:
  LeaveFuBenUserCmd();
  virtual ~LeaveFuBenUserCmd();

  LeaveFuBenUserCmd(const LeaveFuBenUserCmd& from);

  inline LeaveFuBenUserCmd& operator=(const LeaveFuBenUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveFuBenUserCmd& default_instance();

  void Swap(LeaveFuBenUserCmd* other);

  // implements Message ----------------------------------------------

  LeaveFuBenUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LeaveFuBenUserCmd& from);
  void MergeFrom(const LeaveFuBenUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = LEAVE_FUBEN_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // optional uint32 mapid = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.LeaveFuBenUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static LeaveFuBenUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class SuccessFuBenUserCmd : public ::google::protobuf::Message {
 public:
  SuccessFuBenUserCmd();
  virtual ~SuccessFuBenUserCmd();

  SuccessFuBenUserCmd(const SuccessFuBenUserCmd& from);

  inline SuccessFuBenUserCmd& operator=(const SuccessFuBenUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SuccessFuBenUserCmd& default_instance();

  void Swap(SuccessFuBenUserCmd* other);

  // implements Message ----------------------------------------------

  SuccessFuBenUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SuccessFuBenUserCmd& from);
  void MergeFrom(const SuccessFuBenUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = SUCCESS_FUBEN_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // optional .Cmd.ERaidType type = 3 [default = ERAIDTYPE_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::Cmd::ERaidType type() const;
  inline void set_type(::Cmd::ERaidType value);

  // optional uint32 param1 = 4 [default = 0];
  inline bool has_param1() const;
  inline void clear_param1();
  static const int kParam1FieldNumber = 4;
  inline ::google::protobuf::uint32 param1() const;
  inline void set_param1(::google::protobuf::uint32 value);

  // optional uint32 param2 = 5 [default = 0];
  inline bool has_param2() const;
  inline void clear_param2();
  static const int kParam2FieldNumber = 5;
  inline ::google::protobuf::uint32 param2() const;
  inline void set_param2(::google::protobuf::uint32 value);

  // optional uint32 param3 = 6 [default = 0];
  inline bool has_param3() const;
  inline void clear_param3();
  static const int kParam3FieldNumber = 6;
  inline ::google::protobuf::uint32 param3() const;
  inline void set_param3(::google::protobuf::uint32 value);

  // optional uint32 param4 = 7 [default = 0];
  inline bool has_param4() const;
  inline void clear_param4();
  static const int kParam4FieldNumber = 7;
  inline ::google::protobuf::uint32 param4() const;
  inline void set_param4(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.SuccessFuBenUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_param1();
  inline void clear_has_param1();
  inline void set_has_param2();
  inline void clear_has_param2();
  inline void set_has_param3();
  inline void clear_has_param3();
  inline void set_has_param4();
  inline void clear_has_param4();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  int type_;
  ::google::protobuf::uint32 param1_;
  ::google::protobuf::uint32 param2_;
  ::google::protobuf::uint32 param3_;
  ::google::protobuf::uint32 param4_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static SuccessFuBenUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class WorldStageItem : public ::google::protobuf::Message {
 public:
  WorldStageItem();
  virtual ~WorldStageItem();

  WorldStageItem(const WorldStageItem& from);

  inline WorldStageItem& operator=(const WorldStageItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldStageItem& default_instance();

  void Swap(WorldStageItem* other);

  // implements Message ----------------------------------------------

  WorldStageItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldStageItem& from);
  void MergeFrom(const WorldStageItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 star = 2;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 2;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // repeated uint32 getList = 3;
  inline int getlist_size() const;
  inline void clear_getlist();
  static const int kGetListFieldNumber = 3;
  inline ::google::protobuf::uint32 getlist(int index) const;
  inline void set_getlist(int index, ::google::protobuf::uint32 value);
  inline void add_getlist(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      getlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_getlist();

  // @@protoc_insertion_point(class_scope:Cmd.WorldStageItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_star();
  inline void clear_has_star();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 star_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > getlist_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static WorldStageItem* default_instance_;
};
// -------------------------------------------------------------------

class StageStepItem : public ::google::protobuf::Message {
 public:
  StageStepItem();
  virtual ~StageStepItem();

  StageStepItem(const StageStepItem& from);

  inline StageStepItem& operator=(const StageStepItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StageStepItem& default_instance();

  void Swap(StageStepItem* other);

  // implements Message ----------------------------------------------

  StageStepItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StageStepItem& from);
  void MergeFrom(const StageStepItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 stageid = 1;
  inline bool has_stageid() const;
  inline void clear_stageid();
  static const int kStageidFieldNumber = 1;
  inline ::google::protobuf::uint32 stageid() const;
  inline void set_stageid(::google::protobuf::uint32 value);

  // optional uint32 stepid = 2;
  inline bool has_stepid() const;
  inline void clear_stepid();
  static const int kStepidFieldNumber = 2;
  inline ::google::protobuf::uint32 stepid() const;
  inline void set_stepid(::google::protobuf::uint32 value);

  // optional uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.StageStepItem)
 private:
  inline void set_has_stageid();
  inline void clear_has_stageid();
  inline void set_has_stepid();
  inline void clear_has_stepid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 stageid_;
  ::google::protobuf::uint32 stepid_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static StageStepItem* default_instance_;
};
// -------------------------------------------------------------------

class WorldStageUserCmd : public ::google::protobuf::Message {
 public:
  WorldStageUserCmd();
  virtual ~WorldStageUserCmd();

  WorldStageUserCmd(const WorldStageUserCmd& from);

  inline WorldStageUserCmd& operator=(const WorldStageUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldStageUserCmd& default_instance();

  void Swap(WorldStageUserCmd* other);

  // implements Message ----------------------------------------------

  WorldStageUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldStageUserCmd& from);
  void MergeFrom(const WorldStageUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = WORLD_STAGE_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // repeated .Cmd.WorldStageItem list = 3;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 3;
  inline const ::Cmd::WorldStageItem& list(int index) const;
  inline ::Cmd::WorldStageItem* mutable_list(int index);
  inline ::Cmd::WorldStageItem* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::WorldStageItem >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::WorldStageItem >*
      mutable_list();

  // repeated .Cmd.StageStepItem curinfo = 4;
  inline int curinfo_size() const;
  inline void clear_curinfo();
  static const int kCurinfoFieldNumber = 4;
  inline const ::Cmd::StageStepItem& curinfo(int index) const;
  inline ::Cmd::StageStepItem* mutable_curinfo(int index);
  inline ::Cmd::StageStepItem* add_curinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::StageStepItem >&
      curinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::StageStepItem >*
      mutable_curinfo();

  // @@protoc_insertion_point(class_scope:Cmd.WorldStageUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::WorldStageItem > list_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::StageStepItem > curinfo_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static WorldStageUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class StageNormalStepItem : public ::google::protobuf::Message {
 public:
  StageNormalStepItem();
  virtual ~StageNormalStepItem();

  StageNormalStepItem(const StageNormalStepItem& from);

  inline StageNormalStepItem& operator=(const StageNormalStepItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StageNormalStepItem& default_instance();

  void Swap(StageNormalStepItem* other);

  // implements Message ----------------------------------------------

  StageNormalStepItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StageNormalStepItem& from);
  void MergeFrom(const StageNormalStepItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 stepid = 1;
  inline bool has_stepid() const;
  inline void clear_stepid();
  static const int kStepidFieldNumber = 1;
  inline ::google::protobuf::uint32 stepid() const;
  inline void set_stepid(::google::protobuf::uint32 value);

  // optional uint32 star = 2;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 2;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.StageNormalStepItem)
 private:
  inline void set_has_stepid();
  inline void clear_has_stepid();
  inline void set_has_star();
  inline void clear_has_star();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 stepid_;
  ::google::protobuf::uint32 star_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static StageNormalStepItem* default_instance_;
};
// -------------------------------------------------------------------

class StageHardStepItem : public ::google::protobuf::Message {
 public:
  StageHardStepItem();
  virtual ~StageHardStepItem();

  StageHardStepItem(const StageHardStepItem& from);

  inline StageHardStepItem& operator=(const StageHardStepItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StageHardStepItem& default_instance();

  void Swap(StageHardStepItem* other);

  // implements Message ----------------------------------------------

  StageHardStepItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StageHardStepItem& from);
  void MergeFrom(const StageHardStepItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 stepid = 1;
  inline bool has_stepid() const;
  inline void clear_stepid();
  static const int kStepidFieldNumber = 1;
  inline ::google::protobuf::uint32 stepid() const;
  inline void set_stepid(::google::protobuf::uint32 value);

  // optional uint32 finish = 2;
  inline bool has_finish() const;
  inline void clear_finish();
  static const int kFinishFieldNumber = 2;
  inline ::google::protobuf::uint32 finish() const;
  inline void set_finish(::google::protobuf::uint32 value);

  // optional uint32 challengeTime = 3;
  inline bool has_challengetime() const;
  inline void clear_challengetime();
  static const int kChallengeTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 challengetime() const;
  inline void set_challengetime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.StageHardStepItem)
 private:
  inline void set_has_stepid();
  inline void clear_has_stepid();
  inline void set_has_finish();
  inline void clear_has_finish();
  inline void set_has_challengetime();
  inline void clear_has_challengetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 stepid_;
  ::google::protobuf::uint32 finish_;
  ::google::protobuf::uint32 challengetime_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static StageHardStepItem* default_instance_;
};
// -------------------------------------------------------------------

class StageStepUserCmd : public ::google::protobuf::Message {
 public:
  StageStepUserCmd();
  virtual ~StageStepUserCmd();

  StageStepUserCmd(const StageStepUserCmd& from);

  inline StageStepUserCmd& operator=(const StageStepUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StageStepUserCmd& default_instance();

  void Swap(StageStepUserCmd* other);

  // implements Message ----------------------------------------------

  StageStepUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StageStepUserCmd& from);
  void MergeFrom(const StageStepUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = SUB_STAGE_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // optional uint32 stageid = 3;
  inline bool has_stageid() const;
  inline void clear_stageid();
  static const int kStageidFieldNumber = 3;
  inline ::google::protobuf::uint32 stageid() const;
  inline void set_stageid(::google::protobuf::uint32 value);

  // repeated .Cmd.StageNormalStepItem normalist = 4;
  inline int normalist_size() const;
  inline void clear_normalist();
  static const int kNormalistFieldNumber = 4;
  inline const ::Cmd::StageNormalStepItem& normalist(int index) const;
  inline ::Cmd::StageNormalStepItem* mutable_normalist(int index);
  inline ::Cmd::StageNormalStepItem* add_normalist();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::StageNormalStepItem >&
      normalist() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::StageNormalStepItem >*
      mutable_normalist();

  // repeated .Cmd.StageHardStepItem hardlist = 5;
  inline int hardlist_size() const;
  inline void clear_hardlist();
  static const int kHardlistFieldNumber = 5;
  inline const ::Cmd::StageHardStepItem& hardlist(int index) const;
  inline ::Cmd::StageHardStepItem* mutable_hardlist(int index);
  inline ::Cmd::StageHardStepItem* add_hardlist();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::StageHardStepItem >&
      hardlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::StageHardStepItem >*
      mutable_hardlist();

  // @@protoc_insertion_point(class_scope:Cmd.StageStepUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_stageid();
  inline void clear_has_stageid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::StageNormalStepItem > normalist_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::StageHardStepItem > hardlist_;
  ::google::protobuf::uint32 stageid_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static StageStepUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class StartStageUserCmd : public ::google::protobuf::Message {
 public:
  StartStageUserCmd();
  virtual ~StartStageUserCmd();

  StartStageUserCmd(const StartStageUserCmd& from);

  inline StartStageUserCmd& operator=(const StartStageUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartStageUserCmd& default_instance();

  void Swap(StartStageUserCmd* other);

  // implements Message ----------------------------------------------

  StartStageUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StartStageUserCmd& from);
  void MergeFrom(const StartStageUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = START_STAGE_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // optional uint32 stageid = 3;
  inline bool has_stageid() const;
  inline void clear_stageid();
  static const int kStageidFieldNumber = 3;
  inline ::google::protobuf::uint32 stageid() const;
  inline void set_stageid(::google::protobuf::uint32 value);

  // optional uint32 stepid = 4;
  inline bool has_stepid() const;
  inline void clear_stepid();
  static const int kStepidFieldNumber = 4;
  inline ::google::protobuf::uint32 stepid() const;
  inline void set_stepid(::google::protobuf::uint32 value);

  // optional uint32 type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.StartStageUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_stageid();
  inline void clear_has_stageid();
  inline void set_has_stepid();
  inline void clear_has_stepid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 stageid_;
  ::google::protobuf::uint32 stepid_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static StartStageUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class GetRewardStageUserCmd : public ::google::protobuf::Message {
 public:
  GetRewardStageUserCmd();
  virtual ~GetRewardStageUserCmd();

  GetRewardStageUserCmd(const GetRewardStageUserCmd& from);

  inline GetRewardStageUserCmd& operator=(const GetRewardStageUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRewardStageUserCmd& default_instance();

  void Swap(GetRewardStageUserCmd* other);

  // implements Message ----------------------------------------------

  GetRewardStageUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRewardStageUserCmd& from);
  void MergeFrom(const GetRewardStageUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = GET_REWARD_STAGE_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // optional uint32 stageid = 3;
  inline bool has_stageid() const;
  inline void clear_stageid();
  static const int kStageidFieldNumber = 3;
  inline ::google::protobuf::uint32 stageid() const;
  inline void set_stageid(::google::protobuf::uint32 value);

  // optional uint32 starid = 4;
  inline bool has_starid() const;
  inline void clear_starid();
  static const int kStaridFieldNumber = 4;
  inline ::google::protobuf::uint32 starid() const;
  inline void set_starid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GetRewardStageUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_stageid();
  inline void clear_has_stageid();
  inline void set_has_starid();
  inline void clear_has_starid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 stageid_;
  ::google::protobuf::uint32 starid_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static GetRewardStageUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class StageStepStarUserCmd : public ::google::protobuf::Message {
 public:
  StageStepStarUserCmd();
  virtual ~StageStepStarUserCmd();

  StageStepStarUserCmd(const StageStepStarUserCmd& from);

  inline StageStepStarUserCmd& operator=(const StageStepStarUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StageStepStarUserCmd& default_instance();

  void Swap(StageStepStarUserCmd* other);

  // implements Message ----------------------------------------------

  StageStepStarUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StageStepStarUserCmd& from);
  void MergeFrom(const StageStepStarUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = STAGE_STEP_STAR_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // optional uint32 stageid = 3;
  inline bool has_stageid() const;
  inline void clear_stageid();
  static const int kStageidFieldNumber = 3;
  inline ::google::protobuf::uint32 stageid() const;
  inline void set_stageid(::google::protobuf::uint32 value);

  // optional uint32 stepid = 4;
  inline bool has_stepid() const;
  inline void clear_stepid();
  static const int kStepidFieldNumber = 4;
  inline ::google::protobuf::uint32 stepid() const;
  inline void set_stepid(::google::protobuf::uint32 value);

  // optional uint32 star = 5;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 5;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // optional uint32 type = 6;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.StageStepStarUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_stageid();
  inline void clear_has_stageid();
  inline void set_has_stepid();
  inline void clear_has_stepid();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 stageid_;
  ::google::protobuf::uint32 stepid_;
  ::google::protobuf::uint32 star_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static StageStepStarUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class MonsterCountUserCmd : public ::google::protobuf::Message {
 public:
  MonsterCountUserCmd();
  virtual ~MonsterCountUserCmd();

  MonsterCountUserCmd(const MonsterCountUserCmd& from);

  inline MonsterCountUserCmd& operator=(const MonsterCountUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MonsterCountUserCmd& default_instance();

  void Swap(MonsterCountUserCmd* other);

  // implements Message ----------------------------------------------

  MonsterCountUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MonsterCountUserCmd& from);
  void MergeFrom(const MonsterCountUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = MONSTER_COUNT_USER_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // optional uint32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.MonsterCountUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static MonsterCountUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class FubenStepSyncCmd : public ::google::protobuf::Message {
 public:
  FubenStepSyncCmd();
  virtual ~FubenStepSyncCmd();

  FubenStepSyncCmd(const FubenStepSyncCmd& from);

  inline FubenStepSyncCmd& operator=(const FubenStepSyncCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FubenStepSyncCmd& default_instance();

  void Swap(FubenStepSyncCmd* other);

  // implements Message ----------------------------------------------

  FubenStepSyncCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FubenStepSyncCmd& from);
  void MergeFrom(const FubenStepSyncCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = FUBEN_STEP_SYNC];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // optional uint32 id = 3 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional bool del = 4 [default = false];
  inline bool has_del() const;
  inline void clear_del();
  static const int kDelFieldNumber = 4;
  inline bool del() const;
  inline void set_del(bool value);

  // optional .Cmd.RaidPConfig config = 5;
  inline bool has_config() const;
  inline void clear_config();
  static const int kConfigFieldNumber = 5;
  inline const ::Cmd::RaidPConfig& config() const;
  inline ::Cmd::RaidPConfig* mutable_config();
  inline ::Cmd::RaidPConfig* release_config();
  inline void set_allocated_config(::Cmd::RaidPConfig* config);

  // @@protoc_insertion_point(class_scope:Cmd.FubenStepSyncCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_del();
  inline void clear_has_del();
  inline void set_has_config();
  inline void clear_has_config();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 id_;
  bool del_;
  ::Cmd::RaidPConfig* config_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static FubenStepSyncCmd* default_instance_;
};
// -------------------------------------------------------------------

class FuBenProgressSyncCmd : public ::google::protobuf::Message {
 public:
  FuBenProgressSyncCmd();
  virtual ~FuBenProgressSyncCmd();

  FuBenProgressSyncCmd(const FuBenProgressSyncCmd& from);

  inline FuBenProgressSyncCmd& operator=(const FuBenProgressSyncCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FuBenProgressSyncCmd& default_instance();

  void Swap(FuBenProgressSyncCmd* other);

  // implements Message ----------------------------------------------

  FuBenProgressSyncCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FuBenProgressSyncCmd& from);
  void MergeFrom(const FuBenProgressSyncCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = FUBEN_GOAL_SYNC];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // optional uint32 id = 3 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 progress = 4 [default = 0];
  inline bool has_progress() const;
  inline void clear_progress();
  static const int kProgressFieldNumber = 4;
  inline ::google::protobuf::uint32 progress() const;
  inline void set_progress(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.FuBenProgressSyncCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_progress();
  inline void clear_has_progress();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 progress_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static FuBenProgressSyncCmd* default_instance_;
};
// -------------------------------------------------------------------

class FuBenClearInfoCmd : public ::google::protobuf::Message {
 public:
  FuBenClearInfoCmd();
  virtual ~FuBenClearInfoCmd();

  FuBenClearInfoCmd(const FuBenClearInfoCmd& from);

  inline FuBenClearInfoCmd& operator=(const FuBenClearInfoCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FuBenClearInfoCmd& default_instance();

  void Swap(FuBenClearInfoCmd* other);

  // implements Message ----------------------------------------------

  FuBenClearInfoCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FuBenClearInfoCmd& from);
  void MergeFrom(const FuBenClearInfoCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = FUBEN_CLEAR_SYNC];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // @@protoc_insertion_point(class_scope:Cmd.FuBenClearInfoCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static FuBenClearInfoCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildGateData : public ::google::protobuf::Message {
 public:
  GuildGateData();
  virtual ~GuildGateData();

  GuildGateData(const GuildGateData& from);

  inline GuildGateData& operator=(const GuildGateData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildGateData& default_instance();

  void Swap(GuildGateData* other);

  // implements Message ----------------------------------------------

  GuildGateData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildGateData& from);
  void MergeFrom(const GuildGateData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 gatenpcid = 1;
  inline bool has_gatenpcid() const;
  inline void clear_gatenpcid();
  static const int kGatenpcidFieldNumber = 1;
  inline ::google::protobuf::uint64 gatenpcid() const;
  inline void set_gatenpcid(::google::protobuf::uint64 value);

  // optional uint32 killedbossnum = 2 [default = 0];
  inline bool has_killedbossnum() const;
  inline void clear_killedbossnum();
  static const int kKilledbossnumFieldNumber = 2;
  inline ::google::protobuf::uint32 killedbossnum() const;
  inline void set_killedbossnum(::google::protobuf::uint32 value);

  // optional uint32 groupindex = 3 [default = 0];
  inline bool has_groupindex() const;
  inline void clear_groupindex();
  static const int kGroupindexFieldNumber = 3;
  inline ::google::protobuf::uint32 groupindex() const;
  inline void set_groupindex(::google::protobuf::uint32 value);

  // optional uint32 closetime = 4 [default = 0];
  inline bool has_closetime() const;
  inline void clear_closetime();
  static const int kClosetimeFieldNumber = 4;
  inline ::google::protobuf::uint32 closetime() const;
  inline void set_closetime(::google::protobuf::uint32 value);

  // optional uint32 level = 5 [default = 0];
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional bool isspecial = 6 [default = false];
  inline bool has_isspecial() const;
  inline void clear_isspecial();
  static const int kIsspecialFieldNumber = 6;
  inline bool isspecial() const;
  inline void set_isspecial(bool value);

  // optional .Cmd.EGuildGateState state = 7 [default = EGUILDGATESTATE_LOCK];
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 7;
  inline ::Cmd::EGuildGateState state() const;
  inline void set_state(::Cmd::EGuildGateState value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildGateData)
 private:
  inline void set_has_gatenpcid();
  inline void clear_has_gatenpcid();
  inline void set_has_killedbossnum();
  inline void clear_has_killedbossnum();
  inline void set_has_groupindex();
  inline void clear_has_groupindex();
  inline void set_has_closetime();
  inline void clear_has_closetime();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_isspecial();
  inline void clear_has_isspecial();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 gatenpcid_;
  ::google::protobuf::uint32 killedbossnum_;
  ::google::protobuf::uint32 groupindex_;
  ::google::protobuf::uint32 closetime_;
  ::google::protobuf::uint32 level_;
  bool isspecial_;
  int state_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildGateData* default_instance_;
};
// -------------------------------------------------------------------

class UserGuildRaidFubenCmd : public ::google::protobuf::Message {
 public:
  UserGuildRaidFubenCmd();
  virtual ~UserGuildRaidFubenCmd();

  UserGuildRaidFubenCmd(const UserGuildRaidFubenCmd& from);

  inline UserGuildRaidFubenCmd& operator=(const UserGuildRaidFubenCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserGuildRaidFubenCmd& default_instance();

  void Swap(UserGuildRaidFubenCmd* other);

  // implements Message ----------------------------------------------

  UserGuildRaidFubenCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserGuildRaidFubenCmd& from);
  void MergeFrom(const UserGuildRaidFubenCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = GUILD_RAID_USER_INFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // repeated .Cmd.GuildGateData gatedata = 3;
  inline int gatedata_size() const;
  inline void clear_gatedata();
  static const int kGatedataFieldNumber = 3;
  inline const ::Cmd::GuildGateData& gatedata(int index) const;
  inline ::Cmd::GuildGateData* mutable_gatedata(int index);
  inline ::Cmd::GuildGateData* add_gatedata();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildGateData >&
      gatedata() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildGateData >*
      mutable_gatedata();

  // @@protoc_insertion_point(class_scope:Cmd.UserGuildRaidFubenCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GuildGateData > gatedata_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static UserGuildRaidFubenCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildGateOptCmd : public ::google::protobuf::Message {
 public:
  GuildGateOptCmd();
  virtual ~GuildGateOptCmd();

  GuildGateOptCmd(const GuildGateOptCmd& from);

  inline GuildGateOptCmd& operator=(const GuildGateOptCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildGateOptCmd& default_instance();

  void Swap(GuildGateOptCmd* other);

  // implements Message ----------------------------------------------

  GuildGateOptCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildGateOptCmd& from);
  void MergeFrom(const GuildGateOptCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = GUILD_RAID_GATE_OPT];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // optional uint64 gatenpcid = 3;
  inline bool has_gatenpcid() const;
  inline void clear_gatenpcid();
  static const int kGatenpcidFieldNumber = 3;
  inline ::google::protobuf::uint64 gatenpcid() const;
  inline void set_gatenpcid(::google::protobuf::uint64 value);

  // optional .Cmd.EGuildGateOpt opt = 4;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 4;
  inline ::Cmd::EGuildGateOpt opt() const;
  inline void set_opt(::Cmd::EGuildGateOpt value);

  // optional uint32 uplocklevel = 5 [default = 0];
  inline bool has_uplocklevel() const;
  inline void clear_uplocklevel();
  static const int kUplocklevelFieldNumber = 5;
  inline ::google::protobuf::uint32 uplocklevel() const;
  inline void set_uplocklevel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildGateOptCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_gatenpcid();
  inline void clear_has_gatenpcid();
  inline void set_has_opt();
  inline void clear_has_opt();
  inline void set_has_uplocklevel();
  inline void clear_has_uplocklevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 gatenpcid_;
  int opt_;
  ::google::protobuf::uint32 uplocklevel_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildGateOptCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildFireInfoFubenCmd : public ::google::protobuf::Message {
 public:
  GuildFireInfoFubenCmd();
  virtual ~GuildFireInfoFubenCmd();

  GuildFireInfoFubenCmd(const GuildFireInfoFubenCmd& from);

  inline GuildFireInfoFubenCmd& operator=(const GuildFireInfoFubenCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildFireInfoFubenCmd& default_instance();

  void Swap(GuildFireInfoFubenCmd* other);

  // implements Message ----------------------------------------------

  GuildFireInfoFubenCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildFireInfoFubenCmd& from);
  void MergeFrom(const GuildFireInfoFubenCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = GUILD_FIRE_INFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // optional bool fire = 3 [default = false];
  inline bool has_fire() const;
  inline void clear_fire();
  static const int kFireFieldNumber = 3;
  inline bool fire() const;
  inline void set_fire(bool value);

  // optional uint64 def_guildid = 4 [default = 0];
  inline bool has_def_guildid() const;
  inline void clear_def_guildid();
  static const int kDefGuildidFieldNumber = 4;
  inline ::google::protobuf::uint64 def_guildid() const;
  inline void set_def_guildid(::google::protobuf::uint64 value);

  // optional uint32 endfire_time = 5 [default = 0];
  inline bool has_endfire_time() const;
  inline void clear_endfire_time();
  static const int kEndfireTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 endfire_time() const;
  inline void set_endfire_time(::google::protobuf::uint32 value);

  // optional bool danger = 6 [default = false];
  inline bool has_danger() const;
  inline void clear_danger();
  static const int kDangerFieldNumber = 6;
  inline bool danger() const;
  inline void set_danger(bool value);

  // optional uint32 danger_time = 7 [default = 0];
  inline bool has_danger_time() const;
  inline void clear_danger_time();
  static const int kDangerTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 danger_time() const;
  inline void set_danger_time(::google::protobuf::uint32 value);

  // optional uint32 metal_hpper = 8 [default = 0];
  inline bool has_metal_hpper() const;
  inline void clear_metal_hpper();
  static const int kMetalHpperFieldNumber = 8;
  inline ::google::protobuf::uint32 metal_hpper() const;
  inline void set_metal_hpper(::google::protobuf::uint32 value);

  // optional bool calmdown = 9 [default = false];
  inline bool has_calmdown() const;
  inline void clear_calmdown();
  static const int kCalmdownFieldNumber = 9;
  inline bool calmdown() const;
  inline void set_calmdown(bool value);

  // optional uint32 calm_time = 10 [default = 0];
  inline bool has_calm_time() const;
  inline void clear_calm_time();
  static const int kCalmTimeFieldNumber = 10;
  inline ::google::protobuf::uint32 calm_time() const;
  inline void set_calm_time(::google::protobuf::uint32 value);

  // optional string def_guildname = 11;
  inline bool has_def_guildname() const;
  inline void clear_def_guildname();
  static const int kDefGuildnameFieldNumber = 11;
  inline const ::std::string& def_guildname() const;
  inline void set_def_guildname(const ::std::string& value);
  inline void set_def_guildname(const char* value);
  inline void set_def_guildname(const char* value, size_t size);
  inline ::std::string* mutable_def_guildname();
  inline ::std::string* release_def_guildname();
  inline void set_allocated_def_guildname(::std::string* def_guildname);

  // optional bool def_perfect = 12 [default = false];
  inline bool has_def_perfect() const;
  inline void clear_def_perfect();
  static const int kDefPerfectFieldNumber = 12;
  inline bool def_perfect() const;
  inline void set_def_perfect(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildFireInfoFubenCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_fire();
  inline void clear_has_fire();
  inline void set_has_def_guildid();
  inline void clear_has_def_guildid();
  inline void set_has_endfire_time();
  inline void clear_has_endfire_time();
  inline void set_has_danger();
  inline void clear_has_danger();
  inline void set_has_danger_time();
  inline void clear_has_danger_time();
  inline void set_has_metal_hpper();
  inline void clear_has_metal_hpper();
  inline void set_has_calmdown();
  inline void clear_has_calmdown();
  inline void set_has_calm_time();
  inline void clear_has_calm_time();
  inline void set_has_def_guildname();
  inline void clear_has_def_guildname();
  inline void set_has_def_perfect();
  inline void clear_has_def_perfect();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 def_guildid_;
  ::google::protobuf::uint32 endfire_time_;
  ::google::protobuf::uint32 danger_time_;
  bool fire_;
  bool danger_;
  bool calmdown_;
  bool def_perfect_;
  ::google::protobuf::uint32 metal_hpper_;
  ::std::string* def_guildname_;
  ::google::protobuf::uint32 calm_time_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildFireInfoFubenCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildFireStopFubenCmd : public ::google::protobuf::Message {
 public:
  GuildFireStopFubenCmd();
  virtual ~GuildFireStopFubenCmd();

  GuildFireStopFubenCmd(const GuildFireStopFubenCmd& from);

  inline GuildFireStopFubenCmd& operator=(const GuildFireStopFubenCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildFireStopFubenCmd& default_instance();

  void Swap(GuildFireStopFubenCmd* other);

  // implements Message ----------------------------------------------

  GuildFireStopFubenCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildFireStopFubenCmd& from);
  void MergeFrom(const GuildFireStopFubenCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = GUILD_FIRE_STOP];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // required .Cmd.EGuildFireResult result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::Cmd::EGuildFireResult result() const;
  inline void set_result(::Cmd::EGuildFireResult value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildFireStopFubenCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  int result_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildFireStopFubenCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildFireDangerFubenCmd : public ::google::protobuf::Message {
 public:
  GuildFireDangerFubenCmd();
  virtual ~GuildFireDangerFubenCmd();

  GuildFireDangerFubenCmd(const GuildFireDangerFubenCmd& from);

  inline GuildFireDangerFubenCmd& operator=(const GuildFireDangerFubenCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildFireDangerFubenCmd& default_instance();

  void Swap(GuildFireDangerFubenCmd* other);

  // implements Message ----------------------------------------------

  GuildFireDangerFubenCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildFireDangerFubenCmd& from);
  void MergeFrom(const GuildFireDangerFubenCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = GUILD_FIRE_DANGER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // optional bool danger = 3 [default = false];
  inline bool has_danger() const;
  inline void clear_danger();
  static const int kDangerFieldNumber = 3;
  inline bool danger() const;
  inline void set_danger(bool value);

  // optional uint32 danger_time = 4 [default = 0];
  inline bool has_danger_time() const;
  inline void clear_danger_time();
  static const int kDangerTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 danger_time() const;
  inline void set_danger_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildFireDangerFubenCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_danger();
  inline void clear_has_danger();
  inline void set_has_danger_time();
  inline void clear_has_danger_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  bool danger_;
  ::google::protobuf::uint32 danger_time_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildFireDangerFubenCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildFireMetalHpFubenCmd : public ::google::protobuf::Message {
 public:
  GuildFireMetalHpFubenCmd();
  virtual ~GuildFireMetalHpFubenCmd();

  GuildFireMetalHpFubenCmd(const GuildFireMetalHpFubenCmd& from);

  inline GuildFireMetalHpFubenCmd& operator=(const GuildFireMetalHpFubenCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildFireMetalHpFubenCmd& default_instance();

  void Swap(GuildFireMetalHpFubenCmd* other);

  // implements Message ----------------------------------------------

  GuildFireMetalHpFubenCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildFireMetalHpFubenCmd& from);
  void MergeFrom(const GuildFireMetalHpFubenCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = GUILD_FIRE_METALHP];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // optional uint32 hpper = 3 [default = 0];
  inline bool has_hpper() const;
  inline void clear_hpper();
  static const int kHpperFieldNumber = 3;
  inline ::google::protobuf::uint32 hpper() const;
  inline void set_hpper(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildFireMetalHpFubenCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_hpper();
  inline void clear_has_hpper();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 hpper_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildFireMetalHpFubenCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildFireCalmFubenCmd : public ::google::protobuf::Message {
 public:
  GuildFireCalmFubenCmd();
  virtual ~GuildFireCalmFubenCmd();

  GuildFireCalmFubenCmd(const GuildFireCalmFubenCmd& from);

  inline GuildFireCalmFubenCmd& operator=(const GuildFireCalmFubenCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildFireCalmFubenCmd& default_instance();

  void Swap(GuildFireCalmFubenCmd* other);

  // implements Message ----------------------------------------------

  GuildFireCalmFubenCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildFireCalmFubenCmd& from);
  void MergeFrom(const GuildFireCalmFubenCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = GUILD_FIRE_CALM];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // optional bool calm = 3 [default = false];
  inline bool has_calm() const;
  inline void clear_calm();
  static const int kCalmFieldNumber = 3;
  inline bool calm() const;
  inline void set_calm(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildFireCalmFubenCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_calm();
  inline void clear_has_calm();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  bool calm_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildFireCalmFubenCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildFireNewDefFubenCmd : public ::google::protobuf::Message {
 public:
  GuildFireNewDefFubenCmd();
  virtual ~GuildFireNewDefFubenCmd();

  GuildFireNewDefFubenCmd(const GuildFireNewDefFubenCmd& from);

  inline GuildFireNewDefFubenCmd& operator=(const GuildFireNewDefFubenCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildFireNewDefFubenCmd& default_instance();

  void Swap(GuildFireNewDefFubenCmd* other);

  // implements Message ----------------------------------------------

  GuildFireNewDefFubenCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildFireNewDefFubenCmd& from);
  void MergeFrom(const GuildFireNewDefFubenCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = GUILD_FIRE_CHANGE_GUILD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // optional uint64 guildid = 3 [default = 0];
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 3;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional string guildname = 4;
  inline bool has_guildname() const;
  inline void clear_guildname();
  static const int kGuildnameFieldNumber = 4;
  inline const ::std::string& guildname() const;
  inline void set_guildname(const ::std::string& value);
  inline void set_guildname(const char* value);
  inline void set_guildname(const char* value, size_t size);
  inline ::std::string* mutable_guildname();
  inline ::std::string* release_guildname();
  inline void set_allocated_guildname(::std::string* guildname);

  // @@protoc_insertion_point(class_scope:Cmd.GuildFireNewDefFubenCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_guildname();
  inline void clear_has_guildname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 guildid_;
  ::std::string* guildname_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildFireNewDefFubenCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildFireRestartFubenCmd : public ::google::protobuf::Message {
 public:
  GuildFireRestartFubenCmd();
  virtual ~GuildFireRestartFubenCmd();

  GuildFireRestartFubenCmd(const GuildFireRestartFubenCmd& from);

  inline GuildFireRestartFubenCmd& operator=(const GuildFireRestartFubenCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildFireRestartFubenCmd& default_instance();

  void Swap(GuildFireRestartFubenCmd* other);

  // implements Message ----------------------------------------------

  GuildFireRestartFubenCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildFireRestartFubenCmd& from);
  void MergeFrom(const GuildFireRestartFubenCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = GUILD_FIRE_RESTART];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildFireRestartFubenCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildFireRestartFubenCmd* default_instance_;
};
// -------------------------------------------------------------------

class GuildFireStatusFubenCmd : public ::google::protobuf::Message {
 public:
  GuildFireStatusFubenCmd();
  virtual ~GuildFireStatusFubenCmd();

  GuildFireStatusFubenCmd(const GuildFireStatusFubenCmd& from);

  inline GuildFireStatusFubenCmd& operator=(const GuildFireStatusFubenCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildFireStatusFubenCmd& default_instance();

  void Swap(GuildFireStatusFubenCmd* other);

  // implements Message ----------------------------------------------

  GuildFireStatusFubenCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildFireStatusFubenCmd& from);
  void MergeFrom(const GuildFireStatusFubenCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = GUILD_FIRE_STATUS];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // optional bool open = 3 [default = false];
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 3;
  inline bool open() const;
  inline void set_open(bool value);

  // optional uint32 starttime = 4 [default = 0];
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 4;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // required uint32 cityid = 5;
  inline bool has_cityid() const;
  inline void clear_cityid();
  static const int kCityidFieldNumber = 5;
  inline ::google::protobuf::uint32 cityid() const;
  inline void set_cityid(::google::protobuf::uint32 value);

  // optional bool cityopen = 6 [default = false];
  inline bool has_cityopen() const;
  inline void clear_cityopen();
  static const int kCityopenFieldNumber = 6;
  inline bool cityopen() const;
  inline void set_cityopen(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.GuildFireStatusFubenCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_open();
  inline void clear_has_open();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_cityid();
  inline void clear_has_cityid();
  inline void set_has_cityopen();
  inline void clear_has_cityopen();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 starttime_;
  bool open_;
  bool cityopen_;
  ::google::protobuf::uint32 cityid_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static GuildFireStatusFubenCmd* default_instance_;
};
// -------------------------------------------------------------------

class GvgData : public ::google::protobuf::Message {
 public:
  GvgData();
  virtual ~GvgData();

  GvgData(const GvgData& from);

  inline GvgData& operator=(const GvgData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GvgData& default_instance();

  void Swap(GvgData* other);

  // implements Message ----------------------------------------------

  GvgData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GvgData& from);
  void MergeFrom(const GvgData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.EGvgDataType type = 1 [default = EGVGDATA_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Cmd::EGvgDataType type() const;
  inline void set_type(::Cmd::EGvgDataType value);

  // optional uint32 value = 2 [default = 0];
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GvgData)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static GvgData* default_instance_;
};
// -------------------------------------------------------------------

class GvgDataSyncCmd : public ::google::protobuf::Message {
 public:
  GvgDataSyncCmd();
  virtual ~GvgDataSyncCmd();

  GvgDataSyncCmd(const GvgDataSyncCmd& from);

  inline GvgDataSyncCmd& operator=(const GvgDataSyncCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GvgDataSyncCmd& default_instance();

  void Swap(GvgDataSyncCmd* other);

  // implements Message ----------------------------------------------

  GvgDataSyncCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GvgDataSyncCmd& from);
  void MergeFrom(const GvgDataSyncCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = GVG_DATA_SYNC_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // repeated .Cmd.GvgData datas = 3;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 3;
  inline const ::Cmd::GvgData& datas(int index) const;
  inline ::Cmd::GvgData* mutable_datas(int index);
  inline ::Cmd::GvgData* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GvgData >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GvgData >*
      mutable_datas();

  // @@protoc_insertion_point(class_scope:Cmd.GvgDataSyncCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GvgData > datas_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static GvgDataSyncCmd* default_instance_;
};
// -------------------------------------------------------------------

class GvgDataUpdateCmd : public ::google::protobuf::Message {
 public:
  GvgDataUpdateCmd();
  virtual ~GvgDataUpdateCmd();

  GvgDataUpdateCmd(const GvgDataUpdateCmd& from);

  inline GvgDataUpdateCmd& operator=(const GvgDataUpdateCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GvgDataUpdateCmd& default_instance();

  void Swap(GvgDataUpdateCmd* other);

  // implements Message ----------------------------------------------

  GvgDataUpdateCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GvgDataUpdateCmd& from);
  void MergeFrom(const GvgDataUpdateCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = GVG_DATA_UPDATE_CMD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // optional .Cmd.GvgData data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::Cmd::GvgData& data() const;
  inline ::Cmd::GvgData* mutable_data();
  inline ::Cmd::GvgData* release_data();
  inline void set_allocated_data(::Cmd::GvgData* data);

  // @@protoc_insertion_point(class_scope:Cmd.GvgDataUpdateCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::GvgData* data_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static GvgDataUpdateCmd* default_instance_;
};
// -------------------------------------------------------------------

class GvgDefNameChangeFubenCmd : public ::google::protobuf::Message {
 public:
  GvgDefNameChangeFubenCmd();
  virtual ~GvgDefNameChangeFubenCmd();

  GvgDefNameChangeFubenCmd(const GvgDefNameChangeFubenCmd& from);

  inline GvgDefNameChangeFubenCmd& operator=(const GvgDefNameChangeFubenCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GvgDefNameChangeFubenCmd& default_instance();

  void Swap(GvgDefNameChangeFubenCmd* other);

  // implements Message ----------------------------------------------

  GvgDefNameChangeFubenCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GvgDefNameChangeFubenCmd& from);
  void MergeFrom(const GvgDefNameChangeFubenCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = GUILD_FIRE_CHANGE_GUILD_NAME];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // required string newname = 3;
  inline bool has_newname() const;
  inline void clear_newname();
  static const int kNewnameFieldNumber = 3;
  inline const ::std::string& newname() const;
  inline void set_newname(const ::std::string& value);
  inline void set_newname(const char* value);
  inline void set_newname(const char* value, size_t size);
  inline ::std::string* mutable_newname();
  inline ::std::string* release_newname();
  inline void set_allocated_newname(::std::string* newname);

  // @@protoc_insertion_point(class_scope:Cmd.GvgDefNameChangeFubenCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_newname();
  inline void clear_has_newname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::std::string* newname_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static GvgDefNameChangeFubenCmd* default_instance_;
};
// -------------------------------------------------------------------

class SyncMvpInfoFubenCmd : public ::google::protobuf::Message {
 public:
  SyncMvpInfoFubenCmd();
  virtual ~SyncMvpInfoFubenCmd();

  SyncMvpInfoFubenCmd(const SyncMvpInfoFubenCmd& from);

  inline SyncMvpInfoFubenCmd& operator=(const SyncMvpInfoFubenCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncMvpInfoFubenCmd& default_instance();

  void Swap(SyncMvpInfoFubenCmd* other);

  // implements Message ----------------------------------------------

  SyncMvpInfoFubenCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncMvpInfoFubenCmd& from);
  void MergeFrom(const SyncMvpInfoFubenCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = MVPBATTLE_SYNC_MVPINFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // optional uint32 usernum = 3 [default = 0];
  inline bool has_usernum() const;
  inline void clear_usernum();
  static const int kUsernumFieldNumber = 3;
  inline ::google::protobuf::uint32 usernum() const;
  inline void set_usernum(::google::protobuf::uint32 value);

  // repeated uint32 liveboss = 4;
  inline int liveboss_size() const;
  inline void clear_liveboss();
  static const int kLivebossFieldNumber = 4;
  inline ::google::protobuf::uint32 liveboss(int index) const;
  inline void set_liveboss(int index, ::google::protobuf::uint32 value);
  inline void add_liveboss(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      liveboss() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_liveboss();

  // repeated uint32 dieboss = 5;
  inline int dieboss_size() const;
  inline void clear_dieboss();
  static const int kDiebossFieldNumber = 5;
  inline ::google::protobuf::uint32 dieboss(int index) const;
  inline void set_dieboss(int index, ::google::protobuf::uint32 value);
  inline void add_dieboss(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      dieboss() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_dieboss();

  // @@protoc_insertion_point(class_scope:Cmd.SyncMvpInfoFubenCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_usernum();
  inline void clear_has_usernum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > liveboss_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > dieboss_;
  ::google::protobuf::uint32 usernum_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static SyncMvpInfoFubenCmd* default_instance_;
};
// -------------------------------------------------------------------

class BossDieFubenCmd : public ::google::protobuf::Message {
 public:
  BossDieFubenCmd();
  virtual ~BossDieFubenCmd();

  BossDieFubenCmd(const BossDieFubenCmd& from);

  inline BossDieFubenCmd& operator=(const BossDieFubenCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BossDieFubenCmd& default_instance();

  void Swap(BossDieFubenCmd* other);

  // implements Message ----------------------------------------------

  BossDieFubenCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BossDieFubenCmd& from);
  void MergeFrom(const BossDieFubenCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = MVPBATTLE_BOSS_DIE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // required uint32 npcid = 3;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcidFieldNumber = 3;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.BossDieFubenCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_npcid();
  inline void clear_has_npcid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 npcid_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static BossDieFubenCmd* default_instance_;
};
// -------------------------------------------------------------------

class UpdateUserNumFubenCmd : public ::google::protobuf::Message {
 public:
  UpdateUserNumFubenCmd();
  virtual ~UpdateUserNumFubenCmd();

  UpdateUserNumFubenCmd(const UpdateUserNumFubenCmd& from);

  inline UpdateUserNumFubenCmd& operator=(const UpdateUserNumFubenCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateUserNumFubenCmd& default_instance();

  void Swap(UpdateUserNumFubenCmd* other);

  // implements Message ----------------------------------------------

  UpdateUserNumFubenCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateUserNumFubenCmd& from);
  void MergeFrom(const UpdateUserNumFubenCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = FUBEN_USERNUM_COUNT];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // optional uint32 usernum = 3 [default = 0];
  inline bool has_usernum() const;
  inline void clear_usernum();
  static const int kUsernumFieldNumber = 3;
  inline ::google::protobuf::uint32 usernum() const;
  inline void set_usernum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.UpdateUserNumFubenCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_usernum();
  inline void clear_has_usernum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 usernum_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static UpdateUserNumFubenCmd* default_instance_;
};
// -------------------------------------------------------------------

class GvgTowerValue : public ::google::protobuf::Message {
 public:
  GvgTowerValue();
  virtual ~GvgTowerValue();

  GvgTowerValue(const GvgTowerValue& from);

  inline GvgTowerValue& operator=(const GvgTowerValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GvgTowerValue& default_instance();

  void Swap(GvgTowerValue* other);

  // implements Message ----------------------------------------------

  GvgTowerValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GvgTowerValue& from);
  void MergeFrom(const GvgTowerValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 guildid = 1;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 1;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GvgTowerValue)
 private:
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static GvgTowerValue* default_instance_;
};
// -------------------------------------------------------------------

class GvgTowerData : public ::google::protobuf::Message {
 public:
  GvgTowerData();
  virtual ~GvgTowerData();

  GvgTowerData(const GvgTowerData& from);

  inline GvgTowerData& operator=(const GvgTowerData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GvgTowerData& default_instance();

  void Swap(GvgTowerData* other);

  // implements Message ----------------------------------------------

  GvgTowerData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GvgTowerData& from);
  void MergeFrom(const GvgTowerData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.EGvgTowerType etype = 1;
  inline bool has_etype() const;
  inline void clear_etype();
  static const int kEtypeFieldNumber = 1;
  inline ::Cmd::EGvgTowerType etype() const;
  inline void set_etype(::Cmd::EGvgTowerType value);

  // optional .Cmd.EGvgTowerState estate = 2;
  inline bool has_estate() const;
  inline void clear_estate();
  static const int kEstateFieldNumber = 2;
  inline ::Cmd::EGvgTowerState estate() const;
  inline void set_estate(::Cmd::EGvgTowerState value);

  // optional uint64 owner_guild = 3;
  inline bool has_owner_guild() const;
  inline void clear_owner_guild();
  static const int kOwnerGuildFieldNumber = 3;
  inline ::google::protobuf::uint64 owner_guild() const;
  inline void set_owner_guild(::google::protobuf::uint64 value);

  // repeated .Cmd.GvgTowerValue info = 4;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 4;
  inline const ::Cmd::GvgTowerValue& info(int index) const;
  inline ::Cmd::GvgTowerValue* mutable_info(int index);
  inline ::Cmd::GvgTowerValue* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GvgTowerValue >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GvgTowerValue >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:Cmd.GvgTowerData)
 private:
  inline void set_has_etype();
  inline void clear_has_etype();
  inline void set_has_estate();
  inline void clear_has_estate();
  inline void set_has_owner_guild();
  inline void clear_has_owner_guild();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int etype_;
  int estate_;
  ::google::protobuf::uint64 owner_guild_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GvgTowerValue > info_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static GvgTowerData* default_instance_;
};
// -------------------------------------------------------------------

class GvgCrystalInfo : public ::google::protobuf::Message {
 public:
  GvgCrystalInfo();
  virtual ~GvgCrystalInfo();

  GvgCrystalInfo(const GvgCrystalInfo& from);

  inline GvgCrystalInfo& operator=(const GvgCrystalInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GvgCrystalInfo& default_instance();

  void Swap(GvgCrystalInfo* other);

  // implements Message ----------------------------------------------

  GvgCrystalInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GvgCrystalInfo& from);
  void MergeFrom(const GvgCrystalInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // optional uint64 guildid = 2;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 2;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional uint32 crystalnum = 3 [default = 0];
  inline bool has_crystalnum() const;
  inline void clear_crystalnum();
  static const int kCrystalnumFieldNumber = 3;
  inline ::google::protobuf::uint32 crystalnum() const;
  inline void set_crystalnum(::google::protobuf::uint32 value);

  // optional uint32 chipnum = 4 [default = 0];
  inline bool has_chipnum() const;
  inline void clear_chipnum();
  static const int kChipnumFieldNumber = 4;
  inline ::google::protobuf::uint32 chipnum() const;
  inline void set_chipnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GvgCrystalInfo)
 private:
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_crystalnum();
  inline void clear_has_crystalnum();
  inline void set_has_chipnum();
  inline void clear_has_chipnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 crystalnum_;
  ::google::protobuf::uint32 chipnum_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static GvgCrystalInfo* default_instance_;
};
// -------------------------------------------------------------------

class GvgGuildInfo : public ::google::protobuf::Message {
 public:
  GvgGuildInfo();
  virtual ~GvgGuildInfo();

  GvgGuildInfo(const GvgGuildInfo& from);

  inline GvgGuildInfo& operator=(const GvgGuildInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GvgGuildInfo& default_instance();

  void Swap(GvgGuildInfo* other);

  // implements Message ----------------------------------------------

  GvgGuildInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GvgGuildInfo& from);
  void MergeFrom(const GvgGuildInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // optional uint64 guildid = 2;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 2;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional string guildname = 3;
  inline bool has_guildname() const;
  inline void clear_guildname();
  static const int kGuildnameFieldNumber = 3;
  inline const ::std::string& guildname() const;
  inline void set_guildname(const ::std::string& value);
  inline void set_guildname(const char* value);
  inline void set_guildname(const char* value, size_t size);
  inline ::std::string* mutable_guildname();
  inline ::std::string* release_guildname();
  inline void set_allocated_guildname(::std::string* guildname);

  // optional string icon = 4;
  inline bool has_icon() const;
  inline void clear_icon();
  static const int kIconFieldNumber = 4;
  inline const ::std::string& icon() const;
  inline void set_icon(const ::std::string& value);
  inline void set_icon(const char* value);
  inline void set_icon(const char* value, size_t size);
  inline ::std::string* mutable_icon();
  inline ::std::string* release_icon();
  inline void set_allocated_icon(::std::string* icon);

  // optional bool metal_live = 5 [default = false];
  inline bool has_metal_live() const;
  inline void clear_metal_live();
  static const int kMetalLiveFieldNumber = 5;
  inline bool metal_live() const;
  inline void set_metal_live(bool value);

  // optional .Cmd.GvgCrystalInfo crystal = 6;
  inline bool has_crystal() const;
  inline void clear_crystal();
  static const int kCrystalFieldNumber = 6;
  inline const ::Cmd::GvgCrystalInfo& crystal() const;
  inline ::Cmd::GvgCrystalInfo* mutable_crystal();
  inline ::Cmd::GvgCrystalInfo* release_crystal();
  inline void set_allocated_crystal(::Cmd::GvgCrystalInfo* crystal);

  // @@protoc_insertion_point(class_scope:Cmd.GvgGuildInfo)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_guildname();
  inline void clear_has_guildname();
  inline void set_has_icon();
  inline void clear_has_icon();
  inline void set_has_metal_live();
  inline void clear_has_metal_live();
  inline void set_has_crystal();
  inline void clear_has_crystal();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guildid_;
  ::std::string* guildname_;
  ::google::protobuf::uint32 index_;
  bool metal_live_;
  ::std::string* icon_;
  ::Cmd::GvgCrystalInfo* crystal_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static GvgGuildInfo* default_instance_;
};
// -------------------------------------------------------------------

class SuperGvgSyncFubenCmd : public ::google::protobuf::Message {
 public:
  SuperGvgSyncFubenCmd();
  virtual ~SuperGvgSyncFubenCmd();

  SuperGvgSyncFubenCmd(const SuperGvgSyncFubenCmd& from);

  inline SuperGvgSyncFubenCmd& operator=(const SuperGvgSyncFubenCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SuperGvgSyncFubenCmd& default_instance();

  void Swap(SuperGvgSyncFubenCmd* other);

  // implements Message ----------------------------------------------

  SuperGvgSyncFubenCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SuperGvgSyncFubenCmd& from);
  void MergeFrom(const SuperGvgSyncFubenCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = SUPERGVG_INFO_SYNC];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // repeated .Cmd.GvgTowerData towers = 3;
  inline int towers_size() const;
  inline void clear_towers();
  static const int kTowersFieldNumber = 3;
  inline const ::Cmd::GvgTowerData& towers(int index) const;
  inline ::Cmd::GvgTowerData* mutable_towers(int index);
  inline ::Cmd::GvgTowerData* add_towers();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GvgTowerData >&
      towers() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GvgTowerData >*
      mutable_towers();

  // repeated .Cmd.GvgGuildInfo guildinfo = 4;
  inline int guildinfo_size() const;
  inline void clear_guildinfo();
  static const int kGuildinfoFieldNumber = 4;
  inline const ::Cmd::GvgGuildInfo& guildinfo(int index) const;
  inline ::Cmd::GvgGuildInfo* mutable_guildinfo(int index);
  inline ::Cmd::GvgGuildInfo* add_guildinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GvgGuildInfo >&
      guildinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GvgGuildInfo >*
      mutable_guildinfo();

  // optional uint32 firebegintime = 5 [default = 0];
  inline bool has_firebegintime() const;
  inline void clear_firebegintime();
  static const int kFirebegintimeFieldNumber = 5;
  inline ::google::protobuf::uint32 firebegintime() const;
  inline void set_firebegintime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.SuperGvgSyncFubenCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_firebegintime();
  inline void clear_has_firebegintime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GvgTowerData > towers_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GvgGuildInfo > guildinfo_;
  ::google::protobuf::uint32 firebegintime_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static SuperGvgSyncFubenCmd* default_instance_;
};
// -------------------------------------------------------------------

class GvgTowerUpdateFubenCmd : public ::google::protobuf::Message {
 public:
  GvgTowerUpdateFubenCmd();
  virtual ~GvgTowerUpdateFubenCmd();

  GvgTowerUpdateFubenCmd(const GvgTowerUpdateFubenCmd& from);

  inline GvgTowerUpdateFubenCmd& operator=(const GvgTowerUpdateFubenCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GvgTowerUpdateFubenCmd& default_instance();

  void Swap(GvgTowerUpdateFubenCmd* other);

  // implements Message ----------------------------------------------

  GvgTowerUpdateFubenCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GvgTowerUpdateFubenCmd& from);
  void MergeFrom(const GvgTowerUpdateFubenCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = SUPERGVG_TOWERINFO_UPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // repeated .Cmd.GvgTowerData towers = 3;
  inline int towers_size() const;
  inline void clear_towers();
  static const int kTowersFieldNumber = 3;
  inline const ::Cmd::GvgTowerData& towers(int index) const;
  inline ::Cmd::GvgTowerData* mutable_towers(int index);
  inline ::Cmd::GvgTowerData* add_towers();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GvgTowerData >&
      towers() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GvgTowerData >*
      mutable_towers();

  // @@protoc_insertion_point(class_scope:Cmd.GvgTowerUpdateFubenCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GvgTowerData > towers_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static GvgTowerUpdateFubenCmd* default_instance_;
};
// -------------------------------------------------------------------

class GvgMetalDieFubenCmd : public ::google::protobuf::Message {
 public:
  GvgMetalDieFubenCmd();
  virtual ~GvgMetalDieFubenCmd();

  GvgMetalDieFubenCmd(const GvgMetalDieFubenCmd& from);

  inline GvgMetalDieFubenCmd& operator=(const GvgMetalDieFubenCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GvgMetalDieFubenCmd& default_instance();

  void Swap(GvgMetalDieFubenCmd* other);

  // implements Message ----------------------------------------------

  GvgMetalDieFubenCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GvgMetalDieFubenCmd& from);
  void MergeFrom(const GvgMetalDieFubenCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = SUPERGVG_METAL_DIE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // optional uint32 index = 3 [default = 0];
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GvgMetalDieFubenCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 index_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static GvgMetalDieFubenCmd* default_instance_;
};
// -------------------------------------------------------------------

class GvgCrystalUpdateFubenCmd : public ::google::protobuf::Message {
 public:
  GvgCrystalUpdateFubenCmd();
  virtual ~GvgCrystalUpdateFubenCmd();

  GvgCrystalUpdateFubenCmd(const GvgCrystalUpdateFubenCmd& from);

  inline GvgCrystalUpdateFubenCmd& operator=(const GvgCrystalUpdateFubenCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GvgCrystalUpdateFubenCmd& default_instance();

  void Swap(GvgCrystalUpdateFubenCmd* other);

  // implements Message ----------------------------------------------

  GvgCrystalUpdateFubenCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GvgCrystalUpdateFubenCmd& from);
  void MergeFrom(const GvgCrystalUpdateFubenCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = SUPERGVG_METALINFO_UPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // repeated .Cmd.GvgCrystalInfo crystals = 3;
  inline int crystals_size() const;
  inline void clear_crystals();
  static const int kCrystalsFieldNumber = 3;
  inline const ::Cmd::GvgCrystalInfo& crystals(int index) const;
  inline ::Cmd::GvgCrystalInfo* mutable_crystals(int index);
  inline ::Cmd::GvgCrystalInfo* add_crystals();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GvgCrystalInfo >&
      crystals() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::GvgCrystalInfo >*
      mutable_crystals();

  // @@protoc_insertion_point(class_scope:Cmd.GvgCrystalUpdateFubenCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::GvgCrystalInfo > crystals_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static GvgCrystalUpdateFubenCmd* default_instance_;
};
// -------------------------------------------------------------------

class QueryGvgTowerInfoFubenCmd : public ::google::protobuf::Message {
 public:
  QueryGvgTowerInfoFubenCmd();
  virtual ~QueryGvgTowerInfoFubenCmd();

  QueryGvgTowerInfoFubenCmd(const QueryGvgTowerInfoFubenCmd& from);

  inline QueryGvgTowerInfoFubenCmd& operator=(const QueryGvgTowerInfoFubenCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryGvgTowerInfoFubenCmd& default_instance();

  void Swap(QueryGvgTowerInfoFubenCmd* other);

  // implements Message ----------------------------------------------

  QueryGvgTowerInfoFubenCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryGvgTowerInfoFubenCmd& from);
  void MergeFrom(const QueryGvgTowerInfoFubenCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = SUPERGVG_QUERY_TOWERINFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // required .Cmd.EGvgTowerType etype = 3;
  inline bool has_etype() const;
  inline void clear_etype();
  static const int kEtypeFieldNumber = 3;
  inline ::Cmd::EGvgTowerType etype() const;
  inline void set_etype(::Cmd::EGvgTowerType value);

  // optional bool open = 4 [default = false];
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 4;
  inline bool open() const;
  inline void set_open(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.QueryGvgTowerInfoFubenCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_etype();
  inline void clear_has_etype();
  inline void set_has_open();
  inline void clear_has_open();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  int etype_;
  bool open_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static QueryGvgTowerInfoFubenCmd* default_instance_;
};
// -------------------------------------------------------------------

class RewardItemData : public ::google::protobuf::Message {
 public:
  RewardItemData();
  virtual ~RewardItemData();

  RewardItemData(const RewardItemData& from);

  inline RewardItemData& operator=(const RewardItemData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RewardItemData& default_instance();

  void Swap(RewardItemData* other);

  // implements Message ----------------------------------------------

  RewardItemData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RewardItemData& from);
  void MergeFrom(const RewardItemData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 itemid = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 1;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // optional uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.RewardItemData)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 count_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static RewardItemData* default_instance_;
};
// -------------------------------------------------------------------

class SuperGvgRewardData : public ::google::protobuf::Message {
 public:
  SuperGvgRewardData();
  virtual ~SuperGvgRewardData();

  SuperGvgRewardData(const SuperGvgRewardData& from);

  inline SuperGvgRewardData& operator=(const SuperGvgRewardData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SuperGvgRewardData& default_instance();

  void Swap(SuperGvgRewardData* other);

  // implements Message ----------------------------------------------

  SuperGvgRewardData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SuperGvgRewardData& from);
  void MergeFrom(const SuperGvgRewardData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 guildid = 1;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 1;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // optional uint32 rank = 2;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 2;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // repeated .Cmd.RewardItemData items = 3;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 3;
  inline const ::Cmd::RewardItemData& items(int index) const;
  inline ::Cmd::RewardItemData* mutable_items(int index);
  inline ::Cmd::RewardItemData* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::RewardItemData >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::RewardItemData >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:Cmd.SuperGvgRewardData)
 private:
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_rank();
  inline void clear_has_rank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::RewardItemData > items_;
  ::google::protobuf::uint32 rank_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static SuperGvgRewardData* default_instance_;
};
// -------------------------------------------------------------------

class SuperGvgRewardInfoFubenCmd : public ::google::protobuf::Message {
 public:
  SuperGvgRewardInfoFubenCmd();
  virtual ~SuperGvgRewardInfoFubenCmd();

  SuperGvgRewardInfoFubenCmd(const SuperGvgRewardInfoFubenCmd& from);

  inline SuperGvgRewardInfoFubenCmd& operator=(const SuperGvgRewardInfoFubenCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SuperGvgRewardInfoFubenCmd& default_instance();

  void Swap(SuperGvgRewardInfoFubenCmd* other);

  // implements Message ----------------------------------------------

  SuperGvgRewardInfoFubenCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SuperGvgRewardInfoFubenCmd& from);
  void MergeFrom(const SuperGvgRewardInfoFubenCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = SUPERGVG_REWARD_INFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // repeated .Cmd.SuperGvgRewardData rewardinfo = 3;
  inline int rewardinfo_size() const;
  inline void clear_rewardinfo();
  static const int kRewardinfoFieldNumber = 3;
  inline const ::Cmd::SuperGvgRewardData& rewardinfo(int index) const;
  inline ::Cmd::SuperGvgRewardData* mutable_rewardinfo(int index);
  inline ::Cmd::SuperGvgRewardData* add_rewardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SuperGvgRewardData >&
      rewardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::SuperGvgRewardData >*
      mutable_rewardinfo();

  // @@protoc_insertion_point(class_scope:Cmd.SuperGvgRewardInfoFubenCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::SuperGvgRewardData > rewardinfo_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static SuperGvgRewardInfoFubenCmd* default_instance_;
};
// -------------------------------------------------------------------

class SuperGvgUserData : public ::google::protobuf::Message {
 public:
  SuperGvgUserData();
  virtual ~SuperGvgUserData();

  SuperGvgUserData(const SuperGvgUserData& from);

  inline SuperGvgUserData& operator=(const SuperGvgUserData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SuperGvgUserData& default_instance();

  void Swap(SuperGvgUserData* other);

  // implements Message ----------------------------------------------

  SuperGvgUserData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SuperGvgUserData& from);
  void MergeFrom(const SuperGvgUserData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string username = 1;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 1;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // required uint32 profession = 2;
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 2;
  inline ::google::protobuf::uint32 profession() const;
  inline void set_profession(::google::protobuf::uint32 value);

  // optional uint32 killusernum = 3 [default = 0];
  inline bool has_killusernum() const;
  inline void clear_killusernum();
  static const int kKillusernumFieldNumber = 3;
  inline ::google::protobuf::uint32 killusernum() const;
  inline void set_killusernum(::google::protobuf::uint32 value);

  // optional uint32 dienum = 4 [default = 0];
  inline bool has_dienum() const;
  inline void clear_dienum();
  static const int kDienumFieldNumber = 4;
  inline ::google::protobuf::uint32 dienum() const;
  inline void set_dienum(::google::protobuf::uint32 value);

  // optional uint32 chipnum = 5 [default = 0];
  inline bool has_chipnum() const;
  inline void clear_chipnum();
  static const int kChipnumFieldNumber = 5;
  inline ::google::protobuf::uint32 chipnum() const;
  inline void set_chipnum(::google::protobuf::uint32 value);

  // optional uint32 towertime = 6 [default = 0];
  inline bool has_towertime() const;
  inline void clear_towertime();
  static const int kTowertimeFieldNumber = 6;
  inline ::google::protobuf::uint32 towertime() const;
  inline void set_towertime(::google::protobuf::uint32 value);

  // optional uint32 healhp = 7 [default = 0];
  inline bool has_healhp() const;
  inline void clear_healhp();
  static const int kHealhpFieldNumber = 7;
  inline ::google::protobuf::uint32 healhp() const;
  inline void set_healhp(::google::protobuf::uint32 value);

  // optional uint32 relivenum = 8 [default = 0];
  inline bool has_relivenum() const;
  inline void clear_relivenum();
  static const int kRelivenumFieldNumber = 8;
  inline ::google::protobuf::uint32 relivenum() const;
  inline void set_relivenum(::google::protobuf::uint32 value);

  // optional uint32 metaldamage = 9 [default = 0];
  inline bool has_metaldamage() const;
  inline void clear_metaldamage();
  static const int kMetaldamageFieldNumber = 9;
  inline ::google::protobuf::uint32 metaldamage() const;
  inline void set_metaldamage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.SuperGvgUserData)
 private:
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_profession();
  inline void clear_has_profession();
  inline void set_has_killusernum();
  inline void clear_has_killusernum();
  inline void set_has_dienum();
  inline void clear_has_dienum();
  inline void set_has_chipnum();
  inline void clear_has_chipnum();
  inline void set_has_towertime();
  inline void clear_has_towertime();
  inline void set_has_healhp();
  inline void clear_has_healhp();
  inline void set_has_relivenum();
  inline void clear_has_relivenum();
  inline void set_has_metaldamage();
  inline void clear_has_metaldamage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* username_;
  ::google::protobuf::uint32 profession_;
  ::google::protobuf::uint32 killusernum_;
  ::google::protobuf::uint32 dienum_;
  ::google::protobuf::uint32 chipnum_;
  ::google::protobuf::uint32 towertime_;
  ::google::protobuf::uint32 healhp_;
  ::google::protobuf::uint32 relivenum_;
  ::google::protobuf::uint32 metaldamage_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static SuperGvgUserData* default_instance_;
};
// -------------------------------------------------------------------

class SuperGvgGuildUserData : public ::google::protobuf::Message {
 public:
  SuperGvgGuildUserData();
  virtual ~SuperGvgGuildUserData();

  SuperGvgGuildUserData(const SuperGvgGuildUserData& from);

  inline SuperGvgGuildUserData& operator=(const SuperGvgGuildUserData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SuperGvgGuildUserData& default_instance();

  void Swap(SuperGvgGuildUserData* other);

  // implements Message ----------------------------------------------

  SuperGvgGuildUserData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SuperGvgGuildUserData& from);
  void MergeFrom(const SuperGvgGuildUserData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 guildid = 1;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 1;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // repeated .Cmd.SuperGvgUserData userdatas = 2;
  inline int userdatas_size() const;
  inline void clear_userdatas();
  static const int kUserdatasFieldNumber = 2;
  inline const ::Cmd::SuperGvgUserData& userdatas(int index) const;
  inline ::Cmd::SuperGvgUserData* mutable_userdatas(int index);
  inline ::Cmd::SuperGvgUserData* add_userdatas();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SuperGvgUserData >&
      userdatas() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::SuperGvgUserData >*
      mutable_userdatas();

  // @@protoc_insertion_point(class_scope:Cmd.SuperGvgGuildUserData)
 private:
  inline void set_has_guildid();
  inline void clear_has_guildid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::SuperGvgUserData > userdatas_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static SuperGvgGuildUserData* default_instance_;
};
// -------------------------------------------------------------------

class SuperGvgQueryUserDataFubenCmd : public ::google::protobuf::Message {
 public:
  SuperGvgQueryUserDataFubenCmd();
  virtual ~SuperGvgQueryUserDataFubenCmd();

  SuperGvgQueryUserDataFubenCmd(const SuperGvgQueryUserDataFubenCmd& from);

  inline SuperGvgQueryUserDataFubenCmd& operator=(const SuperGvgQueryUserDataFubenCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SuperGvgQueryUserDataFubenCmd& default_instance();

  void Swap(SuperGvgQueryUserDataFubenCmd* other);

  // implements Message ----------------------------------------------

  SuperGvgQueryUserDataFubenCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SuperGvgQueryUserDataFubenCmd& from);
  void MergeFrom(const SuperGvgQueryUserDataFubenCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = SUPERGVG_QUERY_USER_DATA];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // repeated .Cmd.SuperGvgGuildUserData guilduserdata = 3;
  inline int guilduserdata_size() const;
  inline void clear_guilduserdata();
  static const int kGuilduserdataFieldNumber = 3;
  inline const ::Cmd::SuperGvgGuildUserData& guilduserdata(int index) const;
  inline ::Cmd::SuperGvgGuildUserData* mutable_guilduserdata(int index);
  inline ::Cmd::SuperGvgGuildUserData* add_guilduserdata();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SuperGvgGuildUserData >&
      guilduserdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::SuperGvgGuildUserData >*
      mutable_guilduserdata();

  // @@protoc_insertion_point(class_scope:Cmd.SuperGvgQueryUserDataFubenCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::SuperGvgGuildUserData > guilduserdata_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static SuperGvgQueryUserDataFubenCmd* default_instance_;
};
// -------------------------------------------------------------------

class MvpBattleTeamData : public ::google::protobuf::Message {
 public:
  MvpBattleTeamData();
  virtual ~MvpBattleTeamData();

  MvpBattleTeamData(const MvpBattleTeamData& from);

  inline MvpBattleTeamData& operator=(const MvpBattleTeamData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MvpBattleTeamData& default_instance();

  void Swap(MvpBattleTeamData* other);

  // implements Message ----------------------------------------------

  MvpBattleTeamData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MvpBattleTeamData& from);
  void MergeFrom(const MvpBattleTeamData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 teamid = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional string teamname = 2;
  inline bool has_teamname() const;
  inline void clear_teamname();
  static const int kTeamnameFieldNumber = 2;
  inline const ::std::string& teamname() const;
  inline void set_teamname(const ::std::string& value);
  inline void set_teamname(const char* value);
  inline void set_teamname(const char* value, size_t size);
  inline ::std::string* mutable_teamname();
  inline ::std::string* release_teamname();
  inline void set_allocated_teamname(::std::string* teamname);

  // repeated uint32 killmvps = 3;
  inline int killmvps_size() const;
  inline void clear_killmvps();
  static const int kKillmvpsFieldNumber = 3;
  inline ::google::protobuf::uint32 killmvps(int index) const;
  inline void set_killmvps(int index, ::google::protobuf::uint32 value);
  inline void add_killmvps(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      killmvps() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_killmvps();

  // repeated uint32 killminis = 4;
  inline int killminis_size() const;
  inline void clear_killminis();
  static const int kKillminisFieldNumber = 4;
  inline ::google::protobuf::uint32 killminis(int index) const;
  inline void set_killminis(int index, ::google::protobuf::uint32 value);
  inline void add_killminis(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      killminis() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_killminis();

  // optional uint32 killusernum = 5 [default = 0];
  inline bool has_killusernum() const;
  inline void clear_killusernum();
  static const int kKillusernumFieldNumber = 5;
  inline ::google::protobuf::uint32 killusernum() const;
  inline void set_killusernum(::google::protobuf::uint32 value);

  // repeated uint32 deadboss = 6;
  inline int deadboss_size() const;
  inline void clear_deadboss();
  static const int kDeadbossFieldNumber = 6;
  inline ::google::protobuf::uint32 deadboss(int index) const;
  inline void set_deadboss(int index, ::google::protobuf::uint32 value);
  inline void add_deadboss(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      deadboss() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_deadboss();

  // @@protoc_insertion_point(class_scope:Cmd.MvpBattleTeamData)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_teamname();
  inline void clear_has_teamname();
  inline void set_has_killusernum();
  inline void clear_has_killusernum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 teamid_;
  ::std::string* teamname_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > killmvps_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > killminis_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > deadboss_;
  ::google::protobuf::uint32 killusernum_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static MvpBattleTeamData* default_instance_;
};
// -------------------------------------------------------------------

class MvpBattleReportFubenCmd : public ::google::protobuf::Message {
 public:
  MvpBattleReportFubenCmd();
  virtual ~MvpBattleReportFubenCmd();

  MvpBattleReportFubenCmd(const MvpBattleReportFubenCmd& from);

  inline MvpBattleReportFubenCmd& operator=(const MvpBattleReportFubenCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MvpBattleReportFubenCmd& default_instance();

  void Swap(MvpBattleReportFubenCmd* other);

  // implements Message ----------------------------------------------

  MvpBattleReportFubenCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MvpBattleReportFubenCmd& from);
  void MergeFrom(const MvpBattleReportFubenCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = MVPBATTLE_END_REPORT];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // repeated .Cmd.MvpBattleTeamData datas = 3;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 3;
  inline const ::Cmd::MvpBattleTeamData& datas(int index) const;
  inline ::Cmd::MvpBattleTeamData* mutable_datas(int index);
  inline ::Cmd::MvpBattleTeamData* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::MvpBattleTeamData >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::MvpBattleTeamData >*
      mutable_datas();

  // @@protoc_insertion_point(class_scope:Cmd.MvpBattleReportFubenCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::MvpBattleTeamData > datas_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static MvpBattleReportFubenCmd* default_instance_;
};
// -------------------------------------------------------------------

class TeamPwsRaidUserInfo : public ::google::protobuf::Message {
 public:
  TeamPwsRaidUserInfo();
  virtual ~TeamPwsRaidUserInfo();

  TeamPwsRaidUserInfo(const TeamPwsRaidUserInfo& from);

  inline TeamPwsRaidUserInfo& operator=(const TeamPwsRaidUserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamPwsRaidUserInfo& default_instance();

  void Swap(TeamPwsRaidUserInfo* other);

  // implements Message ----------------------------------------------

  TeamPwsRaidUserInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamPwsRaidUserInfo& from);
  void MergeFrom(const TeamPwsRaidUserInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 killnum = 3;
  inline bool has_killnum() const;
  inline void clear_killnum();
  static const int kKillnumFieldNumber = 3;
  inline ::google::protobuf::uint32 killnum() const;
  inline void set_killnum(::google::protobuf::uint32 value);

  // optional uint32 heal = 4;
  inline bool has_heal() const;
  inline void clear_heal();
  static const int kHealFieldNumber = 4;
  inline ::google::protobuf::uint32 heal() const;
  inline void set_heal(::google::protobuf::uint32 value);

  // optional uint32 killscore = 5;
  inline bool has_killscore() const;
  inline void clear_killscore();
  static const int kKillscoreFieldNumber = 5;
  inline ::google::protobuf::uint32 killscore() const;
  inline void set_killscore(::google::protobuf::uint32 value);

  // optional uint32 ballscore = 6;
  inline bool has_ballscore() const;
  inline void clear_ballscore();
  static const int kBallscoreFieldNumber = 6;
  inline ::google::protobuf::uint32 ballscore() const;
  inline void set_ballscore(::google::protobuf::uint32 value);

  // optional uint32 buffscore = 7;
  inline bool has_buffscore() const;
  inline void clear_buffscore();
  static const int kBuffscoreFieldNumber = 7;
  inline ::google::protobuf::uint32 buffscore() const;
  inline void set_buffscore(::google::protobuf::uint32 value);

  // optional uint32 dienum = 8;
  inline bool has_dienum() const;
  inline void clear_dienum();
  static const int kDienumFieldNumber = 8;
  inline ::google::protobuf::uint32 dienum() const;
  inline void set_dienum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.TeamPwsRaidUserInfo)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_killnum();
  inline void clear_has_killnum();
  inline void set_has_heal();
  inline void clear_has_heal();
  inline void set_has_killscore();
  inline void clear_has_killscore();
  inline void set_has_ballscore();
  inline void clear_has_ballscore();
  inline void set_has_buffscore();
  inline void clear_has_buffscore();
  inline void set_has_dienum();
  inline void clear_has_dienum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::std::string* name_;
  ::google::protobuf::uint32 killnum_;
  ::google::protobuf::uint32 heal_;
  ::google::protobuf::uint32 killscore_;
  ::google::protobuf::uint32 ballscore_;
  ::google::protobuf::uint32 buffscore_;
  ::google::protobuf::uint32 dienum_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static TeamPwsRaidUserInfo* default_instance_;
};
// -------------------------------------------------------------------

class TeamPwsRaidTeamInfo : public ::google::protobuf::Message {
 public:
  TeamPwsRaidTeamInfo();
  virtual ~TeamPwsRaidTeamInfo();

  TeamPwsRaidTeamInfo(const TeamPwsRaidTeamInfo& from);

  inline TeamPwsRaidTeamInfo& operator=(const TeamPwsRaidTeamInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamPwsRaidTeamInfo& default_instance();

  void Swap(TeamPwsRaidTeamInfo* other);

  // implements Message ----------------------------------------------

  TeamPwsRaidTeamInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamPwsRaidTeamInfo& from);
  void MergeFrom(const TeamPwsRaidTeamInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 teamid = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional .Cmd.ETeamPwsColor color = 2;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 2;
  inline ::Cmd::ETeamPwsColor color() const;
  inline void set_color(::Cmd::ETeamPwsColor value);

  // repeated .Cmd.TeamPwsRaidUserInfo userinfos = 3;
  inline int userinfos_size() const;
  inline void clear_userinfos();
  static const int kUserinfosFieldNumber = 3;
  inline const ::Cmd::TeamPwsRaidUserInfo& userinfos(int index) const;
  inline ::Cmd::TeamPwsRaidUserInfo* mutable_userinfos(int index);
  inline ::Cmd::TeamPwsRaidUserInfo* add_userinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamPwsRaidUserInfo >&
      userinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamPwsRaidUserInfo >*
      mutable_userinfos();

  // @@protoc_insertion_point(class_scope:Cmd.TeamPwsRaidTeamInfo)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_color();
  inline void clear_has_color();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TeamPwsRaidUserInfo > userinfos_;
  int color_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static TeamPwsRaidTeamInfo* default_instance_;
};
// -------------------------------------------------------------------

class QueryTeamPwsUserInfoFubenCmd : public ::google::protobuf::Message {
 public:
  QueryTeamPwsUserInfoFubenCmd();
  virtual ~QueryTeamPwsUserInfoFubenCmd();

  QueryTeamPwsUserInfoFubenCmd(const QueryTeamPwsUserInfoFubenCmd& from);

  inline QueryTeamPwsUserInfoFubenCmd& operator=(const QueryTeamPwsUserInfoFubenCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryTeamPwsUserInfoFubenCmd& default_instance();

  void Swap(QueryTeamPwsUserInfoFubenCmd* other);

  // implements Message ----------------------------------------------

  QueryTeamPwsUserInfoFubenCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryTeamPwsUserInfoFubenCmd& from);
  void MergeFrom(const QueryTeamPwsUserInfoFubenCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = QUERY_RAID_TEAMPWS_USERINFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // repeated .Cmd.TeamPwsRaidTeamInfo teaminfo = 3;
  inline int teaminfo_size() const;
  inline void clear_teaminfo();
  static const int kTeaminfoFieldNumber = 3;
  inline const ::Cmd::TeamPwsRaidTeamInfo& teaminfo(int index) const;
  inline ::Cmd::TeamPwsRaidTeamInfo* mutable_teaminfo(int index);
  inline ::Cmd::TeamPwsRaidTeamInfo* add_teaminfo();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamPwsRaidTeamInfo >&
      teaminfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamPwsRaidTeamInfo >*
      mutable_teaminfo();

  // @@protoc_insertion_point(class_scope:Cmd.QueryTeamPwsUserInfoFubenCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TeamPwsRaidTeamInfo > teaminfo_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static QueryTeamPwsUserInfoFubenCmd* default_instance_;
};
// -------------------------------------------------------------------

class TeamPwsReportFubenCmd : public ::google::protobuf::Message {
 public:
  TeamPwsReportFubenCmd();
  virtual ~TeamPwsReportFubenCmd();

  TeamPwsReportFubenCmd(const TeamPwsReportFubenCmd& from);

  inline TeamPwsReportFubenCmd& operator=(const TeamPwsReportFubenCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamPwsReportFubenCmd& default_instance();

  void Swap(TeamPwsReportFubenCmd* other);

  // implements Message ----------------------------------------------

  TeamPwsReportFubenCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamPwsReportFubenCmd& from);
  void MergeFrom(const TeamPwsReportFubenCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = TEAMPWS_END_REPORT];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // repeated .Cmd.TeamPwsRaidTeamInfo teaminfo = 3;
  inline int teaminfo_size() const;
  inline void clear_teaminfo();
  static const int kTeaminfoFieldNumber = 3;
  inline const ::Cmd::TeamPwsRaidTeamInfo& teaminfo(int index) const;
  inline ::Cmd::TeamPwsRaidTeamInfo* mutable_teaminfo(int index);
  inline ::Cmd::TeamPwsRaidTeamInfo* add_teaminfo();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamPwsRaidTeamInfo >&
      teaminfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamPwsRaidTeamInfo >*
      mutable_teaminfo();

  // optional .Cmd.QueryUserInfo mvpuserinfo = 4;
  inline bool has_mvpuserinfo() const;
  inline void clear_mvpuserinfo();
  static const int kMvpuserinfoFieldNumber = 4;
  inline const ::Cmd::QueryUserInfo& mvpuserinfo() const;
  inline ::Cmd::QueryUserInfo* mutable_mvpuserinfo();
  inline ::Cmd::QueryUserInfo* release_mvpuserinfo();
  inline void set_allocated_mvpuserinfo(::Cmd::QueryUserInfo* mvpuserinfo);

  // required .Cmd.ETeamPwsColor winteam = 5;
  inline bool has_winteam() const;
  inline void clear_winteam();
  static const int kWinteamFieldNumber = 5;
  inline ::Cmd::ETeamPwsColor winteam() const;
  inline void set_winteam(::Cmd::ETeamPwsColor value);

  // @@protoc_insertion_point(class_scope:Cmd.TeamPwsReportFubenCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_mvpuserinfo();
  inline void clear_has_mvpuserinfo();
  inline void set_has_winteam();
  inline void clear_has_winteam();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TeamPwsRaidTeamInfo > teaminfo_;
  ::Cmd::QueryUserInfo* mvpuserinfo_;
  int winteam_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static TeamPwsReportFubenCmd* default_instance_;
};
// -------------------------------------------------------------------

class TeamPwsInfoSyncData : public ::google::protobuf::Message {
 public:
  TeamPwsInfoSyncData();
  virtual ~TeamPwsInfoSyncData();

  TeamPwsInfoSyncData(const TeamPwsInfoSyncData& from);

  inline TeamPwsInfoSyncData& operator=(const TeamPwsInfoSyncData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamPwsInfoSyncData& default_instance();

  void Swap(TeamPwsInfoSyncData* other);

  // implements Message ----------------------------------------------

  TeamPwsInfoSyncData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamPwsInfoSyncData& from);
  void MergeFrom(const TeamPwsInfoSyncData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 teamid = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional string teamname = 2;
  inline bool has_teamname() const;
  inline void clear_teamname();
  static const int kTeamnameFieldNumber = 2;
  inline const ::std::string& teamname() const;
  inline void set_teamname(const ::std::string& value);
  inline void set_teamname(const char* value);
  inline void set_teamname(const char* value, size_t size);
  inline ::std::string* mutable_teamname();
  inline ::std::string* release_teamname();
  inline void set_allocated_teamname(::std::string* teamname);

  // optional .Cmd.ETeamPwsColor color = 3;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 3;
  inline ::Cmd::ETeamPwsColor color() const;
  inline void set_color(::Cmd::ETeamPwsColor value);

  // optional uint32 score = 4 [default = 0];
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 4;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // optional uint32 effectcd = 5 [default = 0];
  inline bool has_effectcd() const;
  inline void clear_effectcd();
  static const int kEffectcdFieldNumber = 5;
  inline ::google::protobuf::uint32 effectcd() const;
  inline void set_effectcd(::google::protobuf::uint32 value);

  // optional uint32 magicid = 6 [default = 0];
  inline bool has_magicid() const;
  inline void clear_magicid();
  static const int kMagicidFieldNumber = 6;
  inline ::google::protobuf::uint32 magicid() const;
  inline void set_magicid(::google::protobuf::uint32 value);

  // repeated .Cmd.EMagicBallType balls = 7;
  inline int balls_size() const;
  inline void clear_balls();
  static const int kBallsFieldNumber = 7;
  inline ::Cmd::EMagicBallType balls(int index) const;
  inline void set_balls(int index, ::Cmd::EMagicBallType value);
  inline void add_balls(::Cmd::EMagicBallType value);
  inline const ::google::protobuf::RepeatedField<int>& balls() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_balls();

  // @@protoc_insertion_point(class_scope:Cmd.TeamPwsInfoSyncData)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_teamname();
  inline void clear_has_teamname();
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_effectcd();
  inline void clear_has_effectcd();
  inline void set_has_magicid();
  inline void clear_has_magicid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 teamid_;
  ::std::string* teamname_;
  int color_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 effectcd_;
  ::google::protobuf::uint32 magicid_;
  ::google::protobuf::RepeatedField<int> balls_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static TeamPwsInfoSyncData* default_instance_;
};
// -------------------------------------------------------------------

class TeamPwsInfoSyncFubenCmd : public ::google::protobuf::Message {
 public:
  TeamPwsInfoSyncFubenCmd();
  virtual ~TeamPwsInfoSyncFubenCmd();

  TeamPwsInfoSyncFubenCmd(const TeamPwsInfoSyncFubenCmd& from);

  inline TeamPwsInfoSyncFubenCmd& operator=(const TeamPwsInfoSyncFubenCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamPwsInfoSyncFubenCmd& default_instance();

  void Swap(TeamPwsInfoSyncFubenCmd* other);

  // implements Message ----------------------------------------------

  TeamPwsInfoSyncFubenCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamPwsInfoSyncFubenCmd& from);
  void MergeFrom(const TeamPwsInfoSyncFubenCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = TEAMPWS_SYNC_INFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // repeated .Cmd.TeamPwsInfoSyncData teaminfo = 3;
  inline int teaminfo_size() const;
  inline void clear_teaminfo();
  static const int kTeaminfoFieldNumber = 3;
  inline const ::Cmd::TeamPwsInfoSyncData& teaminfo(int index) const;
  inline ::Cmd::TeamPwsInfoSyncData* mutable_teaminfo(int index);
  inline ::Cmd::TeamPwsInfoSyncData* add_teaminfo();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamPwsInfoSyncData >&
      teaminfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamPwsInfoSyncData >*
      mutable_teaminfo();

  // optional uint32 endtime = 4;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 4;
  inline ::google::protobuf::uint32 endtime() const;
  inline void set_endtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.TeamPwsInfoSyncFubenCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TeamPwsInfoSyncData > teaminfo_;
  ::google::protobuf::uint32 endtime_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static TeamPwsInfoSyncFubenCmd* default_instance_;
};
// -------------------------------------------------------------------

class UpdateTeamPwsInfoFubenCmd : public ::google::protobuf::Message {
 public:
  UpdateTeamPwsInfoFubenCmd();
  virtual ~UpdateTeamPwsInfoFubenCmd();

  UpdateTeamPwsInfoFubenCmd(const UpdateTeamPwsInfoFubenCmd& from);

  inline UpdateTeamPwsInfoFubenCmd& operator=(const UpdateTeamPwsInfoFubenCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateTeamPwsInfoFubenCmd& default_instance();

  void Swap(UpdateTeamPwsInfoFubenCmd* other);

  // implements Message ----------------------------------------------

  UpdateTeamPwsInfoFubenCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateTeamPwsInfoFubenCmd& from);
  void MergeFrom(const UpdateTeamPwsInfoFubenCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = TEAMPWS_UPDATE_INFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // repeated .Cmd.TeamPwsInfoSyncData teaminfo = 3;
  inline int teaminfo_size() const;
  inline void clear_teaminfo();
  static const int kTeaminfoFieldNumber = 3;
  inline const ::Cmd::TeamPwsInfoSyncData& teaminfo(int index) const;
  inline ::Cmd::TeamPwsInfoSyncData* mutable_teaminfo(int index);
  inline ::Cmd::TeamPwsInfoSyncData* add_teaminfo();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamPwsInfoSyncData >&
      teaminfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamPwsInfoSyncData >*
      mutable_teaminfo();

  // @@protoc_insertion_point(class_scope:Cmd.UpdateTeamPwsInfoFubenCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::TeamPwsInfoSyncData > teaminfo_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static UpdateTeamPwsInfoFubenCmd* default_instance_;
};
// -------------------------------------------------------------------

class SelectTeamPwsMagicFubenCmd : public ::google::protobuf::Message {
 public:
  SelectTeamPwsMagicFubenCmd();
  virtual ~SelectTeamPwsMagicFubenCmd();

  SelectTeamPwsMagicFubenCmd(const SelectTeamPwsMagicFubenCmd& from);

  inline SelectTeamPwsMagicFubenCmd& operator=(const SelectTeamPwsMagicFubenCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SelectTeamPwsMagicFubenCmd& default_instance();

  void Swap(SelectTeamPwsMagicFubenCmd* other);

  // implements Message ----------------------------------------------

  SelectTeamPwsMagicFubenCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SelectTeamPwsMagicFubenCmd& from);
  void MergeFrom(const SelectTeamPwsMagicFubenCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = TEAMPWS_SELECT_MAGIC];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // required uint32 magicid = 3;
  inline bool has_magicid() const;
  inline void clear_magicid();
  static const int kMagicidFieldNumber = 3;
  inline ::google::protobuf::uint32 magicid() const;
  inline void set_magicid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.SelectTeamPwsMagicFubenCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_magicid();
  inline void clear_has_magicid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 magicid_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static SelectTeamPwsMagicFubenCmd* default_instance_;
};
// -------------------------------------------------------------------

class InviteSummonBossFubenCmd : public ::google::protobuf::Message {
 public:
  InviteSummonBossFubenCmd();
  virtual ~InviteSummonBossFubenCmd();

  InviteSummonBossFubenCmd(const InviteSummonBossFubenCmd& from);

  inline InviteSummonBossFubenCmd& operator=(const InviteSummonBossFubenCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InviteSummonBossFubenCmd& default_instance();

  void Swap(InviteSummonBossFubenCmd* other);

  // implements Message ----------------------------------------------

  InviteSummonBossFubenCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InviteSummonBossFubenCmd& from);
  void MergeFrom(const InviteSummonBossFubenCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = INVITE_SUMMON_DEADBOSS];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // @@protoc_insertion_point(class_scope:Cmd.InviteSummonBossFubenCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static InviteSummonBossFubenCmd* default_instance_;
};
// -------------------------------------------------------------------

class ReplySummonBossFubenCmd : public ::google::protobuf::Message {
 public:
  ReplySummonBossFubenCmd();
  virtual ~ReplySummonBossFubenCmd();

  ReplySummonBossFubenCmd(const ReplySummonBossFubenCmd& from);

  inline ReplySummonBossFubenCmd& operator=(const ReplySummonBossFubenCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplySummonBossFubenCmd& default_instance();

  void Swap(ReplySummonBossFubenCmd* other);

  // implements Message ----------------------------------------------

  ReplySummonBossFubenCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplySummonBossFubenCmd& from);
  void MergeFrom(const ReplySummonBossFubenCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.FuBenParam param = 2 [default = REPLY_SUMMON_DEADBOSS];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::FuBenParam param() const;
  inline void set_param(::Cmd::FuBenParam value);

  // optional bool isfull = 3 [default = false];
  inline bool has_isfull() const;
  inline void clear_isfull();
  static const int kIsfullFieldNumber = 3;
  inline bool isfull() const;
  inline void set_isfull(bool value);

  // optional bool agree = 4 [default = false];
  inline bool has_agree() const;
  inline void clear_agree();
  static const int kAgreeFieldNumber = 4;
  inline bool agree() const;
  inline void set_agree(bool value);

  // optional uint64 charid = 5;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 5;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.ReplySummonBossFubenCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_isfull();
  inline void clear_has_isfull();
  inline void set_has_agree();
  inline void clear_has_agree();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  bool isfull_;
  bool agree_;
  friend void  protobuf_AddDesc_FuBenCmd_2eproto();
  friend void protobuf_AssignDesc_FuBenCmd_2eproto();
  friend void protobuf_ShutdownFile_FuBenCmd_2eproto();

  void InitAsDefaultInstance();
  static ReplySummonBossFubenCmd* default_instance_;
};
// ===================================================================


// ===================================================================

// TrackData

// optional uint32 star = 1;
inline bool TrackData::has_star() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TrackData::set_has_star() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TrackData::clear_has_star() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TrackData::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 TrackData::star() const {
  // @@protoc_insertion_point(field_get:Cmd.TrackData.star)
  return star_;
}
inline void TrackData::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TrackData.star)
}

// optional uint32 id = 2;
inline bool TrackData::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TrackData::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TrackData::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TrackData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TrackData::id() const {
  // @@protoc_insertion_point(field_get:Cmd.TrackData.id)
  return id_;
}
inline void TrackData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TrackData.id)
}

// -------------------------------------------------------------------

// RaidPConfig

// optional uint32 RaidID = 1 [default = 0];
inline bool RaidPConfig::has_raidid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RaidPConfig::set_has_raidid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RaidPConfig::clear_has_raidid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RaidPConfig::clear_raidid() {
  raidid_ = 0u;
  clear_has_raidid();
}
inline ::google::protobuf::uint32 RaidPConfig::raidid() const {
  // @@protoc_insertion_point(field_get:Cmd.RaidPConfig.RaidID)
  return raidid_;
}
inline void RaidPConfig::set_raidid(::google::protobuf::uint32 value) {
  set_has_raidid();
  raidid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RaidPConfig.RaidID)
}

// optional uint32 starID = 2 [default = 0];
inline bool RaidPConfig::has_starid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RaidPConfig::set_has_starid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RaidPConfig::clear_has_starid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RaidPConfig::clear_starid() {
  starid_ = 0u;
  clear_has_starid();
}
inline ::google::protobuf::uint32 RaidPConfig::starid() const {
  // @@protoc_insertion_point(field_get:Cmd.RaidPConfig.starID)
  return starid_;
}
inline void RaidPConfig::set_starid(::google::protobuf::uint32 value) {
  set_has_starid();
  starid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RaidPConfig.starID)
}

// optional uint32 Auto = 3 [default = 0];
inline bool RaidPConfig::has_auto_() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RaidPConfig::set_has_auto_() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RaidPConfig::clear_has_auto_() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RaidPConfig::clear_auto_() {
  auto__ = 0u;
  clear_has_auto_();
}
inline ::google::protobuf::uint32 RaidPConfig::auto_() const {
  // @@protoc_insertion_point(field_get:Cmd.RaidPConfig.Auto)
  return auto__;
}
inline void RaidPConfig::set_auto_(::google::protobuf::uint32 value) {
  set_has_auto_();
  auto__ = value;
  // @@protoc_insertion_point(field_set:Cmd.RaidPConfig.Auto)
}

// optional uint32 WhetherTrace = 4 [default = 0];
inline bool RaidPConfig::has_whethertrace() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RaidPConfig::set_has_whethertrace() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RaidPConfig::clear_has_whethertrace() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RaidPConfig::clear_whethertrace() {
  whethertrace_ = 0u;
  clear_has_whethertrace();
}
inline ::google::protobuf::uint32 RaidPConfig::whethertrace() const {
  // @@protoc_insertion_point(field_get:Cmd.RaidPConfig.WhetherTrace)
  return whethertrace_;
}
inline void RaidPConfig::set_whethertrace(::google::protobuf::uint32 value) {
  set_has_whethertrace();
  whethertrace_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RaidPConfig.WhetherTrace)
}

// optional string DescInfo = 5;
inline bool RaidPConfig::has_descinfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RaidPConfig::set_has_descinfo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RaidPConfig::clear_has_descinfo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RaidPConfig::clear_descinfo() {
  if (descinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    descinfo_->clear();
  }
  clear_has_descinfo();
}
inline const ::std::string& RaidPConfig::descinfo() const {
  // @@protoc_insertion_point(field_get:Cmd.RaidPConfig.DescInfo)
  return *descinfo_;
}
inline void RaidPConfig::set_descinfo(const ::std::string& value) {
  set_has_descinfo();
  if (descinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    descinfo_ = new ::std::string;
  }
  descinfo_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.RaidPConfig.DescInfo)
}
inline void RaidPConfig::set_descinfo(const char* value) {
  set_has_descinfo();
  if (descinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    descinfo_ = new ::std::string;
  }
  descinfo_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.RaidPConfig.DescInfo)
}
inline void RaidPConfig::set_descinfo(const char* value, size_t size) {
  set_has_descinfo();
  if (descinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    descinfo_ = new ::std::string;
  }
  descinfo_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.RaidPConfig.DescInfo)
}
inline ::std::string* RaidPConfig::mutable_descinfo() {
  set_has_descinfo();
  if (descinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    descinfo_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.RaidPConfig.DescInfo)
  return descinfo_;
}
inline ::std::string* RaidPConfig::release_descinfo() {
  clear_has_descinfo();
  if (descinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = descinfo_;
    descinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RaidPConfig::set_allocated_descinfo(::std::string* descinfo) {
  if (descinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete descinfo_;
  }
  if (descinfo) {
    set_has_descinfo();
    descinfo_ = descinfo;
  } else {
    clear_has_descinfo();
    descinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.RaidPConfig.DescInfo)
}

// optional string Content = 6;
inline bool RaidPConfig::has_content() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RaidPConfig::set_has_content() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RaidPConfig::clear_has_content() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RaidPConfig::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& RaidPConfig::content() const {
  // @@protoc_insertion_point(field_get:Cmd.RaidPConfig.Content)
  return *content_;
}
inline void RaidPConfig::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.RaidPConfig.Content)
}
inline void RaidPConfig::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.RaidPConfig.Content)
}
inline void RaidPConfig::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.RaidPConfig.Content)
}
inline ::std::string* RaidPConfig::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.RaidPConfig.Content)
  return content_;
}
inline ::std::string* RaidPConfig::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RaidPConfig::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.RaidPConfig.Content)
}

// optional string TraceInfo = 7;
inline bool RaidPConfig::has_traceinfo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RaidPConfig::set_has_traceinfo() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RaidPConfig::clear_has_traceinfo() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RaidPConfig::clear_traceinfo() {
  if (traceinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    traceinfo_->clear();
  }
  clear_has_traceinfo();
}
inline const ::std::string& RaidPConfig::traceinfo() const {
  // @@protoc_insertion_point(field_get:Cmd.RaidPConfig.TraceInfo)
  return *traceinfo_;
}
inline void RaidPConfig::set_traceinfo(const ::std::string& value) {
  set_has_traceinfo();
  if (traceinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    traceinfo_ = new ::std::string;
  }
  traceinfo_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.RaidPConfig.TraceInfo)
}
inline void RaidPConfig::set_traceinfo(const char* value) {
  set_has_traceinfo();
  if (traceinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    traceinfo_ = new ::std::string;
  }
  traceinfo_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.RaidPConfig.TraceInfo)
}
inline void RaidPConfig::set_traceinfo(const char* value, size_t size) {
  set_has_traceinfo();
  if (traceinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    traceinfo_ = new ::std::string;
  }
  traceinfo_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.RaidPConfig.TraceInfo)
}
inline ::std::string* RaidPConfig::mutable_traceinfo() {
  set_has_traceinfo();
  if (traceinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    traceinfo_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.RaidPConfig.TraceInfo)
  return traceinfo_;
}
inline ::std::string* RaidPConfig::release_traceinfo() {
  clear_has_traceinfo();
  if (traceinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = traceinfo_;
    traceinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RaidPConfig::set_allocated_traceinfo(::std::string* traceinfo) {
  if (traceinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete traceinfo_;
  }
  if (traceinfo) {
    set_has_traceinfo();
    traceinfo_ = traceinfo;
  } else {
    clear_has_traceinfo();
    traceinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.RaidPConfig.TraceInfo)
}

// optional .Cmd.ConfigParam params = 8;
inline bool RaidPConfig::has_params() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RaidPConfig::set_has_params() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RaidPConfig::clear_has_params() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RaidPConfig::clear_params() {
  if (params_ != NULL) params_->::Cmd::ConfigParam::Clear();
  clear_has_params();
}
inline const ::Cmd::ConfigParam& RaidPConfig::params() const {
  // @@protoc_insertion_point(field_get:Cmd.RaidPConfig.params)
  return params_ != NULL ? *params_ : *default_instance_->params_;
}
inline ::Cmd::ConfigParam* RaidPConfig::mutable_params() {
  set_has_params();
  if (params_ == NULL) params_ = new ::Cmd::ConfigParam;
  // @@protoc_insertion_point(field_mutable:Cmd.RaidPConfig.params)
  return params_;
}
inline ::Cmd::ConfigParam* RaidPConfig::release_params() {
  clear_has_params();
  ::Cmd::ConfigParam* temp = params_;
  params_ = NULL;
  return temp;
}
inline void RaidPConfig::set_allocated_params(::Cmd::ConfigParam* params) {
  delete params_;
  params_ = params;
  if (params) {
    set_has_params();
  } else {
    clear_has_params();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.RaidPConfig.params)
}

// -------------------------------------------------------------------

// TrackFuBenUserCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool TrackFuBenUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TrackFuBenUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TrackFuBenUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TrackFuBenUserCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command TrackFuBenUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TrackFuBenUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TrackFuBenUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TrackFuBenUserCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = TRACK_FUBEN_USER_CMD];
inline bool TrackFuBenUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TrackFuBenUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TrackFuBenUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TrackFuBenUserCmd::clear_param() {
  param_ = 1;
  clear_has_param();
}
inline ::Cmd::FuBenParam TrackFuBenUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TrackFuBenUserCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void TrackFuBenUserCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TrackFuBenUserCmd.param)
}

// repeated .Cmd.TrackData data = 3;
inline int TrackFuBenUserCmd::data_size() const {
  return data_.size();
}
inline void TrackFuBenUserCmd::clear_data() {
  data_.Clear();
}
inline const ::Cmd::TrackData& TrackFuBenUserCmd::data(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TrackFuBenUserCmd.data)
  return data_.Get(index);
}
inline ::Cmd::TrackData* TrackFuBenUserCmd::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.TrackFuBenUserCmd.data)
  return data_.Mutable(index);
}
inline ::Cmd::TrackData* TrackFuBenUserCmd::add_data() {
  // @@protoc_insertion_point(field_add:Cmd.TrackFuBenUserCmd.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TrackData >&
TrackFuBenUserCmd::data() const {
  // @@protoc_insertion_point(field_list:Cmd.TrackFuBenUserCmd.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TrackData >*
TrackFuBenUserCmd::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TrackFuBenUserCmd.data)
  return &data_;
}

// optional uint32 dmapid = 4;
inline bool TrackFuBenUserCmd::has_dmapid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TrackFuBenUserCmd::set_has_dmapid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TrackFuBenUserCmd::clear_has_dmapid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TrackFuBenUserCmd::clear_dmapid() {
  dmapid_ = 0u;
  clear_has_dmapid();
}
inline ::google::protobuf::uint32 TrackFuBenUserCmd::dmapid() const {
  // @@protoc_insertion_point(field_get:Cmd.TrackFuBenUserCmd.dmapid)
  return dmapid_;
}
inline void TrackFuBenUserCmd::set_dmapid(::google::protobuf::uint32 value) {
  set_has_dmapid();
  dmapid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TrackFuBenUserCmd.dmapid)
}

// optional uint32 endtime = 5;
inline bool TrackFuBenUserCmd::has_endtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TrackFuBenUserCmd::set_has_endtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TrackFuBenUserCmd::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TrackFuBenUserCmd::clear_endtime() {
  endtime_ = 0u;
  clear_has_endtime();
}
inline ::google::protobuf::uint32 TrackFuBenUserCmd::endtime() const {
  // @@protoc_insertion_point(field_get:Cmd.TrackFuBenUserCmd.endtime)
  return endtime_;
}
inline void TrackFuBenUserCmd::set_endtime(::google::protobuf::uint32 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TrackFuBenUserCmd.endtime)
}

// -------------------------------------------------------------------

// FailFuBenUserCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool FailFuBenUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FailFuBenUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FailFuBenUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FailFuBenUserCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command FailFuBenUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.FailFuBenUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void FailFuBenUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FailFuBenUserCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = FAIL_FUBEN_USER_CMD];
inline bool FailFuBenUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FailFuBenUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FailFuBenUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FailFuBenUserCmd::clear_param() {
  param_ = 2;
  clear_has_param();
}
inline ::Cmd::FuBenParam FailFuBenUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.FailFuBenUserCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void FailFuBenUserCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FailFuBenUserCmd.param)
}

// -------------------------------------------------------------------

// LeaveFuBenUserCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool LeaveFuBenUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LeaveFuBenUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LeaveFuBenUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LeaveFuBenUserCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command LeaveFuBenUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.LeaveFuBenUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void LeaveFuBenUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LeaveFuBenUserCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = LEAVE_FUBEN_USER_CMD];
inline bool LeaveFuBenUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LeaveFuBenUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LeaveFuBenUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LeaveFuBenUserCmd::clear_param() {
  param_ = 3;
  clear_has_param();
}
inline ::Cmd::FuBenParam LeaveFuBenUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.LeaveFuBenUserCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void LeaveFuBenUserCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LeaveFuBenUserCmd.param)
}

// optional uint32 mapid = 3;
inline bool LeaveFuBenUserCmd::has_mapid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LeaveFuBenUserCmd::set_has_mapid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LeaveFuBenUserCmd::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LeaveFuBenUserCmd::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 LeaveFuBenUserCmd::mapid() const {
  // @@protoc_insertion_point(field_get:Cmd.LeaveFuBenUserCmd.mapid)
  return mapid_;
}
inline void LeaveFuBenUserCmd::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LeaveFuBenUserCmd.mapid)
}

// -------------------------------------------------------------------

// SuccessFuBenUserCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool SuccessFuBenUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SuccessFuBenUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SuccessFuBenUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SuccessFuBenUserCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command SuccessFuBenUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SuccessFuBenUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SuccessFuBenUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SuccessFuBenUserCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = SUCCESS_FUBEN_USER_CMD];
inline bool SuccessFuBenUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SuccessFuBenUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SuccessFuBenUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SuccessFuBenUserCmd::clear_param() {
  param_ = 4;
  clear_has_param();
}
inline ::Cmd::FuBenParam SuccessFuBenUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SuccessFuBenUserCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void SuccessFuBenUserCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SuccessFuBenUserCmd.param)
}

// optional .Cmd.ERaidType type = 3 [default = ERAIDTYPE_MIN];
inline bool SuccessFuBenUserCmd::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SuccessFuBenUserCmd::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SuccessFuBenUserCmd::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SuccessFuBenUserCmd::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::ERaidType SuccessFuBenUserCmd::type() const {
  // @@protoc_insertion_point(field_get:Cmd.SuccessFuBenUserCmd.type)
  return static_cast< ::Cmd::ERaidType >(type_);
}
inline void SuccessFuBenUserCmd::set_type(::Cmd::ERaidType value) {
  assert(::Cmd::ERaidType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SuccessFuBenUserCmd.type)
}

// optional uint32 param1 = 4 [default = 0];
inline bool SuccessFuBenUserCmd::has_param1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SuccessFuBenUserCmd::set_has_param1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SuccessFuBenUserCmd::clear_has_param1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SuccessFuBenUserCmd::clear_param1() {
  param1_ = 0u;
  clear_has_param1();
}
inline ::google::protobuf::uint32 SuccessFuBenUserCmd::param1() const {
  // @@protoc_insertion_point(field_get:Cmd.SuccessFuBenUserCmd.param1)
  return param1_;
}
inline void SuccessFuBenUserCmd::set_param1(::google::protobuf::uint32 value) {
  set_has_param1();
  param1_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SuccessFuBenUserCmd.param1)
}

// optional uint32 param2 = 5 [default = 0];
inline bool SuccessFuBenUserCmd::has_param2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SuccessFuBenUserCmd::set_has_param2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SuccessFuBenUserCmd::clear_has_param2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SuccessFuBenUserCmd::clear_param2() {
  param2_ = 0u;
  clear_has_param2();
}
inline ::google::protobuf::uint32 SuccessFuBenUserCmd::param2() const {
  // @@protoc_insertion_point(field_get:Cmd.SuccessFuBenUserCmd.param2)
  return param2_;
}
inline void SuccessFuBenUserCmd::set_param2(::google::protobuf::uint32 value) {
  set_has_param2();
  param2_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SuccessFuBenUserCmd.param2)
}

// optional uint32 param3 = 6 [default = 0];
inline bool SuccessFuBenUserCmd::has_param3() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SuccessFuBenUserCmd::set_has_param3() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SuccessFuBenUserCmd::clear_has_param3() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SuccessFuBenUserCmd::clear_param3() {
  param3_ = 0u;
  clear_has_param3();
}
inline ::google::protobuf::uint32 SuccessFuBenUserCmd::param3() const {
  // @@protoc_insertion_point(field_get:Cmd.SuccessFuBenUserCmd.param3)
  return param3_;
}
inline void SuccessFuBenUserCmd::set_param3(::google::protobuf::uint32 value) {
  set_has_param3();
  param3_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SuccessFuBenUserCmd.param3)
}

// optional uint32 param4 = 7 [default = 0];
inline bool SuccessFuBenUserCmd::has_param4() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SuccessFuBenUserCmd::set_has_param4() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SuccessFuBenUserCmd::clear_has_param4() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SuccessFuBenUserCmd::clear_param4() {
  param4_ = 0u;
  clear_has_param4();
}
inline ::google::protobuf::uint32 SuccessFuBenUserCmd::param4() const {
  // @@protoc_insertion_point(field_get:Cmd.SuccessFuBenUserCmd.param4)
  return param4_;
}
inline void SuccessFuBenUserCmd::set_param4(::google::protobuf::uint32 value) {
  set_has_param4();
  param4_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SuccessFuBenUserCmd.param4)
}

// -------------------------------------------------------------------

// WorldStageItem

// optional uint32 id = 1;
inline bool WorldStageItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldStageItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldStageItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldStageItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 WorldStageItem::id() const {
  // @@protoc_insertion_point(field_get:Cmd.WorldStageItem.id)
  return id_;
}
inline void WorldStageItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WorldStageItem.id)
}

// optional uint32 star = 2;
inline bool WorldStageItem::has_star() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldStageItem::set_has_star() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldStageItem::clear_has_star() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldStageItem::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 WorldStageItem::star() const {
  // @@protoc_insertion_point(field_get:Cmd.WorldStageItem.star)
  return star_;
}
inline void WorldStageItem::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WorldStageItem.star)
}

// repeated uint32 getList = 3;
inline int WorldStageItem::getlist_size() const {
  return getlist_.size();
}
inline void WorldStageItem::clear_getlist() {
  getlist_.Clear();
}
inline ::google::protobuf::uint32 WorldStageItem::getlist(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.WorldStageItem.getList)
  return getlist_.Get(index);
}
inline void WorldStageItem::set_getlist(int index, ::google::protobuf::uint32 value) {
  getlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.WorldStageItem.getList)
}
inline void WorldStageItem::add_getlist(::google::protobuf::uint32 value) {
  getlist_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.WorldStageItem.getList)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
WorldStageItem::getlist() const {
  // @@protoc_insertion_point(field_list:Cmd.WorldStageItem.getList)
  return getlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
WorldStageItem::mutable_getlist() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.WorldStageItem.getList)
  return &getlist_;
}

// -------------------------------------------------------------------

// StageStepItem

// optional uint32 stageid = 1;
inline bool StageStepItem::has_stageid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StageStepItem::set_has_stageid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StageStepItem::clear_has_stageid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StageStepItem::clear_stageid() {
  stageid_ = 0u;
  clear_has_stageid();
}
inline ::google::protobuf::uint32 StageStepItem::stageid() const {
  // @@protoc_insertion_point(field_get:Cmd.StageStepItem.stageid)
  return stageid_;
}
inline void StageStepItem::set_stageid(::google::protobuf::uint32 value) {
  set_has_stageid();
  stageid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StageStepItem.stageid)
}

// optional uint32 stepid = 2;
inline bool StageStepItem::has_stepid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StageStepItem::set_has_stepid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StageStepItem::clear_has_stepid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StageStepItem::clear_stepid() {
  stepid_ = 0u;
  clear_has_stepid();
}
inline ::google::protobuf::uint32 StageStepItem::stepid() const {
  // @@protoc_insertion_point(field_get:Cmd.StageStepItem.stepid)
  return stepid_;
}
inline void StageStepItem::set_stepid(::google::protobuf::uint32 value) {
  set_has_stepid();
  stepid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StageStepItem.stepid)
}

// optional uint32 type = 3;
inline bool StageStepItem::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StageStepItem::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StageStepItem::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StageStepItem::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 StageStepItem::type() const {
  // @@protoc_insertion_point(field_get:Cmd.StageStepItem.type)
  return type_;
}
inline void StageStepItem::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StageStepItem.type)
}

// -------------------------------------------------------------------

// WorldStageUserCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool WorldStageUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldStageUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldStageUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldStageUserCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command WorldStageUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.WorldStageUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void WorldStageUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WorldStageUserCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = WORLD_STAGE_USER_CMD];
inline bool WorldStageUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldStageUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldStageUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldStageUserCmd::clear_param() {
  param_ = 5;
  clear_has_param();
}
inline ::Cmd::FuBenParam WorldStageUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.WorldStageUserCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void WorldStageUserCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.WorldStageUserCmd.param)
}

// repeated .Cmd.WorldStageItem list = 3;
inline int WorldStageUserCmd::list_size() const {
  return list_.size();
}
inline void WorldStageUserCmd::clear_list() {
  list_.Clear();
}
inline const ::Cmd::WorldStageItem& WorldStageUserCmd::list(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.WorldStageUserCmd.list)
  return list_.Get(index);
}
inline ::Cmd::WorldStageItem* WorldStageUserCmd::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.WorldStageUserCmd.list)
  return list_.Mutable(index);
}
inline ::Cmd::WorldStageItem* WorldStageUserCmd::add_list() {
  // @@protoc_insertion_point(field_add:Cmd.WorldStageUserCmd.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::WorldStageItem >&
WorldStageUserCmd::list() const {
  // @@protoc_insertion_point(field_list:Cmd.WorldStageUserCmd.list)
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::WorldStageItem >*
WorldStageUserCmd::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.WorldStageUserCmd.list)
  return &list_;
}

// repeated .Cmd.StageStepItem curinfo = 4;
inline int WorldStageUserCmd::curinfo_size() const {
  return curinfo_.size();
}
inline void WorldStageUserCmd::clear_curinfo() {
  curinfo_.Clear();
}
inline const ::Cmd::StageStepItem& WorldStageUserCmd::curinfo(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.WorldStageUserCmd.curinfo)
  return curinfo_.Get(index);
}
inline ::Cmd::StageStepItem* WorldStageUserCmd::mutable_curinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.WorldStageUserCmd.curinfo)
  return curinfo_.Mutable(index);
}
inline ::Cmd::StageStepItem* WorldStageUserCmd::add_curinfo() {
  // @@protoc_insertion_point(field_add:Cmd.WorldStageUserCmd.curinfo)
  return curinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::StageStepItem >&
WorldStageUserCmd::curinfo() const {
  // @@protoc_insertion_point(field_list:Cmd.WorldStageUserCmd.curinfo)
  return curinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::StageStepItem >*
WorldStageUserCmd::mutable_curinfo() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.WorldStageUserCmd.curinfo)
  return &curinfo_;
}

// -------------------------------------------------------------------

// StageNormalStepItem

// optional uint32 stepid = 1;
inline bool StageNormalStepItem::has_stepid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StageNormalStepItem::set_has_stepid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StageNormalStepItem::clear_has_stepid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StageNormalStepItem::clear_stepid() {
  stepid_ = 0u;
  clear_has_stepid();
}
inline ::google::protobuf::uint32 StageNormalStepItem::stepid() const {
  // @@protoc_insertion_point(field_get:Cmd.StageNormalStepItem.stepid)
  return stepid_;
}
inline void StageNormalStepItem::set_stepid(::google::protobuf::uint32 value) {
  set_has_stepid();
  stepid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StageNormalStepItem.stepid)
}

// optional uint32 star = 2;
inline bool StageNormalStepItem::has_star() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StageNormalStepItem::set_has_star() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StageNormalStepItem::clear_has_star() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StageNormalStepItem::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 StageNormalStepItem::star() const {
  // @@protoc_insertion_point(field_get:Cmd.StageNormalStepItem.star)
  return star_;
}
inline void StageNormalStepItem::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StageNormalStepItem.star)
}

// -------------------------------------------------------------------

// StageHardStepItem

// optional uint32 stepid = 1;
inline bool StageHardStepItem::has_stepid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StageHardStepItem::set_has_stepid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StageHardStepItem::clear_has_stepid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StageHardStepItem::clear_stepid() {
  stepid_ = 0u;
  clear_has_stepid();
}
inline ::google::protobuf::uint32 StageHardStepItem::stepid() const {
  // @@protoc_insertion_point(field_get:Cmd.StageHardStepItem.stepid)
  return stepid_;
}
inline void StageHardStepItem::set_stepid(::google::protobuf::uint32 value) {
  set_has_stepid();
  stepid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StageHardStepItem.stepid)
}

// optional uint32 finish = 2;
inline bool StageHardStepItem::has_finish() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StageHardStepItem::set_has_finish() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StageHardStepItem::clear_has_finish() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StageHardStepItem::clear_finish() {
  finish_ = 0u;
  clear_has_finish();
}
inline ::google::protobuf::uint32 StageHardStepItem::finish() const {
  // @@protoc_insertion_point(field_get:Cmd.StageHardStepItem.finish)
  return finish_;
}
inline void StageHardStepItem::set_finish(::google::protobuf::uint32 value) {
  set_has_finish();
  finish_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StageHardStepItem.finish)
}

// optional uint32 challengeTime = 3;
inline bool StageHardStepItem::has_challengetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StageHardStepItem::set_has_challengetime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StageHardStepItem::clear_has_challengetime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StageHardStepItem::clear_challengetime() {
  challengetime_ = 0u;
  clear_has_challengetime();
}
inline ::google::protobuf::uint32 StageHardStepItem::challengetime() const {
  // @@protoc_insertion_point(field_get:Cmd.StageHardStepItem.challengeTime)
  return challengetime_;
}
inline void StageHardStepItem::set_challengetime(::google::protobuf::uint32 value) {
  set_has_challengetime();
  challengetime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StageHardStepItem.challengeTime)
}

// -------------------------------------------------------------------

// StageStepUserCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool StageStepUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StageStepUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StageStepUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StageStepUserCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command StageStepUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.StageStepUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void StageStepUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StageStepUserCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = SUB_STAGE_USER_CMD];
inline bool StageStepUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StageStepUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StageStepUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StageStepUserCmd::clear_param() {
  param_ = 6;
  clear_has_param();
}
inline ::Cmd::FuBenParam StageStepUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.StageStepUserCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void StageStepUserCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StageStepUserCmd.param)
}

// optional uint32 stageid = 3;
inline bool StageStepUserCmd::has_stageid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StageStepUserCmd::set_has_stageid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StageStepUserCmd::clear_has_stageid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StageStepUserCmd::clear_stageid() {
  stageid_ = 0u;
  clear_has_stageid();
}
inline ::google::protobuf::uint32 StageStepUserCmd::stageid() const {
  // @@protoc_insertion_point(field_get:Cmd.StageStepUserCmd.stageid)
  return stageid_;
}
inline void StageStepUserCmd::set_stageid(::google::protobuf::uint32 value) {
  set_has_stageid();
  stageid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StageStepUserCmd.stageid)
}

// repeated .Cmd.StageNormalStepItem normalist = 4;
inline int StageStepUserCmd::normalist_size() const {
  return normalist_.size();
}
inline void StageStepUserCmd::clear_normalist() {
  normalist_.Clear();
}
inline const ::Cmd::StageNormalStepItem& StageStepUserCmd::normalist(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.StageStepUserCmd.normalist)
  return normalist_.Get(index);
}
inline ::Cmd::StageNormalStepItem* StageStepUserCmd::mutable_normalist(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.StageStepUserCmd.normalist)
  return normalist_.Mutable(index);
}
inline ::Cmd::StageNormalStepItem* StageStepUserCmd::add_normalist() {
  // @@protoc_insertion_point(field_add:Cmd.StageStepUserCmd.normalist)
  return normalist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::StageNormalStepItem >&
StageStepUserCmd::normalist() const {
  // @@protoc_insertion_point(field_list:Cmd.StageStepUserCmd.normalist)
  return normalist_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::StageNormalStepItem >*
StageStepUserCmd::mutable_normalist() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.StageStepUserCmd.normalist)
  return &normalist_;
}

// repeated .Cmd.StageHardStepItem hardlist = 5;
inline int StageStepUserCmd::hardlist_size() const {
  return hardlist_.size();
}
inline void StageStepUserCmd::clear_hardlist() {
  hardlist_.Clear();
}
inline const ::Cmd::StageHardStepItem& StageStepUserCmd::hardlist(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.StageStepUserCmd.hardlist)
  return hardlist_.Get(index);
}
inline ::Cmd::StageHardStepItem* StageStepUserCmd::mutable_hardlist(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.StageStepUserCmd.hardlist)
  return hardlist_.Mutable(index);
}
inline ::Cmd::StageHardStepItem* StageStepUserCmd::add_hardlist() {
  // @@protoc_insertion_point(field_add:Cmd.StageStepUserCmd.hardlist)
  return hardlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::StageHardStepItem >&
StageStepUserCmd::hardlist() const {
  // @@protoc_insertion_point(field_list:Cmd.StageStepUserCmd.hardlist)
  return hardlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::StageHardStepItem >*
StageStepUserCmd::mutable_hardlist() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.StageStepUserCmd.hardlist)
  return &hardlist_;
}

// -------------------------------------------------------------------

// StartStageUserCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool StartStageUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartStageUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartStageUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartStageUserCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command StartStageUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.StartStageUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void StartStageUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartStageUserCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = START_STAGE_USER_CMD];
inline bool StartStageUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StartStageUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StartStageUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StartStageUserCmd::clear_param() {
  param_ = 7;
  clear_has_param();
}
inline ::Cmd::FuBenParam StartStageUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.StartStageUserCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void StartStageUserCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartStageUserCmd.param)
}

// optional uint32 stageid = 3;
inline bool StartStageUserCmd::has_stageid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StartStageUserCmd::set_has_stageid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StartStageUserCmd::clear_has_stageid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StartStageUserCmd::clear_stageid() {
  stageid_ = 0u;
  clear_has_stageid();
}
inline ::google::protobuf::uint32 StartStageUserCmd::stageid() const {
  // @@protoc_insertion_point(field_get:Cmd.StartStageUserCmd.stageid)
  return stageid_;
}
inline void StartStageUserCmd::set_stageid(::google::protobuf::uint32 value) {
  set_has_stageid();
  stageid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartStageUserCmd.stageid)
}

// optional uint32 stepid = 4;
inline bool StartStageUserCmd::has_stepid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StartStageUserCmd::set_has_stepid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StartStageUserCmd::clear_has_stepid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StartStageUserCmd::clear_stepid() {
  stepid_ = 0u;
  clear_has_stepid();
}
inline ::google::protobuf::uint32 StartStageUserCmd::stepid() const {
  // @@protoc_insertion_point(field_get:Cmd.StartStageUserCmd.stepid)
  return stepid_;
}
inline void StartStageUserCmd::set_stepid(::google::protobuf::uint32 value) {
  set_has_stepid();
  stepid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartStageUserCmd.stepid)
}

// optional uint32 type = 5;
inline bool StartStageUserCmd::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StartStageUserCmd::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StartStageUserCmd::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StartStageUserCmd::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 StartStageUserCmd::type() const {
  // @@protoc_insertion_point(field_get:Cmd.StartStageUserCmd.type)
  return type_;
}
inline void StartStageUserCmd::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartStageUserCmd.type)
}

// -------------------------------------------------------------------

// GetRewardStageUserCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool GetRewardStageUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRewardStageUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRewardStageUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRewardStageUserCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command GetRewardStageUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GetRewardStageUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GetRewardStageUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetRewardStageUserCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = GET_REWARD_STAGE_USER_CMD];
inline bool GetRewardStageUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetRewardStageUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetRewardStageUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetRewardStageUserCmd::clear_param() {
  param_ = 8;
  clear_has_param();
}
inline ::Cmd::FuBenParam GetRewardStageUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GetRewardStageUserCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void GetRewardStageUserCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetRewardStageUserCmd.param)
}

// optional uint32 stageid = 3;
inline bool GetRewardStageUserCmd::has_stageid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetRewardStageUserCmd::set_has_stageid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetRewardStageUserCmd::clear_has_stageid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetRewardStageUserCmd::clear_stageid() {
  stageid_ = 0u;
  clear_has_stageid();
}
inline ::google::protobuf::uint32 GetRewardStageUserCmd::stageid() const {
  // @@protoc_insertion_point(field_get:Cmd.GetRewardStageUserCmd.stageid)
  return stageid_;
}
inline void GetRewardStageUserCmd::set_stageid(::google::protobuf::uint32 value) {
  set_has_stageid();
  stageid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetRewardStageUserCmd.stageid)
}

// optional uint32 starid = 4;
inline bool GetRewardStageUserCmd::has_starid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetRewardStageUserCmd::set_has_starid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetRewardStageUserCmd::clear_has_starid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetRewardStageUserCmd::clear_starid() {
  starid_ = 0u;
  clear_has_starid();
}
inline ::google::protobuf::uint32 GetRewardStageUserCmd::starid() const {
  // @@protoc_insertion_point(field_get:Cmd.GetRewardStageUserCmd.starid)
  return starid_;
}
inline void GetRewardStageUserCmd::set_starid(::google::protobuf::uint32 value) {
  set_has_starid();
  starid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetRewardStageUserCmd.starid)
}

// -------------------------------------------------------------------

// StageStepStarUserCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool StageStepStarUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StageStepStarUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StageStepStarUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StageStepStarUserCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command StageStepStarUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.StageStepStarUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void StageStepStarUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StageStepStarUserCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = STAGE_STEP_STAR_USER_CMD];
inline bool StageStepStarUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StageStepStarUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StageStepStarUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StageStepStarUserCmd::clear_param() {
  param_ = 9;
  clear_has_param();
}
inline ::Cmd::FuBenParam StageStepStarUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.StageStepStarUserCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void StageStepStarUserCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StageStepStarUserCmd.param)
}

// optional uint32 stageid = 3;
inline bool StageStepStarUserCmd::has_stageid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StageStepStarUserCmd::set_has_stageid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StageStepStarUserCmd::clear_has_stageid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StageStepStarUserCmd::clear_stageid() {
  stageid_ = 0u;
  clear_has_stageid();
}
inline ::google::protobuf::uint32 StageStepStarUserCmd::stageid() const {
  // @@protoc_insertion_point(field_get:Cmd.StageStepStarUserCmd.stageid)
  return stageid_;
}
inline void StageStepStarUserCmd::set_stageid(::google::protobuf::uint32 value) {
  set_has_stageid();
  stageid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StageStepStarUserCmd.stageid)
}

// optional uint32 stepid = 4;
inline bool StageStepStarUserCmd::has_stepid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StageStepStarUserCmd::set_has_stepid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StageStepStarUserCmd::clear_has_stepid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StageStepStarUserCmd::clear_stepid() {
  stepid_ = 0u;
  clear_has_stepid();
}
inline ::google::protobuf::uint32 StageStepStarUserCmd::stepid() const {
  // @@protoc_insertion_point(field_get:Cmd.StageStepStarUserCmd.stepid)
  return stepid_;
}
inline void StageStepStarUserCmd::set_stepid(::google::protobuf::uint32 value) {
  set_has_stepid();
  stepid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StageStepStarUserCmd.stepid)
}

// optional uint32 star = 5;
inline bool StageStepStarUserCmd::has_star() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StageStepStarUserCmd::set_has_star() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StageStepStarUserCmd::clear_has_star() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StageStepStarUserCmd::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 StageStepStarUserCmd::star() const {
  // @@protoc_insertion_point(field_get:Cmd.StageStepStarUserCmd.star)
  return star_;
}
inline void StageStepStarUserCmd::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StageStepStarUserCmd.star)
}

// optional uint32 type = 6;
inline bool StageStepStarUserCmd::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StageStepStarUserCmd::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void StageStepStarUserCmd::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void StageStepStarUserCmd::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 StageStepStarUserCmd::type() const {
  // @@protoc_insertion_point(field_get:Cmd.StageStepStarUserCmd.type)
  return type_;
}
inline void StageStepStarUserCmd::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StageStepStarUserCmd.type)
}

// -------------------------------------------------------------------

// MonsterCountUserCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool MonsterCountUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MonsterCountUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MonsterCountUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MonsterCountUserCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command MonsterCountUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.MonsterCountUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void MonsterCountUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MonsterCountUserCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = MONSTER_COUNT_USER_CMD];
inline bool MonsterCountUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MonsterCountUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MonsterCountUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MonsterCountUserCmd::clear_param() {
  param_ = 11;
  clear_has_param();
}
inline ::Cmd::FuBenParam MonsterCountUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.MonsterCountUserCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void MonsterCountUserCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MonsterCountUserCmd.param)
}

// optional uint32 num = 3;
inline bool MonsterCountUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MonsterCountUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MonsterCountUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MonsterCountUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 MonsterCountUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Cmd.MonsterCountUserCmd.num)
  return num_;
}
inline void MonsterCountUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MonsterCountUserCmd.num)
}

// -------------------------------------------------------------------

// FubenStepSyncCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool FubenStepSyncCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FubenStepSyncCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FubenStepSyncCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FubenStepSyncCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command FubenStepSyncCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.FubenStepSyncCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void FubenStepSyncCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FubenStepSyncCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = FUBEN_STEP_SYNC];
inline bool FubenStepSyncCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FubenStepSyncCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FubenStepSyncCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FubenStepSyncCmd::clear_param() {
  param_ = 12;
  clear_has_param();
}
inline ::Cmd::FuBenParam FubenStepSyncCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.FubenStepSyncCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void FubenStepSyncCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FubenStepSyncCmd.param)
}

// optional uint32 id = 3 [default = 0];
inline bool FubenStepSyncCmd::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FubenStepSyncCmd::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FubenStepSyncCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FubenStepSyncCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 FubenStepSyncCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.FubenStepSyncCmd.id)
  return id_;
}
inline void FubenStepSyncCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FubenStepSyncCmd.id)
}

// optional bool del = 4 [default = false];
inline bool FubenStepSyncCmd::has_del() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FubenStepSyncCmd::set_has_del() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FubenStepSyncCmd::clear_has_del() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FubenStepSyncCmd::clear_del() {
  del_ = false;
  clear_has_del();
}
inline bool FubenStepSyncCmd::del() const {
  // @@protoc_insertion_point(field_get:Cmd.FubenStepSyncCmd.del)
  return del_;
}
inline void FubenStepSyncCmd::set_del(bool value) {
  set_has_del();
  del_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FubenStepSyncCmd.del)
}

// optional .Cmd.RaidPConfig config = 5;
inline bool FubenStepSyncCmd::has_config() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FubenStepSyncCmd::set_has_config() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FubenStepSyncCmd::clear_has_config() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FubenStepSyncCmd::clear_config() {
  if (config_ != NULL) config_->::Cmd::RaidPConfig::Clear();
  clear_has_config();
}
inline const ::Cmd::RaidPConfig& FubenStepSyncCmd::config() const {
  // @@protoc_insertion_point(field_get:Cmd.FubenStepSyncCmd.config)
  return config_ != NULL ? *config_ : *default_instance_->config_;
}
inline ::Cmd::RaidPConfig* FubenStepSyncCmd::mutable_config() {
  set_has_config();
  if (config_ == NULL) config_ = new ::Cmd::RaidPConfig;
  // @@protoc_insertion_point(field_mutable:Cmd.FubenStepSyncCmd.config)
  return config_;
}
inline ::Cmd::RaidPConfig* FubenStepSyncCmd::release_config() {
  clear_has_config();
  ::Cmd::RaidPConfig* temp = config_;
  config_ = NULL;
  return temp;
}
inline void FubenStepSyncCmd::set_allocated_config(::Cmd::RaidPConfig* config) {
  delete config_;
  config_ = config;
  if (config) {
    set_has_config();
  } else {
    clear_has_config();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.FubenStepSyncCmd.config)
}

// -------------------------------------------------------------------

// FuBenProgressSyncCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool FuBenProgressSyncCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FuBenProgressSyncCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FuBenProgressSyncCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FuBenProgressSyncCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command FuBenProgressSyncCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.FuBenProgressSyncCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void FuBenProgressSyncCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FuBenProgressSyncCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = FUBEN_GOAL_SYNC];
inline bool FuBenProgressSyncCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FuBenProgressSyncCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FuBenProgressSyncCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FuBenProgressSyncCmd::clear_param() {
  param_ = 13;
  clear_has_param();
}
inline ::Cmd::FuBenParam FuBenProgressSyncCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.FuBenProgressSyncCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void FuBenProgressSyncCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FuBenProgressSyncCmd.param)
}

// optional uint32 id = 3 [default = 0];
inline bool FuBenProgressSyncCmd::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FuBenProgressSyncCmd::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FuBenProgressSyncCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FuBenProgressSyncCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 FuBenProgressSyncCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.FuBenProgressSyncCmd.id)
  return id_;
}
inline void FuBenProgressSyncCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FuBenProgressSyncCmd.id)
}

// optional uint32 progress = 4 [default = 0];
inline bool FuBenProgressSyncCmd::has_progress() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FuBenProgressSyncCmd::set_has_progress() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FuBenProgressSyncCmd::clear_has_progress() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FuBenProgressSyncCmd::clear_progress() {
  progress_ = 0u;
  clear_has_progress();
}
inline ::google::protobuf::uint32 FuBenProgressSyncCmd::progress() const {
  // @@protoc_insertion_point(field_get:Cmd.FuBenProgressSyncCmd.progress)
  return progress_;
}
inline void FuBenProgressSyncCmd::set_progress(::google::protobuf::uint32 value) {
  set_has_progress();
  progress_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FuBenProgressSyncCmd.progress)
}

// -------------------------------------------------------------------

// FuBenClearInfoCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool FuBenClearInfoCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FuBenClearInfoCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FuBenClearInfoCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FuBenClearInfoCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command FuBenClearInfoCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.FuBenClearInfoCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void FuBenClearInfoCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FuBenClearInfoCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = FUBEN_CLEAR_SYNC];
inline bool FuBenClearInfoCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FuBenClearInfoCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FuBenClearInfoCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FuBenClearInfoCmd::clear_param() {
  param_ = 15;
  clear_has_param();
}
inline ::Cmd::FuBenParam FuBenClearInfoCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.FuBenClearInfoCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void FuBenClearInfoCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FuBenClearInfoCmd.param)
}

// -------------------------------------------------------------------

// GuildGateData

// required uint64 gatenpcid = 1;
inline bool GuildGateData::has_gatenpcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildGateData::set_has_gatenpcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildGateData::clear_has_gatenpcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildGateData::clear_gatenpcid() {
  gatenpcid_ = GOOGLE_ULONGLONG(0);
  clear_has_gatenpcid();
}
inline ::google::protobuf::uint64 GuildGateData::gatenpcid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildGateData.gatenpcid)
  return gatenpcid_;
}
inline void GuildGateData::set_gatenpcid(::google::protobuf::uint64 value) {
  set_has_gatenpcid();
  gatenpcid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildGateData.gatenpcid)
}

// optional uint32 killedbossnum = 2 [default = 0];
inline bool GuildGateData::has_killedbossnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildGateData::set_has_killedbossnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildGateData::clear_has_killedbossnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildGateData::clear_killedbossnum() {
  killedbossnum_ = 0u;
  clear_has_killedbossnum();
}
inline ::google::protobuf::uint32 GuildGateData::killedbossnum() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildGateData.killedbossnum)
  return killedbossnum_;
}
inline void GuildGateData::set_killedbossnum(::google::protobuf::uint32 value) {
  set_has_killedbossnum();
  killedbossnum_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildGateData.killedbossnum)
}

// optional uint32 groupindex = 3 [default = 0];
inline bool GuildGateData::has_groupindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildGateData::set_has_groupindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildGateData::clear_has_groupindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildGateData::clear_groupindex() {
  groupindex_ = 0u;
  clear_has_groupindex();
}
inline ::google::protobuf::uint32 GuildGateData::groupindex() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildGateData.groupindex)
  return groupindex_;
}
inline void GuildGateData::set_groupindex(::google::protobuf::uint32 value) {
  set_has_groupindex();
  groupindex_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildGateData.groupindex)
}

// optional uint32 closetime = 4 [default = 0];
inline bool GuildGateData::has_closetime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildGateData::set_has_closetime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildGateData::clear_has_closetime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildGateData::clear_closetime() {
  closetime_ = 0u;
  clear_has_closetime();
}
inline ::google::protobuf::uint32 GuildGateData::closetime() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildGateData.closetime)
  return closetime_;
}
inline void GuildGateData::set_closetime(::google::protobuf::uint32 value) {
  set_has_closetime();
  closetime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildGateData.closetime)
}

// optional uint32 level = 5 [default = 0];
inline bool GuildGateData::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildGateData::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildGateData::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildGateData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 GuildGateData::level() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildGateData.level)
  return level_;
}
inline void GuildGateData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildGateData.level)
}

// optional bool isspecial = 6 [default = false];
inline bool GuildGateData::has_isspecial() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildGateData::set_has_isspecial() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildGateData::clear_has_isspecial() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildGateData::clear_isspecial() {
  isspecial_ = false;
  clear_has_isspecial();
}
inline bool GuildGateData::isspecial() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildGateData.isspecial)
  return isspecial_;
}
inline void GuildGateData::set_isspecial(bool value) {
  set_has_isspecial();
  isspecial_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildGateData.isspecial)
}

// optional .Cmd.EGuildGateState state = 7 [default = EGUILDGATESTATE_LOCK];
inline bool GuildGateData::has_state() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildGateData::set_has_state() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildGateData::clear_has_state() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildGateData::clear_state() {
  state_ = 1;
  clear_has_state();
}
inline ::Cmd::EGuildGateState GuildGateData::state() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildGateData.state)
  return static_cast< ::Cmd::EGuildGateState >(state_);
}
inline void GuildGateData::set_state(::Cmd::EGuildGateState value) {
  assert(::Cmd::EGuildGateState_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildGateData.state)
}

// -------------------------------------------------------------------

// UserGuildRaidFubenCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool UserGuildRaidFubenCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserGuildRaidFubenCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserGuildRaidFubenCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserGuildRaidFubenCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command UserGuildRaidFubenCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UserGuildRaidFubenCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UserGuildRaidFubenCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserGuildRaidFubenCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = GUILD_RAID_USER_INFO];
inline bool UserGuildRaidFubenCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserGuildRaidFubenCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserGuildRaidFubenCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserGuildRaidFubenCmd::clear_param() {
  param_ = 16;
  clear_has_param();
}
inline ::Cmd::FuBenParam UserGuildRaidFubenCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UserGuildRaidFubenCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void UserGuildRaidFubenCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UserGuildRaidFubenCmd.param)
}

// repeated .Cmd.GuildGateData gatedata = 3;
inline int UserGuildRaidFubenCmd::gatedata_size() const {
  return gatedata_.size();
}
inline void UserGuildRaidFubenCmd::clear_gatedata() {
  gatedata_.Clear();
}
inline const ::Cmd::GuildGateData& UserGuildRaidFubenCmd::gatedata(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UserGuildRaidFubenCmd.gatedata)
  return gatedata_.Get(index);
}
inline ::Cmd::GuildGateData* UserGuildRaidFubenCmd::mutable_gatedata(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.UserGuildRaidFubenCmd.gatedata)
  return gatedata_.Mutable(index);
}
inline ::Cmd::GuildGateData* UserGuildRaidFubenCmd::add_gatedata() {
  // @@protoc_insertion_point(field_add:Cmd.UserGuildRaidFubenCmd.gatedata)
  return gatedata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GuildGateData >&
UserGuildRaidFubenCmd::gatedata() const {
  // @@protoc_insertion_point(field_list:Cmd.UserGuildRaidFubenCmd.gatedata)
  return gatedata_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GuildGateData >*
UserGuildRaidFubenCmd::mutable_gatedata() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UserGuildRaidFubenCmd.gatedata)
  return &gatedata_;
}

// -------------------------------------------------------------------

// GuildGateOptCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool GuildGateOptCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildGateOptCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildGateOptCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildGateOptCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command GuildGateOptCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildGateOptCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildGateOptCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildGateOptCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = GUILD_RAID_GATE_OPT];
inline bool GuildGateOptCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildGateOptCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildGateOptCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildGateOptCmd::clear_param() {
  param_ = 17;
  clear_has_param();
}
inline ::Cmd::FuBenParam GuildGateOptCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildGateOptCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void GuildGateOptCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildGateOptCmd.param)
}

// optional uint64 gatenpcid = 3;
inline bool GuildGateOptCmd::has_gatenpcid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildGateOptCmd::set_has_gatenpcid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildGateOptCmd::clear_has_gatenpcid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildGateOptCmd::clear_gatenpcid() {
  gatenpcid_ = GOOGLE_ULONGLONG(0);
  clear_has_gatenpcid();
}
inline ::google::protobuf::uint64 GuildGateOptCmd::gatenpcid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildGateOptCmd.gatenpcid)
  return gatenpcid_;
}
inline void GuildGateOptCmd::set_gatenpcid(::google::protobuf::uint64 value) {
  set_has_gatenpcid();
  gatenpcid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildGateOptCmd.gatenpcid)
}

// optional .Cmd.EGuildGateOpt opt = 4;
inline bool GuildGateOptCmd::has_opt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildGateOptCmd::set_has_opt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildGateOptCmd::clear_has_opt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildGateOptCmd::clear_opt() {
  opt_ = 1;
  clear_has_opt();
}
inline ::Cmd::EGuildGateOpt GuildGateOptCmd::opt() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildGateOptCmd.opt)
  return static_cast< ::Cmd::EGuildGateOpt >(opt_);
}
inline void GuildGateOptCmd::set_opt(::Cmd::EGuildGateOpt value) {
  assert(::Cmd::EGuildGateOpt_IsValid(value));
  set_has_opt();
  opt_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildGateOptCmd.opt)
}

// optional uint32 uplocklevel = 5 [default = 0];
inline bool GuildGateOptCmd::has_uplocklevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildGateOptCmd::set_has_uplocklevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildGateOptCmd::clear_has_uplocklevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildGateOptCmd::clear_uplocklevel() {
  uplocklevel_ = 0u;
  clear_has_uplocklevel();
}
inline ::google::protobuf::uint32 GuildGateOptCmd::uplocklevel() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildGateOptCmd.uplocklevel)
  return uplocklevel_;
}
inline void GuildGateOptCmd::set_uplocklevel(::google::protobuf::uint32 value) {
  set_has_uplocklevel();
  uplocklevel_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildGateOptCmd.uplocklevel)
}

// -------------------------------------------------------------------

// GuildFireInfoFubenCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool GuildFireInfoFubenCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildFireInfoFubenCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildFireInfoFubenCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildFireInfoFubenCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command GuildFireInfoFubenCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireInfoFubenCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildFireInfoFubenCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireInfoFubenCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = GUILD_FIRE_INFO];
inline bool GuildFireInfoFubenCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildFireInfoFubenCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildFireInfoFubenCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildFireInfoFubenCmd::clear_param() {
  param_ = 18;
  clear_has_param();
}
inline ::Cmd::FuBenParam GuildFireInfoFubenCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireInfoFubenCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void GuildFireInfoFubenCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireInfoFubenCmd.param)
}

// optional bool fire = 3 [default = false];
inline bool GuildFireInfoFubenCmd::has_fire() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildFireInfoFubenCmd::set_has_fire() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildFireInfoFubenCmd::clear_has_fire() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildFireInfoFubenCmd::clear_fire() {
  fire_ = false;
  clear_has_fire();
}
inline bool GuildFireInfoFubenCmd::fire() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireInfoFubenCmd.fire)
  return fire_;
}
inline void GuildFireInfoFubenCmd::set_fire(bool value) {
  set_has_fire();
  fire_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireInfoFubenCmd.fire)
}

// optional uint64 def_guildid = 4 [default = 0];
inline bool GuildFireInfoFubenCmd::has_def_guildid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildFireInfoFubenCmd::set_has_def_guildid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildFireInfoFubenCmd::clear_has_def_guildid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildFireInfoFubenCmd::clear_def_guildid() {
  def_guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_def_guildid();
}
inline ::google::protobuf::uint64 GuildFireInfoFubenCmd::def_guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireInfoFubenCmd.def_guildid)
  return def_guildid_;
}
inline void GuildFireInfoFubenCmd::set_def_guildid(::google::protobuf::uint64 value) {
  set_has_def_guildid();
  def_guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireInfoFubenCmd.def_guildid)
}

// optional uint32 endfire_time = 5 [default = 0];
inline bool GuildFireInfoFubenCmd::has_endfire_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildFireInfoFubenCmd::set_has_endfire_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildFireInfoFubenCmd::clear_has_endfire_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildFireInfoFubenCmd::clear_endfire_time() {
  endfire_time_ = 0u;
  clear_has_endfire_time();
}
inline ::google::protobuf::uint32 GuildFireInfoFubenCmd::endfire_time() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireInfoFubenCmd.endfire_time)
  return endfire_time_;
}
inline void GuildFireInfoFubenCmd::set_endfire_time(::google::protobuf::uint32 value) {
  set_has_endfire_time();
  endfire_time_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireInfoFubenCmd.endfire_time)
}

// optional bool danger = 6 [default = false];
inline bool GuildFireInfoFubenCmd::has_danger() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildFireInfoFubenCmd::set_has_danger() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildFireInfoFubenCmd::clear_has_danger() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildFireInfoFubenCmd::clear_danger() {
  danger_ = false;
  clear_has_danger();
}
inline bool GuildFireInfoFubenCmd::danger() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireInfoFubenCmd.danger)
  return danger_;
}
inline void GuildFireInfoFubenCmd::set_danger(bool value) {
  set_has_danger();
  danger_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireInfoFubenCmd.danger)
}

// optional uint32 danger_time = 7 [default = 0];
inline bool GuildFireInfoFubenCmd::has_danger_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildFireInfoFubenCmd::set_has_danger_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildFireInfoFubenCmd::clear_has_danger_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildFireInfoFubenCmd::clear_danger_time() {
  danger_time_ = 0u;
  clear_has_danger_time();
}
inline ::google::protobuf::uint32 GuildFireInfoFubenCmd::danger_time() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireInfoFubenCmd.danger_time)
  return danger_time_;
}
inline void GuildFireInfoFubenCmd::set_danger_time(::google::protobuf::uint32 value) {
  set_has_danger_time();
  danger_time_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireInfoFubenCmd.danger_time)
}

// optional uint32 metal_hpper = 8 [default = 0];
inline bool GuildFireInfoFubenCmd::has_metal_hpper() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuildFireInfoFubenCmd::set_has_metal_hpper() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuildFireInfoFubenCmd::clear_has_metal_hpper() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuildFireInfoFubenCmd::clear_metal_hpper() {
  metal_hpper_ = 0u;
  clear_has_metal_hpper();
}
inline ::google::protobuf::uint32 GuildFireInfoFubenCmd::metal_hpper() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireInfoFubenCmd.metal_hpper)
  return metal_hpper_;
}
inline void GuildFireInfoFubenCmd::set_metal_hpper(::google::protobuf::uint32 value) {
  set_has_metal_hpper();
  metal_hpper_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireInfoFubenCmd.metal_hpper)
}

// optional bool calmdown = 9 [default = false];
inline bool GuildFireInfoFubenCmd::has_calmdown() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GuildFireInfoFubenCmd::set_has_calmdown() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GuildFireInfoFubenCmd::clear_has_calmdown() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GuildFireInfoFubenCmd::clear_calmdown() {
  calmdown_ = false;
  clear_has_calmdown();
}
inline bool GuildFireInfoFubenCmd::calmdown() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireInfoFubenCmd.calmdown)
  return calmdown_;
}
inline void GuildFireInfoFubenCmd::set_calmdown(bool value) {
  set_has_calmdown();
  calmdown_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireInfoFubenCmd.calmdown)
}

// optional uint32 calm_time = 10 [default = 0];
inline bool GuildFireInfoFubenCmd::has_calm_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GuildFireInfoFubenCmd::set_has_calm_time() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GuildFireInfoFubenCmd::clear_has_calm_time() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GuildFireInfoFubenCmd::clear_calm_time() {
  calm_time_ = 0u;
  clear_has_calm_time();
}
inline ::google::protobuf::uint32 GuildFireInfoFubenCmd::calm_time() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireInfoFubenCmd.calm_time)
  return calm_time_;
}
inline void GuildFireInfoFubenCmd::set_calm_time(::google::protobuf::uint32 value) {
  set_has_calm_time();
  calm_time_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireInfoFubenCmd.calm_time)
}

// optional string def_guildname = 11;
inline bool GuildFireInfoFubenCmd::has_def_guildname() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GuildFireInfoFubenCmd::set_has_def_guildname() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GuildFireInfoFubenCmd::clear_has_def_guildname() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GuildFireInfoFubenCmd::clear_def_guildname() {
  if (def_guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    def_guildname_->clear();
  }
  clear_has_def_guildname();
}
inline const ::std::string& GuildFireInfoFubenCmd::def_guildname() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireInfoFubenCmd.def_guildname)
  return *def_guildname_;
}
inline void GuildFireInfoFubenCmd::set_def_guildname(const ::std::string& value) {
  set_has_def_guildname();
  if (def_guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    def_guildname_ = new ::std::string;
  }
  def_guildname_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildFireInfoFubenCmd.def_guildname)
}
inline void GuildFireInfoFubenCmd::set_def_guildname(const char* value) {
  set_has_def_guildname();
  if (def_guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    def_guildname_ = new ::std::string;
  }
  def_guildname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildFireInfoFubenCmd.def_guildname)
}
inline void GuildFireInfoFubenCmd::set_def_guildname(const char* value, size_t size) {
  set_has_def_guildname();
  if (def_guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    def_guildname_ = new ::std::string;
  }
  def_guildname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildFireInfoFubenCmd.def_guildname)
}
inline ::std::string* GuildFireInfoFubenCmd::mutable_def_guildname() {
  set_has_def_guildname();
  if (def_guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    def_guildname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildFireInfoFubenCmd.def_guildname)
  return def_guildname_;
}
inline ::std::string* GuildFireInfoFubenCmd::release_def_guildname() {
  clear_has_def_guildname();
  if (def_guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = def_guildname_;
    def_guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildFireInfoFubenCmd::set_allocated_def_guildname(::std::string* def_guildname) {
  if (def_guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete def_guildname_;
  }
  if (def_guildname) {
    set_has_def_guildname();
    def_guildname_ = def_guildname;
  } else {
    clear_has_def_guildname();
    def_guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildFireInfoFubenCmd.def_guildname)
}

// optional bool def_perfect = 12 [default = false];
inline bool GuildFireInfoFubenCmd::has_def_perfect() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GuildFireInfoFubenCmd::set_has_def_perfect() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GuildFireInfoFubenCmd::clear_has_def_perfect() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GuildFireInfoFubenCmd::clear_def_perfect() {
  def_perfect_ = false;
  clear_has_def_perfect();
}
inline bool GuildFireInfoFubenCmd::def_perfect() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireInfoFubenCmd.def_perfect)
  return def_perfect_;
}
inline void GuildFireInfoFubenCmd::set_def_perfect(bool value) {
  set_has_def_perfect();
  def_perfect_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireInfoFubenCmd.def_perfect)
}

// -------------------------------------------------------------------

// GuildFireStopFubenCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool GuildFireStopFubenCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildFireStopFubenCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildFireStopFubenCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildFireStopFubenCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command GuildFireStopFubenCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireStopFubenCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildFireStopFubenCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireStopFubenCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = GUILD_FIRE_STOP];
inline bool GuildFireStopFubenCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildFireStopFubenCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildFireStopFubenCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildFireStopFubenCmd::clear_param() {
  param_ = 19;
  clear_has_param();
}
inline ::Cmd::FuBenParam GuildFireStopFubenCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireStopFubenCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void GuildFireStopFubenCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireStopFubenCmd.param)
}

// required .Cmd.EGuildFireResult result = 3;
inline bool GuildFireStopFubenCmd::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildFireStopFubenCmd::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildFireStopFubenCmd::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildFireStopFubenCmd::clear_result() {
  result_ = 1;
  clear_has_result();
}
inline ::Cmd::EGuildFireResult GuildFireStopFubenCmd::result() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireStopFubenCmd.result)
  return static_cast< ::Cmd::EGuildFireResult >(result_);
}
inline void GuildFireStopFubenCmd::set_result(::Cmd::EGuildFireResult value) {
  assert(::Cmd::EGuildFireResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireStopFubenCmd.result)
}

// -------------------------------------------------------------------

// GuildFireDangerFubenCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool GuildFireDangerFubenCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildFireDangerFubenCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildFireDangerFubenCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildFireDangerFubenCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command GuildFireDangerFubenCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireDangerFubenCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildFireDangerFubenCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireDangerFubenCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = GUILD_FIRE_DANGER];
inline bool GuildFireDangerFubenCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildFireDangerFubenCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildFireDangerFubenCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildFireDangerFubenCmd::clear_param() {
  param_ = 20;
  clear_has_param();
}
inline ::Cmd::FuBenParam GuildFireDangerFubenCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireDangerFubenCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void GuildFireDangerFubenCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireDangerFubenCmd.param)
}

// optional bool danger = 3 [default = false];
inline bool GuildFireDangerFubenCmd::has_danger() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildFireDangerFubenCmd::set_has_danger() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildFireDangerFubenCmd::clear_has_danger() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildFireDangerFubenCmd::clear_danger() {
  danger_ = false;
  clear_has_danger();
}
inline bool GuildFireDangerFubenCmd::danger() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireDangerFubenCmd.danger)
  return danger_;
}
inline void GuildFireDangerFubenCmd::set_danger(bool value) {
  set_has_danger();
  danger_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireDangerFubenCmd.danger)
}

// optional uint32 danger_time = 4 [default = 0];
inline bool GuildFireDangerFubenCmd::has_danger_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildFireDangerFubenCmd::set_has_danger_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildFireDangerFubenCmd::clear_has_danger_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildFireDangerFubenCmd::clear_danger_time() {
  danger_time_ = 0u;
  clear_has_danger_time();
}
inline ::google::protobuf::uint32 GuildFireDangerFubenCmd::danger_time() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireDangerFubenCmd.danger_time)
  return danger_time_;
}
inline void GuildFireDangerFubenCmd::set_danger_time(::google::protobuf::uint32 value) {
  set_has_danger_time();
  danger_time_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireDangerFubenCmd.danger_time)
}

// -------------------------------------------------------------------

// GuildFireMetalHpFubenCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool GuildFireMetalHpFubenCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildFireMetalHpFubenCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildFireMetalHpFubenCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildFireMetalHpFubenCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command GuildFireMetalHpFubenCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireMetalHpFubenCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildFireMetalHpFubenCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireMetalHpFubenCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = GUILD_FIRE_METALHP];
inline bool GuildFireMetalHpFubenCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildFireMetalHpFubenCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildFireMetalHpFubenCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildFireMetalHpFubenCmd::clear_param() {
  param_ = 21;
  clear_has_param();
}
inline ::Cmd::FuBenParam GuildFireMetalHpFubenCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireMetalHpFubenCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void GuildFireMetalHpFubenCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireMetalHpFubenCmd.param)
}

// optional uint32 hpper = 3 [default = 0];
inline bool GuildFireMetalHpFubenCmd::has_hpper() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildFireMetalHpFubenCmd::set_has_hpper() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildFireMetalHpFubenCmd::clear_has_hpper() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildFireMetalHpFubenCmd::clear_hpper() {
  hpper_ = 0u;
  clear_has_hpper();
}
inline ::google::protobuf::uint32 GuildFireMetalHpFubenCmd::hpper() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireMetalHpFubenCmd.hpper)
  return hpper_;
}
inline void GuildFireMetalHpFubenCmd::set_hpper(::google::protobuf::uint32 value) {
  set_has_hpper();
  hpper_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireMetalHpFubenCmd.hpper)
}

// -------------------------------------------------------------------

// GuildFireCalmFubenCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool GuildFireCalmFubenCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildFireCalmFubenCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildFireCalmFubenCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildFireCalmFubenCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command GuildFireCalmFubenCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireCalmFubenCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildFireCalmFubenCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireCalmFubenCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = GUILD_FIRE_CALM];
inline bool GuildFireCalmFubenCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildFireCalmFubenCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildFireCalmFubenCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildFireCalmFubenCmd::clear_param() {
  param_ = 22;
  clear_has_param();
}
inline ::Cmd::FuBenParam GuildFireCalmFubenCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireCalmFubenCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void GuildFireCalmFubenCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireCalmFubenCmd.param)
}

// optional bool calm = 3 [default = false];
inline bool GuildFireCalmFubenCmd::has_calm() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildFireCalmFubenCmd::set_has_calm() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildFireCalmFubenCmd::clear_has_calm() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildFireCalmFubenCmd::clear_calm() {
  calm_ = false;
  clear_has_calm();
}
inline bool GuildFireCalmFubenCmd::calm() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireCalmFubenCmd.calm)
  return calm_;
}
inline void GuildFireCalmFubenCmd::set_calm(bool value) {
  set_has_calm();
  calm_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireCalmFubenCmd.calm)
}

// -------------------------------------------------------------------

// GuildFireNewDefFubenCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool GuildFireNewDefFubenCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildFireNewDefFubenCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildFireNewDefFubenCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildFireNewDefFubenCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command GuildFireNewDefFubenCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireNewDefFubenCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildFireNewDefFubenCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireNewDefFubenCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = GUILD_FIRE_CHANGE_GUILD];
inline bool GuildFireNewDefFubenCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildFireNewDefFubenCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildFireNewDefFubenCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildFireNewDefFubenCmd::clear_param() {
  param_ = 23;
  clear_has_param();
}
inline ::Cmd::FuBenParam GuildFireNewDefFubenCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireNewDefFubenCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void GuildFireNewDefFubenCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireNewDefFubenCmd.param)
}

// optional uint64 guildid = 3 [default = 0];
inline bool GuildFireNewDefFubenCmd::has_guildid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildFireNewDefFubenCmd::set_has_guildid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildFireNewDefFubenCmd::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildFireNewDefFubenCmd::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 GuildFireNewDefFubenCmd::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireNewDefFubenCmd.guildid)
  return guildid_;
}
inline void GuildFireNewDefFubenCmd::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireNewDefFubenCmd.guildid)
}

// optional string guildname = 4;
inline bool GuildFireNewDefFubenCmd::has_guildname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildFireNewDefFubenCmd::set_has_guildname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildFireNewDefFubenCmd::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildFireNewDefFubenCmd::clear_guildname() {
  if (guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_->clear();
  }
  clear_has_guildname();
}
inline const ::std::string& GuildFireNewDefFubenCmd::guildname() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireNewDefFubenCmd.guildname)
  return *guildname_;
}
inline void GuildFireNewDefFubenCmd::set_guildname(const ::std::string& value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GuildFireNewDefFubenCmd.guildname)
}
inline void GuildFireNewDefFubenCmd::set_guildname(const char* value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GuildFireNewDefFubenCmd.guildname)
}
inline void GuildFireNewDefFubenCmd::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GuildFireNewDefFubenCmd.guildname)
}
inline ::std::string* GuildFireNewDefFubenCmd::mutable_guildname() {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GuildFireNewDefFubenCmd.guildname)
  return guildname_;
}
inline ::std::string* GuildFireNewDefFubenCmd::release_guildname() {
  clear_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guildname_;
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildFireNewDefFubenCmd::set_allocated_guildname(::std::string* guildname) {
  if (guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guildname_;
  }
  if (guildname) {
    set_has_guildname();
    guildname_ = guildname;
  } else {
    clear_has_guildname();
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GuildFireNewDefFubenCmd.guildname)
}

// -------------------------------------------------------------------

// GuildFireRestartFubenCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool GuildFireRestartFubenCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildFireRestartFubenCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildFireRestartFubenCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildFireRestartFubenCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command GuildFireRestartFubenCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireRestartFubenCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildFireRestartFubenCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireRestartFubenCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = GUILD_FIRE_RESTART];
inline bool GuildFireRestartFubenCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildFireRestartFubenCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildFireRestartFubenCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildFireRestartFubenCmd::clear_param() {
  param_ = 24;
  clear_has_param();
}
inline ::Cmd::FuBenParam GuildFireRestartFubenCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireRestartFubenCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void GuildFireRestartFubenCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireRestartFubenCmd.param)
}

// -------------------------------------------------------------------

// GuildFireStatusFubenCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool GuildFireStatusFubenCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildFireStatusFubenCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildFireStatusFubenCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildFireStatusFubenCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command GuildFireStatusFubenCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireStatusFubenCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GuildFireStatusFubenCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireStatusFubenCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = GUILD_FIRE_STATUS];
inline bool GuildFireStatusFubenCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildFireStatusFubenCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildFireStatusFubenCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildFireStatusFubenCmd::clear_param() {
  param_ = 25;
  clear_has_param();
}
inline ::Cmd::FuBenParam GuildFireStatusFubenCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireStatusFubenCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void GuildFireStatusFubenCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireStatusFubenCmd.param)
}

// optional bool open = 3 [default = false];
inline bool GuildFireStatusFubenCmd::has_open() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildFireStatusFubenCmd::set_has_open() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildFireStatusFubenCmd::clear_has_open() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildFireStatusFubenCmd::clear_open() {
  open_ = false;
  clear_has_open();
}
inline bool GuildFireStatusFubenCmd::open() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireStatusFubenCmd.open)
  return open_;
}
inline void GuildFireStatusFubenCmd::set_open(bool value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireStatusFubenCmd.open)
}

// optional uint32 starttime = 4 [default = 0];
inline bool GuildFireStatusFubenCmd::has_starttime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildFireStatusFubenCmd::set_has_starttime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildFireStatusFubenCmd::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildFireStatusFubenCmd::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 GuildFireStatusFubenCmd::starttime() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireStatusFubenCmd.starttime)
  return starttime_;
}
inline void GuildFireStatusFubenCmd::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireStatusFubenCmd.starttime)
}

// required uint32 cityid = 5;
inline bool GuildFireStatusFubenCmd::has_cityid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildFireStatusFubenCmd::set_has_cityid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildFireStatusFubenCmd::clear_has_cityid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildFireStatusFubenCmd::clear_cityid() {
  cityid_ = 0u;
  clear_has_cityid();
}
inline ::google::protobuf::uint32 GuildFireStatusFubenCmd::cityid() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireStatusFubenCmd.cityid)
  return cityid_;
}
inline void GuildFireStatusFubenCmd::set_cityid(::google::protobuf::uint32 value) {
  set_has_cityid();
  cityid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireStatusFubenCmd.cityid)
}

// optional bool cityopen = 6 [default = false];
inline bool GuildFireStatusFubenCmd::has_cityopen() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildFireStatusFubenCmd::set_has_cityopen() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildFireStatusFubenCmd::clear_has_cityopen() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildFireStatusFubenCmd::clear_cityopen() {
  cityopen_ = false;
  clear_has_cityopen();
}
inline bool GuildFireStatusFubenCmd::cityopen() const {
  // @@protoc_insertion_point(field_get:Cmd.GuildFireStatusFubenCmd.cityopen)
  return cityopen_;
}
inline void GuildFireStatusFubenCmd::set_cityopen(bool value) {
  set_has_cityopen();
  cityopen_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GuildFireStatusFubenCmd.cityopen)
}

// -------------------------------------------------------------------

// GvgData

// optional .Cmd.EGvgDataType type = 1 [default = EGVGDATA_MIN];
inline bool GvgData::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GvgData::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GvgData::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GvgData::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::EGvgDataType GvgData::type() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgData.type)
  return static_cast< ::Cmd::EGvgDataType >(type_);
}
inline void GvgData::set_type(::Cmd::EGvgDataType value) {
  assert(::Cmd::EGvgDataType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgData.type)
}

// optional uint32 value = 2 [default = 0];
inline bool GvgData::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GvgData::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GvgData::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GvgData::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 GvgData::value() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgData.value)
  return value_;
}
inline void GvgData::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgData.value)
}

// -------------------------------------------------------------------

// GvgDataSyncCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool GvgDataSyncCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GvgDataSyncCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GvgDataSyncCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GvgDataSyncCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command GvgDataSyncCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgDataSyncCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GvgDataSyncCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgDataSyncCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = GVG_DATA_SYNC_CMD];
inline bool GvgDataSyncCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GvgDataSyncCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GvgDataSyncCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GvgDataSyncCmd::clear_param() {
  param_ = 26;
  clear_has_param();
}
inline ::Cmd::FuBenParam GvgDataSyncCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgDataSyncCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void GvgDataSyncCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgDataSyncCmd.param)
}

// repeated .Cmd.GvgData datas = 3;
inline int GvgDataSyncCmd::datas_size() const {
  return datas_.size();
}
inline void GvgDataSyncCmd::clear_datas() {
  datas_.Clear();
}
inline const ::Cmd::GvgData& GvgDataSyncCmd::datas(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GvgDataSyncCmd.datas)
  return datas_.Get(index);
}
inline ::Cmd::GvgData* GvgDataSyncCmd::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GvgDataSyncCmd.datas)
  return datas_.Mutable(index);
}
inline ::Cmd::GvgData* GvgDataSyncCmd::add_datas() {
  // @@protoc_insertion_point(field_add:Cmd.GvgDataSyncCmd.datas)
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GvgData >&
GvgDataSyncCmd::datas() const {
  // @@protoc_insertion_point(field_list:Cmd.GvgDataSyncCmd.datas)
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GvgData >*
GvgDataSyncCmd::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GvgDataSyncCmd.datas)
  return &datas_;
}

// -------------------------------------------------------------------

// GvgDataUpdateCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool GvgDataUpdateCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GvgDataUpdateCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GvgDataUpdateCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GvgDataUpdateCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command GvgDataUpdateCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgDataUpdateCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GvgDataUpdateCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgDataUpdateCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = GVG_DATA_UPDATE_CMD];
inline bool GvgDataUpdateCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GvgDataUpdateCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GvgDataUpdateCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GvgDataUpdateCmd::clear_param() {
  param_ = 27;
  clear_has_param();
}
inline ::Cmd::FuBenParam GvgDataUpdateCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgDataUpdateCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void GvgDataUpdateCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgDataUpdateCmd.param)
}

// optional .Cmd.GvgData data = 3;
inline bool GvgDataUpdateCmd::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GvgDataUpdateCmd::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GvgDataUpdateCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GvgDataUpdateCmd::clear_data() {
  if (data_ != NULL) data_->::Cmd::GvgData::Clear();
  clear_has_data();
}
inline const ::Cmd::GvgData& GvgDataUpdateCmd::data() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgDataUpdateCmd.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Cmd::GvgData* GvgDataUpdateCmd::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Cmd::GvgData;
  // @@protoc_insertion_point(field_mutable:Cmd.GvgDataUpdateCmd.data)
  return data_;
}
inline ::Cmd::GvgData* GvgDataUpdateCmd::release_data() {
  clear_has_data();
  ::Cmd::GvgData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void GvgDataUpdateCmd::set_allocated_data(::Cmd::GvgData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GvgDataUpdateCmd.data)
}

// -------------------------------------------------------------------

// GvgDefNameChangeFubenCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool GvgDefNameChangeFubenCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GvgDefNameChangeFubenCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GvgDefNameChangeFubenCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GvgDefNameChangeFubenCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command GvgDefNameChangeFubenCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgDefNameChangeFubenCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GvgDefNameChangeFubenCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgDefNameChangeFubenCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = GUILD_FIRE_CHANGE_GUILD_NAME];
inline bool GvgDefNameChangeFubenCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GvgDefNameChangeFubenCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GvgDefNameChangeFubenCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GvgDefNameChangeFubenCmd::clear_param() {
  param_ = 28;
  clear_has_param();
}
inline ::Cmd::FuBenParam GvgDefNameChangeFubenCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgDefNameChangeFubenCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void GvgDefNameChangeFubenCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgDefNameChangeFubenCmd.param)
}

// required string newname = 3;
inline bool GvgDefNameChangeFubenCmd::has_newname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GvgDefNameChangeFubenCmd::set_has_newname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GvgDefNameChangeFubenCmd::clear_has_newname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GvgDefNameChangeFubenCmd::clear_newname() {
  if (newname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_->clear();
  }
  clear_has_newname();
}
inline const ::std::string& GvgDefNameChangeFubenCmd::newname() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgDefNameChangeFubenCmd.newname)
  return *newname_;
}
inline void GvgDefNameChangeFubenCmd::set_newname(const ::std::string& value) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  newname_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GvgDefNameChangeFubenCmd.newname)
}
inline void GvgDefNameChangeFubenCmd::set_newname(const char* value) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  newname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GvgDefNameChangeFubenCmd.newname)
}
inline void GvgDefNameChangeFubenCmd::set_newname(const char* value, size_t size) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  newname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GvgDefNameChangeFubenCmd.newname)
}
inline ::std::string* GvgDefNameChangeFubenCmd::mutable_newname() {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GvgDefNameChangeFubenCmd.newname)
  return newname_;
}
inline ::std::string* GvgDefNameChangeFubenCmd::release_newname() {
  clear_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = newname_;
    newname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GvgDefNameChangeFubenCmd::set_allocated_newname(::std::string* newname) {
  if (newname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete newname_;
  }
  if (newname) {
    set_has_newname();
    newname_ = newname;
  } else {
    clear_has_newname();
    newname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GvgDefNameChangeFubenCmd.newname)
}

// -------------------------------------------------------------------

// SyncMvpInfoFubenCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool SyncMvpInfoFubenCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncMvpInfoFubenCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncMvpInfoFubenCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncMvpInfoFubenCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command SyncMvpInfoFubenCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncMvpInfoFubenCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SyncMvpInfoFubenCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncMvpInfoFubenCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = MVPBATTLE_SYNC_MVPINFO];
inline bool SyncMvpInfoFubenCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncMvpInfoFubenCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncMvpInfoFubenCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncMvpInfoFubenCmd::clear_param() {
  param_ = 29;
  clear_has_param();
}
inline ::Cmd::FuBenParam SyncMvpInfoFubenCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncMvpInfoFubenCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void SyncMvpInfoFubenCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncMvpInfoFubenCmd.param)
}

// optional uint32 usernum = 3 [default = 0];
inline bool SyncMvpInfoFubenCmd::has_usernum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SyncMvpInfoFubenCmd::set_has_usernum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SyncMvpInfoFubenCmd::clear_has_usernum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SyncMvpInfoFubenCmd::clear_usernum() {
  usernum_ = 0u;
  clear_has_usernum();
}
inline ::google::protobuf::uint32 SyncMvpInfoFubenCmd::usernum() const {
  // @@protoc_insertion_point(field_get:Cmd.SyncMvpInfoFubenCmd.usernum)
  return usernum_;
}
inline void SyncMvpInfoFubenCmd::set_usernum(::google::protobuf::uint32 value) {
  set_has_usernum();
  usernum_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SyncMvpInfoFubenCmd.usernum)
}

// repeated uint32 liveboss = 4;
inline int SyncMvpInfoFubenCmd::liveboss_size() const {
  return liveboss_.size();
}
inline void SyncMvpInfoFubenCmd::clear_liveboss() {
  liveboss_.Clear();
}
inline ::google::protobuf::uint32 SyncMvpInfoFubenCmd::liveboss(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SyncMvpInfoFubenCmd.liveboss)
  return liveboss_.Get(index);
}
inline void SyncMvpInfoFubenCmd::set_liveboss(int index, ::google::protobuf::uint32 value) {
  liveboss_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.SyncMvpInfoFubenCmd.liveboss)
}
inline void SyncMvpInfoFubenCmd::add_liveboss(::google::protobuf::uint32 value) {
  liveboss_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.SyncMvpInfoFubenCmd.liveboss)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SyncMvpInfoFubenCmd::liveboss() const {
  // @@protoc_insertion_point(field_list:Cmd.SyncMvpInfoFubenCmd.liveboss)
  return liveboss_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SyncMvpInfoFubenCmd::mutable_liveboss() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SyncMvpInfoFubenCmd.liveboss)
  return &liveboss_;
}

// repeated uint32 dieboss = 5;
inline int SyncMvpInfoFubenCmd::dieboss_size() const {
  return dieboss_.size();
}
inline void SyncMvpInfoFubenCmd::clear_dieboss() {
  dieboss_.Clear();
}
inline ::google::protobuf::uint32 SyncMvpInfoFubenCmd::dieboss(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SyncMvpInfoFubenCmd.dieboss)
  return dieboss_.Get(index);
}
inline void SyncMvpInfoFubenCmd::set_dieboss(int index, ::google::protobuf::uint32 value) {
  dieboss_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.SyncMvpInfoFubenCmd.dieboss)
}
inline void SyncMvpInfoFubenCmd::add_dieboss(::google::protobuf::uint32 value) {
  dieboss_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.SyncMvpInfoFubenCmd.dieboss)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SyncMvpInfoFubenCmd::dieboss() const {
  // @@protoc_insertion_point(field_list:Cmd.SyncMvpInfoFubenCmd.dieboss)
  return dieboss_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SyncMvpInfoFubenCmd::mutable_dieboss() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SyncMvpInfoFubenCmd.dieboss)
  return &dieboss_;
}

// -------------------------------------------------------------------

// BossDieFubenCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool BossDieFubenCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BossDieFubenCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BossDieFubenCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BossDieFubenCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command BossDieFubenCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.BossDieFubenCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void BossDieFubenCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BossDieFubenCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = MVPBATTLE_BOSS_DIE];
inline bool BossDieFubenCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BossDieFubenCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BossDieFubenCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BossDieFubenCmd::clear_param() {
  param_ = 30;
  clear_has_param();
}
inline ::Cmd::FuBenParam BossDieFubenCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.BossDieFubenCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void BossDieFubenCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BossDieFubenCmd.param)
}

// required uint32 npcid = 3;
inline bool BossDieFubenCmd::has_npcid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BossDieFubenCmd::set_has_npcid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BossDieFubenCmd::clear_has_npcid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BossDieFubenCmd::clear_npcid() {
  npcid_ = 0u;
  clear_has_npcid();
}
inline ::google::protobuf::uint32 BossDieFubenCmd::npcid() const {
  // @@protoc_insertion_point(field_get:Cmd.BossDieFubenCmd.npcid)
  return npcid_;
}
inline void BossDieFubenCmd::set_npcid(::google::protobuf::uint32 value) {
  set_has_npcid();
  npcid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.BossDieFubenCmd.npcid)
}

// -------------------------------------------------------------------

// UpdateUserNumFubenCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool UpdateUserNumFubenCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateUserNumFubenCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateUserNumFubenCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateUserNumFubenCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command UpdateUserNumFubenCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateUserNumFubenCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UpdateUserNumFubenCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateUserNumFubenCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = FUBEN_USERNUM_COUNT];
inline bool UpdateUserNumFubenCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateUserNumFubenCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateUserNumFubenCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateUserNumFubenCmd::clear_param() {
  param_ = 31;
  clear_has_param();
}
inline ::Cmd::FuBenParam UpdateUserNumFubenCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateUserNumFubenCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void UpdateUserNumFubenCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateUserNumFubenCmd.param)
}

// optional uint32 usernum = 3 [default = 0];
inline bool UpdateUserNumFubenCmd::has_usernum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateUserNumFubenCmd::set_has_usernum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateUserNumFubenCmd::clear_has_usernum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateUserNumFubenCmd::clear_usernum() {
  usernum_ = 0u;
  clear_has_usernum();
}
inline ::google::protobuf::uint32 UpdateUserNumFubenCmd::usernum() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateUserNumFubenCmd.usernum)
  return usernum_;
}
inline void UpdateUserNumFubenCmd::set_usernum(::google::protobuf::uint32 value) {
  set_has_usernum();
  usernum_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateUserNumFubenCmd.usernum)
}

// -------------------------------------------------------------------

// GvgTowerValue

// optional uint64 guildid = 1;
inline bool GvgTowerValue::has_guildid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GvgTowerValue::set_has_guildid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GvgTowerValue::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GvgTowerValue::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 GvgTowerValue::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgTowerValue.guildid)
  return guildid_;
}
inline void GvgTowerValue::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgTowerValue.guildid)
}

// optional uint32 value = 2;
inline bool GvgTowerValue::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GvgTowerValue::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GvgTowerValue::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GvgTowerValue::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 GvgTowerValue::value() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgTowerValue.value)
  return value_;
}
inline void GvgTowerValue::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgTowerValue.value)
}

// -------------------------------------------------------------------

// GvgTowerData

// optional .Cmd.EGvgTowerType etype = 1;
inline bool GvgTowerData::has_etype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GvgTowerData::set_has_etype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GvgTowerData::clear_has_etype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GvgTowerData::clear_etype() {
  etype_ = 0;
  clear_has_etype();
}
inline ::Cmd::EGvgTowerType GvgTowerData::etype() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgTowerData.etype)
  return static_cast< ::Cmd::EGvgTowerType >(etype_);
}
inline void GvgTowerData::set_etype(::Cmd::EGvgTowerType value) {
  assert(::Cmd::EGvgTowerType_IsValid(value));
  set_has_etype();
  etype_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgTowerData.etype)
}

// optional .Cmd.EGvgTowerState estate = 2;
inline bool GvgTowerData::has_estate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GvgTowerData::set_has_estate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GvgTowerData::clear_has_estate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GvgTowerData::clear_estate() {
  estate_ = 1;
  clear_has_estate();
}
inline ::Cmd::EGvgTowerState GvgTowerData::estate() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgTowerData.estate)
  return static_cast< ::Cmd::EGvgTowerState >(estate_);
}
inline void GvgTowerData::set_estate(::Cmd::EGvgTowerState value) {
  assert(::Cmd::EGvgTowerState_IsValid(value));
  set_has_estate();
  estate_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgTowerData.estate)
}

// optional uint64 owner_guild = 3;
inline bool GvgTowerData::has_owner_guild() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GvgTowerData::set_has_owner_guild() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GvgTowerData::clear_has_owner_guild() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GvgTowerData::clear_owner_guild() {
  owner_guild_ = GOOGLE_ULONGLONG(0);
  clear_has_owner_guild();
}
inline ::google::protobuf::uint64 GvgTowerData::owner_guild() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgTowerData.owner_guild)
  return owner_guild_;
}
inline void GvgTowerData::set_owner_guild(::google::protobuf::uint64 value) {
  set_has_owner_guild();
  owner_guild_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgTowerData.owner_guild)
}

// repeated .Cmd.GvgTowerValue info = 4;
inline int GvgTowerData::info_size() const {
  return info_.size();
}
inline void GvgTowerData::clear_info() {
  info_.Clear();
}
inline const ::Cmd::GvgTowerValue& GvgTowerData::info(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GvgTowerData.info)
  return info_.Get(index);
}
inline ::Cmd::GvgTowerValue* GvgTowerData::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GvgTowerData.info)
  return info_.Mutable(index);
}
inline ::Cmd::GvgTowerValue* GvgTowerData::add_info() {
  // @@protoc_insertion_point(field_add:Cmd.GvgTowerData.info)
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GvgTowerValue >&
GvgTowerData::info() const {
  // @@protoc_insertion_point(field_list:Cmd.GvgTowerData.info)
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GvgTowerValue >*
GvgTowerData::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GvgTowerData.info)
  return &info_;
}

// -------------------------------------------------------------------

// GvgCrystalInfo

// optional uint32 rank = 1;
inline bool GvgCrystalInfo::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GvgCrystalInfo::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GvgCrystalInfo::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GvgCrystalInfo::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 GvgCrystalInfo::rank() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgCrystalInfo.rank)
  return rank_;
}
inline void GvgCrystalInfo::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgCrystalInfo.rank)
}

// optional uint64 guildid = 2;
inline bool GvgCrystalInfo::has_guildid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GvgCrystalInfo::set_has_guildid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GvgCrystalInfo::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GvgCrystalInfo::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 GvgCrystalInfo::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgCrystalInfo.guildid)
  return guildid_;
}
inline void GvgCrystalInfo::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgCrystalInfo.guildid)
}

// optional uint32 crystalnum = 3 [default = 0];
inline bool GvgCrystalInfo::has_crystalnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GvgCrystalInfo::set_has_crystalnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GvgCrystalInfo::clear_has_crystalnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GvgCrystalInfo::clear_crystalnum() {
  crystalnum_ = 0u;
  clear_has_crystalnum();
}
inline ::google::protobuf::uint32 GvgCrystalInfo::crystalnum() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgCrystalInfo.crystalnum)
  return crystalnum_;
}
inline void GvgCrystalInfo::set_crystalnum(::google::protobuf::uint32 value) {
  set_has_crystalnum();
  crystalnum_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgCrystalInfo.crystalnum)
}

// optional uint32 chipnum = 4 [default = 0];
inline bool GvgCrystalInfo::has_chipnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GvgCrystalInfo::set_has_chipnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GvgCrystalInfo::clear_has_chipnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GvgCrystalInfo::clear_chipnum() {
  chipnum_ = 0u;
  clear_has_chipnum();
}
inline ::google::protobuf::uint32 GvgCrystalInfo::chipnum() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgCrystalInfo.chipnum)
  return chipnum_;
}
inline void GvgCrystalInfo::set_chipnum(::google::protobuf::uint32 value) {
  set_has_chipnum();
  chipnum_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgCrystalInfo.chipnum)
}

// -------------------------------------------------------------------

// GvgGuildInfo

// optional uint32 index = 1;
inline bool GvgGuildInfo::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GvgGuildInfo::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GvgGuildInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GvgGuildInfo::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 GvgGuildInfo::index() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgGuildInfo.index)
  return index_;
}
inline void GvgGuildInfo::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgGuildInfo.index)
}

// optional uint64 guildid = 2;
inline bool GvgGuildInfo::has_guildid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GvgGuildInfo::set_has_guildid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GvgGuildInfo::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GvgGuildInfo::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 GvgGuildInfo::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgGuildInfo.guildid)
  return guildid_;
}
inline void GvgGuildInfo::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgGuildInfo.guildid)
}

// optional string guildname = 3;
inline bool GvgGuildInfo::has_guildname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GvgGuildInfo::set_has_guildname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GvgGuildInfo::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GvgGuildInfo::clear_guildname() {
  if (guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_->clear();
  }
  clear_has_guildname();
}
inline const ::std::string& GvgGuildInfo::guildname() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgGuildInfo.guildname)
  return *guildname_;
}
inline void GvgGuildInfo::set_guildname(const ::std::string& value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GvgGuildInfo.guildname)
}
inline void GvgGuildInfo::set_guildname(const char* value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GvgGuildInfo.guildname)
}
inline void GvgGuildInfo::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GvgGuildInfo.guildname)
}
inline ::std::string* GvgGuildInfo::mutable_guildname() {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GvgGuildInfo.guildname)
  return guildname_;
}
inline ::std::string* GvgGuildInfo::release_guildname() {
  clear_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guildname_;
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GvgGuildInfo::set_allocated_guildname(::std::string* guildname) {
  if (guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guildname_;
  }
  if (guildname) {
    set_has_guildname();
    guildname_ = guildname;
  } else {
    clear_has_guildname();
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GvgGuildInfo.guildname)
}

// optional string icon = 4;
inline bool GvgGuildInfo::has_icon() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GvgGuildInfo::set_has_icon() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GvgGuildInfo::clear_has_icon() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GvgGuildInfo::clear_icon() {
  if (icon_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    icon_->clear();
  }
  clear_has_icon();
}
inline const ::std::string& GvgGuildInfo::icon() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgGuildInfo.icon)
  return *icon_;
}
inline void GvgGuildInfo::set_icon(const ::std::string& value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.GvgGuildInfo.icon)
}
inline void GvgGuildInfo::set_icon(const char* value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.GvgGuildInfo.icon)
}
inline void GvgGuildInfo::set_icon(const char* value, size_t size) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    icon_ = new ::std::string;
  }
  icon_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.GvgGuildInfo.icon)
}
inline ::std::string* GvgGuildInfo::mutable_icon() {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    icon_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.GvgGuildInfo.icon)
  return icon_;
}
inline ::std::string* GvgGuildInfo::release_icon() {
  clear_has_icon();
  if (icon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = icon_;
    icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GvgGuildInfo::set_allocated_icon(::std::string* icon) {
  if (icon_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete icon_;
  }
  if (icon) {
    set_has_icon();
    icon_ = icon;
  } else {
    clear_has_icon();
    icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GvgGuildInfo.icon)
}

// optional bool metal_live = 5 [default = false];
inline bool GvgGuildInfo::has_metal_live() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GvgGuildInfo::set_has_metal_live() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GvgGuildInfo::clear_has_metal_live() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GvgGuildInfo::clear_metal_live() {
  metal_live_ = false;
  clear_has_metal_live();
}
inline bool GvgGuildInfo::metal_live() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgGuildInfo.metal_live)
  return metal_live_;
}
inline void GvgGuildInfo::set_metal_live(bool value) {
  set_has_metal_live();
  metal_live_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgGuildInfo.metal_live)
}

// optional .Cmd.GvgCrystalInfo crystal = 6;
inline bool GvgGuildInfo::has_crystal() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GvgGuildInfo::set_has_crystal() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GvgGuildInfo::clear_has_crystal() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GvgGuildInfo::clear_crystal() {
  if (crystal_ != NULL) crystal_->::Cmd::GvgCrystalInfo::Clear();
  clear_has_crystal();
}
inline const ::Cmd::GvgCrystalInfo& GvgGuildInfo::crystal() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgGuildInfo.crystal)
  return crystal_ != NULL ? *crystal_ : *default_instance_->crystal_;
}
inline ::Cmd::GvgCrystalInfo* GvgGuildInfo::mutable_crystal() {
  set_has_crystal();
  if (crystal_ == NULL) crystal_ = new ::Cmd::GvgCrystalInfo;
  // @@protoc_insertion_point(field_mutable:Cmd.GvgGuildInfo.crystal)
  return crystal_;
}
inline ::Cmd::GvgCrystalInfo* GvgGuildInfo::release_crystal() {
  clear_has_crystal();
  ::Cmd::GvgCrystalInfo* temp = crystal_;
  crystal_ = NULL;
  return temp;
}
inline void GvgGuildInfo::set_allocated_crystal(::Cmd::GvgCrystalInfo* crystal) {
  delete crystal_;
  crystal_ = crystal;
  if (crystal) {
    set_has_crystal();
  } else {
    clear_has_crystal();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.GvgGuildInfo.crystal)
}

// -------------------------------------------------------------------

// SuperGvgSyncFubenCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool SuperGvgSyncFubenCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SuperGvgSyncFubenCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SuperGvgSyncFubenCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SuperGvgSyncFubenCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command SuperGvgSyncFubenCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SuperGvgSyncFubenCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SuperGvgSyncFubenCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SuperGvgSyncFubenCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = SUPERGVG_INFO_SYNC];
inline bool SuperGvgSyncFubenCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SuperGvgSyncFubenCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SuperGvgSyncFubenCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SuperGvgSyncFubenCmd::clear_param() {
  param_ = 32;
  clear_has_param();
}
inline ::Cmd::FuBenParam SuperGvgSyncFubenCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SuperGvgSyncFubenCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void SuperGvgSyncFubenCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SuperGvgSyncFubenCmd.param)
}

// repeated .Cmd.GvgTowerData towers = 3;
inline int SuperGvgSyncFubenCmd::towers_size() const {
  return towers_.size();
}
inline void SuperGvgSyncFubenCmd::clear_towers() {
  towers_.Clear();
}
inline const ::Cmd::GvgTowerData& SuperGvgSyncFubenCmd::towers(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SuperGvgSyncFubenCmd.towers)
  return towers_.Get(index);
}
inline ::Cmd::GvgTowerData* SuperGvgSyncFubenCmd::mutable_towers(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.SuperGvgSyncFubenCmd.towers)
  return towers_.Mutable(index);
}
inline ::Cmd::GvgTowerData* SuperGvgSyncFubenCmd::add_towers() {
  // @@protoc_insertion_point(field_add:Cmd.SuperGvgSyncFubenCmd.towers)
  return towers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GvgTowerData >&
SuperGvgSyncFubenCmd::towers() const {
  // @@protoc_insertion_point(field_list:Cmd.SuperGvgSyncFubenCmd.towers)
  return towers_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GvgTowerData >*
SuperGvgSyncFubenCmd::mutable_towers() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SuperGvgSyncFubenCmd.towers)
  return &towers_;
}

// repeated .Cmd.GvgGuildInfo guildinfo = 4;
inline int SuperGvgSyncFubenCmd::guildinfo_size() const {
  return guildinfo_.size();
}
inline void SuperGvgSyncFubenCmd::clear_guildinfo() {
  guildinfo_.Clear();
}
inline const ::Cmd::GvgGuildInfo& SuperGvgSyncFubenCmd::guildinfo(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SuperGvgSyncFubenCmd.guildinfo)
  return guildinfo_.Get(index);
}
inline ::Cmd::GvgGuildInfo* SuperGvgSyncFubenCmd::mutable_guildinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.SuperGvgSyncFubenCmd.guildinfo)
  return guildinfo_.Mutable(index);
}
inline ::Cmd::GvgGuildInfo* SuperGvgSyncFubenCmd::add_guildinfo() {
  // @@protoc_insertion_point(field_add:Cmd.SuperGvgSyncFubenCmd.guildinfo)
  return guildinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GvgGuildInfo >&
SuperGvgSyncFubenCmd::guildinfo() const {
  // @@protoc_insertion_point(field_list:Cmd.SuperGvgSyncFubenCmd.guildinfo)
  return guildinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GvgGuildInfo >*
SuperGvgSyncFubenCmd::mutable_guildinfo() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SuperGvgSyncFubenCmd.guildinfo)
  return &guildinfo_;
}

// optional uint32 firebegintime = 5 [default = 0];
inline bool SuperGvgSyncFubenCmd::has_firebegintime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SuperGvgSyncFubenCmd::set_has_firebegintime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SuperGvgSyncFubenCmd::clear_has_firebegintime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SuperGvgSyncFubenCmd::clear_firebegintime() {
  firebegintime_ = 0u;
  clear_has_firebegintime();
}
inline ::google::protobuf::uint32 SuperGvgSyncFubenCmd::firebegintime() const {
  // @@protoc_insertion_point(field_get:Cmd.SuperGvgSyncFubenCmd.firebegintime)
  return firebegintime_;
}
inline void SuperGvgSyncFubenCmd::set_firebegintime(::google::protobuf::uint32 value) {
  set_has_firebegintime();
  firebegintime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SuperGvgSyncFubenCmd.firebegintime)
}

// -------------------------------------------------------------------

// GvgTowerUpdateFubenCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool GvgTowerUpdateFubenCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GvgTowerUpdateFubenCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GvgTowerUpdateFubenCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GvgTowerUpdateFubenCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command GvgTowerUpdateFubenCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgTowerUpdateFubenCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GvgTowerUpdateFubenCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgTowerUpdateFubenCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = SUPERGVG_TOWERINFO_UPDATE];
inline bool GvgTowerUpdateFubenCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GvgTowerUpdateFubenCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GvgTowerUpdateFubenCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GvgTowerUpdateFubenCmd::clear_param() {
  param_ = 33;
  clear_has_param();
}
inline ::Cmd::FuBenParam GvgTowerUpdateFubenCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgTowerUpdateFubenCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void GvgTowerUpdateFubenCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgTowerUpdateFubenCmd.param)
}

// repeated .Cmd.GvgTowerData towers = 3;
inline int GvgTowerUpdateFubenCmd::towers_size() const {
  return towers_.size();
}
inline void GvgTowerUpdateFubenCmd::clear_towers() {
  towers_.Clear();
}
inline const ::Cmd::GvgTowerData& GvgTowerUpdateFubenCmd::towers(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GvgTowerUpdateFubenCmd.towers)
  return towers_.Get(index);
}
inline ::Cmd::GvgTowerData* GvgTowerUpdateFubenCmd::mutable_towers(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GvgTowerUpdateFubenCmd.towers)
  return towers_.Mutable(index);
}
inline ::Cmd::GvgTowerData* GvgTowerUpdateFubenCmd::add_towers() {
  // @@protoc_insertion_point(field_add:Cmd.GvgTowerUpdateFubenCmd.towers)
  return towers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GvgTowerData >&
GvgTowerUpdateFubenCmd::towers() const {
  // @@protoc_insertion_point(field_list:Cmd.GvgTowerUpdateFubenCmd.towers)
  return towers_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GvgTowerData >*
GvgTowerUpdateFubenCmd::mutable_towers() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GvgTowerUpdateFubenCmd.towers)
  return &towers_;
}

// -------------------------------------------------------------------

// GvgMetalDieFubenCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool GvgMetalDieFubenCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GvgMetalDieFubenCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GvgMetalDieFubenCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GvgMetalDieFubenCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command GvgMetalDieFubenCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgMetalDieFubenCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GvgMetalDieFubenCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgMetalDieFubenCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = SUPERGVG_METAL_DIE];
inline bool GvgMetalDieFubenCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GvgMetalDieFubenCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GvgMetalDieFubenCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GvgMetalDieFubenCmd::clear_param() {
  param_ = 39;
  clear_has_param();
}
inline ::Cmd::FuBenParam GvgMetalDieFubenCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgMetalDieFubenCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void GvgMetalDieFubenCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgMetalDieFubenCmd.param)
}

// optional uint32 index = 3 [default = 0];
inline bool GvgMetalDieFubenCmd::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GvgMetalDieFubenCmd::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GvgMetalDieFubenCmd::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GvgMetalDieFubenCmd::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 GvgMetalDieFubenCmd::index() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgMetalDieFubenCmd.index)
  return index_;
}
inline void GvgMetalDieFubenCmd::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgMetalDieFubenCmd.index)
}

// -------------------------------------------------------------------

// GvgCrystalUpdateFubenCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool GvgCrystalUpdateFubenCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GvgCrystalUpdateFubenCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GvgCrystalUpdateFubenCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GvgCrystalUpdateFubenCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command GvgCrystalUpdateFubenCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgCrystalUpdateFubenCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GvgCrystalUpdateFubenCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgCrystalUpdateFubenCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = SUPERGVG_METALINFO_UPDATE];
inline bool GvgCrystalUpdateFubenCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GvgCrystalUpdateFubenCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GvgCrystalUpdateFubenCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GvgCrystalUpdateFubenCmd::clear_param() {
  param_ = 34;
  clear_has_param();
}
inline ::Cmd::FuBenParam GvgCrystalUpdateFubenCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GvgCrystalUpdateFubenCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void GvgCrystalUpdateFubenCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GvgCrystalUpdateFubenCmd.param)
}

// repeated .Cmd.GvgCrystalInfo crystals = 3;
inline int GvgCrystalUpdateFubenCmd::crystals_size() const {
  return crystals_.size();
}
inline void GvgCrystalUpdateFubenCmd::clear_crystals() {
  crystals_.Clear();
}
inline const ::Cmd::GvgCrystalInfo& GvgCrystalUpdateFubenCmd::crystals(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.GvgCrystalUpdateFubenCmd.crystals)
  return crystals_.Get(index);
}
inline ::Cmd::GvgCrystalInfo* GvgCrystalUpdateFubenCmd::mutable_crystals(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.GvgCrystalUpdateFubenCmd.crystals)
  return crystals_.Mutable(index);
}
inline ::Cmd::GvgCrystalInfo* GvgCrystalUpdateFubenCmd::add_crystals() {
  // @@protoc_insertion_point(field_add:Cmd.GvgCrystalUpdateFubenCmd.crystals)
  return crystals_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::GvgCrystalInfo >&
GvgCrystalUpdateFubenCmd::crystals() const {
  // @@protoc_insertion_point(field_list:Cmd.GvgCrystalUpdateFubenCmd.crystals)
  return crystals_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::GvgCrystalInfo >*
GvgCrystalUpdateFubenCmd::mutable_crystals() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.GvgCrystalUpdateFubenCmd.crystals)
  return &crystals_;
}

// -------------------------------------------------------------------

// QueryGvgTowerInfoFubenCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool QueryGvgTowerInfoFubenCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryGvgTowerInfoFubenCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryGvgTowerInfoFubenCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryGvgTowerInfoFubenCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command QueryGvgTowerInfoFubenCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryGvgTowerInfoFubenCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryGvgTowerInfoFubenCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryGvgTowerInfoFubenCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = SUPERGVG_QUERY_TOWERINFO];
inline bool QueryGvgTowerInfoFubenCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryGvgTowerInfoFubenCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryGvgTowerInfoFubenCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryGvgTowerInfoFubenCmd::clear_param() {
  param_ = 35;
  clear_has_param();
}
inline ::Cmd::FuBenParam QueryGvgTowerInfoFubenCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryGvgTowerInfoFubenCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void QueryGvgTowerInfoFubenCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryGvgTowerInfoFubenCmd.param)
}

// required .Cmd.EGvgTowerType etype = 3;
inline bool QueryGvgTowerInfoFubenCmd::has_etype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryGvgTowerInfoFubenCmd::set_has_etype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryGvgTowerInfoFubenCmd::clear_has_etype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryGvgTowerInfoFubenCmd::clear_etype() {
  etype_ = 0;
  clear_has_etype();
}
inline ::Cmd::EGvgTowerType QueryGvgTowerInfoFubenCmd::etype() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryGvgTowerInfoFubenCmd.etype)
  return static_cast< ::Cmd::EGvgTowerType >(etype_);
}
inline void QueryGvgTowerInfoFubenCmd::set_etype(::Cmd::EGvgTowerType value) {
  assert(::Cmd::EGvgTowerType_IsValid(value));
  set_has_etype();
  etype_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryGvgTowerInfoFubenCmd.etype)
}

// optional bool open = 4 [default = false];
inline bool QueryGvgTowerInfoFubenCmd::has_open() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryGvgTowerInfoFubenCmd::set_has_open() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryGvgTowerInfoFubenCmd::clear_has_open() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryGvgTowerInfoFubenCmd::clear_open() {
  open_ = false;
  clear_has_open();
}
inline bool QueryGvgTowerInfoFubenCmd::open() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryGvgTowerInfoFubenCmd.open)
  return open_;
}
inline void QueryGvgTowerInfoFubenCmd::set_open(bool value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryGvgTowerInfoFubenCmd.open)
}

// -------------------------------------------------------------------

// RewardItemData

// optional uint32 itemid = 1;
inline bool RewardItemData::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RewardItemData::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RewardItemData::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RewardItemData::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 RewardItemData::itemid() const {
  // @@protoc_insertion_point(field_get:Cmd.RewardItemData.itemid)
  return itemid_;
}
inline void RewardItemData::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RewardItemData.itemid)
}

// optional uint32 count = 2;
inline bool RewardItemData::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RewardItemData::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RewardItemData::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RewardItemData::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 RewardItemData::count() const {
  // @@protoc_insertion_point(field_get:Cmd.RewardItemData.count)
  return count_;
}
inline void RewardItemData::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RewardItemData.count)
}

// -------------------------------------------------------------------

// SuperGvgRewardData

// optional uint64 guildid = 1;
inline bool SuperGvgRewardData::has_guildid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SuperGvgRewardData::set_has_guildid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SuperGvgRewardData::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SuperGvgRewardData::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 SuperGvgRewardData::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.SuperGvgRewardData.guildid)
  return guildid_;
}
inline void SuperGvgRewardData::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SuperGvgRewardData.guildid)
}

// optional uint32 rank = 2;
inline bool SuperGvgRewardData::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SuperGvgRewardData::set_has_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SuperGvgRewardData::clear_has_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SuperGvgRewardData::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 SuperGvgRewardData::rank() const {
  // @@protoc_insertion_point(field_get:Cmd.SuperGvgRewardData.rank)
  return rank_;
}
inline void SuperGvgRewardData::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SuperGvgRewardData.rank)
}

// repeated .Cmd.RewardItemData items = 3;
inline int SuperGvgRewardData::items_size() const {
  return items_.size();
}
inline void SuperGvgRewardData::clear_items() {
  items_.Clear();
}
inline const ::Cmd::RewardItemData& SuperGvgRewardData::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SuperGvgRewardData.items)
  return items_.Get(index);
}
inline ::Cmd::RewardItemData* SuperGvgRewardData::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.SuperGvgRewardData.items)
  return items_.Mutable(index);
}
inline ::Cmd::RewardItemData* SuperGvgRewardData::add_items() {
  // @@protoc_insertion_point(field_add:Cmd.SuperGvgRewardData.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::RewardItemData >&
SuperGvgRewardData::items() const {
  // @@protoc_insertion_point(field_list:Cmd.SuperGvgRewardData.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::RewardItemData >*
SuperGvgRewardData::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SuperGvgRewardData.items)
  return &items_;
}

// -------------------------------------------------------------------

// SuperGvgRewardInfoFubenCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool SuperGvgRewardInfoFubenCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SuperGvgRewardInfoFubenCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SuperGvgRewardInfoFubenCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SuperGvgRewardInfoFubenCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command SuperGvgRewardInfoFubenCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SuperGvgRewardInfoFubenCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SuperGvgRewardInfoFubenCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SuperGvgRewardInfoFubenCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = SUPERGVG_REWARD_INFO];
inline bool SuperGvgRewardInfoFubenCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SuperGvgRewardInfoFubenCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SuperGvgRewardInfoFubenCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SuperGvgRewardInfoFubenCmd::clear_param() {
  param_ = 36;
  clear_has_param();
}
inline ::Cmd::FuBenParam SuperGvgRewardInfoFubenCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SuperGvgRewardInfoFubenCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void SuperGvgRewardInfoFubenCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SuperGvgRewardInfoFubenCmd.param)
}

// repeated .Cmd.SuperGvgRewardData rewardinfo = 3;
inline int SuperGvgRewardInfoFubenCmd::rewardinfo_size() const {
  return rewardinfo_.size();
}
inline void SuperGvgRewardInfoFubenCmd::clear_rewardinfo() {
  rewardinfo_.Clear();
}
inline const ::Cmd::SuperGvgRewardData& SuperGvgRewardInfoFubenCmd::rewardinfo(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SuperGvgRewardInfoFubenCmd.rewardinfo)
  return rewardinfo_.Get(index);
}
inline ::Cmd::SuperGvgRewardData* SuperGvgRewardInfoFubenCmd::mutable_rewardinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.SuperGvgRewardInfoFubenCmd.rewardinfo)
  return rewardinfo_.Mutable(index);
}
inline ::Cmd::SuperGvgRewardData* SuperGvgRewardInfoFubenCmd::add_rewardinfo() {
  // @@protoc_insertion_point(field_add:Cmd.SuperGvgRewardInfoFubenCmd.rewardinfo)
  return rewardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SuperGvgRewardData >&
SuperGvgRewardInfoFubenCmd::rewardinfo() const {
  // @@protoc_insertion_point(field_list:Cmd.SuperGvgRewardInfoFubenCmd.rewardinfo)
  return rewardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::SuperGvgRewardData >*
SuperGvgRewardInfoFubenCmd::mutable_rewardinfo() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SuperGvgRewardInfoFubenCmd.rewardinfo)
  return &rewardinfo_;
}

// -------------------------------------------------------------------

// SuperGvgUserData

// required string username = 1;
inline bool SuperGvgUserData::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SuperGvgUserData::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SuperGvgUserData::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SuperGvgUserData::clear_username() {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& SuperGvgUserData::username() const {
  // @@protoc_insertion_point(field_get:Cmd.SuperGvgUserData.username)
  return *username_;
}
inline void SuperGvgUserData::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.SuperGvgUserData.username)
}
inline void SuperGvgUserData::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.SuperGvgUserData.username)
}
inline void SuperGvgUserData::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.SuperGvgUserData.username)
}
inline ::std::string* SuperGvgUserData::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.SuperGvgUserData.username)
  return username_;
}
inline ::std::string* SuperGvgUserData::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SuperGvgUserData::set_allocated_username(::std::string* username) {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.SuperGvgUserData.username)
}

// required uint32 profession = 2;
inline bool SuperGvgUserData::has_profession() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SuperGvgUserData::set_has_profession() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SuperGvgUserData::clear_has_profession() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SuperGvgUserData::clear_profession() {
  profession_ = 0u;
  clear_has_profession();
}
inline ::google::protobuf::uint32 SuperGvgUserData::profession() const {
  // @@protoc_insertion_point(field_get:Cmd.SuperGvgUserData.profession)
  return profession_;
}
inline void SuperGvgUserData::set_profession(::google::protobuf::uint32 value) {
  set_has_profession();
  profession_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SuperGvgUserData.profession)
}

// optional uint32 killusernum = 3 [default = 0];
inline bool SuperGvgUserData::has_killusernum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SuperGvgUserData::set_has_killusernum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SuperGvgUserData::clear_has_killusernum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SuperGvgUserData::clear_killusernum() {
  killusernum_ = 0u;
  clear_has_killusernum();
}
inline ::google::protobuf::uint32 SuperGvgUserData::killusernum() const {
  // @@protoc_insertion_point(field_get:Cmd.SuperGvgUserData.killusernum)
  return killusernum_;
}
inline void SuperGvgUserData::set_killusernum(::google::protobuf::uint32 value) {
  set_has_killusernum();
  killusernum_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SuperGvgUserData.killusernum)
}

// optional uint32 dienum = 4 [default = 0];
inline bool SuperGvgUserData::has_dienum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SuperGvgUserData::set_has_dienum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SuperGvgUserData::clear_has_dienum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SuperGvgUserData::clear_dienum() {
  dienum_ = 0u;
  clear_has_dienum();
}
inline ::google::protobuf::uint32 SuperGvgUserData::dienum() const {
  // @@protoc_insertion_point(field_get:Cmd.SuperGvgUserData.dienum)
  return dienum_;
}
inline void SuperGvgUserData::set_dienum(::google::protobuf::uint32 value) {
  set_has_dienum();
  dienum_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SuperGvgUserData.dienum)
}

// optional uint32 chipnum = 5 [default = 0];
inline bool SuperGvgUserData::has_chipnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SuperGvgUserData::set_has_chipnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SuperGvgUserData::clear_has_chipnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SuperGvgUserData::clear_chipnum() {
  chipnum_ = 0u;
  clear_has_chipnum();
}
inline ::google::protobuf::uint32 SuperGvgUserData::chipnum() const {
  // @@protoc_insertion_point(field_get:Cmd.SuperGvgUserData.chipnum)
  return chipnum_;
}
inline void SuperGvgUserData::set_chipnum(::google::protobuf::uint32 value) {
  set_has_chipnum();
  chipnum_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SuperGvgUserData.chipnum)
}

// optional uint32 towertime = 6 [default = 0];
inline bool SuperGvgUserData::has_towertime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SuperGvgUserData::set_has_towertime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SuperGvgUserData::clear_has_towertime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SuperGvgUserData::clear_towertime() {
  towertime_ = 0u;
  clear_has_towertime();
}
inline ::google::protobuf::uint32 SuperGvgUserData::towertime() const {
  // @@protoc_insertion_point(field_get:Cmd.SuperGvgUserData.towertime)
  return towertime_;
}
inline void SuperGvgUserData::set_towertime(::google::protobuf::uint32 value) {
  set_has_towertime();
  towertime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SuperGvgUserData.towertime)
}

// optional uint32 healhp = 7 [default = 0];
inline bool SuperGvgUserData::has_healhp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SuperGvgUserData::set_has_healhp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SuperGvgUserData::clear_has_healhp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SuperGvgUserData::clear_healhp() {
  healhp_ = 0u;
  clear_has_healhp();
}
inline ::google::protobuf::uint32 SuperGvgUserData::healhp() const {
  // @@protoc_insertion_point(field_get:Cmd.SuperGvgUserData.healhp)
  return healhp_;
}
inline void SuperGvgUserData::set_healhp(::google::protobuf::uint32 value) {
  set_has_healhp();
  healhp_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SuperGvgUserData.healhp)
}

// optional uint32 relivenum = 8 [default = 0];
inline bool SuperGvgUserData::has_relivenum() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SuperGvgUserData::set_has_relivenum() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SuperGvgUserData::clear_has_relivenum() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SuperGvgUserData::clear_relivenum() {
  relivenum_ = 0u;
  clear_has_relivenum();
}
inline ::google::protobuf::uint32 SuperGvgUserData::relivenum() const {
  // @@protoc_insertion_point(field_get:Cmd.SuperGvgUserData.relivenum)
  return relivenum_;
}
inline void SuperGvgUserData::set_relivenum(::google::protobuf::uint32 value) {
  set_has_relivenum();
  relivenum_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SuperGvgUserData.relivenum)
}

// optional uint32 metaldamage = 9 [default = 0];
inline bool SuperGvgUserData::has_metaldamage() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SuperGvgUserData::set_has_metaldamage() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SuperGvgUserData::clear_has_metaldamage() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SuperGvgUserData::clear_metaldamage() {
  metaldamage_ = 0u;
  clear_has_metaldamage();
}
inline ::google::protobuf::uint32 SuperGvgUserData::metaldamage() const {
  // @@protoc_insertion_point(field_get:Cmd.SuperGvgUserData.metaldamage)
  return metaldamage_;
}
inline void SuperGvgUserData::set_metaldamage(::google::protobuf::uint32 value) {
  set_has_metaldamage();
  metaldamage_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SuperGvgUserData.metaldamage)
}

// -------------------------------------------------------------------

// SuperGvgGuildUserData

// required uint64 guildid = 1;
inline bool SuperGvgGuildUserData::has_guildid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SuperGvgGuildUserData::set_has_guildid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SuperGvgGuildUserData::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SuperGvgGuildUserData::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 SuperGvgGuildUserData::guildid() const {
  // @@protoc_insertion_point(field_get:Cmd.SuperGvgGuildUserData.guildid)
  return guildid_;
}
inline void SuperGvgGuildUserData::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SuperGvgGuildUserData.guildid)
}

// repeated .Cmd.SuperGvgUserData userdatas = 2;
inline int SuperGvgGuildUserData::userdatas_size() const {
  return userdatas_.size();
}
inline void SuperGvgGuildUserData::clear_userdatas() {
  userdatas_.Clear();
}
inline const ::Cmd::SuperGvgUserData& SuperGvgGuildUserData::userdatas(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SuperGvgGuildUserData.userdatas)
  return userdatas_.Get(index);
}
inline ::Cmd::SuperGvgUserData* SuperGvgGuildUserData::mutable_userdatas(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.SuperGvgGuildUserData.userdatas)
  return userdatas_.Mutable(index);
}
inline ::Cmd::SuperGvgUserData* SuperGvgGuildUserData::add_userdatas() {
  // @@protoc_insertion_point(field_add:Cmd.SuperGvgGuildUserData.userdatas)
  return userdatas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SuperGvgUserData >&
SuperGvgGuildUserData::userdatas() const {
  // @@protoc_insertion_point(field_list:Cmd.SuperGvgGuildUserData.userdatas)
  return userdatas_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::SuperGvgUserData >*
SuperGvgGuildUserData::mutable_userdatas() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SuperGvgGuildUserData.userdatas)
  return &userdatas_;
}

// -------------------------------------------------------------------

// SuperGvgQueryUserDataFubenCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool SuperGvgQueryUserDataFubenCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SuperGvgQueryUserDataFubenCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SuperGvgQueryUserDataFubenCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SuperGvgQueryUserDataFubenCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command SuperGvgQueryUserDataFubenCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SuperGvgQueryUserDataFubenCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SuperGvgQueryUserDataFubenCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SuperGvgQueryUserDataFubenCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = SUPERGVG_QUERY_USER_DATA];
inline bool SuperGvgQueryUserDataFubenCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SuperGvgQueryUserDataFubenCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SuperGvgQueryUserDataFubenCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SuperGvgQueryUserDataFubenCmd::clear_param() {
  param_ = 37;
  clear_has_param();
}
inline ::Cmd::FuBenParam SuperGvgQueryUserDataFubenCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SuperGvgQueryUserDataFubenCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void SuperGvgQueryUserDataFubenCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SuperGvgQueryUserDataFubenCmd.param)
}

// repeated .Cmd.SuperGvgGuildUserData guilduserdata = 3;
inline int SuperGvgQueryUserDataFubenCmd::guilduserdata_size() const {
  return guilduserdata_.size();
}
inline void SuperGvgQueryUserDataFubenCmd::clear_guilduserdata() {
  guilduserdata_.Clear();
}
inline const ::Cmd::SuperGvgGuildUserData& SuperGvgQueryUserDataFubenCmd::guilduserdata(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SuperGvgQueryUserDataFubenCmd.guilduserdata)
  return guilduserdata_.Get(index);
}
inline ::Cmd::SuperGvgGuildUserData* SuperGvgQueryUserDataFubenCmd::mutable_guilduserdata(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.SuperGvgQueryUserDataFubenCmd.guilduserdata)
  return guilduserdata_.Mutable(index);
}
inline ::Cmd::SuperGvgGuildUserData* SuperGvgQueryUserDataFubenCmd::add_guilduserdata() {
  // @@protoc_insertion_point(field_add:Cmd.SuperGvgQueryUserDataFubenCmd.guilduserdata)
  return guilduserdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SuperGvgGuildUserData >&
SuperGvgQueryUserDataFubenCmd::guilduserdata() const {
  // @@protoc_insertion_point(field_list:Cmd.SuperGvgQueryUserDataFubenCmd.guilduserdata)
  return guilduserdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::SuperGvgGuildUserData >*
SuperGvgQueryUserDataFubenCmd::mutable_guilduserdata() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SuperGvgQueryUserDataFubenCmd.guilduserdata)
  return &guilduserdata_;
}

// -------------------------------------------------------------------

// MvpBattleTeamData

// required uint64 teamid = 1;
inline bool MvpBattleTeamData::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MvpBattleTeamData::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MvpBattleTeamData::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MvpBattleTeamData::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 MvpBattleTeamData::teamid() const {
  // @@protoc_insertion_point(field_get:Cmd.MvpBattleTeamData.teamid)
  return teamid_;
}
inline void MvpBattleTeamData::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MvpBattleTeamData.teamid)
}

// optional string teamname = 2;
inline bool MvpBattleTeamData::has_teamname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MvpBattleTeamData::set_has_teamname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MvpBattleTeamData::clear_has_teamname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MvpBattleTeamData::clear_teamname() {
  if (teamname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    teamname_->clear();
  }
  clear_has_teamname();
}
inline const ::std::string& MvpBattleTeamData::teamname() const {
  // @@protoc_insertion_point(field_get:Cmd.MvpBattleTeamData.teamname)
  return *teamname_;
}
inline void MvpBattleTeamData::set_teamname(const ::std::string& value) {
  set_has_teamname();
  if (teamname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    teamname_ = new ::std::string;
  }
  teamname_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.MvpBattleTeamData.teamname)
}
inline void MvpBattleTeamData::set_teamname(const char* value) {
  set_has_teamname();
  if (teamname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    teamname_ = new ::std::string;
  }
  teamname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.MvpBattleTeamData.teamname)
}
inline void MvpBattleTeamData::set_teamname(const char* value, size_t size) {
  set_has_teamname();
  if (teamname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    teamname_ = new ::std::string;
  }
  teamname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.MvpBattleTeamData.teamname)
}
inline ::std::string* MvpBattleTeamData::mutable_teamname() {
  set_has_teamname();
  if (teamname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    teamname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.MvpBattleTeamData.teamname)
  return teamname_;
}
inline ::std::string* MvpBattleTeamData::release_teamname() {
  clear_has_teamname();
  if (teamname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = teamname_;
    teamname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MvpBattleTeamData::set_allocated_teamname(::std::string* teamname) {
  if (teamname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete teamname_;
  }
  if (teamname) {
    set_has_teamname();
    teamname_ = teamname;
  } else {
    clear_has_teamname();
    teamname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.MvpBattleTeamData.teamname)
}

// repeated uint32 killmvps = 3;
inline int MvpBattleTeamData::killmvps_size() const {
  return killmvps_.size();
}
inline void MvpBattleTeamData::clear_killmvps() {
  killmvps_.Clear();
}
inline ::google::protobuf::uint32 MvpBattleTeamData::killmvps(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.MvpBattleTeamData.killmvps)
  return killmvps_.Get(index);
}
inline void MvpBattleTeamData::set_killmvps(int index, ::google::protobuf::uint32 value) {
  killmvps_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.MvpBattleTeamData.killmvps)
}
inline void MvpBattleTeamData::add_killmvps(::google::protobuf::uint32 value) {
  killmvps_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.MvpBattleTeamData.killmvps)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MvpBattleTeamData::killmvps() const {
  // @@protoc_insertion_point(field_list:Cmd.MvpBattleTeamData.killmvps)
  return killmvps_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MvpBattleTeamData::mutable_killmvps() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.MvpBattleTeamData.killmvps)
  return &killmvps_;
}

// repeated uint32 killminis = 4;
inline int MvpBattleTeamData::killminis_size() const {
  return killminis_.size();
}
inline void MvpBattleTeamData::clear_killminis() {
  killminis_.Clear();
}
inline ::google::protobuf::uint32 MvpBattleTeamData::killminis(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.MvpBattleTeamData.killminis)
  return killminis_.Get(index);
}
inline void MvpBattleTeamData::set_killminis(int index, ::google::protobuf::uint32 value) {
  killminis_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.MvpBattleTeamData.killminis)
}
inline void MvpBattleTeamData::add_killminis(::google::protobuf::uint32 value) {
  killminis_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.MvpBattleTeamData.killminis)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MvpBattleTeamData::killminis() const {
  // @@protoc_insertion_point(field_list:Cmd.MvpBattleTeamData.killminis)
  return killminis_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MvpBattleTeamData::mutable_killminis() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.MvpBattleTeamData.killminis)
  return &killminis_;
}

// optional uint32 killusernum = 5 [default = 0];
inline bool MvpBattleTeamData::has_killusernum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MvpBattleTeamData::set_has_killusernum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MvpBattleTeamData::clear_has_killusernum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MvpBattleTeamData::clear_killusernum() {
  killusernum_ = 0u;
  clear_has_killusernum();
}
inline ::google::protobuf::uint32 MvpBattleTeamData::killusernum() const {
  // @@protoc_insertion_point(field_get:Cmd.MvpBattleTeamData.killusernum)
  return killusernum_;
}
inline void MvpBattleTeamData::set_killusernum(::google::protobuf::uint32 value) {
  set_has_killusernum();
  killusernum_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MvpBattleTeamData.killusernum)
}

// repeated uint32 deadboss = 6;
inline int MvpBattleTeamData::deadboss_size() const {
  return deadboss_.size();
}
inline void MvpBattleTeamData::clear_deadboss() {
  deadboss_.Clear();
}
inline ::google::protobuf::uint32 MvpBattleTeamData::deadboss(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.MvpBattleTeamData.deadboss)
  return deadboss_.Get(index);
}
inline void MvpBattleTeamData::set_deadboss(int index, ::google::protobuf::uint32 value) {
  deadboss_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.MvpBattleTeamData.deadboss)
}
inline void MvpBattleTeamData::add_deadboss(::google::protobuf::uint32 value) {
  deadboss_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.MvpBattleTeamData.deadboss)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MvpBattleTeamData::deadboss() const {
  // @@protoc_insertion_point(field_list:Cmd.MvpBattleTeamData.deadboss)
  return deadboss_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MvpBattleTeamData::mutable_deadboss() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.MvpBattleTeamData.deadboss)
  return &deadboss_;
}

// -------------------------------------------------------------------

// MvpBattleReportFubenCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool MvpBattleReportFubenCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MvpBattleReportFubenCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MvpBattleReportFubenCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MvpBattleReportFubenCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command MvpBattleReportFubenCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.MvpBattleReportFubenCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void MvpBattleReportFubenCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MvpBattleReportFubenCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = MVPBATTLE_END_REPORT];
inline bool MvpBattleReportFubenCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MvpBattleReportFubenCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MvpBattleReportFubenCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MvpBattleReportFubenCmd::clear_param() {
  param_ = 38;
  clear_has_param();
}
inline ::Cmd::FuBenParam MvpBattleReportFubenCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.MvpBattleReportFubenCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void MvpBattleReportFubenCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MvpBattleReportFubenCmd.param)
}

// repeated .Cmd.MvpBattleTeamData datas = 3;
inline int MvpBattleReportFubenCmd::datas_size() const {
  return datas_.size();
}
inline void MvpBattleReportFubenCmd::clear_datas() {
  datas_.Clear();
}
inline const ::Cmd::MvpBattleTeamData& MvpBattleReportFubenCmd::datas(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.MvpBattleReportFubenCmd.datas)
  return datas_.Get(index);
}
inline ::Cmd::MvpBattleTeamData* MvpBattleReportFubenCmd::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.MvpBattleReportFubenCmd.datas)
  return datas_.Mutable(index);
}
inline ::Cmd::MvpBattleTeamData* MvpBattleReportFubenCmd::add_datas() {
  // @@protoc_insertion_point(field_add:Cmd.MvpBattleReportFubenCmd.datas)
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::MvpBattleTeamData >&
MvpBattleReportFubenCmd::datas() const {
  // @@protoc_insertion_point(field_list:Cmd.MvpBattleReportFubenCmd.datas)
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::MvpBattleTeamData >*
MvpBattleReportFubenCmd::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.MvpBattleReportFubenCmd.datas)
  return &datas_;
}

// -------------------------------------------------------------------

// TeamPwsRaidUserInfo

// optional uint64 charid = 1;
inline bool TeamPwsRaidUserInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamPwsRaidUserInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamPwsRaidUserInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamPwsRaidUserInfo::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 TeamPwsRaidUserInfo::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamPwsRaidUserInfo.charid)
  return charid_;
}
inline void TeamPwsRaidUserInfo::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamPwsRaidUserInfo.charid)
}

// optional string name = 2;
inline bool TeamPwsRaidUserInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamPwsRaidUserInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamPwsRaidUserInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamPwsRaidUserInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& TeamPwsRaidUserInfo::name() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamPwsRaidUserInfo.name)
  return *name_;
}
inline void TeamPwsRaidUserInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.TeamPwsRaidUserInfo.name)
}
inline void TeamPwsRaidUserInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.TeamPwsRaidUserInfo.name)
}
inline void TeamPwsRaidUserInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.TeamPwsRaidUserInfo.name)
}
inline ::std::string* TeamPwsRaidUserInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.TeamPwsRaidUserInfo.name)
  return name_;
}
inline ::std::string* TeamPwsRaidUserInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TeamPwsRaidUserInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TeamPwsRaidUserInfo.name)
}

// optional uint32 killnum = 3;
inline bool TeamPwsRaidUserInfo::has_killnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamPwsRaidUserInfo::set_has_killnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamPwsRaidUserInfo::clear_has_killnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamPwsRaidUserInfo::clear_killnum() {
  killnum_ = 0u;
  clear_has_killnum();
}
inline ::google::protobuf::uint32 TeamPwsRaidUserInfo::killnum() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamPwsRaidUserInfo.killnum)
  return killnum_;
}
inline void TeamPwsRaidUserInfo::set_killnum(::google::protobuf::uint32 value) {
  set_has_killnum();
  killnum_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamPwsRaidUserInfo.killnum)
}

// optional uint32 heal = 4;
inline bool TeamPwsRaidUserInfo::has_heal() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamPwsRaidUserInfo::set_has_heal() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamPwsRaidUserInfo::clear_has_heal() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamPwsRaidUserInfo::clear_heal() {
  heal_ = 0u;
  clear_has_heal();
}
inline ::google::protobuf::uint32 TeamPwsRaidUserInfo::heal() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamPwsRaidUserInfo.heal)
  return heal_;
}
inline void TeamPwsRaidUserInfo::set_heal(::google::protobuf::uint32 value) {
  set_has_heal();
  heal_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamPwsRaidUserInfo.heal)
}

// optional uint32 killscore = 5;
inline bool TeamPwsRaidUserInfo::has_killscore() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TeamPwsRaidUserInfo::set_has_killscore() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TeamPwsRaidUserInfo::clear_has_killscore() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TeamPwsRaidUserInfo::clear_killscore() {
  killscore_ = 0u;
  clear_has_killscore();
}
inline ::google::protobuf::uint32 TeamPwsRaidUserInfo::killscore() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamPwsRaidUserInfo.killscore)
  return killscore_;
}
inline void TeamPwsRaidUserInfo::set_killscore(::google::protobuf::uint32 value) {
  set_has_killscore();
  killscore_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamPwsRaidUserInfo.killscore)
}

// optional uint32 ballscore = 6;
inline bool TeamPwsRaidUserInfo::has_ballscore() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TeamPwsRaidUserInfo::set_has_ballscore() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TeamPwsRaidUserInfo::clear_has_ballscore() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TeamPwsRaidUserInfo::clear_ballscore() {
  ballscore_ = 0u;
  clear_has_ballscore();
}
inline ::google::protobuf::uint32 TeamPwsRaidUserInfo::ballscore() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamPwsRaidUserInfo.ballscore)
  return ballscore_;
}
inline void TeamPwsRaidUserInfo::set_ballscore(::google::protobuf::uint32 value) {
  set_has_ballscore();
  ballscore_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamPwsRaidUserInfo.ballscore)
}

// optional uint32 buffscore = 7;
inline bool TeamPwsRaidUserInfo::has_buffscore() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TeamPwsRaidUserInfo::set_has_buffscore() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TeamPwsRaidUserInfo::clear_has_buffscore() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TeamPwsRaidUserInfo::clear_buffscore() {
  buffscore_ = 0u;
  clear_has_buffscore();
}
inline ::google::protobuf::uint32 TeamPwsRaidUserInfo::buffscore() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamPwsRaidUserInfo.buffscore)
  return buffscore_;
}
inline void TeamPwsRaidUserInfo::set_buffscore(::google::protobuf::uint32 value) {
  set_has_buffscore();
  buffscore_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamPwsRaidUserInfo.buffscore)
}

// optional uint32 dienum = 8;
inline bool TeamPwsRaidUserInfo::has_dienum() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TeamPwsRaidUserInfo::set_has_dienum() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TeamPwsRaidUserInfo::clear_has_dienum() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TeamPwsRaidUserInfo::clear_dienum() {
  dienum_ = 0u;
  clear_has_dienum();
}
inline ::google::protobuf::uint32 TeamPwsRaidUserInfo::dienum() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamPwsRaidUserInfo.dienum)
  return dienum_;
}
inline void TeamPwsRaidUserInfo::set_dienum(::google::protobuf::uint32 value) {
  set_has_dienum();
  dienum_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamPwsRaidUserInfo.dienum)
}

// -------------------------------------------------------------------

// TeamPwsRaidTeamInfo

// optional uint64 teamid = 1;
inline bool TeamPwsRaidTeamInfo::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamPwsRaidTeamInfo::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamPwsRaidTeamInfo::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamPwsRaidTeamInfo::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TeamPwsRaidTeamInfo::teamid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamPwsRaidTeamInfo.teamid)
  return teamid_;
}
inline void TeamPwsRaidTeamInfo::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamPwsRaidTeamInfo.teamid)
}

// optional .Cmd.ETeamPwsColor color = 2;
inline bool TeamPwsRaidTeamInfo::has_color() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamPwsRaidTeamInfo::set_has_color() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamPwsRaidTeamInfo::clear_has_color() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamPwsRaidTeamInfo::clear_color() {
  color_ = 1;
  clear_has_color();
}
inline ::Cmd::ETeamPwsColor TeamPwsRaidTeamInfo::color() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamPwsRaidTeamInfo.color)
  return static_cast< ::Cmd::ETeamPwsColor >(color_);
}
inline void TeamPwsRaidTeamInfo::set_color(::Cmd::ETeamPwsColor value) {
  assert(::Cmd::ETeamPwsColor_IsValid(value));
  set_has_color();
  color_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamPwsRaidTeamInfo.color)
}

// repeated .Cmd.TeamPwsRaidUserInfo userinfos = 3;
inline int TeamPwsRaidTeamInfo::userinfos_size() const {
  return userinfos_.size();
}
inline void TeamPwsRaidTeamInfo::clear_userinfos() {
  userinfos_.Clear();
}
inline const ::Cmd::TeamPwsRaidUserInfo& TeamPwsRaidTeamInfo::userinfos(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TeamPwsRaidTeamInfo.userinfos)
  return userinfos_.Get(index);
}
inline ::Cmd::TeamPwsRaidUserInfo* TeamPwsRaidTeamInfo::mutable_userinfos(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.TeamPwsRaidTeamInfo.userinfos)
  return userinfos_.Mutable(index);
}
inline ::Cmd::TeamPwsRaidUserInfo* TeamPwsRaidTeamInfo::add_userinfos() {
  // @@protoc_insertion_point(field_add:Cmd.TeamPwsRaidTeamInfo.userinfos)
  return userinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamPwsRaidUserInfo >&
TeamPwsRaidTeamInfo::userinfos() const {
  // @@protoc_insertion_point(field_list:Cmd.TeamPwsRaidTeamInfo.userinfos)
  return userinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamPwsRaidUserInfo >*
TeamPwsRaidTeamInfo::mutable_userinfos() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TeamPwsRaidTeamInfo.userinfos)
  return &userinfos_;
}

// -------------------------------------------------------------------

// QueryTeamPwsUserInfoFubenCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool QueryTeamPwsUserInfoFubenCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryTeamPwsUserInfoFubenCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryTeamPwsUserInfoFubenCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryTeamPwsUserInfoFubenCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command QueryTeamPwsUserInfoFubenCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryTeamPwsUserInfoFubenCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryTeamPwsUserInfoFubenCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryTeamPwsUserInfoFubenCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = QUERY_RAID_TEAMPWS_USERINFO];
inline bool QueryTeamPwsUserInfoFubenCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryTeamPwsUserInfoFubenCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryTeamPwsUserInfoFubenCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryTeamPwsUserInfoFubenCmd::clear_param() {
  param_ = 42;
  clear_has_param();
}
inline ::Cmd::FuBenParam QueryTeamPwsUserInfoFubenCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryTeamPwsUserInfoFubenCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void QueryTeamPwsUserInfoFubenCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryTeamPwsUserInfoFubenCmd.param)
}

// repeated .Cmd.TeamPwsRaidTeamInfo teaminfo = 3;
inline int QueryTeamPwsUserInfoFubenCmd::teaminfo_size() const {
  return teaminfo_.size();
}
inline void QueryTeamPwsUserInfoFubenCmd::clear_teaminfo() {
  teaminfo_.Clear();
}
inline const ::Cmd::TeamPwsRaidTeamInfo& QueryTeamPwsUserInfoFubenCmd::teaminfo(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QueryTeamPwsUserInfoFubenCmd.teaminfo)
  return teaminfo_.Get(index);
}
inline ::Cmd::TeamPwsRaidTeamInfo* QueryTeamPwsUserInfoFubenCmd::mutable_teaminfo(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.QueryTeamPwsUserInfoFubenCmd.teaminfo)
  return teaminfo_.Mutable(index);
}
inline ::Cmd::TeamPwsRaidTeamInfo* QueryTeamPwsUserInfoFubenCmd::add_teaminfo() {
  // @@protoc_insertion_point(field_add:Cmd.QueryTeamPwsUserInfoFubenCmd.teaminfo)
  return teaminfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamPwsRaidTeamInfo >&
QueryTeamPwsUserInfoFubenCmd::teaminfo() const {
  // @@protoc_insertion_point(field_list:Cmd.QueryTeamPwsUserInfoFubenCmd.teaminfo)
  return teaminfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamPwsRaidTeamInfo >*
QueryTeamPwsUserInfoFubenCmd::mutable_teaminfo() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QueryTeamPwsUserInfoFubenCmd.teaminfo)
  return &teaminfo_;
}

// -------------------------------------------------------------------

// TeamPwsReportFubenCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool TeamPwsReportFubenCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamPwsReportFubenCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamPwsReportFubenCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamPwsReportFubenCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command TeamPwsReportFubenCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamPwsReportFubenCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TeamPwsReportFubenCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamPwsReportFubenCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = TEAMPWS_END_REPORT];
inline bool TeamPwsReportFubenCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamPwsReportFubenCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamPwsReportFubenCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamPwsReportFubenCmd::clear_param() {
  param_ = 43;
  clear_has_param();
}
inline ::Cmd::FuBenParam TeamPwsReportFubenCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamPwsReportFubenCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void TeamPwsReportFubenCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamPwsReportFubenCmd.param)
}

// repeated .Cmd.TeamPwsRaidTeamInfo teaminfo = 3;
inline int TeamPwsReportFubenCmd::teaminfo_size() const {
  return teaminfo_.size();
}
inline void TeamPwsReportFubenCmd::clear_teaminfo() {
  teaminfo_.Clear();
}
inline const ::Cmd::TeamPwsRaidTeamInfo& TeamPwsReportFubenCmd::teaminfo(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TeamPwsReportFubenCmd.teaminfo)
  return teaminfo_.Get(index);
}
inline ::Cmd::TeamPwsRaidTeamInfo* TeamPwsReportFubenCmd::mutable_teaminfo(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.TeamPwsReportFubenCmd.teaminfo)
  return teaminfo_.Mutable(index);
}
inline ::Cmd::TeamPwsRaidTeamInfo* TeamPwsReportFubenCmd::add_teaminfo() {
  // @@protoc_insertion_point(field_add:Cmd.TeamPwsReportFubenCmd.teaminfo)
  return teaminfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamPwsRaidTeamInfo >&
TeamPwsReportFubenCmd::teaminfo() const {
  // @@protoc_insertion_point(field_list:Cmd.TeamPwsReportFubenCmd.teaminfo)
  return teaminfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamPwsRaidTeamInfo >*
TeamPwsReportFubenCmd::mutable_teaminfo() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TeamPwsReportFubenCmd.teaminfo)
  return &teaminfo_;
}

// optional .Cmd.QueryUserInfo mvpuserinfo = 4;
inline bool TeamPwsReportFubenCmd::has_mvpuserinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamPwsReportFubenCmd::set_has_mvpuserinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamPwsReportFubenCmd::clear_has_mvpuserinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamPwsReportFubenCmd::clear_mvpuserinfo() {
  if (mvpuserinfo_ != NULL) mvpuserinfo_->::Cmd::QueryUserInfo::Clear();
  clear_has_mvpuserinfo();
}
inline const ::Cmd::QueryUserInfo& TeamPwsReportFubenCmd::mvpuserinfo() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamPwsReportFubenCmd.mvpuserinfo)
  return mvpuserinfo_ != NULL ? *mvpuserinfo_ : *default_instance_->mvpuserinfo_;
}
inline ::Cmd::QueryUserInfo* TeamPwsReportFubenCmd::mutable_mvpuserinfo() {
  set_has_mvpuserinfo();
  if (mvpuserinfo_ == NULL) mvpuserinfo_ = new ::Cmd::QueryUserInfo;
  // @@protoc_insertion_point(field_mutable:Cmd.TeamPwsReportFubenCmd.mvpuserinfo)
  return mvpuserinfo_;
}
inline ::Cmd::QueryUserInfo* TeamPwsReportFubenCmd::release_mvpuserinfo() {
  clear_has_mvpuserinfo();
  ::Cmd::QueryUserInfo* temp = mvpuserinfo_;
  mvpuserinfo_ = NULL;
  return temp;
}
inline void TeamPwsReportFubenCmd::set_allocated_mvpuserinfo(::Cmd::QueryUserInfo* mvpuserinfo) {
  delete mvpuserinfo_;
  mvpuserinfo_ = mvpuserinfo;
  if (mvpuserinfo) {
    set_has_mvpuserinfo();
  } else {
    clear_has_mvpuserinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TeamPwsReportFubenCmd.mvpuserinfo)
}

// required .Cmd.ETeamPwsColor winteam = 5;
inline bool TeamPwsReportFubenCmd::has_winteam() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TeamPwsReportFubenCmd::set_has_winteam() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TeamPwsReportFubenCmd::clear_has_winteam() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TeamPwsReportFubenCmd::clear_winteam() {
  winteam_ = 1;
  clear_has_winteam();
}
inline ::Cmd::ETeamPwsColor TeamPwsReportFubenCmd::winteam() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamPwsReportFubenCmd.winteam)
  return static_cast< ::Cmd::ETeamPwsColor >(winteam_);
}
inline void TeamPwsReportFubenCmd::set_winteam(::Cmd::ETeamPwsColor value) {
  assert(::Cmd::ETeamPwsColor_IsValid(value));
  set_has_winteam();
  winteam_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamPwsReportFubenCmd.winteam)
}

// -------------------------------------------------------------------

// TeamPwsInfoSyncData

// optional uint64 teamid = 1;
inline bool TeamPwsInfoSyncData::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamPwsInfoSyncData::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamPwsInfoSyncData::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamPwsInfoSyncData::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TeamPwsInfoSyncData::teamid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamPwsInfoSyncData.teamid)
  return teamid_;
}
inline void TeamPwsInfoSyncData::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamPwsInfoSyncData.teamid)
}

// optional string teamname = 2;
inline bool TeamPwsInfoSyncData::has_teamname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamPwsInfoSyncData::set_has_teamname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamPwsInfoSyncData::clear_has_teamname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamPwsInfoSyncData::clear_teamname() {
  if (teamname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    teamname_->clear();
  }
  clear_has_teamname();
}
inline const ::std::string& TeamPwsInfoSyncData::teamname() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamPwsInfoSyncData.teamname)
  return *teamname_;
}
inline void TeamPwsInfoSyncData::set_teamname(const ::std::string& value) {
  set_has_teamname();
  if (teamname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    teamname_ = new ::std::string;
  }
  teamname_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.TeamPwsInfoSyncData.teamname)
}
inline void TeamPwsInfoSyncData::set_teamname(const char* value) {
  set_has_teamname();
  if (teamname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    teamname_ = new ::std::string;
  }
  teamname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.TeamPwsInfoSyncData.teamname)
}
inline void TeamPwsInfoSyncData::set_teamname(const char* value, size_t size) {
  set_has_teamname();
  if (teamname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    teamname_ = new ::std::string;
  }
  teamname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.TeamPwsInfoSyncData.teamname)
}
inline ::std::string* TeamPwsInfoSyncData::mutable_teamname() {
  set_has_teamname();
  if (teamname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    teamname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.TeamPwsInfoSyncData.teamname)
  return teamname_;
}
inline ::std::string* TeamPwsInfoSyncData::release_teamname() {
  clear_has_teamname();
  if (teamname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = teamname_;
    teamname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TeamPwsInfoSyncData::set_allocated_teamname(::std::string* teamname) {
  if (teamname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete teamname_;
  }
  if (teamname) {
    set_has_teamname();
    teamname_ = teamname;
  } else {
    clear_has_teamname();
    teamname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.TeamPwsInfoSyncData.teamname)
}

// optional .Cmd.ETeamPwsColor color = 3;
inline bool TeamPwsInfoSyncData::has_color() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamPwsInfoSyncData::set_has_color() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamPwsInfoSyncData::clear_has_color() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamPwsInfoSyncData::clear_color() {
  color_ = 1;
  clear_has_color();
}
inline ::Cmd::ETeamPwsColor TeamPwsInfoSyncData::color() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamPwsInfoSyncData.color)
  return static_cast< ::Cmd::ETeamPwsColor >(color_);
}
inline void TeamPwsInfoSyncData::set_color(::Cmd::ETeamPwsColor value) {
  assert(::Cmd::ETeamPwsColor_IsValid(value));
  set_has_color();
  color_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamPwsInfoSyncData.color)
}

// optional uint32 score = 4 [default = 0];
inline bool TeamPwsInfoSyncData::has_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamPwsInfoSyncData::set_has_score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamPwsInfoSyncData::clear_has_score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamPwsInfoSyncData::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 TeamPwsInfoSyncData::score() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamPwsInfoSyncData.score)
  return score_;
}
inline void TeamPwsInfoSyncData::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamPwsInfoSyncData.score)
}

// optional uint32 effectcd = 5 [default = 0];
inline bool TeamPwsInfoSyncData::has_effectcd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TeamPwsInfoSyncData::set_has_effectcd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TeamPwsInfoSyncData::clear_has_effectcd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TeamPwsInfoSyncData::clear_effectcd() {
  effectcd_ = 0u;
  clear_has_effectcd();
}
inline ::google::protobuf::uint32 TeamPwsInfoSyncData::effectcd() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamPwsInfoSyncData.effectcd)
  return effectcd_;
}
inline void TeamPwsInfoSyncData::set_effectcd(::google::protobuf::uint32 value) {
  set_has_effectcd();
  effectcd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamPwsInfoSyncData.effectcd)
}

// optional uint32 magicid = 6 [default = 0];
inline bool TeamPwsInfoSyncData::has_magicid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TeamPwsInfoSyncData::set_has_magicid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TeamPwsInfoSyncData::clear_has_magicid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TeamPwsInfoSyncData::clear_magicid() {
  magicid_ = 0u;
  clear_has_magicid();
}
inline ::google::protobuf::uint32 TeamPwsInfoSyncData::magicid() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamPwsInfoSyncData.magicid)
  return magicid_;
}
inline void TeamPwsInfoSyncData::set_magicid(::google::protobuf::uint32 value) {
  set_has_magicid();
  magicid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamPwsInfoSyncData.magicid)
}

// repeated .Cmd.EMagicBallType balls = 7;
inline int TeamPwsInfoSyncData::balls_size() const {
  return balls_.size();
}
inline void TeamPwsInfoSyncData::clear_balls() {
  balls_.Clear();
}
inline ::Cmd::EMagicBallType TeamPwsInfoSyncData::balls(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TeamPwsInfoSyncData.balls)
  return static_cast< ::Cmd::EMagicBallType >(balls_.Get(index));
}
inline void TeamPwsInfoSyncData::set_balls(int index, ::Cmd::EMagicBallType value) {
  assert(::Cmd::EMagicBallType_IsValid(value));
  balls_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.TeamPwsInfoSyncData.balls)
}
inline void TeamPwsInfoSyncData::add_balls(::Cmd::EMagicBallType value) {
  assert(::Cmd::EMagicBallType_IsValid(value));
  balls_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.TeamPwsInfoSyncData.balls)
}
inline const ::google::protobuf::RepeatedField<int>&
TeamPwsInfoSyncData::balls() const {
  // @@protoc_insertion_point(field_list:Cmd.TeamPwsInfoSyncData.balls)
  return balls_;
}
inline ::google::protobuf::RepeatedField<int>*
TeamPwsInfoSyncData::mutable_balls() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TeamPwsInfoSyncData.balls)
  return &balls_;
}

// -------------------------------------------------------------------

// TeamPwsInfoSyncFubenCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool TeamPwsInfoSyncFubenCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamPwsInfoSyncFubenCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamPwsInfoSyncFubenCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamPwsInfoSyncFubenCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command TeamPwsInfoSyncFubenCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamPwsInfoSyncFubenCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void TeamPwsInfoSyncFubenCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamPwsInfoSyncFubenCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = TEAMPWS_SYNC_INFO];
inline bool TeamPwsInfoSyncFubenCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamPwsInfoSyncFubenCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamPwsInfoSyncFubenCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamPwsInfoSyncFubenCmd::clear_param() {
  param_ = 44;
  clear_has_param();
}
inline ::Cmd::FuBenParam TeamPwsInfoSyncFubenCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamPwsInfoSyncFubenCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void TeamPwsInfoSyncFubenCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamPwsInfoSyncFubenCmd.param)
}

// repeated .Cmd.TeamPwsInfoSyncData teaminfo = 3;
inline int TeamPwsInfoSyncFubenCmd::teaminfo_size() const {
  return teaminfo_.size();
}
inline void TeamPwsInfoSyncFubenCmd::clear_teaminfo() {
  teaminfo_.Clear();
}
inline const ::Cmd::TeamPwsInfoSyncData& TeamPwsInfoSyncFubenCmd::teaminfo(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.TeamPwsInfoSyncFubenCmd.teaminfo)
  return teaminfo_.Get(index);
}
inline ::Cmd::TeamPwsInfoSyncData* TeamPwsInfoSyncFubenCmd::mutable_teaminfo(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.TeamPwsInfoSyncFubenCmd.teaminfo)
  return teaminfo_.Mutable(index);
}
inline ::Cmd::TeamPwsInfoSyncData* TeamPwsInfoSyncFubenCmd::add_teaminfo() {
  // @@protoc_insertion_point(field_add:Cmd.TeamPwsInfoSyncFubenCmd.teaminfo)
  return teaminfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamPwsInfoSyncData >&
TeamPwsInfoSyncFubenCmd::teaminfo() const {
  // @@protoc_insertion_point(field_list:Cmd.TeamPwsInfoSyncFubenCmd.teaminfo)
  return teaminfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamPwsInfoSyncData >*
TeamPwsInfoSyncFubenCmd::mutable_teaminfo() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.TeamPwsInfoSyncFubenCmd.teaminfo)
  return &teaminfo_;
}

// optional uint32 endtime = 4;
inline bool TeamPwsInfoSyncFubenCmd::has_endtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamPwsInfoSyncFubenCmd::set_has_endtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamPwsInfoSyncFubenCmd::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamPwsInfoSyncFubenCmd::clear_endtime() {
  endtime_ = 0u;
  clear_has_endtime();
}
inline ::google::protobuf::uint32 TeamPwsInfoSyncFubenCmd::endtime() const {
  // @@protoc_insertion_point(field_get:Cmd.TeamPwsInfoSyncFubenCmd.endtime)
  return endtime_;
}
inline void TeamPwsInfoSyncFubenCmd::set_endtime(::google::protobuf::uint32 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.TeamPwsInfoSyncFubenCmd.endtime)
}

// -------------------------------------------------------------------

// UpdateTeamPwsInfoFubenCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool UpdateTeamPwsInfoFubenCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateTeamPwsInfoFubenCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateTeamPwsInfoFubenCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateTeamPwsInfoFubenCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command UpdateTeamPwsInfoFubenCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateTeamPwsInfoFubenCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UpdateTeamPwsInfoFubenCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateTeamPwsInfoFubenCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = TEAMPWS_UPDATE_INFO];
inline bool UpdateTeamPwsInfoFubenCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateTeamPwsInfoFubenCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateTeamPwsInfoFubenCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateTeamPwsInfoFubenCmd::clear_param() {
  param_ = 47;
  clear_has_param();
}
inline ::Cmd::FuBenParam UpdateTeamPwsInfoFubenCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateTeamPwsInfoFubenCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void UpdateTeamPwsInfoFubenCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateTeamPwsInfoFubenCmd.param)
}

// repeated .Cmd.TeamPwsInfoSyncData teaminfo = 3;
inline int UpdateTeamPwsInfoFubenCmd::teaminfo_size() const {
  return teaminfo_.size();
}
inline void UpdateTeamPwsInfoFubenCmd::clear_teaminfo() {
  teaminfo_.Clear();
}
inline const ::Cmd::TeamPwsInfoSyncData& UpdateTeamPwsInfoFubenCmd::teaminfo(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateTeamPwsInfoFubenCmd.teaminfo)
  return teaminfo_.Get(index);
}
inline ::Cmd::TeamPwsInfoSyncData* UpdateTeamPwsInfoFubenCmd::mutable_teaminfo(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.UpdateTeamPwsInfoFubenCmd.teaminfo)
  return teaminfo_.Mutable(index);
}
inline ::Cmd::TeamPwsInfoSyncData* UpdateTeamPwsInfoFubenCmd::add_teaminfo() {
  // @@protoc_insertion_point(field_add:Cmd.UpdateTeamPwsInfoFubenCmd.teaminfo)
  return teaminfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::TeamPwsInfoSyncData >&
UpdateTeamPwsInfoFubenCmd::teaminfo() const {
  // @@protoc_insertion_point(field_list:Cmd.UpdateTeamPwsInfoFubenCmd.teaminfo)
  return teaminfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::TeamPwsInfoSyncData >*
UpdateTeamPwsInfoFubenCmd::mutable_teaminfo() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UpdateTeamPwsInfoFubenCmd.teaminfo)
  return &teaminfo_;
}

// -------------------------------------------------------------------

// SelectTeamPwsMagicFubenCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool SelectTeamPwsMagicFubenCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SelectTeamPwsMagicFubenCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SelectTeamPwsMagicFubenCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SelectTeamPwsMagicFubenCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command SelectTeamPwsMagicFubenCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SelectTeamPwsMagicFubenCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SelectTeamPwsMagicFubenCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SelectTeamPwsMagicFubenCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = TEAMPWS_SELECT_MAGIC];
inline bool SelectTeamPwsMagicFubenCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SelectTeamPwsMagicFubenCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SelectTeamPwsMagicFubenCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SelectTeamPwsMagicFubenCmd::clear_param() {
  param_ = 45;
  clear_has_param();
}
inline ::Cmd::FuBenParam SelectTeamPwsMagicFubenCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SelectTeamPwsMagicFubenCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void SelectTeamPwsMagicFubenCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SelectTeamPwsMagicFubenCmd.param)
}

// required uint32 magicid = 3;
inline bool SelectTeamPwsMagicFubenCmd::has_magicid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SelectTeamPwsMagicFubenCmd::set_has_magicid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SelectTeamPwsMagicFubenCmd::clear_has_magicid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SelectTeamPwsMagicFubenCmd::clear_magicid() {
  magicid_ = 0u;
  clear_has_magicid();
}
inline ::google::protobuf::uint32 SelectTeamPwsMagicFubenCmd::magicid() const {
  // @@protoc_insertion_point(field_get:Cmd.SelectTeamPwsMagicFubenCmd.magicid)
  return magicid_;
}
inline void SelectTeamPwsMagicFubenCmd::set_magicid(::google::protobuf::uint32 value) {
  set_has_magicid();
  magicid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SelectTeamPwsMagicFubenCmd.magicid)
}

// -------------------------------------------------------------------

// InviteSummonBossFubenCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool InviteSummonBossFubenCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InviteSummonBossFubenCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InviteSummonBossFubenCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InviteSummonBossFubenCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command InviteSummonBossFubenCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.InviteSummonBossFubenCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void InviteSummonBossFubenCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.InviteSummonBossFubenCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = INVITE_SUMMON_DEADBOSS];
inline bool InviteSummonBossFubenCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InviteSummonBossFubenCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InviteSummonBossFubenCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InviteSummonBossFubenCmd::clear_param() {
  param_ = 40;
  clear_has_param();
}
inline ::Cmd::FuBenParam InviteSummonBossFubenCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.InviteSummonBossFubenCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void InviteSummonBossFubenCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.InviteSummonBossFubenCmd.param)
}

// -------------------------------------------------------------------

// ReplySummonBossFubenCmd

// optional .Cmd.Command cmd = 1 [default = FUBEN_PROTOCMD];
inline bool ReplySummonBossFubenCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplySummonBossFubenCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplySummonBossFubenCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplySummonBossFubenCmd::clear_cmd() {
  cmd_ = 11;
  clear_has_cmd();
}
inline ::Cmd::Command ReplySummonBossFubenCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ReplySummonBossFubenCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ReplySummonBossFubenCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ReplySummonBossFubenCmd.cmd)
}

// optional .Cmd.FuBenParam param = 2 [default = REPLY_SUMMON_DEADBOSS];
inline bool ReplySummonBossFubenCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplySummonBossFubenCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplySummonBossFubenCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplySummonBossFubenCmd::clear_param() {
  param_ = 41;
  clear_has_param();
}
inline ::Cmd::FuBenParam ReplySummonBossFubenCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ReplySummonBossFubenCmd.param)
  return static_cast< ::Cmd::FuBenParam >(param_);
}
inline void ReplySummonBossFubenCmd::set_param(::Cmd::FuBenParam value) {
  assert(::Cmd::FuBenParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ReplySummonBossFubenCmd.param)
}

// optional bool isfull = 3 [default = false];
inline bool ReplySummonBossFubenCmd::has_isfull() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplySummonBossFubenCmd::set_has_isfull() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplySummonBossFubenCmd::clear_has_isfull() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplySummonBossFubenCmd::clear_isfull() {
  isfull_ = false;
  clear_has_isfull();
}
inline bool ReplySummonBossFubenCmd::isfull() const {
  // @@protoc_insertion_point(field_get:Cmd.ReplySummonBossFubenCmd.isfull)
  return isfull_;
}
inline void ReplySummonBossFubenCmd::set_isfull(bool value) {
  set_has_isfull();
  isfull_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ReplySummonBossFubenCmd.isfull)
}

// optional bool agree = 4 [default = false];
inline bool ReplySummonBossFubenCmd::has_agree() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReplySummonBossFubenCmd::set_has_agree() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReplySummonBossFubenCmd::clear_has_agree() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReplySummonBossFubenCmd::clear_agree() {
  agree_ = false;
  clear_has_agree();
}
inline bool ReplySummonBossFubenCmd::agree() const {
  // @@protoc_insertion_point(field_get:Cmd.ReplySummonBossFubenCmd.agree)
  return agree_;
}
inline void ReplySummonBossFubenCmd::set_agree(bool value) {
  set_has_agree();
  agree_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ReplySummonBossFubenCmd.agree)
}

// optional uint64 charid = 5;
inline bool ReplySummonBossFubenCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReplySummonBossFubenCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReplySummonBossFubenCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReplySummonBossFubenCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ReplySummonBossFubenCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.ReplySummonBossFubenCmd.charid)
  return charid_;
}
inline void ReplySummonBossFubenCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ReplySummonBossFubenCmd.charid)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cmd

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Cmd::FuBenParam> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::FuBenParam>() {
  return ::Cmd::FuBenParam_descriptor();
}
template <> struct is_proto_enum< ::Cmd::ERaidType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::ERaidType>() {
  return ::Cmd::ERaidType_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EGuildGateState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EGuildGateState>() {
  return ::Cmd::EGuildGateState_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EGuildGateOpt> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EGuildGateOpt>() {
  return ::Cmd::EGuildGateOpt_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EGuildFireResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EGuildFireResult>() {
  return ::Cmd::EGuildFireResult_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EGvgDataType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EGvgDataType>() {
  return ::Cmd::EGvgDataType_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EGvgTowerState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EGvgTowerState>() {
  return ::Cmd::EGvgTowerState_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EGvgTowerType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EGvgTowerType>() {
  return ::Cmd::EGvgTowerType_descriptor();
}
template <> struct is_proto_enum< ::Cmd::ETeamPwsColor> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::ETeamPwsColor>() {
  return ::Cmd::ETeamPwsColor_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EMagicBallType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EMagicBallType>() {
  return ::Cmd::EMagicBallType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_FuBenCmd_2eproto__INCLUDED
