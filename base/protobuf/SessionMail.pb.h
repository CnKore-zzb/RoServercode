// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SessionMail.proto

#ifndef PROTOBUF_SessionMail_2eproto__INCLUDED
#define PROTOBUF_SessionMail_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "xCmd.pb.h"
#include "SceneItem.pb.h"
#include "WeddingCCmd.pb.h"
#include "UserEvent.pb.h"
// @@protoc_insertion_point(includes)

namespace Cmd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SessionMail_2eproto();
void protobuf_AssignDesc_SessionMail_2eproto();
void protobuf_ShutdownFile_SessionMail_2eproto();

class MailMsgParam;
class MailAttach;
class BlobAttach;
class MailData;
class MailMsg;
class MailTemplateData;
class QueryAllMail;
class MailUpdate;
class GetMailAttach;

enum MailParam {
  MAILPARAM_QUERYALLMAIL = 1,
  MAILPARAM_UPDATE = 2,
  MAILPARAM_GETATTACH = 3
};
bool MailParam_IsValid(int value);
const MailParam MailParam_MIN = MAILPARAM_QUERYALLMAIL;
const MailParam MailParam_MAX = MAILPARAM_GETATTACH;
const int MailParam_ARRAYSIZE = MailParam_MAX + 1;

const ::google::protobuf::EnumDescriptor* MailParam_descriptor();
inline const ::std::string& MailParam_Name(MailParam value) {
  return ::google::protobuf::internal::NameOfEnum(
    MailParam_descriptor(), value);
}
inline bool MailParam_Parse(
    const ::std::string& name, MailParam* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MailParam>(
    MailParam_descriptor(), name, value);
}
enum EMailStatus {
  EMAILSTATUS_MIN = 0,
  EMAILSTATUS_NEW = 1,
  EMAILSTATUS_ATTACH = 3,
  EMAILSTATUS_READ = 4,
  EMAILSTATUS_INVALID = 5,
  EMAILSTATUS_MAX = 6
};
bool EMailStatus_IsValid(int value);
const EMailStatus EMailStatus_MIN = EMAILSTATUS_MIN;
const EMailStatus EMailStatus_MAX = EMAILSTATUS_MAX;
const int EMailStatus_ARRAYSIZE = EMailStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* EMailStatus_descriptor();
inline const ::std::string& EMailStatus_Name(EMailStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    EMailStatus_descriptor(), value);
}
inline bool EMailStatus_Parse(
    const ::std::string& name, EMailStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EMailStatus>(
    EMailStatus_descriptor(), name, value);
}
enum EMailType {
  EMAILTYPE_MIN = 0,
  EMAILTYPE_NORMAL = 1,
  EMAILTYPE_SYSTEM = 2,
  EMAILTYPE_TRADE = 3,
  EMAILTYPE_LOTTERY_GIVE = 4,
  EMAILTYPE_WEDDINGMSG = 5,
  EMAILTYPE_WEDDINGINVITATION = 6,
  EMAILTYPE_USEREVENT = 7,
  EMAILTYPE_NORMAL_NOTIME = 8,
  EMAILTYPE_MAX = 9
};
bool EMailType_IsValid(int value);
const EMailType EMailType_MIN = EMAILTYPE_MIN;
const EMailType EMailType_MAX = EMAILTYPE_MAX;
const int EMailType_ARRAYSIZE = EMailType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EMailType_descriptor();
inline const ::std::string& EMailType_Name(EMailType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EMailType_descriptor(), value);
}
inline bool EMailType_Parse(
    const ::std::string& name, EMailType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EMailType>(
    EMailType_descriptor(), name, value);
}
enum EMailAttachType {
  EMAILATTACHTYPE_MIN = 0,
  EMAILATTACHTYPE_REWARD = 1,
  EMAILATTACHTYPE_ITEM = 2,
  EMAILATTACHTYPE_TRADE_BUY = 3,
  EMAILATTACHTYPE_TRADE_RETURN = 4,
  EMAILATTACHTYPE_TRADE_SELL = 5,
  EAMILATTACHTYPE_MSG_PARAMS = 6,
  EAMILATTACHTYPE_MAX = 7
};
bool EMailAttachType_IsValid(int value);
const EMailAttachType EMailAttachType_MIN = EMAILATTACHTYPE_MIN;
const EMailAttachType EMailAttachType_MAX = EAMILATTACHTYPE_MAX;
const int EMailAttachType_ARRAYSIZE = EMailAttachType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EMailAttachType_descriptor();
inline const ::std::string& EMailAttachType_Name(EMailAttachType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EMailAttachType_descriptor(), value);
}
inline bool EMailAttachType_Parse(
    const ::std::string& name, EMailAttachType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EMailAttachType>(
    EMailAttachType_descriptor(), name, value);
}
// ===================================================================

class MailMsgParam : public ::google::protobuf::Message {
 public:
  MailMsgParam();
  virtual ~MailMsgParam();

  MailMsgParam(const MailMsgParam& from);

  inline MailMsgParam& operator=(const MailMsgParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailMsgParam& default_instance();

  void Swap(MailMsgParam* other);

  // implements Message ----------------------------------------------

  MailMsgParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailMsgParam& from);
  void MergeFrom(const MailMsgParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mailid = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailidFieldNumber = 1;
  inline ::google::protobuf::uint32 mailid() const;
  inline void set_mailid(::google::protobuf::uint32 value);

  // repeated string params = 2;
  inline int params_size() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 2;
  inline const ::std::string& params(int index) const;
  inline ::std::string* mutable_params(int index);
  inline void set_params(int index, const ::std::string& value);
  inline void set_params(int index, const char* value);
  inline void set_params(int index, const char* value, size_t size);
  inline ::std::string* add_params();
  inline void add_params(const ::std::string& value);
  inline void add_params(const char* value);
  inline void add_params(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& params() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_params();

  // @@protoc_insertion_point(class_scope:Cmd.MailMsgParam)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> params_;
  ::google::protobuf::uint32 mailid_;
  friend void  protobuf_AddDesc_SessionMail_2eproto();
  friend void protobuf_AssignDesc_SessionMail_2eproto();
  friend void protobuf_ShutdownFile_SessionMail_2eproto();

  void InitAsDefaultInstance();
  static MailMsgParam* default_instance_;
};
// -------------------------------------------------------------------

class MailAttach : public ::google::protobuf::Message {
 public:
  MailAttach();
  virtual ~MailAttach();

  MailAttach(const MailAttach& from);

  inline MailAttach& operator=(const MailAttach& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailAttach& default_instance();

  void Swap(MailAttach* other);

  // implements Message ----------------------------------------------

  MailAttach* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailAttach& from);
  void MergeFrom(const MailAttach& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.EMailAttachType type = 1 [default = EMAILATTACHTYPE_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Cmd::EMailAttachType type() const;
  inline void set_type(::Cmd::EMailAttachType value);

  // optional uint32 id = 2 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // repeated .Cmd.ItemInfo items = 3;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 3;
  inline const ::Cmd::ItemInfo& items(int index) const;
  inline ::Cmd::ItemInfo* mutable_items(int index);
  inline ::Cmd::ItemInfo* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo >*
      mutable_items();

  // repeated .Cmd.ItemData itemdatas = 4;
  inline int itemdatas_size() const;
  inline void clear_itemdatas();
  static const int kItemdatasFieldNumber = 4;
  inline const ::Cmd::ItemData& itemdatas(int index) const;
  inline ::Cmd::ItemData* mutable_itemdatas(int index);
  inline ::Cmd::ItemData* add_itemdatas();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
      itemdatas() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
      mutable_itemdatas();

  // optional .Cmd.MailMsgParam msgdatas = 5;
  inline bool has_msgdatas() const;
  inline void clear_msgdatas();
  static const int kMsgdatasFieldNumber = 5;
  inline const ::Cmd::MailMsgParam& msgdatas() const;
  inline ::Cmd::MailMsgParam* mutable_msgdatas();
  inline ::Cmd::MailMsgParam* release_msgdatas();
  inline void set_allocated_msgdatas(::Cmd::MailMsgParam* msgdatas);

  // @@protoc_insertion_point(class_scope:Cmd.MailAttach)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_msgdatas();
  inline void clear_has_msgdatas();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo > items_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData > itemdatas_;
  ::Cmd::MailMsgParam* msgdatas_;
  friend void  protobuf_AddDesc_SessionMail_2eproto();
  friend void protobuf_AssignDesc_SessionMail_2eproto();
  friend void protobuf_ShutdownFile_SessionMail_2eproto();

  void InitAsDefaultInstance();
  static MailAttach* default_instance_;
};
// -------------------------------------------------------------------

class BlobAttach : public ::google::protobuf::Message {
 public:
  BlobAttach();
  virtual ~BlobAttach();

  BlobAttach(const BlobAttach& from);

  inline BlobAttach& operator=(const BlobAttach& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlobAttach& default_instance();

  void Swap(BlobAttach* other);

  // implements Message ----------------------------------------------

  BlobAttach* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlobAttach& from);
  void MergeFrom(const BlobAttach& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Cmd.MailAttach attachs = 1;
  inline int attachs_size() const;
  inline void clear_attachs();
  static const int kAttachsFieldNumber = 1;
  inline const ::Cmd::MailAttach& attachs(int index) const;
  inline ::Cmd::MailAttach* mutable_attachs(int index);
  inline ::Cmd::MailAttach* add_attachs();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::MailAttach >&
      attachs() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::MailAttach >*
      mutable_attachs();

  // @@protoc_insertion_point(class_scope:Cmd.BlobAttach)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::MailAttach > attachs_;
  friend void  protobuf_AddDesc_SessionMail_2eproto();
  friend void protobuf_AssignDesc_SessionMail_2eproto();
  friend void protobuf_ShutdownFile_SessionMail_2eproto();

  void InitAsDefaultInstance();
  static BlobAttach* default_instance_;
};
// -------------------------------------------------------------------

class MailData : public ::google::protobuf::Message {
 public:
  MailData();
  virtual ~MailData();

  MailData(const MailData& from);

  inline MailData& operator=(const MailData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailData& default_instance();

  void Swap(MailData* other);

  // implements Message ----------------------------------------------

  MailData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailData& from);
  void MergeFrom(const MailData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint64 sysid = 2 [default = 0];
  inline bool has_sysid() const;
  inline void clear_sysid();
  static const int kSysidFieldNumber = 2;
  inline ::google::protobuf::uint64 sysid() const;
  inline void set_sysid(::google::protobuf::uint64 value);

  // optional uint64 senderid = 3 [default = 0];
  inline bool has_senderid() const;
  inline void clear_senderid();
  static const int kSenderidFieldNumber = 3;
  inline ::google::protobuf::uint64 senderid() const;
  inline void set_senderid(::google::protobuf::uint64 value);

  // optional uint64 receiveid = 4 [default = 0];
  inline bool has_receiveid() const;
  inline void clear_receiveid();
  static const int kReceiveidFieldNumber = 4;
  inline ::google::protobuf::uint64 receiveid() const;
  inline void set_receiveid(::google::protobuf::uint64 value);

  // optional uint64 receiveaccid = 13 [default = 0];
  inline bool has_receiveaccid() const;
  inline void clear_receiveaccid();
  static const int kReceiveaccidFieldNumber = 13;
  inline ::google::protobuf::uint64 receiveaccid() const;
  inline void set_receiveaccid(::google::protobuf::uint64 value);

  // optional uint32 time = 12 [default = 0];
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 12;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // optional uint32 mailid = 5 [default = 0];
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailidFieldNumber = 5;
  inline ::google::protobuf::uint32 mailid() const;
  inline void set_mailid(::google::protobuf::uint32 value);

  // optional .Cmd.EMailType type = 6 [default = EMAILTYPE_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline ::Cmd::EMailType type() const;
  inline void set_type(::Cmd::EMailType value);

  // optional .Cmd.EMailStatus status = 7 [default = EMAILSTATUS_MIN];
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 7;
  inline ::Cmd::EMailStatus status() const;
  inline void set_status(::Cmd::EMailStatus value);

  // optional string title = 8;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 8;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // optional string sender = 9;
  inline bool has_sender() const;
  inline void clear_sender();
  static const int kSenderFieldNumber = 9;
  inline const ::std::string& sender() const;
  inline void set_sender(const ::std::string& value);
  inline void set_sender(const char* value);
  inline void set_sender(const char* value, size_t size);
  inline ::std::string* mutable_sender();
  inline ::std::string* release_sender();
  inline void set_allocated_sender(::std::string* sender);

  // optional string msg = 10;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 10;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  inline void set_allocated_msg(::std::string* msg);

  // optional .Cmd.BlobAttach attach = 11;
  inline bool has_attach() const;
  inline void clear_attach();
  static const int kAttachFieldNumber = 11;
  inline const ::Cmd::BlobAttach& attach() const;
  inline ::Cmd::BlobAttach* mutable_attach();
  inline ::Cmd::BlobAttach* release_attach();
  inline void set_allocated_attach(::Cmd::BlobAttach* attach);

  // optional string groupid = 16;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupidFieldNumber = 16;
  inline const ::std::string& groupid() const;
  inline void set_groupid(const ::std::string& value);
  inline void set_groupid(const char* value);
  inline void set_groupid(const char* value, size_t size);
  inline ::std::string* mutable_groupid();
  inline ::std::string* release_groupid();
  inline void set_allocated_groupid(::std::string* groupid);

  // optional uint32 starttime = 17;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 17;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // optional uint32 endtime = 18;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 18;
  inline ::google::protobuf::uint32 endtime() const;
  inline void set_endtime(::google::protobuf::uint32 value);

  // optional .Cmd.WeddingEventMsgCCmd weddingmsg = 19;
  inline bool has_weddingmsg() const;
  inline void clear_weddingmsg();
  static const int kWeddingmsgFieldNumber = 19;
  inline const ::Cmd::WeddingEventMsgCCmd& weddingmsg() const;
  inline ::Cmd::WeddingEventMsgCCmd* mutable_weddingmsg();
  inline ::Cmd::WeddingEventMsgCCmd* release_weddingmsg();
  inline void set_allocated_weddingmsg(::Cmd::WeddingEventMsgCCmd* weddingmsg);

  // optional .Cmd.UserEventMailCmd eventmsg = 20;
  inline bool has_eventmsg() const;
  inline void clear_eventmsg();
  static const int kEventmsgFieldNumber = 20;
  inline const ::Cmd::UserEventMailCmd& eventmsg() const;
  inline ::Cmd::UserEventMailCmd* mutable_eventmsg();
  inline ::Cmd::UserEventMailCmd* release_eventmsg();
  inline void set_allocated_eventmsg(::Cmd::UserEventMailCmd* eventmsg);

  // @@protoc_insertion_point(class_scope:Cmd.MailData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_sysid();
  inline void clear_has_sysid();
  inline void set_has_senderid();
  inline void clear_has_senderid();
  inline void set_has_receiveid();
  inline void clear_has_receiveid();
  inline void set_has_receiveaccid();
  inline void clear_has_receiveaccid();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_sender();
  inline void clear_has_sender();
  inline void set_has_msg();
  inline void clear_has_msg();
  inline void set_has_attach();
  inline void clear_has_attach();
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_weddingmsg();
  inline void clear_has_weddingmsg();
  inline void set_has_eventmsg();
  inline void clear_has_eventmsg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 sysid_;
  ::google::protobuf::uint64 senderid_;
  ::google::protobuf::uint64 receiveid_;
  ::google::protobuf::uint64 receiveaccid_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 mailid_;
  int type_;
  int status_;
  ::std::string* title_;
  ::std::string* sender_;
  ::std::string* msg_;
  ::Cmd::BlobAttach* attach_;
  ::std::string* groupid_;
  ::google::protobuf::uint32 starttime_;
  ::google::protobuf::uint32 endtime_;
  ::Cmd::WeddingEventMsgCCmd* weddingmsg_;
  ::Cmd::UserEventMailCmd* eventmsg_;
  friend void  protobuf_AddDesc_SessionMail_2eproto();
  friend void protobuf_AssignDesc_SessionMail_2eproto();
  friend void protobuf_ShutdownFile_SessionMail_2eproto();

  void InitAsDefaultInstance();
  static MailData* default_instance_;
};
// -------------------------------------------------------------------

class MailMsg : public ::google::protobuf::Message {
 public:
  MailMsg();
  virtual ~MailMsg();

  MailMsg(const MailMsg& from);

  inline MailMsg& operator=(const MailMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailMsg& default_instance();

  void Swap(MailMsg* other);

  // implements Message ----------------------------------------------

  MailMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailMsg& from);
  void MergeFrom(const MailMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 language = 1 [default = 0];
  inline bool has_language() const;
  inline void clear_language();
  static const int kLanguageFieldNumber = 1;
  inline ::google::protobuf::uint32 language() const;
  inline void set_language(::google::protobuf::uint32 value);

  // optional string title = 2;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 2;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // optional string msg = 3;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 3;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  inline void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:Cmd.MailMsg)
 private:
  inline void set_has_language();
  inline void clear_has_language();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* title_;
  ::std::string* msg_;
  ::google::protobuf::uint32 language_;
  friend void  protobuf_AddDesc_SessionMail_2eproto();
  friend void protobuf_AssignDesc_SessionMail_2eproto();
  friend void protobuf_ShutdownFile_SessionMail_2eproto();

  void InitAsDefaultInstance();
  static MailMsg* default_instance_;
};
// -------------------------------------------------------------------

class MailTemplateData : public ::google::protobuf::Message {
 public:
  MailTemplateData();
  virtual ~MailTemplateData();

  MailTemplateData(const MailTemplateData& from);

  inline MailTemplateData& operator=(const MailTemplateData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailTemplateData& default_instance();

  void Swap(MailTemplateData* other);

  // implements Message ----------------------------------------------

  MailTemplateData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailTemplateData& from);
  void MergeFrom(const MailTemplateData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Cmd.MailMsg msgs = 1;
  inline int msgs_size() const;
  inline void clear_msgs();
  static const int kMsgsFieldNumber = 1;
  inline const ::Cmd::MailMsg& msgs(int index) const;
  inline ::Cmd::MailMsg* mutable_msgs(int index);
  inline ::Cmd::MailMsg* add_msgs();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::MailMsg >&
      msgs() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::MailMsg >*
      mutable_msgs();

  // @@protoc_insertion_point(class_scope:Cmd.MailTemplateData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::MailMsg > msgs_;
  friend void  protobuf_AddDesc_SessionMail_2eproto();
  friend void protobuf_AssignDesc_SessionMail_2eproto();
  friend void protobuf_ShutdownFile_SessionMail_2eproto();

  void InitAsDefaultInstance();
  static MailTemplateData* default_instance_;
};
// -------------------------------------------------------------------

class QueryAllMail : public ::google::protobuf::Message {
 public:
  QueryAllMail();
  virtual ~QueryAllMail();

  QueryAllMail(const QueryAllMail& from);

  inline QueryAllMail& operator=(const QueryAllMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAllMail& default_instance();

  void Swap(QueryAllMail* other);

  // implements Message ----------------------------------------------

  QueryAllMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryAllMail& from);
  void MergeFrom(const QueryAllMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_MAIL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.MailParam param = 2 [default = MAILPARAM_QUERYALLMAIL];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::MailParam param() const;
  inline void set_param(::Cmd::MailParam value);

  // repeated .Cmd.MailData datas = 3;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 3;
  inline const ::Cmd::MailData& datas(int index) const;
  inline ::Cmd::MailData* mutable_datas(int index);
  inline ::Cmd::MailData* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::MailData >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::MailData >*
      mutable_datas();

  // @@protoc_insertion_point(class_scope:Cmd.QueryAllMail)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::MailData > datas_;
  friend void  protobuf_AddDesc_SessionMail_2eproto();
  friend void protobuf_AssignDesc_SessionMail_2eproto();
  friend void protobuf_ShutdownFile_SessionMail_2eproto();

  void InitAsDefaultInstance();
  static QueryAllMail* default_instance_;
};
// -------------------------------------------------------------------

class MailUpdate : public ::google::protobuf::Message {
 public:
  MailUpdate();
  virtual ~MailUpdate();

  MailUpdate(const MailUpdate& from);

  inline MailUpdate& operator=(const MailUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailUpdate& default_instance();

  void Swap(MailUpdate* other);

  // implements Message ----------------------------------------------

  MailUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailUpdate& from);
  void MergeFrom(const MailUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_MAIL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.MailParam param = 2 [default = MAILPARAM_UPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::MailParam param() const;
  inline void set_param(::Cmd::MailParam value);

  // repeated .Cmd.MailData updates = 3;
  inline int updates_size() const;
  inline void clear_updates();
  static const int kUpdatesFieldNumber = 3;
  inline const ::Cmd::MailData& updates(int index) const;
  inline ::Cmd::MailData* mutable_updates(int index);
  inline ::Cmd::MailData* add_updates();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::MailData >&
      updates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::MailData >*
      mutable_updates();

  // repeated uint64 dels = 4;
  inline int dels_size() const;
  inline void clear_dels();
  static const int kDelsFieldNumber = 4;
  inline ::google::protobuf::uint64 dels(int index) const;
  inline void set_dels(int index, ::google::protobuf::uint64 value);
  inline void add_dels(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      dels() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_dels();

  // @@protoc_insertion_point(class_scope:Cmd.MailUpdate)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::MailData > updates_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > dels_;
  friend void  protobuf_AddDesc_SessionMail_2eproto();
  friend void protobuf_AssignDesc_SessionMail_2eproto();
  friend void protobuf_ShutdownFile_SessionMail_2eproto();

  void InitAsDefaultInstance();
  static MailUpdate* default_instance_;
};
// -------------------------------------------------------------------

class GetMailAttach : public ::google::protobuf::Message {
 public:
  GetMailAttach();
  virtual ~GetMailAttach();

  GetMailAttach(const GetMailAttach& from);

  inline GetMailAttach& operator=(const GetMailAttach& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMailAttach& default_instance();

  void Swap(GetMailAttach* other);

  // implements Message ----------------------------------------------

  GetMailAttach* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetMailAttach& from);
  void MergeFrom(const GetMailAttach& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_MAIL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.MailParam param = 2 [default = MAILPARAM_GETATTACH];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::MailParam param() const;
  inline void set_param(::Cmd::MailParam value);

  // optional uint64 id = 3 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.GetMailAttach)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 id_;
  friend void  protobuf_AddDesc_SessionMail_2eproto();
  friend void protobuf_AssignDesc_SessionMail_2eproto();
  friend void protobuf_ShutdownFile_SessionMail_2eproto();

  void InitAsDefaultInstance();
  static GetMailAttach* default_instance_;
};
// ===================================================================


// ===================================================================

// MailMsgParam

// optional uint32 mailid = 1;
inline bool MailMsgParam::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailMsgParam::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailMsgParam::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailMsgParam::clear_mailid() {
  mailid_ = 0u;
  clear_has_mailid();
}
inline ::google::protobuf::uint32 MailMsgParam::mailid() const {
  // @@protoc_insertion_point(field_get:Cmd.MailMsgParam.mailid)
  return mailid_;
}
inline void MailMsgParam::set_mailid(::google::protobuf::uint32 value) {
  set_has_mailid();
  mailid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MailMsgParam.mailid)
}

// repeated string params = 2;
inline int MailMsgParam::params_size() const {
  return params_.size();
}
inline void MailMsgParam::clear_params() {
  params_.Clear();
}
inline const ::std::string& MailMsgParam::params(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.MailMsgParam.params)
  return params_.Get(index);
}
inline ::std::string* MailMsgParam::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.MailMsgParam.params)
  return params_.Mutable(index);
}
inline void MailMsgParam::set_params(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Cmd.MailMsgParam.params)
  params_.Mutable(index)->assign(value);
}
inline void MailMsgParam::set_params(int index, const char* value) {
  params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.MailMsgParam.params)
}
inline void MailMsgParam::set_params(int index, const char* value, size_t size) {
  params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.MailMsgParam.params)
}
inline ::std::string* MailMsgParam::add_params() {
  return params_.Add();
}
inline void MailMsgParam::add_params(const ::std::string& value) {
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Cmd.MailMsgParam.params)
}
inline void MailMsgParam::add_params(const char* value) {
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Cmd.MailMsgParam.params)
}
inline void MailMsgParam::add_params(const char* value, size_t size) {
  params_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Cmd.MailMsgParam.params)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MailMsgParam::params() const {
  // @@protoc_insertion_point(field_list:Cmd.MailMsgParam.params)
  return params_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MailMsgParam::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.MailMsgParam.params)
  return &params_;
}

// -------------------------------------------------------------------

// MailAttach

// optional .Cmd.EMailAttachType type = 1 [default = EMAILATTACHTYPE_MIN];
inline bool MailAttach::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailAttach::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailAttach::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailAttach::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::EMailAttachType MailAttach::type() const {
  // @@protoc_insertion_point(field_get:Cmd.MailAttach.type)
  return static_cast< ::Cmd::EMailAttachType >(type_);
}
inline void MailAttach::set_type(::Cmd::EMailAttachType value) {
  assert(::Cmd::EMailAttachType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MailAttach.type)
}

// optional uint32 id = 2 [default = 0];
inline bool MailAttach::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailAttach::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailAttach::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailAttach::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 MailAttach::id() const {
  // @@protoc_insertion_point(field_get:Cmd.MailAttach.id)
  return id_;
}
inline void MailAttach::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MailAttach.id)
}

// repeated .Cmd.ItemInfo items = 3;
inline int MailAttach::items_size() const {
  return items_.size();
}
inline void MailAttach::clear_items() {
  items_.Clear();
}
inline const ::Cmd::ItemInfo& MailAttach::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.MailAttach.items)
  return items_.Get(index);
}
inline ::Cmd::ItemInfo* MailAttach::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.MailAttach.items)
  return items_.Mutable(index);
}
inline ::Cmd::ItemInfo* MailAttach::add_items() {
  // @@protoc_insertion_point(field_add:Cmd.MailAttach.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo >&
MailAttach::items() const {
  // @@protoc_insertion_point(field_list:Cmd.MailAttach.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemInfo >*
MailAttach::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.MailAttach.items)
  return &items_;
}

// repeated .Cmd.ItemData itemdatas = 4;
inline int MailAttach::itemdatas_size() const {
  return itemdatas_.size();
}
inline void MailAttach::clear_itemdatas() {
  itemdatas_.Clear();
}
inline const ::Cmd::ItemData& MailAttach::itemdatas(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.MailAttach.itemdatas)
  return itemdatas_.Get(index);
}
inline ::Cmd::ItemData* MailAttach::mutable_itemdatas(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.MailAttach.itemdatas)
  return itemdatas_.Mutable(index);
}
inline ::Cmd::ItemData* MailAttach::add_itemdatas() {
  // @@protoc_insertion_point(field_add:Cmd.MailAttach.itemdatas)
  return itemdatas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >&
MailAttach::itemdatas() const {
  // @@protoc_insertion_point(field_list:Cmd.MailAttach.itemdatas)
  return itemdatas_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ItemData >*
MailAttach::mutable_itemdatas() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.MailAttach.itemdatas)
  return &itemdatas_;
}

// optional .Cmd.MailMsgParam msgdatas = 5;
inline bool MailAttach::has_msgdatas() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MailAttach::set_has_msgdatas() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MailAttach::clear_has_msgdatas() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MailAttach::clear_msgdatas() {
  if (msgdatas_ != NULL) msgdatas_->::Cmd::MailMsgParam::Clear();
  clear_has_msgdatas();
}
inline const ::Cmd::MailMsgParam& MailAttach::msgdatas() const {
  // @@protoc_insertion_point(field_get:Cmd.MailAttach.msgdatas)
  return msgdatas_ != NULL ? *msgdatas_ : *default_instance_->msgdatas_;
}
inline ::Cmd::MailMsgParam* MailAttach::mutable_msgdatas() {
  set_has_msgdatas();
  if (msgdatas_ == NULL) msgdatas_ = new ::Cmd::MailMsgParam;
  // @@protoc_insertion_point(field_mutable:Cmd.MailAttach.msgdatas)
  return msgdatas_;
}
inline ::Cmd::MailMsgParam* MailAttach::release_msgdatas() {
  clear_has_msgdatas();
  ::Cmd::MailMsgParam* temp = msgdatas_;
  msgdatas_ = NULL;
  return temp;
}
inline void MailAttach::set_allocated_msgdatas(::Cmd::MailMsgParam* msgdatas) {
  delete msgdatas_;
  msgdatas_ = msgdatas;
  if (msgdatas) {
    set_has_msgdatas();
  } else {
    clear_has_msgdatas();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.MailAttach.msgdatas)
}

// -------------------------------------------------------------------

// BlobAttach

// repeated .Cmd.MailAttach attachs = 1;
inline int BlobAttach::attachs_size() const {
  return attachs_.size();
}
inline void BlobAttach::clear_attachs() {
  attachs_.Clear();
}
inline const ::Cmd::MailAttach& BlobAttach::attachs(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.BlobAttach.attachs)
  return attachs_.Get(index);
}
inline ::Cmd::MailAttach* BlobAttach::mutable_attachs(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.BlobAttach.attachs)
  return attachs_.Mutable(index);
}
inline ::Cmd::MailAttach* BlobAttach::add_attachs() {
  // @@protoc_insertion_point(field_add:Cmd.BlobAttach.attachs)
  return attachs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::MailAttach >&
BlobAttach::attachs() const {
  // @@protoc_insertion_point(field_list:Cmd.BlobAttach.attachs)
  return attachs_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::MailAttach >*
BlobAttach::mutable_attachs() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.BlobAttach.attachs)
  return &attachs_;
}

// -------------------------------------------------------------------

// MailData

// optional uint64 id = 1 [default = 0];
inline bool MailData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 MailData::id() const {
  // @@protoc_insertion_point(field_get:Cmd.MailData.id)
  return id_;
}
inline void MailData::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MailData.id)
}

// optional uint64 sysid = 2 [default = 0];
inline bool MailData::has_sysid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailData::set_has_sysid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailData::clear_has_sysid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailData::clear_sysid() {
  sysid_ = GOOGLE_ULONGLONG(0);
  clear_has_sysid();
}
inline ::google::protobuf::uint64 MailData::sysid() const {
  // @@protoc_insertion_point(field_get:Cmd.MailData.sysid)
  return sysid_;
}
inline void MailData::set_sysid(::google::protobuf::uint64 value) {
  set_has_sysid();
  sysid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MailData.sysid)
}

// optional uint64 senderid = 3 [default = 0];
inline bool MailData::has_senderid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailData::set_has_senderid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailData::clear_has_senderid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailData::clear_senderid() {
  senderid_ = GOOGLE_ULONGLONG(0);
  clear_has_senderid();
}
inline ::google::protobuf::uint64 MailData::senderid() const {
  // @@protoc_insertion_point(field_get:Cmd.MailData.senderid)
  return senderid_;
}
inline void MailData::set_senderid(::google::protobuf::uint64 value) {
  set_has_senderid();
  senderid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MailData.senderid)
}

// optional uint64 receiveid = 4 [default = 0];
inline bool MailData::has_receiveid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailData::set_has_receiveid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailData::clear_has_receiveid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailData::clear_receiveid() {
  receiveid_ = GOOGLE_ULONGLONG(0);
  clear_has_receiveid();
}
inline ::google::protobuf::uint64 MailData::receiveid() const {
  // @@protoc_insertion_point(field_get:Cmd.MailData.receiveid)
  return receiveid_;
}
inline void MailData::set_receiveid(::google::protobuf::uint64 value) {
  set_has_receiveid();
  receiveid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MailData.receiveid)
}

// optional uint64 receiveaccid = 13 [default = 0];
inline bool MailData::has_receiveaccid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MailData::set_has_receiveaccid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MailData::clear_has_receiveaccid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MailData::clear_receiveaccid() {
  receiveaccid_ = GOOGLE_ULONGLONG(0);
  clear_has_receiveaccid();
}
inline ::google::protobuf::uint64 MailData::receiveaccid() const {
  // @@protoc_insertion_point(field_get:Cmd.MailData.receiveaccid)
  return receiveaccid_;
}
inline void MailData::set_receiveaccid(::google::protobuf::uint64 value) {
  set_has_receiveaccid();
  receiveaccid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MailData.receiveaccid)
}

// optional uint32 time = 12 [default = 0];
inline bool MailData::has_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MailData::set_has_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MailData::clear_has_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MailData::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 MailData::time() const {
  // @@protoc_insertion_point(field_get:Cmd.MailData.time)
  return time_;
}
inline void MailData::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MailData.time)
}

// optional uint32 mailid = 5 [default = 0];
inline bool MailData::has_mailid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MailData::set_has_mailid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MailData::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MailData::clear_mailid() {
  mailid_ = 0u;
  clear_has_mailid();
}
inline ::google::protobuf::uint32 MailData::mailid() const {
  // @@protoc_insertion_point(field_get:Cmd.MailData.mailid)
  return mailid_;
}
inline void MailData::set_mailid(::google::protobuf::uint32 value) {
  set_has_mailid();
  mailid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MailData.mailid)
}

// optional .Cmd.EMailType type = 6 [default = EMAILTYPE_MIN];
inline bool MailData::has_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MailData::set_has_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MailData::clear_has_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MailData::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::EMailType MailData::type() const {
  // @@protoc_insertion_point(field_get:Cmd.MailData.type)
  return static_cast< ::Cmd::EMailType >(type_);
}
inline void MailData::set_type(::Cmd::EMailType value) {
  assert(::Cmd::EMailType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MailData.type)
}

// optional .Cmd.EMailStatus status = 7 [default = EMAILSTATUS_MIN];
inline bool MailData::has_status() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MailData::set_has_status() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MailData::clear_has_status() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MailData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::Cmd::EMailStatus MailData::status() const {
  // @@protoc_insertion_point(field_get:Cmd.MailData.status)
  return static_cast< ::Cmd::EMailStatus >(status_);
}
inline void MailData::set_status(::Cmd::EMailStatus value) {
  assert(::Cmd::EMailStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MailData.status)
}

// optional string title = 8;
inline bool MailData::has_title() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MailData::set_has_title() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MailData::clear_has_title() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MailData::clear_title() {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& MailData::title() const {
  // @@protoc_insertion_point(field_get:Cmd.MailData.title)
  return *title_;
}
inline void MailData::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.MailData.title)
}
inline void MailData::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.MailData.title)
}
inline void MailData::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.MailData.title)
}
inline ::std::string* MailData::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.MailData.title)
  return title_;
}
inline ::std::string* MailData::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MailData::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.MailData.title)
}

// optional string sender = 9;
inline bool MailData::has_sender() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MailData::set_has_sender() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MailData::clear_has_sender() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MailData::clear_sender() {
  if (sender_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_->clear();
  }
  clear_has_sender();
}
inline const ::std::string& MailData::sender() const {
  // @@protoc_insertion_point(field_get:Cmd.MailData.sender)
  return *sender_;
}
inline void MailData::set_sender(const ::std::string& value) {
  set_has_sender();
  if (sender_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_ = new ::std::string;
  }
  sender_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.MailData.sender)
}
inline void MailData::set_sender(const char* value) {
  set_has_sender();
  if (sender_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_ = new ::std::string;
  }
  sender_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.MailData.sender)
}
inline void MailData::set_sender(const char* value, size_t size) {
  set_has_sender();
  if (sender_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_ = new ::std::string;
  }
  sender_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.MailData.sender)
}
inline ::std::string* MailData::mutable_sender() {
  set_has_sender();
  if (sender_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.MailData.sender)
  return sender_;
}
inline ::std::string* MailData::release_sender() {
  clear_has_sender();
  if (sender_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sender_;
    sender_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MailData::set_allocated_sender(::std::string* sender) {
  if (sender_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sender_;
  }
  if (sender) {
    set_has_sender();
    sender_ = sender;
  } else {
    clear_has_sender();
    sender_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.MailData.sender)
}

// optional string msg = 10;
inline bool MailData::has_msg() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void MailData::set_has_msg() {
  _has_bits_[0] |= 0x00000800u;
}
inline void MailData::clear_has_msg() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void MailData::clear_msg() {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& MailData::msg() const {
  // @@protoc_insertion_point(field_get:Cmd.MailData.msg)
  return *msg_;
}
inline void MailData::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.MailData.msg)
}
inline void MailData::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.MailData.msg)
}
inline void MailData::set_msg(const char* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.MailData.msg)
}
inline ::std::string* MailData::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.MailData.msg)
  return msg_;
}
inline ::std::string* MailData::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MailData::set_allocated_msg(::std::string* msg) {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_;
  }
  if (msg) {
    set_has_msg();
    msg_ = msg;
  } else {
    clear_has_msg();
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.MailData.msg)
}

// optional .Cmd.BlobAttach attach = 11;
inline bool MailData::has_attach() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void MailData::set_has_attach() {
  _has_bits_[0] |= 0x00001000u;
}
inline void MailData::clear_has_attach() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void MailData::clear_attach() {
  if (attach_ != NULL) attach_->::Cmd::BlobAttach::Clear();
  clear_has_attach();
}
inline const ::Cmd::BlobAttach& MailData::attach() const {
  // @@protoc_insertion_point(field_get:Cmd.MailData.attach)
  return attach_ != NULL ? *attach_ : *default_instance_->attach_;
}
inline ::Cmd::BlobAttach* MailData::mutable_attach() {
  set_has_attach();
  if (attach_ == NULL) attach_ = new ::Cmd::BlobAttach;
  // @@protoc_insertion_point(field_mutable:Cmd.MailData.attach)
  return attach_;
}
inline ::Cmd::BlobAttach* MailData::release_attach() {
  clear_has_attach();
  ::Cmd::BlobAttach* temp = attach_;
  attach_ = NULL;
  return temp;
}
inline void MailData::set_allocated_attach(::Cmd::BlobAttach* attach) {
  delete attach_;
  attach_ = attach;
  if (attach) {
    set_has_attach();
  } else {
    clear_has_attach();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.MailData.attach)
}

// optional string groupid = 16;
inline bool MailData::has_groupid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void MailData::set_has_groupid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void MailData::clear_has_groupid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void MailData::clear_groupid() {
  if (groupid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupid_->clear();
  }
  clear_has_groupid();
}
inline const ::std::string& MailData::groupid() const {
  // @@protoc_insertion_point(field_get:Cmd.MailData.groupid)
  return *groupid_;
}
inline void MailData::set_groupid(const ::std::string& value) {
  set_has_groupid();
  if (groupid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupid_ = new ::std::string;
  }
  groupid_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.MailData.groupid)
}
inline void MailData::set_groupid(const char* value) {
  set_has_groupid();
  if (groupid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupid_ = new ::std::string;
  }
  groupid_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.MailData.groupid)
}
inline void MailData::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  if (groupid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupid_ = new ::std::string;
  }
  groupid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.MailData.groupid)
}
inline ::std::string* MailData::mutable_groupid() {
  set_has_groupid();
  if (groupid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.MailData.groupid)
  return groupid_;
}
inline ::std::string* MailData::release_groupid() {
  clear_has_groupid();
  if (groupid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = groupid_;
    groupid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MailData::set_allocated_groupid(::std::string* groupid) {
  if (groupid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete groupid_;
  }
  if (groupid) {
    set_has_groupid();
    groupid_ = groupid;
  } else {
    clear_has_groupid();
    groupid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.MailData.groupid)
}

// optional uint32 starttime = 17;
inline bool MailData::has_starttime() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void MailData::set_has_starttime() {
  _has_bits_[0] |= 0x00004000u;
}
inline void MailData::clear_has_starttime() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void MailData::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 MailData::starttime() const {
  // @@protoc_insertion_point(field_get:Cmd.MailData.starttime)
  return starttime_;
}
inline void MailData::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MailData.starttime)
}

// optional uint32 endtime = 18;
inline bool MailData::has_endtime() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void MailData::set_has_endtime() {
  _has_bits_[0] |= 0x00008000u;
}
inline void MailData::clear_has_endtime() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void MailData::clear_endtime() {
  endtime_ = 0u;
  clear_has_endtime();
}
inline ::google::protobuf::uint32 MailData::endtime() const {
  // @@protoc_insertion_point(field_get:Cmd.MailData.endtime)
  return endtime_;
}
inline void MailData::set_endtime(::google::protobuf::uint32 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MailData.endtime)
}

// optional .Cmd.WeddingEventMsgCCmd weddingmsg = 19;
inline bool MailData::has_weddingmsg() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void MailData::set_has_weddingmsg() {
  _has_bits_[0] |= 0x00010000u;
}
inline void MailData::clear_has_weddingmsg() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void MailData::clear_weddingmsg() {
  if (weddingmsg_ != NULL) weddingmsg_->::Cmd::WeddingEventMsgCCmd::Clear();
  clear_has_weddingmsg();
}
inline const ::Cmd::WeddingEventMsgCCmd& MailData::weddingmsg() const {
  // @@protoc_insertion_point(field_get:Cmd.MailData.weddingmsg)
  return weddingmsg_ != NULL ? *weddingmsg_ : *default_instance_->weddingmsg_;
}
inline ::Cmd::WeddingEventMsgCCmd* MailData::mutable_weddingmsg() {
  set_has_weddingmsg();
  if (weddingmsg_ == NULL) weddingmsg_ = new ::Cmd::WeddingEventMsgCCmd;
  // @@protoc_insertion_point(field_mutable:Cmd.MailData.weddingmsg)
  return weddingmsg_;
}
inline ::Cmd::WeddingEventMsgCCmd* MailData::release_weddingmsg() {
  clear_has_weddingmsg();
  ::Cmd::WeddingEventMsgCCmd* temp = weddingmsg_;
  weddingmsg_ = NULL;
  return temp;
}
inline void MailData::set_allocated_weddingmsg(::Cmd::WeddingEventMsgCCmd* weddingmsg) {
  delete weddingmsg_;
  weddingmsg_ = weddingmsg;
  if (weddingmsg) {
    set_has_weddingmsg();
  } else {
    clear_has_weddingmsg();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.MailData.weddingmsg)
}

// optional .Cmd.UserEventMailCmd eventmsg = 20;
inline bool MailData::has_eventmsg() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void MailData::set_has_eventmsg() {
  _has_bits_[0] |= 0x00020000u;
}
inline void MailData::clear_has_eventmsg() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void MailData::clear_eventmsg() {
  if (eventmsg_ != NULL) eventmsg_->::Cmd::UserEventMailCmd::Clear();
  clear_has_eventmsg();
}
inline const ::Cmd::UserEventMailCmd& MailData::eventmsg() const {
  // @@protoc_insertion_point(field_get:Cmd.MailData.eventmsg)
  return eventmsg_ != NULL ? *eventmsg_ : *default_instance_->eventmsg_;
}
inline ::Cmd::UserEventMailCmd* MailData::mutable_eventmsg() {
  set_has_eventmsg();
  if (eventmsg_ == NULL) eventmsg_ = new ::Cmd::UserEventMailCmd;
  // @@protoc_insertion_point(field_mutable:Cmd.MailData.eventmsg)
  return eventmsg_;
}
inline ::Cmd::UserEventMailCmd* MailData::release_eventmsg() {
  clear_has_eventmsg();
  ::Cmd::UserEventMailCmd* temp = eventmsg_;
  eventmsg_ = NULL;
  return temp;
}
inline void MailData::set_allocated_eventmsg(::Cmd::UserEventMailCmd* eventmsg) {
  delete eventmsg_;
  eventmsg_ = eventmsg;
  if (eventmsg) {
    set_has_eventmsg();
  } else {
    clear_has_eventmsg();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.MailData.eventmsg)
}

// -------------------------------------------------------------------

// MailMsg

// optional uint32 language = 1 [default = 0];
inline bool MailMsg::has_language() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailMsg::set_has_language() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailMsg::clear_has_language() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailMsg::clear_language() {
  language_ = 0u;
  clear_has_language();
}
inline ::google::protobuf::uint32 MailMsg::language() const {
  // @@protoc_insertion_point(field_get:Cmd.MailMsg.language)
  return language_;
}
inline void MailMsg::set_language(::google::protobuf::uint32 value) {
  set_has_language();
  language_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MailMsg.language)
}

// optional string title = 2;
inline bool MailMsg::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailMsg::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailMsg::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailMsg::clear_title() {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& MailMsg::title() const {
  // @@protoc_insertion_point(field_get:Cmd.MailMsg.title)
  return *title_;
}
inline void MailMsg::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.MailMsg.title)
}
inline void MailMsg::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.MailMsg.title)
}
inline void MailMsg::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.MailMsg.title)
}
inline ::std::string* MailMsg::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.MailMsg.title)
  return title_;
}
inline ::std::string* MailMsg::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MailMsg::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.MailMsg.title)
}

// optional string msg = 3;
inline bool MailMsg::has_msg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailMsg::set_has_msg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailMsg::clear_has_msg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailMsg::clear_msg() {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& MailMsg::msg() const {
  // @@protoc_insertion_point(field_get:Cmd.MailMsg.msg)
  return *msg_;
}
inline void MailMsg::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.MailMsg.msg)
}
inline void MailMsg::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.MailMsg.msg)
}
inline void MailMsg::set_msg(const char* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.MailMsg.msg)
}
inline ::std::string* MailMsg::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.MailMsg.msg)
  return msg_;
}
inline ::std::string* MailMsg::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MailMsg::set_allocated_msg(::std::string* msg) {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_;
  }
  if (msg) {
    set_has_msg();
    msg_ = msg;
  } else {
    clear_has_msg();
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.MailMsg.msg)
}

// -------------------------------------------------------------------

// MailTemplateData

// repeated .Cmd.MailMsg msgs = 1;
inline int MailTemplateData::msgs_size() const {
  return msgs_.size();
}
inline void MailTemplateData::clear_msgs() {
  msgs_.Clear();
}
inline const ::Cmd::MailMsg& MailTemplateData::msgs(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.MailTemplateData.msgs)
  return msgs_.Get(index);
}
inline ::Cmd::MailMsg* MailTemplateData::mutable_msgs(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.MailTemplateData.msgs)
  return msgs_.Mutable(index);
}
inline ::Cmd::MailMsg* MailTemplateData::add_msgs() {
  // @@protoc_insertion_point(field_add:Cmd.MailTemplateData.msgs)
  return msgs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::MailMsg >&
MailTemplateData::msgs() const {
  // @@protoc_insertion_point(field_list:Cmd.MailTemplateData.msgs)
  return msgs_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::MailMsg >*
MailTemplateData::mutable_msgs() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.MailTemplateData.msgs)
  return &msgs_;
}

// -------------------------------------------------------------------

// QueryAllMail

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_MAIL_PROTOCMD];
inline bool QueryAllMail::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryAllMail::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryAllMail::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryAllMail::clear_cmd() {
  cmd_ = 55;
  clear_has_cmd();
}
inline ::Cmd::Command QueryAllMail::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryAllMail.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryAllMail::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryAllMail.cmd)
}

// optional .Cmd.MailParam param = 2 [default = MAILPARAM_QUERYALLMAIL];
inline bool QueryAllMail::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryAllMail::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryAllMail::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryAllMail::clear_param() {
  param_ = 1;
  clear_has_param();
}
inline ::Cmd::MailParam QueryAllMail::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryAllMail.param)
  return static_cast< ::Cmd::MailParam >(param_);
}
inline void QueryAllMail::set_param(::Cmd::MailParam value) {
  assert(::Cmd::MailParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryAllMail.param)
}

// repeated .Cmd.MailData datas = 3;
inline int QueryAllMail::datas_size() const {
  return datas_.size();
}
inline void QueryAllMail::clear_datas() {
  datas_.Clear();
}
inline const ::Cmd::MailData& QueryAllMail::datas(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QueryAllMail.datas)
  return datas_.Get(index);
}
inline ::Cmd::MailData* QueryAllMail::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.QueryAllMail.datas)
  return datas_.Mutable(index);
}
inline ::Cmd::MailData* QueryAllMail::add_datas() {
  // @@protoc_insertion_point(field_add:Cmd.QueryAllMail.datas)
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::MailData >&
QueryAllMail::datas() const {
  // @@protoc_insertion_point(field_list:Cmd.QueryAllMail.datas)
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::MailData >*
QueryAllMail::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QueryAllMail.datas)
  return &datas_;
}

// -------------------------------------------------------------------

// MailUpdate

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_MAIL_PROTOCMD];
inline bool MailUpdate::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailUpdate::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailUpdate::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailUpdate::clear_cmd() {
  cmd_ = 55;
  clear_has_cmd();
}
inline ::Cmd::Command MailUpdate::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.MailUpdate.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void MailUpdate::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MailUpdate.cmd)
}

// optional .Cmd.MailParam param = 2 [default = MAILPARAM_UPDATE];
inline bool MailUpdate::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailUpdate::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailUpdate::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailUpdate::clear_param() {
  param_ = 2;
  clear_has_param();
}
inline ::Cmd::MailParam MailUpdate::param() const {
  // @@protoc_insertion_point(field_get:Cmd.MailUpdate.param)
  return static_cast< ::Cmd::MailParam >(param_);
}
inline void MailUpdate::set_param(::Cmd::MailParam value) {
  assert(::Cmd::MailParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.MailUpdate.param)
}

// repeated .Cmd.MailData updates = 3;
inline int MailUpdate::updates_size() const {
  return updates_.size();
}
inline void MailUpdate::clear_updates() {
  updates_.Clear();
}
inline const ::Cmd::MailData& MailUpdate::updates(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.MailUpdate.updates)
  return updates_.Get(index);
}
inline ::Cmd::MailData* MailUpdate::mutable_updates(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.MailUpdate.updates)
  return updates_.Mutable(index);
}
inline ::Cmd::MailData* MailUpdate::add_updates() {
  // @@protoc_insertion_point(field_add:Cmd.MailUpdate.updates)
  return updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::MailData >&
MailUpdate::updates() const {
  // @@protoc_insertion_point(field_list:Cmd.MailUpdate.updates)
  return updates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::MailData >*
MailUpdate::mutable_updates() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.MailUpdate.updates)
  return &updates_;
}

// repeated uint64 dels = 4;
inline int MailUpdate::dels_size() const {
  return dels_.size();
}
inline void MailUpdate::clear_dels() {
  dels_.Clear();
}
inline ::google::protobuf::uint64 MailUpdate::dels(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.MailUpdate.dels)
  return dels_.Get(index);
}
inline void MailUpdate::set_dels(int index, ::google::protobuf::uint64 value) {
  dels_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.MailUpdate.dels)
}
inline void MailUpdate::add_dels(::google::protobuf::uint64 value) {
  dels_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.MailUpdate.dels)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
MailUpdate::dels() const {
  // @@protoc_insertion_point(field_list:Cmd.MailUpdate.dels)
  return dels_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
MailUpdate::mutable_dels() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.MailUpdate.dels)
  return &dels_;
}

// -------------------------------------------------------------------

// GetMailAttach

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_MAIL_PROTOCMD];
inline bool GetMailAttach::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetMailAttach::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetMailAttach::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetMailAttach::clear_cmd() {
  cmd_ = 55;
  clear_has_cmd();
}
inline ::Cmd::Command GetMailAttach::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GetMailAttach.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GetMailAttach::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetMailAttach.cmd)
}

// optional .Cmd.MailParam param = 2 [default = MAILPARAM_GETATTACH];
inline bool GetMailAttach::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetMailAttach::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetMailAttach::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetMailAttach::clear_param() {
  param_ = 3;
  clear_has_param();
}
inline ::Cmd::MailParam GetMailAttach::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GetMailAttach.param)
  return static_cast< ::Cmd::MailParam >(param_);
}
inline void GetMailAttach::set_param(::Cmd::MailParam value) {
  assert(::Cmd::MailParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetMailAttach.param)
}

// optional uint64 id = 3 [default = 0];
inline bool GetMailAttach::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetMailAttach::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetMailAttach::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetMailAttach::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 GetMailAttach::id() const {
  // @@protoc_insertion_point(field_get:Cmd.GetMailAttach.id)
  return id_;
}
inline void GetMailAttach::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetMailAttach.id)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cmd

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Cmd::MailParam> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::MailParam>() {
  return ::Cmd::MailParam_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EMailStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EMailStatus>() {
  return ::Cmd::EMailStatus_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EMailType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EMailType>() {
  return ::Cmd::EMailType_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EMailAttachType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EMailAttachType>() {
  return ::Cmd::EMailAttachType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SessionMail_2eproto__INCLUDED
