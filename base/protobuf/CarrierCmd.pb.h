// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CarrierCmd.proto

#ifndef PROTOBUF_CarrierCmd_2eproto__INCLUDED
#define PROTOBUF_CarrierCmd_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "xCmd.pb.h"
#include "ProtoCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace Cmd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CarrierCmd_2eproto();
void protobuf_AssignDesc_CarrierCmd_2eproto();
void protobuf_ShutdownFile_CarrierCmd_2eproto();

class CarrierMember;
class CarrierInfoUserCmd;
class CreateCarrierUserCmd;
class InviteCarrierUserCmd;
class JoinCarrierUserCmd;
class RetJoinCarrierUserCmd;
class LeaveCarrierUserCmd;
class ReachCarrierUserCmd;
class CarrierMoveUserCmd;
class CarrierStartUserCmd;
class CarrierWaitListUserCmd;
class ChangeCarrierUserCmd;
class FerrisWheelInviteCarrierCmd;
class FerrisWheelProcessInviteCarrierCmd;
class StartFerrisWheelUserCmd;
class CatchUserJoinCarrierUserCmd;

enum CarrierParam {
  MAPPARAM_CARRIER_INFO = 1,
  MAPPARAM_JOIN_CARRIER = 2,
  MAPPARAM_RET_JOIN_CARRIER = 3,
  MAPPARAM_LEAVE_CARRIER = 4,
  MAPPARAM_CARRIER_MOVE = 5,
  MAPPARAM_CREATE_CARRIER = 6,
  MAPPARAM_CARRIER_START = 7,
  MAPPARAM_CARRIER_WAIT_LIST = 8,
  MAPPARAM_REACH_CARRIER = 9,
  MAPPARAM_INVITE_CARRIER = 10,
  MAPPARAM_CHANGE_CARRIER = 11,
  MAPPARAM_FERRISWHEEL_INVITE = 12,
  MAPPARAM_FERRISWHEEL_PROCESSINVITE = 13,
  MAPPARAM_START_FERRISWHEEL = 14,
  MAPPARAM_CATCH_USER_JOIN_CARRIER = 15
};
bool CarrierParam_IsValid(int value);
const CarrierParam CarrierParam_MIN = MAPPARAM_CARRIER_INFO;
const CarrierParam CarrierParam_MAX = MAPPARAM_CATCH_USER_JOIN_CARRIER;
const int CarrierParam_ARRAYSIZE = CarrierParam_MAX + 1;

const ::google::protobuf::EnumDescriptor* CarrierParam_descriptor();
inline const ::std::string& CarrierParam_Name(CarrierParam value) {
  return ::google::protobuf::internal::NameOfEnum(
    CarrierParam_descriptor(), value);
}
inline bool CarrierParam_Parse(
    const ::std::string& name, CarrierParam* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CarrierParam>(
    CarrierParam_descriptor(), name, value);
}
enum EFerrisAction {
  EFERRISACTION_MIN = 0,
  EFERRISACTION_AGREE = 1,
  EFERRISACTION_DISAGREE = 2,
  EFERRISACTION_MAX = 3
};
bool EFerrisAction_IsValid(int value);
const EFerrisAction EFerrisAction_MIN = EFERRISACTION_MIN;
const EFerrisAction EFerrisAction_MAX = EFERRISACTION_MAX;
const int EFerrisAction_ARRAYSIZE = EFerrisAction_MAX + 1;

const ::google::protobuf::EnumDescriptor* EFerrisAction_descriptor();
inline const ::std::string& EFerrisAction_Name(EFerrisAction value) {
  return ::google::protobuf::internal::NameOfEnum(
    EFerrisAction_descriptor(), value);
}
inline bool EFerrisAction_Parse(
    const ::std::string& name, EFerrisAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EFerrisAction>(
    EFerrisAction_descriptor(), name, value);
}
// ===================================================================

class CarrierMember : public ::google::protobuf::Message {
 public:
  CarrierMember();
  virtual ~CarrierMember();

  CarrierMember(const CarrierMember& from);

  inline CarrierMember& operator=(const CarrierMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CarrierMember& default_instance();

  void Swap(CarrierMember* other);

  // implements Message ----------------------------------------------

  CarrierMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CarrierMember& from);
  void MergeFrom(const CarrierMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:Cmd.CarrierMember)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::std::string* name_;
  ::google::protobuf::uint32 index_;
  friend void  protobuf_AddDesc_CarrierCmd_2eproto();
  friend void protobuf_AssignDesc_CarrierCmd_2eproto();
  friend void protobuf_ShutdownFile_CarrierCmd_2eproto();

  void InitAsDefaultInstance();
  static CarrierMember* default_instance_;
};
// -------------------------------------------------------------------

class CarrierInfoUserCmd : public ::google::protobuf::Message {
 public:
  CarrierInfoUserCmd();
  virtual ~CarrierInfoUserCmd();

  CarrierInfoUserCmd(const CarrierInfoUserCmd& from);

  inline CarrierInfoUserCmd& operator=(const CarrierInfoUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CarrierInfoUserCmd& default_instance();

  void Swap(CarrierInfoUserCmd* other);

  // implements Message ----------------------------------------------

  CarrierInfoUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CarrierInfoUserCmd& from);
  void MergeFrom(const CarrierInfoUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_CARRIER_INFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CarrierParam param() const;
  inline void set_param(::Cmd::CarrierParam value);

  // optional uint32 carrierid = 3;
  inline bool has_carrierid() const;
  inline void clear_carrierid();
  static const int kCarrieridFieldNumber = 3;
  inline ::google::protobuf::uint32 carrierid() const;
  inline void set_carrierid(::google::protobuf::uint32 value);

  // optional uint64 masterid = 4;
  inline bool has_masterid() const;
  inline void clear_masterid();
  static const int kMasteridFieldNumber = 4;
  inline ::google::protobuf::uint64 masterid() const;
  inline void set_masterid(::google::protobuf::uint64 value);

  // repeated .Cmd.CarrierMember members = 5;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 5;
  inline const ::Cmd::CarrierMember& members(int index) const;
  inline ::Cmd::CarrierMember* mutable_members(int index);
  inline ::Cmd::CarrierMember* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::CarrierMember >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::CarrierMember >*
      mutable_members();

  // optional uint32 needanimation = 6 [default = 1];
  inline bool has_needanimation() const;
  inline void clear_needanimation();
  static const int kNeedanimationFieldNumber = 6;
  inline ::google::protobuf::uint32 needanimation() const;
  inline void set_needanimation(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.CarrierInfoUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_carrierid();
  inline void clear_has_carrierid();
  inline void set_has_masterid();
  inline void clear_has_masterid();
  inline void set_has_needanimation();
  inline void clear_has_needanimation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 masterid_;
  ::google::protobuf::uint32 carrierid_;
  ::google::protobuf::uint32 needanimation_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::CarrierMember > members_;
  friend void  protobuf_AddDesc_CarrierCmd_2eproto();
  friend void protobuf_AssignDesc_CarrierCmd_2eproto();
  friend void protobuf_ShutdownFile_CarrierCmd_2eproto();

  void InitAsDefaultInstance();
  static CarrierInfoUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class CreateCarrierUserCmd : public ::google::protobuf::Message {
 public:
  CreateCarrierUserCmd();
  virtual ~CreateCarrierUserCmd();

  CreateCarrierUserCmd(const CreateCarrierUserCmd& from);

  inline CreateCarrierUserCmd& operator=(const CreateCarrierUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateCarrierUserCmd& default_instance();

  void Swap(CreateCarrierUserCmd* other);

  // implements Message ----------------------------------------------

  CreateCarrierUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateCarrierUserCmd& from);
  void MergeFrom(const CreateCarrierUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_CREATE_CARRIER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CarrierParam param() const;
  inline void set_param(::Cmd::CarrierParam value);

  // optional uint32 carrierid = 3;
  inline bool has_carrierid() const;
  inline void clear_carrierid();
  static const int kCarrieridFieldNumber = 3;
  inline ::google::protobuf::uint32 carrierid() const;
  inline void set_carrierid(::google::protobuf::uint32 value);

  // optional uint32 line = 4;
  inline bool has_line() const;
  inline void clear_line();
  static const int kLineFieldNumber = 4;
  inline ::google::protobuf::uint32 line() const;
  inline void set_line(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.CreateCarrierUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_carrierid();
  inline void clear_has_carrierid();
  inline void set_has_line();
  inline void clear_has_line();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 carrierid_;
  ::google::protobuf::uint32 line_;
  friend void  protobuf_AddDesc_CarrierCmd_2eproto();
  friend void protobuf_AssignDesc_CarrierCmd_2eproto();
  friend void protobuf_ShutdownFile_CarrierCmd_2eproto();

  void InitAsDefaultInstance();
  static CreateCarrierUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class InviteCarrierUserCmd : public ::google::protobuf::Message {
 public:
  InviteCarrierUserCmd();
  virtual ~InviteCarrierUserCmd();

  InviteCarrierUserCmd(const InviteCarrierUserCmd& from);

  inline InviteCarrierUserCmd& operator=(const InviteCarrierUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InviteCarrierUserCmd& default_instance();

  void Swap(InviteCarrierUserCmd* other);

  // implements Message ----------------------------------------------

  InviteCarrierUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InviteCarrierUserCmd& from);
  void MergeFrom(const InviteCarrierUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_INVITE_CARRIER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CarrierParam param() const;
  inline void set_param(::Cmd::CarrierParam value);

  // optional uint64 masterid = 3;
  inline bool has_masterid() const;
  inline void clear_masterid();
  static const int kMasteridFieldNumber = 3;
  inline ::google::protobuf::uint64 masterid() const;
  inline void set_masterid(::google::protobuf::uint64 value);

  // optional string mastername = 4;
  inline bool has_mastername() const;
  inline void clear_mastername();
  static const int kMasternameFieldNumber = 4;
  inline const ::std::string& mastername() const;
  inline void set_mastername(const ::std::string& value);
  inline void set_mastername(const char* value);
  inline void set_mastername(const char* value, size_t size);
  inline ::std::string* mutable_mastername();
  inline ::std::string* release_mastername();
  inline void set_allocated_mastername(::std::string* mastername);

  // optional uint32 carrierid = 5;
  inline bool has_carrierid() const;
  inline void clear_carrierid();
  static const int kCarrieridFieldNumber = 5;
  inline ::google::protobuf::uint32 carrierid() const;
  inline void set_carrierid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.InviteCarrierUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_masterid();
  inline void clear_has_masterid();
  inline void set_has_mastername();
  inline void clear_has_mastername();
  inline void set_has_carrierid();
  inline void clear_has_carrierid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 masterid_;
  ::std::string* mastername_;
  ::google::protobuf::uint32 carrierid_;
  friend void  protobuf_AddDesc_CarrierCmd_2eproto();
  friend void protobuf_AssignDesc_CarrierCmd_2eproto();
  friend void protobuf_ShutdownFile_CarrierCmd_2eproto();

  void InitAsDefaultInstance();
  static InviteCarrierUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class JoinCarrierUserCmd : public ::google::protobuf::Message {
 public:
  JoinCarrierUserCmd();
  virtual ~JoinCarrierUserCmd();

  JoinCarrierUserCmd(const JoinCarrierUserCmd& from);

  inline JoinCarrierUserCmd& operator=(const JoinCarrierUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinCarrierUserCmd& default_instance();

  void Swap(JoinCarrierUserCmd* other);

  // implements Message ----------------------------------------------

  JoinCarrierUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinCarrierUserCmd& from);
  void MergeFrom(const JoinCarrierUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_JOIN_CARRIER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CarrierParam param() const;
  inline void set_param(::Cmd::CarrierParam value);

  // optional uint64 masterid = 3;
  inline bool has_masterid() const;
  inline void clear_masterid();
  static const int kMasteridFieldNumber = 3;
  inline ::google::protobuf::uint64 masterid() const;
  inline void set_masterid(::google::protobuf::uint64 value);

  // optional string mastername = 4;
  inline bool has_mastername() const;
  inline void clear_mastername();
  static const int kMasternameFieldNumber = 4;
  inline const ::std::string& mastername() const;
  inline void set_mastername(const ::std::string& value);
  inline void set_mastername(const char* value);
  inline void set_mastername(const char* value, size_t size);
  inline ::std::string* mutable_mastername();
  inline ::std::string* release_mastername();
  inline void set_allocated_mastername(::std::string* mastername);

  // optional uint32 carrierid = 5;
  inline bool has_carrierid() const;
  inline void clear_carrierid();
  static const int kCarrieridFieldNumber = 5;
  inline ::google::protobuf::uint32 carrierid() const;
  inline void set_carrierid(::google::protobuf::uint32 value);

  // optional bool agree = 6;
  inline bool has_agree() const;
  inline void clear_agree();
  static const int kAgreeFieldNumber = 6;
  inline bool agree() const;
  inline void set_agree(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.JoinCarrierUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_masterid();
  inline void clear_has_masterid();
  inline void set_has_mastername();
  inline void clear_has_mastername();
  inline void set_has_carrierid();
  inline void clear_has_carrierid();
  inline void set_has_agree();
  inline void clear_has_agree();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 masterid_;
  ::std::string* mastername_;
  ::google::protobuf::uint32 carrierid_;
  bool agree_;
  friend void  protobuf_AddDesc_CarrierCmd_2eproto();
  friend void protobuf_AssignDesc_CarrierCmd_2eproto();
  friend void protobuf_ShutdownFile_CarrierCmd_2eproto();

  void InitAsDefaultInstance();
  static JoinCarrierUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class RetJoinCarrierUserCmd : public ::google::protobuf::Message {
 public:
  RetJoinCarrierUserCmd();
  virtual ~RetJoinCarrierUserCmd();

  RetJoinCarrierUserCmd(const RetJoinCarrierUserCmd& from);

  inline RetJoinCarrierUserCmd& operator=(const RetJoinCarrierUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetJoinCarrierUserCmd& default_instance();

  void Swap(RetJoinCarrierUserCmd* other);

  // implements Message ----------------------------------------------

  RetJoinCarrierUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetJoinCarrierUserCmd& from);
  void MergeFrom(const RetJoinCarrierUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_RET_JOIN_CARRIER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CarrierParam param() const;
  inline void set_param(::Cmd::CarrierParam value);

  // optional string membername = 3;
  inline bool has_membername() const;
  inline void clear_membername();
  static const int kMembernameFieldNumber = 3;
  inline const ::std::string& membername() const;
  inline void set_membername(const ::std::string& value);
  inline void set_membername(const char* value);
  inline void set_membername(const char* value, size_t size);
  inline ::std::string* mutable_membername();
  inline ::std::string* release_membername();
  inline void set_allocated_membername(::std::string* membername);

  // optional bool agree = 4;
  inline bool has_agree() const;
  inline void clear_agree();
  static const int kAgreeFieldNumber = 4;
  inline bool agree() const;
  inline void set_agree(bool value);

  // optional uint64 memberid = 5;
  inline bool has_memberid() const;
  inline void clear_memberid();
  static const int kMemberidFieldNumber = 5;
  inline ::google::protobuf::uint64 memberid() const;
  inline void set_memberid(::google::protobuf::uint64 value);

  // optional uint64 masterid = 6;
  inline bool has_masterid() const;
  inline void clear_masterid();
  static const int kMasteridFieldNumber = 6;
  inline ::google::protobuf::uint64 masterid() const;
  inline void set_masterid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.RetJoinCarrierUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_membername();
  inline void clear_has_membername();
  inline void set_has_agree();
  inline void clear_has_agree();
  inline void set_has_memberid();
  inline void clear_has_memberid();
  inline void set_has_masterid();
  inline void clear_has_masterid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::std::string* membername_;
  ::google::protobuf::uint64 memberid_;
  ::google::protobuf::uint64 masterid_;
  bool agree_;
  friend void  protobuf_AddDesc_CarrierCmd_2eproto();
  friend void protobuf_AssignDesc_CarrierCmd_2eproto();
  friend void protobuf_ShutdownFile_CarrierCmd_2eproto();

  void InitAsDefaultInstance();
  static RetJoinCarrierUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class LeaveCarrierUserCmd : public ::google::protobuf::Message {
 public:
  LeaveCarrierUserCmd();
  virtual ~LeaveCarrierUserCmd();

  LeaveCarrierUserCmd(const LeaveCarrierUserCmd& from);

  inline LeaveCarrierUserCmd& operator=(const LeaveCarrierUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveCarrierUserCmd& default_instance();

  void Swap(LeaveCarrierUserCmd* other);

  // implements Message ----------------------------------------------

  LeaveCarrierUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LeaveCarrierUserCmd& from);
  void MergeFrom(const LeaveCarrierUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_LEAVE_CARRIER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CarrierParam param() const;
  inline void set_param(::Cmd::CarrierParam value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional .Cmd.ScenePos pos = 4;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 4;
  inline const ::Cmd::ScenePos& pos() const;
  inline ::Cmd::ScenePos* mutable_pos();
  inline ::Cmd::ScenePos* release_pos();
  inline void set_allocated_pos(::Cmd::ScenePos* pos);

  // optional uint64 masterid = 5;
  inline bool has_masterid() const;
  inline void clear_masterid();
  static const int kMasteridFieldNumber = 5;
  inline ::google::protobuf::uint64 masterid() const;
  inline void set_masterid(::google::protobuf::uint64 value);

  // optional uint64 newmasterid = 6;
  inline bool has_newmasterid() const;
  inline void clear_newmasterid();
  static const int kNewmasteridFieldNumber = 6;
  inline ::google::protobuf::uint64 newmasterid() const;
  inline void set_newmasterid(::google::protobuf::uint64 value);

  // optional bool all = 7 [default = false];
  inline bool has_all() const;
  inline void clear_all();
  static const int kAllFieldNumber = 7;
  inline bool all() const;
  inline void set_all(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.LeaveCarrierUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_masterid();
  inline void clear_has_masterid();
  inline void set_has_newmasterid();
  inline void clear_has_newmasterid();
  inline void set_has_all();
  inline void clear_has_all();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::Cmd::ScenePos* pos_;
  ::google::protobuf::uint64 masterid_;
  ::google::protobuf::uint64 newmasterid_;
  bool all_;
  friend void  protobuf_AddDesc_CarrierCmd_2eproto();
  friend void protobuf_AssignDesc_CarrierCmd_2eproto();
  friend void protobuf_ShutdownFile_CarrierCmd_2eproto();

  void InitAsDefaultInstance();
  static LeaveCarrierUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class ReachCarrierUserCmd : public ::google::protobuf::Message {
 public:
  ReachCarrierUserCmd();
  virtual ~ReachCarrierUserCmd();

  ReachCarrierUserCmd(const ReachCarrierUserCmd& from);

  inline ReachCarrierUserCmd& operator=(const ReachCarrierUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReachCarrierUserCmd& default_instance();

  void Swap(ReachCarrierUserCmd* other);

  // implements Message ----------------------------------------------

  ReachCarrierUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReachCarrierUserCmd& from);
  void MergeFrom(const ReachCarrierUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_REACH_CARRIER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CarrierParam param() const;
  inline void set_param(::Cmd::CarrierParam value);

  // optional .Cmd.ScenePos pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline const ::Cmd::ScenePos& pos() const;
  inline ::Cmd::ScenePos* mutable_pos();
  inline ::Cmd::ScenePos* release_pos();
  inline void set_allocated_pos(::Cmd::ScenePos* pos);

  // optional uint64 masterid = 4;
  inline bool has_masterid() const;
  inline void clear_masterid();
  static const int kMasteridFieldNumber = 4;
  inline ::google::protobuf::uint64 masterid() const;
  inline void set_masterid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.ReachCarrierUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_masterid();
  inline void clear_has_masterid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::ScenePos* pos_;
  ::google::protobuf::uint64 masterid_;
  friend void  protobuf_AddDesc_CarrierCmd_2eproto();
  friend void protobuf_AssignDesc_CarrierCmd_2eproto();
  friend void protobuf_ShutdownFile_CarrierCmd_2eproto();

  void InitAsDefaultInstance();
  static ReachCarrierUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class CarrierMoveUserCmd : public ::google::protobuf::Message {
 public:
  CarrierMoveUserCmd();
  virtual ~CarrierMoveUserCmd();

  CarrierMoveUserCmd(const CarrierMoveUserCmd& from);

  inline CarrierMoveUserCmd& operator=(const CarrierMoveUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CarrierMoveUserCmd& default_instance();

  void Swap(CarrierMoveUserCmd* other);

  // implements Message ----------------------------------------------

  CarrierMoveUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CarrierMoveUserCmd& from);
  void MergeFrom(const CarrierMoveUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_CARRIER_MOVE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CarrierParam param() const;
  inline void set_param(::Cmd::CarrierParam value);

  // optional .Cmd.ScenePos pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline const ::Cmd::ScenePos& pos() const;
  inline ::Cmd::ScenePos* mutable_pos();
  inline ::Cmd::ScenePos* release_pos();
  inline void set_allocated_pos(::Cmd::ScenePos* pos);

  // optional uint32 progress = 4;
  inline bool has_progress() const;
  inline void clear_progress();
  static const int kProgressFieldNumber = 4;
  inline ::google::protobuf::uint32 progress() const;
  inline void set_progress(::google::protobuf::uint32 value);

  // optional uint64 masterid = 5;
  inline bool has_masterid() const;
  inline void clear_masterid();
  static const int kMasteridFieldNumber = 5;
  inline ::google::protobuf::uint64 masterid() const;
  inline void set_masterid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.CarrierMoveUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_progress();
  inline void clear_has_progress();
  inline void set_has_masterid();
  inline void clear_has_masterid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::ScenePos* pos_;
  ::google::protobuf::uint64 masterid_;
  ::google::protobuf::uint32 progress_;
  friend void  protobuf_AddDesc_CarrierCmd_2eproto();
  friend void protobuf_AssignDesc_CarrierCmd_2eproto();
  friend void protobuf_ShutdownFile_CarrierCmd_2eproto();

  void InitAsDefaultInstance();
  static CarrierMoveUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class CarrierStartUserCmd : public ::google::protobuf::Message {
 public:
  CarrierStartUserCmd();
  virtual ~CarrierStartUserCmd();

  CarrierStartUserCmd(const CarrierStartUserCmd& from);

  inline CarrierStartUserCmd& operator=(const CarrierStartUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CarrierStartUserCmd& default_instance();

  void Swap(CarrierStartUserCmd* other);

  // implements Message ----------------------------------------------

  CarrierStartUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CarrierStartUserCmd& from);
  void MergeFrom(const CarrierStartUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_CARRIER_START];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CarrierParam param() const;
  inline void set_param(::Cmd::CarrierParam value);

  // optional uint32 line = 3;
  inline bool has_line() const;
  inline void clear_line();
  static const int kLineFieldNumber = 3;
  inline ::google::protobuf::uint32 line() const;
  inline void set_line(::google::protobuf::uint32 value);

  // optional uint64 masterid = 4;
  inline bool has_masterid() const;
  inline void clear_masterid();
  static const int kMasteridFieldNumber = 4;
  inline ::google::protobuf::uint64 masterid() const;
  inline void set_masterid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.CarrierStartUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_line();
  inline void clear_has_line();
  inline void set_has_masterid();
  inline void clear_has_masterid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 masterid_;
  ::google::protobuf::uint32 line_;
  friend void  protobuf_AddDesc_CarrierCmd_2eproto();
  friend void protobuf_AssignDesc_CarrierCmd_2eproto();
  friend void protobuf_ShutdownFile_CarrierCmd_2eproto();

  void InitAsDefaultInstance();
  static CarrierStartUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class CarrierWaitListUserCmd : public ::google::protobuf::Message {
 public:
  CarrierWaitListUserCmd();
  virtual ~CarrierWaitListUserCmd();

  CarrierWaitListUserCmd(const CarrierWaitListUserCmd& from);

  inline CarrierWaitListUserCmd& operator=(const CarrierWaitListUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CarrierWaitListUserCmd& default_instance();

  void Swap(CarrierWaitListUserCmd* other);

  // implements Message ----------------------------------------------

  CarrierWaitListUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CarrierWaitListUserCmd& from);
  void MergeFrom(const CarrierWaitListUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_CARRIER_WAIT_LIST];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CarrierParam param() const;
  inline void set_param(::Cmd::CarrierParam value);

  // repeated .Cmd.CarrierMember members = 3;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 3;
  inline const ::Cmd::CarrierMember& members(int index) const;
  inline ::Cmd::CarrierMember* mutable_members(int index);
  inline ::Cmd::CarrierMember* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::CarrierMember >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::CarrierMember >*
      mutable_members();

  // optional uint64 masterid = 4;
  inline bool has_masterid() const;
  inline void clear_masterid();
  static const int kMasteridFieldNumber = 4;
  inline ::google::protobuf::uint64 masterid() const;
  inline void set_masterid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.CarrierWaitListUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_masterid();
  inline void clear_has_masterid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::CarrierMember > members_;
  ::google::protobuf::uint64 masterid_;
  friend void  protobuf_AddDesc_CarrierCmd_2eproto();
  friend void protobuf_AssignDesc_CarrierCmd_2eproto();
  friend void protobuf_ShutdownFile_CarrierCmd_2eproto();

  void InitAsDefaultInstance();
  static CarrierWaitListUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class ChangeCarrierUserCmd : public ::google::protobuf::Message {
 public:
  ChangeCarrierUserCmd();
  virtual ~ChangeCarrierUserCmd();

  ChangeCarrierUserCmd(const ChangeCarrierUserCmd& from);

  inline ChangeCarrierUserCmd& operator=(const ChangeCarrierUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeCarrierUserCmd& default_instance();

  void Swap(ChangeCarrierUserCmd* other);

  // implements Message ----------------------------------------------

  ChangeCarrierUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeCarrierUserCmd& from);
  void MergeFrom(const ChangeCarrierUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_CHANGE_CARRIER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CarrierParam param() const;
  inline void set_param(::Cmd::CarrierParam value);

  // optional uint32 carrierid = 3 [default = 0];
  inline bool has_carrierid() const;
  inline void clear_carrierid();
  static const int kCarrieridFieldNumber = 3;
  inline ::google::protobuf::uint32 carrierid() const;
  inline void set_carrierid(::google::protobuf::uint32 value);

  // optional uint64 masterid = 4 [default = 0];
  inline bool has_masterid() const;
  inline void clear_masterid();
  static const int kMasteridFieldNumber = 4;
  inline ::google::protobuf::uint64 masterid() const;
  inline void set_masterid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.ChangeCarrierUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_carrierid();
  inline void clear_has_carrierid();
  inline void set_has_masterid();
  inline void clear_has_masterid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 masterid_;
  ::google::protobuf::uint32 carrierid_;
  friend void  protobuf_AddDesc_CarrierCmd_2eproto();
  friend void protobuf_AssignDesc_CarrierCmd_2eproto();
  friend void protobuf_ShutdownFile_CarrierCmd_2eproto();

  void InitAsDefaultInstance();
  static ChangeCarrierUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class FerrisWheelInviteCarrierCmd : public ::google::protobuf::Message {
 public:
  FerrisWheelInviteCarrierCmd();
  virtual ~FerrisWheelInviteCarrierCmd();

  FerrisWheelInviteCarrierCmd(const FerrisWheelInviteCarrierCmd& from);

  inline FerrisWheelInviteCarrierCmd& operator=(const FerrisWheelInviteCarrierCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FerrisWheelInviteCarrierCmd& default_instance();

  void Swap(FerrisWheelInviteCarrierCmd* other);

  // implements Message ----------------------------------------------

  FerrisWheelInviteCarrierCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FerrisWheelInviteCarrierCmd& from);
  void MergeFrom(const FerrisWheelInviteCarrierCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_FERRISWHEEL_INVITE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CarrierParam param() const;
  inline void set_param(::Cmd::CarrierParam value);

  // optional uint64 targetid = 3 [default = 0];
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetidFieldNumber = 3;
  inline ::google::protobuf::uint64 targetid() const;
  inline void set_targetid(::google::protobuf::uint64 value);

  // optional string targetname = 4;
  inline bool has_targetname() const;
  inline void clear_targetname();
  static const int kTargetnameFieldNumber = 4;
  inline const ::std::string& targetname() const;
  inline void set_targetname(const ::std::string& value);
  inline void set_targetname(const char* value);
  inline void set_targetname(const char* value, size_t size);
  inline ::std::string* mutable_targetname();
  inline ::std::string* release_targetname();
  inline void set_allocated_targetname(::std::string* targetname);

  // optional uint32 id = 5 [default = 1];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 5;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.FerrisWheelInviteCarrierCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_targetid();
  inline void clear_has_targetid();
  inline void set_has_targetname();
  inline void clear_has_targetname();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 targetid_;
  ::std::string* targetname_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_CarrierCmd_2eproto();
  friend void protobuf_AssignDesc_CarrierCmd_2eproto();
  friend void protobuf_ShutdownFile_CarrierCmd_2eproto();

  void InitAsDefaultInstance();
  static FerrisWheelInviteCarrierCmd* default_instance_;
};
// -------------------------------------------------------------------

class FerrisWheelProcessInviteCarrierCmd : public ::google::protobuf::Message {
 public:
  FerrisWheelProcessInviteCarrierCmd();
  virtual ~FerrisWheelProcessInviteCarrierCmd();

  FerrisWheelProcessInviteCarrierCmd(const FerrisWheelProcessInviteCarrierCmd& from);

  inline FerrisWheelProcessInviteCarrierCmd& operator=(const FerrisWheelProcessInviteCarrierCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FerrisWheelProcessInviteCarrierCmd& default_instance();

  void Swap(FerrisWheelProcessInviteCarrierCmd* other);

  // implements Message ----------------------------------------------

  FerrisWheelProcessInviteCarrierCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FerrisWheelProcessInviteCarrierCmd& from);
  void MergeFrom(const FerrisWheelProcessInviteCarrierCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_FERRISWHEEL_PROCESSINVITE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CarrierParam param() const;
  inline void set_param(::Cmd::CarrierParam value);

  // optional uint64 targetid = 3 [default = 0];
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetidFieldNumber = 3;
  inline ::google::protobuf::uint64 targetid() const;
  inline void set_targetid(::google::protobuf::uint64 value);

  // optional .Cmd.EFerrisAction action = 4 [default = EFERRISACTION_MIN];
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 4;
  inline ::Cmd::EFerrisAction action() const;
  inline void set_action(::Cmd::EFerrisAction value);

  // optional uint32 id = 5 [default = 1];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 5;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.FerrisWheelProcessInviteCarrierCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_targetid();
  inline void clear_has_targetid();
  inline void set_has_action();
  inline void clear_has_action();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 targetid_;
  int action_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_CarrierCmd_2eproto();
  friend void protobuf_AssignDesc_CarrierCmd_2eproto();
  friend void protobuf_ShutdownFile_CarrierCmd_2eproto();

  void InitAsDefaultInstance();
  static FerrisWheelProcessInviteCarrierCmd* default_instance_;
};
// -------------------------------------------------------------------

class StartFerrisWheelUserCmd : public ::google::protobuf::Message {
 public:
  StartFerrisWheelUserCmd();
  virtual ~StartFerrisWheelUserCmd();

  StartFerrisWheelUserCmd(const StartFerrisWheelUserCmd& from);

  inline StartFerrisWheelUserCmd& operator=(const StartFerrisWheelUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartFerrisWheelUserCmd& default_instance();

  void Swap(StartFerrisWheelUserCmd* other);

  // implements Message ----------------------------------------------

  StartFerrisWheelUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StartFerrisWheelUserCmd& from);
  void MergeFrom(const StartFerrisWheelUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_START_FERRISWHEEL];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CarrierParam param() const;
  inline void set_param(::Cmd::CarrierParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint64 masterid = 4 [default = 0];
  inline bool has_masterid() const;
  inline void clear_masterid();
  static const int kMasteridFieldNumber = 4;
  inline ::google::protobuf::uint64 masterid() const;
  inline void set_masterid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.StartFerrisWheelUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_masterid();
  inline void clear_has_masterid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 masterid_;
  friend void  protobuf_AddDesc_CarrierCmd_2eproto();
  friend void protobuf_AssignDesc_CarrierCmd_2eproto();
  friend void protobuf_ShutdownFile_CarrierCmd_2eproto();

  void InitAsDefaultInstance();
  static StartFerrisWheelUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class CatchUserJoinCarrierUserCmd : public ::google::protobuf::Message {
 public:
  CatchUserJoinCarrierUserCmd();
  virtual ~CatchUserJoinCarrierUserCmd();

  CatchUserJoinCarrierUserCmd(const CatchUserJoinCarrierUserCmd& from);

  inline CatchUserJoinCarrierUserCmd& operator=(const CatchUserJoinCarrierUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CatchUserJoinCarrierUserCmd& default_instance();

  void Swap(CatchUserJoinCarrierUserCmd* other);

  // implements Message ----------------------------------------------

  CatchUserJoinCarrierUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CatchUserJoinCarrierUserCmd& from);
  void MergeFrom(const CatchUserJoinCarrierUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_CATCH_USER_JOIN_CARRIER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::CarrierParam param() const;
  inline void set_param(::Cmd::CarrierParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint64 masterid = 4 [default = 0];
  inline bool has_masterid() const;
  inline void clear_masterid();
  static const int kMasteridFieldNumber = 4;
  inline ::google::protobuf::uint64 masterid() const;
  inline void set_masterid(::google::protobuf::uint64 value);

  // optional uint32 mapid = 5 [default = 0];
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 5;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.CatchUserJoinCarrierUserCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_masterid();
  inline void clear_has_masterid();
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 masterid_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_CarrierCmd_2eproto();
  friend void protobuf_AssignDesc_CarrierCmd_2eproto();
  friend void protobuf_ShutdownFile_CarrierCmd_2eproto();

  void InitAsDefaultInstance();
  static CatchUserJoinCarrierUserCmd* default_instance_;
};
// ===================================================================


// ===================================================================

// CarrierMember

// optional uint64 id = 1;
inline bool CarrierMember::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CarrierMember::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CarrierMember::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CarrierMember::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 CarrierMember::id() const {
  // @@protoc_insertion_point(field_get:Cmd.CarrierMember.id)
  return id_;
}
inline void CarrierMember::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CarrierMember.id)
}

// optional uint32 index = 2;
inline bool CarrierMember::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CarrierMember::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CarrierMember::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CarrierMember::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 CarrierMember::index() const {
  // @@protoc_insertion_point(field_get:Cmd.CarrierMember.index)
  return index_;
}
inline void CarrierMember::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CarrierMember.index)
}

// optional string name = 3;
inline bool CarrierMember::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CarrierMember::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CarrierMember::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CarrierMember::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CarrierMember::name() const {
  // @@protoc_insertion_point(field_get:Cmd.CarrierMember.name)
  return *name_;
}
inline void CarrierMember::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.CarrierMember.name)
}
inline void CarrierMember::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.CarrierMember.name)
}
inline void CarrierMember::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.CarrierMember.name)
}
inline ::std::string* CarrierMember::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.CarrierMember.name)
  return name_;
}
inline ::std::string* CarrierMember::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CarrierMember::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.CarrierMember.name)
}

// -------------------------------------------------------------------

// CarrierInfoUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
inline bool CarrierInfoUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CarrierInfoUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CarrierInfoUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CarrierInfoUserCmd::clear_cmd() {
  cmd_ = 16;
  clear_has_cmd();
}
inline ::Cmd::Command CarrierInfoUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.CarrierInfoUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void CarrierInfoUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CarrierInfoUserCmd.cmd)
}

// optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_CARRIER_INFO];
inline bool CarrierInfoUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CarrierInfoUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CarrierInfoUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CarrierInfoUserCmd::clear_param() {
  param_ = 1;
  clear_has_param();
}
inline ::Cmd::CarrierParam CarrierInfoUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.CarrierInfoUserCmd.param)
  return static_cast< ::Cmd::CarrierParam >(param_);
}
inline void CarrierInfoUserCmd::set_param(::Cmd::CarrierParam value) {
  assert(::Cmd::CarrierParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CarrierInfoUserCmd.param)
}

// optional uint32 carrierid = 3;
inline bool CarrierInfoUserCmd::has_carrierid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CarrierInfoUserCmd::set_has_carrierid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CarrierInfoUserCmd::clear_has_carrierid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CarrierInfoUserCmd::clear_carrierid() {
  carrierid_ = 0u;
  clear_has_carrierid();
}
inline ::google::protobuf::uint32 CarrierInfoUserCmd::carrierid() const {
  // @@protoc_insertion_point(field_get:Cmd.CarrierInfoUserCmd.carrierid)
  return carrierid_;
}
inline void CarrierInfoUserCmd::set_carrierid(::google::protobuf::uint32 value) {
  set_has_carrierid();
  carrierid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CarrierInfoUserCmd.carrierid)
}

// optional uint64 masterid = 4;
inline bool CarrierInfoUserCmd::has_masterid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CarrierInfoUserCmd::set_has_masterid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CarrierInfoUserCmd::clear_has_masterid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CarrierInfoUserCmd::clear_masterid() {
  masterid_ = GOOGLE_ULONGLONG(0);
  clear_has_masterid();
}
inline ::google::protobuf::uint64 CarrierInfoUserCmd::masterid() const {
  // @@protoc_insertion_point(field_get:Cmd.CarrierInfoUserCmd.masterid)
  return masterid_;
}
inline void CarrierInfoUserCmd::set_masterid(::google::protobuf::uint64 value) {
  set_has_masterid();
  masterid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CarrierInfoUserCmd.masterid)
}

// repeated .Cmd.CarrierMember members = 5;
inline int CarrierInfoUserCmd::members_size() const {
  return members_.size();
}
inline void CarrierInfoUserCmd::clear_members() {
  members_.Clear();
}
inline const ::Cmd::CarrierMember& CarrierInfoUserCmd::members(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.CarrierInfoUserCmd.members)
  return members_.Get(index);
}
inline ::Cmd::CarrierMember* CarrierInfoUserCmd::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.CarrierInfoUserCmd.members)
  return members_.Mutable(index);
}
inline ::Cmd::CarrierMember* CarrierInfoUserCmd::add_members() {
  // @@protoc_insertion_point(field_add:Cmd.CarrierInfoUserCmd.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::CarrierMember >&
CarrierInfoUserCmd::members() const {
  // @@protoc_insertion_point(field_list:Cmd.CarrierInfoUserCmd.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::CarrierMember >*
CarrierInfoUserCmd::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.CarrierInfoUserCmd.members)
  return &members_;
}

// optional uint32 needanimation = 6 [default = 1];
inline bool CarrierInfoUserCmd::has_needanimation() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CarrierInfoUserCmd::set_has_needanimation() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CarrierInfoUserCmd::clear_has_needanimation() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CarrierInfoUserCmd::clear_needanimation() {
  needanimation_ = 1u;
  clear_has_needanimation();
}
inline ::google::protobuf::uint32 CarrierInfoUserCmd::needanimation() const {
  // @@protoc_insertion_point(field_get:Cmd.CarrierInfoUserCmd.needanimation)
  return needanimation_;
}
inline void CarrierInfoUserCmd::set_needanimation(::google::protobuf::uint32 value) {
  set_has_needanimation();
  needanimation_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CarrierInfoUserCmd.needanimation)
}

// -------------------------------------------------------------------

// CreateCarrierUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
inline bool CreateCarrierUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateCarrierUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateCarrierUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateCarrierUserCmd::clear_cmd() {
  cmd_ = 16;
  clear_has_cmd();
}
inline ::Cmd::Command CreateCarrierUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.CreateCarrierUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void CreateCarrierUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CreateCarrierUserCmd.cmd)
}

// optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_CREATE_CARRIER];
inline bool CreateCarrierUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateCarrierUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateCarrierUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateCarrierUserCmd::clear_param() {
  param_ = 6;
  clear_has_param();
}
inline ::Cmd::CarrierParam CreateCarrierUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.CreateCarrierUserCmd.param)
  return static_cast< ::Cmd::CarrierParam >(param_);
}
inline void CreateCarrierUserCmd::set_param(::Cmd::CarrierParam value) {
  assert(::Cmd::CarrierParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CreateCarrierUserCmd.param)
}

// optional uint32 carrierid = 3;
inline bool CreateCarrierUserCmd::has_carrierid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateCarrierUserCmd::set_has_carrierid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateCarrierUserCmd::clear_has_carrierid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateCarrierUserCmd::clear_carrierid() {
  carrierid_ = 0u;
  clear_has_carrierid();
}
inline ::google::protobuf::uint32 CreateCarrierUserCmd::carrierid() const {
  // @@protoc_insertion_point(field_get:Cmd.CreateCarrierUserCmd.carrierid)
  return carrierid_;
}
inline void CreateCarrierUserCmd::set_carrierid(::google::protobuf::uint32 value) {
  set_has_carrierid();
  carrierid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CreateCarrierUserCmd.carrierid)
}

// optional uint32 line = 4;
inline bool CreateCarrierUserCmd::has_line() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateCarrierUserCmd::set_has_line() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateCarrierUserCmd::clear_has_line() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateCarrierUserCmd::clear_line() {
  line_ = 0u;
  clear_has_line();
}
inline ::google::protobuf::uint32 CreateCarrierUserCmd::line() const {
  // @@protoc_insertion_point(field_get:Cmd.CreateCarrierUserCmd.line)
  return line_;
}
inline void CreateCarrierUserCmd::set_line(::google::protobuf::uint32 value) {
  set_has_line();
  line_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CreateCarrierUserCmd.line)
}

// -------------------------------------------------------------------

// InviteCarrierUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
inline bool InviteCarrierUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InviteCarrierUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InviteCarrierUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InviteCarrierUserCmd::clear_cmd() {
  cmd_ = 16;
  clear_has_cmd();
}
inline ::Cmd::Command InviteCarrierUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.InviteCarrierUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void InviteCarrierUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.InviteCarrierUserCmd.cmd)
}

// optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_INVITE_CARRIER];
inline bool InviteCarrierUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InviteCarrierUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InviteCarrierUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InviteCarrierUserCmd::clear_param() {
  param_ = 10;
  clear_has_param();
}
inline ::Cmd::CarrierParam InviteCarrierUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.InviteCarrierUserCmd.param)
  return static_cast< ::Cmd::CarrierParam >(param_);
}
inline void InviteCarrierUserCmd::set_param(::Cmd::CarrierParam value) {
  assert(::Cmd::CarrierParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.InviteCarrierUserCmd.param)
}

// optional uint64 masterid = 3;
inline bool InviteCarrierUserCmd::has_masterid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InviteCarrierUserCmd::set_has_masterid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InviteCarrierUserCmd::clear_has_masterid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InviteCarrierUserCmd::clear_masterid() {
  masterid_ = GOOGLE_ULONGLONG(0);
  clear_has_masterid();
}
inline ::google::protobuf::uint64 InviteCarrierUserCmd::masterid() const {
  // @@protoc_insertion_point(field_get:Cmd.InviteCarrierUserCmd.masterid)
  return masterid_;
}
inline void InviteCarrierUserCmd::set_masterid(::google::protobuf::uint64 value) {
  set_has_masterid();
  masterid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.InviteCarrierUserCmd.masterid)
}

// optional string mastername = 4;
inline bool InviteCarrierUserCmd::has_mastername() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InviteCarrierUserCmd::set_has_mastername() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InviteCarrierUserCmd::clear_has_mastername() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InviteCarrierUserCmd::clear_mastername() {
  if (mastername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mastername_->clear();
  }
  clear_has_mastername();
}
inline const ::std::string& InviteCarrierUserCmd::mastername() const {
  // @@protoc_insertion_point(field_get:Cmd.InviteCarrierUserCmd.mastername)
  return *mastername_;
}
inline void InviteCarrierUserCmd::set_mastername(const ::std::string& value) {
  set_has_mastername();
  if (mastername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mastername_ = new ::std::string;
  }
  mastername_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.InviteCarrierUserCmd.mastername)
}
inline void InviteCarrierUserCmd::set_mastername(const char* value) {
  set_has_mastername();
  if (mastername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mastername_ = new ::std::string;
  }
  mastername_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.InviteCarrierUserCmd.mastername)
}
inline void InviteCarrierUserCmd::set_mastername(const char* value, size_t size) {
  set_has_mastername();
  if (mastername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mastername_ = new ::std::string;
  }
  mastername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.InviteCarrierUserCmd.mastername)
}
inline ::std::string* InviteCarrierUserCmd::mutable_mastername() {
  set_has_mastername();
  if (mastername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mastername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.InviteCarrierUserCmd.mastername)
  return mastername_;
}
inline ::std::string* InviteCarrierUserCmd::release_mastername() {
  clear_has_mastername();
  if (mastername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mastername_;
    mastername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void InviteCarrierUserCmd::set_allocated_mastername(::std::string* mastername) {
  if (mastername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mastername_;
  }
  if (mastername) {
    set_has_mastername();
    mastername_ = mastername;
  } else {
    clear_has_mastername();
    mastername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.InviteCarrierUserCmd.mastername)
}

// optional uint32 carrierid = 5;
inline bool InviteCarrierUserCmd::has_carrierid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InviteCarrierUserCmd::set_has_carrierid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InviteCarrierUserCmd::clear_has_carrierid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InviteCarrierUserCmd::clear_carrierid() {
  carrierid_ = 0u;
  clear_has_carrierid();
}
inline ::google::protobuf::uint32 InviteCarrierUserCmd::carrierid() const {
  // @@protoc_insertion_point(field_get:Cmd.InviteCarrierUserCmd.carrierid)
  return carrierid_;
}
inline void InviteCarrierUserCmd::set_carrierid(::google::protobuf::uint32 value) {
  set_has_carrierid();
  carrierid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.InviteCarrierUserCmd.carrierid)
}

// -------------------------------------------------------------------

// JoinCarrierUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
inline bool JoinCarrierUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinCarrierUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinCarrierUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinCarrierUserCmd::clear_cmd() {
  cmd_ = 16;
  clear_has_cmd();
}
inline ::Cmd::Command JoinCarrierUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.JoinCarrierUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void JoinCarrierUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.JoinCarrierUserCmd.cmd)
}

// optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_JOIN_CARRIER];
inline bool JoinCarrierUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinCarrierUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinCarrierUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinCarrierUserCmd::clear_param() {
  param_ = 2;
  clear_has_param();
}
inline ::Cmd::CarrierParam JoinCarrierUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.JoinCarrierUserCmd.param)
  return static_cast< ::Cmd::CarrierParam >(param_);
}
inline void JoinCarrierUserCmd::set_param(::Cmd::CarrierParam value) {
  assert(::Cmd::CarrierParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.JoinCarrierUserCmd.param)
}

// optional uint64 masterid = 3;
inline bool JoinCarrierUserCmd::has_masterid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JoinCarrierUserCmd::set_has_masterid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JoinCarrierUserCmd::clear_has_masterid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JoinCarrierUserCmd::clear_masterid() {
  masterid_ = GOOGLE_ULONGLONG(0);
  clear_has_masterid();
}
inline ::google::protobuf::uint64 JoinCarrierUserCmd::masterid() const {
  // @@protoc_insertion_point(field_get:Cmd.JoinCarrierUserCmd.masterid)
  return masterid_;
}
inline void JoinCarrierUserCmd::set_masterid(::google::protobuf::uint64 value) {
  set_has_masterid();
  masterid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.JoinCarrierUserCmd.masterid)
}

// optional string mastername = 4;
inline bool JoinCarrierUserCmd::has_mastername() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JoinCarrierUserCmd::set_has_mastername() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JoinCarrierUserCmd::clear_has_mastername() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JoinCarrierUserCmd::clear_mastername() {
  if (mastername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mastername_->clear();
  }
  clear_has_mastername();
}
inline const ::std::string& JoinCarrierUserCmd::mastername() const {
  // @@protoc_insertion_point(field_get:Cmd.JoinCarrierUserCmd.mastername)
  return *mastername_;
}
inline void JoinCarrierUserCmd::set_mastername(const ::std::string& value) {
  set_has_mastername();
  if (mastername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mastername_ = new ::std::string;
  }
  mastername_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.JoinCarrierUserCmd.mastername)
}
inline void JoinCarrierUserCmd::set_mastername(const char* value) {
  set_has_mastername();
  if (mastername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mastername_ = new ::std::string;
  }
  mastername_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.JoinCarrierUserCmd.mastername)
}
inline void JoinCarrierUserCmd::set_mastername(const char* value, size_t size) {
  set_has_mastername();
  if (mastername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mastername_ = new ::std::string;
  }
  mastername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.JoinCarrierUserCmd.mastername)
}
inline ::std::string* JoinCarrierUserCmd::mutable_mastername() {
  set_has_mastername();
  if (mastername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mastername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.JoinCarrierUserCmd.mastername)
  return mastername_;
}
inline ::std::string* JoinCarrierUserCmd::release_mastername() {
  clear_has_mastername();
  if (mastername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mastername_;
    mastername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void JoinCarrierUserCmd::set_allocated_mastername(::std::string* mastername) {
  if (mastername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mastername_;
  }
  if (mastername) {
    set_has_mastername();
    mastername_ = mastername;
  } else {
    clear_has_mastername();
    mastername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.JoinCarrierUserCmd.mastername)
}

// optional uint32 carrierid = 5;
inline bool JoinCarrierUserCmd::has_carrierid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void JoinCarrierUserCmd::set_has_carrierid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void JoinCarrierUserCmd::clear_has_carrierid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void JoinCarrierUserCmd::clear_carrierid() {
  carrierid_ = 0u;
  clear_has_carrierid();
}
inline ::google::protobuf::uint32 JoinCarrierUserCmd::carrierid() const {
  // @@protoc_insertion_point(field_get:Cmd.JoinCarrierUserCmd.carrierid)
  return carrierid_;
}
inline void JoinCarrierUserCmd::set_carrierid(::google::protobuf::uint32 value) {
  set_has_carrierid();
  carrierid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.JoinCarrierUserCmd.carrierid)
}

// optional bool agree = 6;
inline bool JoinCarrierUserCmd::has_agree() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void JoinCarrierUserCmd::set_has_agree() {
  _has_bits_[0] |= 0x00000020u;
}
inline void JoinCarrierUserCmd::clear_has_agree() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void JoinCarrierUserCmd::clear_agree() {
  agree_ = false;
  clear_has_agree();
}
inline bool JoinCarrierUserCmd::agree() const {
  // @@protoc_insertion_point(field_get:Cmd.JoinCarrierUserCmd.agree)
  return agree_;
}
inline void JoinCarrierUserCmd::set_agree(bool value) {
  set_has_agree();
  agree_ = value;
  // @@protoc_insertion_point(field_set:Cmd.JoinCarrierUserCmd.agree)
}

// -------------------------------------------------------------------

// RetJoinCarrierUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
inline bool RetJoinCarrierUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetJoinCarrierUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetJoinCarrierUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetJoinCarrierUserCmd::clear_cmd() {
  cmd_ = 16;
  clear_has_cmd();
}
inline ::Cmd::Command RetJoinCarrierUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.RetJoinCarrierUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void RetJoinCarrierUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RetJoinCarrierUserCmd.cmd)
}

// optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_RET_JOIN_CARRIER];
inline bool RetJoinCarrierUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetJoinCarrierUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetJoinCarrierUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetJoinCarrierUserCmd::clear_param() {
  param_ = 3;
  clear_has_param();
}
inline ::Cmd::CarrierParam RetJoinCarrierUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.RetJoinCarrierUserCmd.param)
  return static_cast< ::Cmd::CarrierParam >(param_);
}
inline void RetJoinCarrierUserCmd::set_param(::Cmd::CarrierParam value) {
  assert(::Cmd::CarrierParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RetJoinCarrierUserCmd.param)
}

// optional string membername = 3;
inline bool RetJoinCarrierUserCmd::has_membername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RetJoinCarrierUserCmd::set_has_membername() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RetJoinCarrierUserCmd::clear_has_membername() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RetJoinCarrierUserCmd::clear_membername() {
  if (membername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    membername_->clear();
  }
  clear_has_membername();
}
inline const ::std::string& RetJoinCarrierUserCmd::membername() const {
  // @@protoc_insertion_point(field_get:Cmd.RetJoinCarrierUserCmd.membername)
  return *membername_;
}
inline void RetJoinCarrierUserCmd::set_membername(const ::std::string& value) {
  set_has_membername();
  if (membername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    membername_ = new ::std::string;
  }
  membername_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.RetJoinCarrierUserCmd.membername)
}
inline void RetJoinCarrierUserCmd::set_membername(const char* value) {
  set_has_membername();
  if (membername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    membername_ = new ::std::string;
  }
  membername_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.RetJoinCarrierUserCmd.membername)
}
inline void RetJoinCarrierUserCmd::set_membername(const char* value, size_t size) {
  set_has_membername();
  if (membername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    membername_ = new ::std::string;
  }
  membername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.RetJoinCarrierUserCmd.membername)
}
inline ::std::string* RetJoinCarrierUserCmd::mutable_membername() {
  set_has_membername();
  if (membername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    membername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.RetJoinCarrierUserCmd.membername)
  return membername_;
}
inline ::std::string* RetJoinCarrierUserCmd::release_membername() {
  clear_has_membername();
  if (membername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = membername_;
    membername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RetJoinCarrierUserCmd::set_allocated_membername(::std::string* membername) {
  if (membername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete membername_;
  }
  if (membername) {
    set_has_membername();
    membername_ = membername;
  } else {
    clear_has_membername();
    membername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.RetJoinCarrierUserCmd.membername)
}

// optional bool agree = 4;
inline bool RetJoinCarrierUserCmd::has_agree() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RetJoinCarrierUserCmd::set_has_agree() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RetJoinCarrierUserCmd::clear_has_agree() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RetJoinCarrierUserCmd::clear_agree() {
  agree_ = false;
  clear_has_agree();
}
inline bool RetJoinCarrierUserCmd::agree() const {
  // @@protoc_insertion_point(field_get:Cmd.RetJoinCarrierUserCmd.agree)
  return agree_;
}
inline void RetJoinCarrierUserCmd::set_agree(bool value) {
  set_has_agree();
  agree_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RetJoinCarrierUserCmd.agree)
}

// optional uint64 memberid = 5;
inline bool RetJoinCarrierUserCmd::has_memberid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RetJoinCarrierUserCmd::set_has_memberid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RetJoinCarrierUserCmd::clear_has_memberid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RetJoinCarrierUserCmd::clear_memberid() {
  memberid_ = GOOGLE_ULONGLONG(0);
  clear_has_memberid();
}
inline ::google::protobuf::uint64 RetJoinCarrierUserCmd::memberid() const {
  // @@protoc_insertion_point(field_get:Cmd.RetJoinCarrierUserCmd.memberid)
  return memberid_;
}
inline void RetJoinCarrierUserCmd::set_memberid(::google::protobuf::uint64 value) {
  set_has_memberid();
  memberid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RetJoinCarrierUserCmd.memberid)
}

// optional uint64 masterid = 6;
inline bool RetJoinCarrierUserCmd::has_masterid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RetJoinCarrierUserCmd::set_has_masterid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RetJoinCarrierUserCmd::clear_has_masterid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RetJoinCarrierUserCmd::clear_masterid() {
  masterid_ = GOOGLE_ULONGLONG(0);
  clear_has_masterid();
}
inline ::google::protobuf::uint64 RetJoinCarrierUserCmd::masterid() const {
  // @@protoc_insertion_point(field_get:Cmd.RetJoinCarrierUserCmd.masterid)
  return masterid_;
}
inline void RetJoinCarrierUserCmd::set_masterid(::google::protobuf::uint64 value) {
  set_has_masterid();
  masterid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RetJoinCarrierUserCmd.masterid)
}

// -------------------------------------------------------------------

// LeaveCarrierUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
inline bool LeaveCarrierUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LeaveCarrierUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LeaveCarrierUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LeaveCarrierUserCmd::clear_cmd() {
  cmd_ = 16;
  clear_has_cmd();
}
inline ::Cmd::Command LeaveCarrierUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.LeaveCarrierUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void LeaveCarrierUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LeaveCarrierUserCmd.cmd)
}

// optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_LEAVE_CARRIER];
inline bool LeaveCarrierUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LeaveCarrierUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LeaveCarrierUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LeaveCarrierUserCmd::clear_param() {
  param_ = 4;
  clear_has_param();
}
inline ::Cmd::CarrierParam LeaveCarrierUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.LeaveCarrierUserCmd.param)
  return static_cast< ::Cmd::CarrierParam >(param_);
}
inline void LeaveCarrierUserCmd::set_param(::Cmd::CarrierParam value) {
  assert(::Cmd::CarrierParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LeaveCarrierUserCmd.param)
}

// optional uint64 charid = 3;
inline bool LeaveCarrierUserCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LeaveCarrierUserCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LeaveCarrierUserCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LeaveCarrierUserCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 LeaveCarrierUserCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.LeaveCarrierUserCmd.charid)
  return charid_;
}
inline void LeaveCarrierUserCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LeaveCarrierUserCmd.charid)
}

// optional .Cmd.ScenePos pos = 4;
inline bool LeaveCarrierUserCmd::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LeaveCarrierUserCmd::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LeaveCarrierUserCmd::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LeaveCarrierUserCmd::clear_pos() {
  if (pos_ != NULL) pos_->::Cmd::ScenePos::Clear();
  clear_has_pos();
}
inline const ::Cmd::ScenePos& LeaveCarrierUserCmd::pos() const {
  // @@protoc_insertion_point(field_get:Cmd.LeaveCarrierUserCmd.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Cmd::ScenePos* LeaveCarrierUserCmd::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Cmd::ScenePos;
  // @@protoc_insertion_point(field_mutable:Cmd.LeaveCarrierUserCmd.pos)
  return pos_;
}
inline ::Cmd::ScenePos* LeaveCarrierUserCmd::release_pos() {
  clear_has_pos();
  ::Cmd::ScenePos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void LeaveCarrierUserCmd::set_allocated_pos(::Cmd::ScenePos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.LeaveCarrierUserCmd.pos)
}

// optional uint64 masterid = 5;
inline bool LeaveCarrierUserCmd::has_masterid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LeaveCarrierUserCmd::set_has_masterid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LeaveCarrierUserCmd::clear_has_masterid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LeaveCarrierUserCmd::clear_masterid() {
  masterid_ = GOOGLE_ULONGLONG(0);
  clear_has_masterid();
}
inline ::google::protobuf::uint64 LeaveCarrierUserCmd::masterid() const {
  // @@protoc_insertion_point(field_get:Cmd.LeaveCarrierUserCmd.masterid)
  return masterid_;
}
inline void LeaveCarrierUserCmd::set_masterid(::google::protobuf::uint64 value) {
  set_has_masterid();
  masterid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LeaveCarrierUserCmd.masterid)
}

// optional uint64 newmasterid = 6;
inline bool LeaveCarrierUserCmd::has_newmasterid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LeaveCarrierUserCmd::set_has_newmasterid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LeaveCarrierUserCmd::clear_has_newmasterid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LeaveCarrierUserCmd::clear_newmasterid() {
  newmasterid_ = GOOGLE_ULONGLONG(0);
  clear_has_newmasterid();
}
inline ::google::protobuf::uint64 LeaveCarrierUserCmd::newmasterid() const {
  // @@protoc_insertion_point(field_get:Cmd.LeaveCarrierUserCmd.newmasterid)
  return newmasterid_;
}
inline void LeaveCarrierUserCmd::set_newmasterid(::google::protobuf::uint64 value) {
  set_has_newmasterid();
  newmasterid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LeaveCarrierUserCmd.newmasterid)
}

// optional bool all = 7 [default = false];
inline bool LeaveCarrierUserCmd::has_all() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LeaveCarrierUserCmd::set_has_all() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LeaveCarrierUserCmd::clear_has_all() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LeaveCarrierUserCmd::clear_all() {
  all_ = false;
  clear_has_all();
}
inline bool LeaveCarrierUserCmd::all() const {
  // @@protoc_insertion_point(field_get:Cmd.LeaveCarrierUserCmd.all)
  return all_;
}
inline void LeaveCarrierUserCmd::set_all(bool value) {
  set_has_all();
  all_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LeaveCarrierUserCmd.all)
}

// -------------------------------------------------------------------

// ReachCarrierUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
inline bool ReachCarrierUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReachCarrierUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReachCarrierUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReachCarrierUserCmd::clear_cmd() {
  cmd_ = 16;
  clear_has_cmd();
}
inline ::Cmd::Command ReachCarrierUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ReachCarrierUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ReachCarrierUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ReachCarrierUserCmd.cmd)
}

// optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_REACH_CARRIER];
inline bool ReachCarrierUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReachCarrierUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReachCarrierUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReachCarrierUserCmd::clear_param() {
  param_ = 9;
  clear_has_param();
}
inline ::Cmd::CarrierParam ReachCarrierUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ReachCarrierUserCmd.param)
  return static_cast< ::Cmd::CarrierParam >(param_);
}
inline void ReachCarrierUserCmd::set_param(::Cmd::CarrierParam value) {
  assert(::Cmd::CarrierParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ReachCarrierUserCmd.param)
}

// optional .Cmd.ScenePos pos = 3;
inline bool ReachCarrierUserCmd::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReachCarrierUserCmd::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReachCarrierUserCmd::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReachCarrierUserCmd::clear_pos() {
  if (pos_ != NULL) pos_->::Cmd::ScenePos::Clear();
  clear_has_pos();
}
inline const ::Cmd::ScenePos& ReachCarrierUserCmd::pos() const {
  // @@protoc_insertion_point(field_get:Cmd.ReachCarrierUserCmd.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Cmd::ScenePos* ReachCarrierUserCmd::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Cmd::ScenePos;
  // @@protoc_insertion_point(field_mutable:Cmd.ReachCarrierUserCmd.pos)
  return pos_;
}
inline ::Cmd::ScenePos* ReachCarrierUserCmd::release_pos() {
  clear_has_pos();
  ::Cmd::ScenePos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void ReachCarrierUserCmd::set_allocated_pos(::Cmd::ScenePos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ReachCarrierUserCmd.pos)
}

// optional uint64 masterid = 4;
inline bool ReachCarrierUserCmd::has_masterid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReachCarrierUserCmd::set_has_masterid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReachCarrierUserCmd::clear_has_masterid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReachCarrierUserCmd::clear_masterid() {
  masterid_ = GOOGLE_ULONGLONG(0);
  clear_has_masterid();
}
inline ::google::protobuf::uint64 ReachCarrierUserCmd::masterid() const {
  // @@protoc_insertion_point(field_get:Cmd.ReachCarrierUserCmd.masterid)
  return masterid_;
}
inline void ReachCarrierUserCmd::set_masterid(::google::protobuf::uint64 value) {
  set_has_masterid();
  masterid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ReachCarrierUserCmd.masterid)
}

// -------------------------------------------------------------------

// CarrierMoveUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
inline bool CarrierMoveUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CarrierMoveUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CarrierMoveUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CarrierMoveUserCmd::clear_cmd() {
  cmd_ = 16;
  clear_has_cmd();
}
inline ::Cmd::Command CarrierMoveUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.CarrierMoveUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void CarrierMoveUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CarrierMoveUserCmd.cmd)
}

// optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_CARRIER_MOVE];
inline bool CarrierMoveUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CarrierMoveUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CarrierMoveUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CarrierMoveUserCmd::clear_param() {
  param_ = 5;
  clear_has_param();
}
inline ::Cmd::CarrierParam CarrierMoveUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.CarrierMoveUserCmd.param)
  return static_cast< ::Cmd::CarrierParam >(param_);
}
inline void CarrierMoveUserCmd::set_param(::Cmd::CarrierParam value) {
  assert(::Cmd::CarrierParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CarrierMoveUserCmd.param)
}

// optional .Cmd.ScenePos pos = 3;
inline bool CarrierMoveUserCmd::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CarrierMoveUserCmd::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CarrierMoveUserCmd::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CarrierMoveUserCmd::clear_pos() {
  if (pos_ != NULL) pos_->::Cmd::ScenePos::Clear();
  clear_has_pos();
}
inline const ::Cmd::ScenePos& CarrierMoveUserCmd::pos() const {
  // @@protoc_insertion_point(field_get:Cmd.CarrierMoveUserCmd.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Cmd::ScenePos* CarrierMoveUserCmd::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Cmd::ScenePos;
  // @@protoc_insertion_point(field_mutable:Cmd.CarrierMoveUserCmd.pos)
  return pos_;
}
inline ::Cmd::ScenePos* CarrierMoveUserCmd::release_pos() {
  clear_has_pos();
  ::Cmd::ScenePos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void CarrierMoveUserCmd::set_allocated_pos(::Cmd::ScenePos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.CarrierMoveUserCmd.pos)
}

// optional uint32 progress = 4;
inline bool CarrierMoveUserCmd::has_progress() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CarrierMoveUserCmd::set_has_progress() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CarrierMoveUserCmd::clear_has_progress() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CarrierMoveUserCmd::clear_progress() {
  progress_ = 0u;
  clear_has_progress();
}
inline ::google::protobuf::uint32 CarrierMoveUserCmd::progress() const {
  // @@protoc_insertion_point(field_get:Cmd.CarrierMoveUserCmd.progress)
  return progress_;
}
inline void CarrierMoveUserCmd::set_progress(::google::protobuf::uint32 value) {
  set_has_progress();
  progress_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CarrierMoveUserCmd.progress)
}

// optional uint64 masterid = 5;
inline bool CarrierMoveUserCmd::has_masterid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CarrierMoveUserCmd::set_has_masterid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CarrierMoveUserCmd::clear_has_masterid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CarrierMoveUserCmd::clear_masterid() {
  masterid_ = GOOGLE_ULONGLONG(0);
  clear_has_masterid();
}
inline ::google::protobuf::uint64 CarrierMoveUserCmd::masterid() const {
  // @@protoc_insertion_point(field_get:Cmd.CarrierMoveUserCmd.masterid)
  return masterid_;
}
inline void CarrierMoveUserCmd::set_masterid(::google::protobuf::uint64 value) {
  set_has_masterid();
  masterid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CarrierMoveUserCmd.masterid)
}

// -------------------------------------------------------------------

// CarrierStartUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
inline bool CarrierStartUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CarrierStartUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CarrierStartUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CarrierStartUserCmd::clear_cmd() {
  cmd_ = 16;
  clear_has_cmd();
}
inline ::Cmd::Command CarrierStartUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.CarrierStartUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void CarrierStartUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CarrierStartUserCmd.cmd)
}

// optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_CARRIER_START];
inline bool CarrierStartUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CarrierStartUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CarrierStartUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CarrierStartUserCmd::clear_param() {
  param_ = 7;
  clear_has_param();
}
inline ::Cmd::CarrierParam CarrierStartUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.CarrierStartUserCmd.param)
  return static_cast< ::Cmd::CarrierParam >(param_);
}
inline void CarrierStartUserCmd::set_param(::Cmd::CarrierParam value) {
  assert(::Cmd::CarrierParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CarrierStartUserCmd.param)
}

// optional uint32 line = 3;
inline bool CarrierStartUserCmd::has_line() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CarrierStartUserCmd::set_has_line() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CarrierStartUserCmd::clear_has_line() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CarrierStartUserCmd::clear_line() {
  line_ = 0u;
  clear_has_line();
}
inline ::google::protobuf::uint32 CarrierStartUserCmd::line() const {
  // @@protoc_insertion_point(field_get:Cmd.CarrierStartUserCmd.line)
  return line_;
}
inline void CarrierStartUserCmd::set_line(::google::protobuf::uint32 value) {
  set_has_line();
  line_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CarrierStartUserCmd.line)
}

// optional uint64 masterid = 4;
inline bool CarrierStartUserCmd::has_masterid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CarrierStartUserCmd::set_has_masterid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CarrierStartUserCmd::clear_has_masterid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CarrierStartUserCmd::clear_masterid() {
  masterid_ = GOOGLE_ULONGLONG(0);
  clear_has_masterid();
}
inline ::google::protobuf::uint64 CarrierStartUserCmd::masterid() const {
  // @@protoc_insertion_point(field_get:Cmd.CarrierStartUserCmd.masterid)
  return masterid_;
}
inline void CarrierStartUserCmd::set_masterid(::google::protobuf::uint64 value) {
  set_has_masterid();
  masterid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CarrierStartUserCmd.masterid)
}

// -------------------------------------------------------------------

// CarrierWaitListUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
inline bool CarrierWaitListUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CarrierWaitListUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CarrierWaitListUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CarrierWaitListUserCmd::clear_cmd() {
  cmd_ = 16;
  clear_has_cmd();
}
inline ::Cmd::Command CarrierWaitListUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.CarrierWaitListUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void CarrierWaitListUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CarrierWaitListUserCmd.cmd)
}

// optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_CARRIER_WAIT_LIST];
inline bool CarrierWaitListUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CarrierWaitListUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CarrierWaitListUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CarrierWaitListUserCmd::clear_param() {
  param_ = 8;
  clear_has_param();
}
inline ::Cmd::CarrierParam CarrierWaitListUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.CarrierWaitListUserCmd.param)
  return static_cast< ::Cmd::CarrierParam >(param_);
}
inline void CarrierWaitListUserCmd::set_param(::Cmd::CarrierParam value) {
  assert(::Cmd::CarrierParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CarrierWaitListUserCmd.param)
}

// repeated .Cmd.CarrierMember members = 3;
inline int CarrierWaitListUserCmd::members_size() const {
  return members_.size();
}
inline void CarrierWaitListUserCmd::clear_members() {
  members_.Clear();
}
inline const ::Cmd::CarrierMember& CarrierWaitListUserCmd::members(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.CarrierWaitListUserCmd.members)
  return members_.Get(index);
}
inline ::Cmd::CarrierMember* CarrierWaitListUserCmd::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.CarrierWaitListUserCmd.members)
  return members_.Mutable(index);
}
inline ::Cmd::CarrierMember* CarrierWaitListUserCmd::add_members() {
  // @@protoc_insertion_point(field_add:Cmd.CarrierWaitListUserCmd.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::CarrierMember >&
CarrierWaitListUserCmd::members() const {
  // @@protoc_insertion_point(field_list:Cmd.CarrierWaitListUserCmd.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::CarrierMember >*
CarrierWaitListUserCmd::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.CarrierWaitListUserCmd.members)
  return &members_;
}

// optional uint64 masterid = 4;
inline bool CarrierWaitListUserCmd::has_masterid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CarrierWaitListUserCmd::set_has_masterid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CarrierWaitListUserCmd::clear_has_masterid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CarrierWaitListUserCmd::clear_masterid() {
  masterid_ = GOOGLE_ULONGLONG(0);
  clear_has_masterid();
}
inline ::google::protobuf::uint64 CarrierWaitListUserCmd::masterid() const {
  // @@protoc_insertion_point(field_get:Cmd.CarrierWaitListUserCmd.masterid)
  return masterid_;
}
inline void CarrierWaitListUserCmd::set_masterid(::google::protobuf::uint64 value) {
  set_has_masterid();
  masterid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CarrierWaitListUserCmd.masterid)
}

// -------------------------------------------------------------------

// ChangeCarrierUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
inline bool ChangeCarrierUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeCarrierUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeCarrierUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeCarrierUserCmd::clear_cmd() {
  cmd_ = 16;
  clear_has_cmd();
}
inline ::Cmd::Command ChangeCarrierUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeCarrierUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ChangeCarrierUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeCarrierUserCmd.cmd)
}

// optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_CHANGE_CARRIER];
inline bool ChangeCarrierUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeCarrierUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeCarrierUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeCarrierUserCmd::clear_param() {
  param_ = 11;
  clear_has_param();
}
inline ::Cmd::CarrierParam ChangeCarrierUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeCarrierUserCmd.param)
  return static_cast< ::Cmd::CarrierParam >(param_);
}
inline void ChangeCarrierUserCmd::set_param(::Cmd::CarrierParam value) {
  assert(::Cmd::CarrierParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeCarrierUserCmd.param)
}

// optional uint32 carrierid = 3 [default = 0];
inline bool ChangeCarrierUserCmd::has_carrierid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChangeCarrierUserCmd::set_has_carrierid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChangeCarrierUserCmd::clear_has_carrierid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChangeCarrierUserCmd::clear_carrierid() {
  carrierid_ = 0u;
  clear_has_carrierid();
}
inline ::google::protobuf::uint32 ChangeCarrierUserCmd::carrierid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeCarrierUserCmd.carrierid)
  return carrierid_;
}
inline void ChangeCarrierUserCmd::set_carrierid(::google::protobuf::uint32 value) {
  set_has_carrierid();
  carrierid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeCarrierUserCmd.carrierid)
}

// optional uint64 masterid = 4 [default = 0];
inline bool ChangeCarrierUserCmd::has_masterid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChangeCarrierUserCmd::set_has_masterid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChangeCarrierUserCmd::clear_has_masterid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChangeCarrierUserCmd::clear_masterid() {
  masterid_ = GOOGLE_ULONGLONG(0);
  clear_has_masterid();
}
inline ::google::protobuf::uint64 ChangeCarrierUserCmd::masterid() const {
  // @@protoc_insertion_point(field_get:Cmd.ChangeCarrierUserCmd.masterid)
  return masterid_;
}
inline void ChangeCarrierUserCmd::set_masterid(::google::protobuf::uint64 value) {
  set_has_masterid();
  masterid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ChangeCarrierUserCmd.masterid)
}

// -------------------------------------------------------------------

// FerrisWheelInviteCarrierCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
inline bool FerrisWheelInviteCarrierCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FerrisWheelInviteCarrierCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FerrisWheelInviteCarrierCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FerrisWheelInviteCarrierCmd::clear_cmd() {
  cmd_ = 16;
  clear_has_cmd();
}
inline ::Cmd::Command FerrisWheelInviteCarrierCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.FerrisWheelInviteCarrierCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void FerrisWheelInviteCarrierCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FerrisWheelInviteCarrierCmd.cmd)
}

// optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_FERRISWHEEL_INVITE];
inline bool FerrisWheelInviteCarrierCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FerrisWheelInviteCarrierCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FerrisWheelInviteCarrierCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FerrisWheelInviteCarrierCmd::clear_param() {
  param_ = 12;
  clear_has_param();
}
inline ::Cmd::CarrierParam FerrisWheelInviteCarrierCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.FerrisWheelInviteCarrierCmd.param)
  return static_cast< ::Cmd::CarrierParam >(param_);
}
inline void FerrisWheelInviteCarrierCmd::set_param(::Cmd::CarrierParam value) {
  assert(::Cmd::CarrierParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FerrisWheelInviteCarrierCmd.param)
}

// optional uint64 targetid = 3 [default = 0];
inline bool FerrisWheelInviteCarrierCmd::has_targetid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FerrisWheelInviteCarrierCmd::set_has_targetid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FerrisWheelInviteCarrierCmd::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FerrisWheelInviteCarrierCmd::clear_targetid() {
  targetid_ = GOOGLE_ULONGLONG(0);
  clear_has_targetid();
}
inline ::google::protobuf::uint64 FerrisWheelInviteCarrierCmd::targetid() const {
  // @@protoc_insertion_point(field_get:Cmd.FerrisWheelInviteCarrierCmd.targetid)
  return targetid_;
}
inline void FerrisWheelInviteCarrierCmd::set_targetid(::google::protobuf::uint64 value) {
  set_has_targetid();
  targetid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FerrisWheelInviteCarrierCmd.targetid)
}

// optional string targetname = 4;
inline bool FerrisWheelInviteCarrierCmd::has_targetname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FerrisWheelInviteCarrierCmd::set_has_targetname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FerrisWheelInviteCarrierCmd::clear_has_targetname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FerrisWheelInviteCarrierCmd::clear_targetname() {
  if (targetname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    targetname_->clear();
  }
  clear_has_targetname();
}
inline const ::std::string& FerrisWheelInviteCarrierCmd::targetname() const {
  // @@protoc_insertion_point(field_get:Cmd.FerrisWheelInviteCarrierCmd.targetname)
  return *targetname_;
}
inline void FerrisWheelInviteCarrierCmd::set_targetname(const ::std::string& value) {
  set_has_targetname();
  if (targetname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    targetname_ = new ::std::string;
  }
  targetname_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.FerrisWheelInviteCarrierCmd.targetname)
}
inline void FerrisWheelInviteCarrierCmd::set_targetname(const char* value) {
  set_has_targetname();
  if (targetname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    targetname_ = new ::std::string;
  }
  targetname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.FerrisWheelInviteCarrierCmd.targetname)
}
inline void FerrisWheelInviteCarrierCmd::set_targetname(const char* value, size_t size) {
  set_has_targetname();
  if (targetname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    targetname_ = new ::std::string;
  }
  targetname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.FerrisWheelInviteCarrierCmd.targetname)
}
inline ::std::string* FerrisWheelInviteCarrierCmd::mutable_targetname() {
  set_has_targetname();
  if (targetname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    targetname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.FerrisWheelInviteCarrierCmd.targetname)
  return targetname_;
}
inline ::std::string* FerrisWheelInviteCarrierCmd::release_targetname() {
  clear_has_targetname();
  if (targetname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = targetname_;
    targetname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FerrisWheelInviteCarrierCmd::set_allocated_targetname(::std::string* targetname) {
  if (targetname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete targetname_;
  }
  if (targetname) {
    set_has_targetname();
    targetname_ = targetname;
  } else {
    clear_has_targetname();
    targetname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.FerrisWheelInviteCarrierCmd.targetname)
}

// optional uint32 id = 5 [default = 1];
inline bool FerrisWheelInviteCarrierCmd::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FerrisWheelInviteCarrierCmd::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FerrisWheelInviteCarrierCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FerrisWheelInviteCarrierCmd::clear_id() {
  id_ = 1u;
  clear_has_id();
}
inline ::google::protobuf::uint32 FerrisWheelInviteCarrierCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.FerrisWheelInviteCarrierCmd.id)
  return id_;
}
inline void FerrisWheelInviteCarrierCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FerrisWheelInviteCarrierCmd.id)
}

// -------------------------------------------------------------------

// FerrisWheelProcessInviteCarrierCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
inline bool FerrisWheelProcessInviteCarrierCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FerrisWheelProcessInviteCarrierCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FerrisWheelProcessInviteCarrierCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FerrisWheelProcessInviteCarrierCmd::clear_cmd() {
  cmd_ = 16;
  clear_has_cmd();
}
inline ::Cmd::Command FerrisWheelProcessInviteCarrierCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.FerrisWheelProcessInviteCarrierCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void FerrisWheelProcessInviteCarrierCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FerrisWheelProcessInviteCarrierCmd.cmd)
}

// optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_FERRISWHEEL_PROCESSINVITE];
inline bool FerrisWheelProcessInviteCarrierCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FerrisWheelProcessInviteCarrierCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FerrisWheelProcessInviteCarrierCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FerrisWheelProcessInviteCarrierCmd::clear_param() {
  param_ = 13;
  clear_has_param();
}
inline ::Cmd::CarrierParam FerrisWheelProcessInviteCarrierCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.FerrisWheelProcessInviteCarrierCmd.param)
  return static_cast< ::Cmd::CarrierParam >(param_);
}
inline void FerrisWheelProcessInviteCarrierCmd::set_param(::Cmd::CarrierParam value) {
  assert(::Cmd::CarrierParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FerrisWheelProcessInviteCarrierCmd.param)
}

// optional uint64 targetid = 3 [default = 0];
inline bool FerrisWheelProcessInviteCarrierCmd::has_targetid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FerrisWheelProcessInviteCarrierCmd::set_has_targetid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FerrisWheelProcessInviteCarrierCmd::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FerrisWheelProcessInviteCarrierCmd::clear_targetid() {
  targetid_ = GOOGLE_ULONGLONG(0);
  clear_has_targetid();
}
inline ::google::protobuf::uint64 FerrisWheelProcessInviteCarrierCmd::targetid() const {
  // @@protoc_insertion_point(field_get:Cmd.FerrisWheelProcessInviteCarrierCmd.targetid)
  return targetid_;
}
inline void FerrisWheelProcessInviteCarrierCmd::set_targetid(::google::protobuf::uint64 value) {
  set_has_targetid();
  targetid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FerrisWheelProcessInviteCarrierCmd.targetid)
}

// optional .Cmd.EFerrisAction action = 4 [default = EFERRISACTION_MIN];
inline bool FerrisWheelProcessInviteCarrierCmd::has_action() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FerrisWheelProcessInviteCarrierCmd::set_has_action() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FerrisWheelProcessInviteCarrierCmd::clear_has_action() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FerrisWheelProcessInviteCarrierCmd::clear_action() {
  action_ = 0;
  clear_has_action();
}
inline ::Cmd::EFerrisAction FerrisWheelProcessInviteCarrierCmd::action() const {
  // @@protoc_insertion_point(field_get:Cmd.FerrisWheelProcessInviteCarrierCmd.action)
  return static_cast< ::Cmd::EFerrisAction >(action_);
}
inline void FerrisWheelProcessInviteCarrierCmd::set_action(::Cmd::EFerrisAction value) {
  assert(::Cmd::EFerrisAction_IsValid(value));
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FerrisWheelProcessInviteCarrierCmd.action)
}

// optional uint32 id = 5 [default = 1];
inline bool FerrisWheelProcessInviteCarrierCmd::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FerrisWheelProcessInviteCarrierCmd::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FerrisWheelProcessInviteCarrierCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FerrisWheelProcessInviteCarrierCmd::clear_id() {
  id_ = 1u;
  clear_has_id();
}
inline ::google::protobuf::uint32 FerrisWheelProcessInviteCarrierCmd::id() const {
  // @@protoc_insertion_point(field_get:Cmd.FerrisWheelProcessInviteCarrierCmd.id)
  return id_;
}
inline void FerrisWheelProcessInviteCarrierCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FerrisWheelProcessInviteCarrierCmd.id)
}

// -------------------------------------------------------------------

// StartFerrisWheelUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
inline bool StartFerrisWheelUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartFerrisWheelUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartFerrisWheelUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartFerrisWheelUserCmd::clear_cmd() {
  cmd_ = 16;
  clear_has_cmd();
}
inline ::Cmd::Command StartFerrisWheelUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.StartFerrisWheelUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void StartFerrisWheelUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartFerrisWheelUserCmd.cmd)
}

// optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_START_FERRISWHEEL];
inline bool StartFerrisWheelUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StartFerrisWheelUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StartFerrisWheelUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StartFerrisWheelUserCmd::clear_param() {
  param_ = 14;
  clear_has_param();
}
inline ::Cmd::CarrierParam StartFerrisWheelUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.StartFerrisWheelUserCmd.param)
  return static_cast< ::Cmd::CarrierParam >(param_);
}
inline void StartFerrisWheelUserCmd::set_param(::Cmd::CarrierParam value) {
  assert(::Cmd::CarrierParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartFerrisWheelUserCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool StartFerrisWheelUserCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StartFerrisWheelUserCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StartFerrisWheelUserCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StartFerrisWheelUserCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 StartFerrisWheelUserCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.StartFerrisWheelUserCmd.charid)
  return charid_;
}
inline void StartFerrisWheelUserCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartFerrisWheelUserCmd.charid)
}

// optional uint64 masterid = 4 [default = 0];
inline bool StartFerrisWheelUserCmd::has_masterid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StartFerrisWheelUserCmd::set_has_masterid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StartFerrisWheelUserCmd::clear_has_masterid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StartFerrisWheelUserCmd::clear_masterid() {
  masterid_ = GOOGLE_ULONGLONG(0);
  clear_has_masterid();
}
inline ::google::protobuf::uint64 StartFerrisWheelUserCmd::masterid() const {
  // @@protoc_insertion_point(field_get:Cmd.StartFerrisWheelUserCmd.masterid)
  return masterid_;
}
inline void StartFerrisWheelUserCmd::set_masterid(::google::protobuf::uint64 value) {
  set_has_masterid();
  masterid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StartFerrisWheelUserCmd.masterid)
}

// -------------------------------------------------------------------

// CatchUserJoinCarrierUserCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_CARRIER_PROTOCMD];
inline bool CatchUserJoinCarrierUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CatchUserJoinCarrierUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CatchUserJoinCarrierUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CatchUserJoinCarrierUserCmd::clear_cmd() {
  cmd_ = 16;
  clear_has_cmd();
}
inline ::Cmd::Command CatchUserJoinCarrierUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.CatchUserJoinCarrierUserCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void CatchUserJoinCarrierUserCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatchUserJoinCarrierUserCmd.cmd)
}

// optional .Cmd.CarrierParam param = 2 [default = MAPPARAM_CATCH_USER_JOIN_CARRIER];
inline bool CatchUserJoinCarrierUserCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CatchUserJoinCarrierUserCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CatchUserJoinCarrierUserCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CatchUserJoinCarrierUserCmd::clear_param() {
  param_ = 15;
  clear_has_param();
}
inline ::Cmd::CarrierParam CatchUserJoinCarrierUserCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.CatchUserJoinCarrierUserCmd.param)
  return static_cast< ::Cmd::CarrierParam >(param_);
}
inline void CatchUserJoinCarrierUserCmd::set_param(::Cmd::CarrierParam value) {
  assert(::Cmd::CarrierParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatchUserJoinCarrierUserCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool CatchUserJoinCarrierUserCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CatchUserJoinCarrierUserCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CatchUserJoinCarrierUserCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CatchUserJoinCarrierUserCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 CatchUserJoinCarrierUserCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.CatchUserJoinCarrierUserCmd.charid)
  return charid_;
}
inline void CatchUserJoinCarrierUserCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatchUserJoinCarrierUserCmd.charid)
}

// optional uint64 masterid = 4 [default = 0];
inline bool CatchUserJoinCarrierUserCmd::has_masterid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CatchUserJoinCarrierUserCmd::set_has_masterid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CatchUserJoinCarrierUserCmd::clear_has_masterid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CatchUserJoinCarrierUserCmd::clear_masterid() {
  masterid_ = GOOGLE_ULONGLONG(0);
  clear_has_masterid();
}
inline ::google::protobuf::uint64 CatchUserJoinCarrierUserCmd::masterid() const {
  // @@protoc_insertion_point(field_get:Cmd.CatchUserJoinCarrierUserCmd.masterid)
  return masterid_;
}
inline void CatchUserJoinCarrierUserCmd::set_masterid(::google::protobuf::uint64 value) {
  set_has_masterid();
  masterid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatchUserJoinCarrierUserCmd.masterid)
}

// optional uint32 mapid = 5 [default = 0];
inline bool CatchUserJoinCarrierUserCmd::has_mapid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CatchUserJoinCarrierUserCmd::set_has_mapid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CatchUserJoinCarrierUserCmd::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CatchUserJoinCarrierUserCmd::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 CatchUserJoinCarrierUserCmd::mapid() const {
  // @@protoc_insertion_point(field_get:Cmd.CatchUserJoinCarrierUserCmd.mapid)
  return mapid_;
}
inline void CatchUserJoinCarrierUserCmd::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.CatchUserJoinCarrierUserCmd.mapid)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cmd

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Cmd::CarrierParam> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::CarrierParam>() {
  return ::Cmd::CarrierParam_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EFerrisAction> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EFerrisAction>() {
  return ::Cmd::EFerrisAction_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CarrierCmd_2eproto__INCLUDED
