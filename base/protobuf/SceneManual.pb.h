// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SceneManual.proto

#ifndef PROTOBUF_SceneManual_2eproto__INCLUDED
#define PROTOBUF_SceneManual_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "xCmd.pb.h"
#include "SceneItem.pb.h"
// @@protoc_insertion_point(includes)

namespace Cmd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SceneManual_2eproto();
void protobuf_AssignDesc_SceneManual_2eproto();
void protobuf_ShutdownFile_SceneManual_2eproto();

class ManualQuest;
class ManualSubItem;
class ManualItem;
class ManualGroup;
class ManualData;
class ManualVersion;
class QueryVersion;
class QueryManualData;
class PointSync;
class ManualUpdate;
class GetAchieveReward;
class Unlock;
class SkillPointSync;
class LevelSync;
class GetQuestReward;
class StoreManualCmd;
class GetManualCmd;
class GroupActionManualCmd;
class UnsolvedPhoto;
class UnsolvedUserPhoto;
class QueryUnsolvedPhotoManualCmd;
class UpdateSolvedPhotoManualCmd;

enum ManualParam {
  MANUALPARAM_QUERYVERSION = 1,
  MANUALPARAM_QUERYDATA = 2,
  MANUALPARAM_POINTSYNC = 3,
  MANUALPARAM_UPDATE = 4,
  MANUALPARAM_GETREWARD = 5,
  MANUALPARAM_UNLOCK = 6,
  MANUALPARAM_SKILLPOINTSYNC = 7,
  MANUALPARAM_LEVELSYNC = 8,
  MANUALPARAM_GETQUESTREWARD = 9,
  MANUALPARAM_STOREITEM = 10,
  MANUALPARAM_GETITEM = 11,
  MANUALPARAM_GROUPACTION = 12,
  MANUALPARAM_QUERY_UNSOLVED_PHOTO = 13,
  MANUALPARAM_UPDATE_UNSOLVED_PHOTO = 14
};
bool ManualParam_IsValid(int value);
const ManualParam ManualParam_MIN = MANUALPARAM_QUERYVERSION;
const ManualParam ManualParam_MAX = MANUALPARAM_UPDATE_UNSOLVED_PHOTO;
const int ManualParam_ARRAYSIZE = ManualParam_MAX + 1;

const ::google::protobuf::EnumDescriptor* ManualParam_descriptor();
inline const ::std::string& ManualParam_Name(ManualParam value) {
  return ::google::protobuf::internal::NameOfEnum(
    ManualParam_descriptor(), value);
}
inline bool ManualParam_Parse(
    const ::std::string& name, ManualParam* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ManualParam>(
    ManualParam_descriptor(), name, value);
}
enum EManualType {
  EMANUALTYPE_MIN = 0,
  EMANUALTYPE_FASHION = 1,
  EMANUALTYPE_CARD = 2,
  EMANUALTYPE_EQUIP = 3,
  EMANUALTYPE_ITEM = 4,
  EMANUALTYPE_MOUNT = 5,
  EMANUALTYPE_MONSTER = 6,
  EMANUALTYPE_NPC = 7,
  EMANUALTYPE_HOMEPAGE = 8,
  EMANUALTYPE_MAP = 9,
  EMANUALTYPE_ACHIEVE = 10,
  EMANUALTYPE_SCENERY = 11,
  EMANUALTYPE_COLLECTION = 14,
  EMANUALTYPE_RESEARCH = 15,
  EMANUALTYPE_HAIRSTYLE = 16,
  EMANUALTYPE_MATE = 17,
  EMANUALTYPE_FOOD = 18,
  EMANUALTYPE_PET = 19,
  EMANUALTYPE_MAX = 20
};
bool EManualType_IsValid(int value);
const EManualType EManualType_MIN = EMANUALTYPE_MIN;
const EManualType EManualType_MAX = EMANUALTYPE_MAX;
const int EManualType_ARRAYSIZE = EManualType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EManualType_descriptor();
inline const ::std::string& EManualType_Name(EManualType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EManualType_descriptor(), value);
}
inline bool EManualType_Parse(
    const ::std::string& name, EManualType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EManualType>(
    EManualType_descriptor(), name, value);
}
enum EManualLockMethod {
  EMANUALLOCKMETHOD_MIN = 0,
  EMANUALLOCKMETHOD_KILL = 1,
  EMANUALLOCKMETHOD_PICK = 2,
  EMANUALLOCKMETHOD_PRODUCE = 3,
  EMANUALLOCKMETHOD_GET = 4,
  EMANUALLOCKMETHOD_VISIT = 5,
  EMANUALLOCKMETHOD_PHOTO = 6,
  EMANUALLOCKMETHOD_USED = 7,
  EMANUALLOCKMETHOD_DRAW = 8,
  EMANUALLOCKMETHOD_MAX = 9
};
bool EManualLockMethod_IsValid(int value);
const EManualLockMethod EManualLockMethod_MIN = EMANUALLOCKMETHOD_MIN;
const EManualLockMethod EManualLockMethod_MAX = EMANUALLOCKMETHOD_MAX;
const int EManualLockMethod_ARRAYSIZE = EManualLockMethod_MAX + 1;

const ::google::protobuf::EnumDescriptor* EManualLockMethod_descriptor();
inline const ::std::string& EManualLockMethod_Name(EManualLockMethod value) {
  return ::google::protobuf::internal::NameOfEnum(
    EManualLockMethod_descriptor(), value);
}
inline bool EManualLockMethod_Parse(
    const ::std::string& name, EManualLockMethod* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EManualLockMethod>(
    EManualLockMethod_descriptor(), name, value);
}
enum EManualStatus {
  EMANUALSTATUS_MIN = 0,
  EMANUALSTATUS_DISPLAY = 1,
  EMANUALSTATUS_UNLOCK_CLIENT = 2,
  EMANUALSTATUS_UNLOCK_STEP = 3,
  EMANUALSTATUS_UNLOCK = 4,
  EMANUALSTATUS_MAX = 5
};
bool EManualStatus_IsValid(int value);
const EManualStatus EManualStatus_MIN = EMANUALSTATUS_MIN;
const EManualStatus EManualStatus_MAX = EMANUALSTATUS_MAX;
const int EManualStatus_ARRAYSIZE = EManualStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* EManualStatus_descriptor();
inline const ::std::string& EManualStatus_Name(EManualStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    EManualStatus_descriptor(), value);
}
inline bool EManualStatus_Parse(
    const ::std::string& name, EManualStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EManualStatus>(
    EManualStatus_descriptor(), name, value);
}
enum EGroupAction {
  EGROUPACTION_MIN = 0,
  EGROUPACTION_ENTER_END = 1,
  EGROUPACTION_MAX = 2
};
bool EGroupAction_IsValid(int value);
const EGroupAction EGroupAction_MIN = EGROUPACTION_MIN;
const EGroupAction EGroupAction_MAX = EGROUPACTION_MAX;
const int EGroupAction_ARRAYSIZE = EGroupAction_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGroupAction_descriptor();
inline const ::std::string& EGroupAction_Name(EGroupAction value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGroupAction_descriptor(), value);
}
inline bool EGroupAction_Parse(
    const ::std::string& name, EGroupAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGroupAction>(
    EGroupAction_descriptor(), name, value);
}
// ===================================================================

class ManualQuest : public ::google::protobuf::Message {
 public:
  ManualQuest();
  virtual ~ManualQuest();

  ManualQuest(const ManualQuest& from);

  inline ManualQuest& operator=(const ManualQuest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualQuest& default_instance();

  void Swap(ManualQuest* other);

  // implements Message ----------------------------------------------

  ManualQuest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ManualQuest& from);
  void MergeFrom(const ManualQuest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 process = 2 [default = 0];
  inline bool has_process() const;
  inline void clear_process();
  static const int kProcessFieldNumber = 2;
  inline ::google::protobuf::uint32 process() const;
  inline void set_process(::google::protobuf::uint32 value);

  // optional bool finish = 3 [default = false];
  inline bool has_finish() const;
  inline void clear_finish();
  static const int kFinishFieldNumber = 3;
  inline bool finish() const;
  inline void set_finish(bool value);

  // optional bool rewardget = 4 [default = false];
  inline bool has_rewardget() const;
  inline void clear_rewardget();
  static const int kRewardgetFieldNumber = 4;
  inline bool rewardget() const;
  inline void set_rewardget(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.ManualQuest)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_process();
  inline void clear_has_process();
  inline void set_has_finish();
  inline void clear_has_finish();
  inline void set_has_rewardget();
  inline void clear_has_rewardget();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 process_;
  bool finish_;
  bool rewardget_;
  friend void  protobuf_AddDesc_SceneManual_2eproto();
  friend void protobuf_AssignDesc_SceneManual_2eproto();
  friend void protobuf_ShutdownFile_SceneManual_2eproto();

  void InitAsDefaultInstance();
  static ManualQuest* default_instance_;
};
// -------------------------------------------------------------------

class ManualSubItem : public ::google::protobuf::Message {
 public:
  ManualSubItem();
  virtual ~ManualSubItem();

  ManualSubItem(const ManualSubItem& from);

  inline ManualSubItem& operator=(const ManualSubItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualSubItem& default_instance();

  void Swap(ManualSubItem* other);

  // implements Message ----------------------------------------------

  ManualSubItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ManualSubItem& from);
  void MergeFrom(const ManualSubItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.EManualStatus status = 1 [default = EMANUALSTATUS_MIN];
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::Cmd::EManualStatus status() const;
  inline void set_status(::Cmd::EManualStatus value);

  // optional uint32 id = 2 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional bool unlock = 3 [default = false];
  inline bool has_unlock() const;
  inline void clear_unlock();
  static const int kUnlockFieldNumber = 3;
  inline bool unlock() const;
  inline void set_unlock(bool value);

  // repeated .Cmd.ManualQuest quests = 4;
  inline int quests_size() const;
  inline void clear_quests();
  static const int kQuestsFieldNumber = 4;
  inline const ::Cmd::ManualQuest& quests(int index) const;
  inline ::Cmd::ManualQuest* mutable_quests(int index);
  inline ::Cmd::ManualQuest* add_quests();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ManualQuest >&
      quests() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ManualQuest >*
      mutable_quests();

  // optional bool store = 5;
  inline bool has_store() const;
  inline void clear_store();
  static const int kStoreFieldNumber = 5;
  inline bool store() const;
  inline void set_store(bool value);

  // repeated uint32 params = 6;
  inline int params_size() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 6;
  inline ::google::protobuf::uint32 params(int index) const;
  inline void set_params(int index, ::google::protobuf::uint32 value);
  inline void add_params(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      params() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_params();

  // repeated string data_params = 7;
  inline int data_params_size() const;
  inline void clear_data_params();
  static const int kDataParamsFieldNumber = 7;
  inline const ::std::string& data_params(int index) const;
  inline ::std::string* mutable_data_params(int index);
  inline void set_data_params(int index, const ::std::string& value);
  inline void set_data_params(int index, const char* value);
  inline void set_data_params(int index, const char* value, size_t size);
  inline ::std::string* add_data_params();
  inline void add_data_params(const ::std::string& value);
  inline void add_data_params(const char* value);
  inline void add_data_params(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& data_params() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_data_params();

  // optional uint32 storeid = 8 [default = 0];
  inline bool has_storeid() const;
  inline void clear_storeid();
  static const int kStoreidFieldNumber = 8;
  inline ::google::protobuf::uint32 storeid() const;
  inline void set_storeid(::google::protobuf::uint32 value);

  // optional .Cmd.ItemData item = 9;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 9;
  inline const ::Cmd::ItemData& item() const;
  inline ::Cmd::ItemData* mutable_item();
  inline ::Cmd::ItemData* release_item();
  inline void set_allocated_item(::Cmd::ItemData* item);

  // @@protoc_insertion_point(class_scope:Cmd.ManualSubItem)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_unlock();
  inline void clear_has_unlock();
  inline void set_has_store();
  inline void clear_has_store();
  inline void set_has_storeid();
  inline void clear_has_storeid();
  inline void set_has_item();
  inline void clear_has_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int status_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ManualQuest > quests_;
  bool unlock_;
  bool store_;
  ::google::protobuf::uint32 storeid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > params_;
  ::google::protobuf::RepeatedPtrField< ::std::string> data_params_;
  ::Cmd::ItemData* item_;
  friend void  protobuf_AddDesc_SceneManual_2eproto();
  friend void protobuf_AssignDesc_SceneManual_2eproto();
  friend void protobuf_ShutdownFile_SceneManual_2eproto();

  void InitAsDefaultInstance();
  static ManualSubItem* default_instance_;
};
// -------------------------------------------------------------------

class ManualItem : public ::google::protobuf::Message {
 public:
  ManualItem();
  virtual ~ManualItem();

  ManualItem(const ManualItem& from);

  inline ManualItem& operator=(const ManualItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualItem& default_instance();

  void Swap(ManualItem* other);

  // implements Message ----------------------------------------------

  ManualItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ManualItem& from);
  void MergeFrom(const ManualItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.EManualType type = 1 [default = EMANUALTYPE_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Cmd::EManualType type() const;
  inline void set_type(::Cmd::EManualType value);

  // optional uint32 version = 2 [default = 0];
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 2;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // repeated .Cmd.ManualSubItem items = 3;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 3;
  inline const ::Cmd::ManualSubItem& items(int index) const;
  inline ::Cmd::ManualSubItem* mutable_items(int index);
  inline ::Cmd::ManualSubItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ManualSubItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ManualSubItem >*
      mutable_items();

  // repeated .Cmd.ManualQuest quests = 4;
  inline int quests_size() const;
  inline void clear_quests();
  static const int kQuestsFieldNumber = 4;
  inline const ::Cmd::ManualQuest& quests(int index) const;
  inline ::Cmd::ManualQuest* mutable_quests(int index);
  inline ::Cmd::ManualQuest* add_quests();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ManualQuest >&
      quests() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ManualQuest >*
      mutable_quests();

  // @@protoc_insertion_point(class_scope:Cmd.ManualItem)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ManualSubItem > items_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ManualQuest > quests_;
  friend void  protobuf_AddDesc_SceneManual_2eproto();
  friend void protobuf_AssignDesc_SceneManual_2eproto();
  friend void protobuf_ShutdownFile_SceneManual_2eproto();

  void InitAsDefaultInstance();
  static ManualItem* default_instance_;
};
// -------------------------------------------------------------------

class ManualGroup : public ::google::protobuf::Message {
 public:
  ManualGroup();
  virtual ~ManualGroup();

  ManualGroup(const ManualGroup& from);

  inline ManualGroup& operator=(const ManualGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualGroup& default_instance();

  void Swap(ManualGroup* other);

  // implements Message ----------------------------------------------

  ManualGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ManualGroup& from);
  void MergeFrom(const ManualGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ManualGroup)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_SceneManual_2eproto();
  friend void protobuf_AssignDesc_SceneManual_2eproto();
  friend void protobuf_ShutdownFile_SceneManual_2eproto();

  void InitAsDefaultInstance();
  static ManualGroup* default_instance_;
};
// -------------------------------------------------------------------

class ManualData : public ::google::protobuf::Message {
 public:
  ManualData();
  virtual ~ManualData();

  ManualData(const ManualData& from);

  inline ManualData& operator=(const ManualData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualData& default_instance();

  void Swap(ManualData* other);

  // implements Message ----------------------------------------------

  ManualData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ManualData& from);
  void MergeFrom(const ManualData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 version = 6 [default = 0];
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 6;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // optional uint32 point = 1 [default = 0];
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 1;
  inline ::google::protobuf::uint32 point() const;
  inline void set_point(::google::protobuf::uint32 value);

  // optional uint32 level = 2 [default = 0];
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 skillpoint = 4 [default = 0];
  inline bool has_skillpoint() const;
  inline void clear_skillpoint();
  static const int kSkillpointFieldNumber = 4;
  inline ::google::protobuf::uint32 skillpoint() const;
  inline void set_skillpoint(::google::protobuf::uint32 value);

  // optional uint32 exchange_time = 8 [default = 0];
  inline bool has_exchange_time() const;
  inline void clear_exchange_time();
  static const int kExchangeTimeFieldNumber = 8;
  inline ::google::protobuf::uint32 exchange_time() const;
  inline void set_exchange_time(::google::protobuf::uint32 value);

  // repeated .Cmd.ManualItem items = 3;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 3;
  inline const ::Cmd::ManualItem& items(int index) const;
  inline ::Cmd::ManualItem* mutable_items(int index);
  inline ::Cmd::ManualItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ManualItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ManualItem >*
      mutable_items();

  // repeated .Cmd.ManualGroup groups = 5;
  inline int groups_size() const;
  inline void clear_groups();
  static const int kGroupsFieldNumber = 5;
  inline const ::Cmd::ManualGroup& groups(int index) const;
  inline ::Cmd::ManualGroup* mutable_groups(int index);
  inline ::Cmd::ManualGroup* add_groups();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ManualGroup >&
      groups() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ManualGroup >*
      mutable_groups();

  // @@protoc_insertion_point(class_scope:Cmd.ManualData)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_point();
  inline void clear_has_point();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_skillpoint();
  inline void clear_has_skillpoint();
  inline void set_has_exchange_time();
  inline void clear_has_exchange_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 point_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 skillpoint_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ManualItem > items_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ManualGroup > groups_;
  ::google::protobuf::uint32 exchange_time_;
  friend void  protobuf_AddDesc_SceneManual_2eproto();
  friend void protobuf_AssignDesc_SceneManual_2eproto();
  friend void protobuf_ShutdownFile_SceneManual_2eproto();

  void InitAsDefaultInstance();
  static ManualData* default_instance_;
};
// -------------------------------------------------------------------

class ManualVersion : public ::google::protobuf::Message {
 public:
  ManualVersion();
  virtual ~ManualVersion();

  ManualVersion(const ManualVersion& from);

  inline ManualVersion& operator=(const ManualVersion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualVersion& default_instance();

  void Swap(ManualVersion* other);

  // implements Message ----------------------------------------------

  ManualVersion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ManualVersion& from);
  void MergeFrom(const ManualVersion& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.EManualType type = 1 [default = EMANUALTYPE_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Cmd::EManualType type() const;
  inline void set_type(::Cmd::EManualType value);

  // optional uint32 version = 2 [default = 0];
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 2;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ManualVersion)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 version_;
  friend void  protobuf_AddDesc_SceneManual_2eproto();
  friend void protobuf_AssignDesc_SceneManual_2eproto();
  friend void protobuf_ShutdownFile_SceneManual_2eproto();

  void InitAsDefaultInstance();
  static ManualVersion* default_instance_;
};
// -------------------------------------------------------------------

class QueryVersion : public ::google::protobuf::Message {
 public:
  QueryVersion();
  virtual ~QueryVersion();

  QueryVersion(const QueryVersion& from);

  inline QueryVersion& operator=(const QueryVersion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryVersion& default_instance();

  void Swap(QueryVersion* other);

  // implements Message ----------------------------------------------

  QueryVersion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryVersion& from);
  void MergeFrom(const QueryVersion& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_MANUAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ManualParam param = 2 [default = MANUALPARAM_QUERYVERSION];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ManualParam param() const;
  inline void set_param(::Cmd::ManualParam value);

  // repeated .Cmd.ManualVersion versions = 3;
  inline int versions_size() const;
  inline void clear_versions();
  static const int kVersionsFieldNumber = 3;
  inline const ::Cmd::ManualVersion& versions(int index) const;
  inline ::Cmd::ManualVersion* mutable_versions(int index);
  inline ::Cmd::ManualVersion* add_versions();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ManualVersion >&
      versions() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ManualVersion >*
      mutable_versions();

  // @@protoc_insertion_point(class_scope:Cmd.QueryVersion)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::ManualVersion > versions_;
  friend void  protobuf_AddDesc_SceneManual_2eproto();
  friend void protobuf_AssignDesc_SceneManual_2eproto();
  friend void protobuf_ShutdownFile_SceneManual_2eproto();

  void InitAsDefaultInstance();
  static QueryVersion* default_instance_;
};
// -------------------------------------------------------------------

class QueryManualData : public ::google::protobuf::Message {
 public:
  QueryManualData();
  virtual ~QueryManualData();

  QueryManualData(const QueryManualData& from);

  inline QueryManualData& operator=(const QueryManualData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryManualData& default_instance();

  void Swap(QueryManualData* other);

  // implements Message ----------------------------------------------

  QueryManualData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryManualData& from);
  void MergeFrom(const QueryManualData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_MANUAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ManualParam param = 2 [default = MANUALPARAM_QUERYDATA];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ManualParam param() const;
  inline void set_param(::Cmd::ManualParam value);

  // optional .Cmd.EManualType type = 3 [default = EMANUALTYPE_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::Cmd::EManualType type() const;
  inline void set_type(::Cmd::EManualType value);

  // optional .Cmd.ManualItem item = 4;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 4;
  inline const ::Cmd::ManualItem& item() const;
  inline ::Cmd::ManualItem* mutable_item();
  inline ::Cmd::ManualItem* release_item();
  inline void set_allocated_item(::Cmd::ManualItem* item);

  // @@protoc_insertion_point(class_scope:Cmd.QueryManualData)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_item();
  inline void clear_has_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::ManualItem* item_;
  int type_;
  friend void  protobuf_AddDesc_SceneManual_2eproto();
  friend void protobuf_AssignDesc_SceneManual_2eproto();
  friend void protobuf_ShutdownFile_SceneManual_2eproto();

  void InitAsDefaultInstance();
  static QueryManualData* default_instance_;
};
// -------------------------------------------------------------------

class PointSync : public ::google::protobuf::Message {
 public:
  PointSync();
  virtual ~PointSync();

  PointSync(const PointSync& from);

  inline PointSync& operator=(const PointSync& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PointSync& default_instance();

  void Swap(PointSync* other);

  // implements Message ----------------------------------------------

  PointSync* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PointSync& from);
  void MergeFrom(const PointSync& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_MANUAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ManualParam param = 2 [default = MANUALPARAM_POINTSYNC];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ManualParam param() const;
  inline void set_param(::Cmd::ManualParam value);

  // optional uint32 point = 3 [default = 0];
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 3;
  inline ::google::protobuf::uint32 point() const;
  inline void set_point(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.PointSync)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_point();
  inline void clear_has_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 point_;
  friend void  protobuf_AddDesc_SceneManual_2eproto();
  friend void protobuf_AssignDesc_SceneManual_2eproto();
  friend void protobuf_ShutdownFile_SceneManual_2eproto();

  void InitAsDefaultInstance();
  static PointSync* default_instance_;
};
// -------------------------------------------------------------------

class ManualUpdate : public ::google::protobuf::Message {
 public:
  ManualUpdate();
  virtual ~ManualUpdate();

  ManualUpdate(const ManualUpdate& from);

  inline ManualUpdate& operator=(const ManualUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualUpdate& default_instance();

  void Swap(ManualUpdate* other);

  // implements Message ----------------------------------------------

  ManualUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ManualUpdate& from);
  void MergeFrom(const ManualUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_MANUAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ManualParam param = 2 [default = MANUALPARAM_UPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ManualParam param() const;
  inline void set_param(::Cmd::ManualParam value);

  // optional .Cmd.ManualItem update = 3;
  inline bool has_update() const;
  inline void clear_update();
  static const int kUpdateFieldNumber = 3;
  inline const ::Cmd::ManualItem& update() const;
  inline ::Cmd::ManualItem* mutable_update();
  inline ::Cmd::ManualItem* release_update();
  inline void set_allocated_update(::Cmd::ManualItem* update);

  // @@protoc_insertion_point(class_scope:Cmd.ManualUpdate)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_update();
  inline void clear_has_update();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::Cmd::ManualItem* update_;
  friend void  protobuf_AddDesc_SceneManual_2eproto();
  friend void protobuf_AssignDesc_SceneManual_2eproto();
  friend void protobuf_ShutdownFile_SceneManual_2eproto();

  void InitAsDefaultInstance();
  static ManualUpdate* default_instance_;
};
// -------------------------------------------------------------------

class GetAchieveReward : public ::google::protobuf::Message {
 public:
  GetAchieveReward();
  virtual ~GetAchieveReward();

  GetAchieveReward(const GetAchieveReward& from);

  inline GetAchieveReward& operator=(const GetAchieveReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAchieveReward& default_instance();

  void Swap(GetAchieveReward* other);

  // implements Message ----------------------------------------------

  GetAchieveReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAchieveReward& from);
  void MergeFrom(const GetAchieveReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_MANUAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ManualParam param = 2 [default = MANUALPARAM_GETREWARD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ManualParam param() const;
  inline void set_param(::Cmd::ManualParam value);

  // optional uint32 id = 3 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GetAchieveReward)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_SceneManual_2eproto();
  friend void protobuf_AssignDesc_SceneManual_2eproto();
  friend void protobuf_ShutdownFile_SceneManual_2eproto();

  void InitAsDefaultInstance();
  static GetAchieveReward* default_instance_;
};
// -------------------------------------------------------------------

class Unlock : public ::google::protobuf::Message {
 public:
  Unlock();
  virtual ~Unlock();

  Unlock(const Unlock& from);

  inline Unlock& operator=(const Unlock& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Unlock& default_instance();

  void Swap(Unlock* other);

  // implements Message ----------------------------------------------

  Unlock* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Unlock& from);
  void MergeFrom(const Unlock& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_MANUAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ManualParam param = 2 [default = MANUALPARAM_UNLOCK];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ManualParam param() const;
  inline void set_param(::Cmd::ManualParam value);

  // optional .Cmd.EManualType type = 3 [default = EMANUALTYPE_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::Cmd::EManualType type() const;
  inline void set_type(::Cmd::EManualType value);

  // optional uint32 id = 4 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 4;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.Unlock)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  int type_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_SceneManual_2eproto();
  friend void protobuf_AssignDesc_SceneManual_2eproto();
  friend void protobuf_ShutdownFile_SceneManual_2eproto();

  void InitAsDefaultInstance();
  static Unlock* default_instance_;
};
// -------------------------------------------------------------------

class SkillPointSync : public ::google::protobuf::Message {
 public:
  SkillPointSync();
  virtual ~SkillPointSync();

  SkillPointSync(const SkillPointSync& from);

  inline SkillPointSync& operator=(const SkillPointSync& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillPointSync& default_instance();

  void Swap(SkillPointSync* other);

  // implements Message ----------------------------------------------

  SkillPointSync* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillPointSync& from);
  void MergeFrom(const SkillPointSync& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_MANUAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ManualParam param = 2 [default = MANUALPARAM_SKILLPOINTSYNC];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ManualParam param() const;
  inline void set_param(::Cmd::ManualParam value);

  // optional uint32 skillpoint = 3 [default = 0];
  inline bool has_skillpoint() const;
  inline void clear_skillpoint();
  static const int kSkillpointFieldNumber = 3;
  inline ::google::protobuf::uint32 skillpoint() const;
  inline void set_skillpoint(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.SkillPointSync)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_skillpoint();
  inline void clear_has_skillpoint();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 skillpoint_;
  friend void  protobuf_AddDesc_SceneManual_2eproto();
  friend void protobuf_AssignDesc_SceneManual_2eproto();
  friend void protobuf_ShutdownFile_SceneManual_2eproto();

  void InitAsDefaultInstance();
  static SkillPointSync* default_instance_;
};
// -------------------------------------------------------------------

class LevelSync : public ::google::protobuf::Message {
 public:
  LevelSync();
  virtual ~LevelSync();

  LevelSync(const LevelSync& from);

  inline LevelSync& operator=(const LevelSync& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LevelSync& default_instance();

  void Swap(LevelSync* other);

  // implements Message ----------------------------------------------

  LevelSync* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LevelSync& from);
  void MergeFrom(const LevelSync& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_MANUAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ManualParam param = 2 [default = MANUALPARAM_LEVELSYNC];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ManualParam param() const;
  inline void set_param(::Cmd::ManualParam value);

  // optional uint32 level = 3 [default = 0];
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.LevelSync)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_SceneManual_2eproto();
  friend void protobuf_AssignDesc_SceneManual_2eproto();
  friend void protobuf_ShutdownFile_SceneManual_2eproto();

  void InitAsDefaultInstance();
  static LevelSync* default_instance_;
};
// -------------------------------------------------------------------

class GetQuestReward : public ::google::protobuf::Message {
 public:
  GetQuestReward();
  virtual ~GetQuestReward();

  GetQuestReward(const GetQuestReward& from);

  inline GetQuestReward& operator=(const GetQuestReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetQuestReward& default_instance();

  void Swap(GetQuestReward* other);

  // implements Message ----------------------------------------------

  GetQuestReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetQuestReward& from);
  void MergeFrom(const GetQuestReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_MANUAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ManualParam param = 2 [default = MANUALPARAM_GETQUESTREWARD];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ManualParam param() const;
  inline void set_param(::Cmd::ManualParam value);

  // optional uint32 appendid = 3 [default = 0];
  inline bool has_appendid() const;
  inline void clear_appendid();
  static const int kAppendidFieldNumber = 3;
  inline ::google::protobuf::uint32 appendid() const;
  inline void set_appendid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GetQuestReward)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_appendid();
  inline void clear_has_appendid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint32 appendid_;
  friend void  protobuf_AddDesc_SceneManual_2eproto();
  friend void protobuf_AssignDesc_SceneManual_2eproto();
  friend void protobuf_ShutdownFile_SceneManual_2eproto();

  void InitAsDefaultInstance();
  static GetQuestReward* default_instance_;
};
// -------------------------------------------------------------------

class StoreManualCmd : public ::google::protobuf::Message {
 public:
  StoreManualCmd();
  virtual ~StoreManualCmd();

  StoreManualCmd(const StoreManualCmd& from);

  inline StoreManualCmd& operator=(const StoreManualCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StoreManualCmd& default_instance();

  void Swap(StoreManualCmd* other);

  // implements Message ----------------------------------------------

  StoreManualCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StoreManualCmd& from);
  void MergeFrom(const StoreManualCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_MANUAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ManualParam param = 2 [default = MANUALPARAM_STOREITEM];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ManualParam param() const;
  inline void set_param(::Cmd::ManualParam value);

  // optional .Cmd.EManualType type = 3 [default = EMANUALTYPE_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::Cmd::EManualType type() const;
  inline void set_type(::Cmd::EManualType value);

  // optional string guid = 4;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 4;
  inline const ::std::string& guid() const;
  inline void set_guid(const ::std::string& value);
  inline void set_guid(const char* value);
  inline void set_guid(const char* value, size_t size);
  inline ::std::string* mutable_guid();
  inline ::std::string* release_guid();
  inline void set_allocated_guid(::std::string* guid);

  // @@protoc_insertion_point(class_scope:Cmd.StoreManualCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_guid();
  inline void clear_has_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::std::string* guid_;
  int type_;
  friend void  protobuf_AddDesc_SceneManual_2eproto();
  friend void protobuf_AssignDesc_SceneManual_2eproto();
  friend void protobuf_ShutdownFile_SceneManual_2eproto();

  void InitAsDefaultInstance();
  static StoreManualCmd* default_instance_;
};
// -------------------------------------------------------------------

class GetManualCmd : public ::google::protobuf::Message {
 public:
  GetManualCmd();
  virtual ~GetManualCmd();

  GetManualCmd(const GetManualCmd& from);

  inline GetManualCmd& operator=(const GetManualCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetManualCmd& default_instance();

  void Swap(GetManualCmd* other);

  // implements Message ----------------------------------------------

  GetManualCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetManualCmd& from);
  void MergeFrom(const GetManualCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_MANUAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ManualParam param = 2 [default = MANUALPARAM_GETITEM];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ManualParam param() const;
  inline void set_param(::Cmd::ManualParam value);

  // optional .Cmd.EManualType type = 3 [default = EMANUALTYPE_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::Cmd::EManualType type() const;
  inline void set_type(::Cmd::EManualType value);

  // optional uint32 itemid = 4 [default = 0];
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 4;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GetManualCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_itemid();
  inline void clear_has_itemid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  int type_;
  ::google::protobuf::uint32 itemid_;
  friend void  protobuf_AddDesc_SceneManual_2eproto();
  friend void protobuf_AssignDesc_SceneManual_2eproto();
  friend void protobuf_ShutdownFile_SceneManual_2eproto();

  void InitAsDefaultInstance();
  static GetManualCmd* default_instance_;
};
// -------------------------------------------------------------------

class GroupActionManualCmd : public ::google::protobuf::Message {
 public:
  GroupActionManualCmd();
  virtual ~GroupActionManualCmd();

  GroupActionManualCmd(const GroupActionManualCmd& from);

  inline GroupActionManualCmd& operator=(const GroupActionManualCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupActionManualCmd& default_instance();

  void Swap(GroupActionManualCmd* other);

  // implements Message ----------------------------------------------

  GroupActionManualCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GroupActionManualCmd& from);
  void MergeFrom(const GroupActionManualCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_MANUAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ManualParam param = 2 [default = MANUALPARAM_GROUPACTION];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ManualParam param() const;
  inline void set_param(::Cmd::ManualParam value);

  // optional .Cmd.EGroupAction action = 3 [default = EGROUPACTION_MIN];
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 3;
  inline ::Cmd::EGroupAction action() const;
  inline void set_action(::Cmd::EGroupAction value);

  // optional uint32 group_id = 4 [default = 0];
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 4;
  inline ::google::protobuf::uint32 group_id() const;
  inline void set_group_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.GroupActionManualCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_action();
  inline void clear_has_action();
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  int action_;
  ::google::protobuf::uint32 group_id_;
  friend void  protobuf_AddDesc_SceneManual_2eproto();
  friend void protobuf_AssignDesc_SceneManual_2eproto();
  friend void protobuf_ShutdownFile_SceneManual_2eproto();

  void InitAsDefaultInstance();
  static GroupActionManualCmd* default_instance_;
};
// -------------------------------------------------------------------

class UnsolvedPhoto : public ::google::protobuf::Message {
 public:
  UnsolvedPhoto();
  virtual ~UnsolvedPhoto();

  UnsolvedPhoto(const UnsolvedPhoto& from);

  inline UnsolvedPhoto& operator=(const UnsolvedPhoto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnsolvedPhoto& default_instance();

  void Swap(UnsolvedPhoto* other);

  // implements Message ----------------------------------------------

  UnsolvedPhoto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnsolvedPhoto& from);
  void MergeFrom(const UnsolvedPhoto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 time = 2 [default = 0];
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // optional uint32 anglez = 3 [default = 0];
  inline bool has_anglez() const;
  inline void clear_anglez();
  static const int kAnglezFieldNumber = 3;
  inline ::google::protobuf::uint32 anglez() const;
  inline void set_anglez(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.UnsolvedPhoto)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_anglez();
  inline void clear_has_anglez();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 anglez_;
  friend void  protobuf_AddDesc_SceneManual_2eproto();
  friend void protobuf_AssignDesc_SceneManual_2eproto();
  friend void protobuf_ShutdownFile_SceneManual_2eproto();

  void InitAsDefaultInstance();
  static UnsolvedPhoto* default_instance_;
};
// -------------------------------------------------------------------

class UnsolvedUserPhoto : public ::google::protobuf::Message {
 public:
  UnsolvedUserPhoto();
  virtual ~UnsolvedUserPhoto();

  UnsolvedUserPhoto(const UnsolvedUserPhoto& from);

  inline UnsolvedUserPhoto& operator=(const UnsolvedUserPhoto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnsolvedUserPhoto& default_instance();

  void Swap(UnsolvedUserPhoto* other);

  // implements Message ----------------------------------------------

  UnsolvedUserPhoto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnsolvedUserPhoto& from);
  void MergeFrom(const UnsolvedUserPhoto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charid = 1 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // repeated .Cmd.UnsolvedPhoto photos = 3;
  inline int photos_size() const;
  inline void clear_photos();
  static const int kPhotosFieldNumber = 3;
  inline const ::Cmd::UnsolvedPhoto& photos(int index) const;
  inline ::Cmd::UnsolvedPhoto* mutable_photos(int index);
  inline ::Cmd::UnsolvedPhoto* add_photos();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UnsolvedPhoto >&
      photos() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::UnsolvedPhoto >*
      mutable_photos();

  // @@protoc_insertion_point(class_scope:Cmd.UnsolvedUserPhoto)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::UnsolvedPhoto > photos_;
  friend void  protobuf_AddDesc_SceneManual_2eproto();
  friend void protobuf_AssignDesc_SceneManual_2eproto();
  friend void protobuf_ShutdownFile_SceneManual_2eproto();

  void InitAsDefaultInstance();
  static UnsolvedUserPhoto* default_instance_;
};
// -------------------------------------------------------------------

class QueryUnsolvedPhotoManualCmd : public ::google::protobuf::Message {
 public:
  QueryUnsolvedPhotoManualCmd();
  virtual ~QueryUnsolvedPhotoManualCmd();

  QueryUnsolvedPhotoManualCmd(const QueryUnsolvedPhotoManualCmd& from);

  inline QueryUnsolvedPhotoManualCmd& operator=(const QueryUnsolvedPhotoManualCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryUnsolvedPhotoManualCmd& default_instance();

  void Swap(QueryUnsolvedPhotoManualCmd* other);

  // implements Message ----------------------------------------------

  QueryUnsolvedPhotoManualCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryUnsolvedPhotoManualCmd& from);
  void MergeFrom(const QueryUnsolvedPhotoManualCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_MANUAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ManualParam param = 2 [default = MANUALPARAM_QUERY_UNSOLVED_PHOTO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ManualParam param() const;
  inline void set_param(::Cmd::ManualParam value);

  // repeated .Cmd.UnsolvedUserPhoto photos = 3;
  inline int photos_size() const;
  inline void clear_photos();
  static const int kPhotosFieldNumber = 3;
  inline const ::Cmd::UnsolvedUserPhoto& photos(int index) const;
  inline ::Cmd::UnsolvedUserPhoto* mutable_photos(int index);
  inline ::Cmd::UnsolvedUserPhoto* add_photos();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UnsolvedUserPhoto >&
      photos() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::UnsolvedUserPhoto >*
      mutable_photos();

  // optional uint32 time = 4 [default = 0];
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.QueryUnsolvedPhotoManualCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::UnsolvedUserPhoto > photos_;
  ::google::protobuf::uint32 time_;
  friend void  protobuf_AddDesc_SceneManual_2eproto();
  friend void protobuf_AssignDesc_SceneManual_2eproto();
  friend void protobuf_ShutdownFile_SceneManual_2eproto();

  void InitAsDefaultInstance();
  static QueryUnsolvedPhotoManualCmd* default_instance_;
};
// -------------------------------------------------------------------

class UpdateSolvedPhotoManualCmd : public ::google::protobuf::Message {
 public:
  UpdateSolvedPhotoManualCmd();
  virtual ~UpdateSolvedPhotoManualCmd();

  UpdateSolvedPhotoManualCmd(const UpdateSolvedPhotoManualCmd& from);

  inline UpdateSolvedPhotoManualCmd& operator=(const UpdateSolvedPhotoManualCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateSolvedPhotoManualCmd& default_instance();

  void Swap(UpdateSolvedPhotoManualCmd* other);

  // implements Message ----------------------------------------------

  UpdateSolvedPhotoManualCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateSolvedPhotoManualCmd& from);
  void MergeFrom(const UpdateSolvedPhotoManualCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SCENE_USER_MANUAL_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.ManualParam param = 2 [default = MANUALPARAM_UPDATE_UNSOLVED_PHOTO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::ManualParam param() const;
  inline void set_param(::Cmd::ManualParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 sceneryid = 4 [default = 0];
  inline bool has_sceneryid() const;
  inline void clear_sceneryid();
  static const int kSceneryidFieldNumber = 4;
  inline ::google::protobuf::uint32 sceneryid() const;
  inline void set_sceneryid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.UpdateSolvedPhotoManualCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_sceneryid();
  inline void clear_has_sceneryid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 sceneryid_;
  friend void  protobuf_AddDesc_SceneManual_2eproto();
  friend void protobuf_AssignDesc_SceneManual_2eproto();
  friend void protobuf_ShutdownFile_SceneManual_2eproto();

  void InitAsDefaultInstance();
  static UpdateSolvedPhotoManualCmd* default_instance_;
};
// ===================================================================


// ===================================================================

// ManualQuest

// optional uint32 id = 1 [default = 0];
inline bool ManualQuest::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManualQuest::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManualQuest::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManualQuest::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ManualQuest::id() const {
  // @@protoc_insertion_point(field_get:Cmd.ManualQuest.id)
  return id_;
}
inline void ManualQuest::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ManualQuest.id)
}

// optional uint32 process = 2 [default = 0];
inline bool ManualQuest::has_process() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManualQuest::set_has_process() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManualQuest::clear_has_process() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManualQuest::clear_process() {
  process_ = 0u;
  clear_has_process();
}
inline ::google::protobuf::uint32 ManualQuest::process() const {
  // @@protoc_insertion_point(field_get:Cmd.ManualQuest.process)
  return process_;
}
inline void ManualQuest::set_process(::google::protobuf::uint32 value) {
  set_has_process();
  process_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ManualQuest.process)
}

// optional bool finish = 3 [default = false];
inline bool ManualQuest::has_finish() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ManualQuest::set_has_finish() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ManualQuest::clear_has_finish() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ManualQuest::clear_finish() {
  finish_ = false;
  clear_has_finish();
}
inline bool ManualQuest::finish() const {
  // @@protoc_insertion_point(field_get:Cmd.ManualQuest.finish)
  return finish_;
}
inline void ManualQuest::set_finish(bool value) {
  set_has_finish();
  finish_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ManualQuest.finish)
}

// optional bool rewardget = 4 [default = false];
inline bool ManualQuest::has_rewardget() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ManualQuest::set_has_rewardget() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ManualQuest::clear_has_rewardget() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ManualQuest::clear_rewardget() {
  rewardget_ = false;
  clear_has_rewardget();
}
inline bool ManualQuest::rewardget() const {
  // @@protoc_insertion_point(field_get:Cmd.ManualQuest.rewardget)
  return rewardget_;
}
inline void ManualQuest::set_rewardget(bool value) {
  set_has_rewardget();
  rewardget_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ManualQuest.rewardget)
}

// -------------------------------------------------------------------

// ManualSubItem

// optional .Cmd.EManualStatus status = 1 [default = EMANUALSTATUS_MIN];
inline bool ManualSubItem::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManualSubItem::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManualSubItem::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManualSubItem::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::Cmd::EManualStatus ManualSubItem::status() const {
  // @@protoc_insertion_point(field_get:Cmd.ManualSubItem.status)
  return static_cast< ::Cmd::EManualStatus >(status_);
}
inline void ManualSubItem::set_status(::Cmd::EManualStatus value) {
  assert(::Cmd::EManualStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ManualSubItem.status)
}

// optional uint32 id = 2 [default = 0];
inline bool ManualSubItem::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManualSubItem::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManualSubItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManualSubItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ManualSubItem::id() const {
  // @@protoc_insertion_point(field_get:Cmd.ManualSubItem.id)
  return id_;
}
inline void ManualSubItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ManualSubItem.id)
}

// optional bool unlock = 3 [default = false];
inline bool ManualSubItem::has_unlock() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ManualSubItem::set_has_unlock() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ManualSubItem::clear_has_unlock() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ManualSubItem::clear_unlock() {
  unlock_ = false;
  clear_has_unlock();
}
inline bool ManualSubItem::unlock() const {
  // @@protoc_insertion_point(field_get:Cmd.ManualSubItem.unlock)
  return unlock_;
}
inline void ManualSubItem::set_unlock(bool value) {
  set_has_unlock();
  unlock_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ManualSubItem.unlock)
}

// repeated .Cmd.ManualQuest quests = 4;
inline int ManualSubItem::quests_size() const {
  return quests_.size();
}
inline void ManualSubItem::clear_quests() {
  quests_.Clear();
}
inline const ::Cmd::ManualQuest& ManualSubItem::quests(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.ManualSubItem.quests)
  return quests_.Get(index);
}
inline ::Cmd::ManualQuest* ManualSubItem::mutable_quests(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.ManualSubItem.quests)
  return quests_.Mutable(index);
}
inline ::Cmd::ManualQuest* ManualSubItem::add_quests() {
  // @@protoc_insertion_point(field_add:Cmd.ManualSubItem.quests)
  return quests_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ManualQuest >&
ManualSubItem::quests() const {
  // @@protoc_insertion_point(field_list:Cmd.ManualSubItem.quests)
  return quests_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ManualQuest >*
ManualSubItem::mutable_quests() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.ManualSubItem.quests)
  return &quests_;
}

// optional bool store = 5;
inline bool ManualSubItem::has_store() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ManualSubItem::set_has_store() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ManualSubItem::clear_has_store() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ManualSubItem::clear_store() {
  store_ = false;
  clear_has_store();
}
inline bool ManualSubItem::store() const {
  // @@protoc_insertion_point(field_get:Cmd.ManualSubItem.store)
  return store_;
}
inline void ManualSubItem::set_store(bool value) {
  set_has_store();
  store_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ManualSubItem.store)
}

// repeated uint32 params = 6;
inline int ManualSubItem::params_size() const {
  return params_.size();
}
inline void ManualSubItem::clear_params() {
  params_.Clear();
}
inline ::google::protobuf::uint32 ManualSubItem::params(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.ManualSubItem.params)
  return params_.Get(index);
}
inline void ManualSubItem::set_params(int index, ::google::protobuf::uint32 value) {
  params_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.ManualSubItem.params)
}
inline void ManualSubItem::add_params(::google::protobuf::uint32 value) {
  params_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.ManualSubItem.params)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ManualSubItem::params() const {
  // @@protoc_insertion_point(field_list:Cmd.ManualSubItem.params)
  return params_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ManualSubItem::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.ManualSubItem.params)
  return &params_;
}

// repeated string data_params = 7;
inline int ManualSubItem::data_params_size() const {
  return data_params_.size();
}
inline void ManualSubItem::clear_data_params() {
  data_params_.Clear();
}
inline const ::std::string& ManualSubItem::data_params(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.ManualSubItem.data_params)
  return data_params_.Get(index);
}
inline ::std::string* ManualSubItem::mutable_data_params(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.ManualSubItem.data_params)
  return data_params_.Mutable(index);
}
inline void ManualSubItem::set_data_params(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Cmd.ManualSubItem.data_params)
  data_params_.Mutable(index)->assign(value);
}
inline void ManualSubItem::set_data_params(int index, const char* value) {
  data_params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.ManualSubItem.data_params)
}
inline void ManualSubItem::set_data_params(int index, const char* value, size_t size) {
  data_params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.ManualSubItem.data_params)
}
inline ::std::string* ManualSubItem::add_data_params() {
  return data_params_.Add();
}
inline void ManualSubItem::add_data_params(const ::std::string& value) {
  data_params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Cmd.ManualSubItem.data_params)
}
inline void ManualSubItem::add_data_params(const char* value) {
  data_params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Cmd.ManualSubItem.data_params)
}
inline void ManualSubItem::add_data_params(const char* value, size_t size) {
  data_params_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Cmd.ManualSubItem.data_params)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ManualSubItem::data_params() const {
  // @@protoc_insertion_point(field_list:Cmd.ManualSubItem.data_params)
  return data_params_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ManualSubItem::mutable_data_params() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.ManualSubItem.data_params)
  return &data_params_;
}

// optional uint32 storeid = 8 [default = 0];
inline bool ManualSubItem::has_storeid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ManualSubItem::set_has_storeid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ManualSubItem::clear_has_storeid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ManualSubItem::clear_storeid() {
  storeid_ = 0u;
  clear_has_storeid();
}
inline ::google::protobuf::uint32 ManualSubItem::storeid() const {
  // @@protoc_insertion_point(field_get:Cmd.ManualSubItem.storeid)
  return storeid_;
}
inline void ManualSubItem::set_storeid(::google::protobuf::uint32 value) {
  set_has_storeid();
  storeid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ManualSubItem.storeid)
}

// optional .Cmd.ItemData item = 9;
inline bool ManualSubItem::has_item() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ManualSubItem::set_has_item() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ManualSubItem::clear_has_item() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ManualSubItem::clear_item() {
  if (item_ != NULL) item_->::Cmd::ItemData::Clear();
  clear_has_item();
}
inline const ::Cmd::ItemData& ManualSubItem::item() const {
  // @@protoc_insertion_point(field_get:Cmd.ManualSubItem.item)
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::Cmd::ItemData* ManualSubItem::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::Cmd::ItemData;
  // @@protoc_insertion_point(field_mutable:Cmd.ManualSubItem.item)
  return item_;
}
inline ::Cmd::ItemData* ManualSubItem::release_item() {
  clear_has_item();
  ::Cmd::ItemData* temp = item_;
  item_ = NULL;
  return temp;
}
inline void ManualSubItem::set_allocated_item(::Cmd::ItemData* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ManualSubItem.item)
}

// -------------------------------------------------------------------

// ManualItem

// optional .Cmd.EManualType type = 1 [default = EMANUALTYPE_MIN];
inline bool ManualItem::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManualItem::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManualItem::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManualItem::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::EManualType ManualItem::type() const {
  // @@protoc_insertion_point(field_get:Cmd.ManualItem.type)
  return static_cast< ::Cmd::EManualType >(type_);
}
inline void ManualItem::set_type(::Cmd::EManualType value) {
  assert(::Cmd::EManualType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ManualItem.type)
}

// optional uint32 version = 2 [default = 0];
inline bool ManualItem::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManualItem::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManualItem::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManualItem::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 ManualItem::version() const {
  // @@protoc_insertion_point(field_get:Cmd.ManualItem.version)
  return version_;
}
inline void ManualItem::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ManualItem.version)
}

// repeated .Cmd.ManualSubItem items = 3;
inline int ManualItem::items_size() const {
  return items_.size();
}
inline void ManualItem::clear_items() {
  items_.Clear();
}
inline const ::Cmd::ManualSubItem& ManualItem::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.ManualItem.items)
  return items_.Get(index);
}
inline ::Cmd::ManualSubItem* ManualItem::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.ManualItem.items)
  return items_.Mutable(index);
}
inline ::Cmd::ManualSubItem* ManualItem::add_items() {
  // @@protoc_insertion_point(field_add:Cmd.ManualItem.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ManualSubItem >&
ManualItem::items() const {
  // @@protoc_insertion_point(field_list:Cmd.ManualItem.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ManualSubItem >*
ManualItem::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.ManualItem.items)
  return &items_;
}

// repeated .Cmd.ManualQuest quests = 4;
inline int ManualItem::quests_size() const {
  return quests_.size();
}
inline void ManualItem::clear_quests() {
  quests_.Clear();
}
inline const ::Cmd::ManualQuest& ManualItem::quests(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.ManualItem.quests)
  return quests_.Get(index);
}
inline ::Cmd::ManualQuest* ManualItem::mutable_quests(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.ManualItem.quests)
  return quests_.Mutable(index);
}
inline ::Cmd::ManualQuest* ManualItem::add_quests() {
  // @@protoc_insertion_point(field_add:Cmd.ManualItem.quests)
  return quests_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ManualQuest >&
ManualItem::quests() const {
  // @@protoc_insertion_point(field_list:Cmd.ManualItem.quests)
  return quests_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ManualQuest >*
ManualItem::mutable_quests() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.ManualItem.quests)
  return &quests_;
}

// -------------------------------------------------------------------

// ManualGroup

// optional uint32 id = 1 [default = 0];
inline bool ManualGroup::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManualGroup::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManualGroup::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManualGroup::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ManualGroup::id() const {
  // @@protoc_insertion_point(field_get:Cmd.ManualGroup.id)
  return id_;
}
inline void ManualGroup::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ManualGroup.id)
}

// -------------------------------------------------------------------

// ManualData

// optional uint32 version = 6 [default = 0];
inline bool ManualData::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManualData::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManualData::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManualData::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 ManualData::version() const {
  // @@protoc_insertion_point(field_get:Cmd.ManualData.version)
  return version_;
}
inline void ManualData::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ManualData.version)
}

// optional uint32 point = 1 [default = 0];
inline bool ManualData::has_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManualData::set_has_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManualData::clear_has_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManualData::clear_point() {
  point_ = 0u;
  clear_has_point();
}
inline ::google::protobuf::uint32 ManualData::point() const {
  // @@protoc_insertion_point(field_get:Cmd.ManualData.point)
  return point_;
}
inline void ManualData::set_point(::google::protobuf::uint32 value) {
  set_has_point();
  point_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ManualData.point)
}

// optional uint32 level = 2 [default = 0];
inline bool ManualData::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ManualData::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ManualData::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ManualData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 ManualData::level() const {
  // @@protoc_insertion_point(field_get:Cmd.ManualData.level)
  return level_;
}
inline void ManualData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ManualData.level)
}

// optional uint32 skillpoint = 4 [default = 0];
inline bool ManualData::has_skillpoint() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ManualData::set_has_skillpoint() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ManualData::clear_has_skillpoint() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ManualData::clear_skillpoint() {
  skillpoint_ = 0u;
  clear_has_skillpoint();
}
inline ::google::protobuf::uint32 ManualData::skillpoint() const {
  // @@protoc_insertion_point(field_get:Cmd.ManualData.skillpoint)
  return skillpoint_;
}
inline void ManualData::set_skillpoint(::google::protobuf::uint32 value) {
  set_has_skillpoint();
  skillpoint_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ManualData.skillpoint)
}

// optional uint32 exchange_time = 8 [default = 0];
inline bool ManualData::has_exchange_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ManualData::set_has_exchange_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ManualData::clear_has_exchange_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ManualData::clear_exchange_time() {
  exchange_time_ = 0u;
  clear_has_exchange_time();
}
inline ::google::protobuf::uint32 ManualData::exchange_time() const {
  // @@protoc_insertion_point(field_get:Cmd.ManualData.exchange_time)
  return exchange_time_;
}
inline void ManualData::set_exchange_time(::google::protobuf::uint32 value) {
  set_has_exchange_time();
  exchange_time_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ManualData.exchange_time)
}

// repeated .Cmd.ManualItem items = 3;
inline int ManualData::items_size() const {
  return items_.size();
}
inline void ManualData::clear_items() {
  items_.Clear();
}
inline const ::Cmd::ManualItem& ManualData::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.ManualData.items)
  return items_.Get(index);
}
inline ::Cmd::ManualItem* ManualData::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.ManualData.items)
  return items_.Mutable(index);
}
inline ::Cmd::ManualItem* ManualData::add_items() {
  // @@protoc_insertion_point(field_add:Cmd.ManualData.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ManualItem >&
ManualData::items() const {
  // @@protoc_insertion_point(field_list:Cmd.ManualData.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ManualItem >*
ManualData::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.ManualData.items)
  return &items_;
}

// repeated .Cmd.ManualGroup groups = 5;
inline int ManualData::groups_size() const {
  return groups_.size();
}
inline void ManualData::clear_groups() {
  groups_.Clear();
}
inline const ::Cmd::ManualGroup& ManualData::groups(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.ManualData.groups)
  return groups_.Get(index);
}
inline ::Cmd::ManualGroup* ManualData::mutable_groups(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.ManualData.groups)
  return groups_.Mutable(index);
}
inline ::Cmd::ManualGroup* ManualData::add_groups() {
  // @@protoc_insertion_point(field_add:Cmd.ManualData.groups)
  return groups_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ManualGroup >&
ManualData::groups() const {
  // @@protoc_insertion_point(field_list:Cmd.ManualData.groups)
  return groups_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ManualGroup >*
ManualData::mutable_groups() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.ManualData.groups)
  return &groups_;
}

// -------------------------------------------------------------------

// ManualVersion

// optional .Cmd.EManualType type = 1 [default = EMANUALTYPE_MIN];
inline bool ManualVersion::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManualVersion::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManualVersion::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManualVersion::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::EManualType ManualVersion::type() const {
  // @@protoc_insertion_point(field_get:Cmd.ManualVersion.type)
  return static_cast< ::Cmd::EManualType >(type_);
}
inline void ManualVersion::set_type(::Cmd::EManualType value) {
  assert(::Cmd::EManualType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ManualVersion.type)
}

// optional uint32 version = 2 [default = 0];
inline bool ManualVersion::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManualVersion::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManualVersion::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManualVersion::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 ManualVersion::version() const {
  // @@protoc_insertion_point(field_get:Cmd.ManualVersion.version)
  return version_;
}
inline void ManualVersion::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ManualVersion.version)
}

// -------------------------------------------------------------------

// QueryVersion

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_MANUAL_PROTOCMD];
inline bool QueryVersion::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryVersion::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryVersion::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryVersion::clear_cmd() {
  cmd_ = 23;
  clear_has_cmd();
}
inline ::Cmd::Command QueryVersion::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryVersion.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryVersion::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryVersion.cmd)
}

// optional .Cmd.ManualParam param = 2 [default = MANUALPARAM_QUERYVERSION];
inline bool QueryVersion::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryVersion::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryVersion::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryVersion::clear_param() {
  param_ = 1;
  clear_has_param();
}
inline ::Cmd::ManualParam QueryVersion::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryVersion.param)
  return static_cast< ::Cmd::ManualParam >(param_);
}
inline void QueryVersion::set_param(::Cmd::ManualParam value) {
  assert(::Cmd::ManualParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryVersion.param)
}

// repeated .Cmd.ManualVersion versions = 3;
inline int QueryVersion::versions_size() const {
  return versions_.size();
}
inline void QueryVersion::clear_versions() {
  versions_.Clear();
}
inline const ::Cmd::ManualVersion& QueryVersion::versions(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QueryVersion.versions)
  return versions_.Get(index);
}
inline ::Cmd::ManualVersion* QueryVersion::mutable_versions(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.QueryVersion.versions)
  return versions_.Mutable(index);
}
inline ::Cmd::ManualVersion* QueryVersion::add_versions() {
  // @@protoc_insertion_point(field_add:Cmd.QueryVersion.versions)
  return versions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ManualVersion >&
QueryVersion::versions() const {
  // @@protoc_insertion_point(field_list:Cmd.QueryVersion.versions)
  return versions_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ManualVersion >*
QueryVersion::mutable_versions() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QueryVersion.versions)
  return &versions_;
}

// -------------------------------------------------------------------

// QueryManualData

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_MANUAL_PROTOCMD];
inline bool QueryManualData::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryManualData::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryManualData::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryManualData::clear_cmd() {
  cmd_ = 23;
  clear_has_cmd();
}
inline ::Cmd::Command QueryManualData::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryManualData.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryManualData::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryManualData.cmd)
}

// optional .Cmd.ManualParam param = 2 [default = MANUALPARAM_QUERYDATA];
inline bool QueryManualData::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryManualData::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryManualData::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryManualData::clear_param() {
  param_ = 2;
  clear_has_param();
}
inline ::Cmd::ManualParam QueryManualData::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryManualData.param)
  return static_cast< ::Cmd::ManualParam >(param_);
}
inline void QueryManualData::set_param(::Cmd::ManualParam value) {
  assert(::Cmd::ManualParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryManualData.param)
}

// optional .Cmd.EManualType type = 3 [default = EMANUALTYPE_MIN];
inline bool QueryManualData::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryManualData::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryManualData::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryManualData::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::EManualType QueryManualData::type() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryManualData.type)
  return static_cast< ::Cmd::EManualType >(type_);
}
inline void QueryManualData::set_type(::Cmd::EManualType value) {
  assert(::Cmd::EManualType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryManualData.type)
}

// optional .Cmd.ManualItem item = 4;
inline bool QueryManualData::has_item() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryManualData::set_has_item() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryManualData::clear_has_item() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryManualData::clear_item() {
  if (item_ != NULL) item_->::Cmd::ManualItem::Clear();
  clear_has_item();
}
inline const ::Cmd::ManualItem& QueryManualData::item() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryManualData.item)
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::Cmd::ManualItem* QueryManualData::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::Cmd::ManualItem;
  // @@protoc_insertion_point(field_mutable:Cmd.QueryManualData.item)
  return item_;
}
inline ::Cmd::ManualItem* QueryManualData::release_item() {
  clear_has_item();
  ::Cmd::ManualItem* temp = item_;
  item_ = NULL;
  return temp;
}
inline void QueryManualData::set_allocated_item(::Cmd::ManualItem* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.QueryManualData.item)
}

// -------------------------------------------------------------------

// PointSync

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_MANUAL_PROTOCMD];
inline bool PointSync::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PointSync::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PointSync::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PointSync::clear_cmd() {
  cmd_ = 23;
  clear_has_cmd();
}
inline ::Cmd::Command PointSync::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.PointSync.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void PointSync::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PointSync.cmd)
}

// optional .Cmd.ManualParam param = 2 [default = MANUALPARAM_POINTSYNC];
inline bool PointSync::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PointSync::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PointSync::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PointSync::clear_param() {
  param_ = 3;
  clear_has_param();
}
inline ::Cmd::ManualParam PointSync::param() const {
  // @@protoc_insertion_point(field_get:Cmd.PointSync.param)
  return static_cast< ::Cmd::ManualParam >(param_);
}
inline void PointSync::set_param(::Cmd::ManualParam value) {
  assert(::Cmd::ManualParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PointSync.param)
}

// optional uint32 point = 3 [default = 0];
inline bool PointSync::has_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PointSync::set_has_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PointSync::clear_has_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PointSync::clear_point() {
  point_ = 0u;
  clear_has_point();
}
inline ::google::protobuf::uint32 PointSync::point() const {
  // @@protoc_insertion_point(field_get:Cmd.PointSync.point)
  return point_;
}
inline void PointSync::set_point(::google::protobuf::uint32 value) {
  set_has_point();
  point_ = value;
  // @@protoc_insertion_point(field_set:Cmd.PointSync.point)
}

// -------------------------------------------------------------------

// ManualUpdate

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_MANUAL_PROTOCMD];
inline bool ManualUpdate::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManualUpdate::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManualUpdate::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManualUpdate::clear_cmd() {
  cmd_ = 23;
  clear_has_cmd();
}
inline ::Cmd::Command ManualUpdate::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.ManualUpdate.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void ManualUpdate::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ManualUpdate.cmd)
}

// optional .Cmd.ManualParam param = 2 [default = MANUALPARAM_UPDATE];
inline bool ManualUpdate::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManualUpdate::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManualUpdate::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManualUpdate::clear_param() {
  param_ = 4;
  clear_has_param();
}
inline ::Cmd::ManualParam ManualUpdate::param() const {
  // @@protoc_insertion_point(field_get:Cmd.ManualUpdate.param)
  return static_cast< ::Cmd::ManualParam >(param_);
}
inline void ManualUpdate::set_param(::Cmd::ManualParam value) {
  assert(::Cmd::ManualParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.ManualUpdate.param)
}

// optional .Cmd.ManualItem update = 3;
inline bool ManualUpdate::has_update() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ManualUpdate::set_has_update() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ManualUpdate::clear_has_update() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ManualUpdate::clear_update() {
  if (update_ != NULL) update_->::Cmd::ManualItem::Clear();
  clear_has_update();
}
inline const ::Cmd::ManualItem& ManualUpdate::update() const {
  // @@protoc_insertion_point(field_get:Cmd.ManualUpdate.update)
  return update_ != NULL ? *update_ : *default_instance_->update_;
}
inline ::Cmd::ManualItem* ManualUpdate::mutable_update() {
  set_has_update();
  if (update_ == NULL) update_ = new ::Cmd::ManualItem;
  // @@protoc_insertion_point(field_mutable:Cmd.ManualUpdate.update)
  return update_;
}
inline ::Cmd::ManualItem* ManualUpdate::release_update() {
  clear_has_update();
  ::Cmd::ManualItem* temp = update_;
  update_ = NULL;
  return temp;
}
inline void ManualUpdate::set_allocated_update(::Cmd::ManualItem* update) {
  delete update_;
  update_ = update;
  if (update) {
    set_has_update();
  } else {
    clear_has_update();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.ManualUpdate.update)
}

// -------------------------------------------------------------------

// GetAchieveReward

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_MANUAL_PROTOCMD];
inline bool GetAchieveReward::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAchieveReward::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAchieveReward::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAchieveReward::clear_cmd() {
  cmd_ = 23;
  clear_has_cmd();
}
inline ::Cmd::Command GetAchieveReward::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GetAchieveReward.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GetAchieveReward::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetAchieveReward.cmd)
}

// optional .Cmd.ManualParam param = 2 [default = MANUALPARAM_GETREWARD];
inline bool GetAchieveReward::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetAchieveReward::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetAchieveReward::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetAchieveReward::clear_param() {
  param_ = 5;
  clear_has_param();
}
inline ::Cmd::ManualParam GetAchieveReward::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GetAchieveReward.param)
  return static_cast< ::Cmd::ManualParam >(param_);
}
inline void GetAchieveReward::set_param(::Cmd::ManualParam value) {
  assert(::Cmd::ManualParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetAchieveReward.param)
}

// optional uint32 id = 3 [default = 0];
inline bool GetAchieveReward::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetAchieveReward::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetAchieveReward::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetAchieveReward::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GetAchieveReward::id() const {
  // @@protoc_insertion_point(field_get:Cmd.GetAchieveReward.id)
  return id_;
}
inline void GetAchieveReward::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetAchieveReward.id)
}

// -------------------------------------------------------------------

// Unlock

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_MANUAL_PROTOCMD];
inline bool Unlock::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Unlock::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Unlock::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Unlock::clear_cmd() {
  cmd_ = 23;
  clear_has_cmd();
}
inline ::Cmd::Command Unlock::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.Unlock.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void Unlock::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.Unlock.cmd)
}

// optional .Cmd.ManualParam param = 2 [default = MANUALPARAM_UNLOCK];
inline bool Unlock::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Unlock::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Unlock::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Unlock::clear_param() {
  param_ = 6;
  clear_has_param();
}
inline ::Cmd::ManualParam Unlock::param() const {
  // @@protoc_insertion_point(field_get:Cmd.Unlock.param)
  return static_cast< ::Cmd::ManualParam >(param_);
}
inline void Unlock::set_param(::Cmd::ManualParam value) {
  assert(::Cmd::ManualParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.Unlock.param)
}

// optional .Cmd.EManualType type = 3 [default = EMANUALTYPE_MIN];
inline bool Unlock::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Unlock::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Unlock::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Unlock::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::EManualType Unlock::type() const {
  // @@protoc_insertion_point(field_get:Cmd.Unlock.type)
  return static_cast< ::Cmd::EManualType >(type_);
}
inline void Unlock::set_type(::Cmd::EManualType value) {
  assert(::Cmd::EManualType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.Unlock.type)
}

// optional uint32 id = 4 [default = 0];
inline bool Unlock::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Unlock::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Unlock::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Unlock::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Unlock::id() const {
  // @@protoc_insertion_point(field_get:Cmd.Unlock.id)
  return id_;
}
inline void Unlock::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.Unlock.id)
}

// -------------------------------------------------------------------

// SkillPointSync

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_MANUAL_PROTOCMD];
inline bool SkillPointSync::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillPointSync::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillPointSync::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillPointSync::clear_cmd() {
  cmd_ = 23;
  clear_has_cmd();
}
inline ::Cmd::Command SkillPointSync::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillPointSync.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SkillPointSync::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillPointSync.cmd)
}

// optional .Cmd.ManualParam param = 2 [default = MANUALPARAM_SKILLPOINTSYNC];
inline bool SkillPointSync::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillPointSync::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillPointSync::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillPointSync::clear_param() {
  param_ = 7;
  clear_has_param();
}
inline ::Cmd::ManualParam SkillPointSync::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillPointSync.param)
  return static_cast< ::Cmd::ManualParam >(param_);
}
inline void SkillPointSync::set_param(::Cmd::ManualParam value) {
  assert(::Cmd::ManualParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillPointSync.param)
}

// optional uint32 skillpoint = 3 [default = 0];
inline bool SkillPointSync::has_skillpoint() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillPointSync::set_has_skillpoint() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillPointSync::clear_has_skillpoint() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillPointSync::clear_skillpoint() {
  skillpoint_ = 0u;
  clear_has_skillpoint();
}
inline ::google::protobuf::uint32 SkillPointSync::skillpoint() const {
  // @@protoc_insertion_point(field_get:Cmd.SkillPointSync.skillpoint)
  return skillpoint_;
}
inline void SkillPointSync::set_skillpoint(::google::protobuf::uint32 value) {
  set_has_skillpoint();
  skillpoint_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SkillPointSync.skillpoint)
}

// -------------------------------------------------------------------

// LevelSync

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_MANUAL_PROTOCMD];
inline bool LevelSync::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LevelSync::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LevelSync::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LevelSync::clear_cmd() {
  cmd_ = 23;
  clear_has_cmd();
}
inline ::Cmd::Command LevelSync::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.LevelSync.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void LevelSync::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LevelSync.cmd)
}

// optional .Cmd.ManualParam param = 2 [default = MANUALPARAM_LEVELSYNC];
inline bool LevelSync::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LevelSync::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LevelSync::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LevelSync::clear_param() {
  param_ = 8;
  clear_has_param();
}
inline ::Cmd::ManualParam LevelSync::param() const {
  // @@protoc_insertion_point(field_get:Cmd.LevelSync.param)
  return static_cast< ::Cmd::ManualParam >(param_);
}
inline void LevelSync::set_param(::Cmd::ManualParam value) {
  assert(::Cmd::ManualParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LevelSync.param)
}

// optional uint32 level = 3 [default = 0];
inline bool LevelSync::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LevelSync::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LevelSync::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LevelSync::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 LevelSync::level() const {
  // @@protoc_insertion_point(field_get:Cmd.LevelSync.level)
  return level_;
}
inline void LevelSync::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:Cmd.LevelSync.level)
}

// -------------------------------------------------------------------

// GetQuestReward

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_MANUAL_PROTOCMD];
inline bool GetQuestReward::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetQuestReward::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetQuestReward::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetQuestReward::clear_cmd() {
  cmd_ = 23;
  clear_has_cmd();
}
inline ::Cmd::Command GetQuestReward::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GetQuestReward.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GetQuestReward::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetQuestReward.cmd)
}

// optional .Cmd.ManualParam param = 2 [default = MANUALPARAM_GETQUESTREWARD];
inline bool GetQuestReward::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetQuestReward::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetQuestReward::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetQuestReward::clear_param() {
  param_ = 9;
  clear_has_param();
}
inline ::Cmd::ManualParam GetQuestReward::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GetQuestReward.param)
  return static_cast< ::Cmd::ManualParam >(param_);
}
inline void GetQuestReward::set_param(::Cmd::ManualParam value) {
  assert(::Cmd::ManualParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetQuestReward.param)
}

// optional uint32 appendid = 3 [default = 0];
inline bool GetQuestReward::has_appendid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetQuestReward::set_has_appendid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetQuestReward::clear_has_appendid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetQuestReward::clear_appendid() {
  appendid_ = 0u;
  clear_has_appendid();
}
inline ::google::protobuf::uint32 GetQuestReward::appendid() const {
  // @@protoc_insertion_point(field_get:Cmd.GetQuestReward.appendid)
  return appendid_;
}
inline void GetQuestReward::set_appendid(::google::protobuf::uint32 value) {
  set_has_appendid();
  appendid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetQuestReward.appendid)
}

// -------------------------------------------------------------------

// StoreManualCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_MANUAL_PROTOCMD];
inline bool StoreManualCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StoreManualCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StoreManualCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StoreManualCmd::clear_cmd() {
  cmd_ = 23;
  clear_has_cmd();
}
inline ::Cmd::Command StoreManualCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.StoreManualCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void StoreManualCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StoreManualCmd.cmd)
}

// optional .Cmd.ManualParam param = 2 [default = MANUALPARAM_STOREITEM];
inline bool StoreManualCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StoreManualCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StoreManualCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StoreManualCmd::clear_param() {
  param_ = 10;
  clear_has_param();
}
inline ::Cmd::ManualParam StoreManualCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.StoreManualCmd.param)
  return static_cast< ::Cmd::ManualParam >(param_);
}
inline void StoreManualCmd::set_param(::Cmd::ManualParam value) {
  assert(::Cmd::ManualParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StoreManualCmd.param)
}

// optional .Cmd.EManualType type = 3 [default = EMANUALTYPE_MIN];
inline bool StoreManualCmd::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StoreManualCmd::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StoreManualCmd::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StoreManualCmd::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::EManualType StoreManualCmd::type() const {
  // @@protoc_insertion_point(field_get:Cmd.StoreManualCmd.type)
  return static_cast< ::Cmd::EManualType >(type_);
}
inline void StoreManualCmd::set_type(::Cmd::EManualType value) {
  assert(::Cmd::EManualType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.StoreManualCmd.type)
}

// optional string guid = 4;
inline bool StoreManualCmd::has_guid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StoreManualCmd::set_has_guid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StoreManualCmd::clear_has_guid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StoreManualCmd::clear_guid() {
  if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_->clear();
  }
  clear_has_guid();
}
inline const ::std::string& StoreManualCmd::guid() const {
  // @@protoc_insertion_point(field_get:Cmd.StoreManualCmd.guid)
  return *guid_;
}
inline void StoreManualCmd::set_guid(const ::std::string& value) {
  set_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_ = new ::std::string;
  }
  guid_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.StoreManualCmd.guid)
}
inline void StoreManualCmd::set_guid(const char* value) {
  set_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_ = new ::std::string;
  }
  guid_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.StoreManualCmd.guid)
}
inline void StoreManualCmd::set_guid(const char* value, size_t size) {
  set_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_ = new ::std::string;
  }
  guid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.StoreManualCmd.guid)
}
inline ::std::string* StoreManualCmd::mutable_guid() {
  set_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.StoreManualCmd.guid)
  return guid_;
}
inline ::std::string* StoreManualCmd::release_guid() {
  clear_has_guid();
  if (guid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guid_;
    guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void StoreManualCmd::set_allocated_guid(::std::string* guid) {
  if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guid_;
  }
  if (guid) {
    set_has_guid();
    guid_ = guid;
  } else {
    clear_has_guid();
    guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.StoreManualCmd.guid)
}

// -------------------------------------------------------------------

// GetManualCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_MANUAL_PROTOCMD];
inline bool GetManualCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetManualCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetManualCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetManualCmd::clear_cmd() {
  cmd_ = 23;
  clear_has_cmd();
}
inline ::Cmd::Command GetManualCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GetManualCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GetManualCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetManualCmd.cmd)
}

// optional .Cmd.ManualParam param = 2 [default = MANUALPARAM_GETITEM];
inline bool GetManualCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetManualCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetManualCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetManualCmd::clear_param() {
  param_ = 11;
  clear_has_param();
}
inline ::Cmd::ManualParam GetManualCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GetManualCmd.param)
  return static_cast< ::Cmd::ManualParam >(param_);
}
inline void GetManualCmd::set_param(::Cmd::ManualParam value) {
  assert(::Cmd::ManualParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetManualCmd.param)
}

// optional .Cmd.EManualType type = 3 [default = EMANUALTYPE_MIN];
inline bool GetManualCmd::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetManualCmd::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetManualCmd::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetManualCmd::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Cmd::EManualType GetManualCmd::type() const {
  // @@protoc_insertion_point(field_get:Cmd.GetManualCmd.type)
  return static_cast< ::Cmd::EManualType >(type_);
}
inline void GetManualCmd::set_type(::Cmd::EManualType value) {
  assert(::Cmd::EManualType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetManualCmd.type)
}

// optional uint32 itemid = 4 [default = 0];
inline bool GetManualCmd::has_itemid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetManualCmd::set_has_itemid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetManualCmd::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetManualCmd::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 GetManualCmd::itemid() const {
  // @@protoc_insertion_point(field_get:Cmd.GetManualCmd.itemid)
  return itemid_;
}
inline void GetManualCmd::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GetManualCmd.itemid)
}

// -------------------------------------------------------------------

// GroupActionManualCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_MANUAL_PROTOCMD];
inline bool GroupActionManualCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupActionManualCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupActionManualCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupActionManualCmd::clear_cmd() {
  cmd_ = 23;
  clear_has_cmd();
}
inline ::Cmd::Command GroupActionManualCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.GroupActionManualCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void GroupActionManualCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GroupActionManualCmd.cmd)
}

// optional .Cmd.ManualParam param = 2 [default = MANUALPARAM_GROUPACTION];
inline bool GroupActionManualCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupActionManualCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupActionManualCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupActionManualCmd::clear_param() {
  param_ = 12;
  clear_has_param();
}
inline ::Cmd::ManualParam GroupActionManualCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.GroupActionManualCmd.param)
  return static_cast< ::Cmd::ManualParam >(param_);
}
inline void GroupActionManualCmd::set_param(::Cmd::ManualParam value) {
  assert(::Cmd::ManualParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GroupActionManualCmd.param)
}

// optional .Cmd.EGroupAction action = 3 [default = EGROUPACTION_MIN];
inline bool GroupActionManualCmd::has_action() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupActionManualCmd::set_has_action() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupActionManualCmd::clear_has_action() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupActionManualCmd::clear_action() {
  action_ = 0;
  clear_has_action();
}
inline ::Cmd::EGroupAction GroupActionManualCmd::action() const {
  // @@protoc_insertion_point(field_get:Cmd.GroupActionManualCmd.action)
  return static_cast< ::Cmd::EGroupAction >(action_);
}
inline void GroupActionManualCmd::set_action(::Cmd::EGroupAction value) {
  assert(::Cmd::EGroupAction_IsValid(value));
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GroupActionManualCmd.action)
}

// optional uint32 group_id = 4 [default = 0];
inline bool GroupActionManualCmd::has_group_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GroupActionManualCmd::set_has_group_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GroupActionManualCmd::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GroupActionManualCmd::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 GroupActionManualCmd::group_id() const {
  // @@protoc_insertion_point(field_get:Cmd.GroupActionManualCmd.group_id)
  return group_id_;
}
inline void GroupActionManualCmd::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.GroupActionManualCmd.group_id)
}

// -------------------------------------------------------------------

// UnsolvedPhoto

// optional uint32 id = 1 [default = 0];
inline bool UnsolvedPhoto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnsolvedPhoto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnsolvedPhoto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnsolvedPhoto::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 UnsolvedPhoto::id() const {
  // @@protoc_insertion_point(field_get:Cmd.UnsolvedPhoto.id)
  return id_;
}
inline void UnsolvedPhoto::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UnsolvedPhoto.id)
}

// optional uint32 time = 2 [default = 0];
inline bool UnsolvedPhoto::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnsolvedPhoto::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnsolvedPhoto::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnsolvedPhoto::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 UnsolvedPhoto::time() const {
  // @@protoc_insertion_point(field_get:Cmd.UnsolvedPhoto.time)
  return time_;
}
inline void UnsolvedPhoto::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UnsolvedPhoto.time)
}

// optional uint32 anglez = 3 [default = 0];
inline bool UnsolvedPhoto::has_anglez() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UnsolvedPhoto::set_has_anglez() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UnsolvedPhoto::clear_has_anglez() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UnsolvedPhoto::clear_anglez() {
  anglez_ = 0u;
  clear_has_anglez();
}
inline ::google::protobuf::uint32 UnsolvedPhoto::anglez() const {
  // @@protoc_insertion_point(field_get:Cmd.UnsolvedPhoto.anglez)
  return anglez_;
}
inline void UnsolvedPhoto::set_anglez(::google::protobuf::uint32 value) {
  set_has_anglez();
  anglez_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UnsolvedPhoto.anglez)
}

// -------------------------------------------------------------------

// UnsolvedUserPhoto

// optional uint64 charid = 1 [default = 0];
inline bool UnsolvedUserPhoto::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnsolvedUserPhoto::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnsolvedUserPhoto::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnsolvedUserPhoto::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 UnsolvedUserPhoto::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.UnsolvedUserPhoto.charid)
  return charid_;
}
inline void UnsolvedUserPhoto::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UnsolvedUserPhoto.charid)
}

// optional string name = 2;
inline bool UnsolvedUserPhoto::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnsolvedUserPhoto::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnsolvedUserPhoto::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnsolvedUserPhoto::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& UnsolvedUserPhoto::name() const {
  // @@protoc_insertion_point(field_get:Cmd.UnsolvedUserPhoto.name)
  return *name_;
}
inline void UnsolvedUserPhoto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.UnsolvedUserPhoto.name)
}
inline void UnsolvedUserPhoto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.UnsolvedUserPhoto.name)
}
inline void UnsolvedUserPhoto::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.UnsolvedUserPhoto.name)
}
inline ::std::string* UnsolvedUserPhoto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.UnsolvedUserPhoto.name)
  return name_;
}
inline ::std::string* UnsolvedUserPhoto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UnsolvedUserPhoto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.UnsolvedUserPhoto.name)
}

// repeated .Cmd.UnsolvedPhoto photos = 3;
inline int UnsolvedUserPhoto::photos_size() const {
  return photos_.size();
}
inline void UnsolvedUserPhoto::clear_photos() {
  photos_.Clear();
}
inline const ::Cmd::UnsolvedPhoto& UnsolvedUserPhoto::photos(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.UnsolvedUserPhoto.photos)
  return photos_.Get(index);
}
inline ::Cmd::UnsolvedPhoto* UnsolvedUserPhoto::mutable_photos(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.UnsolvedUserPhoto.photos)
  return photos_.Mutable(index);
}
inline ::Cmd::UnsolvedPhoto* UnsolvedUserPhoto::add_photos() {
  // @@protoc_insertion_point(field_add:Cmd.UnsolvedUserPhoto.photos)
  return photos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UnsolvedPhoto >&
UnsolvedUserPhoto::photos() const {
  // @@protoc_insertion_point(field_list:Cmd.UnsolvedUserPhoto.photos)
  return photos_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::UnsolvedPhoto >*
UnsolvedUserPhoto::mutable_photos() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.UnsolvedUserPhoto.photos)
  return &photos_;
}

// -------------------------------------------------------------------

// QueryUnsolvedPhotoManualCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_MANUAL_PROTOCMD];
inline bool QueryUnsolvedPhotoManualCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryUnsolvedPhotoManualCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryUnsolvedPhotoManualCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryUnsolvedPhotoManualCmd::clear_cmd() {
  cmd_ = 23;
  clear_has_cmd();
}
inline ::Cmd::Command QueryUnsolvedPhotoManualCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryUnsolvedPhotoManualCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryUnsolvedPhotoManualCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryUnsolvedPhotoManualCmd.cmd)
}

// optional .Cmd.ManualParam param = 2 [default = MANUALPARAM_QUERY_UNSOLVED_PHOTO];
inline bool QueryUnsolvedPhotoManualCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryUnsolvedPhotoManualCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryUnsolvedPhotoManualCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryUnsolvedPhotoManualCmd::clear_param() {
  param_ = 13;
  clear_has_param();
}
inline ::Cmd::ManualParam QueryUnsolvedPhotoManualCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryUnsolvedPhotoManualCmd.param)
  return static_cast< ::Cmd::ManualParam >(param_);
}
inline void QueryUnsolvedPhotoManualCmd::set_param(::Cmd::ManualParam value) {
  assert(::Cmd::ManualParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryUnsolvedPhotoManualCmd.param)
}

// repeated .Cmd.UnsolvedUserPhoto photos = 3;
inline int QueryUnsolvedPhotoManualCmd::photos_size() const {
  return photos_.size();
}
inline void QueryUnsolvedPhotoManualCmd::clear_photos() {
  photos_.Clear();
}
inline const ::Cmd::UnsolvedUserPhoto& QueryUnsolvedPhotoManualCmd::photos(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QueryUnsolvedPhotoManualCmd.photos)
  return photos_.Get(index);
}
inline ::Cmd::UnsolvedUserPhoto* QueryUnsolvedPhotoManualCmd::mutable_photos(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.QueryUnsolvedPhotoManualCmd.photos)
  return photos_.Mutable(index);
}
inline ::Cmd::UnsolvedUserPhoto* QueryUnsolvedPhotoManualCmd::add_photos() {
  // @@protoc_insertion_point(field_add:Cmd.QueryUnsolvedPhotoManualCmd.photos)
  return photos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::UnsolvedUserPhoto >&
QueryUnsolvedPhotoManualCmd::photos() const {
  // @@protoc_insertion_point(field_list:Cmd.QueryUnsolvedPhotoManualCmd.photos)
  return photos_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::UnsolvedUserPhoto >*
QueryUnsolvedPhotoManualCmd::mutable_photos() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QueryUnsolvedPhotoManualCmd.photos)
  return &photos_;
}

// optional uint32 time = 4 [default = 0];
inline bool QueryUnsolvedPhotoManualCmd::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryUnsolvedPhotoManualCmd::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryUnsolvedPhotoManualCmd::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryUnsolvedPhotoManualCmd::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 QueryUnsolvedPhotoManualCmd::time() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryUnsolvedPhotoManualCmd.time)
  return time_;
}
inline void QueryUnsolvedPhotoManualCmd::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryUnsolvedPhotoManualCmd.time)
}

// -------------------------------------------------------------------

// UpdateSolvedPhotoManualCmd

// optional .Cmd.Command cmd = 1 [default = SCENE_USER_MANUAL_PROTOCMD];
inline bool UpdateSolvedPhotoManualCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateSolvedPhotoManualCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateSolvedPhotoManualCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateSolvedPhotoManualCmd::clear_cmd() {
  cmd_ = 23;
  clear_has_cmd();
}
inline ::Cmd::Command UpdateSolvedPhotoManualCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateSolvedPhotoManualCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UpdateSolvedPhotoManualCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateSolvedPhotoManualCmd.cmd)
}

// optional .Cmd.ManualParam param = 2 [default = MANUALPARAM_UPDATE_UNSOLVED_PHOTO];
inline bool UpdateSolvedPhotoManualCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateSolvedPhotoManualCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateSolvedPhotoManualCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateSolvedPhotoManualCmd::clear_param() {
  param_ = 14;
  clear_has_param();
}
inline ::Cmd::ManualParam UpdateSolvedPhotoManualCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateSolvedPhotoManualCmd.param)
  return static_cast< ::Cmd::ManualParam >(param_);
}
inline void UpdateSolvedPhotoManualCmd::set_param(::Cmd::ManualParam value) {
  assert(::Cmd::ManualParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateSolvedPhotoManualCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool UpdateSolvedPhotoManualCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateSolvedPhotoManualCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateSolvedPhotoManualCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateSolvedPhotoManualCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 UpdateSolvedPhotoManualCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateSolvedPhotoManualCmd.charid)
  return charid_;
}
inline void UpdateSolvedPhotoManualCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateSolvedPhotoManualCmd.charid)
}

// optional uint32 sceneryid = 4 [default = 0];
inline bool UpdateSolvedPhotoManualCmd::has_sceneryid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateSolvedPhotoManualCmd::set_has_sceneryid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateSolvedPhotoManualCmd::clear_has_sceneryid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateSolvedPhotoManualCmd::clear_sceneryid() {
  sceneryid_ = 0u;
  clear_has_sceneryid();
}
inline ::google::protobuf::uint32 UpdateSolvedPhotoManualCmd::sceneryid() const {
  // @@protoc_insertion_point(field_get:Cmd.UpdateSolvedPhotoManualCmd.sceneryid)
  return sceneryid_;
}
inline void UpdateSolvedPhotoManualCmd::set_sceneryid(::google::protobuf::uint32 value) {
  set_has_sceneryid();
  sceneryid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UpdateSolvedPhotoManualCmd.sceneryid)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cmd

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Cmd::ManualParam> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::ManualParam>() {
  return ::Cmd::ManualParam_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EManualType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EManualType>() {
  return ::Cmd::EManualType_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EManualLockMethod> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EManualLockMethod>() {
  return ::Cmd::EManualLockMethod_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EManualStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EManualStatus>() {
  return ::Cmd::EManualStatus_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EGroupAction> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EGroupAction>() {
  return ::Cmd::EGroupAction_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SceneManual_2eproto__INCLUDED
