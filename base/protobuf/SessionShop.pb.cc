// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SessionShop.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SessionShop.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Cmd {

namespace {

const ::google::protobuf::Descriptor* Presentation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Presentation_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShopItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShopItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuyShopItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuyShopItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryShopConfigCmd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryShopConfigCmd_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryQuickBuyConfigCmd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryQuickBuyConfigCmd_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShopSoldItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShopSoldItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryShopSoldCountCmd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryShopSoldCountCmd_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShopDataUpdateCmd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShopDataUpdateCmd_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateShopConfigCmd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateShopConfigCmd_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExchangeShopItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExchangeShopItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateExchangeShopData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateExchangeShopData_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExchangeItemInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExchangeItemInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExchangeShopItemCmd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExchangeShopItemCmd_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResetExchangeShopDataShopCmd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResetExchangeShopDataShopCmd_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ShopParam_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EShopLimitType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EShopLockType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EShopSource_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EPresentType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EExchangeStatusType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_SessionShop_2eproto() {
  protobuf_AddDesc_SessionShop_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "SessionShop.proto");
  GOOGLE_CHECK(file != NULL);
  Presentation_descriptor_ = file->message_type(0);
  static const int Presentation_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Presentation, presenttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Presentation, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Presentation, menuid_),
  };
  Presentation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Presentation_descriptor_,
      Presentation::default_instance_,
      Presentation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Presentation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Presentation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Presentation));
  ShopItem_descriptor_ = file->message_type(1);
  static const int ShopItem_offsets_[40] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, moneyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, moneycount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, moneyid2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, moneycount2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, starttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, endtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, discount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, maxcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, shopid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, screen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, haircolorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, menuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, shoptype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, profession_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, limittype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, des_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, levdes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, business_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, precost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, display_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, shoporder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, ifmsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, adddate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, removedate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, locktype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, lockarg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, discountmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, actdiscount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, producenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, nextgoodsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, clothcolorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, clothcolorids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, itemtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, presentation_),
  };
  ShopItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ShopItem_descriptor_,
      ShopItem::default_instance_,
      ShopItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ShopItem));
  BuyShopItem_descriptor_ = file->message_type(2);
  static const int BuyShopItem_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyShopItem, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyShopItem, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyShopItem, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyShopItem, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyShopItem, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyShopItem, price2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyShopItem, success_),
  };
  BuyShopItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuyShopItem_descriptor_,
      BuyShopItem::default_instance_,
      BuyShopItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyShopItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyShopItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuyShopItem));
  QueryShopConfigCmd_descriptor_ = file->message_type(3);
  static const int QueryShopConfigCmd_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryShopConfigCmd, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryShopConfigCmd, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryShopConfigCmd, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryShopConfigCmd, shopid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryShopConfigCmd, goods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryShopConfigCmd, screen_),
  };
  QueryShopConfigCmd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QueryShopConfigCmd_descriptor_,
      QueryShopConfigCmd::default_instance_,
      QueryShopConfigCmd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryShopConfigCmd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryShopConfigCmd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QueryShopConfigCmd));
  QueryQuickBuyConfigCmd_descriptor_ = file->message_type(4);
  static const int QueryQuickBuyConfigCmd_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryQuickBuyConfigCmd, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryQuickBuyConfigCmd, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryQuickBuyConfigCmd, itemids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryQuickBuyConfigCmd, goods_),
  };
  QueryQuickBuyConfigCmd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QueryQuickBuyConfigCmd_descriptor_,
      QueryQuickBuyConfigCmd::default_instance_,
      QueryQuickBuyConfigCmd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryQuickBuyConfigCmd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryQuickBuyConfigCmd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QueryQuickBuyConfigCmd));
  ShopSoldItem_descriptor_ = file->message_type(5);
  static const int ShopSoldItem_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopSoldItem, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopSoldItem, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopSoldItem, shopid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopSoldItem, type_),
  };
  ShopSoldItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ShopSoldItem_descriptor_,
      ShopSoldItem::default_instance_,
      ShopSoldItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopSoldItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopSoldItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ShopSoldItem));
  QueryShopSoldCountCmd_descriptor_ = file->message_type(6);
  static const int QueryShopSoldCountCmd_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryShopSoldCountCmd, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryShopSoldCountCmd, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryShopSoldCountCmd, items_),
  };
  QueryShopSoldCountCmd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QueryShopSoldCountCmd_descriptor_,
      QueryShopSoldCountCmd::default_instance_,
      QueryShopSoldCountCmd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryShopSoldCountCmd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryShopSoldCountCmd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QueryShopSoldCountCmd));
  ShopDataUpdateCmd_descriptor_ = file->message_type(7);
  static const int ShopDataUpdateCmd_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopDataUpdateCmd, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopDataUpdateCmd, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopDataUpdateCmd, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopDataUpdateCmd, shopid_),
  };
  ShopDataUpdateCmd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ShopDataUpdateCmd_descriptor_,
      ShopDataUpdateCmd::default_instance_,
      ShopDataUpdateCmd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopDataUpdateCmd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopDataUpdateCmd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ShopDataUpdateCmd));
  UpdateShopConfigCmd_descriptor_ = file->message_type(8);
  static const int UpdateShopConfigCmd_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateShopConfigCmd, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateShopConfigCmd, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateShopConfigCmd, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateShopConfigCmd, shopid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateShopConfigCmd, del_goods_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateShopConfigCmd, add_goods_),
  };
  UpdateShopConfigCmd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateShopConfigCmd_descriptor_,
      UpdateShopConfigCmd::default_instance_,
      UpdateShopConfigCmd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateShopConfigCmd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateShopConfigCmd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateShopConfigCmd));
  ExchangeShopItem_descriptor_ = file->message_type(9);
  static const int ExchangeShopItem_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExchangeShopItem, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExchangeShopItem, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExchangeShopItem, progress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExchangeShopItem, exchange_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExchangeShopItem, left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExchangeShopItem, delay_time_),
  };
  ExchangeShopItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExchangeShopItem_descriptor_,
      ExchangeShopItem::default_instance_,
      ExchangeShopItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExchangeShopItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExchangeShopItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExchangeShopItem));
  UpdateExchangeShopData_descriptor_ = file->message_type(10);
  static const int UpdateExchangeShopData_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateExchangeShopData, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateExchangeShopData, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateExchangeShopData, items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateExchangeShopData, del_items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateExchangeShopData, menu_open_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateExchangeShopData, reset_),
  };
  UpdateExchangeShopData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateExchangeShopData_descriptor_,
      UpdateExchangeShopData::default_instance_,
      UpdateExchangeShopData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateExchangeShopData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateExchangeShopData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateExchangeShopData));
  ExchangeItemInfo_descriptor_ = file->message_type(11);
  static const int ExchangeItemInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExchangeItemInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExchangeItemInfo, num_),
  };
  ExchangeItemInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExchangeItemInfo_descriptor_,
      ExchangeItemInfo::default_instance_,
      ExchangeItemInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExchangeItemInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExchangeItemInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExchangeItemInfo));
  ExchangeShopItemCmd_descriptor_ = file->message_type(12);
  static const int ExchangeShopItemCmd_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExchangeShopItemCmd, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExchangeShopItemCmd, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExchangeShopItemCmd, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExchangeShopItemCmd, items_),
  };
  ExchangeShopItemCmd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExchangeShopItemCmd_descriptor_,
      ExchangeShopItemCmd::default_instance_,
      ExchangeShopItemCmd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExchangeShopItemCmd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExchangeShopItemCmd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExchangeShopItemCmd));
  ResetExchangeShopDataShopCmd_descriptor_ = file->message_type(13);
  static const int ResetExchangeShopDataShopCmd_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetExchangeShopDataShopCmd, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetExchangeShopDataShopCmd, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetExchangeShopDataShopCmd, items_),
  };
  ResetExchangeShopDataShopCmd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResetExchangeShopDataShopCmd_descriptor_,
      ResetExchangeShopDataShopCmd::default_instance_,
      ResetExchangeShopDataShopCmd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetExchangeShopDataShopCmd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetExchangeShopDataShopCmd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResetExchangeShopDataShopCmd));
  ShopParam_descriptor_ = file->enum_type(0);
  EShopLimitType_descriptor_ = file->enum_type(1);
  EShopLockType_descriptor_ = file->enum_type(2);
  EShopSource_descriptor_ = file->enum_type(3);
  EPresentType_descriptor_ = file->enum_type(4);
  EExchangeStatusType_descriptor_ = file->enum_type(5);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_SessionShop_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Presentation_descriptor_, &Presentation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ShopItem_descriptor_, &ShopItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuyShopItem_descriptor_, &BuyShopItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QueryShopConfigCmd_descriptor_, &QueryShopConfigCmd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QueryQuickBuyConfigCmd_descriptor_, &QueryQuickBuyConfigCmd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ShopSoldItem_descriptor_, &ShopSoldItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QueryShopSoldCountCmd_descriptor_, &QueryShopSoldCountCmd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ShopDataUpdateCmd_descriptor_, &ShopDataUpdateCmd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateShopConfigCmd_descriptor_, &UpdateShopConfigCmd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExchangeShopItem_descriptor_, &ExchangeShopItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateExchangeShopData_descriptor_, &UpdateExchangeShopData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExchangeItemInfo_descriptor_, &ExchangeItemInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExchangeShopItemCmd_descriptor_, &ExchangeShopItemCmd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResetExchangeShopDataShopCmd_descriptor_, &ResetExchangeShopDataShopCmd::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_SessionShop_2eproto() {
  delete Presentation::default_instance_;
  delete Presentation_reflection_;
  delete ShopItem::default_instance_;
  delete ShopItem_reflection_;
  delete BuyShopItem::default_instance_;
  delete BuyShopItem_reflection_;
  delete QueryShopConfigCmd::default_instance_;
  delete QueryShopConfigCmd_reflection_;
  delete QueryQuickBuyConfigCmd::default_instance_;
  delete QueryQuickBuyConfigCmd_reflection_;
  delete ShopSoldItem::default_instance_;
  delete ShopSoldItem_reflection_;
  delete QueryShopSoldCountCmd::default_instance_;
  delete QueryShopSoldCountCmd_reflection_;
  delete ShopDataUpdateCmd::default_instance_;
  delete ShopDataUpdateCmd_reflection_;
  delete UpdateShopConfigCmd::default_instance_;
  delete UpdateShopConfigCmd_reflection_;
  delete ExchangeShopItem::default_instance_;
  delete ExchangeShopItem_reflection_;
  delete UpdateExchangeShopData::default_instance_;
  delete UpdateExchangeShopData_reflection_;
  delete ExchangeItemInfo::default_instance_;
  delete ExchangeItemInfo_reflection_;
  delete ExchangeShopItemCmd::default_instance_;
  delete ExchangeShopItemCmd_reflection_;
  delete ResetExchangeShopDataShopCmd::default_instance_;
  delete ResetExchangeShopDataShopCmd_reflection_;
}

void protobuf_AddDesc_SessionShop_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Cmd::protobuf_AddDesc_xCmd_2eproto();
  ::Cmd::protobuf_AddDesc_ProtoCommon_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021SessionShop.proto\022\003Cmd\032\nxCmd.proto\032\021Pr"
    "otoCommon.proto\"m\n\014Presentation\022;\n\013prese"
    "nttype\030\001 \001(\0162\021.Cmd.EPresentType:\023EPRESEN"
    "TTYPE_NORMAL\022\020\n\005msgid\030\002 \001(\r:\0010\022\016\n\006menuid"
    "\030\003 \003(\r\"\233\007\n\010ShopItem\022\r\n\002id\030\001 \001(\r:\0010\022\r\n\002lv"
    "\030\002 \001(\r:\0010\022\022\n\007moneyid\030\003 \001(\r:\0010\022\025\n\nmoneyco"
    "unt\030\004 \001(\r:\0010\022\020\n\010moneyid2\030\005 \001(\r\022\023\n\013moneyc"
    "ount2\030\006 \001(\r\022\024\n\tstarttime\030\007 \001(\r:\0010\022\022\n\007end"
    "time\030\010 \001(\r:\0010\022\023\n\010discount\030\t \001(\r:\0010\022\023\n\010ma"
    "xcount\030\n \001(\r:\0010\022\021\n\006shopid\030\013 \001(\r:\0010\022\021\n\006sc"
    "reen\030\014 \001(\r:\0010\022\016\n\006itemid\030\r \001(\r\022\017\n\007skillid"
    "\030\016 \001(\r\022\023\n\013haircolorid\030\020 \001(\r\022\013\n\003num\030\021 \001(\r"
    "\022\021\n\006menuid\030\022 \001(\r:\0010\022\023\n\010shoptype\030\023 \001(\r:\0010"
    "\022$\n\nprofession\030\024 \003(\0162\020.Cmd.EProfession\022:"
    "\n\tlimittype\030\025 \001(\0162\023.Cmd.EShopLimitType:\022"
    "ESHOPLIMITTYPE_MIN\022\013\n\003des\030\026 \001(\t\022\016\n\006levde"
    "s\030\027 \001(\t\022\020\n\010business\030\030 \001(\r\022\017\n\007precost\030\031 \001"
    "(\r\022\022\n\007display\030\032 \001(\r:\0010\022\021\n\tshoporder\030\033 \001("
    "\r\022\r\n\005ifmsg\030\034 \001(\r\022\017\n\007adddate\030\035 \001(\r\022\022\n\nrem"
    "ovedate\030\036 \001(\r\0222\n\006source\030% \001(\0162\020.Cmd.ESho"
    "pSource:\020ESHOPSOURCE_USER\0227\n\010locktype\030\037 "
    "\001(\0162\022.Cmd.EShopLockType:\021ESHOPLOCKTYPE_M"
    "IN\022\017\n\007lockarg\030  \001(\t\022\023\n\013discountmax\030! \001(\r"
    "\022\023\n\013actdiscount\030\" \001(\r\022\022\n\nproducenum\030# \001("
    "\r\022\023\n\013nextgoodsid\030$ \001(\r\022\027\n\014clothcolorid\030&"
    " \001(\r:\0010\022\025\n\rclothcolorids\030\' \003(\r\022\023\n\010itemty"
    "pe\030( \001(\r:\0010\022\'\n\014presentation\030) \001(\0132\021.Cmd."
    "Presentation\"\315\001\n\013BuyShopItem\0225\n\003cmd\030\001 \001("
    "\0162\014.Cmd.Command:\032SESSION_USER_SHOP_PROTO"
    "CMD\0220\n\005param\030\002 \001(\0162\016.Cmd.ShopParam:\021SHOP"
    "PARAM_BUYITEM\022\r\n\002id\030\003 \001(\r:\0010\022\020\n\005count\030\004 "
    "\001(\r:\0010\022\020\n\005price\030\005 \001(\r:\0010\022\021\n\006price2\030\006 \001(\r"
    ":\0010\022\017\n\007success\030\007 \001(\010\"\323\001\n\022QueryShopConfig"
    "Cmd\0225\n\003cmd\030\001 \001(\0162\014.Cmd.Command:\032SESSION_"
    "USER_SHOP_PROTOCMD\022:\n\005param\030\002 \001(\0162\016.Cmd."
    "ShopParam:\033SHOPPARAM_QUERY_SHOP_CONFIG\022\014"
    "\n\004type\030\003 \001(\r\022\016\n\006shopid\030\004 \001(\r\022\034\n\005goods\030\005 "
    "\003(\0132\r.Cmd.ShopItem\022\016\n\006screen\030\006 \001(\r\"\275\001\n\026Q"
    "ueryQuickBuyConfigCmd\0225\n\003cmd\030\001 \001(\0162\014.Cmd"
    ".Command:\032SESSION_USER_SHOP_PROTOCMD\022=\n\005"
    "param\030\002 \001(\0162\016.Cmd.ShopParam:\036SHOPPARAM_Q"
    "UICKBUY_SHOP_CONFIG\022\017\n\007itemids\030\003 \003(\r\022\034\n\005"
    "goods\030\004 \003(\0132\r.Cmd.ShopItem\"M\n\014ShopSoldIt"
    "em\022\r\n\002id\030\001 \001(\r:\0010\022\020\n\005count\030\002 \001(\r:\0010\022\016\n\006s"
    "hopid\030\003 \001(\r\022\014\n\004type\030\004 \001(\r\"\260\001\n\025QueryShopS"
    "oldCountCmd\0225\n\003cmd\030\001 \001(\0162\014.Cmd.Command:\032"
    "SESSION_USER_SHOP_PROTOCMD\022>\n\005param\030\002 \001("
    "\0162\016.Cmd.ShopParam:\037SHOPPARAM_QUERY_SHOP_"
    "SOLD_COUNT\022 \n\005items\030\003 \003(\0132\021.Cmd.ShopSold"
    "Item\"\241\001\n\021ShopDataUpdateCmd\0225\n\003cmd\030\001 \001(\0162"
    "\014.Cmd.Command:\032SESSION_USER_SHOP_PROTOCM"
    "D\0224\n\005param\030\002 \001(\0162\016.Cmd.ShopParam:\025SHOPPA"
    "RAM_UPDATE_DATA\022\014\n\004type\030\003 \001(\r\022\021\n\006shopid\030"
    "\004 \001(\r:\0010\"\343\001\n\023UpdateShopConfigCmd\0225\n\003cmd\030"
    "\001 \001(\0162\014.Cmd.Command:\032SESSION_USER_SHOP_P"
    "ROTOCMD\022\?\n\005param\030\002 \001(\0162\016.Cmd.ShopParam: "
    "SHOPPARAM_UPDATE_SHOP_CONFIG_CMD\022\014\n\004type"
    "\030\003 \001(\r\022\016\n\006shopid\030\004 \001(\r\022\024\n\014del_goods_id\030\005"
    " \003(\r\022 \n\tadd_goods\030\006 \003(\0132\r.Cmd.ShopItem\"\261"
    "\001\n\020ExchangeShopItem\022\n\n\002id\030\001 \001(\r\022@\n\006statu"
    "s\030\002 \001(\0162\030.Cmd.EExchangeStatusType:\026EEXCH"
    "ANGESTATUSTYPE_OK\022\020\n\010progress\030\003 \001(\r\022\026\n\016e"
    "xchange_count\030\004 \001(\r\022\021\n\tleft_time\030\005 \001(\r\022\022"
    "\n\ndelay_time\030\006 \001(\r\"\364\001\n\026UpdateExchangeSho"
    "pData\0225\n\003cmd\030\001 \001(\0162\014.Cmd.Command:\032SESSIO"
    "N_USER_SHOP_PROTOCMD\022A\n\005param\030\002 \001(\0162\016.Cm"
    "d.ShopParam:\"SHOPPARAM_UPDATE_EXCHANGESH"
    "OP_DATA\022$\n\005items\030\003 \003(\0132\025.Cmd.ExchangeSho"
    "pItem\022\021\n\tdel_items\030\004 \003(\r\022\021\n\tmenu_open\030\005 "
    "\001(\010\022\024\n\005reset\030\006 \001(\010:\005false\"+\n\020ExchangeIte"
    "mInfo\022\n\n\002id\030\001 \001(\r\022\013\n\003num\030\002 \001(\r\"\271\001\n\023Excha"
    "ngeShopItemCmd\0225\n\003cmd\030\001 \001(\0162\014.Cmd.Comman"
    "d:\032SESSION_USER_SHOP_PROTOCMD\0229\n\005param\030\002"
    " \001(\0162\016.Cmd.ShopParam:\032SHOPPARAM_EXCHANGE"
    "ITEM_CMD\022\n\n\002id\030\003 \001(\r\022$\n\005items\030\004 \003(\0132\025.Cm"
    "d.ExchangeItemInfo\"\275\001\n\034ResetExchangeShop"
    "DataShopCmd\0225\n\003cmd\030\001 \001(\0162\014.Cmd.Command:\032"
    "SESSION_USER_SHOP_PROTOCMD\022@\n\005param\030\002 \001("
    "\0162\016.Cmd.ShopParam:!SHOPPARAM_RESET_EXCHA"
    "NGESHOP_DATA\022$\n\005items\030\003 \003(\0132\025.Cmd.Exchan"
    "geShopItem*\274\002\n\tShopParam\022\025\n\021SHOPPARAM_BU"
    "YITEM\020\001\022\037\n\033SHOPPARAM_QUERY_SHOP_CONFIG\020\002"
    "\022\"\n\036SHOPPARAM_QUICKBUY_SHOP_CONFIG\020\003\022#\n\037"
    "SHOPPARAM_QUERY_SHOP_SOLD_COUNT\020\004\022\031\n\025SHO"
    "PPARAM_UPDATE_DATA\020\005\022$\n SHOPPARAM_UPDATE"
    "_SHOP_CONFIG_CMD\020\006\022&\n\"SHOPPARAM_UPDATE_E"
    "XCHANGESHOP_DATA\020\007\022\036\n\032SHOPPARAM_EXCHANGE"
    "ITEM_CMD\020\010\022%\n!SHOPPARAM_RESET_EXCHANGESH"
    "OP_DATA\020\t*\261\002\n\016EShopLimitType\022\026\n\022ESHOPLIM"
    "ITTYPE_MIN\020\000\022\027\n\023ESHOPLIMITTYPE_USER\020\001\022\033\n"
    "\027ESHOPLIMITTYPE_ONE_ONLY\020\002\022\033\n\027ESHOPLIMIT"
    "TYPE_ACC_USER\020\004\022\"\n\036ESHOPLIMITTYPE_ACC_US"
    "ER_ALWAYS\020\010\022\034\n\030ESHOPLIMITTYPE_USER_WEEK\020"
    "\020\022\035\n\031ESHOPLIMITTYPE_USER_MONTH\020 \022\033\n\027ESHO"
    "PLIMITTYPE_ACC_WEEK\020@\022\035\n\030ESHOPLIMITTYPE_"
    "ACC_MONTH\020\200\001\022\027\n\022ESHOPLIMITTYPE_MAX\020\200\002*w\n"
    "\rEShopLockType\022\025\n\021ESHOPLOCKTYPE_MIN\020\000\022\027\n"
    "\023ESHOPLOCKTYPE_QUEST\020\001\022\037\n\033ESHOPLOCKTYPE_"
    "GUILDBUILDING\020\002\022\025\n\021ESHOPLOCKTYPE_MAX\020\003*:"
    "\n\013EShopSource\022\024\n\020ESHOPSOURCE_USER\020\000\022\025\n\021E"
    "SHOPSOURCE_GUILD\020\001*>\n\014EPresentType\022\027\n\023EP"
    "RESENTTYPE_NORMAL\020\000\022\025\n\021EPRESENTTYPE_LOCK"
    "\020\001*\217\001\n\023EExchangeStatusType\022\032\n\026EEXCHANGES"
    "TATUSTYPE_OK\020\001\022\035\n\031EEXCHANGESTATUSTYPE_EM"
    "PTY\020\002\022\035\n\031EEXCHANGESTATUSTYPE_DELAY\020\003\022\036\n\032"
    "EEXCHANGESTATUSTYPE_UNLOOK\020\004", 4228);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SessionShop.proto", &protobuf_RegisterTypes);
  Presentation::default_instance_ = new Presentation();
  ShopItem::default_instance_ = new ShopItem();
  BuyShopItem::default_instance_ = new BuyShopItem();
  QueryShopConfigCmd::default_instance_ = new QueryShopConfigCmd();
  QueryQuickBuyConfigCmd::default_instance_ = new QueryQuickBuyConfigCmd();
  ShopSoldItem::default_instance_ = new ShopSoldItem();
  QueryShopSoldCountCmd::default_instance_ = new QueryShopSoldCountCmd();
  ShopDataUpdateCmd::default_instance_ = new ShopDataUpdateCmd();
  UpdateShopConfigCmd::default_instance_ = new UpdateShopConfigCmd();
  ExchangeShopItem::default_instance_ = new ExchangeShopItem();
  UpdateExchangeShopData::default_instance_ = new UpdateExchangeShopData();
  ExchangeItemInfo::default_instance_ = new ExchangeItemInfo();
  ExchangeShopItemCmd::default_instance_ = new ExchangeShopItemCmd();
  ResetExchangeShopDataShopCmd::default_instance_ = new ResetExchangeShopDataShopCmd();
  Presentation::default_instance_->InitAsDefaultInstance();
  ShopItem::default_instance_->InitAsDefaultInstance();
  BuyShopItem::default_instance_->InitAsDefaultInstance();
  QueryShopConfigCmd::default_instance_->InitAsDefaultInstance();
  QueryQuickBuyConfigCmd::default_instance_->InitAsDefaultInstance();
  ShopSoldItem::default_instance_->InitAsDefaultInstance();
  QueryShopSoldCountCmd::default_instance_->InitAsDefaultInstance();
  ShopDataUpdateCmd::default_instance_->InitAsDefaultInstance();
  UpdateShopConfigCmd::default_instance_->InitAsDefaultInstance();
  ExchangeShopItem::default_instance_->InitAsDefaultInstance();
  UpdateExchangeShopData::default_instance_->InitAsDefaultInstance();
  ExchangeItemInfo::default_instance_->InitAsDefaultInstance();
  ExchangeShopItemCmd::default_instance_->InitAsDefaultInstance();
  ResetExchangeShopDataShopCmd::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_SessionShop_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_SessionShop_2eproto {
  StaticDescriptorInitializer_SessionShop_2eproto() {
    protobuf_AddDesc_SessionShop_2eproto();
  }
} static_descriptor_initializer_SessionShop_2eproto_;
const ::google::protobuf::EnumDescriptor* ShopParam_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShopParam_descriptor_;
}
bool ShopParam_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EShopLimitType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EShopLimitType_descriptor_;
}
bool EShopLimitType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EShopLockType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EShopLockType_descriptor_;
}
bool EShopLockType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EShopSource_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EShopSource_descriptor_;
}
bool EShopSource_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EPresentType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EPresentType_descriptor_;
}
bool EPresentType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EExchangeStatusType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EExchangeStatusType_descriptor_;
}
bool EExchangeStatusType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int Presentation::kPresenttypeFieldNumber;
const int Presentation::kMsgidFieldNumber;
const int Presentation::kMenuidFieldNumber;
#endif  // !_MSC_VER

Presentation::Presentation()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.Presentation)
}

void Presentation::InitAsDefaultInstance() {
}

Presentation::Presentation(const Presentation& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.Presentation)
}

void Presentation::SharedCtor() {
  _cached_size_ = 0;
  presenttype_ = 0;
  msgid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Presentation::~Presentation() {
  // @@protoc_insertion_point(destructor:Cmd.Presentation)
  SharedDtor();
}

void Presentation::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Presentation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Presentation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Presentation_descriptor_;
}

const Presentation& Presentation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SessionShop_2eproto();
  return *default_instance_;
}

Presentation* Presentation::default_instance_ = NULL;

Presentation* Presentation::New() const {
  return new Presentation;
}

void Presentation::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Presentation*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(presenttype_, msgid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  menuid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Presentation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.Presentation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.EPresentType presenttype = 1 [default = EPRESENTTYPE_NORMAL];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::EPresentType_IsValid(value)) {
            set_presenttype(static_cast< ::Cmd::EPresentType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgid;
        break;
      }

      // optional uint32 msgid = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_msgid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
          set_has_msgid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_menuid;
        break;
      }

      // repeated uint32 menuid = 3;
      case 3: {
        if (tag == 24) {
         parse_menuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_menuid())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_menuid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_menuid;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.Presentation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.Presentation)
  return false;
#undef DO_
}

void Presentation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.Presentation)
  // optional .Cmd.EPresentType presenttype = 1 [default = EPRESENTTYPE_NORMAL];
  if (has_presenttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->presenttype(), output);
  }

  // optional uint32 msgid = 2 [default = 0];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msgid(), output);
  }

  // repeated uint32 menuid = 3;
  for (int i = 0; i < this->menuid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->menuid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.Presentation)
}

::google::protobuf::uint8* Presentation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.Presentation)
  // optional .Cmd.EPresentType presenttype = 1 [default = EPRESENTTYPE_NORMAL];
  if (has_presenttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->presenttype(), target);
  }

  // optional uint32 msgid = 2 [default = 0];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->msgid(), target);
  }

  // repeated uint32 menuid = 3;
  for (int i = 0; i < this->menuid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->menuid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.Presentation)
  return target;
}

int Presentation::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.EPresentType presenttype = 1 [default = EPRESENTTYPE_NORMAL];
    if (has_presenttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->presenttype());
    }

    // optional uint32 msgid = 2 [default = 0];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msgid());
    }

  }
  // repeated uint32 menuid = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->menuid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->menuid(i));
    }
    total_size += 1 * this->menuid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Presentation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Presentation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Presentation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Presentation::MergeFrom(const Presentation& from) {
  GOOGLE_CHECK_NE(&from, this);
  menuid_.MergeFrom(from.menuid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_presenttype()) {
      set_presenttype(from.presenttype());
    }
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Presentation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Presentation::CopyFrom(const Presentation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Presentation::IsInitialized() const {

  return true;
}

void Presentation::Swap(Presentation* other) {
  if (other != this) {
    std::swap(presenttype_, other->presenttype_);
    std::swap(msgid_, other->msgid_);
    menuid_.Swap(&other->menuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Presentation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Presentation_descriptor_;
  metadata.reflection = Presentation_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ShopItem::kIdFieldNumber;
const int ShopItem::kLvFieldNumber;
const int ShopItem::kMoneyidFieldNumber;
const int ShopItem::kMoneycountFieldNumber;
const int ShopItem::kMoneyid2FieldNumber;
const int ShopItem::kMoneycount2FieldNumber;
const int ShopItem::kStarttimeFieldNumber;
const int ShopItem::kEndtimeFieldNumber;
const int ShopItem::kDiscountFieldNumber;
const int ShopItem::kMaxcountFieldNumber;
const int ShopItem::kShopidFieldNumber;
const int ShopItem::kScreenFieldNumber;
const int ShopItem::kItemidFieldNumber;
const int ShopItem::kSkillidFieldNumber;
const int ShopItem::kHaircoloridFieldNumber;
const int ShopItem::kNumFieldNumber;
const int ShopItem::kMenuidFieldNumber;
const int ShopItem::kShoptypeFieldNumber;
const int ShopItem::kProfessionFieldNumber;
const int ShopItem::kLimittypeFieldNumber;
const int ShopItem::kDesFieldNumber;
const int ShopItem::kLevdesFieldNumber;
const int ShopItem::kBusinessFieldNumber;
const int ShopItem::kPrecostFieldNumber;
const int ShopItem::kDisplayFieldNumber;
const int ShopItem::kShoporderFieldNumber;
const int ShopItem::kIfmsgFieldNumber;
const int ShopItem::kAdddateFieldNumber;
const int ShopItem::kRemovedateFieldNumber;
const int ShopItem::kSourceFieldNumber;
const int ShopItem::kLocktypeFieldNumber;
const int ShopItem::kLockargFieldNumber;
const int ShopItem::kDiscountmaxFieldNumber;
const int ShopItem::kActdiscountFieldNumber;
const int ShopItem::kProducenumFieldNumber;
const int ShopItem::kNextgoodsidFieldNumber;
const int ShopItem::kClothcoloridFieldNumber;
const int ShopItem::kClothcoloridsFieldNumber;
const int ShopItem::kItemtypeFieldNumber;
const int ShopItem::kPresentationFieldNumber;
#endif  // !_MSC_VER

ShopItem::ShopItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.ShopItem)
}

void ShopItem::InitAsDefaultInstance() {
  presentation_ = const_cast< ::Cmd::Presentation*>(&::Cmd::Presentation::default_instance());
}

ShopItem::ShopItem(const ShopItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.ShopItem)
}

void ShopItem::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0u;
  lv_ = 0u;
  moneyid_ = 0u;
  moneycount_ = 0u;
  moneyid2_ = 0u;
  moneycount2_ = 0u;
  starttime_ = 0u;
  endtime_ = 0u;
  discount_ = 0u;
  maxcount_ = 0u;
  shopid_ = 0u;
  screen_ = 0u;
  itemid_ = 0u;
  skillid_ = 0u;
  haircolorid_ = 0u;
  num_ = 0u;
  menuid_ = 0u;
  shoptype_ = 0u;
  limittype_ = 0;
  des_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  levdes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  business_ = 0u;
  precost_ = 0u;
  display_ = 0u;
  shoporder_ = 0u;
  ifmsg_ = 0u;
  adddate_ = 0u;
  removedate_ = 0u;
  source_ = 0;
  locktype_ = 0;
  lockarg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  discountmax_ = 0u;
  actdiscount_ = 0u;
  producenum_ = 0u;
  nextgoodsid_ = 0u;
  clothcolorid_ = 0u;
  itemtype_ = 0u;
  presentation_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ShopItem::~ShopItem() {
  // @@protoc_insertion_point(destructor:Cmd.ShopItem)
  SharedDtor();
}

void ShopItem::SharedDtor() {
  if (des_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete des_;
  }
  if (levdes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete levdes_;
  }
  if (lockarg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete lockarg_;
  }
  if (this != default_instance_) {
    delete presentation_;
  }
}

void ShopItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShopItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShopItem_descriptor_;
}

const ShopItem& ShopItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SessionShop_2eproto();
  return *default_instance_;
}

ShopItem* ShopItem::default_instance_ = NULL;

ShopItem* ShopItem::New() const {
  return new ShopItem;
}

void ShopItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ShopItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(id_, endtime_);
  }
  if (_has_bits_[8 / 32] & 65280) {
    ZR_(discount_, num_);
  }
  if (_has_bits_[16 / 32] & 16449536) {
    ZR_(menuid_, shoptype_);
    ZR_(limittype_, business_);
    if (has_des()) {
      if (des_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        des_->clear();
      }
    }
    if (has_levdes()) {
      if (levdes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        levdes_->clear();
      }
    }
    precost_ = 0u;
  }
  if (_has_bits_[24 / 32] & 4278190080) {
    ZR_(display_, locktype_);
    if (has_lockarg()) {
      if (lockarg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        lockarg_->clear();
      }
    }
  }
  if (_has_bits_[32 / 32] & 223) {
    ZR_(discountmax_, nextgoodsid_);
    ZR_(clothcolorid_, itemtype_);
    if (has_presentation()) {
      if (presentation_ != NULL) presentation_->::Cmd::Presentation::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  profession_.Clear();
  clothcolorids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ShopItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.ShopItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_lv;
        break;
      }

      // optional uint32 lv = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lv_)));
          set_has_lv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_moneyid;
        break;
      }

      // optional uint32 moneyid = 3 [default = 0];
      case 3: {
        if (tag == 24) {
         parse_moneyid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &moneyid_)));
          set_has_moneyid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_moneycount;
        break;
      }

      // optional uint32 moneycount = 4 [default = 0];
      case 4: {
        if (tag == 32) {
         parse_moneycount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &moneycount_)));
          set_has_moneycount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_moneyid2;
        break;
      }

      // optional uint32 moneyid2 = 5;
      case 5: {
        if (tag == 40) {
         parse_moneyid2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &moneyid2_)));
          set_has_moneyid2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_moneycount2;
        break;
      }

      // optional uint32 moneycount2 = 6;
      case 6: {
        if (tag == 48) {
         parse_moneycount2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &moneycount2_)));
          set_has_moneycount2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_starttime;
        break;
      }

      // optional uint32 starttime = 7 [default = 0];
      case 7: {
        if (tag == 56) {
         parse_starttime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &starttime_)));
          set_has_starttime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_endtime;
        break;
      }

      // optional uint32 endtime = 8 [default = 0];
      case 8: {
        if (tag == 64) {
         parse_endtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &endtime_)));
          set_has_endtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_discount;
        break;
      }

      // optional uint32 discount = 9 [default = 0];
      case 9: {
        if (tag == 72) {
         parse_discount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &discount_)));
          set_has_discount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_maxcount;
        break;
      }

      // optional uint32 maxcount = 10 [default = 0];
      case 10: {
        if (tag == 80) {
         parse_maxcount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxcount_)));
          set_has_maxcount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_shopid;
        break;
      }

      // optional uint32 shopid = 11 [default = 0];
      case 11: {
        if (tag == 88) {
         parse_shopid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shopid_)));
          set_has_shopid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_screen;
        break;
      }

      // optional uint32 screen = 12 [default = 0];
      case 12: {
        if (tag == 96) {
         parse_screen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &screen_)));
          set_has_screen();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_itemid;
        break;
      }

      // optional uint32 itemid = 13;
      case 13: {
        if (tag == 104) {
         parse_itemid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_skillid;
        break;
      }

      // optional uint32 skillid = 14;
      case 14: {
        if (tag == 112) {
         parse_skillid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skillid_)));
          set_has_skillid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_haircolorid;
        break;
      }

      // optional uint32 haircolorid = 16;
      case 16: {
        if (tag == 128) {
         parse_haircolorid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &haircolorid_)));
          set_has_haircolorid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_num;
        break;
      }

      // optional uint32 num = 17;
      case 17: {
        if (tag == 136) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_menuid;
        break;
      }

      // optional uint32 menuid = 18 [default = 0];
      case 18: {
        if (tag == 144) {
         parse_menuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &menuid_)));
          set_has_menuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_shoptype;
        break;
      }

      // optional uint32 shoptype = 19 [default = 0];
      case 19: {
        if (tag == 152) {
         parse_shoptype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shoptype_)));
          set_has_shoptype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_profession;
        break;
      }

      // repeated .Cmd.EProfession profession = 20;
      case 20: {
        if (tag == 160) {
         parse_profession:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::EProfession_IsValid(value)) {
            add_profession(static_cast< ::Cmd::EProfession >(value));
          } else {
            mutable_unknown_fields()->AddVarint(20, value);
          }
        } else if (tag == 162) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline(
                 input,
                 &::Cmd::EProfession_IsValid,
                 this->mutable_profession())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_profession;
        if (input->ExpectTag(168)) goto parse_limittype;
        break;
      }

      // optional .Cmd.EShopLimitType limittype = 21 [default = ESHOPLIMITTYPE_MIN];
      case 21: {
        if (tag == 168) {
         parse_limittype:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::EShopLimitType_IsValid(value)) {
            set_limittype(static_cast< ::Cmd::EShopLimitType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(21, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_des;
        break;
      }

      // optional string des = 22;
      case 22: {
        if (tag == 178) {
         parse_des:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_des()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->des().data(), this->des().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "des");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_levdes;
        break;
      }

      // optional string levdes = 23;
      case 23: {
        if (tag == 186) {
         parse_levdes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_levdes()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->levdes().data(), this->levdes().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "levdes");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_business;
        break;
      }

      // optional uint32 business = 24;
      case 24: {
        if (tag == 192) {
         parse_business:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &business_)));
          set_has_business();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(200)) goto parse_precost;
        break;
      }

      // optional uint32 precost = 25;
      case 25: {
        if (tag == 200) {
         parse_precost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &precost_)));
          set_has_precost();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(208)) goto parse_display;
        break;
      }

      // optional uint32 display = 26 [default = 0];
      case 26: {
        if (tag == 208) {
         parse_display:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &display_)));
          set_has_display();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(216)) goto parse_shoporder;
        break;
      }

      // optional uint32 shoporder = 27;
      case 27: {
        if (tag == 216) {
         parse_shoporder:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shoporder_)));
          set_has_shoporder();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(224)) goto parse_ifmsg;
        break;
      }

      // optional uint32 ifmsg = 28;
      case 28: {
        if (tag == 224) {
         parse_ifmsg:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ifmsg_)));
          set_has_ifmsg();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(232)) goto parse_adddate;
        break;
      }

      // optional uint32 adddate = 29;
      case 29: {
        if (tag == 232) {
         parse_adddate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &adddate_)));
          set_has_adddate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(240)) goto parse_removedate;
        break;
      }

      // optional uint32 removedate = 30;
      case 30: {
        if (tag == 240) {
         parse_removedate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &removedate_)));
          set_has_removedate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(248)) goto parse_locktype;
        break;
      }

      // optional .Cmd.EShopLockType locktype = 31 [default = ESHOPLOCKTYPE_MIN];
      case 31: {
        if (tag == 248) {
         parse_locktype:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::EShopLockType_IsValid(value)) {
            set_locktype(static_cast< ::Cmd::EShopLockType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(31, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(258)) goto parse_lockarg;
        break;
      }

      // optional string lockarg = 32;
      case 32: {
        if (tag == 258) {
         parse_lockarg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lockarg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lockarg().data(), this->lockarg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "lockarg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(264)) goto parse_discountmax;
        break;
      }

      // optional uint32 discountmax = 33;
      case 33: {
        if (tag == 264) {
         parse_discountmax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &discountmax_)));
          set_has_discountmax();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(272)) goto parse_actdiscount;
        break;
      }

      // optional uint32 actdiscount = 34;
      case 34: {
        if (tag == 272) {
         parse_actdiscount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &actdiscount_)));
          set_has_actdiscount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(280)) goto parse_producenum;
        break;
      }

      // optional uint32 producenum = 35;
      case 35: {
        if (tag == 280) {
         parse_producenum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &producenum_)));
          set_has_producenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(288)) goto parse_nextgoodsid;
        break;
      }

      // optional uint32 nextgoodsid = 36;
      case 36: {
        if (tag == 288) {
         parse_nextgoodsid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nextgoodsid_)));
          set_has_nextgoodsid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(296)) goto parse_source;
        break;
      }

      // optional .Cmd.EShopSource source = 37 [default = ESHOPSOURCE_USER];
      case 37: {
        if (tag == 296) {
         parse_source:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::EShopSource_IsValid(value)) {
            set_source(static_cast< ::Cmd::EShopSource >(value));
          } else {
            mutable_unknown_fields()->AddVarint(37, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(304)) goto parse_clothcolorid;
        break;
      }

      // optional uint32 clothcolorid = 38 [default = 0];
      case 38: {
        if (tag == 304) {
         parse_clothcolorid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &clothcolorid_)));
          set_has_clothcolorid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(312)) goto parse_clothcolorids;
        break;
      }

      // repeated uint32 clothcolorids = 39;
      case 39: {
        if (tag == 312) {
         parse_clothcolorids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 312, input, this->mutable_clothcolorids())));
        } else if (tag == 314) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_clothcolorids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(312)) goto parse_clothcolorids;
        if (input->ExpectTag(320)) goto parse_itemtype;
        break;
      }

      // optional uint32 itemtype = 40 [default = 0];
      case 40: {
        if (tag == 320) {
         parse_itemtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemtype_)));
          set_has_itemtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(330)) goto parse_presentation;
        break;
      }

      // optional .Cmd.Presentation presentation = 41;
      case 41: {
        if (tag == 330) {
         parse_presentation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_presentation()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.ShopItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.ShopItem)
  return false;
#undef DO_
}

void ShopItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.ShopItem)
  // optional uint32 id = 1 [default = 0];
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 lv = 2 [default = 0];
  if (has_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->lv(), output);
  }

  // optional uint32 moneyid = 3 [default = 0];
  if (has_moneyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->moneyid(), output);
  }

  // optional uint32 moneycount = 4 [default = 0];
  if (has_moneycount()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->moneycount(), output);
  }

  // optional uint32 moneyid2 = 5;
  if (has_moneyid2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->moneyid2(), output);
  }

  // optional uint32 moneycount2 = 6;
  if (has_moneycount2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->moneycount2(), output);
  }

  // optional uint32 starttime = 7 [default = 0];
  if (has_starttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->starttime(), output);
  }

  // optional uint32 endtime = 8 [default = 0];
  if (has_endtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->endtime(), output);
  }

  // optional uint32 discount = 9 [default = 0];
  if (has_discount()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->discount(), output);
  }

  // optional uint32 maxcount = 10 [default = 0];
  if (has_maxcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->maxcount(), output);
  }

  // optional uint32 shopid = 11 [default = 0];
  if (has_shopid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->shopid(), output);
  }

  // optional uint32 screen = 12 [default = 0];
  if (has_screen()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->screen(), output);
  }

  // optional uint32 itemid = 13;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->itemid(), output);
  }

  // optional uint32 skillid = 14;
  if (has_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->skillid(), output);
  }

  // optional uint32 haircolorid = 16;
  if (has_haircolorid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->haircolorid(), output);
  }

  // optional uint32 num = 17;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->num(), output);
  }

  // optional uint32 menuid = 18 [default = 0];
  if (has_menuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->menuid(), output);
  }

  // optional uint32 shoptype = 19 [default = 0];
  if (has_shoptype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->shoptype(), output);
  }

  // repeated .Cmd.EProfession profession = 20;
  for (int i = 0; i < this->profession_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      20, this->profession(i), output);
  }

  // optional .Cmd.EShopLimitType limittype = 21 [default = ESHOPLIMITTYPE_MIN];
  if (has_limittype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      21, this->limittype(), output);
  }

  // optional string des = 22;
  if (has_des()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->des().data(), this->des().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "des");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->des(), output);
  }

  // optional string levdes = 23;
  if (has_levdes()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->levdes().data(), this->levdes().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "levdes");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->levdes(), output);
  }

  // optional uint32 business = 24;
  if (has_business()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->business(), output);
  }

  // optional uint32 precost = 25;
  if (has_precost()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(25, this->precost(), output);
  }

  // optional uint32 display = 26 [default = 0];
  if (has_display()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(26, this->display(), output);
  }

  // optional uint32 shoporder = 27;
  if (has_shoporder()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(27, this->shoporder(), output);
  }

  // optional uint32 ifmsg = 28;
  if (has_ifmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(28, this->ifmsg(), output);
  }

  // optional uint32 adddate = 29;
  if (has_adddate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(29, this->adddate(), output);
  }

  // optional uint32 removedate = 30;
  if (has_removedate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(30, this->removedate(), output);
  }

  // optional .Cmd.EShopLockType locktype = 31 [default = ESHOPLOCKTYPE_MIN];
  if (has_locktype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      31, this->locktype(), output);
  }

  // optional string lockarg = 32;
  if (has_lockarg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lockarg().data(), this->lockarg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lockarg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      32, this->lockarg(), output);
  }

  // optional uint32 discountmax = 33;
  if (has_discountmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(33, this->discountmax(), output);
  }

  // optional uint32 actdiscount = 34;
  if (has_actdiscount()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(34, this->actdiscount(), output);
  }

  // optional uint32 producenum = 35;
  if (has_producenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(35, this->producenum(), output);
  }

  // optional uint32 nextgoodsid = 36;
  if (has_nextgoodsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(36, this->nextgoodsid(), output);
  }

  // optional .Cmd.EShopSource source = 37 [default = ESHOPSOURCE_USER];
  if (has_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      37, this->source(), output);
  }

  // optional uint32 clothcolorid = 38 [default = 0];
  if (has_clothcolorid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(38, this->clothcolorid(), output);
  }

  // repeated uint32 clothcolorids = 39;
  for (int i = 0; i < this->clothcolorids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      39, this->clothcolorids(i), output);
  }

  // optional uint32 itemtype = 40 [default = 0];
  if (has_itemtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(40, this->itemtype(), output);
  }

  // optional .Cmd.Presentation presentation = 41;
  if (has_presentation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      41, this->presentation(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.ShopItem)
}

::google::protobuf::uint8* ShopItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.ShopItem)
  // optional uint32 id = 1 [default = 0];
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 lv = 2 [default = 0];
  if (has_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->lv(), target);
  }

  // optional uint32 moneyid = 3 [default = 0];
  if (has_moneyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->moneyid(), target);
  }

  // optional uint32 moneycount = 4 [default = 0];
  if (has_moneycount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->moneycount(), target);
  }

  // optional uint32 moneyid2 = 5;
  if (has_moneyid2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->moneyid2(), target);
  }

  // optional uint32 moneycount2 = 6;
  if (has_moneycount2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->moneycount2(), target);
  }

  // optional uint32 starttime = 7 [default = 0];
  if (has_starttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->starttime(), target);
  }

  // optional uint32 endtime = 8 [default = 0];
  if (has_endtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->endtime(), target);
  }

  // optional uint32 discount = 9 [default = 0];
  if (has_discount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->discount(), target);
  }

  // optional uint32 maxcount = 10 [default = 0];
  if (has_maxcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->maxcount(), target);
  }

  // optional uint32 shopid = 11 [default = 0];
  if (has_shopid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->shopid(), target);
  }

  // optional uint32 screen = 12 [default = 0];
  if (has_screen()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->screen(), target);
  }

  // optional uint32 itemid = 13;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->itemid(), target);
  }

  // optional uint32 skillid = 14;
  if (has_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->skillid(), target);
  }

  // optional uint32 haircolorid = 16;
  if (has_haircolorid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->haircolorid(), target);
  }

  // optional uint32 num = 17;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->num(), target);
  }

  // optional uint32 menuid = 18 [default = 0];
  if (has_menuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->menuid(), target);
  }

  // optional uint32 shoptype = 19 [default = 0];
  if (has_shoptype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->shoptype(), target);
  }

  // repeated .Cmd.EProfession profession = 20;
  for (int i = 0; i < this->profession_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      20, this->profession(i), target);
  }

  // optional .Cmd.EShopLimitType limittype = 21 [default = ESHOPLIMITTYPE_MIN];
  if (has_limittype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      21, this->limittype(), target);
  }

  // optional string des = 22;
  if (has_des()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->des().data(), this->des().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "des");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->des(), target);
  }

  // optional string levdes = 23;
  if (has_levdes()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->levdes().data(), this->levdes().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "levdes");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->levdes(), target);
  }

  // optional uint32 business = 24;
  if (has_business()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->business(), target);
  }

  // optional uint32 precost = 25;
  if (has_precost()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(25, this->precost(), target);
  }

  // optional uint32 display = 26 [default = 0];
  if (has_display()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(26, this->display(), target);
  }

  // optional uint32 shoporder = 27;
  if (has_shoporder()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(27, this->shoporder(), target);
  }

  // optional uint32 ifmsg = 28;
  if (has_ifmsg()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(28, this->ifmsg(), target);
  }

  // optional uint32 adddate = 29;
  if (has_adddate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(29, this->adddate(), target);
  }

  // optional uint32 removedate = 30;
  if (has_removedate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(30, this->removedate(), target);
  }

  // optional .Cmd.EShopLockType locktype = 31 [default = ESHOPLOCKTYPE_MIN];
  if (has_locktype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      31, this->locktype(), target);
  }

  // optional string lockarg = 32;
  if (has_lockarg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lockarg().data(), this->lockarg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lockarg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        32, this->lockarg(), target);
  }

  // optional uint32 discountmax = 33;
  if (has_discountmax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(33, this->discountmax(), target);
  }

  // optional uint32 actdiscount = 34;
  if (has_actdiscount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(34, this->actdiscount(), target);
  }

  // optional uint32 producenum = 35;
  if (has_producenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(35, this->producenum(), target);
  }

  // optional uint32 nextgoodsid = 36;
  if (has_nextgoodsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(36, this->nextgoodsid(), target);
  }

  // optional .Cmd.EShopSource source = 37 [default = ESHOPSOURCE_USER];
  if (has_source()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      37, this->source(), target);
  }

  // optional uint32 clothcolorid = 38 [default = 0];
  if (has_clothcolorid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(38, this->clothcolorid(), target);
  }

  // repeated uint32 clothcolorids = 39;
  for (int i = 0; i < this->clothcolorids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(39, this->clothcolorids(i), target);
  }

  // optional uint32 itemtype = 40 [default = 0];
  if (has_itemtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(40, this->itemtype(), target);
  }

  // optional .Cmd.Presentation presentation = 41;
  if (has_presentation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        41, this->presentation(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.ShopItem)
  return target;
}

int ShopItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 id = 1 [default = 0];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 lv = 2 [default = 0];
    if (has_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lv());
    }

    // optional uint32 moneyid = 3 [default = 0];
    if (has_moneyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->moneyid());
    }

    // optional uint32 moneycount = 4 [default = 0];
    if (has_moneycount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->moneycount());
    }

    // optional uint32 moneyid2 = 5;
    if (has_moneyid2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->moneyid2());
    }

    // optional uint32 moneycount2 = 6;
    if (has_moneycount2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->moneycount2());
    }

    // optional uint32 starttime = 7 [default = 0];
    if (has_starttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->starttime());
    }

    // optional uint32 endtime = 8 [default = 0];
    if (has_endtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->endtime());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 discount = 9 [default = 0];
    if (has_discount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->discount());
    }

    // optional uint32 maxcount = 10 [default = 0];
    if (has_maxcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maxcount());
    }

    // optional uint32 shopid = 11 [default = 0];
    if (has_shopid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shopid());
    }

    // optional uint32 screen = 12 [default = 0];
    if (has_screen()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->screen());
    }

    // optional uint32 itemid = 13;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

    // optional uint32 skillid = 14;
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->skillid());
    }

    // optional uint32 haircolorid = 16;
    if (has_haircolorid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->haircolorid());
    }

    // optional uint32 num = 17;
    if (has_num()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional uint32 menuid = 18 [default = 0];
    if (has_menuid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->menuid());
    }

    // optional uint32 shoptype = 19 [default = 0];
    if (has_shoptype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shoptype());
    }

    // optional .Cmd.EShopLimitType limittype = 21 [default = ESHOPLIMITTYPE_MIN];
    if (has_limittype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->limittype());
    }

    // optional string des = 22;
    if (has_des()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->des());
    }

    // optional string levdes = 23;
    if (has_levdes()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->levdes());
    }

    // optional uint32 business = 24;
    if (has_business()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->business());
    }

    // optional uint32 precost = 25;
    if (has_precost()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->precost());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional uint32 display = 26 [default = 0];
    if (has_display()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->display());
    }

    // optional uint32 shoporder = 27;
    if (has_shoporder()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shoporder());
    }

    // optional uint32 ifmsg = 28;
    if (has_ifmsg()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ifmsg());
    }

    // optional uint32 adddate = 29;
    if (has_adddate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->adddate());
    }

    // optional uint32 removedate = 30;
    if (has_removedate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->removedate());
    }

    // optional .Cmd.EShopSource source = 37 [default = ESHOPSOURCE_USER];
    if (has_source()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->source());
    }

    // optional .Cmd.EShopLockType locktype = 31 [default = ESHOPLOCKTYPE_MIN];
    if (has_locktype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->locktype());
    }

    // optional string lockarg = 32;
    if (has_lockarg()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lockarg());
    }

  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    // optional uint32 discountmax = 33;
    if (has_discountmax()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->discountmax());
    }

    // optional uint32 actdiscount = 34;
    if (has_actdiscount()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->actdiscount());
    }

    // optional uint32 producenum = 35;
    if (has_producenum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->producenum());
    }

    // optional uint32 nextgoodsid = 36;
    if (has_nextgoodsid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->nextgoodsid());
    }

    // optional uint32 clothcolorid = 38 [default = 0];
    if (has_clothcolorid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->clothcolorid());
    }

    // optional uint32 itemtype = 40 [default = 0];
    if (has_itemtype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemtype());
    }

    // optional .Cmd.Presentation presentation = 41;
    if (has_presentation()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->presentation());
    }

  }
  // repeated .Cmd.EProfession profession = 20;
  {
    int data_size = 0;
    for (int i = 0; i < this->profession_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->profession(i));
    }
    total_size += 2 * this->profession_size() + data_size;
  }

  // repeated uint32 clothcolorids = 39;
  {
    int data_size = 0;
    for (int i = 0; i < this->clothcolorids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->clothcolorids(i));
    }
    total_size += 2 * this->clothcolorids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShopItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ShopItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ShopItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ShopItem::MergeFrom(const ShopItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  profession_.MergeFrom(from.profession_);
  clothcolorids_.MergeFrom(from.clothcolorids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_lv()) {
      set_lv(from.lv());
    }
    if (from.has_moneyid()) {
      set_moneyid(from.moneyid());
    }
    if (from.has_moneycount()) {
      set_moneycount(from.moneycount());
    }
    if (from.has_moneyid2()) {
      set_moneyid2(from.moneyid2());
    }
    if (from.has_moneycount2()) {
      set_moneycount2(from.moneycount2());
    }
    if (from.has_starttime()) {
      set_starttime(from.starttime());
    }
    if (from.has_endtime()) {
      set_endtime(from.endtime());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_discount()) {
      set_discount(from.discount());
    }
    if (from.has_maxcount()) {
      set_maxcount(from.maxcount());
    }
    if (from.has_shopid()) {
      set_shopid(from.shopid());
    }
    if (from.has_screen()) {
      set_screen(from.screen());
    }
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_skillid()) {
      set_skillid(from.skillid());
    }
    if (from.has_haircolorid()) {
      set_haircolorid(from.haircolorid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_menuid()) {
      set_menuid(from.menuid());
    }
    if (from.has_shoptype()) {
      set_shoptype(from.shoptype());
    }
    if (from.has_limittype()) {
      set_limittype(from.limittype());
    }
    if (from.has_des()) {
      set_des(from.des());
    }
    if (from.has_levdes()) {
      set_levdes(from.levdes());
    }
    if (from.has_business()) {
      set_business(from.business());
    }
    if (from.has_precost()) {
      set_precost(from.precost());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_display()) {
      set_display(from.display());
    }
    if (from.has_shoporder()) {
      set_shoporder(from.shoporder());
    }
    if (from.has_ifmsg()) {
      set_ifmsg(from.ifmsg());
    }
    if (from.has_adddate()) {
      set_adddate(from.adddate());
    }
    if (from.has_removedate()) {
      set_removedate(from.removedate());
    }
    if (from.has_source()) {
      set_source(from.source());
    }
    if (from.has_locktype()) {
      set_locktype(from.locktype());
    }
    if (from.has_lockarg()) {
      set_lockarg(from.lockarg());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from.has_discountmax()) {
      set_discountmax(from.discountmax());
    }
    if (from.has_actdiscount()) {
      set_actdiscount(from.actdiscount());
    }
    if (from.has_producenum()) {
      set_producenum(from.producenum());
    }
    if (from.has_nextgoodsid()) {
      set_nextgoodsid(from.nextgoodsid());
    }
    if (from.has_clothcolorid()) {
      set_clothcolorid(from.clothcolorid());
    }
    if (from.has_itemtype()) {
      set_itemtype(from.itemtype());
    }
    if (from.has_presentation()) {
      mutable_presentation()->::Cmd::Presentation::MergeFrom(from.presentation());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ShopItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShopItem::CopyFrom(const ShopItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShopItem::IsInitialized() const {

  return true;
}

void ShopItem::Swap(ShopItem* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(lv_, other->lv_);
    std::swap(moneyid_, other->moneyid_);
    std::swap(moneycount_, other->moneycount_);
    std::swap(moneyid2_, other->moneyid2_);
    std::swap(moneycount2_, other->moneycount2_);
    std::swap(starttime_, other->starttime_);
    std::swap(endtime_, other->endtime_);
    std::swap(discount_, other->discount_);
    std::swap(maxcount_, other->maxcount_);
    std::swap(shopid_, other->shopid_);
    std::swap(screen_, other->screen_);
    std::swap(itemid_, other->itemid_);
    std::swap(skillid_, other->skillid_);
    std::swap(haircolorid_, other->haircolorid_);
    std::swap(num_, other->num_);
    std::swap(menuid_, other->menuid_);
    std::swap(shoptype_, other->shoptype_);
    profession_.Swap(&other->profession_);
    std::swap(limittype_, other->limittype_);
    std::swap(des_, other->des_);
    std::swap(levdes_, other->levdes_);
    std::swap(business_, other->business_);
    std::swap(precost_, other->precost_);
    std::swap(display_, other->display_);
    std::swap(shoporder_, other->shoporder_);
    std::swap(ifmsg_, other->ifmsg_);
    std::swap(adddate_, other->adddate_);
    std::swap(removedate_, other->removedate_);
    std::swap(source_, other->source_);
    std::swap(locktype_, other->locktype_);
    std::swap(lockarg_, other->lockarg_);
    std::swap(discountmax_, other->discountmax_);
    std::swap(actdiscount_, other->actdiscount_);
    std::swap(producenum_, other->producenum_);
    std::swap(nextgoodsid_, other->nextgoodsid_);
    std::swap(clothcolorid_, other->clothcolorid_);
    clothcolorids_.Swap(&other->clothcolorids_);
    std::swap(itemtype_, other->itemtype_);
    std::swap(presentation_, other->presentation_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ShopItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShopItem_descriptor_;
  metadata.reflection = ShopItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuyShopItem::kCmdFieldNumber;
const int BuyShopItem::kParamFieldNumber;
const int BuyShopItem::kIdFieldNumber;
const int BuyShopItem::kCountFieldNumber;
const int BuyShopItem::kPriceFieldNumber;
const int BuyShopItem::kPrice2FieldNumber;
const int BuyShopItem::kSuccessFieldNumber;
#endif  // !_MSC_VER

BuyShopItem::BuyShopItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.BuyShopItem)
}

void BuyShopItem::InitAsDefaultInstance() {
}

BuyShopItem::BuyShopItem(const BuyShopItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.BuyShopItem)
}

void BuyShopItem::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 52;
  param_ = 1;
  id_ = 0u;
  count_ = 0u;
  price_ = 0u;
  price2_ = 0u;
  success_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuyShopItem::~BuyShopItem() {
  // @@protoc_insertion_point(destructor:Cmd.BuyShopItem)
  SharedDtor();
}

void BuyShopItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuyShopItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuyShopItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuyShopItem_descriptor_;
}

const BuyShopItem& BuyShopItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SessionShop_2eproto();
  return *default_instance_;
}

BuyShopItem* BuyShopItem::default_instance_ = NULL;

BuyShopItem* BuyShopItem::New() const {
  return new BuyShopItem;
}

void BuyShopItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuyShopItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(id_, success_);
    cmd_ = 52;
    param_ = 1;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuyShopItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.BuyShopItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::Command_IsValid(value)) {
            set_cmd(static_cast< ::Cmd::Command >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_param;
        break;
      }

      // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_BUYITEM];
      case 2: {
        if (tag == 16) {
         parse_param:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::ShopParam_IsValid(value)) {
            set_param(static_cast< ::Cmd::ShopParam >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_id;
        break;
      }

      // optional uint32 id = 3 [default = 0];
      case 3: {
        if (tag == 24) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_count;
        break;
      }

      // optional uint32 count = 4 [default = 0];
      case 4: {
        if (tag == 32) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_price;
        break;
      }

      // optional uint32 price = 5 [default = 0];
      case 5: {
        if (tag == 40) {
         parse_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_)));
          set_has_price();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_price2;
        break;
      }

      // optional uint32 price2 = 6 [default = 0];
      case 6: {
        if (tag == 48) {
         parse_price2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price2_)));
          set_has_price2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_success;
        break;
      }

      // optional bool success = 7;
      case 7: {
        if (tag == 56) {
         parse_success:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
          set_has_success();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.BuyShopItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.BuyShopItem)
  return false;
#undef DO_
}

void BuyShopItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.BuyShopItem)
  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_BUYITEM];
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->param(), output);
  }

  // optional uint32 id = 3 [default = 0];
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->id(), output);
  }

  // optional uint32 count = 4 [default = 0];
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->count(), output);
  }

  // optional uint32 price = 5 [default = 0];
  if (has_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->price(), output);
  }

  // optional uint32 price2 = 6 [default = 0];
  if (has_price2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->price2(), output);
  }

  // optional bool success = 7;
  if (has_success()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->success(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.BuyShopItem)
}

::google::protobuf::uint8* BuyShopItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.BuyShopItem)
  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_BUYITEM];
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->param(), target);
  }

  // optional uint32 id = 3 [default = 0];
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->id(), target);
  }

  // optional uint32 count = 4 [default = 0];
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->count(), target);
  }

  // optional uint32 price = 5 [default = 0];
  if (has_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->price(), target);
  }

  // optional uint32 price2 = 6 [default = 0];
  if (has_price2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->price2(), target);
  }

  // optional bool success = 7;
  if (has_success()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->success(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.BuyShopItem)
  return target;
}

int BuyShopItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
    }

    // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_BUYITEM];
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->param());
    }

    // optional uint32 id = 3 [default = 0];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 count = 4 [default = 0];
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

    // optional uint32 price = 5 [default = 0];
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->price());
    }

    // optional uint32 price2 = 6 [default = 0];
    if (has_price2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->price2());
    }

    // optional bool success = 7;
    if (has_success()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuyShopItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuyShopItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuyShopItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuyShopItem::MergeFrom(const BuyShopItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
    if (from.has_price()) {
      set_price(from.price());
    }
    if (from.has_price2()) {
      set_price2(from.price2());
    }
    if (from.has_success()) {
      set_success(from.success());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuyShopItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuyShopItem::CopyFrom(const BuyShopItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyShopItem::IsInitialized() const {

  return true;
}

void BuyShopItem::Swap(BuyShopItem* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(param_, other->param_);
    std::swap(id_, other->id_);
    std::swap(count_, other->count_);
    std::swap(price_, other->price_);
    std::swap(price2_, other->price2_);
    std::swap(success_, other->success_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuyShopItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuyShopItem_descriptor_;
  metadata.reflection = BuyShopItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int QueryShopConfigCmd::kCmdFieldNumber;
const int QueryShopConfigCmd::kParamFieldNumber;
const int QueryShopConfigCmd::kTypeFieldNumber;
const int QueryShopConfigCmd::kShopidFieldNumber;
const int QueryShopConfigCmd::kGoodsFieldNumber;
const int QueryShopConfigCmd::kScreenFieldNumber;
#endif  // !_MSC_VER

QueryShopConfigCmd::QueryShopConfigCmd()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.QueryShopConfigCmd)
}

void QueryShopConfigCmd::InitAsDefaultInstance() {
}

QueryShopConfigCmd::QueryShopConfigCmd(const QueryShopConfigCmd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.QueryShopConfigCmd)
}

void QueryShopConfigCmd::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 52;
  param_ = 2;
  type_ = 0u;
  shopid_ = 0u;
  screen_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryShopConfigCmd::~QueryShopConfigCmd() {
  // @@protoc_insertion_point(destructor:Cmd.QueryShopConfigCmd)
  SharedDtor();
}

void QueryShopConfigCmd::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QueryShopConfigCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryShopConfigCmd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryShopConfigCmd_descriptor_;
}

const QueryShopConfigCmd& QueryShopConfigCmd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SessionShop_2eproto();
  return *default_instance_;
}

QueryShopConfigCmd* QueryShopConfigCmd::default_instance_ = NULL;

QueryShopConfigCmd* QueryShopConfigCmd::New() const {
  return new QueryShopConfigCmd;
}

void QueryShopConfigCmd::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<QueryShopConfigCmd*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 47) {
    ZR_(type_, shopid_);
    cmd_ = 52;
    param_ = 2;
    screen_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  goods_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QueryShopConfigCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.QueryShopConfigCmd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::Command_IsValid(value)) {
            set_cmd(static_cast< ::Cmd::Command >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_param;
        break;
      }

      // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_QUERY_SHOP_CONFIG];
      case 2: {
        if (tag == 16) {
         parse_param:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::ShopParam_IsValid(value)) {
            set_param(static_cast< ::Cmd::ShopParam >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // optional uint32 type = 3;
      case 3: {
        if (tag == 24) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_shopid;
        break;
      }

      // optional uint32 shopid = 4;
      case 4: {
        if (tag == 32) {
         parse_shopid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shopid_)));
          set_has_shopid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_goods;
        break;
      }

      // repeated .Cmd.ShopItem goods = 5;
      case 5: {
        if (tag == 42) {
         parse_goods:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goods()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_goods;
        if (input->ExpectTag(48)) goto parse_screen;
        break;
      }

      // optional uint32 screen = 6;
      case 6: {
        if (tag == 48) {
         parse_screen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &screen_)));
          set_has_screen();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.QueryShopConfigCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.QueryShopConfigCmd)
  return false;
#undef DO_
}

void QueryShopConfigCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.QueryShopConfigCmd)
  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_QUERY_SHOP_CONFIG];
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->param(), output);
  }

  // optional uint32 type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->type(), output);
  }

  // optional uint32 shopid = 4;
  if (has_shopid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->shopid(), output);
  }

  // repeated .Cmd.ShopItem goods = 5;
  for (int i = 0; i < this->goods_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->goods(i), output);
  }

  // optional uint32 screen = 6;
  if (has_screen()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->screen(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.QueryShopConfigCmd)
}

::google::protobuf::uint8* QueryShopConfigCmd::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.QueryShopConfigCmd)
  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_QUERY_SHOP_CONFIG];
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->param(), target);
  }

  // optional uint32 type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->type(), target);
  }

  // optional uint32 shopid = 4;
  if (has_shopid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->shopid(), target);
  }

  // repeated .Cmd.ShopItem goods = 5;
  for (int i = 0; i < this->goods_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->goods(i), target);
  }

  // optional uint32 screen = 6;
  if (has_screen()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->screen(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.QueryShopConfigCmd)
  return target;
}

int QueryShopConfigCmd::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
    }

    // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_QUERY_SHOP_CONFIG];
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->param());
    }

    // optional uint32 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // optional uint32 shopid = 4;
    if (has_shopid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shopid());
    }

    // optional uint32 screen = 6;
    if (has_screen()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->screen());
    }

  }
  // repeated .Cmd.ShopItem goods = 5;
  total_size += 1 * this->goods_size();
  for (int i = 0; i < this->goods_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goods(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryShopConfigCmd::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QueryShopConfigCmd* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QueryShopConfigCmd*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QueryShopConfigCmd::MergeFrom(const QueryShopConfigCmd& from) {
  GOOGLE_CHECK_NE(&from, this);
  goods_.MergeFrom(from.goods_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_shopid()) {
      set_shopid(from.shopid());
    }
    if (from.has_screen()) {
      set_screen(from.screen());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QueryShopConfigCmd::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryShopConfigCmd::CopyFrom(const QueryShopConfigCmd& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryShopConfigCmd::IsInitialized() const {

  return true;
}

void QueryShopConfigCmd::Swap(QueryShopConfigCmd* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(param_, other->param_);
    std::swap(type_, other->type_);
    std::swap(shopid_, other->shopid_);
    goods_.Swap(&other->goods_);
    std::swap(screen_, other->screen_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QueryShopConfigCmd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryShopConfigCmd_descriptor_;
  metadata.reflection = QueryShopConfigCmd_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int QueryQuickBuyConfigCmd::kCmdFieldNumber;
const int QueryQuickBuyConfigCmd::kParamFieldNumber;
const int QueryQuickBuyConfigCmd::kItemidsFieldNumber;
const int QueryQuickBuyConfigCmd::kGoodsFieldNumber;
#endif  // !_MSC_VER

QueryQuickBuyConfigCmd::QueryQuickBuyConfigCmd()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.QueryQuickBuyConfigCmd)
}

void QueryQuickBuyConfigCmd::InitAsDefaultInstance() {
}

QueryQuickBuyConfigCmd::QueryQuickBuyConfigCmd(const QueryQuickBuyConfigCmd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.QueryQuickBuyConfigCmd)
}

void QueryQuickBuyConfigCmd::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 52;
  param_ = 3;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryQuickBuyConfigCmd::~QueryQuickBuyConfigCmd() {
  // @@protoc_insertion_point(destructor:Cmd.QueryQuickBuyConfigCmd)
  SharedDtor();
}

void QueryQuickBuyConfigCmd::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QueryQuickBuyConfigCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryQuickBuyConfigCmd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryQuickBuyConfigCmd_descriptor_;
}

const QueryQuickBuyConfigCmd& QueryQuickBuyConfigCmd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SessionShop_2eproto();
  return *default_instance_;
}

QueryQuickBuyConfigCmd* QueryQuickBuyConfigCmd::default_instance_ = NULL;

QueryQuickBuyConfigCmd* QueryQuickBuyConfigCmd::New() const {
  return new QueryQuickBuyConfigCmd;
}

void QueryQuickBuyConfigCmd::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    cmd_ = 52;
    param_ = 3;
  }
  itemids_.Clear();
  goods_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QueryQuickBuyConfigCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.QueryQuickBuyConfigCmd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::Command_IsValid(value)) {
            set_cmd(static_cast< ::Cmd::Command >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_param;
        break;
      }

      // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_QUICKBUY_SHOP_CONFIG];
      case 2: {
        if (tag == 16) {
         parse_param:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::ShopParam_IsValid(value)) {
            set_param(static_cast< ::Cmd::ShopParam >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_itemids;
        break;
      }

      // repeated uint32 itemids = 3;
      case 3: {
        if (tag == 24) {
         parse_itemids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_itemids())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_itemids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_itemids;
        if (input->ExpectTag(34)) goto parse_goods;
        break;
      }

      // repeated .Cmd.ShopItem goods = 4;
      case 4: {
        if (tag == 34) {
         parse_goods:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goods()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_goods;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.QueryQuickBuyConfigCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.QueryQuickBuyConfigCmd)
  return false;
#undef DO_
}

void QueryQuickBuyConfigCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.QueryQuickBuyConfigCmd)
  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_QUICKBUY_SHOP_CONFIG];
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->param(), output);
  }

  // repeated uint32 itemids = 3;
  for (int i = 0; i < this->itemids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->itemids(i), output);
  }

  // repeated .Cmd.ShopItem goods = 4;
  for (int i = 0; i < this->goods_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->goods(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.QueryQuickBuyConfigCmd)
}

::google::protobuf::uint8* QueryQuickBuyConfigCmd::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.QueryQuickBuyConfigCmd)
  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_QUICKBUY_SHOP_CONFIG];
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->param(), target);
  }

  // repeated uint32 itemids = 3;
  for (int i = 0; i < this->itemids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->itemids(i), target);
  }

  // repeated .Cmd.ShopItem goods = 4;
  for (int i = 0; i < this->goods_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->goods(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.QueryQuickBuyConfigCmd)
  return target;
}

int QueryQuickBuyConfigCmd::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
    }

    // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_QUICKBUY_SHOP_CONFIG];
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->param());
    }

  }
  // repeated uint32 itemids = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->itemids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->itemids(i));
    }
    total_size += 1 * this->itemids_size() + data_size;
  }

  // repeated .Cmd.ShopItem goods = 4;
  total_size += 1 * this->goods_size();
  for (int i = 0; i < this->goods_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goods(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryQuickBuyConfigCmd::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QueryQuickBuyConfigCmd* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QueryQuickBuyConfigCmd*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QueryQuickBuyConfigCmd::MergeFrom(const QueryQuickBuyConfigCmd& from) {
  GOOGLE_CHECK_NE(&from, this);
  itemids_.MergeFrom(from.itemids_);
  goods_.MergeFrom(from.goods_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QueryQuickBuyConfigCmd::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryQuickBuyConfigCmd::CopyFrom(const QueryQuickBuyConfigCmd& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryQuickBuyConfigCmd::IsInitialized() const {

  return true;
}

void QueryQuickBuyConfigCmd::Swap(QueryQuickBuyConfigCmd* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(param_, other->param_);
    itemids_.Swap(&other->itemids_);
    goods_.Swap(&other->goods_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QueryQuickBuyConfigCmd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryQuickBuyConfigCmd_descriptor_;
  metadata.reflection = QueryQuickBuyConfigCmd_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ShopSoldItem::kIdFieldNumber;
const int ShopSoldItem::kCountFieldNumber;
const int ShopSoldItem::kShopidFieldNumber;
const int ShopSoldItem::kTypeFieldNumber;
#endif  // !_MSC_VER

ShopSoldItem::ShopSoldItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.ShopSoldItem)
}

void ShopSoldItem::InitAsDefaultInstance() {
}

ShopSoldItem::ShopSoldItem(const ShopSoldItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.ShopSoldItem)
}

void ShopSoldItem::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  count_ = 0u;
  shopid_ = 0u;
  type_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ShopSoldItem::~ShopSoldItem() {
  // @@protoc_insertion_point(destructor:Cmd.ShopSoldItem)
  SharedDtor();
}

void ShopSoldItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ShopSoldItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShopSoldItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShopSoldItem_descriptor_;
}

const ShopSoldItem& ShopSoldItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SessionShop_2eproto();
  return *default_instance_;
}

ShopSoldItem* ShopSoldItem::default_instance_ = NULL;

ShopSoldItem* ShopSoldItem::New() const {
  return new ShopSoldItem;
}

void ShopSoldItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ShopSoldItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, type_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ShopSoldItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.ShopSoldItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // optional uint32 count = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_shopid;
        break;
      }

      // optional uint32 shopid = 3;
      case 3: {
        if (tag == 24) {
         parse_shopid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shopid_)));
          set_has_shopid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_type;
        break;
      }

      // optional uint32 type = 4;
      case 4: {
        if (tag == 32) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.ShopSoldItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.ShopSoldItem)
  return false;
#undef DO_
}

void ShopSoldItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.ShopSoldItem)
  // optional uint32 id = 1 [default = 0];
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 count = 2 [default = 0];
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  // optional uint32 shopid = 3;
  if (has_shopid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->shopid(), output);
  }

  // optional uint32 type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.ShopSoldItem)
}

::google::protobuf::uint8* ShopSoldItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.ShopSoldItem)
  // optional uint32 id = 1 [default = 0];
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 count = 2 [default = 0];
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  // optional uint32 shopid = 3;
  if (has_shopid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->shopid(), target);
  }

  // optional uint32 type = 4;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.ShopSoldItem)
  return target;
}

int ShopSoldItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 id = 1 [default = 0];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 count = 2 [default = 0];
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

    // optional uint32 shopid = 3;
    if (has_shopid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shopid());
    }

    // optional uint32 type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShopSoldItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ShopSoldItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ShopSoldItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ShopSoldItem::MergeFrom(const ShopSoldItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
    if (from.has_shopid()) {
      set_shopid(from.shopid());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ShopSoldItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShopSoldItem::CopyFrom(const ShopSoldItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShopSoldItem::IsInitialized() const {

  return true;
}

void ShopSoldItem::Swap(ShopSoldItem* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(count_, other->count_);
    std::swap(shopid_, other->shopid_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ShopSoldItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShopSoldItem_descriptor_;
  metadata.reflection = ShopSoldItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int QueryShopSoldCountCmd::kCmdFieldNumber;
const int QueryShopSoldCountCmd::kParamFieldNumber;
const int QueryShopSoldCountCmd::kItemsFieldNumber;
#endif  // !_MSC_VER

QueryShopSoldCountCmd::QueryShopSoldCountCmd()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.QueryShopSoldCountCmd)
}

void QueryShopSoldCountCmd::InitAsDefaultInstance() {
}

QueryShopSoldCountCmd::QueryShopSoldCountCmd(const QueryShopSoldCountCmd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.QueryShopSoldCountCmd)
}

void QueryShopSoldCountCmd::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 52;
  param_ = 4;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryShopSoldCountCmd::~QueryShopSoldCountCmd() {
  // @@protoc_insertion_point(destructor:Cmd.QueryShopSoldCountCmd)
  SharedDtor();
}

void QueryShopSoldCountCmd::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QueryShopSoldCountCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryShopSoldCountCmd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryShopSoldCountCmd_descriptor_;
}

const QueryShopSoldCountCmd& QueryShopSoldCountCmd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SessionShop_2eproto();
  return *default_instance_;
}

QueryShopSoldCountCmd* QueryShopSoldCountCmd::default_instance_ = NULL;

QueryShopSoldCountCmd* QueryShopSoldCountCmd::New() const {
  return new QueryShopSoldCountCmd;
}

void QueryShopSoldCountCmd::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    cmd_ = 52;
    param_ = 4;
  }
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QueryShopSoldCountCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.QueryShopSoldCountCmd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::Command_IsValid(value)) {
            set_cmd(static_cast< ::Cmd::Command >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_param;
        break;
      }

      // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_QUERY_SHOP_SOLD_COUNT];
      case 2: {
        if (tag == 16) {
         parse_param:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::ShopParam_IsValid(value)) {
            set_param(static_cast< ::Cmd::ShopParam >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_items;
        break;
      }

      // repeated .Cmd.ShopSoldItem items = 3;
      case 3: {
        if (tag == 26) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_items;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.QueryShopSoldCountCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.QueryShopSoldCountCmd)
  return false;
#undef DO_
}

void QueryShopSoldCountCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.QueryShopSoldCountCmd)
  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_QUERY_SHOP_SOLD_COUNT];
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->param(), output);
  }

  // repeated .Cmd.ShopSoldItem items = 3;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->items(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.QueryShopSoldCountCmd)
}

::google::protobuf::uint8* QueryShopSoldCountCmd::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.QueryShopSoldCountCmd)
  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_QUERY_SHOP_SOLD_COUNT];
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->param(), target);
  }

  // repeated .Cmd.ShopSoldItem items = 3;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->items(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.QueryShopSoldCountCmd)
  return target;
}

int QueryShopSoldCountCmd::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
    }

    // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_QUERY_SHOP_SOLD_COUNT];
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->param());
    }

  }
  // repeated .Cmd.ShopSoldItem items = 3;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryShopSoldCountCmd::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QueryShopSoldCountCmd* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QueryShopSoldCountCmd*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QueryShopSoldCountCmd::MergeFrom(const QueryShopSoldCountCmd& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QueryShopSoldCountCmd::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryShopSoldCountCmd::CopyFrom(const QueryShopSoldCountCmd& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryShopSoldCountCmd::IsInitialized() const {

  return true;
}

void QueryShopSoldCountCmd::Swap(QueryShopSoldCountCmd* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(param_, other->param_);
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QueryShopSoldCountCmd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryShopSoldCountCmd_descriptor_;
  metadata.reflection = QueryShopSoldCountCmd_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ShopDataUpdateCmd::kCmdFieldNumber;
const int ShopDataUpdateCmd::kParamFieldNumber;
const int ShopDataUpdateCmd::kTypeFieldNumber;
const int ShopDataUpdateCmd::kShopidFieldNumber;
#endif  // !_MSC_VER

ShopDataUpdateCmd::ShopDataUpdateCmd()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.ShopDataUpdateCmd)
}

void ShopDataUpdateCmd::InitAsDefaultInstance() {
}

ShopDataUpdateCmd::ShopDataUpdateCmd(const ShopDataUpdateCmd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.ShopDataUpdateCmd)
}

void ShopDataUpdateCmd::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 52;
  param_ = 5;
  type_ = 0u;
  shopid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ShopDataUpdateCmd::~ShopDataUpdateCmd() {
  // @@protoc_insertion_point(destructor:Cmd.ShopDataUpdateCmd)
  SharedDtor();
}

void ShopDataUpdateCmd::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ShopDataUpdateCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShopDataUpdateCmd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShopDataUpdateCmd_descriptor_;
}

const ShopDataUpdateCmd& ShopDataUpdateCmd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SessionShop_2eproto();
  return *default_instance_;
}

ShopDataUpdateCmd* ShopDataUpdateCmd::default_instance_ = NULL;

ShopDataUpdateCmd* ShopDataUpdateCmd::New() const {
  return new ShopDataUpdateCmd;
}

void ShopDataUpdateCmd::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ShopDataUpdateCmd*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(type_, shopid_);
    cmd_ = 52;
    param_ = 5;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ShopDataUpdateCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.ShopDataUpdateCmd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::Command_IsValid(value)) {
            set_cmd(static_cast< ::Cmd::Command >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_param;
        break;
      }

      // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_UPDATE_DATA];
      case 2: {
        if (tag == 16) {
         parse_param:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::ShopParam_IsValid(value)) {
            set_param(static_cast< ::Cmd::ShopParam >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // optional uint32 type = 3;
      case 3: {
        if (tag == 24) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_shopid;
        break;
      }

      // optional uint32 shopid = 4 [default = 0];
      case 4: {
        if (tag == 32) {
         parse_shopid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shopid_)));
          set_has_shopid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.ShopDataUpdateCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.ShopDataUpdateCmd)
  return false;
#undef DO_
}

void ShopDataUpdateCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.ShopDataUpdateCmd)
  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_UPDATE_DATA];
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->param(), output);
  }

  // optional uint32 type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->type(), output);
  }

  // optional uint32 shopid = 4 [default = 0];
  if (has_shopid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->shopid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.ShopDataUpdateCmd)
}

::google::protobuf::uint8* ShopDataUpdateCmd::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.ShopDataUpdateCmd)
  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_UPDATE_DATA];
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->param(), target);
  }

  // optional uint32 type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->type(), target);
  }

  // optional uint32 shopid = 4 [default = 0];
  if (has_shopid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->shopid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.ShopDataUpdateCmd)
  return target;
}

int ShopDataUpdateCmd::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
    }

    // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_UPDATE_DATA];
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->param());
    }

    // optional uint32 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // optional uint32 shopid = 4 [default = 0];
    if (has_shopid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shopid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShopDataUpdateCmd::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ShopDataUpdateCmd* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ShopDataUpdateCmd*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ShopDataUpdateCmd::MergeFrom(const ShopDataUpdateCmd& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_shopid()) {
      set_shopid(from.shopid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ShopDataUpdateCmd::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShopDataUpdateCmd::CopyFrom(const ShopDataUpdateCmd& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShopDataUpdateCmd::IsInitialized() const {

  return true;
}

void ShopDataUpdateCmd::Swap(ShopDataUpdateCmd* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(param_, other->param_);
    std::swap(type_, other->type_);
    std::swap(shopid_, other->shopid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ShopDataUpdateCmd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShopDataUpdateCmd_descriptor_;
  metadata.reflection = ShopDataUpdateCmd_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpdateShopConfigCmd::kCmdFieldNumber;
const int UpdateShopConfigCmd::kParamFieldNumber;
const int UpdateShopConfigCmd::kTypeFieldNumber;
const int UpdateShopConfigCmd::kShopidFieldNumber;
const int UpdateShopConfigCmd::kDelGoodsIdFieldNumber;
const int UpdateShopConfigCmd::kAddGoodsFieldNumber;
#endif  // !_MSC_VER

UpdateShopConfigCmd::UpdateShopConfigCmd()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.UpdateShopConfigCmd)
}

void UpdateShopConfigCmd::InitAsDefaultInstance() {
}

UpdateShopConfigCmd::UpdateShopConfigCmd(const UpdateShopConfigCmd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.UpdateShopConfigCmd)
}

void UpdateShopConfigCmd::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 52;
  param_ = 6;
  type_ = 0u;
  shopid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateShopConfigCmd::~UpdateShopConfigCmd() {
  // @@protoc_insertion_point(destructor:Cmd.UpdateShopConfigCmd)
  SharedDtor();
}

void UpdateShopConfigCmd::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdateShopConfigCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateShopConfigCmd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateShopConfigCmd_descriptor_;
}

const UpdateShopConfigCmd& UpdateShopConfigCmd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SessionShop_2eproto();
  return *default_instance_;
}

UpdateShopConfigCmd* UpdateShopConfigCmd::default_instance_ = NULL;

UpdateShopConfigCmd* UpdateShopConfigCmd::New() const {
  return new UpdateShopConfigCmd;
}

void UpdateShopConfigCmd::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<UpdateShopConfigCmd*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(type_, shopid_);
    cmd_ = 52;
    param_ = 6;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  del_goods_id_.Clear();
  add_goods_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateShopConfigCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.UpdateShopConfigCmd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::Command_IsValid(value)) {
            set_cmd(static_cast< ::Cmd::Command >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_param;
        break;
      }

      // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_UPDATE_SHOP_CONFIG_CMD];
      case 2: {
        if (tag == 16) {
         parse_param:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::ShopParam_IsValid(value)) {
            set_param(static_cast< ::Cmd::ShopParam >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // optional uint32 type = 3;
      case 3: {
        if (tag == 24) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_shopid;
        break;
      }

      // optional uint32 shopid = 4;
      case 4: {
        if (tag == 32) {
         parse_shopid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shopid_)));
          set_has_shopid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_del_goods_id;
        break;
      }

      // repeated uint32 del_goods_id = 5;
      case 5: {
        if (tag == 40) {
         parse_del_goods_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_del_goods_id())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_del_goods_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_del_goods_id;
        if (input->ExpectTag(50)) goto parse_add_goods;
        break;
      }

      // repeated .Cmd.ShopItem add_goods = 6;
      case 6: {
        if (tag == 50) {
         parse_add_goods:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_add_goods()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_add_goods;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.UpdateShopConfigCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.UpdateShopConfigCmd)
  return false;
#undef DO_
}

void UpdateShopConfigCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.UpdateShopConfigCmd)
  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_UPDATE_SHOP_CONFIG_CMD];
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->param(), output);
  }

  // optional uint32 type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->type(), output);
  }

  // optional uint32 shopid = 4;
  if (has_shopid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->shopid(), output);
  }

  // repeated uint32 del_goods_id = 5;
  for (int i = 0; i < this->del_goods_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->del_goods_id(i), output);
  }

  // repeated .Cmd.ShopItem add_goods = 6;
  for (int i = 0; i < this->add_goods_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->add_goods(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.UpdateShopConfigCmd)
}

::google::protobuf::uint8* UpdateShopConfigCmd::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.UpdateShopConfigCmd)
  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_UPDATE_SHOP_CONFIG_CMD];
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->param(), target);
  }

  // optional uint32 type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->type(), target);
  }

  // optional uint32 shopid = 4;
  if (has_shopid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->shopid(), target);
  }

  // repeated uint32 del_goods_id = 5;
  for (int i = 0; i < this->del_goods_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->del_goods_id(i), target);
  }

  // repeated .Cmd.ShopItem add_goods = 6;
  for (int i = 0; i < this->add_goods_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->add_goods(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.UpdateShopConfigCmd)
  return target;
}

int UpdateShopConfigCmd::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
    }

    // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_UPDATE_SHOP_CONFIG_CMD];
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->param());
    }

    // optional uint32 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // optional uint32 shopid = 4;
    if (has_shopid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shopid());
    }

  }
  // repeated uint32 del_goods_id = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->del_goods_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->del_goods_id(i));
    }
    total_size += 1 * this->del_goods_id_size() + data_size;
  }

  // repeated .Cmd.ShopItem add_goods = 6;
  total_size += 1 * this->add_goods_size();
  for (int i = 0; i < this->add_goods_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->add_goods(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateShopConfigCmd::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateShopConfigCmd* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateShopConfigCmd*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateShopConfigCmd::MergeFrom(const UpdateShopConfigCmd& from) {
  GOOGLE_CHECK_NE(&from, this);
  del_goods_id_.MergeFrom(from.del_goods_id_);
  add_goods_.MergeFrom(from.add_goods_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_shopid()) {
      set_shopid(from.shopid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateShopConfigCmd::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateShopConfigCmd::CopyFrom(const UpdateShopConfigCmd& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateShopConfigCmd::IsInitialized() const {

  return true;
}

void UpdateShopConfigCmd::Swap(UpdateShopConfigCmd* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(param_, other->param_);
    std::swap(type_, other->type_);
    std::swap(shopid_, other->shopid_);
    del_goods_id_.Swap(&other->del_goods_id_);
    add_goods_.Swap(&other->add_goods_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpdateShopConfigCmd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateShopConfigCmd_descriptor_;
  metadata.reflection = UpdateShopConfigCmd_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ExchangeShopItem::kIdFieldNumber;
const int ExchangeShopItem::kStatusFieldNumber;
const int ExchangeShopItem::kProgressFieldNumber;
const int ExchangeShopItem::kExchangeCountFieldNumber;
const int ExchangeShopItem::kLeftTimeFieldNumber;
const int ExchangeShopItem::kDelayTimeFieldNumber;
#endif  // !_MSC_VER

ExchangeShopItem::ExchangeShopItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.ExchangeShopItem)
}

void ExchangeShopItem::InitAsDefaultInstance() {
}

ExchangeShopItem::ExchangeShopItem(const ExchangeShopItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.ExchangeShopItem)
}

void ExchangeShopItem::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  status_ = 1;
  progress_ = 0u;
  exchange_count_ = 0u;
  left_time_ = 0u;
  delay_time_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExchangeShopItem::~ExchangeShopItem() {
  // @@protoc_insertion_point(destructor:Cmd.ExchangeShopItem)
  SharedDtor();
}

void ExchangeShopItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExchangeShopItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExchangeShopItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExchangeShopItem_descriptor_;
}

const ExchangeShopItem& ExchangeShopItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SessionShop_2eproto();
  return *default_instance_;
}

ExchangeShopItem* ExchangeShopItem::default_instance_ = NULL;

ExchangeShopItem* ExchangeShopItem::New() const {
  return new ExchangeShopItem;
}

void ExchangeShopItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ExchangeShopItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(progress_, delay_time_);
    id_ = 0u;
    status_ = 1;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExchangeShopItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.ExchangeShopItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }

      // optional .Cmd.EExchangeStatusType status = 2 [default = EEXCHANGESTATUSTYPE_OK];
      case 2: {
        if (tag == 16) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::EExchangeStatusType_IsValid(value)) {
            set_status(static_cast< ::Cmd::EExchangeStatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_progress;
        break;
      }

      // optional uint32 progress = 3;
      case 3: {
        if (tag == 24) {
         parse_progress:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &progress_)));
          set_has_progress();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_exchange_count;
        break;
      }

      // optional uint32 exchange_count = 4;
      case 4: {
        if (tag == 32) {
         parse_exchange_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exchange_count_)));
          set_has_exchange_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_left_time;
        break;
      }

      // optional uint32 left_time = 5;
      case 5: {
        if (tag == 40) {
         parse_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_delay_time;
        break;
      }

      // optional uint32 delay_time = 6;
      case 6: {
        if (tag == 48) {
         parse_delay_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &delay_time_)));
          set_has_delay_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.ExchangeShopItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.ExchangeShopItem)
  return false;
#undef DO_
}

void ExchangeShopItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.ExchangeShopItem)
  // optional uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional .Cmd.EExchangeStatusType status = 2 [default = EEXCHANGESTATUSTYPE_OK];
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  // optional uint32 progress = 3;
  if (has_progress()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->progress(), output);
  }

  // optional uint32 exchange_count = 4;
  if (has_exchange_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->exchange_count(), output);
  }

  // optional uint32 left_time = 5;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->left_time(), output);
  }

  // optional uint32 delay_time = 6;
  if (has_delay_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->delay_time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.ExchangeShopItem)
}

::google::protobuf::uint8* ExchangeShopItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.ExchangeShopItem)
  // optional uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional .Cmd.EExchangeStatusType status = 2 [default = EEXCHANGESTATUSTYPE_OK];
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  // optional uint32 progress = 3;
  if (has_progress()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->progress(), target);
  }

  // optional uint32 exchange_count = 4;
  if (has_exchange_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->exchange_count(), target);
  }

  // optional uint32 left_time = 5;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->left_time(), target);
  }

  // optional uint32 delay_time = 6;
  if (has_delay_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->delay_time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.ExchangeShopItem)
  return target;
}

int ExchangeShopItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional .Cmd.EExchangeStatusType status = 2 [default = EEXCHANGESTATUSTYPE_OK];
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional uint32 progress = 3;
    if (has_progress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->progress());
    }

    // optional uint32 exchange_count = 4;
    if (has_exchange_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->exchange_count());
    }

    // optional uint32 left_time = 5;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->left_time());
    }

    // optional uint32 delay_time = 6;
    if (has_delay_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->delay_time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExchangeShopItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExchangeShopItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExchangeShopItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExchangeShopItem::MergeFrom(const ExchangeShopItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_progress()) {
      set_progress(from.progress());
    }
    if (from.has_exchange_count()) {
      set_exchange_count(from.exchange_count());
    }
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
    if (from.has_delay_time()) {
      set_delay_time(from.delay_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExchangeShopItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExchangeShopItem::CopyFrom(const ExchangeShopItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExchangeShopItem::IsInitialized() const {

  return true;
}

void ExchangeShopItem::Swap(ExchangeShopItem* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(status_, other->status_);
    std::swap(progress_, other->progress_);
    std::swap(exchange_count_, other->exchange_count_);
    std::swap(left_time_, other->left_time_);
    std::swap(delay_time_, other->delay_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExchangeShopItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExchangeShopItem_descriptor_;
  metadata.reflection = ExchangeShopItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpdateExchangeShopData::kCmdFieldNumber;
const int UpdateExchangeShopData::kParamFieldNumber;
const int UpdateExchangeShopData::kItemsFieldNumber;
const int UpdateExchangeShopData::kDelItemsFieldNumber;
const int UpdateExchangeShopData::kMenuOpenFieldNumber;
const int UpdateExchangeShopData::kResetFieldNumber;
#endif  // !_MSC_VER

UpdateExchangeShopData::UpdateExchangeShopData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.UpdateExchangeShopData)
}

void UpdateExchangeShopData::InitAsDefaultInstance() {
}

UpdateExchangeShopData::UpdateExchangeShopData(const UpdateExchangeShopData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.UpdateExchangeShopData)
}

void UpdateExchangeShopData::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 52;
  param_ = 7;
  menu_open_ = false;
  reset_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateExchangeShopData::~UpdateExchangeShopData() {
  // @@protoc_insertion_point(destructor:Cmd.UpdateExchangeShopData)
  SharedDtor();
}

void UpdateExchangeShopData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdateExchangeShopData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateExchangeShopData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateExchangeShopData_descriptor_;
}

const UpdateExchangeShopData& UpdateExchangeShopData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SessionShop_2eproto();
  return *default_instance_;
}

UpdateExchangeShopData* UpdateExchangeShopData::default_instance_ = NULL;

UpdateExchangeShopData* UpdateExchangeShopData::New() const {
  return new UpdateExchangeShopData;
}

void UpdateExchangeShopData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<UpdateExchangeShopData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 51) {
    ZR_(menu_open_, reset_);
    cmd_ = 52;
    param_ = 7;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  items_.Clear();
  del_items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateExchangeShopData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.UpdateExchangeShopData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::Command_IsValid(value)) {
            set_cmd(static_cast< ::Cmd::Command >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_param;
        break;
      }

      // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_UPDATE_EXCHANGESHOP_DATA];
      case 2: {
        if (tag == 16) {
         parse_param:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::ShopParam_IsValid(value)) {
            set_param(static_cast< ::Cmd::ShopParam >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_items;
        break;
      }

      // repeated .Cmd.ExchangeShopItem items = 3;
      case 3: {
        if (tag == 26) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_items;
        if (input->ExpectTag(32)) goto parse_del_items;
        break;
      }

      // repeated uint32 del_items = 4;
      case 4: {
        if (tag == 32) {
         parse_del_items:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_del_items())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_del_items())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_del_items;
        if (input->ExpectTag(40)) goto parse_menu_open;
        break;
      }

      // optional bool menu_open = 5;
      case 5: {
        if (tag == 40) {
         parse_menu_open:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &menu_open_)));
          set_has_menu_open();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_reset;
        break;
      }

      // optional bool reset = 6 [default = false];
      case 6: {
        if (tag == 48) {
         parse_reset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reset_)));
          set_has_reset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.UpdateExchangeShopData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.UpdateExchangeShopData)
  return false;
#undef DO_
}

void UpdateExchangeShopData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.UpdateExchangeShopData)
  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_UPDATE_EXCHANGESHOP_DATA];
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->param(), output);
  }

  // repeated .Cmd.ExchangeShopItem items = 3;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->items(i), output);
  }

  // repeated uint32 del_items = 4;
  for (int i = 0; i < this->del_items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->del_items(i), output);
  }

  // optional bool menu_open = 5;
  if (has_menu_open()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->menu_open(), output);
  }

  // optional bool reset = 6 [default = false];
  if (has_reset()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->reset(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.UpdateExchangeShopData)
}

::google::protobuf::uint8* UpdateExchangeShopData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.UpdateExchangeShopData)
  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_UPDATE_EXCHANGESHOP_DATA];
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->param(), target);
  }

  // repeated .Cmd.ExchangeShopItem items = 3;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->items(i), target);
  }

  // repeated uint32 del_items = 4;
  for (int i = 0; i < this->del_items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->del_items(i), target);
  }

  // optional bool menu_open = 5;
  if (has_menu_open()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->menu_open(), target);
  }

  // optional bool reset = 6 [default = false];
  if (has_reset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->reset(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.UpdateExchangeShopData)
  return target;
}

int UpdateExchangeShopData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
    }

    // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_UPDATE_EXCHANGESHOP_DATA];
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->param());
    }

    // optional bool menu_open = 5;
    if (has_menu_open()) {
      total_size += 1 + 1;
    }

    // optional bool reset = 6 [default = false];
    if (has_reset()) {
      total_size += 1 + 1;
    }

  }
  // repeated .Cmd.ExchangeShopItem items = 3;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  // repeated uint32 del_items = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->del_items_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->del_items(i));
    }
    total_size += 1 * this->del_items_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateExchangeShopData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateExchangeShopData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateExchangeShopData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateExchangeShopData::MergeFrom(const UpdateExchangeShopData& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  del_items_.MergeFrom(from.del_items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
    if (from.has_menu_open()) {
      set_menu_open(from.menu_open());
    }
    if (from.has_reset()) {
      set_reset(from.reset());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateExchangeShopData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateExchangeShopData::CopyFrom(const UpdateExchangeShopData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateExchangeShopData::IsInitialized() const {

  return true;
}

void UpdateExchangeShopData::Swap(UpdateExchangeShopData* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(param_, other->param_);
    items_.Swap(&other->items_);
    del_items_.Swap(&other->del_items_);
    std::swap(menu_open_, other->menu_open_);
    std::swap(reset_, other->reset_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpdateExchangeShopData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateExchangeShopData_descriptor_;
  metadata.reflection = UpdateExchangeShopData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ExchangeItemInfo::kIdFieldNumber;
const int ExchangeItemInfo::kNumFieldNumber;
#endif  // !_MSC_VER

ExchangeItemInfo::ExchangeItemInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.ExchangeItemInfo)
}

void ExchangeItemInfo::InitAsDefaultInstance() {
}

ExchangeItemInfo::ExchangeItemInfo(const ExchangeItemInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.ExchangeItemInfo)
}

void ExchangeItemInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExchangeItemInfo::~ExchangeItemInfo() {
  // @@protoc_insertion_point(destructor:Cmd.ExchangeItemInfo)
  SharedDtor();
}

void ExchangeItemInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExchangeItemInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExchangeItemInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExchangeItemInfo_descriptor_;
}

const ExchangeItemInfo& ExchangeItemInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SessionShop_2eproto();
  return *default_instance_;
}

ExchangeItemInfo* ExchangeItemInfo::default_instance_ = NULL;

ExchangeItemInfo* ExchangeItemInfo::New() const {
  return new ExchangeItemInfo;
}

void ExchangeItemInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ExchangeItemInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExchangeItemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.ExchangeItemInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_num;
        break;
      }

      // optional uint32 num = 2;
      case 2: {
        if (tag == 16) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.ExchangeItemInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.ExchangeItemInfo)
  return false;
#undef DO_
}

void ExchangeItemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.ExchangeItemInfo)
  // optional uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.ExchangeItemInfo)
}

::google::protobuf::uint8* ExchangeItemInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.ExchangeItemInfo)
  // optional uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.ExchangeItemInfo)
  return target;
}

int ExchangeItemInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExchangeItemInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExchangeItemInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExchangeItemInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExchangeItemInfo::MergeFrom(const ExchangeItemInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExchangeItemInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExchangeItemInfo::CopyFrom(const ExchangeItemInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExchangeItemInfo::IsInitialized() const {

  return true;
}

void ExchangeItemInfo::Swap(ExchangeItemInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExchangeItemInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExchangeItemInfo_descriptor_;
  metadata.reflection = ExchangeItemInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ExchangeShopItemCmd::kCmdFieldNumber;
const int ExchangeShopItemCmd::kParamFieldNumber;
const int ExchangeShopItemCmd::kIdFieldNumber;
const int ExchangeShopItemCmd::kItemsFieldNumber;
#endif  // !_MSC_VER

ExchangeShopItemCmd::ExchangeShopItemCmd()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.ExchangeShopItemCmd)
}

void ExchangeShopItemCmd::InitAsDefaultInstance() {
}

ExchangeShopItemCmd::ExchangeShopItemCmd(const ExchangeShopItemCmd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.ExchangeShopItemCmd)
}

void ExchangeShopItemCmd::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 52;
  param_ = 8;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExchangeShopItemCmd::~ExchangeShopItemCmd() {
  // @@protoc_insertion_point(destructor:Cmd.ExchangeShopItemCmd)
  SharedDtor();
}

void ExchangeShopItemCmd::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExchangeShopItemCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExchangeShopItemCmd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExchangeShopItemCmd_descriptor_;
}

const ExchangeShopItemCmd& ExchangeShopItemCmd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SessionShop_2eproto();
  return *default_instance_;
}

ExchangeShopItemCmd* ExchangeShopItemCmd::default_instance_ = NULL;

ExchangeShopItemCmd* ExchangeShopItemCmd::New() const {
  return new ExchangeShopItemCmd;
}

void ExchangeShopItemCmd::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    cmd_ = 52;
    param_ = 8;
    id_ = 0u;
  }
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExchangeShopItemCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.ExchangeShopItemCmd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::Command_IsValid(value)) {
            set_cmd(static_cast< ::Cmd::Command >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_param;
        break;
      }

      // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_EXCHANGEITEM_CMD];
      case 2: {
        if (tag == 16) {
         parse_param:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::ShopParam_IsValid(value)) {
            set_param(static_cast< ::Cmd::ShopParam >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_id;
        break;
      }

      // optional uint32 id = 3;
      case 3: {
        if (tag == 24) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_items;
        break;
      }

      // repeated .Cmd.ExchangeItemInfo items = 4;
      case 4: {
        if (tag == 34) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_items;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.ExchangeShopItemCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.ExchangeShopItemCmd)
  return false;
#undef DO_
}

void ExchangeShopItemCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.ExchangeShopItemCmd)
  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_EXCHANGEITEM_CMD];
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->param(), output);
  }

  // optional uint32 id = 3;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->id(), output);
  }

  // repeated .Cmd.ExchangeItemInfo items = 4;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->items(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.ExchangeShopItemCmd)
}

::google::protobuf::uint8* ExchangeShopItemCmd::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.ExchangeShopItemCmd)
  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_EXCHANGEITEM_CMD];
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->param(), target);
  }

  // optional uint32 id = 3;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->id(), target);
  }

  // repeated .Cmd.ExchangeItemInfo items = 4;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->items(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.ExchangeShopItemCmd)
  return target;
}

int ExchangeShopItemCmd::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
    }

    // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_EXCHANGEITEM_CMD];
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->param());
    }

    // optional uint32 id = 3;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  // repeated .Cmd.ExchangeItemInfo items = 4;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExchangeShopItemCmd::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExchangeShopItemCmd* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExchangeShopItemCmd*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExchangeShopItemCmd::MergeFrom(const ExchangeShopItemCmd& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExchangeShopItemCmd::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExchangeShopItemCmd::CopyFrom(const ExchangeShopItemCmd& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExchangeShopItemCmd::IsInitialized() const {

  return true;
}

void ExchangeShopItemCmd::Swap(ExchangeShopItemCmd* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(param_, other->param_);
    std::swap(id_, other->id_);
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExchangeShopItemCmd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExchangeShopItemCmd_descriptor_;
  metadata.reflection = ExchangeShopItemCmd_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResetExchangeShopDataShopCmd::kCmdFieldNumber;
const int ResetExchangeShopDataShopCmd::kParamFieldNumber;
const int ResetExchangeShopDataShopCmd::kItemsFieldNumber;
#endif  // !_MSC_VER

ResetExchangeShopDataShopCmd::ResetExchangeShopDataShopCmd()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd.ResetExchangeShopDataShopCmd)
}

void ResetExchangeShopDataShopCmd::InitAsDefaultInstance() {
}

ResetExchangeShopDataShopCmd::ResetExchangeShopDataShopCmd(const ResetExchangeShopDataShopCmd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cmd.ResetExchangeShopDataShopCmd)
}

void ResetExchangeShopDataShopCmd::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 52;
  param_ = 9;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResetExchangeShopDataShopCmd::~ResetExchangeShopDataShopCmd() {
  // @@protoc_insertion_point(destructor:Cmd.ResetExchangeShopDataShopCmd)
  SharedDtor();
}

void ResetExchangeShopDataShopCmd::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResetExchangeShopDataShopCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResetExchangeShopDataShopCmd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResetExchangeShopDataShopCmd_descriptor_;
}

const ResetExchangeShopDataShopCmd& ResetExchangeShopDataShopCmd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SessionShop_2eproto();
  return *default_instance_;
}

ResetExchangeShopDataShopCmd* ResetExchangeShopDataShopCmd::default_instance_ = NULL;

ResetExchangeShopDataShopCmd* ResetExchangeShopDataShopCmd::New() const {
  return new ResetExchangeShopDataShopCmd;
}

void ResetExchangeShopDataShopCmd::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    cmd_ = 52;
    param_ = 9;
  }
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResetExchangeShopDataShopCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd.ResetExchangeShopDataShopCmd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::Command_IsValid(value)) {
            set_cmd(static_cast< ::Cmd::Command >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_param;
        break;
      }

      // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_RESET_EXCHANGESHOP_DATA];
      case 2: {
        if (tag == 16) {
         parse_param:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Cmd::ShopParam_IsValid(value)) {
            set_param(static_cast< ::Cmd::ShopParam >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_items;
        break;
      }

      // repeated .Cmd.ExchangeShopItem items = 3;
      case 3: {
        if (tag == 26) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_items;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd.ResetExchangeShopDataShopCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd.ResetExchangeShopDataShopCmd)
  return false;
#undef DO_
}

void ResetExchangeShopDataShopCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd.ResetExchangeShopDataShopCmd)
  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_RESET_EXCHANGESHOP_DATA];
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->param(), output);
  }

  // repeated .Cmd.ExchangeShopItem items = 3;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->items(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd.ResetExchangeShopDataShopCmd)
}

::google::protobuf::uint8* ResetExchangeShopDataShopCmd::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Cmd.ResetExchangeShopDataShopCmd)
  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_RESET_EXCHANGESHOP_DATA];
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->param(), target);
  }

  // repeated .Cmd.ExchangeShopItem items = 3;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->items(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd.ResetExchangeShopDataShopCmd)
  return target;
}

int ResetExchangeShopDataShopCmd::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SHOP_PROTOCMD];
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
    }

    // optional .Cmd.ShopParam param = 2 [default = SHOPPARAM_RESET_EXCHANGESHOP_DATA];
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->param());
    }

  }
  // repeated .Cmd.ExchangeShopItem items = 3;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResetExchangeShopDataShopCmd::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResetExchangeShopDataShopCmd* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResetExchangeShopDataShopCmd*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResetExchangeShopDataShopCmd::MergeFrom(const ResetExchangeShopDataShopCmd& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResetExchangeShopDataShopCmd::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetExchangeShopDataShopCmd::CopyFrom(const ResetExchangeShopDataShopCmd& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetExchangeShopDataShopCmd::IsInitialized() const {

  return true;
}

void ResetExchangeShopDataShopCmd::Swap(ResetExchangeShopDataShopCmd* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(param_, other->param_);
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResetExchangeShopDataShopCmd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResetExchangeShopDataShopCmd_descriptor_;
  metadata.reflection = ResetExchangeShopDataShopCmd_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cmd

// @@protoc_insertion_point(global_scope)
