// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SessionSociality.proto

#ifndef PROTOBUF_SessionSociality_2eproto__INCLUDED
#define PROTOBUF_SessionSociality_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "xCmd.pb.h"
#include "ProtoCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace Cmd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SessionSociality_2eproto();
void protobuf_AssignDesc_SessionSociality_2eproto();
void protobuf_ShutdownFile_SessionSociality_2eproto();

class SocialData;
class QuerySocialData;
class FindUser;
class SocialUpdate;
class SocialDataItem;
class SocialDataUpdate;
class FrameStatusSocialCmd;
class UseGiftCodeSocialCmd;
class OperateQuerySocialCmd;
class OperateTakeSocialCmd;
class QueryDataNtfSocialCmd;
class OperActivityUrl;
class OperActivityData;
class OperSubActivityData;
class OperSubActivity;
class OperActivity;
class OperActivityNtfSocialCmd;
class AddRelation;
class RemoveRelation;
class Recall;
class QueryRecallListSocialCmd;
class RecallFriendSocialCmd;
class AddRelationResultSocialCmd;
class QueryChargeVirginCmd;
class QueryUserInfoCmd;

enum SocialityParam {
  SOCIALITYPARAM_QUERYDATA = 1,
  SOCIALITYPARAM_FINDUSER = 2,
  SOCIALITYPARAM_UPDATE = 3,
  SOCIALITYPARAM_UPDATEDATA = 4,
  SOCIALITYPARAM_FRAMESTATUS = 5,
  SOCIALITYPARAM_USE_GIFT_CODE = 6,
  SOCIALITYPARAM_OPERATE_QUERY = 7,
  SOCIALITYPARAM_OPERATE_TAKE = 8,
  SOCIALITYPARAM_QUERYDATA_NTF = 9,
  SOCIALITYPARAM_OPER_ACTIVITY_NTF = 10,
  SOCIALITYPARAM_ADDRELATION = 11,
  SOCIALITYPARAM_REMOVERELATION = 12,
  SOCIALITYPARAM_QUERY_RECALL_LIST = 13,
  SOCIALITYPARAM_RECALL_FRIEND = 14,
  SOCIALITYPARAM_ADD_RELATION_RESULT = 15,
  SOCIALITYPARAM_QUERY_CHARGE_VIRGIN = 16,
  SOCIALITYPARAM_QUERY_USER_INFO = 17
};
bool SocialityParam_IsValid(int value);
const SocialityParam SocialityParam_MIN = SOCIALITYPARAM_QUERYDATA;
const SocialityParam SocialityParam_MAX = SOCIALITYPARAM_QUERY_USER_INFO;
const int SocialityParam_ARRAYSIZE = SocialityParam_MAX + 1;

const ::google::protobuf::EnumDescriptor* SocialityParam_descriptor();
inline const ::std::string& SocialityParam_Name(SocialityParam value) {
  return ::google::protobuf::internal::NameOfEnum(
    SocialityParam_descriptor(), value);
}
inline bool SocialityParam_Parse(
    const ::std::string& name, SocialityParam* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SocialityParam>(
    SocialityParam_descriptor(), name, value);
}
enum ESocialRelation {
  ESOCIALRELATION_MIN = 1,
  ESOCIALRELATION_FRIEND = 2,
  ESOCIALRELATION_MERRY = 4,
  ESOCIALRELATION_CHAT = 8,
  ESOCIALRELATION_TEAM = 16,
  ESOCIALRELATION_APPLY = 32,
  ESOCIALRELATION_BLACK = 64,
  ESOCIALRELATION_BLACK_FOREVER = 128,
  ESOCIALRELATION_TUTOR = 256,
  ESOCIALRELATION_TUTOR_APPLY = 512,
  ESOCIALRELATION_STUDENT = 1024,
  ESOCIALRELATION_STUDENT_APPLY = 2048,
  ESOCIALRELATION_STUDENT_RECENT = 4096,
  ESOCIALRELATION_TUTOR_PUNISH = 8192,
  ESOCIALRELATION_TUTOR_CLASSMATE = 16384,
  ESOCIALRELATION_RECALL = 32768,
  ESOCIALRELATION_BERECALL = 65536,
  ESOCIALRELATION_MAX = 65537
};
bool ESocialRelation_IsValid(int value);
const ESocialRelation ESocialRelation_MIN = ESOCIALRELATION_MIN;
const ESocialRelation ESocialRelation_MAX = ESOCIALRELATION_MAX;
const int ESocialRelation_ARRAYSIZE = ESocialRelation_MAX + 1;

const ::google::protobuf::EnumDescriptor* ESocialRelation_descriptor();
inline const ::std::string& ESocialRelation_Name(ESocialRelation value) {
  return ::google::protobuf::internal::NameOfEnum(
    ESocialRelation_descriptor(), value);
}
inline bool ESocialRelation_Parse(
    const ::std::string& name, ESocialRelation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESocialRelation>(
    ESocialRelation_descriptor(), name, value);
}
enum ESocialData {
  ESOCIALDATA_MIN = 1,
  ESOCIALDATA_LEVEL = 2,
  ESOCIALDATA_OFFLINETIME = 3,
  ESOCIALDATA_RELATION = 4,
  ESOCIALDATA_PROFESSION = 5,
  ESOCIALDATA_PORTRAIT = 6,
  ESOCIALDATA_FRAME = 7,
  ESOCIALDATA_HAIR = 8,
  ESOCIALDATA_HAIRCOLOR = 9,
  ESOCIALDATA_BODY = 10,
  ESOCIALDATA_ADVENTURELV = 11,
  ESOCIALDATA_ADVENTUREEXP = 12,
  ESOCIALDATA_APPELLATION = 13,
  ESOCIALDATA_GENDER = 14,
  ESOCIALDATA_GUILDNAME = 15,
  ESOCIALDATA_GUILDPORTRAIT = 16,
  ESOCIALDATA_BLINK = 18,
  ESOCIALDATA_ZONEID = 19,
  ESOCIALDATA_NAME = 20,
  ESOCIALDATA_CREATETIME = 21,
  ESOCIALDATA_HEAD = 22,
  ESOCIALDATA_FACE = 23,
  ESOCIALDATA_MOUTH = 24,
  ESOCIALDATA_TUTOR_PROFIC = 25,
  ESOCIALDATA_EYE = 26,
  ESOCIALDATA_RECALL = 27,
  ESOCIALDATA_CANRECALL = 28,
  ESOCIALDATA_MAX = 29
};
bool ESocialData_IsValid(int value);
const ESocialData ESocialData_MIN = ESOCIALDATA_MIN;
const ESocialData ESocialData_MAX = ESOCIALDATA_MAX;
const int ESocialData_ARRAYSIZE = ESocialData_MAX + 1;

const ::google::protobuf::EnumDescriptor* ESocialData_descriptor();
inline const ::std::string& ESocialData_Name(ESocialData value) {
  return ::google::protobuf::internal::NameOfEnum(
    ESocialData_descriptor(), value);
}
inline bool ESocialData_Parse(
    const ::std::string& name, ESocialData* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESocialData>(
    ESocialData_descriptor(), name, value);
}
enum EOperateType {
  EOperateType_Summer = 1,
  EOperateType_Autumn = 2,
  EOperateType_Charge = 3,
  EOperateType_CodeBW = 4,
  EOperateType_CodeMX = 5,
  EOperateType_RedBag = 6,
  EOperateType_Phone = 7,
  EOperateType_MonthCard = 8
};
bool EOperateType_IsValid(int value);
const EOperateType EOperateType_MIN = EOperateType_Summer;
const EOperateType EOperateType_MAX = EOperateType_MonthCard;
const int EOperateType_ARRAYSIZE = EOperateType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EOperateType_descriptor();
inline const ::std::string& EOperateType_Name(EOperateType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EOperateType_descriptor(), value);
}
inline bool EOperateType_Parse(
    const ::std::string& name, EOperateType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EOperateType>(
    EOperateType_descriptor(), name, value);
}
enum EOperateState {
  EOperateState_None = 1,
  EOperateState_Toke = 2,
  EOperateState_CanTake = 3,
  EOperateState_Expire = 4
};
bool EOperateState_IsValid(int value);
const EOperateState EOperateState_MIN = EOperateState_None;
const EOperateState EOperateState_MAX = EOperateState_Expire;
const int EOperateState_ARRAYSIZE = EOperateState_MAX + 1;

const ::google::protobuf::EnumDescriptor* EOperateState_descriptor();
inline const ::std::string& EOperateState_Name(EOperateState value) {
  return ::google::protobuf::internal::NameOfEnum(
    EOperateState_descriptor(), value);
}
inline bool EOperateState_Parse(
    const ::std::string& name, EOperateState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EOperateState>(
    EOperateState_descriptor(), name, value);
}
// ===================================================================

class SocialData : public ::google::protobuf::Message {
 public:
  SocialData();
  virtual ~SocialData();

  SocialData(const SocialData& from);

  inline SocialData& operator=(const SocialData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SocialData& default_instance();

  void Swap(SocialData* other);

  // implements Message ----------------------------------------------

  SocialData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SocialData& from);
  void MergeFrom(const SocialData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 guid = 1 [default = 0];
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional uint64 accid = 2 [default = 0];
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 2;
  inline ::google::protobuf::uint64 accid() const;
  inline void set_accid(::google::protobuf::uint64 value);

  // optional uint32 level = 3 [default = 0];
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 offlinetime = 4 [default = 0];
  inline bool has_offlinetime() const;
  inline void clear_offlinetime();
  static const int kOfflinetimeFieldNumber = 4;
  inline ::google::protobuf::uint32 offlinetime() const;
  inline void set_offlinetime(::google::protobuf::uint32 value);

  // optional uint32 relation = 5 [default = 0];
  inline bool has_relation() const;
  inline void clear_relation();
  static const int kRelationFieldNumber = 5;
  inline ::google::protobuf::uint32 relation() const;
  inline void set_relation(::google::protobuf::uint32 value);

  // optional uint32 portrait = 6 [default = 0];
  inline bool has_portrait() const;
  inline void clear_portrait();
  static const int kPortraitFieldNumber = 6;
  inline ::google::protobuf::uint32 portrait() const;
  inline void set_portrait(::google::protobuf::uint32 value);

  // optional uint32 frame = 7 [default = 0];
  inline bool has_frame() const;
  inline void clear_frame();
  static const int kFrameFieldNumber = 7;
  inline ::google::protobuf::uint32 frame() const;
  inline void set_frame(::google::protobuf::uint32 value);

  // optional uint32 hair = 8 [default = 0];
  inline bool has_hair() const;
  inline void clear_hair();
  static const int kHairFieldNumber = 8;
  inline ::google::protobuf::uint32 hair() const;
  inline void set_hair(::google::protobuf::uint32 value);

  // optional uint32 haircolor = 9 [default = 0];
  inline bool has_haircolor() const;
  inline void clear_haircolor();
  static const int kHaircolorFieldNumber = 9;
  inline ::google::protobuf::uint32 haircolor() const;
  inline void set_haircolor(::google::protobuf::uint32 value);

  // optional uint32 body = 10 [default = 0];
  inline bool has_body() const;
  inline void clear_body();
  static const int kBodyFieldNumber = 10;
  inline ::google::protobuf::uint32 body() const;
  inline void set_body(::google::protobuf::uint32 value);

  // optional uint32 head = 11 [default = 0];
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 11;
  inline ::google::protobuf::uint32 head() const;
  inline void set_head(::google::protobuf::uint32 value);

  // optional uint32 face = 12 [default = 0];
  inline bool has_face() const;
  inline void clear_face();
  static const int kFaceFieldNumber = 12;
  inline ::google::protobuf::uint32 face() const;
  inline void set_face(::google::protobuf::uint32 value);

  // optional uint32 mouth = 13 [default = 0];
  inline bool has_mouth() const;
  inline void clear_mouth();
  static const int kMouthFieldNumber = 13;
  inline ::google::protobuf::uint32 mouth() const;
  inline void set_mouth(::google::protobuf::uint32 value);

  // optional uint32 eye = 14 [default = 0];
  inline bool has_eye() const;
  inline void clear_eye();
  static const int kEyeFieldNumber = 14;
  inline ::google::protobuf::uint32 eye() const;
  inline void set_eye(::google::protobuf::uint32 value);

  // optional uint32 profic = 15 [default = 0];
  inline bool has_profic() const;
  inline void clear_profic();
  static const int kProficFieldNumber = 15;
  inline ::google::protobuf::uint32 profic() const;
  inline void set_profic(::google::protobuf::uint32 value);

  // optional uint32 adventurelv = 16 [default = 0];
  inline bool has_adventurelv() const;
  inline void clear_adventurelv();
  static const int kAdventurelvFieldNumber = 16;
  inline ::google::protobuf::uint32 adventurelv() const;
  inline void set_adventurelv(::google::protobuf::uint32 value);

  // optional uint32 adventureexp = 17 [default = 0];
  inline bool has_adventureexp() const;
  inline void clear_adventureexp();
  static const int kAdventureexpFieldNumber = 17;
  inline ::google::protobuf::uint32 adventureexp() const;
  inline void set_adventureexp(::google::protobuf::uint32 value);

  // optional uint32 appellation = 18 [default = 0];
  inline bool has_appellation() const;
  inline void clear_appellation();
  static const int kAppellationFieldNumber = 18;
  inline ::google::protobuf::uint32 appellation() const;
  inline void set_appellation(::google::protobuf::uint32 value);

  // optional uint32 mapid = 19 [default = 0];
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 19;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // optional uint32 zoneid = 20 [default = 0];
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 20;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional .Cmd.EProfession profession = 21 [default = EPROFESSION_MIN];
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 21;
  inline ::Cmd::EProfession profession() const;
  inline void set_profession(::Cmd::EProfession value);

  // optional .Cmd.EGender gender = 22 [default = EGENDER_MIN];
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 22;
  inline ::Cmd::EGender gender() const;
  inline void set_gender(::Cmd::EGender value);

  // optional bool blink = 23 [default = false];
  inline bool has_blink() const;
  inline void clear_blink();
  static const int kBlinkFieldNumber = 23;
  inline bool blink() const;
  inline void set_blink(bool value);

  // optional bool recall = 24 [default = false];
  inline bool has_recall() const;
  inline void clear_recall();
  static const int kRecallFieldNumber = 24;
  inline bool recall() const;
  inline void set_recall(bool value);

  // optional bool canrecall = 25 [default = false];
  inline bool has_canrecall() const;
  inline void clear_canrecall();
  static const int kCanrecallFieldNumber = 25;
  inline bool canrecall() const;
  inline void set_canrecall(bool value);

  // optional string name = 26;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 26;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string guildname = 27;
  inline bool has_guildname() const;
  inline void clear_guildname();
  static const int kGuildnameFieldNumber = 27;
  inline const ::std::string& guildname() const;
  inline void set_guildname(const ::std::string& value);
  inline void set_guildname(const char* value);
  inline void set_guildname(const char* value, size_t size);
  inline ::std::string* mutable_guildname();
  inline ::std::string* release_guildname();
  inline void set_allocated_guildname(::std::string* guildname);

  // optional string guildportrait = 28;
  inline bool has_guildportrait() const;
  inline void clear_guildportrait();
  static const int kGuildportraitFieldNumber = 28;
  inline const ::std::string& guildportrait() const;
  inline void set_guildportrait(const ::std::string& value);
  inline void set_guildportrait(const char* value);
  inline void set_guildportrait(const char* value, size_t size);
  inline ::std::string* mutable_guildportrait();
  inline ::std::string* release_guildportrait();
  inline void set_allocated_guildportrait(::std::string* guildportrait);

  // optional string createtime = 29;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 29;
  inline const ::std::string& createtime() const;
  inline void set_createtime(const ::std::string& value);
  inline void set_createtime(const char* value);
  inline void set_createtime(const char* value, size_t size);
  inline ::std::string* mutable_createtime();
  inline ::std::string* release_createtime();
  inline void set_allocated_createtime(::std::string* createtime);

  // @@protoc_insertion_point(class_scope:Cmd.SocialData)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_accid();
  inline void clear_has_accid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_offlinetime();
  inline void clear_has_offlinetime();
  inline void set_has_relation();
  inline void clear_has_relation();
  inline void set_has_portrait();
  inline void clear_has_portrait();
  inline void set_has_frame();
  inline void clear_has_frame();
  inline void set_has_hair();
  inline void clear_has_hair();
  inline void set_has_haircolor();
  inline void clear_has_haircolor();
  inline void set_has_body();
  inline void clear_has_body();
  inline void set_has_head();
  inline void clear_has_head();
  inline void set_has_face();
  inline void clear_has_face();
  inline void set_has_mouth();
  inline void clear_has_mouth();
  inline void set_has_eye();
  inline void clear_has_eye();
  inline void set_has_profic();
  inline void clear_has_profic();
  inline void set_has_adventurelv();
  inline void clear_has_adventurelv();
  inline void set_has_adventureexp();
  inline void clear_has_adventureexp();
  inline void set_has_appellation();
  inline void clear_has_appellation();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_profession();
  inline void clear_has_profession();
  inline void set_has_gender();
  inline void clear_has_gender();
  inline void set_has_blink();
  inline void clear_has_blink();
  inline void set_has_recall();
  inline void clear_has_recall();
  inline void set_has_canrecall();
  inline void clear_has_canrecall();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_guildname();
  inline void clear_has_guildname();
  inline void set_has_guildportrait();
  inline void clear_has_guildportrait();
  inline void set_has_createtime();
  inline void clear_has_createtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint64 accid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 offlinetime_;
  ::google::protobuf::uint32 relation_;
  ::google::protobuf::uint32 portrait_;
  ::google::protobuf::uint32 frame_;
  ::google::protobuf::uint32 hair_;
  ::google::protobuf::uint32 haircolor_;
  ::google::protobuf::uint32 body_;
  ::google::protobuf::uint32 head_;
  ::google::protobuf::uint32 face_;
  ::google::protobuf::uint32 mouth_;
  ::google::protobuf::uint32 eye_;
  ::google::protobuf::uint32 profic_;
  ::google::protobuf::uint32 adventurelv_;
  ::google::protobuf::uint32 adventureexp_;
  ::google::protobuf::uint32 appellation_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 zoneid_;
  int profession_;
  int gender_;
  ::std::string* name_;
  ::std::string* guildname_;
  ::std::string* guildportrait_;
  ::std::string* createtime_;
  bool blink_;
  bool recall_;
  bool canrecall_;
  friend void  protobuf_AddDesc_SessionSociality_2eproto();
  friend void protobuf_AssignDesc_SessionSociality_2eproto();
  friend void protobuf_ShutdownFile_SessionSociality_2eproto();

  void InitAsDefaultInstance();
  static SocialData* default_instance_;
};
// -------------------------------------------------------------------

class QuerySocialData : public ::google::protobuf::Message {
 public:
  QuerySocialData();
  virtual ~QuerySocialData();

  QuerySocialData(const QuerySocialData& from);

  inline QuerySocialData& operator=(const QuerySocialData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuerySocialData& default_instance();

  void Swap(QuerySocialData* other);

  // implements Message ----------------------------------------------

  QuerySocialData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuerySocialData& from);
  void MergeFrom(const QuerySocialData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_QUERYDATA];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialityParam param() const;
  inline void set_param(::Cmd::SocialityParam value);

  // repeated .Cmd.SocialData datas = 4;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 4;
  inline const ::Cmd::SocialData& datas(int index) const;
  inline ::Cmd::SocialData* mutable_datas(int index);
  inline ::Cmd::SocialData* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SocialData >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::SocialData >*
      mutable_datas();

  // @@protoc_insertion_point(class_scope:Cmd.QuerySocialData)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::SocialData > datas_;
  friend void  protobuf_AddDesc_SessionSociality_2eproto();
  friend void protobuf_AssignDesc_SessionSociality_2eproto();
  friend void protobuf_ShutdownFile_SessionSociality_2eproto();

  void InitAsDefaultInstance();
  static QuerySocialData* default_instance_;
};
// -------------------------------------------------------------------

class FindUser : public ::google::protobuf::Message {
 public:
  FindUser();
  virtual ~FindUser();

  FindUser(const FindUser& from);

  inline FindUser& operator=(const FindUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FindUser& default_instance();

  void Swap(FindUser* other);

  // implements Message ----------------------------------------------

  FindUser* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FindUser& from);
  void MergeFrom(const FindUser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_FINDUSER];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialityParam param() const;
  inline void set_param(::Cmd::SocialityParam value);

  // optional string keyword = 3;
  inline bool has_keyword() const;
  inline void clear_keyword();
  static const int kKeywordFieldNumber = 3;
  inline const ::std::string& keyword() const;
  inline void set_keyword(const ::std::string& value);
  inline void set_keyword(const char* value);
  inline void set_keyword(const char* value, size_t size);
  inline ::std::string* mutable_keyword();
  inline ::std::string* release_keyword();
  inline void set_allocated_keyword(::std::string* keyword);

  // repeated .Cmd.SocialData datas = 4;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 4;
  inline const ::Cmd::SocialData& datas(int index) const;
  inline ::Cmd::SocialData* mutable_datas(int index);
  inline ::Cmd::SocialData* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SocialData >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::SocialData >*
      mutable_datas();

  // @@protoc_insertion_point(class_scope:Cmd.FindUser)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_keyword();
  inline void clear_has_keyword();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::std::string* keyword_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::SocialData > datas_;
  friend void  protobuf_AddDesc_SessionSociality_2eproto();
  friend void protobuf_AssignDesc_SessionSociality_2eproto();
  friend void protobuf_ShutdownFile_SessionSociality_2eproto();

  void InitAsDefaultInstance();
  static FindUser* default_instance_;
};
// -------------------------------------------------------------------

class SocialUpdate : public ::google::protobuf::Message {
 public:
  SocialUpdate();
  virtual ~SocialUpdate();

  SocialUpdate(const SocialUpdate& from);

  inline SocialUpdate& operator=(const SocialUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SocialUpdate& default_instance();

  void Swap(SocialUpdate* other);

  // implements Message ----------------------------------------------

  SocialUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SocialUpdate& from);
  void MergeFrom(const SocialUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_UPDATE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialityParam param() const;
  inline void set_param(::Cmd::SocialityParam value);

  // repeated .Cmd.SocialData updates = 4;
  inline int updates_size() const;
  inline void clear_updates();
  static const int kUpdatesFieldNumber = 4;
  inline const ::Cmd::SocialData& updates(int index) const;
  inline ::Cmd::SocialData* mutable_updates(int index);
  inline ::Cmd::SocialData* add_updates();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SocialData >&
      updates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::SocialData >*
      mutable_updates();

  // repeated uint64 dels = 5;
  inline int dels_size() const;
  inline void clear_dels();
  static const int kDelsFieldNumber = 5;
  inline ::google::protobuf::uint64 dels(int index) const;
  inline void set_dels(int index, ::google::protobuf::uint64 value);
  inline void add_dels(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      dels() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_dels();

  // @@protoc_insertion_point(class_scope:Cmd.SocialUpdate)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::SocialData > updates_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > dels_;
  friend void  protobuf_AddDesc_SessionSociality_2eproto();
  friend void protobuf_AssignDesc_SessionSociality_2eproto();
  friend void protobuf_ShutdownFile_SessionSociality_2eproto();

  void InitAsDefaultInstance();
  static SocialUpdate* default_instance_;
};
// -------------------------------------------------------------------

class SocialDataItem : public ::google::protobuf::Message {
 public:
  SocialDataItem();
  virtual ~SocialDataItem();

  SocialDataItem(const SocialDataItem& from);

  inline SocialDataItem& operator=(const SocialDataItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SocialDataItem& default_instance();

  void Swap(SocialDataItem* other);

  // implements Message ----------------------------------------------

  SocialDataItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SocialDataItem& from);
  void MergeFrom(const SocialDataItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.ESocialData type = 1 [default = ESOCIALDATA_MIN];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Cmd::ESocialData type() const;
  inline void set_type(::Cmd::ESocialData value);

  // optional uint32 value = 2 [default = 0];
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // optional string data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const char* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Cmd.SocialDataItem)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 value_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_SessionSociality_2eproto();
  friend void protobuf_AssignDesc_SessionSociality_2eproto();
  friend void protobuf_ShutdownFile_SessionSociality_2eproto();

  void InitAsDefaultInstance();
  static SocialDataItem* default_instance_;
};
// -------------------------------------------------------------------

class SocialDataUpdate : public ::google::protobuf::Message {
 public:
  SocialDataUpdate();
  virtual ~SocialDataUpdate();

  SocialDataUpdate(const SocialDataUpdate& from);

  inline SocialDataUpdate& operator=(const SocialDataUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SocialDataUpdate& default_instance();

  void Swap(SocialDataUpdate* other);

  // implements Message ----------------------------------------------

  SocialDataUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SocialDataUpdate& from);
  void MergeFrom(const SocialDataUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_UPDATEDATA];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialityParam param() const;
  inline void set_param(::Cmd::SocialityParam value);

  // optional uint64 guid = 3 [default = 0];
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 3;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // repeated .Cmd.SocialDataItem items = 4;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 4;
  inline const ::Cmd::SocialDataItem& items(int index) const;
  inline ::Cmd::SocialDataItem* mutable_items(int index);
  inline ::Cmd::SocialDataItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SocialDataItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::SocialDataItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:Cmd.SocialDataUpdate)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_guid();
  inline void clear_has_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::SocialDataItem > items_;
  friend void  protobuf_AddDesc_SessionSociality_2eproto();
  friend void protobuf_AssignDesc_SessionSociality_2eproto();
  friend void protobuf_ShutdownFile_SessionSociality_2eproto();

  void InitAsDefaultInstance();
  static SocialDataUpdate* default_instance_;
};
// -------------------------------------------------------------------

class FrameStatusSocialCmd : public ::google::protobuf::Message {
 public:
  FrameStatusSocialCmd();
  virtual ~FrameStatusSocialCmd();

  FrameStatusSocialCmd(const FrameStatusSocialCmd& from);

  inline FrameStatusSocialCmd& operator=(const FrameStatusSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameStatusSocialCmd& default_instance();

  void Swap(FrameStatusSocialCmd* other);

  // implements Message ----------------------------------------------

  FrameStatusSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FrameStatusSocialCmd& from);
  void MergeFrom(const FrameStatusSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_FRAMESTATUS];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialityParam param() const;
  inline void set_param(::Cmd::SocialityParam value);

  // optional bool open = 3 [default = false];
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 3;
  inline bool open() const;
  inline void set_open(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.FrameStatusSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_open();
  inline void clear_has_open();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  bool open_;
  friend void  protobuf_AddDesc_SessionSociality_2eproto();
  friend void protobuf_AssignDesc_SessionSociality_2eproto();
  friend void protobuf_ShutdownFile_SessionSociality_2eproto();

  void InitAsDefaultInstance();
  static FrameStatusSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class UseGiftCodeSocialCmd : public ::google::protobuf::Message {
 public:
  UseGiftCodeSocialCmd();
  virtual ~UseGiftCodeSocialCmd();

  UseGiftCodeSocialCmd(const UseGiftCodeSocialCmd& from);

  inline UseGiftCodeSocialCmd& operator=(const UseGiftCodeSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UseGiftCodeSocialCmd& default_instance();

  void Swap(UseGiftCodeSocialCmd* other);

  // implements Message ----------------------------------------------

  UseGiftCodeSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UseGiftCodeSocialCmd& from);
  void MergeFrom(const UseGiftCodeSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_USE_GIFT_CODE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialityParam param() const;
  inline void set_param(::Cmd::SocialityParam value);

  // optional string code = 3;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 3;
  inline const ::std::string& code() const;
  inline void set_code(const ::std::string& value);
  inline void set_code(const char* value);
  inline void set_code(const char* value, size_t size);
  inline ::std::string* mutable_code();
  inline ::std::string* release_code();
  inline void set_allocated_code(::std::string* code);

  // optional bool ret = 4;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 4;
  inline bool ret() const;
  inline void set_ret(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.UseGiftCodeSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::std::string* code_;
  bool ret_;
  friend void  protobuf_AddDesc_SessionSociality_2eproto();
  friend void protobuf_AssignDesc_SessionSociality_2eproto();
  friend void protobuf_ShutdownFile_SessionSociality_2eproto();

  void InitAsDefaultInstance();
  static UseGiftCodeSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class OperateQuerySocialCmd : public ::google::protobuf::Message {
 public:
  OperateQuerySocialCmd();
  virtual ~OperateQuerySocialCmd();

  OperateQuerySocialCmd(const OperateQuerySocialCmd& from);

  inline OperateQuerySocialCmd& operator=(const OperateQuerySocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperateQuerySocialCmd& default_instance();

  void Swap(OperateQuerySocialCmd* other);

  // implements Message ----------------------------------------------

  OperateQuerySocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperateQuerySocialCmd& from);
  void MergeFrom(const OperateQuerySocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_OPERATE_QUERY];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialityParam param() const;
  inline void set_param(::Cmd::SocialityParam value);

  // optional .Cmd.EOperateType type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::Cmd::EOperateType type() const;
  inline void set_type(::Cmd::EOperateType value);

  // optional .Cmd.EOperateState state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::Cmd::EOperateState state() const;
  inline void set_state(::Cmd::EOperateState value);

  // optional uint32 param1 = 5;
  inline bool has_param1() const;
  inline void clear_param1();
  static const int kParam1FieldNumber = 5;
  inline ::google::protobuf::uint32 param1() const;
  inline void set_param1(::google::protobuf::uint32 value);

  // optional uint32 param2 = 6;
  inline bool has_param2() const;
  inline void clear_param2();
  static const int kParam2FieldNumber = 6;
  inline ::google::protobuf::uint32 param2() const;
  inline void set_param2(::google::protobuf::uint32 value);

  // optional uint32 param3 = 7;
  inline bool has_param3() const;
  inline void clear_param3();
  static const int kParam3FieldNumber = 7;
  inline ::google::protobuf::uint32 param3() const;
  inline void set_param3(::google::protobuf::uint32 value);

  // repeated uint32 param4 = 8;
  inline int param4_size() const;
  inline void clear_param4();
  static const int kParam4FieldNumber = 8;
  inline ::google::protobuf::uint32 param4(int index) const;
  inline void set_param4(int index, ::google::protobuf::uint32 value);
  inline void add_param4(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      param4() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_param4();

  // @@protoc_insertion_point(class_scope:Cmd.OperateQuerySocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_param1();
  inline void clear_has_param1();
  inline void set_has_param2();
  inline void clear_has_param2();
  inline void set_has_param3();
  inline void clear_has_param3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  int type_;
  int state_;
  ::google::protobuf::uint32 param1_;
  ::google::protobuf::uint32 param2_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > param4_;
  ::google::protobuf::uint32 param3_;
  friend void  protobuf_AddDesc_SessionSociality_2eproto();
  friend void protobuf_AssignDesc_SessionSociality_2eproto();
  friend void protobuf_ShutdownFile_SessionSociality_2eproto();

  void InitAsDefaultInstance();
  static OperateQuerySocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class OperateTakeSocialCmd : public ::google::protobuf::Message {
 public:
  OperateTakeSocialCmd();
  virtual ~OperateTakeSocialCmd();

  OperateTakeSocialCmd(const OperateTakeSocialCmd& from);

  inline OperateTakeSocialCmd& operator=(const OperateTakeSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperateTakeSocialCmd& default_instance();

  void Swap(OperateTakeSocialCmd* other);

  // implements Message ----------------------------------------------

  OperateTakeSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperateTakeSocialCmd& from);
  void MergeFrom(const OperateTakeSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_OPERATE_TAKE];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialityParam param() const;
  inline void set_param(::Cmd::SocialityParam value);

  // optional .Cmd.EOperateType type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::Cmd::EOperateType type() const;
  inline void set_type(::Cmd::EOperateType value);

  // optional .Cmd.EOperateState state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::Cmd::EOperateState state() const;
  inline void set_state(::Cmd::EOperateState value);

  // optional uint32 subkey = 5;
  inline bool has_subkey() const;
  inline void clear_subkey();
  static const int kSubkeyFieldNumber = 5;
  inline ::google::protobuf::uint32 subkey() const;
  inline void set_subkey(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.OperateTakeSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_subkey();
  inline void clear_has_subkey();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  int type_;
  int state_;
  ::google::protobuf::uint32 subkey_;
  friend void  protobuf_AddDesc_SessionSociality_2eproto();
  friend void protobuf_AssignDesc_SessionSociality_2eproto();
  friend void protobuf_ShutdownFile_SessionSociality_2eproto();

  void InitAsDefaultInstance();
  static OperateTakeSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class QueryDataNtfSocialCmd : public ::google::protobuf::Message {
 public:
  QueryDataNtfSocialCmd();
  virtual ~QueryDataNtfSocialCmd();

  QueryDataNtfSocialCmd(const QueryDataNtfSocialCmd& from);

  inline QueryDataNtfSocialCmd& operator=(const QueryDataNtfSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryDataNtfSocialCmd& default_instance();

  void Swap(QueryDataNtfSocialCmd* other);

  // implements Message ----------------------------------------------

  QueryDataNtfSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryDataNtfSocialCmd& from);
  void MergeFrom(const QueryDataNtfSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_QUERYDATA_NTF];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialityParam param() const;
  inline void set_param(::Cmd::SocialityParam value);

  // repeated .Cmd.SocialData relations = 3;
  inline int relations_size() const;
  inline void clear_relations();
  static const int kRelationsFieldNumber = 3;
  inline const ::Cmd::SocialData& relations(int index) const;
  inline ::Cmd::SocialData* mutable_relations(int index);
  inline ::Cmd::SocialData* add_relations();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SocialData >&
      relations() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::SocialData >*
      mutable_relations();

  // @@protoc_insertion_point(class_scope:Cmd.QueryDataNtfSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::SocialData > relations_;
  friend void  protobuf_AddDesc_SessionSociality_2eproto();
  friend void protobuf_AssignDesc_SessionSociality_2eproto();
  friend void protobuf_ShutdownFile_SessionSociality_2eproto();

  void InitAsDefaultInstance();
  static QueryDataNtfSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class OperActivityUrl : public ::google::protobuf::Message {
 public:
  OperActivityUrl();
  virtual ~OperActivityUrl();

  OperActivityUrl(const OperActivityUrl& from);

  inline OperActivityUrl& operator=(const OperActivityUrl& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperActivityUrl& default_instance();

  void Swap(OperActivityUrl* other);

  // implements Message ----------------------------------------------

  OperActivityUrl* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperActivityUrl& from);
  void MergeFrom(const OperActivityUrl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 language = 1 [default = 0];
  inline bool has_language() const;
  inline void clear_language();
  static const int kLanguageFieldNumber = 1;
  inline ::google::protobuf::uint32 language() const;
  inline void set_language(::google::protobuf::uint32 value);

  // optional string url = 2;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 2;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:Cmd.OperActivityUrl)
 private:
  inline void set_has_language();
  inline void clear_has_language();
  inline void set_has_url();
  inline void clear_has_url();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* url_;
  ::google::protobuf::uint32 language_;
  friend void  protobuf_AddDesc_SessionSociality_2eproto();
  friend void protobuf_AssignDesc_SessionSociality_2eproto();
  friend void protobuf_ShutdownFile_SessionSociality_2eproto();

  void InitAsDefaultInstance();
  static OperActivityUrl* default_instance_;
};
// -------------------------------------------------------------------

class OperActivityData : public ::google::protobuf::Message {
 public:
  OperActivityData();
  virtual ~OperActivityData();

  OperActivityData(const OperActivityData& from);

  inline OperActivityData& operator=(const OperActivityData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperActivityData& default_instance();

  void Swap(OperActivityData* other);

  // implements Message ----------------------------------------------

  OperActivityData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperActivityData& from);
  void MergeFrom(const OperActivityData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Cmd.OperActivityUrl iconurls = 1;
  inline int iconurls_size() const;
  inline void clear_iconurls();
  static const int kIconurlsFieldNumber = 1;
  inline const ::Cmd::OperActivityUrl& iconurls(int index) const;
  inline ::Cmd::OperActivityUrl* mutable_iconurls(int index);
  inline ::Cmd::OperActivityUrl* add_iconurls();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::OperActivityUrl >&
      iconurls() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::OperActivityUrl >*
      mutable_iconurls();

  // repeated .Cmd.OperActivityUrl urls = 2;
  inline int urls_size() const;
  inline void clear_urls();
  static const int kUrlsFieldNumber = 2;
  inline const ::Cmd::OperActivityUrl& urls(int index) const;
  inline ::Cmd::OperActivityUrl* mutable_urls(int index);
  inline ::Cmd::OperActivityUrl* add_urls();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::OperActivityUrl >&
      urls() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::OperActivityUrl >*
      mutable_urls();

  // @@protoc_insertion_point(class_scope:Cmd.OperActivityData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::OperActivityUrl > iconurls_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::OperActivityUrl > urls_;
  friend void  protobuf_AddDesc_SessionSociality_2eproto();
  friend void protobuf_AssignDesc_SessionSociality_2eproto();
  friend void protobuf_ShutdownFile_SessionSociality_2eproto();

  void InitAsDefaultInstance();
  static OperActivityData* default_instance_;
};
// -------------------------------------------------------------------

class OperSubActivityData : public ::google::protobuf::Message {
 public:
  OperSubActivityData();
  virtual ~OperSubActivityData();

  OperSubActivityData(const OperSubActivityData& from);

  inline OperSubActivityData& operator=(const OperSubActivityData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperSubActivityData& default_instance();

  void Swap(OperSubActivityData* other);

  // implements Message ----------------------------------------------

  OperSubActivityData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperSubActivityData& from);
  void MergeFrom(const OperSubActivityData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Cmd.OperActivityUrl picurls = 1;
  inline int picurls_size() const;
  inline void clear_picurls();
  static const int kPicurlsFieldNumber = 1;
  inline const ::Cmd::OperActivityUrl& picurls(int index) const;
  inline ::Cmd::OperActivityUrl* mutable_picurls(int index);
  inline ::Cmd::OperActivityUrl* add_picurls();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::OperActivityUrl >&
      picurls() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::OperActivityUrl >*
      mutable_picurls();

  // repeated .Cmd.OperActivityUrl urls = 2;
  inline int urls_size() const;
  inline void clear_urls();
  static const int kUrlsFieldNumber = 2;
  inline const ::Cmd::OperActivityUrl& urls(int index) const;
  inline ::Cmd::OperActivityUrl* mutable_urls(int index);
  inline ::Cmd::OperActivityUrl* add_urls();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::OperActivityUrl >&
      urls() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::OperActivityUrl >*
      mutable_urls();

  // @@protoc_insertion_point(class_scope:Cmd.OperSubActivityData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::OperActivityUrl > picurls_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::OperActivityUrl > urls_;
  friend void  protobuf_AddDesc_SessionSociality_2eproto();
  friend void protobuf_AssignDesc_SessionSociality_2eproto();
  friend void protobuf_ShutdownFile_SessionSociality_2eproto();

  void InitAsDefaultInstance();
  static OperSubActivityData* default_instance_;
};
// -------------------------------------------------------------------

class OperSubActivity : public ::google::protobuf::Message {
 public:
  OperSubActivity();
  virtual ~OperSubActivity();

  OperSubActivity(const OperSubActivity& from);

  inline OperSubActivity& operator=(const OperSubActivity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperSubActivity& default_instance();

  void Swap(OperSubActivity* other);

  // implements Message ----------------------------------------------

  OperSubActivity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperSubActivity& from);
  void MergeFrom(const OperSubActivity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 begintime = 4 [default = 0];
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBegintimeFieldNumber = 4;
  inline ::google::protobuf::uint32 begintime() const;
  inline void set_begintime(::google::protobuf::uint32 value);

  // optional uint32 endtime = 5 [default = 0];
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 5;
  inline ::google::protobuf::uint32 endtime() const;
  inline void set_endtime(::google::protobuf::uint32 value);

  // optional uint32 pathid = 6 [default = 0];
  inline bool has_pathid() const;
  inline void clear_pathid();
  static const int kPathidFieldNumber = 6;
  inline ::google::protobuf::uint32 pathid() const;
  inline void set_pathid(::google::protobuf::uint32 value);

  // optional uint32 pathtype = 7 [default = 0];
  inline bool has_pathtype() const;
  inline void clear_pathtype();
  static const int kPathtypeFieldNumber = 7;
  inline ::google::protobuf::uint32 pathtype() const;
  inline void set_pathtype(::google::protobuf::uint32 value);

  // optional string pathevent = 8;
  inline bool has_pathevent() const;
  inline void clear_pathevent();
  static const int kPatheventFieldNumber = 8;
  inline const ::std::string& pathevent() const;
  inline void set_pathevent(const ::std::string& value);
  inline void set_pathevent(const char* value);
  inline void set_pathevent(const char* value, size_t size);
  inline ::std::string* mutable_pathevent();
  inline ::std::string* release_pathevent();
  inline void set_allocated_pathevent(::std::string* pathevent);

  // optional string url = 9;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 9;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // optional string pic_url = 10;
  inline bool has_pic_url() const;
  inline void clear_pic_url();
  static const int kPicUrlFieldNumber = 10;
  inline const ::std::string& pic_url() const;
  inline void set_pic_url(const ::std::string& value);
  inline void set_pic_url(const char* value);
  inline void set_pic_url(const char* value, size_t size);
  inline ::std::string* mutable_pic_url();
  inline ::std::string* release_pic_url();
  inline void set_allocated_pic_url(::std::string* pic_url);

  // optional uint64 groupid = 11 [default = 0];
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupidFieldNumber = 11;
  inline ::google::protobuf::uint64 groupid() const;
  inline void set_groupid(::google::protobuf::uint64 value);

  // optional .Cmd.OperSubActivityData data = 12;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 12;
  inline const ::Cmd::OperSubActivityData& data() const;
  inline ::Cmd::OperSubActivityData* mutable_data();
  inline ::Cmd::OperSubActivityData* release_data();
  inline void set_allocated_data(::Cmd::OperSubActivityData* data);

  // @@protoc_insertion_point(class_scope:Cmd.OperSubActivity)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_pathid();
  inline void clear_has_pathid();
  inline void set_has_pathtype();
  inline void clear_has_pathtype();
  inline void set_has_pathevent();
  inline void clear_has_pathevent();
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_pic_url();
  inline void clear_has_pic_url();
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::std::string* name_;
  ::google::protobuf::uint32 begintime_;
  ::google::protobuf::uint32 endtime_;
  ::google::protobuf::uint32 pathid_;
  ::google::protobuf::uint32 pathtype_;
  ::std::string* pathevent_;
  ::std::string* url_;
  ::std::string* pic_url_;
  ::google::protobuf::uint64 groupid_;
  ::Cmd::OperSubActivityData* data_;
  friend void  protobuf_AddDesc_SessionSociality_2eproto();
  friend void protobuf_AssignDesc_SessionSociality_2eproto();
  friend void protobuf_ShutdownFile_SessionSociality_2eproto();

  void InitAsDefaultInstance();
  static OperSubActivity* default_instance_;
};
// -------------------------------------------------------------------

class OperActivity : public ::google::protobuf::Message {
 public:
  OperActivity();
  virtual ~OperActivity();

  OperActivity(const OperActivity& from);

  inline OperActivity& operator=(const OperActivity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperActivity& default_instance();

  void Swap(OperActivity* other);

  // implements Message ----------------------------------------------

  OperActivity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperActivity& from);
  void MergeFrom(const OperActivity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string iconurl = 3;
  inline bool has_iconurl() const;
  inline void clear_iconurl();
  static const int kIconurlFieldNumber = 3;
  inline const ::std::string& iconurl() const;
  inline void set_iconurl(const ::std::string& value);
  inline void set_iconurl(const char* value);
  inline void set_iconurl(const char* value, size_t size);
  inline ::std::string* mutable_iconurl();
  inline ::std::string* release_iconurl();
  inline void set_allocated_iconurl(::std::string* iconurl);

  // optional uint32 begintime = 4 [default = 0];
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBegintimeFieldNumber = 4;
  inline ::google::protobuf::uint32 begintime() const;
  inline void set_begintime(::google::protobuf::uint32 value);

  // optional uint32 endtime = 5 [default = 0];
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 5;
  inline ::google::protobuf::uint32 endtime() const;
  inline void set_endtime(::google::protobuf::uint32 value);

  // optional string url = 6;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 6;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // optional bool countdown = 7 [default = false];
  inline bool has_countdown() const;
  inline void clear_countdown();
  static const int kCountdownFieldNumber = 7;
  inline bool countdown() const;
  inline void set_countdown(bool value);

  // repeated .Cmd.OperSubActivity sub_activity = 8;
  inline int sub_activity_size() const;
  inline void clear_sub_activity();
  static const int kSubActivityFieldNumber = 8;
  inline const ::Cmd::OperSubActivity& sub_activity(int index) const;
  inline ::Cmd::OperSubActivity* mutable_sub_activity(int index);
  inline ::Cmd::OperSubActivity* add_sub_activity();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::OperSubActivity >&
      sub_activity() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::OperSubActivity >*
      mutable_sub_activity();

  // optional .Cmd.OperActivityData data = 9;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 9;
  inline const ::Cmd::OperActivityData& data() const;
  inline ::Cmd::OperActivityData* mutable_data();
  inline ::Cmd::OperActivityData* release_data();
  inline void set_allocated_data(::Cmd::OperActivityData* data);

  // @@protoc_insertion_point(class_scope:Cmd.OperActivity)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_iconurl();
  inline void clear_has_iconurl();
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_countdown();
  inline void clear_has_countdown();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 begintime_;
  ::std::string* iconurl_;
  ::std::string* url_;
  ::google::protobuf::uint32 endtime_;
  bool countdown_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::OperSubActivity > sub_activity_;
  ::Cmd::OperActivityData* data_;
  friend void  protobuf_AddDesc_SessionSociality_2eproto();
  friend void protobuf_AssignDesc_SessionSociality_2eproto();
  friend void protobuf_ShutdownFile_SessionSociality_2eproto();

  void InitAsDefaultInstance();
  static OperActivity* default_instance_;
};
// -------------------------------------------------------------------

class OperActivityNtfSocialCmd : public ::google::protobuf::Message {
 public:
  OperActivityNtfSocialCmd();
  virtual ~OperActivityNtfSocialCmd();

  OperActivityNtfSocialCmd(const OperActivityNtfSocialCmd& from);

  inline OperActivityNtfSocialCmd& operator=(const OperActivityNtfSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperActivityNtfSocialCmd& default_instance();

  void Swap(OperActivityNtfSocialCmd* other);

  // implements Message ----------------------------------------------

  OperActivityNtfSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperActivityNtfSocialCmd& from);
  void MergeFrom(const OperActivityNtfSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_OPER_ACTIVITY_NTF];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialityParam param() const;
  inline void set_param(::Cmd::SocialityParam value);

  // repeated .Cmd.OperActivity activity = 3;
  inline int activity_size() const;
  inline void clear_activity();
  static const int kActivityFieldNumber = 3;
  inline const ::Cmd::OperActivity& activity(int index) const;
  inline ::Cmd::OperActivity* mutable_activity(int index);
  inline ::Cmd::OperActivity* add_activity();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::OperActivity >&
      activity() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::OperActivity >*
      mutable_activity();

  // @@protoc_insertion_point(class_scope:Cmd.OperActivityNtfSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::OperActivity > activity_;
  friend void  protobuf_AddDesc_SessionSociality_2eproto();
  friend void protobuf_AssignDesc_SessionSociality_2eproto();
  friend void protobuf_ShutdownFile_SessionSociality_2eproto();

  void InitAsDefaultInstance();
  static OperActivityNtfSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class AddRelation : public ::google::protobuf::Message {
 public:
  AddRelation();
  virtual ~AddRelation();

  AddRelation(const AddRelation& from);

  inline AddRelation& operator=(const AddRelation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddRelation& default_instance();

  void Swap(AddRelation* other);

  // implements Message ----------------------------------------------

  AddRelation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddRelation& from);
  void MergeFrom(const AddRelation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_ADDRELATION];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialityParam param() const;
  inline void set_param(::Cmd::SocialityParam value);

  // repeated uint64 charid = 3;
  inline int charid_size() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid(int index) const;
  inline void set_charid(int index, ::google::protobuf::uint64 value);
  inline void add_charid(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      charid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_charid();

  // optional .Cmd.ESocialRelation relation = 4 [default = ESOCIALRELATION_MIN];
  inline bool has_relation() const;
  inline void clear_relation();
  static const int kRelationFieldNumber = 4;
  inline ::Cmd::ESocialRelation relation() const;
  inline void set_relation(::Cmd::ESocialRelation value);

  // @@protoc_insertion_point(class_scope:Cmd.AddRelation)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_relation();
  inline void clear_has_relation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > charid_;
  int relation_;
  friend void  protobuf_AddDesc_SessionSociality_2eproto();
  friend void protobuf_AssignDesc_SessionSociality_2eproto();
  friend void protobuf_ShutdownFile_SessionSociality_2eproto();

  void InitAsDefaultInstance();
  static AddRelation* default_instance_;
};
// -------------------------------------------------------------------

class RemoveRelation : public ::google::protobuf::Message {
 public:
  RemoveRelation();
  virtual ~RemoveRelation();

  RemoveRelation(const RemoveRelation& from);

  inline RemoveRelation& operator=(const RemoveRelation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveRelation& default_instance();

  void Swap(RemoveRelation* other);

  // implements Message ----------------------------------------------

  RemoveRelation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemoveRelation& from);
  void MergeFrom(const RemoveRelation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_REMOVERELATION];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialityParam param() const;
  inline void set_param(::Cmd::SocialityParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional .Cmd.ESocialRelation relation = 4 [default = ESOCIALRELATION_MIN];
  inline bool has_relation() const;
  inline void clear_relation();
  static const int kRelationFieldNumber = 4;
  inline ::Cmd::ESocialRelation relation() const;
  inline void set_relation(::Cmd::ESocialRelation value);

  // @@protoc_insertion_point(class_scope:Cmd.RemoveRelation)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_relation();
  inline void clear_has_relation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  int relation_;
  friend void  protobuf_AddDesc_SessionSociality_2eproto();
  friend void protobuf_AssignDesc_SessionSociality_2eproto();
  friend void protobuf_ShutdownFile_SessionSociality_2eproto();

  void InitAsDefaultInstance();
  static RemoveRelation* default_instance_;
};
// -------------------------------------------------------------------

class Recall : public ::google::protobuf::Message {
 public:
  Recall();
  virtual ~Recall();

  Recall(const Recall& from);

  inline Recall& operator=(const Recall& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Recall& default_instance();

  void Swap(Recall* other);

  // implements Message ----------------------------------------------

  Recall* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Recall& from);
  void MergeFrom(const Recall& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charid = 1 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.Recall)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  friend void  protobuf_AddDesc_SessionSociality_2eproto();
  friend void protobuf_AssignDesc_SessionSociality_2eproto();
  friend void protobuf_ShutdownFile_SessionSociality_2eproto();

  void InitAsDefaultInstance();
  static Recall* default_instance_;
};
// -------------------------------------------------------------------

class QueryRecallListSocialCmd : public ::google::protobuf::Message {
 public:
  QueryRecallListSocialCmd();
  virtual ~QueryRecallListSocialCmd();

  QueryRecallListSocialCmd(const QueryRecallListSocialCmd& from);

  inline QueryRecallListSocialCmd& operator=(const QueryRecallListSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryRecallListSocialCmd& default_instance();

  void Swap(QueryRecallListSocialCmd* other);

  // implements Message ----------------------------------------------

  QueryRecallListSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryRecallListSocialCmd& from);
  void MergeFrom(const QueryRecallListSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_QUERY_RECALL_LIST];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialityParam param() const;
  inline void set_param(::Cmd::SocialityParam value);

  // repeated .Cmd.Recall items = 3;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 3;
  inline const ::Cmd::Recall& items(int index) const;
  inline ::Cmd::Recall* mutable_items(int index);
  inline ::Cmd::Recall* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::Recall >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::Recall >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:Cmd.QueryRecallListSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedPtrField< ::Cmd::Recall > items_;
  friend void  protobuf_AddDesc_SessionSociality_2eproto();
  friend void protobuf_AssignDesc_SessionSociality_2eproto();
  friend void protobuf_ShutdownFile_SessionSociality_2eproto();

  void InitAsDefaultInstance();
  static QueryRecallListSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class RecallFriendSocialCmd : public ::google::protobuf::Message {
 public:
  RecallFriendSocialCmd();
  virtual ~RecallFriendSocialCmd();

  RecallFriendSocialCmd(const RecallFriendSocialCmd& from);

  inline RecallFriendSocialCmd& operator=(const RecallFriendSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecallFriendSocialCmd& default_instance();

  void Swap(RecallFriendSocialCmd* other);

  // implements Message ----------------------------------------------

  RecallFriendSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecallFriendSocialCmd& from);
  void MergeFrom(const RecallFriendSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_RECALL_FRIEND];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialityParam param() const;
  inline void set_param(::Cmd::SocialityParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.RecallFriendSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  friend void  protobuf_AddDesc_SessionSociality_2eproto();
  friend void protobuf_AssignDesc_SessionSociality_2eproto();
  friend void protobuf_ShutdownFile_SessionSociality_2eproto();

  void InitAsDefaultInstance();
  static RecallFriendSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class AddRelationResultSocialCmd : public ::google::protobuf::Message {
 public:
  AddRelationResultSocialCmd();
  virtual ~AddRelationResultSocialCmd();

  AddRelationResultSocialCmd(const AddRelationResultSocialCmd& from);

  inline AddRelationResultSocialCmd& operator=(const AddRelationResultSocialCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddRelationResultSocialCmd& default_instance();

  void Swap(AddRelationResultSocialCmd* other);

  // implements Message ----------------------------------------------

  AddRelationResultSocialCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddRelationResultSocialCmd& from);
  void MergeFrom(const AddRelationResultSocialCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_ADD_RELATION_RESULT];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialityParam param() const;
  inline void set_param(::Cmd::SocialityParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional .Cmd.ESocialRelation relation = 4 [default = ESOCIALRELATION_MIN];
  inline bool has_relation() const;
  inline void clear_relation();
  static const int kRelationFieldNumber = 4;
  inline ::Cmd::ESocialRelation relation() const;
  inline void set_relation(::Cmd::ESocialRelation value);

  // optional bool success = 5 [default = false];
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 5;
  inline bool success() const;
  inline void set_success(bool value);

  // @@protoc_insertion_point(class_scope:Cmd.AddRelationResultSocialCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_relation();
  inline void clear_has_relation();
  inline void set_has_success();
  inline void clear_has_success();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  int relation_;
  bool success_;
  friend void  protobuf_AddDesc_SessionSociality_2eproto();
  friend void protobuf_AssignDesc_SessionSociality_2eproto();
  friend void protobuf_ShutdownFile_SessionSociality_2eproto();

  void InitAsDefaultInstance();
  static AddRelationResultSocialCmd* default_instance_;
};
// -------------------------------------------------------------------

class QueryChargeVirginCmd : public ::google::protobuf::Message {
 public:
  QueryChargeVirginCmd();
  virtual ~QueryChargeVirginCmd();

  QueryChargeVirginCmd(const QueryChargeVirginCmd& from);

  inline QueryChargeVirginCmd& operator=(const QueryChargeVirginCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryChargeVirginCmd& default_instance();

  void Swap(QueryChargeVirginCmd* other);

  // implements Message ----------------------------------------------

  QueryChargeVirginCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryChargeVirginCmd& from);
  void MergeFrom(const QueryChargeVirginCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_QUERY_CHARGE_VIRGIN];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialityParam param() const;
  inline void set_param(::Cmd::SocialityParam value);

  // repeated uint64 datas = 3;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 3;
  inline ::google::protobuf::uint64 datas(int index) const;
  inline void set_datas(int index, ::google::protobuf::uint64 value);
  inline void add_datas(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      datas() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_datas();

  // optional uint64 del = 4 [default = 0];
  inline bool has_del() const;
  inline void clear_del();
  static const int kDelFieldNumber = 4;
  inline ::google::protobuf::uint64 del() const;
  inline void set_del(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cmd.QueryChargeVirginCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_del();
  inline void clear_has_del();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > datas_;
  ::google::protobuf::uint64 del_;
  friend void  protobuf_AddDesc_SessionSociality_2eproto();
  friend void protobuf_AssignDesc_SessionSociality_2eproto();
  friend void protobuf_ShutdownFile_SessionSociality_2eproto();

  void InitAsDefaultInstance();
  static QueryChargeVirginCmd* default_instance_;
};
// -------------------------------------------------------------------

class QueryUserInfoCmd : public ::google::protobuf::Message {
 public:
  QueryUserInfoCmd();
  virtual ~QueryUserInfoCmd();

  QueryUserInfoCmd(const QueryUserInfoCmd& from);

  inline QueryUserInfoCmd& operator=(const QueryUserInfoCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryUserInfoCmd& default_instance();

  void Swap(QueryUserInfoCmd* other);

  // implements Message ----------------------------------------------

  QueryUserInfoCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryUserInfoCmd& from);
  void MergeFrom(const QueryUserInfoCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Cmd::Command cmd() const;
  inline void set_cmd(::Cmd::Command value);

  // optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_QUERY_USER_INFO];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::Cmd::SocialityParam param() const;
  inline void set_param(::Cmd::SocialityParam value);

  // optional uint64 charid = 3 [default = 0];
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional .Cmd.SocialData data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::Cmd::SocialData& data() const;
  inline ::Cmd::SocialData* mutable_data();
  inline ::Cmd::SocialData* release_data();
  inline void set_allocated_data(::Cmd::SocialData* data);

  // @@protoc_insertion_point(class_scope:Cmd.QueryUserInfoCmd)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmd_;
  int param_;
  ::google::protobuf::uint64 charid_;
  ::Cmd::SocialData* data_;
  friend void  protobuf_AddDesc_SessionSociality_2eproto();
  friend void protobuf_AssignDesc_SessionSociality_2eproto();
  friend void protobuf_ShutdownFile_SessionSociality_2eproto();

  void InitAsDefaultInstance();
  static QueryUserInfoCmd* default_instance_;
};
// ===================================================================


// ===================================================================

// SocialData

// optional uint64 guid = 1 [default = 0];
inline bool SocialData::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SocialData::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SocialData::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SocialData::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 SocialData::guid() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialData.guid)
  return guid_;
}
inline void SocialData::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialData.guid)
}

// optional uint64 accid = 2 [default = 0];
inline bool SocialData::has_accid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SocialData::set_has_accid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SocialData::clear_has_accid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SocialData::clear_accid() {
  accid_ = GOOGLE_ULONGLONG(0);
  clear_has_accid();
}
inline ::google::protobuf::uint64 SocialData::accid() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialData.accid)
  return accid_;
}
inline void SocialData::set_accid(::google::protobuf::uint64 value) {
  set_has_accid();
  accid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialData.accid)
}

// optional uint32 level = 3 [default = 0];
inline bool SocialData::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SocialData::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SocialData::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SocialData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 SocialData::level() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialData.level)
  return level_;
}
inline void SocialData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialData.level)
}

// optional uint32 offlinetime = 4 [default = 0];
inline bool SocialData::has_offlinetime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SocialData::set_has_offlinetime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SocialData::clear_has_offlinetime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SocialData::clear_offlinetime() {
  offlinetime_ = 0u;
  clear_has_offlinetime();
}
inline ::google::protobuf::uint32 SocialData::offlinetime() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialData.offlinetime)
  return offlinetime_;
}
inline void SocialData::set_offlinetime(::google::protobuf::uint32 value) {
  set_has_offlinetime();
  offlinetime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialData.offlinetime)
}

// optional uint32 relation = 5 [default = 0];
inline bool SocialData::has_relation() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SocialData::set_has_relation() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SocialData::clear_has_relation() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SocialData::clear_relation() {
  relation_ = 0u;
  clear_has_relation();
}
inline ::google::protobuf::uint32 SocialData::relation() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialData.relation)
  return relation_;
}
inline void SocialData::set_relation(::google::protobuf::uint32 value) {
  set_has_relation();
  relation_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialData.relation)
}

// optional uint32 portrait = 6 [default = 0];
inline bool SocialData::has_portrait() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SocialData::set_has_portrait() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SocialData::clear_has_portrait() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SocialData::clear_portrait() {
  portrait_ = 0u;
  clear_has_portrait();
}
inline ::google::protobuf::uint32 SocialData::portrait() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialData.portrait)
  return portrait_;
}
inline void SocialData::set_portrait(::google::protobuf::uint32 value) {
  set_has_portrait();
  portrait_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialData.portrait)
}

// optional uint32 frame = 7 [default = 0];
inline bool SocialData::has_frame() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SocialData::set_has_frame() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SocialData::clear_has_frame() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SocialData::clear_frame() {
  frame_ = 0u;
  clear_has_frame();
}
inline ::google::protobuf::uint32 SocialData::frame() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialData.frame)
  return frame_;
}
inline void SocialData::set_frame(::google::protobuf::uint32 value) {
  set_has_frame();
  frame_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialData.frame)
}

// optional uint32 hair = 8 [default = 0];
inline bool SocialData::has_hair() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SocialData::set_has_hair() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SocialData::clear_has_hair() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SocialData::clear_hair() {
  hair_ = 0u;
  clear_has_hair();
}
inline ::google::protobuf::uint32 SocialData::hair() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialData.hair)
  return hair_;
}
inline void SocialData::set_hair(::google::protobuf::uint32 value) {
  set_has_hair();
  hair_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialData.hair)
}

// optional uint32 haircolor = 9 [default = 0];
inline bool SocialData::has_haircolor() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SocialData::set_has_haircolor() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SocialData::clear_has_haircolor() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SocialData::clear_haircolor() {
  haircolor_ = 0u;
  clear_has_haircolor();
}
inline ::google::protobuf::uint32 SocialData::haircolor() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialData.haircolor)
  return haircolor_;
}
inline void SocialData::set_haircolor(::google::protobuf::uint32 value) {
  set_has_haircolor();
  haircolor_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialData.haircolor)
}

// optional uint32 body = 10 [default = 0];
inline bool SocialData::has_body() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SocialData::set_has_body() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SocialData::clear_has_body() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SocialData::clear_body() {
  body_ = 0u;
  clear_has_body();
}
inline ::google::protobuf::uint32 SocialData::body() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialData.body)
  return body_;
}
inline void SocialData::set_body(::google::protobuf::uint32 value) {
  set_has_body();
  body_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialData.body)
}

// optional uint32 head = 11 [default = 0];
inline bool SocialData::has_head() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SocialData::set_has_head() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SocialData::clear_has_head() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SocialData::clear_head() {
  head_ = 0u;
  clear_has_head();
}
inline ::google::protobuf::uint32 SocialData::head() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialData.head)
  return head_;
}
inline void SocialData::set_head(::google::protobuf::uint32 value) {
  set_has_head();
  head_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialData.head)
}

// optional uint32 face = 12 [default = 0];
inline bool SocialData::has_face() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SocialData::set_has_face() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SocialData::clear_has_face() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SocialData::clear_face() {
  face_ = 0u;
  clear_has_face();
}
inline ::google::protobuf::uint32 SocialData::face() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialData.face)
  return face_;
}
inline void SocialData::set_face(::google::protobuf::uint32 value) {
  set_has_face();
  face_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialData.face)
}

// optional uint32 mouth = 13 [default = 0];
inline bool SocialData::has_mouth() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SocialData::set_has_mouth() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SocialData::clear_has_mouth() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SocialData::clear_mouth() {
  mouth_ = 0u;
  clear_has_mouth();
}
inline ::google::protobuf::uint32 SocialData::mouth() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialData.mouth)
  return mouth_;
}
inline void SocialData::set_mouth(::google::protobuf::uint32 value) {
  set_has_mouth();
  mouth_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialData.mouth)
}

// optional uint32 eye = 14 [default = 0];
inline bool SocialData::has_eye() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SocialData::set_has_eye() {
  _has_bits_[0] |= 0x00002000u;
}
inline void SocialData::clear_has_eye() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void SocialData::clear_eye() {
  eye_ = 0u;
  clear_has_eye();
}
inline ::google::protobuf::uint32 SocialData::eye() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialData.eye)
  return eye_;
}
inline void SocialData::set_eye(::google::protobuf::uint32 value) {
  set_has_eye();
  eye_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialData.eye)
}

// optional uint32 profic = 15 [default = 0];
inline bool SocialData::has_profic() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SocialData::set_has_profic() {
  _has_bits_[0] |= 0x00004000u;
}
inline void SocialData::clear_has_profic() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void SocialData::clear_profic() {
  profic_ = 0u;
  clear_has_profic();
}
inline ::google::protobuf::uint32 SocialData::profic() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialData.profic)
  return profic_;
}
inline void SocialData::set_profic(::google::protobuf::uint32 value) {
  set_has_profic();
  profic_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialData.profic)
}

// optional uint32 adventurelv = 16 [default = 0];
inline bool SocialData::has_adventurelv() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void SocialData::set_has_adventurelv() {
  _has_bits_[0] |= 0x00008000u;
}
inline void SocialData::clear_has_adventurelv() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void SocialData::clear_adventurelv() {
  adventurelv_ = 0u;
  clear_has_adventurelv();
}
inline ::google::protobuf::uint32 SocialData::adventurelv() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialData.adventurelv)
  return adventurelv_;
}
inline void SocialData::set_adventurelv(::google::protobuf::uint32 value) {
  set_has_adventurelv();
  adventurelv_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialData.adventurelv)
}

// optional uint32 adventureexp = 17 [default = 0];
inline bool SocialData::has_adventureexp() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void SocialData::set_has_adventureexp() {
  _has_bits_[0] |= 0x00010000u;
}
inline void SocialData::clear_has_adventureexp() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void SocialData::clear_adventureexp() {
  adventureexp_ = 0u;
  clear_has_adventureexp();
}
inline ::google::protobuf::uint32 SocialData::adventureexp() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialData.adventureexp)
  return adventureexp_;
}
inline void SocialData::set_adventureexp(::google::protobuf::uint32 value) {
  set_has_adventureexp();
  adventureexp_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialData.adventureexp)
}

// optional uint32 appellation = 18 [default = 0];
inline bool SocialData::has_appellation() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void SocialData::set_has_appellation() {
  _has_bits_[0] |= 0x00020000u;
}
inline void SocialData::clear_has_appellation() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void SocialData::clear_appellation() {
  appellation_ = 0u;
  clear_has_appellation();
}
inline ::google::protobuf::uint32 SocialData::appellation() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialData.appellation)
  return appellation_;
}
inline void SocialData::set_appellation(::google::protobuf::uint32 value) {
  set_has_appellation();
  appellation_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialData.appellation)
}

// optional uint32 mapid = 19 [default = 0];
inline bool SocialData::has_mapid() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void SocialData::set_has_mapid() {
  _has_bits_[0] |= 0x00040000u;
}
inline void SocialData::clear_has_mapid() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void SocialData::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 SocialData::mapid() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialData.mapid)
  return mapid_;
}
inline void SocialData::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialData.mapid)
}

// optional uint32 zoneid = 20 [default = 0];
inline bool SocialData::has_zoneid() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void SocialData::set_has_zoneid() {
  _has_bits_[0] |= 0x00080000u;
}
inline void SocialData::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void SocialData::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 SocialData::zoneid() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialData.zoneid)
  return zoneid_;
}
inline void SocialData::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialData.zoneid)
}

// optional .Cmd.EProfession profession = 21 [default = EPROFESSION_MIN];
inline bool SocialData::has_profession() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void SocialData::set_has_profession() {
  _has_bits_[0] |= 0x00100000u;
}
inline void SocialData::clear_has_profession() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void SocialData::clear_profession() {
  profession_ = 0;
  clear_has_profession();
}
inline ::Cmd::EProfession SocialData::profession() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialData.profession)
  return static_cast< ::Cmd::EProfession >(profession_);
}
inline void SocialData::set_profession(::Cmd::EProfession value) {
  assert(::Cmd::EProfession_IsValid(value));
  set_has_profession();
  profession_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialData.profession)
}

// optional .Cmd.EGender gender = 22 [default = EGENDER_MIN];
inline bool SocialData::has_gender() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void SocialData::set_has_gender() {
  _has_bits_[0] |= 0x00200000u;
}
inline void SocialData::clear_has_gender() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void SocialData::clear_gender() {
  gender_ = 0;
  clear_has_gender();
}
inline ::Cmd::EGender SocialData::gender() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialData.gender)
  return static_cast< ::Cmd::EGender >(gender_);
}
inline void SocialData::set_gender(::Cmd::EGender value) {
  assert(::Cmd::EGender_IsValid(value));
  set_has_gender();
  gender_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialData.gender)
}

// optional bool blink = 23 [default = false];
inline bool SocialData::has_blink() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void SocialData::set_has_blink() {
  _has_bits_[0] |= 0x00400000u;
}
inline void SocialData::clear_has_blink() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void SocialData::clear_blink() {
  blink_ = false;
  clear_has_blink();
}
inline bool SocialData::blink() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialData.blink)
  return blink_;
}
inline void SocialData::set_blink(bool value) {
  set_has_blink();
  blink_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialData.blink)
}

// optional bool recall = 24 [default = false];
inline bool SocialData::has_recall() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void SocialData::set_has_recall() {
  _has_bits_[0] |= 0x00800000u;
}
inline void SocialData::clear_has_recall() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void SocialData::clear_recall() {
  recall_ = false;
  clear_has_recall();
}
inline bool SocialData::recall() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialData.recall)
  return recall_;
}
inline void SocialData::set_recall(bool value) {
  set_has_recall();
  recall_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialData.recall)
}

// optional bool canrecall = 25 [default = false];
inline bool SocialData::has_canrecall() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void SocialData::set_has_canrecall() {
  _has_bits_[0] |= 0x01000000u;
}
inline void SocialData::clear_has_canrecall() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void SocialData::clear_canrecall() {
  canrecall_ = false;
  clear_has_canrecall();
}
inline bool SocialData::canrecall() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialData.canrecall)
  return canrecall_;
}
inline void SocialData::set_canrecall(bool value) {
  set_has_canrecall();
  canrecall_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialData.canrecall)
}

// optional string name = 26;
inline bool SocialData::has_name() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void SocialData::set_has_name() {
  _has_bits_[0] |= 0x02000000u;
}
inline void SocialData::clear_has_name() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void SocialData::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& SocialData::name() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialData.name)
  return *name_;
}
inline void SocialData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.SocialData.name)
}
inline void SocialData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.SocialData.name)
}
inline void SocialData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.SocialData.name)
}
inline ::std::string* SocialData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.SocialData.name)
  return name_;
}
inline ::std::string* SocialData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SocialData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.SocialData.name)
}

// optional string guildname = 27;
inline bool SocialData::has_guildname() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void SocialData::set_has_guildname() {
  _has_bits_[0] |= 0x04000000u;
}
inline void SocialData::clear_has_guildname() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void SocialData::clear_guildname() {
  if (guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_->clear();
  }
  clear_has_guildname();
}
inline const ::std::string& SocialData::guildname() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialData.guildname)
  return *guildname_;
}
inline void SocialData::set_guildname(const ::std::string& value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.SocialData.guildname)
}
inline void SocialData::set_guildname(const char* value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.SocialData.guildname)
}
inline void SocialData::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.SocialData.guildname)
}
inline ::std::string* SocialData::mutable_guildname() {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.SocialData.guildname)
  return guildname_;
}
inline ::std::string* SocialData::release_guildname() {
  clear_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guildname_;
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SocialData::set_allocated_guildname(::std::string* guildname) {
  if (guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guildname_;
  }
  if (guildname) {
    set_has_guildname();
    guildname_ = guildname;
  } else {
    clear_has_guildname();
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.SocialData.guildname)
}

// optional string guildportrait = 28;
inline bool SocialData::has_guildportrait() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void SocialData::set_has_guildportrait() {
  _has_bits_[0] |= 0x08000000u;
}
inline void SocialData::clear_has_guildportrait() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void SocialData::clear_guildportrait() {
  if (guildportrait_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildportrait_->clear();
  }
  clear_has_guildportrait();
}
inline const ::std::string& SocialData::guildportrait() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialData.guildportrait)
  return *guildportrait_;
}
inline void SocialData::set_guildportrait(const ::std::string& value) {
  set_has_guildportrait();
  if (guildportrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildportrait_ = new ::std::string;
  }
  guildportrait_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.SocialData.guildportrait)
}
inline void SocialData::set_guildportrait(const char* value) {
  set_has_guildportrait();
  if (guildportrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildportrait_ = new ::std::string;
  }
  guildportrait_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.SocialData.guildportrait)
}
inline void SocialData::set_guildportrait(const char* value, size_t size) {
  set_has_guildportrait();
  if (guildportrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildportrait_ = new ::std::string;
  }
  guildportrait_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.SocialData.guildportrait)
}
inline ::std::string* SocialData::mutable_guildportrait() {
  set_has_guildportrait();
  if (guildportrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildportrait_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.SocialData.guildportrait)
  return guildportrait_;
}
inline ::std::string* SocialData::release_guildportrait() {
  clear_has_guildportrait();
  if (guildportrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guildportrait_;
    guildportrait_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SocialData::set_allocated_guildportrait(::std::string* guildportrait) {
  if (guildportrait_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guildportrait_;
  }
  if (guildportrait) {
    set_has_guildportrait();
    guildportrait_ = guildportrait;
  } else {
    clear_has_guildportrait();
    guildportrait_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.SocialData.guildportrait)
}

// optional string createtime = 29;
inline bool SocialData::has_createtime() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void SocialData::set_has_createtime() {
  _has_bits_[0] |= 0x10000000u;
}
inline void SocialData::clear_has_createtime() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void SocialData::clear_createtime() {
  if (createtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createtime_->clear();
  }
  clear_has_createtime();
}
inline const ::std::string& SocialData::createtime() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialData.createtime)
  return *createtime_;
}
inline void SocialData::set_createtime(const ::std::string& value) {
  set_has_createtime();
  if (createtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createtime_ = new ::std::string;
  }
  createtime_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.SocialData.createtime)
}
inline void SocialData::set_createtime(const char* value) {
  set_has_createtime();
  if (createtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createtime_ = new ::std::string;
  }
  createtime_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.SocialData.createtime)
}
inline void SocialData::set_createtime(const char* value, size_t size) {
  set_has_createtime();
  if (createtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createtime_ = new ::std::string;
  }
  createtime_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.SocialData.createtime)
}
inline ::std::string* SocialData::mutable_createtime() {
  set_has_createtime();
  if (createtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createtime_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.SocialData.createtime)
  return createtime_;
}
inline ::std::string* SocialData::release_createtime() {
  clear_has_createtime();
  if (createtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = createtime_;
    createtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SocialData::set_allocated_createtime(::std::string* createtime) {
  if (createtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete createtime_;
  }
  if (createtime) {
    set_has_createtime();
    createtime_ = createtime;
  } else {
    clear_has_createtime();
    createtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.SocialData.createtime)
}

// -------------------------------------------------------------------

// QuerySocialData

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
inline bool QuerySocialData::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuerySocialData::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuerySocialData::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuerySocialData::clear_cmd() {
  cmd_ = 56;
  clear_has_cmd();
}
inline ::Cmd::Command QuerySocialData::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QuerySocialData.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QuerySocialData::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QuerySocialData.cmd)
}

// optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_QUERYDATA];
inline bool QuerySocialData::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuerySocialData::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuerySocialData::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuerySocialData::clear_param() {
  param_ = 1;
  clear_has_param();
}
inline ::Cmd::SocialityParam QuerySocialData::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QuerySocialData.param)
  return static_cast< ::Cmd::SocialityParam >(param_);
}
inline void QuerySocialData::set_param(::Cmd::SocialityParam value) {
  assert(::Cmd::SocialityParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QuerySocialData.param)
}

// repeated .Cmd.SocialData datas = 4;
inline int QuerySocialData::datas_size() const {
  return datas_.size();
}
inline void QuerySocialData::clear_datas() {
  datas_.Clear();
}
inline const ::Cmd::SocialData& QuerySocialData::datas(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QuerySocialData.datas)
  return datas_.Get(index);
}
inline ::Cmd::SocialData* QuerySocialData::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.QuerySocialData.datas)
  return datas_.Mutable(index);
}
inline ::Cmd::SocialData* QuerySocialData::add_datas() {
  // @@protoc_insertion_point(field_add:Cmd.QuerySocialData.datas)
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SocialData >&
QuerySocialData::datas() const {
  // @@protoc_insertion_point(field_list:Cmd.QuerySocialData.datas)
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::SocialData >*
QuerySocialData::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QuerySocialData.datas)
  return &datas_;
}

// -------------------------------------------------------------------

// FindUser

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
inline bool FindUser::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FindUser::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FindUser::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FindUser::clear_cmd() {
  cmd_ = 56;
  clear_has_cmd();
}
inline ::Cmd::Command FindUser::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.FindUser.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void FindUser::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FindUser.cmd)
}

// optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_FINDUSER];
inline bool FindUser::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FindUser::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FindUser::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FindUser::clear_param() {
  param_ = 2;
  clear_has_param();
}
inline ::Cmd::SocialityParam FindUser::param() const {
  // @@protoc_insertion_point(field_get:Cmd.FindUser.param)
  return static_cast< ::Cmd::SocialityParam >(param_);
}
inline void FindUser::set_param(::Cmd::SocialityParam value) {
  assert(::Cmd::SocialityParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FindUser.param)
}

// optional string keyword = 3;
inline bool FindUser::has_keyword() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FindUser::set_has_keyword() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FindUser::clear_has_keyword() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FindUser::clear_keyword() {
  if (keyword_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    keyword_->clear();
  }
  clear_has_keyword();
}
inline const ::std::string& FindUser::keyword() const {
  // @@protoc_insertion_point(field_get:Cmd.FindUser.keyword)
  return *keyword_;
}
inline void FindUser::set_keyword(const ::std::string& value) {
  set_has_keyword();
  if (keyword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    keyword_ = new ::std::string;
  }
  keyword_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.FindUser.keyword)
}
inline void FindUser::set_keyword(const char* value) {
  set_has_keyword();
  if (keyword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    keyword_ = new ::std::string;
  }
  keyword_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.FindUser.keyword)
}
inline void FindUser::set_keyword(const char* value, size_t size) {
  set_has_keyword();
  if (keyword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    keyword_ = new ::std::string;
  }
  keyword_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.FindUser.keyword)
}
inline ::std::string* FindUser::mutable_keyword() {
  set_has_keyword();
  if (keyword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    keyword_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.FindUser.keyword)
  return keyword_;
}
inline ::std::string* FindUser::release_keyword() {
  clear_has_keyword();
  if (keyword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = keyword_;
    keyword_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FindUser::set_allocated_keyword(::std::string* keyword) {
  if (keyword_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete keyword_;
  }
  if (keyword) {
    set_has_keyword();
    keyword_ = keyword;
  } else {
    clear_has_keyword();
    keyword_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.FindUser.keyword)
}

// repeated .Cmd.SocialData datas = 4;
inline int FindUser::datas_size() const {
  return datas_.size();
}
inline void FindUser::clear_datas() {
  datas_.Clear();
}
inline const ::Cmd::SocialData& FindUser::datas(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.FindUser.datas)
  return datas_.Get(index);
}
inline ::Cmd::SocialData* FindUser::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.FindUser.datas)
  return datas_.Mutable(index);
}
inline ::Cmd::SocialData* FindUser::add_datas() {
  // @@protoc_insertion_point(field_add:Cmd.FindUser.datas)
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SocialData >&
FindUser::datas() const {
  // @@protoc_insertion_point(field_list:Cmd.FindUser.datas)
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::SocialData >*
FindUser::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.FindUser.datas)
  return &datas_;
}

// -------------------------------------------------------------------

// SocialUpdate

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
inline bool SocialUpdate::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SocialUpdate::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SocialUpdate::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SocialUpdate::clear_cmd() {
  cmd_ = 56;
  clear_has_cmd();
}
inline ::Cmd::Command SocialUpdate::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialUpdate.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SocialUpdate::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialUpdate.cmd)
}

// optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_UPDATE];
inline bool SocialUpdate::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SocialUpdate::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SocialUpdate::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SocialUpdate::clear_param() {
  param_ = 3;
  clear_has_param();
}
inline ::Cmd::SocialityParam SocialUpdate::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialUpdate.param)
  return static_cast< ::Cmd::SocialityParam >(param_);
}
inline void SocialUpdate::set_param(::Cmd::SocialityParam value) {
  assert(::Cmd::SocialityParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialUpdate.param)
}

// repeated .Cmd.SocialData updates = 4;
inline int SocialUpdate::updates_size() const {
  return updates_.size();
}
inline void SocialUpdate::clear_updates() {
  updates_.Clear();
}
inline const ::Cmd::SocialData& SocialUpdate::updates(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SocialUpdate.updates)
  return updates_.Get(index);
}
inline ::Cmd::SocialData* SocialUpdate::mutable_updates(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.SocialUpdate.updates)
  return updates_.Mutable(index);
}
inline ::Cmd::SocialData* SocialUpdate::add_updates() {
  // @@protoc_insertion_point(field_add:Cmd.SocialUpdate.updates)
  return updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SocialData >&
SocialUpdate::updates() const {
  // @@protoc_insertion_point(field_list:Cmd.SocialUpdate.updates)
  return updates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::SocialData >*
SocialUpdate::mutable_updates() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SocialUpdate.updates)
  return &updates_;
}

// repeated uint64 dels = 5;
inline int SocialUpdate::dels_size() const {
  return dels_.size();
}
inline void SocialUpdate::clear_dels() {
  dels_.Clear();
}
inline ::google::protobuf::uint64 SocialUpdate::dels(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SocialUpdate.dels)
  return dels_.Get(index);
}
inline void SocialUpdate::set_dels(int index, ::google::protobuf::uint64 value) {
  dels_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.SocialUpdate.dels)
}
inline void SocialUpdate::add_dels(::google::protobuf::uint64 value) {
  dels_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.SocialUpdate.dels)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
SocialUpdate::dels() const {
  // @@protoc_insertion_point(field_list:Cmd.SocialUpdate.dels)
  return dels_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
SocialUpdate::mutable_dels() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SocialUpdate.dels)
  return &dels_;
}

// -------------------------------------------------------------------

// SocialDataItem

// optional .Cmd.ESocialData type = 1 [default = ESOCIALDATA_MIN];
inline bool SocialDataItem::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SocialDataItem::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SocialDataItem::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SocialDataItem::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::Cmd::ESocialData SocialDataItem::type() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialDataItem.type)
  return static_cast< ::Cmd::ESocialData >(type_);
}
inline void SocialDataItem::set_type(::Cmd::ESocialData value) {
  assert(::Cmd::ESocialData_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialDataItem.type)
}

// optional uint32 value = 2 [default = 0];
inline bool SocialDataItem::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SocialDataItem::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SocialDataItem::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SocialDataItem::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 SocialDataItem::value() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialDataItem.value)
  return value_;
}
inline void SocialDataItem::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialDataItem.value)
}

// optional string data = 3;
inline bool SocialDataItem::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SocialDataItem::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SocialDataItem::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SocialDataItem::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& SocialDataItem::data() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialDataItem.data)
  return *data_;
}
inline void SocialDataItem::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.SocialDataItem.data)
}
inline void SocialDataItem::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.SocialDataItem.data)
}
inline void SocialDataItem::set_data(const char* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.SocialDataItem.data)
}
inline ::std::string* SocialDataItem::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.SocialDataItem.data)
  return data_;
}
inline ::std::string* SocialDataItem::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SocialDataItem::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.SocialDataItem.data)
}

// -------------------------------------------------------------------

// SocialDataUpdate

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
inline bool SocialDataUpdate::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SocialDataUpdate::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SocialDataUpdate::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SocialDataUpdate::clear_cmd() {
  cmd_ = 56;
  clear_has_cmd();
}
inline ::Cmd::Command SocialDataUpdate::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialDataUpdate.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void SocialDataUpdate::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialDataUpdate.cmd)
}

// optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_UPDATEDATA];
inline bool SocialDataUpdate::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SocialDataUpdate::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SocialDataUpdate::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SocialDataUpdate::clear_param() {
  param_ = 4;
  clear_has_param();
}
inline ::Cmd::SocialityParam SocialDataUpdate::param() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialDataUpdate.param)
  return static_cast< ::Cmd::SocialityParam >(param_);
}
inline void SocialDataUpdate::set_param(::Cmd::SocialityParam value) {
  assert(::Cmd::SocialityParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialDataUpdate.param)
}

// optional uint64 guid = 3 [default = 0];
inline bool SocialDataUpdate::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SocialDataUpdate::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SocialDataUpdate::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SocialDataUpdate::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 SocialDataUpdate::guid() const {
  // @@protoc_insertion_point(field_get:Cmd.SocialDataUpdate.guid)
  return guid_;
}
inline void SocialDataUpdate::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.SocialDataUpdate.guid)
}

// repeated .Cmd.SocialDataItem items = 4;
inline int SocialDataUpdate::items_size() const {
  return items_.size();
}
inline void SocialDataUpdate::clear_items() {
  items_.Clear();
}
inline const ::Cmd::SocialDataItem& SocialDataUpdate::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.SocialDataUpdate.items)
  return items_.Get(index);
}
inline ::Cmd::SocialDataItem* SocialDataUpdate::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.SocialDataUpdate.items)
  return items_.Mutable(index);
}
inline ::Cmd::SocialDataItem* SocialDataUpdate::add_items() {
  // @@protoc_insertion_point(field_add:Cmd.SocialDataUpdate.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SocialDataItem >&
SocialDataUpdate::items() const {
  // @@protoc_insertion_point(field_list:Cmd.SocialDataUpdate.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::SocialDataItem >*
SocialDataUpdate::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.SocialDataUpdate.items)
  return &items_;
}

// -------------------------------------------------------------------

// FrameStatusSocialCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
inline bool FrameStatusSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameStatusSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameStatusSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameStatusSocialCmd::clear_cmd() {
  cmd_ = 56;
  clear_has_cmd();
}
inline ::Cmd::Command FrameStatusSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.FrameStatusSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void FrameStatusSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FrameStatusSocialCmd.cmd)
}

// optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_FRAMESTATUS];
inline bool FrameStatusSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FrameStatusSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FrameStatusSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FrameStatusSocialCmd::clear_param() {
  param_ = 5;
  clear_has_param();
}
inline ::Cmd::SocialityParam FrameStatusSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.FrameStatusSocialCmd.param)
  return static_cast< ::Cmd::SocialityParam >(param_);
}
inline void FrameStatusSocialCmd::set_param(::Cmd::SocialityParam value) {
  assert(::Cmd::SocialityParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FrameStatusSocialCmd.param)
}

// optional bool open = 3 [default = false];
inline bool FrameStatusSocialCmd::has_open() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FrameStatusSocialCmd::set_has_open() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FrameStatusSocialCmd::clear_has_open() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FrameStatusSocialCmd::clear_open() {
  open_ = false;
  clear_has_open();
}
inline bool FrameStatusSocialCmd::open() const {
  // @@protoc_insertion_point(field_get:Cmd.FrameStatusSocialCmd.open)
  return open_;
}
inline void FrameStatusSocialCmd::set_open(bool value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:Cmd.FrameStatusSocialCmd.open)
}

// -------------------------------------------------------------------

// UseGiftCodeSocialCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
inline bool UseGiftCodeSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UseGiftCodeSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UseGiftCodeSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UseGiftCodeSocialCmd::clear_cmd() {
  cmd_ = 56;
  clear_has_cmd();
}
inline ::Cmd::Command UseGiftCodeSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.UseGiftCodeSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void UseGiftCodeSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UseGiftCodeSocialCmd.cmd)
}

// optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_USE_GIFT_CODE];
inline bool UseGiftCodeSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UseGiftCodeSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UseGiftCodeSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UseGiftCodeSocialCmd::clear_param() {
  param_ = 6;
  clear_has_param();
}
inline ::Cmd::SocialityParam UseGiftCodeSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.UseGiftCodeSocialCmd.param)
  return static_cast< ::Cmd::SocialityParam >(param_);
}
inline void UseGiftCodeSocialCmd::set_param(::Cmd::SocialityParam value) {
  assert(::Cmd::SocialityParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UseGiftCodeSocialCmd.param)
}

// optional string code = 3;
inline bool UseGiftCodeSocialCmd::has_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UseGiftCodeSocialCmd::set_has_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UseGiftCodeSocialCmd::clear_has_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UseGiftCodeSocialCmd::clear_code() {
  if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_->clear();
  }
  clear_has_code();
}
inline const ::std::string& UseGiftCodeSocialCmd::code() const {
  // @@protoc_insertion_point(field_get:Cmd.UseGiftCodeSocialCmd.code)
  return *code_;
}
inline void UseGiftCodeSocialCmd::set_code(const ::std::string& value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.UseGiftCodeSocialCmd.code)
}
inline void UseGiftCodeSocialCmd::set_code(const char* value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.UseGiftCodeSocialCmd.code)
}
inline void UseGiftCodeSocialCmd::set_code(const char* value, size_t size) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.UseGiftCodeSocialCmd.code)
}
inline ::std::string* UseGiftCodeSocialCmd::mutable_code() {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.UseGiftCodeSocialCmd.code)
  return code_;
}
inline ::std::string* UseGiftCodeSocialCmd::release_code() {
  clear_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = code_;
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UseGiftCodeSocialCmd::set_allocated_code(::std::string* code) {
  if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete code_;
  }
  if (code) {
    set_has_code();
    code_ = code;
  } else {
    clear_has_code();
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.UseGiftCodeSocialCmd.code)
}

// optional bool ret = 4;
inline bool UseGiftCodeSocialCmd::has_ret() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UseGiftCodeSocialCmd::set_has_ret() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UseGiftCodeSocialCmd::clear_has_ret() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UseGiftCodeSocialCmd::clear_ret() {
  ret_ = false;
  clear_has_ret();
}
inline bool UseGiftCodeSocialCmd::ret() const {
  // @@protoc_insertion_point(field_get:Cmd.UseGiftCodeSocialCmd.ret)
  return ret_;
}
inline void UseGiftCodeSocialCmd::set_ret(bool value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Cmd.UseGiftCodeSocialCmd.ret)
}

// -------------------------------------------------------------------

// OperateQuerySocialCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
inline bool OperateQuerySocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperateQuerySocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperateQuerySocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperateQuerySocialCmd::clear_cmd() {
  cmd_ = 56;
  clear_has_cmd();
}
inline ::Cmd::Command OperateQuerySocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.OperateQuerySocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void OperateQuerySocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OperateQuerySocialCmd.cmd)
}

// optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_OPERATE_QUERY];
inline bool OperateQuerySocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OperateQuerySocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OperateQuerySocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OperateQuerySocialCmd::clear_param() {
  param_ = 7;
  clear_has_param();
}
inline ::Cmd::SocialityParam OperateQuerySocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.OperateQuerySocialCmd.param)
  return static_cast< ::Cmd::SocialityParam >(param_);
}
inline void OperateQuerySocialCmd::set_param(::Cmd::SocialityParam value) {
  assert(::Cmd::SocialityParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OperateQuerySocialCmd.param)
}

// optional .Cmd.EOperateType type = 3;
inline bool OperateQuerySocialCmd::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OperateQuerySocialCmd::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OperateQuerySocialCmd::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OperateQuerySocialCmd::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::Cmd::EOperateType OperateQuerySocialCmd::type() const {
  // @@protoc_insertion_point(field_get:Cmd.OperateQuerySocialCmd.type)
  return static_cast< ::Cmd::EOperateType >(type_);
}
inline void OperateQuerySocialCmd::set_type(::Cmd::EOperateType value) {
  assert(::Cmd::EOperateType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OperateQuerySocialCmd.type)
}

// optional .Cmd.EOperateState state = 4;
inline bool OperateQuerySocialCmd::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OperateQuerySocialCmd::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OperateQuerySocialCmd::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OperateQuerySocialCmd::clear_state() {
  state_ = 1;
  clear_has_state();
}
inline ::Cmd::EOperateState OperateQuerySocialCmd::state() const {
  // @@protoc_insertion_point(field_get:Cmd.OperateQuerySocialCmd.state)
  return static_cast< ::Cmd::EOperateState >(state_);
}
inline void OperateQuerySocialCmd::set_state(::Cmd::EOperateState value) {
  assert(::Cmd::EOperateState_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OperateQuerySocialCmd.state)
}

// optional uint32 param1 = 5;
inline bool OperateQuerySocialCmd::has_param1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OperateQuerySocialCmd::set_has_param1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OperateQuerySocialCmd::clear_has_param1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OperateQuerySocialCmd::clear_param1() {
  param1_ = 0u;
  clear_has_param1();
}
inline ::google::protobuf::uint32 OperateQuerySocialCmd::param1() const {
  // @@protoc_insertion_point(field_get:Cmd.OperateQuerySocialCmd.param1)
  return param1_;
}
inline void OperateQuerySocialCmd::set_param1(::google::protobuf::uint32 value) {
  set_has_param1();
  param1_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OperateQuerySocialCmd.param1)
}

// optional uint32 param2 = 6;
inline bool OperateQuerySocialCmd::has_param2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OperateQuerySocialCmd::set_has_param2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OperateQuerySocialCmd::clear_has_param2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OperateQuerySocialCmd::clear_param2() {
  param2_ = 0u;
  clear_has_param2();
}
inline ::google::protobuf::uint32 OperateQuerySocialCmd::param2() const {
  // @@protoc_insertion_point(field_get:Cmd.OperateQuerySocialCmd.param2)
  return param2_;
}
inline void OperateQuerySocialCmd::set_param2(::google::protobuf::uint32 value) {
  set_has_param2();
  param2_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OperateQuerySocialCmd.param2)
}

// optional uint32 param3 = 7;
inline bool OperateQuerySocialCmd::has_param3() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OperateQuerySocialCmd::set_has_param3() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OperateQuerySocialCmd::clear_has_param3() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OperateQuerySocialCmd::clear_param3() {
  param3_ = 0u;
  clear_has_param3();
}
inline ::google::protobuf::uint32 OperateQuerySocialCmd::param3() const {
  // @@protoc_insertion_point(field_get:Cmd.OperateQuerySocialCmd.param3)
  return param3_;
}
inline void OperateQuerySocialCmd::set_param3(::google::protobuf::uint32 value) {
  set_has_param3();
  param3_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OperateQuerySocialCmd.param3)
}

// repeated uint32 param4 = 8;
inline int OperateQuerySocialCmd::param4_size() const {
  return param4_.size();
}
inline void OperateQuerySocialCmd::clear_param4() {
  param4_.Clear();
}
inline ::google::protobuf::uint32 OperateQuerySocialCmd::param4(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.OperateQuerySocialCmd.param4)
  return param4_.Get(index);
}
inline void OperateQuerySocialCmd::set_param4(int index, ::google::protobuf::uint32 value) {
  param4_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.OperateQuerySocialCmd.param4)
}
inline void OperateQuerySocialCmd::add_param4(::google::protobuf::uint32 value) {
  param4_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.OperateQuerySocialCmd.param4)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
OperateQuerySocialCmd::param4() const {
  // @@protoc_insertion_point(field_list:Cmd.OperateQuerySocialCmd.param4)
  return param4_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
OperateQuerySocialCmd::mutable_param4() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.OperateQuerySocialCmd.param4)
  return &param4_;
}

// -------------------------------------------------------------------

// OperateTakeSocialCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
inline bool OperateTakeSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperateTakeSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperateTakeSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperateTakeSocialCmd::clear_cmd() {
  cmd_ = 56;
  clear_has_cmd();
}
inline ::Cmd::Command OperateTakeSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.OperateTakeSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void OperateTakeSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OperateTakeSocialCmd.cmd)
}

// optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_OPERATE_TAKE];
inline bool OperateTakeSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OperateTakeSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OperateTakeSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OperateTakeSocialCmd::clear_param() {
  param_ = 8;
  clear_has_param();
}
inline ::Cmd::SocialityParam OperateTakeSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.OperateTakeSocialCmd.param)
  return static_cast< ::Cmd::SocialityParam >(param_);
}
inline void OperateTakeSocialCmd::set_param(::Cmd::SocialityParam value) {
  assert(::Cmd::SocialityParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OperateTakeSocialCmd.param)
}

// optional .Cmd.EOperateType type = 3;
inline bool OperateTakeSocialCmd::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OperateTakeSocialCmd::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OperateTakeSocialCmd::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OperateTakeSocialCmd::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::Cmd::EOperateType OperateTakeSocialCmd::type() const {
  // @@protoc_insertion_point(field_get:Cmd.OperateTakeSocialCmd.type)
  return static_cast< ::Cmd::EOperateType >(type_);
}
inline void OperateTakeSocialCmd::set_type(::Cmd::EOperateType value) {
  assert(::Cmd::EOperateType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OperateTakeSocialCmd.type)
}

// optional .Cmd.EOperateState state = 4;
inline bool OperateTakeSocialCmd::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OperateTakeSocialCmd::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OperateTakeSocialCmd::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OperateTakeSocialCmd::clear_state() {
  state_ = 1;
  clear_has_state();
}
inline ::Cmd::EOperateState OperateTakeSocialCmd::state() const {
  // @@protoc_insertion_point(field_get:Cmd.OperateTakeSocialCmd.state)
  return static_cast< ::Cmd::EOperateState >(state_);
}
inline void OperateTakeSocialCmd::set_state(::Cmd::EOperateState value) {
  assert(::Cmd::EOperateState_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OperateTakeSocialCmd.state)
}

// optional uint32 subkey = 5;
inline bool OperateTakeSocialCmd::has_subkey() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OperateTakeSocialCmd::set_has_subkey() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OperateTakeSocialCmd::clear_has_subkey() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OperateTakeSocialCmd::clear_subkey() {
  subkey_ = 0u;
  clear_has_subkey();
}
inline ::google::protobuf::uint32 OperateTakeSocialCmd::subkey() const {
  // @@protoc_insertion_point(field_get:Cmd.OperateTakeSocialCmd.subkey)
  return subkey_;
}
inline void OperateTakeSocialCmd::set_subkey(::google::protobuf::uint32 value) {
  set_has_subkey();
  subkey_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OperateTakeSocialCmd.subkey)
}

// -------------------------------------------------------------------

// QueryDataNtfSocialCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
inline bool QueryDataNtfSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryDataNtfSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryDataNtfSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryDataNtfSocialCmd::clear_cmd() {
  cmd_ = 56;
  clear_has_cmd();
}
inline ::Cmd::Command QueryDataNtfSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryDataNtfSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryDataNtfSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryDataNtfSocialCmd.cmd)
}

// optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_QUERYDATA_NTF];
inline bool QueryDataNtfSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryDataNtfSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryDataNtfSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryDataNtfSocialCmd::clear_param() {
  param_ = 9;
  clear_has_param();
}
inline ::Cmd::SocialityParam QueryDataNtfSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryDataNtfSocialCmd.param)
  return static_cast< ::Cmd::SocialityParam >(param_);
}
inline void QueryDataNtfSocialCmd::set_param(::Cmd::SocialityParam value) {
  assert(::Cmd::SocialityParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryDataNtfSocialCmd.param)
}

// repeated .Cmd.SocialData relations = 3;
inline int QueryDataNtfSocialCmd::relations_size() const {
  return relations_.size();
}
inline void QueryDataNtfSocialCmd::clear_relations() {
  relations_.Clear();
}
inline const ::Cmd::SocialData& QueryDataNtfSocialCmd::relations(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QueryDataNtfSocialCmd.relations)
  return relations_.Get(index);
}
inline ::Cmd::SocialData* QueryDataNtfSocialCmd::mutable_relations(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.QueryDataNtfSocialCmd.relations)
  return relations_.Mutable(index);
}
inline ::Cmd::SocialData* QueryDataNtfSocialCmd::add_relations() {
  // @@protoc_insertion_point(field_add:Cmd.QueryDataNtfSocialCmd.relations)
  return relations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::SocialData >&
QueryDataNtfSocialCmd::relations() const {
  // @@protoc_insertion_point(field_list:Cmd.QueryDataNtfSocialCmd.relations)
  return relations_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::SocialData >*
QueryDataNtfSocialCmd::mutable_relations() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QueryDataNtfSocialCmd.relations)
  return &relations_;
}

// -------------------------------------------------------------------

// OperActivityUrl

// optional uint32 language = 1 [default = 0];
inline bool OperActivityUrl::has_language() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperActivityUrl::set_has_language() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperActivityUrl::clear_has_language() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperActivityUrl::clear_language() {
  language_ = 0u;
  clear_has_language();
}
inline ::google::protobuf::uint32 OperActivityUrl::language() const {
  // @@protoc_insertion_point(field_get:Cmd.OperActivityUrl.language)
  return language_;
}
inline void OperActivityUrl::set_language(::google::protobuf::uint32 value) {
  set_has_language();
  language_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OperActivityUrl.language)
}

// optional string url = 2;
inline bool OperActivityUrl::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OperActivityUrl::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OperActivityUrl::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OperActivityUrl::clear_url() {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& OperActivityUrl::url() const {
  // @@protoc_insertion_point(field_get:Cmd.OperActivityUrl.url)
  return *url_;
}
inline void OperActivityUrl::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.OperActivityUrl.url)
}
inline void OperActivityUrl::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.OperActivityUrl.url)
}
inline void OperActivityUrl::set_url(const char* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.OperActivityUrl.url)
}
inline ::std::string* OperActivityUrl::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.OperActivityUrl.url)
  return url_;
}
inline ::std::string* OperActivityUrl::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OperActivityUrl::set_allocated_url(::std::string* url) {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete url_;
  }
  if (url) {
    set_has_url();
    url_ = url;
  } else {
    clear_has_url();
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.OperActivityUrl.url)
}

// -------------------------------------------------------------------

// OperActivityData

// repeated .Cmd.OperActivityUrl iconurls = 1;
inline int OperActivityData::iconurls_size() const {
  return iconurls_.size();
}
inline void OperActivityData::clear_iconurls() {
  iconurls_.Clear();
}
inline const ::Cmd::OperActivityUrl& OperActivityData::iconurls(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.OperActivityData.iconurls)
  return iconurls_.Get(index);
}
inline ::Cmd::OperActivityUrl* OperActivityData::mutable_iconurls(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.OperActivityData.iconurls)
  return iconurls_.Mutable(index);
}
inline ::Cmd::OperActivityUrl* OperActivityData::add_iconurls() {
  // @@protoc_insertion_point(field_add:Cmd.OperActivityData.iconurls)
  return iconurls_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::OperActivityUrl >&
OperActivityData::iconurls() const {
  // @@protoc_insertion_point(field_list:Cmd.OperActivityData.iconurls)
  return iconurls_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::OperActivityUrl >*
OperActivityData::mutable_iconurls() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.OperActivityData.iconurls)
  return &iconurls_;
}

// repeated .Cmd.OperActivityUrl urls = 2;
inline int OperActivityData::urls_size() const {
  return urls_.size();
}
inline void OperActivityData::clear_urls() {
  urls_.Clear();
}
inline const ::Cmd::OperActivityUrl& OperActivityData::urls(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.OperActivityData.urls)
  return urls_.Get(index);
}
inline ::Cmd::OperActivityUrl* OperActivityData::mutable_urls(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.OperActivityData.urls)
  return urls_.Mutable(index);
}
inline ::Cmd::OperActivityUrl* OperActivityData::add_urls() {
  // @@protoc_insertion_point(field_add:Cmd.OperActivityData.urls)
  return urls_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::OperActivityUrl >&
OperActivityData::urls() const {
  // @@protoc_insertion_point(field_list:Cmd.OperActivityData.urls)
  return urls_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::OperActivityUrl >*
OperActivityData::mutable_urls() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.OperActivityData.urls)
  return &urls_;
}

// -------------------------------------------------------------------

// OperSubActivityData

// repeated .Cmd.OperActivityUrl picurls = 1;
inline int OperSubActivityData::picurls_size() const {
  return picurls_.size();
}
inline void OperSubActivityData::clear_picurls() {
  picurls_.Clear();
}
inline const ::Cmd::OperActivityUrl& OperSubActivityData::picurls(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.OperSubActivityData.picurls)
  return picurls_.Get(index);
}
inline ::Cmd::OperActivityUrl* OperSubActivityData::mutable_picurls(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.OperSubActivityData.picurls)
  return picurls_.Mutable(index);
}
inline ::Cmd::OperActivityUrl* OperSubActivityData::add_picurls() {
  // @@protoc_insertion_point(field_add:Cmd.OperSubActivityData.picurls)
  return picurls_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::OperActivityUrl >&
OperSubActivityData::picurls() const {
  // @@protoc_insertion_point(field_list:Cmd.OperSubActivityData.picurls)
  return picurls_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::OperActivityUrl >*
OperSubActivityData::mutable_picurls() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.OperSubActivityData.picurls)
  return &picurls_;
}

// repeated .Cmd.OperActivityUrl urls = 2;
inline int OperSubActivityData::urls_size() const {
  return urls_.size();
}
inline void OperSubActivityData::clear_urls() {
  urls_.Clear();
}
inline const ::Cmd::OperActivityUrl& OperSubActivityData::urls(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.OperSubActivityData.urls)
  return urls_.Get(index);
}
inline ::Cmd::OperActivityUrl* OperSubActivityData::mutable_urls(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.OperSubActivityData.urls)
  return urls_.Mutable(index);
}
inline ::Cmd::OperActivityUrl* OperSubActivityData::add_urls() {
  // @@protoc_insertion_point(field_add:Cmd.OperSubActivityData.urls)
  return urls_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::OperActivityUrl >&
OperSubActivityData::urls() const {
  // @@protoc_insertion_point(field_list:Cmd.OperSubActivityData.urls)
  return urls_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::OperActivityUrl >*
OperSubActivityData::mutable_urls() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.OperSubActivityData.urls)
  return &urls_;
}

// -------------------------------------------------------------------

// OperSubActivity

// optional uint64 id = 1 [default = 0];
inline bool OperSubActivity::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperSubActivity::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperSubActivity::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperSubActivity::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 OperSubActivity::id() const {
  // @@protoc_insertion_point(field_get:Cmd.OperSubActivity.id)
  return id_;
}
inline void OperSubActivity::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OperSubActivity.id)
}

// optional string name = 2;
inline bool OperSubActivity::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OperSubActivity::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OperSubActivity::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OperSubActivity::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& OperSubActivity::name() const {
  // @@protoc_insertion_point(field_get:Cmd.OperSubActivity.name)
  return *name_;
}
inline void OperSubActivity::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.OperSubActivity.name)
}
inline void OperSubActivity::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.OperSubActivity.name)
}
inline void OperSubActivity::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.OperSubActivity.name)
}
inline ::std::string* OperSubActivity::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.OperSubActivity.name)
  return name_;
}
inline ::std::string* OperSubActivity::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OperSubActivity::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.OperSubActivity.name)
}

// optional uint32 begintime = 4 [default = 0];
inline bool OperSubActivity::has_begintime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OperSubActivity::set_has_begintime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OperSubActivity::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OperSubActivity::clear_begintime() {
  begintime_ = 0u;
  clear_has_begintime();
}
inline ::google::protobuf::uint32 OperSubActivity::begintime() const {
  // @@protoc_insertion_point(field_get:Cmd.OperSubActivity.begintime)
  return begintime_;
}
inline void OperSubActivity::set_begintime(::google::protobuf::uint32 value) {
  set_has_begintime();
  begintime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OperSubActivity.begintime)
}

// optional uint32 endtime = 5 [default = 0];
inline bool OperSubActivity::has_endtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OperSubActivity::set_has_endtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OperSubActivity::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OperSubActivity::clear_endtime() {
  endtime_ = 0u;
  clear_has_endtime();
}
inline ::google::protobuf::uint32 OperSubActivity::endtime() const {
  // @@protoc_insertion_point(field_get:Cmd.OperSubActivity.endtime)
  return endtime_;
}
inline void OperSubActivity::set_endtime(::google::protobuf::uint32 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OperSubActivity.endtime)
}

// optional uint32 pathid = 6 [default = 0];
inline bool OperSubActivity::has_pathid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OperSubActivity::set_has_pathid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OperSubActivity::clear_has_pathid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OperSubActivity::clear_pathid() {
  pathid_ = 0u;
  clear_has_pathid();
}
inline ::google::protobuf::uint32 OperSubActivity::pathid() const {
  // @@protoc_insertion_point(field_get:Cmd.OperSubActivity.pathid)
  return pathid_;
}
inline void OperSubActivity::set_pathid(::google::protobuf::uint32 value) {
  set_has_pathid();
  pathid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OperSubActivity.pathid)
}

// optional uint32 pathtype = 7 [default = 0];
inline bool OperSubActivity::has_pathtype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OperSubActivity::set_has_pathtype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OperSubActivity::clear_has_pathtype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OperSubActivity::clear_pathtype() {
  pathtype_ = 0u;
  clear_has_pathtype();
}
inline ::google::protobuf::uint32 OperSubActivity::pathtype() const {
  // @@protoc_insertion_point(field_get:Cmd.OperSubActivity.pathtype)
  return pathtype_;
}
inline void OperSubActivity::set_pathtype(::google::protobuf::uint32 value) {
  set_has_pathtype();
  pathtype_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OperSubActivity.pathtype)
}

// optional string pathevent = 8;
inline bool OperSubActivity::has_pathevent() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OperSubActivity::set_has_pathevent() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OperSubActivity::clear_has_pathevent() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OperSubActivity::clear_pathevent() {
  if (pathevent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pathevent_->clear();
  }
  clear_has_pathevent();
}
inline const ::std::string& OperSubActivity::pathevent() const {
  // @@protoc_insertion_point(field_get:Cmd.OperSubActivity.pathevent)
  return *pathevent_;
}
inline void OperSubActivity::set_pathevent(const ::std::string& value) {
  set_has_pathevent();
  if (pathevent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pathevent_ = new ::std::string;
  }
  pathevent_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.OperSubActivity.pathevent)
}
inline void OperSubActivity::set_pathevent(const char* value) {
  set_has_pathevent();
  if (pathevent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pathevent_ = new ::std::string;
  }
  pathevent_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.OperSubActivity.pathevent)
}
inline void OperSubActivity::set_pathevent(const char* value, size_t size) {
  set_has_pathevent();
  if (pathevent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pathevent_ = new ::std::string;
  }
  pathevent_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.OperSubActivity.pathevent)
}
inline ::std::string* OperSubActivity::mutable_pathevent() {
  set_has_pathevent();
  if (pathevent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pathevent_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.OperSubActivity.pathevent)
  return pathevent_;
}
inline ::std::string* OperSubActivity::release_pathevent() {
  clear_has_pathevent();
  if (pathevent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = pathevent_;
    pathevent_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OperSubActivity::set_allocated_pathevent(::std::string* pathevent) {
  if (pathevent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete pathevent_;
  }
  if (pathevent) {
    set_has_pathevent();
    pathevent_ = pathevent;
  } else {
    clear_has_pathevent();
    pathevent_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.OperSubActivity.pathevent)
}

// optional string url = 9;
inline bool OperSubActivity::has_url() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OperSubActivity::set_has_url() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OperSubActivity::clear_has_url() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OperSubActivity::clear_url() {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& OperSubActivity::url() const {
  // @@protoc_insertion_point(field_get:Cmd.OperSubActivity.url)
  return *url_;
}
inline void OperSubActivity::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.OperSubActivity.url)
}
inline void OperSubActivity::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.OperSubActivity.url)
}
inline void OperSubActivity::set_url(const char* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.OperSubActivity.url)
}
inline ::std::string* OperSubActivity::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.OperSubActivity.url)
  return url_;
}
inline ::std::string* OperSubActivity::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OperSubActivity::set_allocated_url(::std::string* url) {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete url_;
  }
  if (url) {
    set_has_url();
    url_ = url;
  } else {
    clear_has_url();
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.OperSubActivity.url)
}

// optional string pic_url = 10;
inline bool OperSubActivity::has_pic_url() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void OperSubActivity::set_has_pic_url() {
  _has_bits_[0] |= 0x00000100u;
}
inline void OperSubActivity::clear_has_pic_url() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void OperSubActivity::clear_pic_url() {
  if (pic_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pic_url_->clear();
  }
  clear_has_pic_url();
}
inline const ::std::string& OperSubActivity::pic_url() const {
  // @@protoc_insertion_point(field_get:Cmd.OperSubActivity.pic_url)
  return *pic_url_;
}
inline void OperSubActivity::set_pic_url(const ::std::string& value) {
  set_has_pic_url();
  if (pic_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pic_url_ = new ::std::string;
  }
  pic_url_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.OperSubActivity.pic_url)
}
inline void OperSubActivity::set_pic_url(const char* value) {
  set_has_pic_url();
  if (pic_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pic_url_ = new ::std::string;
  }
  pic_url_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.OperSubActivity.pic_url)
}
inline void OperSubActivity::set_pic_url(const char* value, size_t size) {
  set_has_pic_url();
  if (pic_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pic_url_ = new ::std::string;
  }
  pic_url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.OperSubActivity.pic_url)
}
inline ::std::string* OperSubActivity::mutable_pic_url() {
  set_has_pic_url();
  if (pic_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pic_url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.OperSubActivity.pic_url)
  return pic_url_;
}
inline ::std::string* OperSubActivity::release_pic_url() {
  clear_has_pic_url();
  if (pic_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = pic_url_;
    pic_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OperSubActivity::set_allocated_pic_url(::std::string* pic_url) {
  if (pic_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete pic_url_;
  }
  if (pic_url) {
    set_has_pic_url();
    pic_url_ = pic_url;
  } else {
    clear_has_pic_url();
    pic_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.OperSubActivity.pic_url)
}

// optional uint64 groupid = 11 [default = 0];
inline bool OperSubActivity::has_groupid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void OperSubActivity::set_has_groupid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void OperSubActivity::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void OperSubActivity::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
  clear_has_groupid();
}
inline ::google::protobuf::uint64 OperSubActivity::groupid() const {
  // @@protoc_insertion_point(field_get:Cmd.OperSubActivity.groupid)
  return groupid_;
}
inline void OperSubActivity::set_groupid(::google::protobuf::uint64 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OperSubActivity.groupid)
}

// optional .Cmd.OperSubActivityData data = 12;
inline bool OperSubActivity::has_data() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void OperSubActivity::set_has_data() {
  _has_bits_[0] |= 0x00000400u;
}
inline void OperSubActivity::clear_has_data() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void OperSubActivity::clear_data() {
  if (data_ != NULL) data_->::Cmd::OperSubActivityData::Clear();
  clear_has_data();
}
inline const ::Cmd::OperSubActivityData& OperSubActivity::data() const {
  // @@protoc_insertion_point(field_get:Cmd.OperSubActivity.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Cmd::OperSubActivityData* OperSubActivity::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Cmd::OperSubActivityData;
  // @@protoc_insertion_point(field_mutable:Cmd.OperSubActivity.data)
  return data_;
}
inline ::Cmd::OperSubActivityData* OperSubActivity::release_data() {
  clear_has_data();
  ::Cmd::OperSubActivityData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void OperSubActivity::set_allocated_data(::Cmd::OperSubActivityData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.OperSubActivity.data)
}

// -------------------------------------------------------------------

// OperActivity

// optional uint32 id = 1 [default = 0];
inline bool OperActivity::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperActivity::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperActivity::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperActivity::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 OperActivity::id() const {
  // @@protoc_insertion_point(field_get:Cmd.OperActivity.id)
  return id_;
}
inline void OperActivity::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OperActivity.id)
}

// optional string name = 2;
inline bool OperActivity::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OperActivity::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OperActivity::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OperActivity::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& OperActivity::name() const {
  // @@protoc_insertion_point(field_get:Cmd.OperActivity.name)
  return *name_;
}
inline void OperActivity::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.OperActivity.name)
}
inline void OperActivity::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.OperActivity.name)
}
inline void OperActivity::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.OperActivity.name)
}
inline ::std::string* OperActivity::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.OperActivity.name)
  return name_;
}
inline ::std::string* OperActivity::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OperActivity::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.OperActivity.name)
}

// optional string iconurl = 3;
inline bool OperActivity::has_iconurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OperActivity::set_has_iconurl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OperActivity::clear_has_iconurl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OperActivity::clear_iconurl() {
  if (iconurl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    iconurl_->clear();
  }
  clear_has_iconurl();
}
inline const ::std::string& OperActivity::iconurl() const {
  // @@protoc_insertion_point(field_get:Cmd.OperActivity.iconurl)
  return *iconurl_;
}
inline void OperActivity::set_iconurl(const ::std::string& value) {
  set_has_iconurl();
  if (iconurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    iconurl_ = new ::std::string;
  }
  iconurl_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.OperActivity.iconurl)
}
inline void OperActivity::set_iconurl(const char* value) {
  set_has_iconurl();
  if (iconurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    iconurl_ = new ::std::string;
  }
  iconurl_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.OperActivity.iconurl)
}
inline void OperActivity::set_iconurl(const char* value, size_t size) {
  set_has_iconurl();
  if (iconurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    iconurl_ = new ::std::string;
  }
  iconurl_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.OperActivity.iconurl)
}
inline ::std::string* OperActivity::mutable_iconurl() {
  set_has_iconurl();
  if (iconurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    iconurl_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.OperActivity.iconurl)
  return iconurl_;
}
inline ::std::string* OperActivity::release_iconurl() {
  clear_has_iconurl();
  if (iconurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = iconurl_;
    iconurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OperActivity::set_allocated_iconurl(::std::string* iconurl) {
  if (iconurl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete iconurl_;
  }
  if (iconurl) {
    set_has_iconurl();
    iconurl_ = iconurl;
  } else {
    clear_has_iconurl();
    iconurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.OperActivity.iconurl)
}

// optional uint32 begintime = 4 [default = 0];
inline bool OperActivity::has_begintime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OperActivity::set_has_begintime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OperActivity::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OperActivity::clear_begintime() {
  begintime_ = 0u;
  clear_has_begintime();
}
inline ::google::protobuf::uint32 OperActivity::begintime() const {
  // @@protoc_insertion_point(field_get:Cmd.OperActivity.begintime)
  return begintime_;
}
inline void OperActivity::set_begintime(::google::protobuf::uint32 value) {
  set_has_begintime();
  begintime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OperActivity.begintime)
}

// optional uint32 endtime = 5 [default = 0];
inline bool OperActivity::has_endtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OperActivity::set_has_endtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OperActivity::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OperActivity::clear_endtime() {
  endtime_ = 0u;
  clear_has_endtime();
}
inline ::google::protobuf::uint32 OperActivity::endtime() const {
  // @@protoc_insertion_point(field_get:Cmd.OperActivity.endtime)
  return endtime_;
}
inline void OperActivity::set_endtime(::google::protobuf::uint32 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OperActivity.endtime)
}

// optional string url = 6;
inline bool OperActivity::has_url() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OperActivity::set_has_url() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OperActivity::clear_has_url() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OperActivity::clear_url() {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& OperActivity::url() const {
  // @@protoc_insertion_point(field_get:Cmd.OperActivity.url)
  return *url_;
}
inline void OperActivity::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set:Cmd.OperActivity.url)
}
inline void OperActivity::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set_char:Cmd.OperActivity.url)
}
inline void OperActivity::set_url(const char* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Cmd.OperActivity.url)
}
inline ::std::string* OperActivity::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Cmd.OperActivity.url)
  return url_;
}
inline ::std::string* OperActivity::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OperActivity::set_allocated_url(::std::string* url) {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete url_;
  }
  if (url) {
    set_has_url();
    url_ = url;
  } else {
    clear_has_url();
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.OperActivity.url)
}

// optional bool countdown = 7 [default = false];
inline bool OperActivity::has_countdown() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OperActivity::set_has_countdown() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OperActivity::clear_has_countdown() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OperActivity::clear_countdown() {
  countdown_ = false;
  clear_has_countdown();
}
inline bool OperActivity::countdown() const {
  // @@protoc_insertion_point(field_get:Cmd.OperActivity.countdown)
  return countdown_;
}
inline void OperActivity::set_countdown(bool value) {
  set_has_countdown();
  countdown_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OperActivity.countdown)
}

// repeated .Cmd.OperSubActivity sub_activity = 8;
inline int OperActivity::sub_activity_size() const {
  return sub_activity_.size();
}
inline void OperActivity::clear_sub_activity() {
  sub_activity_.Clear();
}
inline const ::Cmd::OperSubActivity& OperActivity::sub_activity(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.OperActivity.sub_activity)
  return sub_activity_.Get(index);
}
inline ::Cmd::OperSubActivity* OperActivity::mutable_sub_activity(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.OperActivity.sub_activity)
  return sub_activity_.Mutable(index);
}
inline ::Cmd::OperSubActivity* OperActivity::add_sub_activity() {
  // @@protoc_insertion_point(field_add:Cmd.OperActivity.sub_activity)
  return sub_activity_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::OperSubActivity >&
OperActivity::sub_activity() const {
  // @@protoc_insertion_point(field_list:Cmd.OperActivity.sub_activity)
  return sub_activity_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::OperSubActivity >*
OperActivity::mutable_sub_activity() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.OperActivity.sub_activity)
  return &sub_activity_;
}

// optional .Cmd.OperActivityData data = 9;
inline bool OperActivity::has_data() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void OperActivity::set_has_data() {
  _has_bits_[0] |= 0x00000100u;
}
inline void OperActivity::clear_has_data() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void OperActivity::clear_data() {
  if (data_ != NULL) data_->::Cmd::OperActivityData::Clear();
  clear_has_data();
}
inline const ::Cmd::OperActivityData& OperActivity::data() const {
  // @@protoc_insertion_point(field_get:Cmd.OperActivity.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Cmd::OperActivityData* OperActivity::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Cmd::OperActivityData;
  // @@protoc_insertion_point(field_mutable:Cmd.OperActivity.data)
  return data_;
}
inline ::Cmd::OperActivityData* OperActivity::release_data() {
  clear_has_data();
  ::Cmd::OperActivityData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void OperActivity::set_allocated_data(::Cmd::OperActivityData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.OperActivity.data)
}

// -------------------------------------------------------------------

// OperActivityNtfSocialCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
inline bool OperActivityNtfSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperActivityNtfSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperActivityNtfSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperActivityNtfSocialCmd::clear_cmd() {
  cmd_ = 56;
  clear_has_cmd();
}
inline ::Cmd::Command OperActivityNtfSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.OperActivityNtfSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void OperActivityNtfSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OperActivityNtfSocialCmd.cmd)
}

// optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_OPER_ACTIVITY_NTF];
inline bool OperActivityNtfSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OperActivityNtfSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OperActivityNtfSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OperActivityNtfSocialCmd::clear_param() {
  param_ = 10;
  clear_has_param();
}
inline ::Cmd::SocialityParam OperActivityNtfSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.OperActivityNtfSocialCmd.param)
  return static_cast< ::Cmd::SocialityParam >(param_);
}
inline void OperActivityNtfSocialCmd::set_param(::Cmd::SocialityParam value) {
  assert(::Cmd::SocialityParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.OperActivityNtfSocialCmd.param)
}

// repeated .Cmd.OperActivity activity = 3;
inline int OperActivityNtfSocialCmd::activity_size() const {
  return activity_.size();
}
inline void OperActivityNtfSocialCmd::clear_activity() {
  activity_.Clear();
}
inline const ::Cmd::OperActivity& OperActivityNtfSocialCmd::activity(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.OperActivityNtfSocialCmd.activity)
  return activity_.Get(index);
}
inline ::Cmd::OperActivity* OperActivityNtfSocialCmd::mutable_activity(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.OperActivityNtfSocialCmd.activity)
  return activity_.Mutable(index);
}
inline ::Cmd::OperActivity* OperActivityNtfSocialCmd::add_activity() {
  // @@protoc_insertion_point(field_add:Cmd.OperActivityNtfSocialCmd.activity)
  return activity_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::OperActivity >&
OperActivityNtfSocialCmd::activity() const {
  // @@protoc_insertion_point(field_list:Cmd.OperActivityNtfSocialCmd.activity)
  return activity_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::OperActivity >*
OperActivityNtfSocialCmd::mutable_activity() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.OperActivityNtfSocialCmd.activity)
  return &activity_;
}

// -------------------------------------------------------------------

// AddRelation

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
inline bool AddRelation::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddRelation::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddRelation::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddRelation::clear_cmd() {
  cmd_ = 56;
  clear_has_cmd();
}
inline ::Cmd::Command AddRelation::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.AddRelation.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void AddRelation::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AddRelation.cmd)
}

// optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_ADDRELATION];
inline bool AddRelation::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddRelation::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddRelation::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddRelation::clear_param() {
  param_ = 11;
  clear_has_param();
}
inline ::Cmd::SocialityParam AddRelation::param() const {
  // @@protoc_insertion_point(field_get:Cmd.AddRelation.param)
  return static_cast< ::Cmd::SocialityParam >(param_);
}
inline void AddRelation::set_param(::Cmd::SocialityParam value) {
  assert(::Cmd::SocialityParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AddRelation.param)
}

// repeated uint64 charid = 3;
inline int AddRelation::charid_size() const {
  return charid_.size();
}
inline void AddRelation::clear_charid() {
  charid_.Clear();
}
inline ::google::protobuf::uint64 AddRelation::charid(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.AddRelation.charid)
  return charid_.Get(index);
}
inline void AddRelation::set_charid(int index, ::google::protobuf::uint64 value) {
  charid_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.AddRelation.charid)
}
inline void AddRelation::add_charid(::google::protobuf::uint64 value) {
  charid_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.AddRelation.charid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
AddRelation::charid() const {
  // @@protoc_insertion_point(field_list:Cmd.AddRelation.charid)
  return charid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
AddRelation::mutable_charid() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.AddRelation.charid)
  return &charid_;
}

// optional .Cmd.ESocialRelation relation = 4 [default = ESOCIALRELATION_MIN];
inline bool AddRelation::has_relation() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddRelation::set_has_relation() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddRelation::clear_has_relation() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddRelation::clear_relation() {
  relation_ = 1;
  clear_has_relation();
}
inline ::Cmd::ESocialRelation AddRelation::relation() const {
  // @@protoc_insertion_point(field_get:Cmd.AddRelation.relation)
  return static_cast< ::Cmd::ESocialRelation >(relation_);
}
inline void AddRelation::set_relation(::Cmd::ESocialRelation value) {
  assert(::Cmd::ESocialRelation_IsValid(value));
  set_has_relation();
  relation_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AddRelation.relation)
}

// -------------------------------------------------------------------

// RemoveRelation

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
inline bool RemoveRelation::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoveRelation::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemoveRelation::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemoveRelation::clear_cmd() {
  cmd_ = 56;
  clear_has_cmd();
}
inline ::Cmd::Command RemoveRelation::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.RemoveRelation.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void RemoveRelation::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RemoveRelation.cmd)
}

// optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_REMOVERELATION];
inline bool RemoveRelation::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RemoveRelation::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RemoveRelation::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RemoveRelation::clear_param() {
  param_ = 12;
  clear_has_param();
}
inline ::Cmd::SocialityParam RemoveRelation::param() const {
  // @@protoc_insertion_point(field_get:Cmd.RemoveRelation.param)
  return static_cast< ::Cmd::SocialityParam >(param_);
}
inline void RemoveRelation::set_param(::Cmd::SocialityParam value) {
  assert(::Cmd::SocialityParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RemoveRelation.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool RemoveRelation::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RemoveRelation::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RemoveRelation::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RemoveRelation::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 RemoveRelation::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.RemoveRelation.charid)
  return charid_;
}
inline void RemoveRelation::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RemoveRelation.charid)
}

// optional .Cmd.ESocialRelation relation = 4 [default = ESOCIALRELATION_MIN];
inline bool RemoveRelation::has_relation() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RemoveRelation::set_has_relation() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RemoveRelation::clear_has_relation() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RemoveRelation::clear_relation() {
  relation_ = 1;
  clear_has_relation();
}
inline ::Cmd::ESocialRelation RemoveRelation::relation() const {
  // @@protoc_insertion_point(field_get:Cmd.RemoveRelation.relation)
  return static_cast< ::Cmd::ESocialRelation >(relation_);
}
inline void RemoveRelation::set_relation(::Cmd::ESocialRelation value) {
  assert(::Cmd::ESocialRelation_IsValid(value));
  set_has_relation();
  relation_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RemoveRelation.relation)
}

// -------------------------------------------------------------------

// Recall

// optional uint64 charid = 1 [default = 0];
inline bool Recall::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Recall::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Recall::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Recall::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 Recall::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.Recall.charid)
  return charid_;
}
inline void Recall::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.Recall.charid)
}

// -------------------------------------------------------------------

// QueryRecallListSocialCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
inline bool QueryRecallListSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryRecallListSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryRecallListSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryRecallListSocialCmd::clear_cmd() {
  cmd_ = 56;
  clear_has_cmd();
}
inline ::Cmd::Command QueryRecallListSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryRecallListSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryRecallListSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryRecallListSocialCmd.cmd)
}

// optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_QUERY_RECALL_LIST];
inline bool QueryRecallListSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryRecallListSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryRecallListSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryRecallListSocialCmd::clear_param() {
  param_ = 13;
  clear_has_param();
}
inline ::Cmd::SocialityParam QueryRecallListSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryRecallListSocialCmd.param)
  return static_cast< ::Cmd::SocialityParam >(param_);
}
inline void QueryRecallListSocialCmd::set_param(::Cmd::SocialityParam value) {
  assert(::Cmd::SocialityParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryRecallListSocialCmd.param)
}

// repeated .Cmd.Recall items = 3;
inline int QueryRecallListSocialCmd::items_size() const {
  return items_.size();
}
inline void QueryRecallListSocialCmd::clear_items() {
  items_.Clear();
}
inline const ::Cmd::Recall& QueryRecallListSocialCmd::items(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QueryRecallListSocialCmd.items)
  return items_.Get(index);
}
inline ::Cmd::Recall* QueryRecallListSocialCmd::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Cmd.QueryRecallListSocialCmd.items)
  return items_.Mutable(index);
}
inline ::Cmd::Recall* QueryRecallListSocialCmd::add_items() {
  // @@protoc_insertion_point(field_add:Cmd.QueryRecallListSocialCmd.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::Recall >&
QueryRecallListSocialCmd::items() const {
  // @@protoc_insertion_point(field_list:Cmd.QueryRecallListSocialCmd.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::Recall >*
QueryRecallListSocialCmd::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QueryRecallListSocialCmd.items)
  return &items_;
}

// -------------------------------------------------------------------

// RecallFriendSocialCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
inline bool RecallFriendSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RecallFriendSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RecallFriendSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RecallFriendSocialCmd::clear_cmd() {
  cmd_ = 56;
  clear_has_cmd();
}
inline ::Cmd::Command RecallFriendSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.RecallFriendSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void RecallFriendSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RecallFriendSocialCmd.cmd)
}

// optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_RECALL_FRIEND];
inline bool RecallFriendSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RecallFriendSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RecallFriendSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RecallFriendSocialCmd::clear_param() {
  param_ = 14;
  clear_has_param();
}
inline ::Cmd::SocialityParam RecallFriendSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.RecallFriendSocialCmd.param)
  return static_cast< ::Cmd::SocialityParam >(param_);
}
inline void RecallFriendSocialCmd::set_param(::Cmd::SocialityParam value) {
  assert(::Cmd::SocialityParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RecallFriendSocialCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool RecallFriendSocialCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RecallFriendSocialCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RecallFriendSocialCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RecallFriendSocialCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 RecallFriendSocialCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.RecallFriendSocialCmd.charid)
  return charid_;
}
inline void RecallFriendSocialCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.RecallFriendSocialCmd.charid)
}

// -------------------------------------------------------------------

// AddRelationResultSocialCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
inline bool AddRelationResultSocialCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddRelationResultSocialCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddRelationResultSocialCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddRelationResultSocialCmd::clear_cmd() {
  cmd_ = 56;
  clear_has_cmd();
}
inline ::Cmd::Command AddRelationResultSocialCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.AddRelationResultSocialCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void AddRelationResultSocialCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AddRelationResultSocialCmd.cmd)
}

// optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_ADD_RELATION_RESULT];
inline bool AddRelationResultSocialCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddRelationResultSocialCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddRelationResultSocialCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddRelationResultSocialCmd::clear_param() {
  param_ = 15;
  clear_has_param();
}
inline ::Cmd::SocialityParam AddRelationResultSocialCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.AddRelationResultSocialCmd.param)
  return static_cast< ::Cmd::SocialityParam >(param_);
}
inline void AddRelationResultSocialCmd::set_param(::Cmd::SocialityParam value) {
  assert(::Cmd::SocialityParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AddRelationResultSocialCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool AddRelationResultSocialCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddRelationResultSocialCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddRelationResultSocialCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddRelationResultSocialCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 AddRelationResultSocialCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.AddRelationResultSocialCmd.charid)
  return charid_;
}
inline void AddRelationResultSocialCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AddRelationResultSocialCmd.charid)
}

// optional .Cmd.ESocialRelation relation = 4 [default = ESOCIALRELATION_MIN];
inline bool AddRelationResultSocialCmd::has_relation() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddRelationResultSocialCmd::set_has_relation() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddRelationResultSocialCmd::clear_has_relation() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddRelationResultSocialCmd::clear_relation() {
  relation_ = 1;
  clear_has_relation();
}
inline ::Cmd::ESocialRelation AddRelationResultSocialCmd::relation() const {
  // @@protoc_insertion_point(field_get:Cmd.AddRelationResultSocialCmd.relation)
  return static_cast< ::Cmd::ESocialRelation >(relation_);
}
inline void AddRelationResultSocialCmd::set_relation(::Cmd::ESocialRelation value) {
  assert(::Cmd::ESocialRelation_IsValid(value));
  set_has_relation();
  relation_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AddRelationResultSocialCmd.relation)
}

// optional bool success = 5 [default = false];
inline bool AddRelationResultSocialCmd::has_success() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AddRelationResultSocialCmd::set_has_success() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AddRelationResultSocialCmd::clear_has_success() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AddRelationResultSocialCmd::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool AddRelationResultSocialCmd::success() const {
  // @@protoc_insertion_point(field_get:Cmd.AddRelationResultSocialCmd.success)
  return success_;
}
inline void AddRelationResultSocialCmd::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:Cmd.AddRelationResultSocialCmd.success)
}

// -------------------------------------------------------------------

// QueryChargeVirginCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
inline bool QueryChargeVirginCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryChargeVirginCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryChargeVirginCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryChargeVirginCmd::clear_cmd() {
  cmd_ = 56;
  clear_has_cmd();
}
inline ::Cmd::Command QueryChargeVirginCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryChargeVirginCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryChargeVirginCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryChargeVirginCmd.cmd)
}

// optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_QUERY_CHARGE_VIRGIN];
inline bool QueryChargeVirginCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryChargeVirginCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryChargeVirginCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryChargeVirginCmd::clear_param() {
  param_ = 16;
  clear_has_param();
}
inline ::Cmd::SocialityParam QueryChargeVirginCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryChargeVirginCmd.param)
  return static_cast< ::Cmd::SocialityParam >(param_);
}
inline void QueryChargeVirginCmd::set_param(::Cmd::SocialityParam value) {
  assert(::Cmd::SocialityParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryChargeVirginCmd.param)
}

// repeated uint64 datas = 3;
inline int QueryChargeVirginCmd::datas_size() const {
  return datas_.size();
}
inline void QueryChargeVirginCmd::clear_datas() {
  datas_.Clear();
}
inline ::google::protobuf::uint64 QueryChargeVirginCmd::datas(int index) const {
  // @@protoc_insertion_point(field_get:Cmd.QueryChargeVirginCmd.datas)
  return datas_.Get(index);
}
inline void QueryChargeVirginCmd::set_datas(int index, ::google::protobuf::uint64 value) {
  datas_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cmd.QueryChargeVirginCmd.datas)
}
inline void QueryChargeVirginCmd::add_datas(::google::protobuf::uint64 value) {
  datas_.Add(value);
  // @@protoc_insertion_point(field_add:Cmd.QueryChargeVirginCmd.datas)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
QueryChargeVirginCmd::datas() const {
  // @@protoc_insertion_point(field_list:Cmd.QueryChargeVirginCmd.datas)
  return datas_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
QueryChargeVirginCmd::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:Cmd.QueryChargeVirginCmd.datas)
  return &datas_;
}

// optional uint64 del = 4 [default = 0];
inline bool QueryChargeVirginCmd::has_del() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryChargeVirginCmd::set_has_del() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryChargeVirginCmd::clear_has_del() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryChargeVirginCmd::clear_del() {
  del_ = GOOGLE_ULONGLONG(0);
  clear_has_del();
}
inline ::google::protobuf::uint64 QueryChargeVirginCmd::del() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryChargeVirginCmd.del)
  return del_;
}
inline void QueryChargeVirginCmd::set_del(::google::protobuf::uint64 value) {
  set_has_del();
  del_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryChargeVirginCmd.del)
}

// -------------------------------------------------------------------

// QueryUserInfoCmd

// optional .Cmd.Command cmd = 1 [default = SESSION_USER_SOCIALITY_PROTOCMD];
inline bool QueryUserInfoCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryUserInfoCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryUserInfoCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryUserInfoCmd::clear_cmd() {
  cmd_ = 56;
  clear_has_cmd();
}
inline ::Cmd::Command QueryUserInfoCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryUserInfoCmd.cmd)
  return static_cast< ::Cmd::Command >(cmd_);
}
inline void QueryUserInfoCmd::set_cmd(::Cmd::Command value) {
  assert(::Cmd::Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryUserInfoCmd.cmd)
}

// optional .Cmd.SocialityParam param = 2 [default = SOCIALITYPARAM_QUERY_USER_INFO];
inline bool QueryUserInfoCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryUserInfoCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryUserInfoCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryUserInfoCmd::clear_param() {
  param_ = 17;
  clear_has_param();
}
inline ::Cmd::SocialityParam QueryUserInfoCmd::param() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryUserInfoCmd.param)
  return static_cast< ::Cmd::SocialityParam >(param_);
}
inline void QueryUserInfoCmd::set_param(::Cmd::SocialityParam value) {
  assert(::Cmd::SocialityParam_IsValid(value));
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryUserInfoCmd.param)
}

// optional uint64 charid = 3 [default = 0];
inline bool QueryUserInfoCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryUserInfoCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryUserInfoCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryUserInfoCmd::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 QueryUserInfoCmd::charid() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryUserInfoCmd.charid)
  return charid_;
}
inline void QueryUserInfoCmd::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Cmd.QueryUserInfoCmd.charid)
}

// optional .Cmd.SocialData data = 4;
inline bool QueryUserInfoCmd::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryUserInfoCmd::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryUserInfoCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryUserInfoCmd::clear_data() {
  if (data_ != NULL) data_->::Cmd::SocialData::Clear();
  clear_has_data();
}
inline const ::Cmd::SocialData& QueryUserInfoCmd::data() const {
  // @@protoc_insertion_point(field_get:Cmd.QueryUserInfoCmd.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Cmd::SocialData* QueryUserInfoCmd::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Cmd::SocialData;
  // @@protoc_insertion_point(field_mutable:Cmd.QueryUserInfoCmd.data)
  return data_;
}
inline ::Cmd::SocialData* QueryUserInfoCmd::release_data() {
  clear_has_data();
  ::Cmd::SocialData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void QueryUserInfoCmd::set_allocated_data(::Cmd::SocialData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Cmd.QueryUserInfoCmd.data)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cmd

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Cmd::SocialityParam> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::SocialityParam>() {
  return ::Cmd::SocialityParam_descriptor();
}
template <> struct is_proto_enum< ::Cmd::ESocialRelation> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::ESocialRelation>() {
  return ::Cmd::ESocialRelation_descriptor();
}
template <> struct is_proto_enum< ::Cmd::ESocialData> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::ESocialData>() {
  return ::Cmd::ESocialData_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EOperateType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EOperateType>() {
  return ::Cmd::EOperateType_descriptor();
}
template <> struct is_proto_enum< ::Cmd::EOperateState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd::EOperateState>() {
  return ::Cmd::EOperateState_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SessionSociality_2eproto__INCLUDED
