<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: GuildSCmd.proto

namespace RO\Cmd {

  class GvgResultInfo extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $cityid = null;
    
    /**  @var int */
    public $guildid = null;
    
    /**  @var string */
    public $guildname = null;
    
    /**  @var string */
    public $leadername = null;
    
    /**  @var boolean */
    public $perfect = false;
    
    /**  @var int */
    public $times = 0;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.GvgResultInfo');

      // REQUIRED UINT32 cityid = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "cityid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // OPTIONAL UINT64 guildid = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "guildid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING guildname = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "guildname";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING leadername = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "leadername";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL perfect = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "perfect";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // OPTIONAL UINT32 times = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "times";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <cityid> has a value
     *
     * @return boolean
     */
    public function hasCityid(){
      return $this->_has(1);
    }
    
    /**
     * Clear <cityid> value
     *
     * @return \RO\Cmd\GvgResultInfo
     */
    public function clearCityid(){
      return $this->_clear(1);
    }
    
    /**
     * Get <cityid> value
     *
     * @return int
     */
    public function getCityid(){
      return $this->_get(1);
    }
    
    /**
     * Set <cityid> value
     *
     * @param int $value
     * @return \RO\Cmd\GvgResultInfo
     */
    public function setCityid( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <guildid> has a value
     *
     * @return boolean
     */
    public function hasGuildid(){
      return $this->_has(2);
    }
    
    /**
     * Clear <guildid> value
     *
     * @return \RO\Cmd\GvgResultInfo
     */
    public function clearGuildid(){
      return $this->_clear(2);
    }
    
    /**
     * Get <guildid> value
     *
     * @return int
     */
    public function getGuildid(){
      return $this->_get(2);
    }
    
    /**
     * Set <guildid> value
     *
     * @param int $value
     * @return \RO\Cmd\GvgResultInfo
     */
    public function setGuildid( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <guildname> has a value
     *
     * @return boolean
     */
    public function hasGuildname(){
      return $this->_has(3);
    }
    
    /**
     * Clear <guildname> value
     *
     * @return \RO\Cmd\GvgResultInfo
     */
    public function clearGuildname(){
      return $this->_clear(3);
    }
    
    /**
     * Get <guildname> value
     *
     * @return string
     */
    public function getGuildname(){
      return $this->_get(3);
    }
    
    /**
     * Set <guildname> value
     *
     * @param string $value
     * @return \RO\Cmd\GvgResultInfo
     */
    public function setGuildname( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <leadername> has a value
     *
     * @return boolean
     */
    public function hasLeadername(){
      return $this->_has(4);
    }
    
    /**
     * Clear <leadername> value
     *
     * @return \RO\Cmd\GvgResultInfo
     */
    public function clearLeadername(){
      return $this->_clear(4);
    }
    
    /**
     * Get <leadername> value
     *
     * @return string
     */
    public function getLeadername(){
      return $this->_get(4);
    }
    
    /**
     * Set <leadername> value
     *
     * @param string $value
     * @return \RO\Cmd\GvgResultInfo
     */
    public function setLeadername( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <perfect> has a value
     *
     * @return boolean
     */
    public function hasPerfect(){
      return $this->_has(5);
    }
    
    /**
     * Clear <perfect> value
     *
     * @return \RO\Cmd\GvgResultInfo
     */
    public function clearPerfect(){
      return $this->_clear(5);
    }
    
    /**
     * Get <perfect> value
     *
     * @return boolean
     */
    public function getPerfect(){
      return $this->_get(5);
    }
    
    /**
     * Set <perfect> value
     *
     * @param boolean $value
     * @return \RO\Cmd\GvgResultInfo
     */
    public function setPerfect( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <times> has a value
     *
     * @return boolean
     */
    public function hasTimes(){
      return $this->_has(6);
    }
    
    /**
     * Clear <times> value
     *
     * @return \RO\Cmd\GvgResultInfo
     */
    public function clearTimes(){
      return $this->_clear(6);
    }
    
    /**
     * Get <times> value
     *
     * @return int
     */
    public function getTimes(){
      return $this->_get(6);
    }
    
    /**
     * Set <times> value
     *
     * @param int $value
     * @return \RO\Cmd\GvgResultInfo
     */
    public function setTimes( $value){
      return $this->_set(6, $value);
    }
  }
}

