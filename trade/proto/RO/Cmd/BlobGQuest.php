<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: GuildCmd.proto

namespace RO\Cmd {

  class BlobGQuest extends \DrSlump\Protobuf\Message {

    /**  @var \RO\Cmd\GQuest[]  */
    public $quests = array();
    
    /**  @var int[]  */
    public $accepts = array();
    
    /**  @var int[]  */
    public $submit = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.BlobGQuest');

      // REPEATED MESSAGE quests = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "quests";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\GQuest';
      $descriptor->addField($f);

      // REPEATED UINT32 accepts = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "accepts";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // REPEATED UINT32 submit = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "submit";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <quests> has a value
     *
     * @return boolean
     */
    public function hasQuests(){
      return $this->_has(1);
    }
    
    /**
     * Clear <quests> value
     *
     * @return \RO\Cmd\BlobGQuest
     */
    public function clearQuests(){
      return $this->_clear(1);
    }
    
    /**
     * Get <quests> value
     *
     * @param int $idx
     * @return \RO\Cmd\GQuest
     */
    public function getQuests($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <quests> value
     *
     * @param \RO\Cmd\GQuest $value
     * @return \RO\Cmd\BlobGQuest
     */
    public function setQuests(\RO\Cmd\GQuest $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <quests>
     *
     * @return \RO\Cmd\GQuest[]
     */
    public function getQuestsList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <quests>
     *
     * @param \RO\Cmd\GQuest $value
     * @return \RO\Cmd\BlobGQuest
     */
    public function addQuests(\RO\Cmd\GQuest $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <accepts> has a value
     *
     * @return boolean
     */
    public function hasAccepts(){
      return $this->_has(2);
    }
    
    /**
     * Clear <accepts> value
     *
     * @return \RO\Cmd\BlobGQuest
     */
    public function clearAccepts(){
      return $this->_clear(2);
    }
    
    /**
     * Get <accepts> value
     *
     * @param int $idx
     * @return int
     */
    public function getAccepts($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <accepts> value
     *
     * @param int $value
     * @return \RO\Cmd\BlobGQuest
     */
    public function setAccepts( $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <accepts>
     *
     * @return int[]
     */
    public function getAcceptsList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <accepts>
     *
     * @param int $value
     * @return \RO\Cmd\BlobGQuest
     */
    public function addAccepts( $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <submit> has a value
     *
     * @return boolean
     */
    public function hasSubmit(){
      return $this->_has(3);
    }
    
    /**
     * Clear <submit> value
     *
     * @return \RO\Cmd\BlobGQuest
     */
    public function clearSubmit(){
      return $this->_clear(3);
    }
    
    /**
     * Get <submit> value
     *
     * @param int $idx
     * @return int
     */
    public function getSubmit($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <submit> value
     *
     * @param int $value
     * @return \RO\Cmd\BlobGQuest
     */
    public function setSubmit( $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <submit>
     *
     * @return int[]
     */
    public function getSubmitList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <submit>
     *
     * @param int $value
     * @return \RO\Cmd\BlobGQuest
     */
    public function addSubmit( $value){
     return $this->_add(3, $value);
    }
  }
}

