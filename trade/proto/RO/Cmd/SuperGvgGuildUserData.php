<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: FuBenCmd.proto

namespace RO\Cmd {

  class SuperGvgGuildUserData extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $guildid = null;
    
    /**  @var \RO\Cmd\SuperGvgUserData[]  */
    public $userdatas = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.SuperGvgGuildUserData');

      // REQUIRED UINT64 guildid = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "guildid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // REPEATED MESSAGE userdatas = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "userdatas";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\SuperGvgUserData';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <guildid> has a value
     *
     * @return boolean
     */
    public function hasGuildid(){
      return $this->_has(1);
    }
    
    /**
     * Clear <guildid> value
     *
     * @return \RO\Cmd\SuperGvgGuildUserData
     */
    public function clearGuildid(){
      return $this->_clear(1);
    }
    
    /**
     * Get <guildid> value
     *
     * @return int
     */
    public function getGuildid(){
      return $this->_get(1);
    }
    
    /**
     * Set <guildid> value
     *
     * @param int $value
     * @return \RO\Cmd\SuperGvgGuildUserData
     */
    public function setGuildid( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <userdatas> has a value
     *
     * @return boolean
     */
    public function hasUserdatas(){
      return $this->_has(2);
    }
    
    /**
     * Clear <userdatas> value
     *
     * @return \RO\Cmd\SuperGvgGuildUserData
     */
    public function clearUserdatas(){
      return $this->_clear(2);
    }
    
    /**
     * Get <userdatas> value
     *
     * @param int $idx
     * @return \RO\Cmd\SuperGvgUserData
     */
    public function getUserdatas($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <userdatas> value
     *
     * @param \RO\Cmd\SuperGvgUserData $value
     * @return \RO\Cmd\SuperGvgGuildUserData
     */
    public function setUserdatas(\RO\Cmd\SuperGvgUserData $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <userdatas>
     *
     * @return \RO\Cmd\SuperGvgUserData[]
     */
    public function getUserdatasList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <userdatas>
     *
     * @param \RO\Cmd\SuperGvgUserData $value
     * @return \RO\Cmd\SuperGvgGuildUserData
     */
    public function addUserdatas(\RO\Cmd\SuperGvgUserData $value){
     return $this->_add(2, $value);
    }
  }
}

