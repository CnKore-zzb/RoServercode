<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: GuildCmd.proto

namespace RO\Cmd {

  class CityShowInfo extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $cityid = 0;
    
    /**  @var int - \RO\Cmd\EGCityState */
    public $state = \RO\Cmd\EGCityState::EGCITYSTATE_MIN;
    
    /**  @var int */
    public $guildid = 0;
    
    /**  @var string */
    public $name = null;
    
    /**  @var string */
    public $portrait = null;
    
    /**  @var int */
    public $lv = 0;
    
    /**  @var int */
    public $membercount = 0;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.CityShowInfo');

      // OPTIONAL UINT32 cityid = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "cityid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL ENUM state = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "state";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\EGCityState';
      $f->default   = \RO\Cmd\EGCityState::EGCITYSTATE_MIN;
      $descriptor->addField($f);

      // OPTIONAL UINT64 guildid = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "guildid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL STRING name = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING portrait = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "portrait";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 lv = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "lv";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 membercount = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "membercount";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <cityid> has a value
     *
     * @return boolean
     */
    public function hasCityid(){
      return $this->_has(1);
    }
    
    /**
     * Clear <cityid> value
     *
     * @return \RO\Cmd\CityShowInfo
     */
    public function clearCityid(){
      return $this->_clear(1);
    }
    
    /**
     * Get <cityid> value
     *
     * @return int
     */
    public function getCityid(){
      return $this->_get(1);
    }
    
    /**
     * Set <cityid> value
     *
     * @param int $value
     * @return \RO\Cmd\CityShowInfo
     */
    public function setCityid( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <state> has a value
     *
     * @return boolean
     */
    public function hasState(){
      return $this->_has(2);
    }
    
    /**
     * Clear <state> value
     *
     * @return \RO\Cmd\CityShowInfo
     */
    public function clearState(){
      return $this->_clear(2);
    }
    
    /**
     * Get <state> value
     *
     * @return int - \RO\Cmd\EGCityState
     */
    public function getState(){
      return $this->_get(2);
    }
    
    /**
     * Set <state> value
     *
     * @param int - \RO\Cmd\EGCityState $value
     * @return \RO\Cmd\CityShowInfo
     */
    public function setState( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <guildid> has a value
     *
     * @return boolean
     */
    public function hasGuildid(){
      return $this->_has(3);
    }
    
    /**
     * Clear <guildid> value
     *
     * @return \RO\Cmd\CityShowInfo
     */
    public function clearGuildid(){
      return $this->_clear(3);
    }
    
    /**
     * Get <guildid> value
     *
     * @return int
     */
    public function getGuildid(){
      return $this->_get(3);
    }
    
    /**
     * Set <guildid> value
     *
     * @param int $value
     * @return \RO\Cmd\CityShowInfo
     */
    public function setGuildid( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(4);
    }
    
    /**
     * Clear <name> value
     *
     * @return \RO\Cmd\CityShowInfo
     */
    public function clearName(){
      return $this->_clear(4);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(4);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \RO\Cmd\CityShowInfo
     */
    public function setName( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <portrait> has a value
     *
     * @return boolean
     */
    public function hasPortrait(){
      return $this->_has(5);
    }
    
    /**
     * Clear <portrait> value
     *
     * @return \RO\Cmd\CityShowInfo
     */
    public function clearPortrait(){
      return $this->_clear(5);
    }
    
    /**
     * Get <portrait> value
     *
     * @return string
     */
    public function getPortrait(){
      return $this->_get(5);
    }
    
    /**
     * Set <portrait> value
     *
     * @param string $value
     * @return \RO\Cmd\CityShowInfo
     */
    public function setPortrait( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <lv> has a value
     *
     * @return boolean
     */
    public function hasLv(){
      return $this->_has(6);
    }
    
    /**
     * Clear <lv> value
     *
     * @return \RO\Cmd\CityShowInfo
     */
    public function clearLv(){
      return $this->_clear(6);
    }
    
    /**
     * Get <lv> value
     *
     * @return int
     */
    public function getLv(){
      return $this->_get(6);
    }
    
    /**
     * Set <lv> value
     *
     * @param int $value
     * @return \RO\Cmd\CityShowInfo
     */
    public function setLv( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <membercount> has a value
     *
     * @return boolean
     */
    public function hasMembercount(){
      return $this->_has(7);
    }
    
    /**
     * Clear <membercount> value
     *
     * @return \RO\Cmd\CityShowInfo
     */
    public function clearMembercount(){
      return $this->_clear(7);
    }
    
    /**
     * Get <membercount> value
     *
     * @return int
     */
    public function getMembercount(){
      return $this->_get(7);
    }
    
    /**
     * Set <membercount> value
     *
     * @param int $value
     * @return \RO\Cmd\CityShowInfo
     */
    public function setMembercount( $value){
      return $this->_set(7, $value);
    }
  }
}

