<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: FuBenCmd.proto

namespace RO\Cmd {

  class WorldStageItem extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $id = null;
    
    /**  @var int */
    public $star = null;
    
    /**  @var int[]  */
    public $getList = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.WorldStageItem');

      // OPTIONAL UINT32 id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "id";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 star = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "star";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED UINT32 getList = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "getList";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <id> has a value
     *
     * @return boolean
     */
    public function hasId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <id> value
     *
     * @return \RO\Cmd\WorldStageItem
     */
    public function clearId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <id> value
     *
     * @return int
     */
    public function getId(){
      return $this->_get(1);
    }
    
    /**
     * Set <id> value
     *
     * @param int $value
     * @return \RO\Cmd\WorldStageItem
     */
    public function setId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <star> has a value
     *
     * @return boolean
     */
    public function hasStar(){
      return $this->_has(2);
    }
    
    /**
     * Clear <star> value
     *
     * @return \RO\Cmd\WorldStageItem
     */
    public function clearStar(){
      return $this->_clear(2);
    }
    
    /**
     * Get <star> value
     *
     * @return int
     */
    public function getStar(){
      return $this->_get(2);
    }
    
    /**
     * Set <star> value
     *
     * @param int $value
     * @return \RO\Cmd\WorldStageItem
     */
    public function setStar( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <getList> has a value
     *
     * @return boolean
     */
    public function hasGetList(){
      return $this->_has(3);
    }
    
    /**
     * Clear <getList> value
     *
     * @return \RO\Cmd\WorldStageItem
     */
    public function clearGetList(){
      return $this->_clear(3);
    }
    
    /**
     * Get <getList> value
     *
     * @param int $idx
     * @return int
     */
    public function getGetList($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <getList> value
     *
     * @param int $value
     * @return \RO\Cmd\WorldStageItem
     */
    public function setGetList( $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <getList>
     *
     * @return int[]
     */
    public function getGetListList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <getList>
     *
     * @param int $value
     * @return \RO\Cmd\WorldStageItem
     */
    public function addGetList( $value){
     return $this->_add(3, $value);
    }
  }
}

