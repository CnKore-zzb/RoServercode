<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: SceneItem.proto

namespace RO\Cmd {

  class LotteryInfo extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $year = null;
    
    /**  @var int */
    public $month = null;
    
    /**  @var int */
    public $price = null;
    
    /**  @var int */
    public $discount = null;
    
    /**  @var \RO\Cmd\LotterySubInfo[]  */
    public $subInfo = array();
    
    /**  @var int */
    public $lotterybox = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.LotteryInfo');

      // OPTIONAL UINT32 year = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "year";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 month = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "month";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 price = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "price";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 discount = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "discount";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE subInfo = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "subInfo";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\LotterySubInfo';
      $descriptor->addField($f);

      // OPTIONAL UINT32 lotterybox = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "lotterybox";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <year> has a value
     *
     * @return boolean
     */
    public function hasYear(){
      return $this->_has(1);
    }
    
    /**
     * Clear <year> value
     *
     * @return \RO\Cmd\LotteryInfo
     */
    public function clearYear(){
      return $this->_clear(1);
    }
    
    /**
     * Get <year> value
     *
     * @return int
     */
    public function getYear(){
      return $this->_get(1);
    }
    
    /**
     * Set <year> value
     *
     * @param int $value
     * @return \RO\Cmd\LotteryInfo
     */
    public function setYear( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <month> has a value
     *
     * @return boolean
     */
    public function hasMonth(){
      return $this->_has(2);
    }
    
    /**
     * Clear <month> value
     *
     * @return \RO\Cmd\LotteryInfo
     */
    public function clearMonth(){
      return $this->_clear(2);
    }
    
    /**
     * Get <month> value
     *
     * @return int
     */
    public function getMonth(){
      return $this->_get(2);
    }
    
    /**
     * Set <month> value
     *
     * @param int $value
     * @return \RO\Cmd\LotteryInfo
     */
    public function setMonth( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <price> has a value
     *
     * @return boolean
     */
    public function hasPrice(){
      return $this->_has(3);
    }
    
    /**
     * Clear <price> value
     *
     * @return \RO\Cmd\LotteryInfo
     */
    public function clearPrice(){
      return $this->_clear(3);
    }
    
    /**
     * Get <price> value
     *
     * @return int
     */
    public function getPrice(){
      return $this->_get(3);
    }
    
    /**
     * Set <price> value
     *
     * @param int $value
     * @return \RO\Cmd\LotteryInfo
     */
    public function setPrice( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <discount> has a value
     *
     * @return boolean
     */
    public function hasDiscount(){
      return $this->_has(4);
    }
    
    /**
     * Clear <discount> value
     *
     * @return \RO\Cmd\LotteryInfo
     */
    public function clearDiscount(){
      return $this->_clear(4);
    }
    
    /**
     * Get <discount> value
     *
     * @return int
     */
    public function getDiscount(){
      return $this->_get(4);
    }
    
    /**
     * Set <discount> value
     *
     * @param int $value
     * @return \RO\Cmd\LotteryInfo
     */
    public function setDiscount( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <subInfo> has a value
     *
     * @return boolean
     */
    public function hasSubInfo(){
      return $this->_has(5);
    }
    
    /**
     * Clear <subInfo> value
     *
     * @return \RO\Cmd\LotteryInfo
     */
    public function clearSubInfo(){
      return $this->_clear(5);
    }
    
    /**
     * Get <subInfo> value
     *
     * @param int $idx
     * @return \RO\Cmd\LotterySubInfo
     */
    public function getSubInfo($idx = NULL){
      return $this->_get(5, $idx);
    }
    
    /**
     * Set <subInfo> value
     *
     * @param \RO\Cmd\LotterySubInfo $value
     * @return \RO\Cmd\LotteryInfo
     */
    public function setSubInfo(\RO\Cmd\LotterySubInfo $value, $idx = NULL){
      return $this->_set(5, $value, $idx);
    }
    
    /**
     * Get all elements of <subInfo>
     *
     * @return \RO\Cmd\LotterySubInfo[]
     */
    public function getSubInfoList(){
     return $this->_get(5);
    }
    
    /**
     * Add a new element to <subInfo>
     *
     * @param \RO\Cmd\LotterySubInfo $value
     * @return \RO\Cmd\LotteryInfo
     */
    public function addSubInfo(\RO\Cmd\LotterySubInfo $value){
     return $this->_add(5, $value);
    }
    
    /**
     * Check if <lotterybox> has a value
     *
     * @return boolean
     */
    public function hasLotterybox(){
      return $this->_has(6);
    }
    
    /**
     * Clear <lotterybox> value
     *
     * @return \RO\Cmd\LotteryInfo
     */
    public function clearLotterybox(){
      return $this->_clear(6);
    }
    
    /**
     * Get <lotterybox> value
     *
     * @return int
     */
    public function getLotterybox(){
      return $this->_get(6);
    }
    
    /**
     * Set <lotterybox> value
     *
     * @param int $value
     * @return \RO\Cmd\LotteryInfo
     */
    public function setLotterybox( $value){
      return $this->_set(6, $value);
    }
  }
}

