<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: GuildCmd.proto

namespace RO\Cmd {

  class GuildCityInfo extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $id = 0;
    
    /**  @var int */
    public $flag = 0;
    
    /**  @var int */
    public $lv = 0;
    
    /**  @var int */
    public $membercount = 0;
    
    /**  @var string */
    public $name = null;
    
    /**  @var string */
    public $portrait = null;
    
    /**  @var int */
    public $oldguild = 0;
    
    /**  @var int */
    public $times = 0;
    
    /**  @var string */
    public $leadername = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.GuildCityInfo');

      // OPTIONAL UINT64 id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "id";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 flag = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "flag";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 lv = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "lv";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 membercount = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "membercount";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL STRING name = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING portrait = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "portrait";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT64 oldguild = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "oldguild";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 times = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "times";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL STRING leadername = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "leadername";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <id> has a value
     *
     * @return boolean
     */
    public function hasId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <id> value
     *
     * @return \RO\Cmd\GuildCityInfo
     */
    public function clearId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <id> value
     *
     * @return int
     */
    public function getId(){
      return $this->_get(1);
    }
    
    /**
     * Set <id> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildCityInfo
     */
    public function setId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <flag> has a value
     *
     * @return boolean
     */
    public function hasFlag(){
      return $this->_has(2);
    }
    
    /**
     * Clear <flag> value
     *
     * @return \RO\Cmd\GuildCityInfo
     */
    public function clearFlag(){
      return $this->_clear(2);
    }
    
    /**
     * Get <flag> value
     *
     * @return int
     */
    public function getFlag(){
      return $this->_get(2);
    }
    
    /**
     * Set <flag> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildCityInfo
     */
    public function setFlag( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <lv> has a value
     *
     * @return boolean
     */
    public function hasLv(){
      return $this->_has(3);
    }
    
    /**
     * Clear <lv> value
     *
     * @return \RO\Cmd\GuildCityInfo
     */
    public function clearLv(){
      return $this->_clear(3);
    }
    
    /**
     * Get <lv> value
     *
     * @return int
     */
    public function getLv(){
      return $this->_get(3);
    }
    
    /**
     * Set <lv> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildCityInfo
     */
    public function setLv( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <membercount> has a value
     *
     * @return boolean
     */
    public function hasMembercount(){
      return $this->_has(4);
    }
    
    /**
     * Clear <membercount> value
     *
     * @return \RO\Cmd\GuildCityInfo
     */
    public function clearMembercount(){
      return $this->_clear(4);
    }
    
    /**
     * Get <membercount> value
     *
     * @return int
     */
    public function getMembercount(){
      return $this->_get(4);
    }
    
    /**
     * Set <membercount> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildCityInfo
     */
    public function setMembercount( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(5);
    }
    
    /**
     * Clear <name> value
     *
     * @return \RO\Cmd\GuildCityInfo
     */
    public function clearName(){
      return $this->_clear(5);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(5);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \RO\Cmd\GuildCityInfo
     */
    public function setName( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <portrait> has a value
     *
     * @return boolean
     */
    public function hasPortrait(){
      return $this->_has(6);
    }
    
    /**
     * Clear <portrait> value
     *
     * @return \RO\Cmd\GuildCityInfo
     */
    public function clearPortrait(){
      return $this->_clear(6);
    }
    
    /**
     * Get <portrait> value
     *
     * @return string
     */
    public function getPortrait(){
      return $this->_get(6);
    }
    
    /**
     * Set <portrait> value
     *
     * @param string $value
     * @return \RO\Cmd\GuildCityInfo
     */
    public function setPortrait( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <oldguild> has a value
     *
     * @return boolean
     */
    public function hasOldguild(){
      return $this->_has(7);
    }
    
    /**
     * Clear <oldguild> value
     *
     * @return \RO\Cmd\GuildCityInfo
     */
    public function clearOldguild(){
      return $this->_clear(7);
    }
    
    /**
     * Get <oldguild> value
     *
     * @return int
     */
    public function getOldguild(){
      return $this->_get(7);
    }
    
    /**
     * Set <oldguild> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildCityInfo
     */
    public function setOldguild( $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <times> has a value
     *
     * @return boolean
     */
    public function hasTimes(){
      return $this->_has(8);
    }
    
    /**
     * Clear <times> value
     *
     * @return \RO\Cmd\GuildCityInfo
     */
    public function clearTimes(){
      return $this->_clear(8);
    }
    
    /**
     * Get <times> value
     *
     * @return int
     */
    public function getTimes(){
      return $this->_get(8);
    }
    
    /**
     * Set <times> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildCityInfo
     */
    public function setTimes( $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <leadername> has a value
     *
     * @return boolean
     */
    public function hasLeadername(){
      return $this->_has(9);
    }
    
    /**
     * Clear <leadername> value
     *
     * @return \RO\Cmd\GuildCityInfo
     */
    public function clearLeadername(){
      return $this->_clear(9);
    }
    
    /**
     * Get <leadername> value
     *
     * @return string
     */
    public function getLeadername(){
      return $this->_get(9);
    }
    
    /**
     * Set <leadername> value
     *
     * @param string $value
     * @return \RO\Cmd\GuildCityInfo
     */
    public function setLeadername( $value){
      return $this->_set(9, $value);
    }
  }
}

