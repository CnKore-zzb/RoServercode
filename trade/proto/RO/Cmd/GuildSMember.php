<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: GuildSCmd.proto

namespace RO\Cmd {

  class GuildSMember extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $charid = 0;
    
    /**  @var int */
    public $onlinetime = 0;
    
    /**  @var int */
    public $entertime = 0;
    
    /**  @var int - \RO\Cmd\EGuildJob */
    public $job = \RO\Cmd\EGuildJob::EGUILDJOB_MIN;
    
    /**  @var string */
    public $name = null;
    
    /**  @var int */
    public $accid = 0;
    
    /**  @var int */
    public $offlinetime = 0;
    
    /**  @var int */
    public $auth = 0;
    
    /**  @var boolean */
    public $buildingeffect = false;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.GuildSMember');

      // OPTIONAL UINT64 charid = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "charid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 onlinetime = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "onlinetime";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 entertime = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "entertime";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL ENUM job = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "job";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\EGuildJob';
      $f->default   = \RO\Cmd\EGuildJob::EGUILDJOB_MIN;
      $descriptor->addField($f);

      // OPTIONAL STRING name = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT64 accid = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "accid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 offlinetime = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "offlinetime";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 auth = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "auth";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL BOOL buildingeffect = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "buildingeffect";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <charid> has a value
     *
     * @return boolean
     */
    public function hasCharid(){
      return $this->_has(1);
    }
    
    /**
     * Clear <charid> value
     *
     * @return \RO\Cmd\GuildSMember
     */
    public function clearCharid(){
      return $this->_clear(1);
    }
    
    /**
     * Get <charid> value
     *
     * @return int
     */
    public function getCharid(){
      return $this->_get(1);
    }
    
    /**
     * Set <charid> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildSMember
     */
    public function setCharid( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <onlinetime> has a value
     *
     * @return boolean
     */
    public function hasOnlinetime(){
      return $this->_has(2);
    }
    
    /**
     * Clear <onlinetime> value
     *
     * @return \RO\Cmd\GuildSMember
     */
    public function clearOnlinetime(){
      return $this->_clear(2);
    }
    
    /**
     * Get <onlinetime> value
     *
     * @return int
     */
    public function getOnlinetime(){
      return $this->_get(2);
    }
    
    /**
     * Set <onlinetime> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildSMember
     */
    public function setOnlinetime( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <entertime> has a value
     *
     * @return boolean
     */
    public function hasEntertime(){
      return $this->_has(3);
    }
    
    /**
     * Clear <entertime> value
     *
     * @return \RO\Cmd\GuildSMember
     */
    public function clearEntertime(){
      return $this->_clear(3);
    }
    
    /**
     * Get <entertime> value
     *
     * @return int
     */
    public function getEntertime(){
      return $this->_get(3);
    }
    
    /**
     * Set <entertime> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildSMember
     */
    public function setEntertime( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <job> has a value
     *
     * @return boolean
     */
    public function hasJob(){
      return $this->_has(4);
    }
    
    /**
     * Clear <job> value
     *
     * @return \RO\Cmd\GuildSMember
     */
    public function clearJob(){
      return $this->_clear(4);
    }
    
    /**
     * Get <job> value
     *
     * @return int - \RO\Cmd\EGuildJob
     */
    public function getJob(){
      return $this->_get(4);
    }
    
    /**
     * Set <job> value
     *
     * @param int - \RO\Cmd\EGuildJob $value
     * @return \RO\Cmd\GuildSMember
     */
    public function setJob( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(5);
    }
    
    /**
     * Clear <name> value
     *
     * @return \RO\Cmd\GuildSMember
     */
    public function clearName(){
      return $this->_clear(5);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(5);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \RO\Cmd\GuildSMember
     */
    public function setName( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <accid> has a value
     *
     * @return boolean
     */
    public function hasAccid(){
      return $this->_has(6);
    }
    
    /**
     * Clear <accid> value
     *
     * @return \RO\Cmd\GuildSMember
     */
    public function clearAccid(){
      return $this->_clear(6);
    }
    
    /**
     * Get <accid> value
     *
     * @return int
     */
    public function getAccid(){
      return $this->_get(6);
    }
    
    /**
     * Set <accid> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildSMember
     */
    public function setAccid( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <offlinetime> has a value
     *
     * @return boolean
     */
    public function hasOfflinetime(){
      return $this->_has(7);
    }
    
    /**
     * Clear <offlinetime> value
     *
     * @return \RO\Cmd\GuildSMember
     */
    public function clearOfflinetime(){
      return $this->_clear(7);
    }
    
    /**
     * Get <offlinetime> value
     *
     * @return int
     */
    public function getOfflinetime(){
      return $this->_get(7);
    }
    
    /**
     * Set <offlinetime> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildSMember
     */
    public function setOfflinetime( $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <auth> has a value
     *
     * @return boolean
     */
    public function hasAuth(){
      return $this->_has(8);
    }
    
    /**
     * Clear <auth> value
     *
     * @return \RO\Cmd\GuildSMember
     */
    public function clearAuth(){
      return $this->_clear(8);
    }
    
    /**
     * Get <auth> value
     *
     * @return int
     */
    public function getAuth(){
      return $this->_get(8);
    }
    
    /**
     * Set <auth> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildSMember
     */
    public function setAuth( $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <buildingeffect> has a value
     *
     * @return boolean
     */
    public function hasBuildingeffect(){
      return $this->_has(9);
    }
    
    /**
     * Clear <buildingeffect> value
     *
     * @return \RO\Cmd\GuildSMember
     */
    public function clearBuildingeffect(){
      return $this->_clear(9);
    }
    
    /**
     * Get <buildingeffect> value
     *
     * @return boolean
     */
    public function getBuildingeffect(){
      return $this->_get(9);
    }
    
    /**
     * Set <buildingeffect> value
     *
     * @param boolean $value
     * @return \RO\Cmd\GuildSMember
     */
    public function setBuildingeffect( $value){
      return $this->_set(9, $value);
    }
  }
}

