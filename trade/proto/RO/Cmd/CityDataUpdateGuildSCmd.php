<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: GuildSCmd.proto

namespace RO\Cmd {

  class CityDataUpdateGuildSCmd extends \DrSlump\Protobuf\Message {

    /**  @var int - \RO\Cmd\Command */
    public $cmd = \RO\Cmd\Command::GUILD_PROTOCMD;
    
    /**  @var int - \RO\Cmd\GuildSParam */
    public $param = \RO\Cmd\GuildSParam::GUILDSPARAM_UPDATE_CITYDATA;
    
    /**  @var int */
    public $cityid = 0;
    
    /**  @var int */
    public $membercount = 0;
    
    /**  @var \RO\Cmd\GuildDataUpdate[]  */
    public $updates = array();
    
    /**  @var string */
    public $leadername = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.CityDataUpdateGuildSCmd');

      // OPTIONAL ENUM cmd = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "cmd";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\Command';
      $f->default   = \RO\Cmd\Command::GUILD_PROTOCMD;
      $descriptor->addField($f);

      // OPTIONAL ENUM param = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "param";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\GuildSParam';
      $f->default   = \RO\Cmd\GuildSParam::GUILDSPARAM_UPDATE_CITYDATA;
      $descriptor->addField($f);

      // OPTIONAL UINT64 cityid = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "cityid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 membercount = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "membercount";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // REPEATED MESSAGE updates = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "updates";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\GuildDataUpdate';
      $descriptor->addField($f);

      // OPTIONAL STRING leadername = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "leadername";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <cmd> has a value
     *
     * @return boolean
     */
    public function hasCmd(){
      return $this->_has(1);
    }
    
    /**
     * Clear <cmd> value
     *
     * @return \RO\Cmd\CityDataUpdateGuildSCmd
     */
    public function clearCmd(){
      return $this->_clear(1);
    }
    
    /**
     * Get <cmd> value
     *
     * @return int - \RO\Cmd\Command
     */
    public function getCmd(){
      return $this->_get(1);
    }
    
    /**
     * Set <cmd> value
     *
     * @param int - \RO\Cmd\Command $value
     * @return \RO\Cmd\CityDataUpdateGuildSCmd
     */
    public function setCmd( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <param> has a value
     *
     * @return boolean
     */
    public function hasParam(){
      return $this->_has(2);
    }
    
    /**
     * Clear <param> value
     *
     * @return \RO\Cmd\CityDataUpdateGuildSCmd
     */
    public function clearParam(){
      return $this->_clear(2);
    }
    
    /**
     * Get <param> value
     *
     * @return int - \RO\Cmd\GuildSParam
     */
    public function getParam(){
      return $this->_get(2);
    }
    
    /**
     * Set <param> value
     *
     * @param int - \RO\Cmd\GuildSParam $value
     * @return \RO\Cmd\CityDataUpdateGuildSCmd
     */
    public function setParam( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <cityid> has a value
     *
     * @return boolean
     */
    public function hasCityid(){
      return $this->_has(3);
    }
    
    /**
     * Clear <cityid> value
     *
     * @return \RO\Cmd\CityDataUpdateGuildSCmd
     */
    public function clearCityid(){
      return $this->_clear(3);
    }
    
    /**
     * Get <cityid> value
     *
     * @return int
     */
    public function getCityid(){
      return $this->_get(3);
    }
    
    /**
     * Set <cityid> value
     *
     * @param int $value
     * @return \RO\Cmd\CityDataUpdateGuildSCmd
     */
    public function setCityid( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <membercount> has a value
     *
     * @return boolean
     */
    public function hasMembercount(){
      return $this->_has(4);
    }
    
    /**
     * Clear <membercount> value
     *
     * @return \RO\Cmd\CityDataUpdateGuildSCmd
     */
    public function clearMembercount(){
      return $this->_clear(4);
    }
    
    /**
     * Get <membercount> value
     *
     * @return int
     */
    public function getMembercount(){
      return $this->_get(4);
    }
    
    /**
     * Set <membercount> value
     *
     * @param int $value
     * @return \RO\Cmd\CityDataUpdateGuildSCmd
     */
    public function setMembercount( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <updates> has a value
     *
     * @return boolean
     */
    public function hasUpdates(){
      return $this->_has(5);
    }
    
    /**
     * Clear <updates> value
     *
     * @return \RO\Cmd\CityDataUpdateGuildSCmd
     */
    public function clearUpdates(){
      return $this->_clear(5);
    }
    
    /**
     * Get <updates> value
     *
     * @param int $idx
     * @return \RO\Cmd\GuildDataUpdate
     */
    public function getUpdates($idx = NULL){
      return $this->_get(5, $idx);
    }
    
    /**
     * Set <updates> value
     *
     * @param \RO\Cmd\GuildDataUpdate $value
     * @return \RO\Cmd\CityDataUpdateGuildSCmd
     */
    public function setUpdates(\RO\Cmd\GuildDataUpdate $value, $idx = NULL){
      return $this->_set(5, $value, $idx);
    }
    
    /**
     * Get all elements of <updates>
     *
     * @return \RO\Cmd\GuildDataUpdate[]
     */
    public function getUpdatesList(){
     return $this->_get(5);
    }
    
    /**
     * Add a new element to <updates>
     *
     * @param \RO\Cmd\GuildDataUpdate $value
     * @return \RO\Cmd\CityDataUpdateGuildSCmd
     */
    public function addUpdates(\RO\Cmd\GuildDataUpdate $value){
     return $this->_add(5, $value);
    }
    
    /**
     * Check if <leadername> has a value
     *
     * @return boolean
     */
    public function hasLeadername(){
      return $this->_has(6);
    }
    
    /**
     * Clear <leadername> value
     *
     * @return \RO\Cmd\CityDataUpdateGuildSCmd
     */
    public function clearLeadername(){
      return $this->_clear(6);
    }
    
    /**
     * Get <leadername> value
     *
     * @return string
     */
    public function getLeadername(){
      return $this->_get(6);
    }
    
    /**
     * Set <leadername> value
     *
     * @param string $value
     * @return \RO\Cmd\CityDataUpdateGuildSCmd
     */
    public function setLeadername( $value){
      return $this->_set(6, $value);
    }
  }
}

