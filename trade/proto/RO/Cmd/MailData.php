<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: SessionMail.proto

namespace RO\Cmd {

  class MailData extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $id = 0;
    
    /**  @var int */
    public $sysid = 0;
    
    /**  @var int */
    public $senderid = 0;
    
    /**  @var int */
    public $receiveid = 0;
    
    /**  @var int */
    public $receiveaccid = 0;
    
    /**  @var int */
    public $time = 0;
    
    /**  @var int */
    public $mailid = 0;
    
    /**  @var int - \RO\Cmd\EMailType */
    public $type = \RO\Cmd\EMailType::EMAILTYPE_MIN;
    
    /**  @var int - \RO\Cmd\EMailStatus */
    public $status = \RO\Cmd\EMailStatus::EMAILSTATUS_MIN;
    
    /**  @var string */
    public $title = null;
    
    /**  @var string */
    public $sender = null;
    
    /**  @var string */
    public $msg = null;
    
    /**  @var \RO\Cmd\BlobAttach */
    public $attach = null;
    
    /**  @var string */
    public $groupid = null;
    
    /**  @var int */
    public $starttime = null;
    
    /**  @var int */
    public $endtime = null;
    
    /**  @var \RO\Cmd\WeddingEventMsgCCmd */
    public $weddingmsg = null;
    
    /**  @var \RO\Cmd\UserEventMailCmd */
    public $eventmsg = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.MailData');

      // OPTIONAL UINT64 id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "id";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT64 sysid = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "sysid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT64 senderid = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "senderid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT64 receiveid = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "receiveid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT64 receiveaccid = 13
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 13;
      $f->name      = "receiveaccid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 time = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "time";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 mailid = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "mailid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL ENUM type = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "type";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\EMailType';
      $f->default   = \RO\Cmd\EMailType::EMAILTYPE_MIN;
      $descriptor->addField($f);

      // OPTIONAL ENUM status = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "status";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\EMailStatus';
      $f->default   = \RO\Cmd\EMailStatus::EMAILSTATUS_MIN;
      $descriptor->addField($f);

      // OPTIONAL STRING title = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "title";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING sender = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "sender";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING msg = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "msg";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE attach = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "attach";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\BlobAttach';
      $descriptor->addField($f);

      // OPTIONAL STRING groupid = 16
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 16;
      $f->name      = "groupid";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 starttime = 17
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 17;
      $f->name      = "starttime";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 endtime = 18
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 18;
      $f->name      = "endtime";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE weddingmsg = 19
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 19;
      $f->name      = "weddingmsg";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\WeddingEventMsgCCmd';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE eventmsg = 20
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20;
      $f->name      = "eventmsg";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\UserEventMailCmd';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <id> has a value
     *
     * @return boolean
     */
    public function hasId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <id> value
     *
     * @return \RO\Cmd\MailData
     */
    public function clearId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <id> value
     *
     * @return int
     */
    public function getId(){
      return $this->_get(1);
    }
    
    /**
     * Set <id> value
     *
     * @param int $value
     * @return \RO\Cmd\MailData
     */
    public function setId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <sysid> has a value
     *
     * @return boolean
     */
    public function hasSysid(){
      return $this->_has(2);
    }
    
    /**
     * Clear <sysid> value
     *
     * @return \RO\Cmd\MailData
     */
    public function clearSysid(){
      return $this->_clear(2);
    }
    
    /**
     * Get <sysid> value
     *
     * @return int
     */
    public function getSysid(){
      return $this->_get(2);
    }
    
    /**
     * Set <sysid> value
     *
     * @param int $value
     * @return \RO\Cmd\MailData
     */
    public function setSysid( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <senderid> has a value
     *
     * @return boolean
     */
    public function hasSenderid(){
      return $this->_has(3);
    }
    
    /**
     * Clear <senderid> value
     *
     * @return \RO\Cmd\MailData
     */
    public function clearSenderid(){
      return $this->_clear(3);
    }
    
    /**
     * Get <senderid> value
     *
     * @return int
     */
    public function getSenderid(){
      return $this->_get(3);
    }
    
    /**
     * Set <senderid> value
     *
     * @param int $value
     * @return \RO\Cmd\MailData
     */
    public function setSenderid( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <receiveid> has a value
     *
     * @return boolean
     */
    public function hasReceiveid(){
      return $this->_has(4);
    }
    
    /**
     * Clear <receiveid> value
     *
     * @return \RO\Cmd\MailData
     */
    public function clearReceiveid(){
      return $this->_clear(4);
    }
    
    /**
     * Get <receiveid> value
     *
     * @return int
     */
    public function getReceiveid(){
      return $this->_get(4);
    }
    
    /**
     * Set <receiveid> value
     *
     * @param int $value
     * @return \RO\Cmd\MailData
     */
    public function setReceiveid( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <receiveaccid> has a value
     *
     * @return boolean
     */
    public function hasReceiveaccid(){
      return $this->_has(13);
    }
    
    /**
     * Clear <receiveaccid> value
     *
     * @return \RO\Cmd\MailData
     */
    public function clearReceiveaccid(){
      return $this->_clear(13);
    }
    
    /**
     * Get <receiveaccid> value
     *
     * @return int
     */
    public function getReceiveaccid(){
      return $this->_get(13);
    }
    
    /**
     * Set <receiveaccid> value
     *
     * @param int $value
     * @return \RO\Cmd\MailData
     */
    public function setReceiveaccid( $value){
      return $this->_set(13, $value);
    }
    
    /**
     * Check if <time> has a value
     *
     * @return boolean
     */
    public function hasTime(){
      return $this->_has(12);
    }
    
    /**
     * Clear <time> value
     *
     * @return \RO\Cmd\MailData
     */
    public function clearTime(){
      return $this->_clear(12);
    }
    
    /**
     * Get <time> value
     *
     * @return int
     */
    public function getTime(){
      return $this->_get(12);
    }
    
    /**
     * Set <time> value
     *
     * @param int $value
     * @return \RO\Cmd\MailData
     */
    public function setTime( $value){
      return $this->_set(12, $value);
    }
    
    /**
     * Check if <mailid> has a value
     *
     * @return boolean
     */
    public function hasMailid(){
      return $this->_has(5);
    }
    
    /**
     * Clear <mailid> value
     *
     * @return \RO\Cmd\MailData
     */
    public function clearMailid(){
      return $this->_clear(5);
    }
    
    /**
     * Get <mailid> value
     *
     * @return int
     */
    public function getMailid(){
      return $this->_get(5);
    }
    
    /**
     * Set <mailid> value
     *
     * @param int $value
     * @return \RO\Cmd\MailData
     */
    public function setMailid( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <type> has a value
     *
     * @return boolean
     */
    public function hasType(){
      return $this->_has(6);
    }
    
    /**
     * Clear <type> value
     *
     * @return \RO\Cmd\MailData
     */
    public function clearType(){
      return $this->_clear(6);
    }
    
    /**
     * Get <type> value
     *
     * @return int - \RO\Cmd\EMailType
     */
    public function getType(){
      return $this->_get(6);
    }
    
    /**
     * Set <type> value
     *
     * @param int - \RO\Cmd\EMailType $value
     * @return \RO\Cmd\MailData
     */
    public function setType( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <status> has a value
     *
     * @return boolean
     */
    public function hasStatus(){
      return $this->_has(7);
    }
    
    /**
     * Clear <status> value
     *
     * @return \RO\Cmd\MailData
     */
    public function clearStatus(){
      return $this->_clear(7);
    }
    
    /**
     * Get <status> value
     *
     * @return int - \RO\Cmd\EMailStatus
     */
    public function getStatus(){
      return $this->_get(7);
    }
    
    /**
     * Set <status> value
     *
     * @param int - \RO\Cmd\EMailStatus $value
     * @return \RO\Cmd\MailData
     */
    public function setStatus( $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <title> has a value
     *
     * @return boolean
     */
    public function hasTitle(){
      return $this->_has(8);
    }
    
    /**
     * Clear <title> value
     *
     * @return \RO\Cmd\MailData
     */
    public function clearTitle(){
      return $this->_clear(8);
    }
    
    /**
     * Get <title> value
     *
     * @return string
     */
    public function getTitle(){
      return $this->_get(8);
    }
    
    /**
     * Set <title> value
     *
     * @param string $value
     * @return \RO\Cmd\MailData
     */
    public function setTitle( $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <sender> has a value
     *
     * @return boolean
     */
    public function hasSender(){
      return $this->_has(9);
    }
    
    /**
     * Clear <sender> value
     *
     * @return \RO\Cmd\MailData
     */
    public function clearSender(){
      return $this->_clear(9);
    }
    
    /**
     * Get <sender> value
     *
     * @return string
     */
    public function getSender(){
      return $this->_get(9);
    }
    
    /**
     * Set <sender> value
     *
     * @param string $value
     * @return \RO\Cmd\MailData
     */
    public function setSender( $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <msg> has a value
     *
     * @return boolean
     */
    public function hasMsg(){
      return $this->_has(10);
    }
    
    /**
     * Clear <msg> value
     *
     * @return \RO\Cmd\MailData
     */
    public function clearMsg(){
      return $this->_clear(10);
    }
    
    /**
     * Get <msg> value
     *
     * @return string
     */
    public function getMsg(){
      return $this->_get(10);
    }
    
    /**
     * Set <msg> value
     *
     * @param string $value
     * @return \RO\Cmd\MailData
     */
    public function setMsg( $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <attach> has a value
     *
     * @return boolean
     */
    public function hasAttach(){
      return $this->_has(11);
    }
    
    /**
     * Clear <attach> value
     *
     * @return \RO\Cmd\MailData
     */
    public function clearAttach(){
      return $this->_clear(11);
    }
    
    /**
     * Get <attach> value
     *
     * @return \RO\Cmd\BlobAttach
     */
    public function getAttach(){
      return $this->_get(11);
    }
    
    /**
     * Set <attach> value
     *
     * @param \RO\Cmd\BlobAttach $value
     * @return \RO\Cmd\MailData
     */
    public function setAttach(\RO\Cmd\BlobAttach $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <groupid> has a value
     *
     * @return boolean
     */
    public function hasGroupid(){
      return $this->_has(16);
    }
    
    /**
     * Clear <groupid> value
     *
     * @return \RO\Cmd\MailData
     */
    public function clearGroupid(){
      return $this->_clear(16);
    }
    
    /**
     * Get <groupid> value
     *
     * @return string
     */
    public function getGroupid(){
      return $this->_get(16);
    }
    
    /**
     * Set <groupid> value
     *
     * @param string $value
     * @return \RO\Cmd\MailData
     */
    public function setGroupid( $value){
      return $this->_set(16, $value);
    }
    
    /**
     * Check if <starttime> has a value
     *
     * @return boolean
     */
    public function hasStarttime(){
      return $this->_has(17);
    }
    
    /**
     * Clear <starttime> value
     *
     * @return \RO\Cmd\MailData
     */
    public function clearStarttime(){
      return $this->_clear(17);
    }
    
    /**
     * Get <starttime> value
     *
     * @return int
     */
    public function getStarttime(){
      return $this->_get(17);
    }
    
    /**
     * Set <starttime> value
     *
     * @param int $value
     * @return \RO\Cmd\MailData
     */
    public function setStarttime( $value){
      return $this->_set(17, $value);
    }
    
    /**
     * Check if <endtime> has a value
     *
     * @return boolean
     */
    public function hasEndtime(){
      return $this->_has(18);
    }
    
    /**
     * Clear <endtime> value
     *
     * @return \RO\Cmd\MailData
     */
    public function clearEndtime(){
      return $this->_clear(18);
    }
    
    /**
     * Get <endtime> value
     *
     * @return int
     */
    public function getEndtime(){
      return $this->_get(18);
    }
    
    /**
     * Set <endtime> value
     *
     * @param int $value
     * @return \RO\Cmd\MailData
     */
    public function setEndtime( $value){
      return $this->_set(18, $value);
    }
    
    /**
     * Check if <weddingmsg> has a value
     *
     * @return boolean
     */
    public function hasWeddingmsg(){
      return $this->_has(19);
    }
    
    /**
     * Clear <weddingmsg> value
     *
     * @return \RO\Cmd\MailData
     */
    public function clearWeddingmsg(){
      return $this->_clear(19);
    }
    
    /**
     * Get <weddingmsg> value
     *
     * @return \RO\Cmd\WeddingEventMsgCCmd
     */
    public function getWeddingmsg(){
      return $this->_get(19);
    }
    
    /**
     * Set <weddingmsg> value
     *
     * @param \RO\Cmd\WeddingEventMsgCCmd $value
     * @return \RO\Cmd\MailData
     */
    public function setWeddingmsg(\RO\Cmd\WeddingEventMsgCCmd $value){
      return $this->_set(19, $value);
    }
    
    /**
     * Check if <eventmsg> has a value
     *
     * @return boolean
     */
    public function hasEventmsg(){
      return $this->_has(20);
    }
    
    /**
     * Clear <eventmsg> value
     *
     * @return \RO\Cmd\MailData
     */
    public function clearEventmsg(){
      return $this->_clear(20);
    }
    
    /**
     * Get <eventmsg> value
     *
     * @return \RO\Cmd\UserEventMailCmd
     */
    public function getEventmsg(){
      return $this->_get(20);
    }
    
    /**
     * Set <eventmsg> value
     *
     * @param \RO\Cmd\UserEventMailCmd $value
     * @return \RO\Cmd\MailData
     */
    public function setEventmsg(\RO\Cmd\UserEventMailCmd $value){
      return $this->_set(20, $value);
    }
  }
}

