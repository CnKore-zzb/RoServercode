<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: SceneItem.proto

namespace RO\Cmd {

  class EquipPosData extends \DrSlump\Protobuf\Message {

    /**  @var int - \RO\Cmd\EEquipPos */
    public $pos = \RO\Cmd\EEquipPos::EEQUIPPOS_MIN;
    
    /**  @var int */
    public $offstarttime = 0;
    
    /**  @var int */
    public $offendtime = 0;
    
    /**  @var int */
    public $protecttime = 0;
    
    /**  @var int */
    public $protectalways = 0;
    
    /**  @var string */
    public $recordguid = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.EquipPosData');

      // OPTIONAL ENUM pos = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "pos";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\EEquipPos';
      $f->default   = \RO\Cmd\EEquipPos::EEQUIPPOS_MIN;
      $descriptor->addField($f);

      // OPTIONAL UINT32 offstarttime = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "offstarttime";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 offendtime = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "offendtime";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 protecttime = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "protecttime";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 protectalways = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "protectalways";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL STRING recordguid = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "recordguid";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <pos> has a value
     *
     * @return boolean
     */
    public function hasPos(){
      return $this->_has(1);
    }
    
    /**
     * Clear <pos> value
     *
     * @return \RO\Cmd\EquipPosData
     */
    public function clearPos(){
      return $this->_clear(1);
    }
    
    /**
     * Get <pos> value
     *
     * @return int - \RO\Cmd\EEquipPos
     */
    public function getPos(){
      return $this->_get(1);
    }
    
    /**
     * Set <pos> value
     *
     * @param int - \RO\Cmd\EEquipPos $value
     * @return \RO\Cmd\EquipPosData
     */
    public function setPos( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <offstarttime> has a value
     *
     * @return boolean
     */
    public function hasOffstarttime(){
      return $this->_has(2);
    }
    
    /**
     * Clear <offstarttime> value
     *
     * @return \RO\Cmd\EquipPosData
     */
    public function clearOffstarttime(){
      return $this->_clear(2);
    }
    
    /**
     * Get <offstarttime> value
     *
     * @return int
     */
    public function getOffstarttime(){
      return $this->_get(2);
    }
    
    /**
     * Set <offstarttime> value
     *
     * @param int $value
     * @return \RO\Cmd\EquipPosData
     */
    public function setOffstarttime( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <offendtime> has a value
     *
     * @return boolean
     */
    public function hasOffendtime(){
      return $this->_has(3);
    }
    
    /**
     * Clear <offendtime> value
     *
     * @return \RO\Cmd\EquipPosData
     */
    public function clearOffendtime(){
      return $this->_clear(3);
    }
    
    /**
     * Get <offendtime> value
     *
     * @return int
     */
    public function getOffendtime(){
      return $this->_get(3);
    }
    
    /**
     * Set <offendtime> value
     *
     * @param int $value
     * @return \RO\Cmd\EquipPosData
     */
    public function setOffendtime( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <protecttime> has a value
     *
     * @return boolean
     */
    public function hasProtecttime(){
      return $this->_has(4);
    }
    
    /**
     * Clear <protecttime> value
     *
     * @return \RO\Cmd\EquipPosData
     */
    public function clearProtecttime(){
      return $this->_clear(4);
    }
    
    /**
     * Get <protecttime> value
     *
     * @return int
     */
    public function getProtecttime(){
      return $this->_get(4);
    }
    
    /**
     * Set <protecttime> value
     *
     * @param int $value
     * @return \RO\Cmd\EquipPosData
     */
    public function setProtecttime( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <protectalways> has a value
     *
     * @return boolean
     */
    public function hasProtectalways(){
      return $this->_has(5);
    }
    
    /**
     * Clear <protectalways> value
     *
     * @return \RO\Cmd\EquipPosData
     */
    public function clearProtectalways(){
      return $this->_clear(5);
    }
    
    /**
     * Get <protectalways> value
     *
     * @return int
     */
    public function getProtectalways(){
      return $this->_get(5);
    }
    
    /**
     * Set <protectalways> value
     *
     * @param int $value
     * @return \RO\Cmd\EquipPosData
     */
    public function setProtectalways( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <recordguid> has a value
     *
     * @return boolean
     */
    public function hasRecordguid(){
      return $this->_has(6);
    }
    
    /**
     * Clear <recordguid> value
     *
     * @return \RO\Cmd\EquipPosData
     */
    public function clearRecordguid(){
      return $this->_clear(6);
    }
    
    /**
     * Get <recordguid> value
     *
     * @return string
     */
    public function getRecordguid(){
      return $this->_get(6);
    }
    
    /**
     * Set <recordguid> value
     *
     * @param string $value
     * @return \RO\Cmd\EquipPosData
     */
    public function setRecordguid( $value){
      return $this->_set(6, $value);
    }
  }
}

