<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: RecordCmd.proto

namespace RO\Cmd {

  class BlobAccData extends \DrSlump\Protobuf\Message {

    /**  @var \RO\Cmd\BlobAccUser */
    public $user = null;
    
    /**  @var \RO\Cmd\BlobNewCredit */
    public $credit = null;
    
    /**  @var \RO\Cmd\BlobShopGotItem */
    public $shop = null;
    
    /**  @var \RO\Cmd\BlobAccVar */
    public $var = null;
    
    /**  @var \RO\Cmd\BlobManual */
    public $manual = null;
    
    /**  @var \RO\Cmd\BlobFood */
    public $food = null;
    
    /**  @var \RO\Cmd\BlobQuest */
    public $quest = null;
    
    /**  @var \RO\Cmd\BlobAchieve */
    public $achieve = null;
    
    /**  @var \RO\Cmd\BlobTitle */
    public $title = null;
    
    /**  @var \RO\Cmd\BlobScenery */
    public $scenery = null;
    
    /**  @var \RO\Cmd\BlobMenu */
    public $menu = null;
    
    /**  @var \RO\Cmd\BlobActivityEvent */
    public $acevent = null;
    
    /**  @var \RO\Cmd\BlobUnsolvedPhoto */
    public $photo = null;
    
    /**  @var \RO\Cmd\BlobPortrait */
    public $portrait = null;
    
    /**  @var \RO\Cmd\BlobQuestNpc */
    public $questnpc = null;
    
    /**  @var \RO\Cmd\BlobPetWork */
    public $petwork = null;
    
    /**  @var \RO\Cmd\BlobShareSkill */
    public $skill = null;
    
    /**  @var \RO\Cmd\BlobServant */
    public $servant = null;
    
    /**  @var \RO\Cmd\BlobRecordInfo */
    public $record = null;
    
    /**  @var \RO\Cmd\BlobPack */
    public $pack = null;
    
    /**  @var \RO\Cmd\BlobLottery */
    public $lottery = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.BlobAccData');

      // OPTIONAL MESSAGE user = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "user";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\BlobAccUser';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE credit = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "credit";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\BlobNewCredit';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE shop = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "shop";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\BlobShopGotItem';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE var = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "var";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\BlobAccVar';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE manual = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "manual";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\BlobManual';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE food = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "food";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\BlobFood';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE quest = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "quest";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\BlobQuest';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE achieve = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "achieve";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\BlobAchieve';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE title = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "title";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\BlobTitle';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE scenery = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "scenery";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\BlobScenery';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE menu = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "menu";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\BlobMenu';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE acevent = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "acevent";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\BlobActivityEvent';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE photo = 13
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 13;
      $f->name      = "photo";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\BlobUnsolvedPhoto';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE portrait = 14
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 14;
      $f->name      = "portrait";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\BlobPortrait';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE questnpc = 15
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 15;
      $f->name      = "questnpc";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\BlobQuestNpc';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE petwork = 16
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 16;
      $f->name      = "petwork";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\BlobPetWork';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE skill = 17
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 17;
      $f->name      = "skill";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\BlobShareSkill';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE servant = 18
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 18;
      $f->name      = "servant";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\BlobServant';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE record = 19
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 19;
      $f->name      = "record";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\BlobRecordInfo';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE pack = 20
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20;
      $f->name      = "pack";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\BlobPack';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE lottery = 21
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 21;
      $f->name      = "lottery";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\BlobLottery';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <user> has a value
     *
     * @return boolean
     */
    public function hasUser(){
      return $this->_has(1);
    }
    
    /**
     * Clear <user> value
     *
     * @return \RO\Cmd\BlobAccData
     */
    public function clearUser(){
      return $this->_clear(1);
    }
    
    /**
     * Get <user> value
     *
     * @return \RO\Cmd\BlobAccUser
     */
    public function getUser(){
      return $this->_get(1);
    }
    
    /**
     * Set <user> value
     *
     * @param \RO\Cmd\BlobAccUser $value
     * @return \RO\Cmd\BlobAccData
     */
    public function setUser(\RO\Cmd\BlobAccUser $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <credit> has a value
     *
     * @return boolean
     */
    public function hasCredit(){
      return $this->_has(2);
    }
    
    /**
     * Clear <credit> value
     *
     * @return \RO\Cmd\BlobAccData
     */
    public function clearCredit(){
      return $this->_clear(2);
    }
    
    /**
     * Get <credit> value
     *
     * @return \RO\Cmd\BlobNewCredit
     */
    public function getCredit(){
      return $this->_get(2);
    }
    
    /**
     * Set <credit> value
     *
     * @param \RO\Cmd\BlobNewCredit $value
     * @return \RO\Cmd\BlobAccData
     */
    public function setCredit(\RO\Cmd\BlobNewCredit $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <shop> has a value
     *
     * @return boolean
     */
    public function hasShop(){
      return $this->_has(3);
    }
    
    /**
     * Clear <shop> value
     *
     * @return \RO\Cmd\BlobAccData
     */
    public function clearShop(){
      return $this->_clear(3);
    }
    
    /**
     * Get <shop> value
     *
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function getShop(){
      return $this->_get(3);
    }
    
    /**
     * Set <shop> value
     *
     * @param \RO\Cmd\BlobShopGotItem $value
     * @return \RO\Cmd\BlobAccData
     */
    public function setShop(\RO\Cmd\BlobShopGotItem $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <var> has a value
     *
     * @return boolean
     */
    public function hasVar(){
      return $this->_has(4);
    }
    
    /**
     * Clear <var> value
     *
     * @return \RO\Cmd\BlobAccData
     */
    public function clearVar(){
      return $this->_clear(4);
    }
    
    /**
     * Get <var> value
     *
     * @return \RO\Cmd\BlobAccVar
     */
    public function getVar(){
      return $this->_get(4);
    }
    
    /**
     * Set <var> value
     *
     * @param \RO\Cmd\BlobAccVar $value
     * @return \RO\Cmd\BlobAccData
     */
    public function setVar(\RO\Cmd\BlobAccVar $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <manual> has a value
     *
     * @return boolean
     */
    public function hasManual(){
      return $this->_has(5);
    }
    
    /**
     * Clear <manual> value
     *
     * @return \RO\Cmd\BlobAccData
     */
    public function clearManual(){
      return $this->_clear(5);
    }
    
    /**
     * Get <manual> value
     *
     * @return \RO\Cmd\BlobManual
     */
    public function getManual(){
      return $this->_get(5);
    }
    
    /**
     * Set <manual> value
     *
     * @param \RO\Cmd\BlobManual $value
     * @return \RO\Cmd\BlobAccData
     */
    public function setManual(\RO\Cmd\BlobManual $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <food> has a value
     *
     * @return boolean
     */
    public function hasFood(){
      return $this->_has(6);
    }
    
    /**
     * Clear <food> value
     *
     * @return \RO\Cmd\BlobAccData
     */
    public function clearFood(){
      return $this->_clear(6);
    }
    
    /**
     * Get <food> value
     *
     * @return \RO\Cmd\BlobFood
     */
    public function getFood(){
      return $this->_get(6);
    }
    
    /**
     * Set <food> value
     *
     * @param \RO\Cmd\BlobFood $value
     * @return \RO\Cmd\BlobAccData
     */
    public function setFood(\RO\Cmd\BlobFood $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <quest> has a value
     *
     * @return boolean
     */
    public function hasQuest(){
      return $this->_has(7);
    }
    
    /**
     * Clear <quest> value
     *
     * @return \RO\Cmd\BlobAccData
     */
    public function clearQuest(){
      return $this->_clear(7);
    }
    
    /**
     * Get <quest> value
     *
     * @return \RO\Cmd\BlobQuest
     */
    public function getQuest(){
      return $this->_get(7);
    }
    
    /**
     * Set <quest> value
     *
     * @param \RO\Cmd\BlobQuest $value
     * @return \RO\Cmd\BlobAccData
     */
    public function setQuest(\RO\Cmd\BlobQuest $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <achieve> has a value
     *
     * @return boolean
     */
    public function hasAchieve(){
      return $this->_has(8);
    }
    
    /**
     * Clear <achieve> value
     *
     * @return \RO\Cmd\BlobAccData
     */
    public function clearAchieve(){
      return $this->_clear(8);
    }
    
    /**
     * Get <achieve> value
     *
     * @return \RO\Cmd\BlobAchieve
     */
    public function getAchieve(){
      return $this->_get(8);
    }
    
    /**
     * Set <achieve> value
     *
     * @param \RO\Cmd\BlobAchieve $value
     * @return \RO\Cmd\BlobAccData
     */
    public function setAchieve(\RO\Cmd\BlobAchieve $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <title> has a value
     *
     * @return boolean
     */
    public function hasTitle(){
      return $this->_has(9);
    }
    
    /**
     * Clear <title> value
     *
     * @return \RO\Cmd\BlobAccData
     */
    public function clearTitle(){
      return $this->_clear(9);
    }
    
    /**
     * Get <title> value
     *
     * @return \RO\Cmd\BlobTitle
     */
    public function getTitle(){
      return $this->_get(9);
    }
    
    /**
     * Set <title> value
     *
     * @param \RO\Cmd\BlobTitle $value
     * @return \RO\Cmd\BlobAccData
     */
    public function setTitle(\RO\Cmd\BlobTitle $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <scenery> has a value
     *
     * @return boolean
     */
    public function hasScenery(){
      return $this->_has(10);
    }
    
    /**
     * Clear <scenery> value
     *
     * @return \RO\Cmd\BlobAccData
     */
    public function clearScenery(){
      return $this->_clear(10);
    }
    
    /**
     * Get <scenery> value
     *
     * @return \RO\Cmd\BlobScenery
     */
    public function getScenery(){
      return $this->_get(10);
    }
    
    /**
     * Set <scenery> value
     *
     * @param \RO\Cmd\BlobScenery $value
     * @return \RO\Cmd\BlobAccData
     */
    public function setScenery(\RO\Cmd\BlobScenery $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <menu> has a value
     *
     * @return boolean
     */
    public function hasMenu(){
      return $this->_has(11);
    }
    
    /**
     * Clear <menu> value
     *
     * @return \RO\Cmd\BlobAccData
     */
    public function clearMenu(){
      return $this->_clear(11);
    }
    
    /**
     * Get <menu> value
     *
     * @return \RO\Cmd\BlobMenu
     */
    public function getMenu(){
      return $this->_get(11);
    }
    
    /**
     * Set <menu> value
     *
     * @param \RO\Cmd\BlobMenu $value
     * @return \RO\Cmd\BlobAccData
     */
    public function setMenu(\RO\Cmd\BlobMenu $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <acevent> has a value
     *
     * @return boolean
     */
    public function hasAcevent(){
      return $this->_has(12);
    }
    
    /**
     * Clear <acevent> value
     *
     * @return \RO\Cmd\BlobAccData
     */
    public function clearAcevent(){
      return $this->_clear(12);
    }
    
    /**
     * Get <acevent> value
     *
     * @return \RO\Cmd\BlobActivityEvent
     */
    public function getAcevent(){
      return $this->_get(12);
    }
    
    /**
     * Set <acevent> value
     *
     * @param \RO\Cmd\BlobActivityEvent $value
     * @return \RO\Cmd\BlobAccData
     */
    public function setAcevent(\RO\Cmd\BlobActivityEvent $value){
      return $this->_set(12, $value);
    }
    
    /**
     * Check if <photo> has a value
     *
     * @return boolean
     */
    public function hasPhoto(){
      return $this->_has(13);
    }
    
    /**
     * Clear <photo> value
     *
     * @return \RO\Cmd\BlobAccData
     */
    public function clearPhoto(){
      return $this->_clear(13);
    }
    
    /**
     * Get <photo> value
     *
     * @return \RO\Cmd\BlobUnsolvedPhoto
     */
    public function getPhoto(){
      return $this->_get(13);
    }
    
    /**
     * Set <photo> value
     *
     * @param \RO\Cmd\BlobUnsolvedPhoto $value
     * @return \RO\Cmd\BlobAccData
     */
    public function setPhoto(\RO\Cmd\BlobUnsolvedPhoto $value){
      return $this->_set(13, $value);
    }
    
    /**
     * Check if <portrait> has a value
     *
     * @return boolean
     */
    public function hasPortrait(){
      return $this->_has(14);
    }
    
    /**
     * Clear <portrait> value
     *
     * @return \RO\Cmd\BlobAccData
     */
    public function clearPortrait(){
      return $this->_clear(14);
    }
    
    /**
     * Get <portrait> value
     *
     * @return \RO\Cmd\BlobPortrait
     */
    public function getPortrait(){
      return $this->_get(14);
    }
    
    /**
     * Set <portrait> value
     *
     * @param \RO\Cmd\BlobPortrait $value
     * @return \RO\Cmd\BlobAccData
     */
    public function setPortrait(\RO\Cmd\BlobPortrait $value){
      return $this->_set(14, $value);
    }
    
    /**
     * Check if <questnpc> has a value
     *
     * @return boolean
     */
    public function hasQuestnpc(){
      return $this->_has(15);
    }
    
    /**
     * Clear <questnpc> value
     *
     * @return \RO\Cmd\BlobAccData
     */
    public function clearQuestnpc(){
      return $this->_clear(15);
    }
    
    /**
     * Get <questnpc> value
     *
     * @return \RO\Cmd\BlobQuestNpc
     */
    public function getQuestnpc(){
      return $this->_get(15);
    }
    
    /**
     * Set <questnpc> value
     *
     * @param \RO\Cmd\BlobQuestNpc $value
     * @return \RO\Cmd\BlobAccData
     */
    public function setQuestnpc(\RO\Cmd\BlobQuestNpc $value){
      return $this->_set(15, $value);
    }
    
    /**
     * Check if <petwork> has a value
     *
     * @return boolean
     */
    public function hasPetwork(){
      return $this->_has(16);
    }
    
    /**
     * Clear <petwork> value
     *
     * @return \RO\Cmd\BlobAccData
     */
    public function clearPetwork(){
      return $this->_clear(16);
    }
    
    /**
     * Get <petwork> value
     *
     * @return \RO\Cmd\BlobPetWork
     */
    public function getPetwork(){
      return $this->_get(16);
    }
    
    /**
     * Set <petwork> value
     *
     * @param \RO\Cmd\BlobPetWork $value
     * @return \RO\Cmd\BlobAccData
     */
    public function setPetwork(\RO\Cmd\BlobPetWork $value){
      return $this->_set(16, $value);
    }
    
    /**
     * Check if <skill> has a value
     *
     * @return boolean
     */
    public function hasSkill(){
      return $this->_has(17);
    }
    
    /**
     * Clear <skill> value
     *
     * @return \RO\Cmd\BlobAccData
     */
    public function clearSkill(){
      return $this->_clear(17);
    }
    
    /**
     * Get <skill> value
     *
     * @return \RO\Cmd\BlobShareSkill
     */
    public function getSkill(){
      return $this->_get(17);
    }
    
    /**
     * Set <skill> value
     *
     * @param \RO\Cmd\BlobShareSkill $value
     * @return \RO\Cmd\BlobAccData
     */
    public function setSkill(\RO\Cmd\BlobShareSkill $value){
      return $this->_set(17, $value);
    }
    
    /**
     * Check if <servant> has a value
     *
     * @return boolean
     */
    public function hasServant(){
      return $this->_has(18);
    }
    
    /**
     * Clear <servant> value
     *
     * @return \RO\Cmd\BlobAccData
     */
    public function clearServant(){
      return $this->_clear(18);
    }
    
    /**
     * Get <servant> value
     *
     * @return \RO\Cmd\BlobServant
     */
    public function getServant(){
      return $this->_get(18);
    }
    
    /**
     * Set <servant> value
     *
     * @param \RO\Cmd\BlobServant $value
     * @return \RO\Cmd\BlobAccData
     */
    public function setServant(\RO\Cmd\BlobServant $value){
      return $this->_set(18, $value);
    }
    
    /**
     * Check if <record> has a value
     *
     * @return boolean
     */
    public function hasRecord(){
      return $this->_has(19);
    }
    
    /**
     * Clear <record> value
     *
     * @return \RO\Cmd\BlobAccData
     */
    public function clearRecord(){
      return $this->_clear(19);
    }
    
    /**
     * Get <record> value
     *
     * @return \RO\Cmd\BlobRecordInfo
     */
    public function getRecord(){
      return $this->_get(19);
    }
    
    /**
     * Set <record> value
     *
     * @param \RO\Cmd\BlobRecordInfo $value
     * @return \RO\Cmd\BlobAccData
     */
    public function setRecord(\RO\Cmd\BlobRecordInfo $value){
      return $this->_set(19, $value);
    }
    
    /**
     * Check if <pack> has a value
     *
     * @return boolean
     */
    public function hasPack(){
      return $this->_has(20);
    }
    
    /**
     * Clear <pack> value
     *
     * @return \RO\Cmd\BlobAccData
     */
    public function clearPack(){
      return $this->_clear(20);
    }
    
    /**
     * Get <pack> value
     *
     * @return \RO\Cmd\BlobPack
     */
    public function getPack(){
      return $this->_get(20);
    }
    
    /**
     * Set <pack> value
     *
     * @param \RO\Cmd\BlobPack $value
     * @return \RO\Cmd\BlobAccData
     */
    public function setPack(\RO\Cmd\BlobPack $value){
      return $this->_set(20, $value);
    }
    
    /**
     * Check if <lottery> has a value
     *
     * @return boolean
     */
    public function hasLottery(){
      return $this->_has(21);
    }
    
    /**
     * Clear <lottery> value
     *
     * @return \RO\Cmd\BlobAccData
     */
    public function clearLottery(){
      return $this->_clear(21);
    }
    
    /**
     * Get <lottery> value
     *
     * @return \RO\Cmd\BlobLottery
     */
    public function getLottery(){
      return $this->_get(21);
    }
    
    /**
     * Set <lottery> value
     *
     * @param \RO\Cmd\BlobLottery $value
     * @return \RO\Cmd\BlobAccData
     */
    public function setLottery(\RO\Cmd\BlobLottery $value){
      return $this->_set(21, $value);
    }
  }
}

