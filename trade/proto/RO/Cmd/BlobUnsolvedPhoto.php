<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: RecordCmd.proto

namespace RO\Cmd {

  class BlobUnsolvedPhoto extends \DrSlump\Protobuf\Message {

    /**  @var \RO\Cmd\UnsolvedUserPhoto[]  */
    public $photos = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.BlobUnsolvedPhoto');

      // REPEATED MESSAGE photos = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "photos";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\UnsolvedUserPhoto';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <photos> has a value
     *
     * @return boolean
     */
    public function hasPhotos(){
      return $this->_has(1);
    }
    
    /**
     * Clear <photos> value
     *
     * @return \RO\Cmd\BlobUnsolvedPhoto
     */
    public function clearPhotos(){
      return $this->_clear(1);
    }
    
    /**
     * Get <photos> value
     *
     * @param int $idx
     * @return \RO\Cmd\UnsolvedUserPhoto
     */
    public function getPhotos($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <photos> value
     *
     * @param \RO\Cmd\UnsolvedUserPhoto $value
     * @return \RO\Cmd\BlobUnsolvedPhoto
     */
    public function setPhotos(\RO\Cmd\UnsolvedUserPhoto $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <photos>
     *
     * @return \RO\Cmd\UnsolvedUserPhoto[]
     */
    public function getPhotosList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <photos>
     *
     * @param \RO\Cmd\UnsolvedUserPhoto $value
     * @return \RO\Cmd\BlobUnsolvedPhoto
     */
    public function addPhotos(\RO\Cmd\UnsolvedUserPhoto $value){
     return $this->_add(1, $value);
    }
  }
}

