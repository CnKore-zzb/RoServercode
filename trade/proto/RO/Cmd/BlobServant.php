<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: RecordCmd.proto

namespace RO\Cmd {

  class BlobServant extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $servantid = 0;
    
    /**  @var \RO\Cmd\RecommendItemInfo[]  */
    public $recitem = array();
    
    /**  @var int[]  */
    public $ownservant = array();
    
    /**  @var \RO\Cmd\GrowthItemInfo[]  */
    public $growthitem = array();
    
    /**  @var \RO\Cmd\GrowthValueInfo[]  */
    public $growthvalue = array();
    
    /**  @var \RO\Cmd\GrowthCurInfo[]  */
    public $growthcurinfo = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.BlobServant');

      // OPTIONAL UINT32 servantid = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "servantid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // REPEATED MESSAGE recitem = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "recitem";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\RecommendItemInfo';
      $descriptor->addField($f);

      // REPEATED UINT32 ownservant = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "ownservant";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // REPEATED MESSAGE growthitem = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "growthitem";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\GrowthItemInfo';
      $descriptor->addField($f);

      // REPEATED MESSAGE growthvalue = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "growthvalue";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\GrowthValueInfo';
      $descriptor->addField($f);

      // REPEATED MESSAGE growthcurinfo = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "growthcurinfo";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\GrowthCurInfo';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <servantid> has a value
     *
     * @return boolean
     */
    public function hasServantid(){
      return $this->_has(1);
    }
    
    /**
     * Clear <servantid> value
     *
     * @return \RO\Cmd\BlobServant
     */
    public function clearServantid(){
      return $this->_clear(1);
    }
    
    /**
     * Get <servantid> value
     *
     * @return int
     */
    public function getServantid(){
      return $this->_get(1);
    }
    
    /**
     * Set <servantid> value
     *
     * @param int $value
     * @return \RO\Cmd\BlobServant
     */
    public function setServantid( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <recitem> has a value
     *
     * @return boolean
     */
    public function hasRecitem(){
      return $this->_has(2);
    }
    
    /**
     * Clear <recitem> value
     *
     * @return \RO\Cmd\BlobServant
     */
    public function clearRecitem(){
      return $this->_clear(2);
    }
    
    /**
     * Get <recitem> value
     *
     * @param int $idx
     * @return \RO\Cmd\RecommendItemInfo
     */
    public function getRecitem($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <recitem> value
     *
     * @param \RO\Cmd\RecommendItemInfo $value
     * @return \RO\Cmd\BlobServant
     */
    public function setRecitem(\RO\Cmd\RecommendItemInfo $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <recitem>
     *
     * @return \RO\Cmd\RecommendItemInfo[]
     */
    public function getRecitemList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <recitem>
     *
     * @param \RO\Cmd\RecommendItemInfo $value
     * @return \RO\Cmd\BlobServant
     */
    public function addRecitem(\RO\Cmd\RecommendItemInfo $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <ownservant> has a value
     *
     * @return boolean
     */
    public function hasOwnservant(){
      return $this->_has(3);
    }
    
    /**
     * Clear <ownservant> value
     *
     * @return \RO\Cmd\BlobServant
     */
    public function clearOwnservant(){
      return $this->_clear(3);
    }
    
    /**
     * Get <ownservant> value
     *
     * @param int $idx
     * @return int
     */
    public function getOwnservant($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <ownservant> value
     *
     * @param int $value
     * @return \RO\Cmd\BlobServant
     */
    public function setOwnservant( $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <ownservant>
     *
     * @return int[]
     */
    public function getOwnservantList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <ownservant>
     *
     * @param int $value
     * @return \RO\Cmd\BlobServant
     */
    public function addOwnservant( $value){
     return $this->_add(3, $value);
    }
    
    /**
     * Check if <growthitem> has a value
     *
     * @return boolean
     */
    public function hasGrowthitem(){
      return $this->_has(4);
    }
    
    /**
     * Clear <growthitem> value
     *
     * @return \RO\Cmd\BlobServant
     */
    public function clearGrowthitem(){
      return $this->_clear(4);
    }
    
    /**
     * Get <growthitem> value
     *
     * @param int $idx
     * @return \RO\Cmd\GrowthItemInfo
     */
    public function getGrowthitem($idx = NULL){
      return $this->_get(4, $idx);
    }
    
    /**
     * Set <growthitem> value
     *
     * @param \RO\Cmd\GrowthItemInfo $value
     * @return \RO\Cmd\BlobServant
     */
    public function setGrowthitem(\RO\Cmd\GrowthItemInfo $value, $idx = NULL){
      return $this->_set(4, $value, $idx);
    }
    
    /**
     * Get all elements of <growthitem>
     *
     * @return \RO\Cmd\GrowthItemInfo[]
     */
    public function getGrowthitemList(){
     return $this->_get(4);
    }
    
    /**
     * Add a new element to <growthitem>
     *
     * @param \RO\Cmd\GrowthItemInfo $value
     * @return \RO\Cmd\BlobServant
     */
    public function addGrowthitem(\RO\Cmd\GrowthItemInfo $value){
     return $this->_add(4, $value);
    }
    
    /**
     * Check if <growthvalue> has a value
     *
     * @return boolean
     */
    public function hasGrowthvalue(){
      return $this->_has(5);
    }
    
    /**
     * Clear <growthvalue> value
     *
     * @return \RO\Cmd\BlobServant
     */
    public function clearGrowthvalue(){
      return $this->_clear(5);
    }
    
    /**
     * Get <growthvalue> value
     *
     * @param int $idx
     * @return \RO\Cmd\GrowthValueInfo
     */
    public function getGrowthvalue($idx = NULL){
      return $this->_get(5, $idx);
    }
    
    /**
     * Set <growthvalue> value
     *
     * @param \RO\Cmd\GrowthValueInfo $value
     * @return \RO\Cmd\BlobServant
     */
    public function setGrowthvalue(\RO\Cmd\GrowthValueInfo $value, $idx = NULL){
      return $this->_set(5, $value, $idx);
    }
    
    /**
     * Get all elements of <growthvalue>
     *
     * @return \RO\Cmd\GrowthValueInfo[]
     */
    public function getGrowthvalueList(){
     return $this->_get(5);
    }
    
    /**
     * Add a new element to <growthvalue>
     *
     * @param \RO\Cmd\GrowthValueInfo $value
     * @return \RO\Cmd\BlobServant
     */
    public function addGrowthvalue(\RO\Cmd\GrowthValueInfo $value){
     return $this->_add(5, $value);
    }
    
    /**
     * Check if <growthcurinfo> has a value
     *
     * @return boolean
     */
    public function hasGrowthcurinfo(){
      return $this->_has(6);
    }
    
    /**
     * Clear <growthcurinfo> value
     *
     * @return \RO\Cmd\BlobServant
     */
    public function clearGrowthcurinfo(){
      return $this->_clear(6);
    }
    
    /**
     * Get <growthcurinfo> value
     *
     * @param int $idx
     * @return \RO\Cmd\GrowthCurInfo
     */
    public function getGrowthcurinfo($idx = NULL){
      return $this->_get(6, $idx);
    }
    
    /**
     * Set <growthcurinfo> value
     *
     * @param \RO\Cmd\GrowthCurInfo $value
     * @return \RO\Cmd\BlobServant
     */
    public function setGrowthcurinfo(\RO\Cmd\GrowthCurInfo $value, $idx = NULL){
      return $this->_set(6, $value, $idx);
    }
    
    /**
     * Get all elements of <growthcurinfo>
     *
     * @return \RO\Cmd\GrowthCurInfo[]
     */
    public function getGrowthcurinfoList(){
     return $this->_get(6);
    }
    
    /**
     * Add a new element to <growthcurinfo>
     *
     * @param \RO\Cmd\GrowthCurInfo $value
     * @return \RO\Cmd\BlobServant
     */
    public function addGrowthcurinfo(\RO\Cmd\GrowthCurInfo $value){
     return $this->_add(6, $value);
    }
  }
}

