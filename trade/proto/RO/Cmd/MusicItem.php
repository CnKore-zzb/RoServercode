<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: SceneUser2.proto

namespace RO\Cmd {

  class MusicItem extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $charid = 0;
    
    /**  @var int */
    public $demandtime = 0;
    
    /**  @var int */
    public $mapid = 0;
    
    /**  @var int */
    public $npcid = 0;
    
    /**  @var int */
    public $musicid = 0;
    
    /**  @var int */
    public $starttime = 0;
    
    /**  @var int */
    public $endtime = 0;
    
    /**  @var int */
    public $status = 0;
    
    /**  @var string */
    public $name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.MusicItem');

      // OPTIONAL UINT64 charid = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "charid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 demandtime = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "demandtime";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 mapid = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "mapid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 npcid = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "npcid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 musicid = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "musicid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 starttime = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "starttime";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 endtime = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "endtime";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 status = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "status";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL STRING name = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <charid> has a value
     *
     * @return boolean
     */
    public function hasCharid(){
      return $this->_has(1);
    }
    
    /**
     * Clear <charid> value
     *
     * @return \RO\Cmd\MusicItem
     */
    public function clearCharid(){
      return $this->_clear(1);
    }
    
    /**
     * Get <charid> value
     *
     * @return int
     */
    public function getCharid(){
      return $this->_get(1);
    }
    
    /**
     * Set <charid> value
     *
     * @param int $value
     * @return \RO\Cmd\MusicItem
     */
    public function setCharid( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <demandtime> has a value
     *
     * @return boolean
     */
    public function hasDemandtime(){
      return $this->_has(2);
    }
    
    /**
     * Clear <demandtime> value
     *
     * @return \RO\Cmd\MusicItem
     */
    public function clearDemandtime(){
      return $this->_clear(2);
    }
    
    /**
     * Get <demandtime> value
     *
     * @return int
     */
    public function getDemandtime(){
      return $this->_get(2);
    }
    
    /**
     * Set <demandtime> value
     *
     * @param int $value
     * @return \RO\Cmd\MusicItem
     */
    public function setDemandtime( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <mapid> has a value
     *
     * @return boolean
     */
    public function hasMapid(){
      return $this->_has(3);
    }
    
    /**
     * Clear <mapid> value
     *
     * @return \RO\Cmd\MusicItem
     */
    public function clearMapid(){
      return $this->_clear(3);
    }
    
    /**
     * Get <mapid> value
     *
     * @return int
     */
    public function getMapid(){
      return $this->_get(3);
    }
    
    /**
     * Set <mapid> value
     *
     * @param int $value
     * @return \RO\Cmd\MusicItem
     */
    public function setMapid( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <npcid> has a value
     *
     * @return boolean
     */
    public function hasNpcid(){
      return $this->_has(4);
    }
    
    /**
     * Clear <npcid> value
     *
     * @return \RO\Cmd\MusicItem
     */
    public function clearNpcid(){
      return $this->_clear(4);
    }
    
    /**
     * Get <npcid> value
     *
     * @return int
     */
    public function getNpcid(){
      return $this->_get(4);
    }
    
    /**
     * Set <npcid> value
     *
     * @param int $value
     * @return \RO\Cmd\MusicItem
     */
    public function setNpcid( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <musicid> has a value
     *
     * @return boolean
     */
    public function hasMusicid(){
      return $this->_has(5);
    }
    
    /**
     * Clear <musicid> value
     *
     * @return \RO\Cmd\MusicItem
     */
    public function clearMusicid(){
      return $this->_clear(5);
    }
    
    /**
     * Get <musicid> value
     *
     * @return int
     */
    public function getMusicid(){
      return $this->_get(5);
    }
    
    /**
     * Set <musicid> value
     *
     * @param int $value
     * @return \RO\Cmd\MusicItem
     */
    public function setMusicid( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <starttime> has a value
     *
     * @return boolean
     */
    public function hasStarttime(){
      return $this->_has(6);
    }
    
    /**
     * Clear <starttime> value
     *
     * @return \RO\Cmd\MusicItem
     */
    public function clearStarttime(){
      return $this->_clear(6);
    }
    
    /**
     * Get <starttime> value
     *
     * @return int
     */
    public function getStarttime(){
      return $this->_get(6);
    }
    
    /**
     * Set <starttime> value
     *
     * @param int $value
     * @return \RO\Cmd\MusicItem
     */
    public function setStarttime( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <endtime> has a value
     *
     * @return boolean
     */
    public function hasEndtime(){
      return $this->_has(7);
    }
    
    /**
     * Clear <endtime> value
     *
     * @return \RO\Cmd\MusicItem
     */
    public function clearEndtime(){
      return $this->_clear(7);
    }
    
    /**
     * Get <endtime> value
     *
     * @return int
     */
    public function getEndtime(){
      return $this->_get(7);
    }
    
    /**
     * Set <endtime> value
     *
     * @param int $value
     * @return \RO\Cmd\MusicItem
     */
    public function setEndtime( $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <status> has a value
     *
     * @return boolean
     */
    public function hasStatus(){
      return $this->_has(8);
    }
    
    /**
     * Clear <status> value
     *
     * @return \RO\Cmd\MusicItem
     */
    public function clearStatus(){
      return $this->_clear(8);
    }
    
    /**
     * Get <status> value
     *
     * @return int
     */
    public function getStatus(){
      return $this->_get(8);
    }
    
    /**
     * Set <status> value
     *
     * @param int $value
     * @return \RO\Cmd\MusicItem
     */
    public function setStatus( $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(9);
    }
    
    /**
     * Clear <name> value
     *
     * @return \RO\Cmd\MusicItem
     */
    public function clearName(){
      return $this->_clear(9);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(9);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \RO\Cmd\MusicItem
     */
    public function setName( $value){
      return $this->_set(9, $value);
    }
  }
}

