<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: RecordTrade.proto

namespace RO\Cmd {

  class LotteryGiveInfo extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $year = null;
    
    /**  @var int */
    public $month = null;
    
    /**  @var int */
    public $count = null;
    
    /**  @var string */
    public $content = null;
    
    /**  @var int */
    public $configid = null;
    
    /**  @var int */
    public $receiverid = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.LotteryGiveInfo');

      // OPTIONAL UINT32 year = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "year";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 month = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "month";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 count = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "count";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING content = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "content";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 configid = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "configid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT64 receiverid = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "receiverid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <year> has a value
     *
     * @return boolean
     */
    public function hasYear(){
      return $this->_has(1);
    }
    
    /**
     * Clear <year> value
     *
     * @return \RO\Cmd\LotteryGiveInfo
     */
    public function clearYear(){
      return $this->_clear(1);
    }
    
    /**
     * Get <year> value
     *
     * @return int
     */
    public function getYear(){
      return $this->_get(1);
    }
    
    /**
     * Set <year> value
     *
     * @param int $value
     * @return \RO\Cmd\LotteryGiveInfo
     */
    public function setYear( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <month> has a value
     *
     * @return boolean
     */
    public function hasMonth(){
      return $this->_has(2);
    }
    
    /**
     * Clear <month> value
     *
     * @return \RO\Cmd\LotteryGiveInfo
     */
    public function clearMonth(){
      return $this->_clear(2);
    }
    
    /**
     * Get <month> value
     *
     * @return int
     */
    public function getMonth(){
      return $this->_get(2);
    }
    
    /**
     * Set <month> value
     *
     * @param int $value
     * @return \RO\Cmd\LotteryGiveInfo
     */
    public function setMonth( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <count> has a value
     *
     * @return boolean
     */
    public function hasCount(){
      return $this->_has(3);
    }
    
    /**
     * Clear <count> value
     *
     * @return \RO\Cmd\LotteryGiveInfo
     */
    public function clearCount(){
      return $this->_clear(3);
    }
    
    /**
     * Get <count> value
     *
     * @return int
     */
    public function getCount(){
      return $this->_get(3);
    }
    
    /**
     * Set <count> value
     *
     * @param int $value
     * @return \RO\Cmd\LotteryGiveInfo
     */
    public function setCount( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <content> has a value
     *
     * @return boolean
     */
    public function hasContent(){
      return $this->_has(4);
    }
    
    /**
     * Clear <content> value
     *
     * @return \RO\Cmd\LotteryGiveInfo
     */
    public function clearContent(){
      return $this->_clear(4);
    }
    
    /**
     * Get <content> value
     *
     * @return string
     */
    public function getContent(){
      return $this->_get(4);
    }
    
    /**
     * Set <content> value
     *
     * @param string $value
     * @return \RO\Cmd\LotteryGiveInfo
     */
    public function setContent( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <configid> has a value
     *
     * @return boolean
     */
    public function hasConfigid(){
      return $this->_has(5);
    }
    
    /**
     * Clear <configid> value
     *
     * @return \RO\Cmd\LotteryGiveInfo
     */
    public function clearConfigid(){
      return $this->_clear(5);
    }
    
    /**
     * Get <configid> value
     *
     * @return int
     */
    public function getConfigid(){
      return $this->_get(5);
    }
    
    /**
     * Set <configid> value
     *
     * @param int $value
     * @return \RO\Cmd\LotteryGiveInfo
     */
    public function setConfigid( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <receiverid> has a value
     *
     * @return boolean
     */
    public function hasReceiverid(){
      return $this->_has(6);
    }
    
    /**
     * Clear <receiverid> value
     *
     * @return \RO\Cmd\LotteryGiveInfo
     */
    public function clearReceiverid(){
      return $this->_clear(6);
    }
    
    /**
     * Get <receiverid> value
     *
     * @return int
     */
    public function getReceiverid(){
      return $this->_get(6);
    }
    
    /**
     * Set <receiverid> value
     *
     * @param int $value
     * @return \RO\Cmd\LotteryGiveInfo
     */
    public function setReceiverid( $value){
      return $this->_set(6, $value);
    }
  }
}

