<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: SystemCmd.proto

namespace RO\Cmd\ServerListSystemCmd {

  class Item extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $type = null;
    
    /**  @var string */
    public $name = null;
    
    /**  @var string */
    public $ip = null;
    
    /**  @var int */
    public $port = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.ServerListSystemCmd.Item');

      // OPTIONAL STRING type = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "type";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING name = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING ip = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "ip";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 port = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "port";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <type> has a value
     *
     * @return boolean
     */
    public function hasType(){
      return $this->_has(1);
    }
    
    /**
     * Clear <type> value
     *
     * @return \RO\Cmd\ServerListSystemCmd\Item
     */
    public function clearType(){
      return $this->_clear(1);
    }
    
    /**
     * Get <type> value
     *
     * @return string
     */
    public function getType(){
      return $this->_get(1);
    }
    
    /**
     * Set <type> value
     *
     * @param string $value
     * @return \RO\Cmd\ServerListSystemCmd\Item
     */
    public function setType( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(2);
    }
    
    /**
     * Clear <name> value
     *
     * @return \RO\Cmd\ServerListSystemCmd\Item
     */
    public function clearName(){
      return $this->_clear(2);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(2);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \RO\Cmd\ServerListSystemCmd\Item
     */
    public function setName( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <ip> has a value
     *
     * @return boolean
     */
    public function hasIp(){
      return $this->_has(3);
    }
    
    /**
     * Clear <ip> value
     *
     * @return \RO\Cmd\ServerListSystemCmd\Item
     */
    public function clearIp(){
      return $this->_clear(3);
    }
    
    /**
     * Get <ip> value
     *
     * @return string
     */
    public function getIp(){
      return $this->_get(3);
    }
    
    /**
     * Set <ip> value
     *
     * @param string $value
     * @return \RO\Cmd\ServerListSystemCmd\Item
     */
    public function setIp( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <port> has a value
     *
     * @return boolean
     */
    public function hasPort(){
      return $this->_has(4);
    }
    
    /**
     * Clear <port> value
     *
     * @return \RO\Cmd\ServerListSystemCmd\Item
     */
    public function clearPort(){
      return $this->_clear(4);
    }
    
    /**
     * Get <port> value
     *
     * @return int
     */
    public function getPort(){
      return $this->_get(4);
    }
    
    /**
     * Set <port> value
     *
     * @param int $value
     * @return \RO\Cmd\ServerListSystemCmd\Item
     */
    public function setPort( $value){
      return $this->_set(4, $value);
    }
  }
}

