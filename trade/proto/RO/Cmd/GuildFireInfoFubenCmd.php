<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: FuBenCmd.proto

namespace RO\Cmd {

  class GuildFireInfoFubenCmd extends \DrSlump\Protobuf\Message {

    /**  @var int - \RO\Cmd\Command */
    public $cmd = \RO\Cmd\Command::FUBEN_PROTOCMD;
    
    /**  @var int - \RO\Cmd\FuBenParam */
    public $param = \RO\Cmd\FuBenParam::GUILD_FIRE_INFO;
    
    /**  @var boolean */
    public $fire = false;
    
    /**  @var int */
    public $def_guildid = 0;
    
    /**  @var int */
    public $endfire_time = 0;
    
    /**  @var boolean */
    public $danger = false;
    
    /**  @var int */
    public $danger_time = 0;
    
    /**  @var int */
    public $metal_hpper = 0;
    
    /**  @var boolean */
    public $calmdown = false;
    
    /**  @var int */
    public $calm_time = 0;
    
    /**  @var string */
    public $def_guildname = null;
    
    /**  @var boolean */
    public $def_perfect = false;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.GuildFireInfoFubenCmd');

      // OPTIONAL ENUM cmd = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "cmd";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\Command';
      $f->default   = \RO\Cmd\Command::FUBEN_PROTOCMD;
      $descriptor->addField($f);

      // OPTIONAL ENUM param = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "param";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\FuBenParam';
      $f->default   = \RO\Cmd\FuBenParam::GUILD_FIRE_INFO;
      $descriptor->addField($f);

      // OPTIONAL BOOL fire = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "fire";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // OPTIONAL UINT64 def_guildid = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "def_guildid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 endfire_time = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "endfire_time";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL BOOL danger = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "danger";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // OPTIONAL UINT32 danger_time = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "danger_time";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 metal_hpper = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "metal_hpper";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL BOOL calmdown = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "calmdown";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // OPTIONAL UINT32 calm_time = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "calm_time";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL STRING def_guildname = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "def_guildname";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL def_perfect = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "def_perfect";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <cmd> has a value
     *
     * @return boolean
     */
    public function hasCmd(){
      return $this->_has(1);
    }
    
    /**
     * Clear <cmd> value
     *
     * @return \RO\Cmd\GuildFireInfoFubenCmd
     */
    public function clearCmd(){
      return $this->_clear(1);
    }
    
    /**
     * Get <cmd> value
     *
     * @return int - \RO\Cmd\Command
     */
    public function getCmd(){
      return $this->_get(1);
    }
    
    /**
     * Set <cmd> value
     *
     * @param int - \RO\Cmd\Command $value
     * @return \RO\Cmd\GuildFireInfoFubenCmd
     */
    public function setCmd( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <param> has a value
     *
     * @return boolean
     */
    public function hasParam(){
      return $this->_has(2);
    }
    
    /**
     * Clear <param> value
     *
     * @return \RO\Cmd\GuildFireInfoFubenCmd
     */
    public function clearParam(){
      return $this->_clear(2);
    }
    
    /**
     * Get <param> value
     *
     * @return int - \RO\Cmd\FuBenParam
     */
    public function getParam(){
      return $this->_get(2);
    }
    
    /**
     * Set <param> value
     *
     * @param int - \RO\Cmd\FuBenParam $value
     * @return \RO\Cmd\GuildFireInfoFubenCmd
     */
    public function setParam( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <fire> has a value
     *
     * @return boolean
     */
    public function hasFire(){
      return $this->_has(3);
    }
    
    /**
     * Clear <fire> value
     *
     * @return \RO\Cmd\GuildFireInfoFubenCmd
     */
    public function clearFire(){
      return $this->_clear(3);
    }
    
    /**
     * Get <fire> value
     *
     * @return boolean
     */
    public function getFire(){
      return $this->_get(3);
    }
    
    /**
     * Set <fire> value
     *
     * @param boolean $value
     * @return \RO\Cmd\GuildFireInfoFubenCmd
     */
    public function setFire( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <def_guildid> has a value
     *
     * @return boolean
     */
    public function hasDefGuildid(){
      return $this->_has(4);
    }
    
    /**
     * Clear <def_guildid> value
     *
     * @return \RO\Cmd\GuildFireInfoFubenCmd
     */
    public function clearDefGuildid(){
      return $this->_clear(4);
    }
    
    /**
     * Get <def_guildid> value
     *
     * @return int
     */
    public function getDefGuildid(){
      return $this->_get(4);
    }
    
    /**
     * Set <def_guildid> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildFireInfoFubenCmd
     */
    public function setDefGuildid( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <endfire_time> has a value
     *
     * @return boolean
     */
    public function hasEndfireTime(){
      return $this->_has(5);
    }
    
    /**
     * Clear <endfire_time> value
     *
     * @return \RO\Cmd\GuildFireInfoFubenCmd
     */
    public function clearEndfireTime(){
      return $this->_clear(5);
    }
    
    /**
     * Get <endfire_time> value
     *
     * @return int
     */
    public function getEndfireTime(){
      return $this->_get(5);
    }
    
    /**
     * Set <endfire_time> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildFireInfoFubenCmd
     */
    public function setEndfireTime( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <danger> has a value
     *
     * @return boolean
     */
    public function hasDanger(){
      return $this->_has(6);
    }
    
    /**
     * Clear <danger> value
     *
     * @return \RO\Cmd\GuildFireInfoFubenCmd
     */
    public function clearDanger(){
      return $this->_clear(6);
    }
    
    /**
     * Get <danger> value
     *
     * @return boolean
     */
    public function getDanger(){
      return $this->_get(6);
    }
    
    /**
     * Set <danger> value
     *
     * @param boolean $value
     * @return \RO\Cmd\GuildFireInfoFubenCmd
     */
    public function setDanger( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <danger_time> has a value
     *
     * @return boolean
     */
    public function hasDangerTime(){
      return $this->_has(7);
    }
    
    /**
     * Clear <danger_time> value
     *
     * @return \RO\Cmd\GuildFireInfoFubenCmd
     */
    public function clearDangerTime(){
      return $this->_clear(7);
    }
    
    /**
     * Get <danger_time> value
     *
     * @return int
     */
    public function getDangerTime(){
      return $this->_get(7);
    }
    
    /**
     * Set <danger_time> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildFireInfoFubenCmd
     */
    public function setDangerTime( $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <metal_hpper> has a value
     *
     * @return boolean
     */
    public function hasMetalHpper(){
      return $this->_has(8);
    }
    
    /**
     * Clear <metal_hpper> value
     *
     * @return \RO\Cmd\GuildFireInfoFubenCmd
     */
    public function clearMetalHpper(){
      return $this->_clear(8);
    }
    
    /**
     * Get <metal_hpper> value
     *
     * @return int
     */
    public function getMetalHpper(){
      return $this->_get(8);
    }
    
    /**
     * Set <metal_hpper> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildFireInfoFubenCmd
     */
    public function setMetalHpper( $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <calmdown> has a value
     *
     * @return boolean
     */
    public function hasCalmdown(){
      return $this->_has(9);
    }
    
    /**
     * Clear <calmdown> value
     *
     * @return \RO\Cmd\GuildFireInfoFubenCmd
     */
    public function clearCalmdown(){
      return $this->_clear(9);
    }
    
    /**
     * Get <calmdown> value
     *
     * @return boolean
     */
    public function getCalmdown(){
      return $this->_get(9);
    }
    
    /**
     * Set <calmdown> value
     *
     * @param boolean $value
     * @return \RO\Cmd\GuildFireInfoFubenCmd
     */
    public function setCalmdown( $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <calm_time> has a value
     *
     * @return boolean
     */
    public function hasCalmTime(){
      return $this->_has(10);
    }
    
    /**
     * Clear <calm_time> value
     *
     * @return \RO\Cmd\GuildFireInfoFubenCmd
     */
    public function clearCalmTime(){
      return $this->_clear(10);
    }
    
    /**
     * Get <calm_time> value
     *
     * @return int
     */
    public function getCalmTime(){
      return $this->_get(10);
    }
    
    /**
     * Set <calm_time> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildFireInfoFubenCmd
     */
    public function setCalmTime( $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <def_guildname> has a value
     *
     * @return boolean
     */
    public function hasDefGuildname(){
      return $this->_has(11);
    }
    
    /**
     * Clear <def_guildname> value
     *
     * @return \RO\Cmd\GuildFireInfoFubenCmd
     */
    public function clearDefGuildname(){
      return $this->_clear(11);
    }
    
    /**
     * Get <def_guildname> value
     *
     * @return string
     */
    public function getDefGuildname(){
      return $this->_get(11);
    }
    
    /**
     * Set <def_guildname> value
     *
     * @param string $value
     * @return \RO\Cmd\GuildFireInfoFubenCmd
     */
    public function setDefGuildname( $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <def_perfect> has a value
     *
     * @return boolean
     */
    public function hasDefPerfect(){
      return $this->_has(12);
    }
    
    /**
     * Clear <def_perfect> value
     *
     * @return \RO\Cmd\GuildFireInfoFubenCmd
     */
    public function clearDefPerfect(){
      return $this->_clear(12);
    }
    
    /**
     * Get <def_perfect> value
     *
     * @return boolean
     */
    public function getDefPerfect(){
      return $this->_get(12);
    }
    
    /**
     * Set <def_perfect> value
     *
     * @param boolean $value
     * @return \RO\Cmd\GuildFireInfoFubenCmd
     */
    public function setDefPerfect( $value){
      return $this->_set(12, $value);
    }
  }
}

