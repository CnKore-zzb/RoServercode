<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: RecordCmd.proto

namespace RO\Cmd {

  class BlobGuildRaid extends \DrSlump\Protobuf\Message {

    /**  @var \RO\Cmd\GuildRaid[]  */
    public $raid = array();
    
    /**  @var int */
    public $raidversion = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.BlobGuildRaid');

      // REPEATED MESSAGE raid = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "raid";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\GuildRaid';
      $descriptor->addField($f);

      // OPTIONAL UINT32 raidversion = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "raidversion";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <raid> has a value
     *
     * @return boolean
     */
    public function hasRaid(){
      return $this->_has(1);
    }
    
    /**
     * Clear <raid> value
     *
     * @return \RO\Cmd\BlobGuildRaid
     */
    public function clearRaid(){
      return $this->_clear(1);
    }
    
    /**
     * Get <raid> value
     *
     * @param int $idx
     * @return \RO\Cmd\GuildRaid
     */
    public function getRaid($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <raid> value
     *
     * @param \RO\Cmd\GuildRaid $value
     * @return \RO\Cmd\BlobGuildRaid
     */
    public function setRaid(\RO\Cmd\GuildRaid $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <raid>
     *
     * @return \RO\Cmd\GuildRaid[]
     */
    public function getRaidList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <raid>
     *
     * @param \RO\Cmd\GuildRaid $value
     * @return \RO\Cmd\BlobGuildRaid
     */
    public function addRaid(\RO\Cmd\GuildRaid $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <raidversion> has a value
     *
     * @return boolean
     */
    public function hasRaidversion(){
      return $this->_has(2);
    }
    
    /**
     * Clear <raidversion> value
     *
     * @return \RO\Cmd\BlobGuildRaid
     */
    public function clearRaidversion(){
      return $this->_clear(2);
    }
    
    /**
     * Get <raidversion> value
     *
     * @return int
     */
    public function getRaidversion(){
      return $this->_get(2);
    }
    
    /**
     * Set <raidversion> value
     *
     * @param int $value
     * @return \RO\Cmd\BlobGuildRaid
     */
    public function setRaidversion( $value){
      return $this->_set(2, $value);
    }
  }
}

