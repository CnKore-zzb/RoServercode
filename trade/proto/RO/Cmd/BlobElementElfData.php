<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: RecordCmd.proto

namespace RO\Cmd {

  class BlobElementElfData extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $cur_element_id = null;
    
    /**  @var int */
    public $clear_time = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.BlobElementElfData');

      // OPTIONAL UINT32 cur_element_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "cur_element_id";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 clear_time = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "clear_time";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <cur_element_id> has a value
     *
     * @return boolean
     */
    public function hasCurElementId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <cur_element_id> value
     *
     * @return \RO\Cmd\BlobElementElfData
     */
    public function clearCurElementId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <cur_element_id> value
     *
     * @return int
     */
    public function getCurElementId(){
      return $this->_get(1);
    }
    
    /**
     * Set <cur_element_id> value
     *
     * @param int $value
     * @return \RO\Cmd\BlobElementElfData
     */
    public function setCurElementId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <clear_time> has a value
     *
     * @return boolean
     */
    public function hasClearTime(){
      return $this->_has(2);
    }
    
    /**
     * Clear <clear_time> value
     *
     * @return \RO\Cmd\BlobElementElfData
     */
    public function clearClearTime(){
      return $this->_clear(2);
    }
    
    /**
     * Get <clear_time> value
     *
     * @return int
     */
    public function getClearTime(){
      return $this->_get(2);
    }
    
    /**
     * Set <clear_time> value
     *
     * @param int $value
     * @return \RO\Cmd\BlobElementElfData
     */
    public function setClearTime( $value){
      return $this->_set(2, $value);
    }
  }
}

