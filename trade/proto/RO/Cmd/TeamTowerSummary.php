<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: InfiniteTower.proto

namespace RO\Cmd {

  class TeamTowerSummary extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $teamid = 0;
    
    /**  @var int */
    public $layer = 0;
    
    /**  @var \RO\Cmd\UserTowerInfo */
    public $leadertower = null;
    
    /**  @var int[]  */
    public $members = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.TeamTowerSummary');

      // OPTIONAL UINT64 teamid = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "teamid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 layer = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "layer";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE leadertower = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "leadertower";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\UserTowerInfo';
      $descriptor->addField($f);

      // REPEATED UINT64 members = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "members";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <teamid> has a value
     *
     * @return boolean
     */
    public function hasTeamid(){
      return $this->_has(1);
    }
    
    /**
     * Clear <teamid> value
     *
     * @return \RO\Cmd\TeamTowerSummary
     */
    public function clearTeamid(){
      return $this->_clear(1);
    }
    
    /**
     * Get <teamid> value
     *
     * @return int
     */
    public function getTeamid(){
      return $this->_get(1);
    }
    
    /**
     * Set <teamid> value
     *
     * @param int $value
     * @return \RO\Cmd\TeamTowerSummary
     */
    public function setTeamid( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <layer> has a value
     *
     * @return boolean
     */
    public function hasLayer(){
      return $this->_has(2);
    }
    
    /**
     * Clear <layer> value
     *
     * @return \RO\Cmd\TeamTowerSummary
     */
    public function clearLayer(){
      return $this->_clear(2);
    }
    
    /**
     * Get <layer> value
     *
     * @return int
     */
    public function getLayer(){
      return $this->_get(2);
    }
    
    /**
     * Set <layer> value
     *
     * @param int $value
     * @return \RO\Cmd\TeamTowerSummary
     */
    public function setLayer( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <leadertower> has a value
     *
     * @return boolean
     */
    public function hasLeadertower(){
      return $this->_has(4);
    }
    
    /**
     * Clear <leadertower> value
     *
     * @return \RO\Cmd\TeamTowerSummary
     */
    public function clearLeadertower(){
      return $this->_clear(4);
    }
    
    /**
     * Get <leadertower> value
     *
     * @return \RO\Cmd\UserTowerInfo
     */
    public function getLeadertower(){
      return $this->_get(4);
    }
    
    /**
     * Set <leadertower> value
     *
     * @param \RO\Cmd\UserTowerInfo $value
     * @return \RO\Cmd\TeamTowerSummary
     */
    public function setLeadertower(\RO\Cmd\UserTowerInfo $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <members> has a value
     *
     * @return boolean
     */
    public function hasMembers(){
      return $this->_has(3);
    }
    
    /**
     * Clear <members> value
     *
     * @return \RO\Cmd\TeamTowerSummary
     */
    public function clearMembers(){
      return $this->_clear(3);
    }
    
    /**
     * Get <members> value
     *
     * @param int $idx
     * @return int
     */
    public function getMembers($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <members> value
     *
     * @param int $value
     * @return \RO\Cmd\TeamTowerSummary
     */
    public function setMembers( $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <members>
     *
     * @return int[]
     */
    public function getMembersList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <members>
     *
     * @param int $value
     * @return \RO\Cmd\TeamTowerSummary
     */
    public function addMembers( $value){
     return $this->_add(3, $value);
    }
  }
}

