<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: SessionShop.proto

namespace RO\Cmd {

  class ShopItem extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $id = 0;
    
    /**  @var int */
    public $lv = 0;
    
    /**  @var int */
    public $moneyid = 0;
    
    /**  @var int */
    public $moneycount = 0;
    
    /**  @var int */
    public $moneyid2 = null;
    
    /**  @var int */
    public $moneycount2 = null;
    
    /**  @var int */
    public $starttime = 0;
    
    /**  @var int */
    public $endtime = 0;
    
    /**  @var int */
    public $discount = 0;
    
    /**  @var int */
    public $maxcount = 0;
    
    /**  @var int */
    public $shopid = 0;
    
    /**  @var int */
    public $screen = 0;
    
    /**  @var int */
    public $itemid = null;
    
    /**  @var int */
    public $skillid = null;
    
    /**  @var int */
    public $haircolorid = null;
    
    /**  @var int */
    public $num = null;
    
    /**  @var int */
    public $menuid = 0;
    
    /**  @var int */
    public $shoptype = 0;
    
    /**  @var int - \RO\Cmd\EProfession[]  */
    public $profession = array();
    
    /**  @var int - \RO\Cmd\EShopLimitType */
    public $limittype = \RO\Cmd\EShopLimitType::ESHOPLIMITTYPE_MIN;
    
    /**  @var string */
    public $des = null;
    
    /**  @var string */
    public $levdes = null;
    
    /**  @var int */
    public $business = null;
    
    /**  @var int */
    public $precost = null;
    
    /**  @var int */
    public $display = 0;
    
    /**  @var int */
    public $shoporder = null;
    
    /**  @var int */
    public $ifmsg = null;
    
    /**  @var int */
    public $adddate = null;
    
    /**  @var int */
    public $removedate = null;
    
    /**  @var int - \RO\Cmd\EShopSource */
    public $source = \RO\Cmd\EShopSource::ESHOPSOURCE_USER;
    
    /**  @var int - \RO\Cmd\EShopLockType */
    public $locktype = \RO\Cmd\EShopLockType::ESHOPLOCKTYPE_MIN;
    
    /**  @var string */
    public $lockarg = null;
    
    /**  @var int */
    public $discountmax = null;
    
    /**  @var int */
    public $actdiscount = null;
    
    /**  @var int */
    public $producenum = null;
    
    /**  @var int */
    public $nextgoodsid = null;
    
    /**  @var int */
    public $clothcolorid = 0;
    
    /**  @var int[]  */
    public $clothcolorids = array();
    
    /**  @var int */
    public $itemtype = 0;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.ShopItem');

      // OPTIONAL UINT32 id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "id";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 lv = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "lv";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 moneyid = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "moneyid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 moneycount = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "moneycount";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 moneyid2 = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "moneyid2";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 moneycount2 = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "moneycount2";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 starttime = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "starttime";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 endtime = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "endtime";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 discount = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "discount";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 maxcount = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "maxcount";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 shopid = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "shopid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 screen = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "screen";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 itemid = 13
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 13;
      $f->name      = "itemid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 skillid = 14
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 14;
      $f->name      = "skillid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 haircolorid = 16
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 16;
      $f->name      = "haircolorid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 num = 17
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 17;
      $f->name      = "num";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 menuid = 18
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 18;
      $f->name      = "menuid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 shoptype = 19
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 19;
      $f->name      = "shoptype";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // REPEATED ENUM profession = 20
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20;
      $f->name      = "profession";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\EProfession';
      $descriptor->addField($f);

      // OPTIONAL ENUM limittype = 21
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 21;
      $f->name      = "limittype";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\EShopLimitType';
      $f->default   = \RO\Cmd\EShopLimitType::ESHOPLIMITTYPE_MIN;
      $descriptor->addField($f);

      // OPTIONAL STRING des = 22
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 22;
      $f->name      = "des";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING levdes = 23
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 23;
      $f->name      = "levdes";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 business = 24
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 24;
      $f->name      = "business";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 precost = 25
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 25;
      $f->name      = "precost";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 display = 26
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 26;
      $f->name      = "display";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 shoporder = 27
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 27;
      $f->name      = "shoporder";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 ifmsg = 28
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 28;
      $f->name      = "ifmsg";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 adddate = 29
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 29;
      $f->name      = "adddate";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 removedate = 30
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30;
      $f->name      = "removedate";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL ENUM source = 37
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 37;
      $f->name      = "source";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\EShopSource';
      $f->default   = \RO\Cmd\EShopSource::ESHOPSOURCE_USER;
      $descriptor->addField($f);

      // OPTIONAL ENUM locktype = 31
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 31;
      $f->name      = "locktype";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\EShopLockType';
      $f->default   = \RO\Cmd\EShopLockType::ESHOPLOCKTYPE_MIN;
      $descriptor->addField($f);

      // OPTIONAL STRING lockarg = 32
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 32;
      $f->name      = "lockarg";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 discountmax = 33
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 33;
      $f->name      = "discountmax";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 actdiscount = 34
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 34;
      $f->name      = "actdiscount";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 producenum = 35
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 35;
      $f->name      = "producenum";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 nextgoodsid = 36
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 36;
      $f->name      = "nextgoodsid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 clothcolorid = 38
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 38;
      $f->name      = "clothcolorid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // REPEATED UINT32 clothcolorids = 39
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 39;
      $f->name      = "clothcolorids";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // OPTIONAL UINT32 itemtype = 40
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 40;
      $f->name      = "itemtype";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <id> has a value
     *
     * @return boolean
     */
    public function hasId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <id> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <id> value
     *
     * @return int
     */
    public function getId(){
      return $this->_get(1);
    }
    
    /**
     * Set <id> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <lv> has a value
     *
     * @return boolean
     */
    public function hasLv(){
      return $this->_has(2);
    }
    
    /**
     * Clear <lv> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearLv(){
      return $this->_clear(2);
    }
    
    /**
     * Get <lv> value
     *
     * @return int
     */
    public function getLv(){
      return $this->_get(2);
    }
    
    /**
     * Set <lv> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setLv( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <moneyid> has a value
     *
     * @return boolean
     */
    public function hasMoneyid(){
      return $this->_has(3);
    }
    
    /**
     * Clear <moneyid> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearMoneyid(){
      return $this->_clear(3);
    }
    
    /**
     * Get <moneyid> value
     *
     * @return int
     */
    public function getMoneyid(){
      return $this->_get(3);
    }
    
    /**
     * Set <moneyid> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setMoneyid( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <moneycount> has a value
     *
     * @return boolean
     */
    public function hasMoneycount(){
      return $this->_has(4);
    }
    
    /**
     * Clear <moneycount> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearMoneycount(){
      return $this->_clear(4);
    }
    
    /**
     * Get <moneycount> value
     *
     * @return int
     */
    public function getMoneycount(){
      return $this->_get(4);
    }
    
    /**
     * Set <moneycount> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setMoneycount( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <moneyid2> has a value
     *
     * @return boolean
     */
    public function hasMoneyid2(){
      return $this->_has(5);
    }
    
    /**
     * Clear <moneyid2> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearMoneyid2(){
      return $this->_clear(5);
    }
    
    /**
     * Get <moneyid2> value
     *
     * @return int
     */
    public function getMoneyid2(){
      return $this->_get(5);
    }
    
    /**
     * Set <moneyid2> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setMoneyid2( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <moneycount2> has a value
     *
     * @return boolean
     */
    public function hasMoneycount2(){
      return $this->_has(6);
    }
    
    /**
     * Clear <moneycount2> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearMoneycount2(){
      return $this->_clear(6);
    }
    
    /**
     * Get <moneycount2> value
     *
     * @return int
     */
    public function getMoneycount2(){
      return $this->_get(6);
    }
    
    /**
     * Set <moneycount2> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setMoneycount2( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <starttime> has a value
     *
     * @return boolean
     */
    public function hasStarttime(){
      return $this->_has(7);
    }
    
    /**
     * Clear <starttime> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearStarttime(){
      return $this->_clear(7);
    }
    
    /**
     * Get <starttime> value
     *
     * @return int
     */
    public function getStarttime(){
      return $this->_get(7);
    }
    
    /**
     * Set <starttime> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setStarttime( $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <endtime> has a value
     *
     * @return boolean
     */
    public function hasEndtime(){
      return $this->_has(8);
    }
    
    /**
     * Clear <endtime> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearEndtime(){
      return $this->_clear(8);
    }
    
    /**
     * Get <endtime> value
     *
     * @return int
     */
    public function getEndtime(){
      return $this->_get(8);
    }
    
    /**
     * Set <endtime> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setEndtime( $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <discount> has a value
     *
     * @return boolean
     */
    public function hasDiscount(){
      return $this->_has(9);
    }
    
    /**
     * Clear <discount> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearDiscount(){
      return $this->_clear(9);
    }
    
    /**
     * Get <discount> value
     *
     * @return int
     */
    public function getDiscount(){
      return $this->_get(9);
    }
    
    /**
     * Set <discount> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setDiscount( $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <maxcount> has a value
     *
     * @return boolean
     */
    public function hasMaxcount(){
      return $this->_has(10);
    }
    
    /**
     * Clear <maxcount> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearMaxcount(){
      return $this->_clear(10);
    }
    
    /**
     * Get <maxcount> value
     *
     * @return int
     */
    public function getMaxcount(){
      return $this->_get(10);
    }
    
    /**
     * Set <maxcount> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setMaxcount( $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <shopid> has a value
     *
     * @return boolean
     */
    public function hasShopid(){
      return $this->_has(11);
    }
    
    /**
     * Clear <shopid> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearShopid(){
      return $this->_clear(11);
    }
    
    /**
     * Get <shopid> value
     *
     * @return int
     */
    public function getShopid(){
      return $this->_get(11);
    }
    
    /**
     * Set <shopid> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setShopid( $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <screen> has a value
     *
     * @return boolean
     */
    public function hasScreen(){
      return $this->_has(12);
    }
    
    /**
     * Clear <screen> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearScreen(){
      return $this->_clear(12);
    }
    
    /**
     * Get <screen> value
     *
     * @return int
     */
    public function getScreen(){
      return $this->_get(12);
    }
    
    /**
     * Set <screen> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setScreen( $value){
      return $this->_set(12, $value);
    }
    
    /**
     * Check if <itemid> has a value
     *
     * @return boolean
     */
    public function hasItemid(){
      return $this->_has(13);
    }
    
    /**
     * Clear <itemid> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearItemid(){
      return $this->_clear(13);
    }
    
    /**
     * Get <itemid> value
     *
     * @return int
     */
    public function getItemid(){
      return $this->_get(13);
    }
    
    /**
     * Set <itemid> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setItemid( $value){
      return $this->_set(13, $value);
    }
    
    /**
     * Check if <skillid> has a value
     *
     * @return boolean
     */
    public function hasSkillid(){
      return $this->_has(14);
    }
    
    /**
     * Clear <skillid> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearSkillid(){
      return $this->_clear(14);
    }
    
    /**
     * Get <skillid> value
     *
     * @return int
     */
    public function getSkillid(){
      return $this->_get(14);
    }
    
    /**
     * Set <skillid> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setSkillid( $value){
      return $this->_set(14, $value);
    }
    
    /**
     * Check if <haircolorid> has a value
     *
     * @return boolean
     */
    public function hasHaircolorid(){
      return $this->_has(16);
    }
    
    /**
     * Clear <haircolorid> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearHaircolorid(){
      return $this->_clear(16);
    }
    
    /**
     * Get <haircolorid> value
     *
     * @return int
     */
    public function getHaircolorid(){
      return $this->_get(16);
    }
    
    /**
     * Set <haircolorid> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setHaircolorid( $value){
      return $this->_set(16, $value);
    }
    
    /**
     * Check if <num> has a value
     *
     * @return boolean
     */
    public function hasNum(){
      return $this->_has(17);
    }
    
    /**
     * Clear <num> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearNum(){
      return $this->_clear(17);
    }
    
    /**
     * Get <num> value
     *
     * @return int
     */
    public function getNum(){
      return $this->_get(17);
    }
    
    /**
     * Set <num> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setNum( $value){
      return $this->_set(17, $value);
    }
    
    /**
     * Check if <menuid> has a value
     *
     * @return boolean
     */
    public function hasMenuid(){
      return $this->_has(18);
    }
    
    /**
     * Clear <menuid> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearMenuid(){
      return $this->_clear(18);
    }
    
    /**
     * Get <menuid> value
     *
     * @return int
     */
    public function getMenuid(){
      return $this->_get(18);
    }
    
    /**
     * Set <menuid> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setMenuid( $value){
      return $this->_set(18, $value);
    }
    
    /**
     * Check if <shoptype> has a value
     *
     * @return boolean
     */
    public function hasShoptype(){
      return $this->_has(19);
    }
    
    /**
     * Clear <shoptype> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearShoptype(){
      return $this->_clear(19);
    }
    
    /**
     * Get <shoptype> value
     *
     * @return int
     */
    public function getShoptype(){
      return $this->_get(19);
    }
    
    /**
     * Set <shoptype> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setShoptype( $value){
      return $this->_set(19, $value);
    }
    
    /**
     * Check if <profession> has a value
     *
     * @return boolean
     */
    public function hasProfession(){
      return $this->_has(20);
    }
    
    /**
     * Clear <profession> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearProfession(){
      return $this->_clear(20);
    }
    
    /**
     * Get <profession> value
     *
     * @param int $idx
     * @return int - \RO\Cmd\EProfession
     */
    public function getProfession($idx = NULL){
      return $this->_get(20, $idx);
    }
    
    /**
     * Set <profession> value
     *
     * @param int - \RO\Cmd\EProfession $value
     * @return \RO\Cmd\ShopItem
     */
    public function setProfession( $value, $idx = NULL){
      return $this->_set(20, $value, $idx);
    }
    
    /**
     * Get all elements of <profession>
     *
     * @return int - \RO\Cmd\EProfession[]
     */
    public function getProfessionList(){
     return $this->_get(20);
    }
    
    /**
     * Add a new element to <profession>
     *
     * @param int - \RO\Cmd\EProfession $value
     * @return \RO\Cmd\ShopItem
     */
    public function addProfession( $value){
     return $this->_add(20, $value);
    }
    
    /**
     * Check if <limittype> has a value
     *
     * @return boolean
     */
    public function hasLimittype(){
      return $this->_has(21);
    }
    
    /**
     * Clear <limittype> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearLimittype(){
      return $this->_clear(21);
    }
    
    /**
     * Get <limittype> value
     *
     * @return int - \RO\Cmd\EShopLimitType
     */
    public function getLimittype(){
      return $this->_get(21);
    }
    
    /**
     * Set <limittype> value
     *
     * @param int - \RO\Cmd\EShopLimitType $value
     * @return \RO\Cmd\ShopItem
     */
    public function setLimittype( $value){
      return $this->_set(21, $value);
    }
    
    /**
     * Check if <des> has a value
     *
     * @return boolean
     */
    public function hasDes(){
      return $this->_has(22);
    }
    
    /**
     * Clear <des> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearDes(){
      return $this->_clear(22);
    }
    
    /**
     * Get <des> value
     *
     * @return string
     */
    public function getDes(){
      return $this->_get(22);
    }
    
    /**
     * Set <des> value
     *
     * @param string $value
     * @return \RO\Cmd\ShopItem
     */
    public function setDes( $value){
      return $this->_set(22, $value);
    }
    
    /**
     * Check if <levdes> has a value
     *
     * @return boolean
     */
    public function hasLevdes(){
      return $this->_has(23);
    }
    
    /**
     * Clear <levdes> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearLevdes(){
      return $this->_clear(23);
    }
    
    /**
     * Get <levdes> value
     *
     * @return string
     */
    public function getLevdes(){
      return $this->_get(23);
    }
    
    /**
     * Set <levdes> value
     *
     * @param string $value
     * @return \RO\Cmd\ShopItem
     */
    public function setLevdes( $value){
      return $this->_set(23, $value);
    }
    
    /**
     * Check if <business> has a value
     *
     * @return boolean
     */
    public function hasBusiness(){
      return $this->_has(24);
    }
    
    /**
     * Clear <business> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearBusiness(){
      return $this->_clear(24);
    }
    
    /**
     * Get <business> value
     *
     * @return int
     */
    public function getBusiness(){
      return $this->_get(24);
    }
    
    /**
     * Set <business> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setBusiness( $value){
      return $this->_set(24, $value);
    }
    
    /**
     * Check if <precost> has a value
     *
     * @return boolean
     */
    public function hasPrecost(){
      return $this->_has(25);
    }
    
    /**
     * Clear <precost> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearPrecost(){
      return $this->_clear(25);
    }
    
    /**
     * Get <precost> value
     *
     * @return int
     */
    public function getPrecost(){
      return $this->_get(25);
    }
    
    /**
     * Set <precost> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setPrecost( $value){
      return $this->_set(25, $value);
    }
    
    /**
     * Check if <display> has a value
     *
     * @return boolean
     */
    public function hasDisplay(){
      return $this->_has(26);
    }
    
    /**
     * Clear <display> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearDisplay(){
      return $this->_clear(26);
    }
    
    /**
     * Get <display> value
     *
     * @return int
     */
    public function getDisplay(){
      return $this->_get(26);
    }
    
    /**
     * Set <display> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setDisplay( $value){
      return $this->_set(26, $value);
    }
    
    /**
     * Check if <shoporder> has a value
     *
     * @return boolean
     */
    public function hasShoporder(){
      return $this->_has(27);
    }
    
    /**
     * Clear <shoporder> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearShoporder(){
      return $this->_clear(27);
    }
    
    /**
     * Get <shoporder> value
     *
     * @return int
     */
    public function getShoporder(){
      return $this->_get(27);
    }
    
    /**
     * Set <shoporder> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setShoporder( $value){
      return $this->_set(27, $value);
    }
    
    /**
     * Check if <ifmsg> has a value
     *
     * @return boolean
     */
    public function hasIfmsg(){
      return $this->_has(28);
    }
    
    /**
     * Clear <ifmsg> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearIfmsg(){
      return $this->_clear(28);
    }
    
    /**
     * Get <ifmsg> value
     *
     * @return int
     */
    public function getIfmsg(){
      return $this->_get(28);
    }
    
    /**
     * Set <ifmsg> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setIfmsg( $value){
      return $this->_set(28, $value);
    }
    
    /**
     * Check if <adddate> has a value
     *
     * @return boolean
     */
    public function hasAdddate(){
      return $this->_has(29);
    }
    
    /**
     * Clear <adddate> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearAdddate(){
      return $this->_clear(29);
    }
    
    /**
     * Get <adddate> value
     *
     * @return int
     */
    public function getAdddate(){
      return $this->_get(29);
    }
    
    /**
     * Set <adddate> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setAdddate( $value){
      return $this->_set(29, $value);
    }
    
    /**
     * Check if <removedate> has a value
     *
     * @return boolean
     */
    public function hasRemovedate(){
      return $this->_has(30);
    }
    
    /**
     * Clear <removedate> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearRemovedate(){
      return $this->_clear(30);
    }
    
    /**
     * Get <removedate> value
     *
     * @return int
     */
    public function getRemovedate(){
      return $this->_get(30);
    }
    
    /**
     * Set <removedate> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setRemovedate( $value){
      return $this->_set(30, $value);
    }
    
    /**
     * Check if <source> has a value
     *
     * @return boolean
     */
    public function hasSource(){
      return $this->_has(37);
    }
    
    /**
     * Clear <source> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearSource(){
      return $this->_clear(37);
    }
    
    /**
     * Get <source> value
     *
     * @return int - \RO\Cmd\EShopSource
     */
    public function getSource(){
      return $this->_get(37);
    }
    
    /**
     * Set <source> value
     *
     * @param int - \RO\Cmd\EShopSource $value
     * @return \RO\Cmd\ShopItem
     */
    public function setSource( $value){
      return $this->_set(37, $value);
    }
    
    /**
     * Check if <locktype> has a value
     *
     * @return boolean
     */
    public function hasLocktype(){
      return $this->_has(31);
    }
    
    /**
     * Clear <locktype> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearLocktype(){
      return $this->_clear(31);
    }
    
    /**
     * Get <locktype> value
     *
     * @return int - \RO\Cmd\EShopLockType
     */
    public function getLocktype(){
      return $this->_get(31);
    }
    
    /**
     * Set <locktype> value
     *
     * @param int - \RO\Cmd\EShopLockType $value
     * @return \RO\Cmd\ShopItem
     */
    public function setLocktype( $value){
      return $this->_set(31, $value);
    }
    
    /**
     * Check if <lockarg> has a value
     *
     * @return boolean
     */
    public function hasLockarg(){
      return $this->_has(32);
    }
    
    /**
     * Clear <lockarg> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearLockarg(){
      return $this->_clear(32);
    }
    
    /**
     * Get <lockarg> value
     *
     * @return string
     */
    public function getLockarg(){
      return $this->_get(32);
    }
    
    /**
     * Set <lockarg> value
     *
     * @param string $value
     * @return \RO\Cmd\ShopItem
     */
    public function setLockarg( $value){
      return $this->_set(32, $value);
    }
    
    /**
     * Check if <discountmax> has a value
     *
     * @return boolean
     */
    public function hasDiscountmax(){
      return $this->_has(33);
    }
    
    /**
     * Clear <discountmax> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearDiscountmax(){
      return $this->_clear(33);
    }
    
    /**
     * Get <discountmax> value
     *
     * @return int
     */
    public function getDiscountmax(){
      return $this->_get(33);
    }
    
    /**
     * Set <discountmax> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setDiscountmax( $value){
      return $this->_set(33, $value);
    }
    
    /**
     * Check if <actdiscount> has a value
     *
     * @return boolean
     */
    public function hasActdiscount(){
      return $this->_has(34);
    }
    
    /**
     * Clear <actdiscount> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearActdiscount(){
      return $this->_clear(34);
    }
    
    /**
     * Get <actdiscount> value
     *
     * @return int
     */
    public function getActdiscount(){
      return $this->_get(34);
    }
    
    /**
     * Set <actdiscount> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setActdiscount( $value){
      return $this->_set(34, $value);
    }
    
    /**
     * Check if <producenum> has a value
     *
     * @return boolean
     */
    public function hasProducenum(){
      return $this->_has(35);
    }
    
    /**
     * Clear <producenum> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearProducenum(){
      return $this->_clear(35);
    }
    
    /**
     * Get <producenum> value
     *
     * @return int
     */
    public function getProducenum(){
      return $this->_get(35);
    }
    
    /**
     * Set <producenum> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setProducenum( $value){
      return $this->_set(35, $value);
    }
    
    /**
     * Check if <nextgoodsid> has a value
     *
     * @return boolean
     */
    public function hasNextgoodsid(){
      return $this->_has(36);
    }
    
    /**
     * Clear <nextgoodsid> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearNextgoodsid(){
      return $this->_clear(36);
    }
    
    /**
     * Get <nextgoodsid> value
     *
     * @return int
     */
    public function getNextgoodsid(){
      return $this->_get(36);
    }
    
    /**
     * Set <nextgoodsid> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setNextgoodsid( $value){
      return $this->_set(36, $value);
    }
    
    /**
     * Check if <clothcolorid> has a value
     *
     * @return boolean
     */
    public function hasClothcolorid(){
      return $this->_has(38);
    }
    
    /**
     * Clear <clothcolorid> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearClothcolorid(){
      return $this->_clear(38);
    }
    
    /**
     * Get <clothcolorid> value
     *
     * @return int
     */
    public function getClothcolorid(){
      return $this->_get(38);
    }
    
    /**
     * Set <clothcolorid> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setClothcolorid( $value){
      return $this->_set(38, $value);
    }
    
    /**
     * Check if <clothcolorids> has a value
     *
     * @return boolean
     */
    public function hasClothcolorids(){
      return $this->_has(39);
    }
    
    /**
     * Clear <clothcolorids> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearClothcolorids(){
      return $this->_clear(39);
    }
    
    /**
     * Get <clothcolorids> value
     *
     * @param int $idx
     * @return int
     */
    public function getClothcolorids($idx = NULL){
      return $this->_get(39, $idx);
    }
    
    /**
     * Set <clothcolorids> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setClothcolorids( $value, $idx = NULL){
      return $this->_set(39, $value, $idx);
    }
    
    /**
     * Get all elements of <clothcolorids>
     *
     * @return int[]
     */
    public function getClothcoloridsList(){
     return $this->_get(39);
    }
    
    /**
     * Add a new element to <clothcolorids>
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function addClothcolorids( $value){
     return $this->_add(39, $value);
    }
    
    /**
     * Check if <itemtype> has a value
     *
     * @return boolean
     */
    public function hasItemtype(){
      return $this->_has(40);
    }
    
    /**
     * Clear <itemtype> value
     *
     * @return \RO\Cmd\ShopItem
     */
    public function clearItemtype(){
      return $this->_clear(40);
    }
    
    /**
     * Get <itemtype> value
     *
     * @return int
     */
    public function getItemtype(){
      return $this->_get(40);
    }
    
    /**
     * Set <itemtype> value
     *
     * @param int $value
     * @return \RO\Cmd\ShopItem
     */
    public function setItemtype( $value){
      return $this->_set(40, $value);
    }
  }
}

