<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: GuildCmd.proto

namespace RO\Cmd {

  class GuildMember extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $charid = 0;
    
    /**  @var int */
    public $baselevel = 0;
    
    /**  @var int */
    public $portrait = 0;
    
    /**  @var int */
    public $frame = 0;
    
    /**  @var int */
    public $weekcontribution = 0;
    
    /**  @var int */
    public $contribution = 0;
    
    /**  @var int */
    public $totalcontribution = 0;
    
    /**  @var int */
    public $entertime = 0;
    
    /**  @var int */
    public $offlinetime = 0;
    
    /**  @var int */
    public $giftpoint = 0;
    
    /**  @var int */
    public $hair = 0;
    
    /**  @var int */
    public $haircolor = 0;
    
    /**  @var int */
    public $body = 0;
    
    /**  @var int */
    public $weekasset = 0;
    
    /**  @var int */
    public $asset = 0;
    
    /**  @var int */
    public $zoneid = 0;
    
    /**  @var int */
    public $head = 0;
    
    /**  @var int */
    public $face = 0;
    
    /**  @var int */
    public $mouth = 0;
    
    /**  @var int */
    public $eye = 0;
    
    /**  @var int - \RO\Cmd\EGender */
    public $gender = \RO\Cmd\EGender::EGENDER_MIN;
    
    /**  @var int - \RO\Cmd\EProfession */
    public $profession = \RO\Cmd\EProfession::EPROFESSION_MIN;
    
    /**  @var int - \RO\Cmd\EGuildJob */
    public $job = \RO\Cmd\EGuildJob::EGUILDJOB_MIN;
    
    /**  @var string */
    public $name = null;
    
    /**  @var string */
    public $var = null;
    
    /**  @var \RO\Cmd\BlobGuildPray */
    public $pray = null;
    
    /**  @var \RO\Cmd\BlobDonate */
    public $donate = null;
    
    /**  @var boolean */
    public $levelupeffect = false;
    
    /**  @var boolean */
    public $exchangezone = false;
    
    /**  @var int */
    public $accid = null;
    
    /**  @var \RO\Cmd\BlobGuildBuilding */
    public $building = null;
    
    /**  @var int */
    public $challenge = 0;
    
    /**  @var int */
    public $lastexittime = 0;
    
    /**  @var int */
    public $redtip = 0;
    
    /**  @var boolean */
    public $buildingeffect = false;
    
    /**  @var boolean */
    public $realtimevoice = false;
    
    /**  @var int */
    public $weekbcoin = 0;
    
    /**  @var int */
    public $totalcoin = 0;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.GuildMember');

      // OPTIONAL UINT64 charid = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "charid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 baselevel = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "baselevel";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 portrait = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "portrait";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 frame = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "frame";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 weekcontribution = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "weekcontribution";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 contribution = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "contribution";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 totalcontribution = 19
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 19;
      $f->name      = "totalcontribution";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 entertime = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "entertime";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 offlinetime = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "offlinetime";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 giftpoint = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "giftpoint";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 hair = 16
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 16;
      $f->name      = "hair";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 haircolor = 17
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 17;
      $f->name      = "haircolor";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 body = 18
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 18;
      $f->name      = "body";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 weekasset = 22
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 22;
      $f->name      = "weekasset";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 asset = 23
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 23;
      $f->name      = "asset";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 zoneid = 24
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 24;
      $f->name      = "zoneid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 head = 25
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 25;
      $f->name      = "head";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 face = 28
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 28;
      $f->name      = "face";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 mouth = 29
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 29;
      $f->name      = "mouth";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 eye = 30
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30;
      $f->name      = "eye";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL ENUM gender = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "gender";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\EGender';
      $f->default   = \RO\Cmd\EGender::EGENDER_MIN;
      $descriptor->addField($f);

      // OPTIONAL ENUM profession = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "profession";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\EProfession';
      $f->default   = \RO\Cmd\EProfession::EPROFESSION_MIN;
      $descriptor->addField($f);

      // OPTIONAL ENUM job = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "job";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\EGuildJob';
      $f->default   = \RO\Cmd\EGuildJob::EGUILDJOB_MIN;
      $descriptor->addField($f);

      // OPTIONAL STRING name = 13
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 13;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BYTES var = 14
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 14;
      $f->name      = "var";
      $f->type      = \DrSlump\Protobuf::TYPE_BYTES;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE pray = 15
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 15;
      $f->name      = "pray";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\BlobGuildPray';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE donate = 21
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 21;
      $f->name      = "donate";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\BlobDonate';
      $descriptor->addField($f);

      // OPTIONAL BOOL levelupeffect = 20
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20;
      $f->name      = "levelupeffect";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // OPTIONAL BOOL exchangezone = 26
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 26;
      $f->name      = "exchangezone";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // OPTIONAL UINT32 accid = 27
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 27;
      $f->name      = "accid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE building = 31
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 31;
      $f->name      = "building";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\BlobGuildBuilding';
      $descriptor->addField($f);

      // OPTIONAL UINT64 challenge = 32
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 32;
      $f->name      = "challenge";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 lastexittime = 33
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 33;
      $f->name      = "lastexittime";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT64 redtip = 34
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 34;
      $f->name      = "redtip";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL BOOL buildingeffect = 35
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 35;
      $f->name      = "buildingeffect";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // OPTIONAL BOOL realtimevoice = 36
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 36;
      $f->name      = "realtimevoice";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // OPTIONAL UINT32 weekbcoin = 37
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 37;
      $f->name      = "weekbcoin";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 totalcoin = 38
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 38;
      $f->name      = "totalcoin";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <charid> has a value
     *
     * @return boolean
     */
    public function hasCharid(){
      return $this->_has(1);
    }
    
    /**
     * Clear <charid> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearCharid(){
      return $this->_clear(1);
    }
    
    /**
     * Get <charid> value
     *
     * @return int
     */
    public function getCharid(){
      return $this->_get(1);
    }
    
    /**
     * Set <charid> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildMember
     */
    public function setCharid( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <baselevel> has a value
     *
     * @return boolean
     */
    public function hasBaselevel(){
      return $this->_has(2);
    }
    
    /**
     * Clear <baselevel> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearBaselevel(){
      return $this->_clear(2);
    }
    
    /**
     * Get <baselevel> value
     *
     * @return int
     */
    public function getBaselevel(){
      return $this->_get(2);
    }
    
    /**
     * Set <baselevel> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildMember
     */
    public function setBaselevel( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <portrait> has a value
     *
     * @return boolean
     */
    public function hasPortrait(){
      return $this->_has(3);
    }
    
    /**
     * Clear <portrait> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearPortrait(){
      return $this->_clear(3);
    }
    
    /**
     * Get <portrait> value
     *
     * @return int
     */
    public function getPortrait(){
      return $this->_get(3);
    }
    
    /**
     * Set <portrait> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildMember
     */
    public function setPortrait( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <frame> has a value
     *
     * @return boolean
     */
    public function hasFrame(){
      return $this->_has(4);
    }
    
    /**
     * Clear <frame> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearFrame(){
      return $this->_clear(4);
    }
    
    /**
     * Get <frame> value
     *
     * @return int
     */
    public function getFrame(){
      return $this->_get(4);
    }
    
    /**
     * Set <frame> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildMember
     */
    public function setFrame( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <weekcontribution> has a value
     *
     * @return boolean
     */
    public function hasWeekcontribution(){
      return $this->_has(5);
    }
    
    /**
     * Clear <weekcontribution> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearWeekcontribution(){
      return $this->_clear(5);
    }
    
    /**
     * Get <weekcontribution> value
     *
     * @return int
     */
    public function getWeekcontribution(){
      return $this->_get(5);
    }
    
    /**
     * Set <weekcontribution> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildMember
     */
    public function setWeekcontribution( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <contribution> has a value
     *
     * @return boolean
     */
    public function hasContribution(){
      return $this->_has(6);
    }
    
    /**
     * Clear <contribution> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearContribution(){
      return $this->_clear(6);
    }
    
    /**
     * Get <contribution> value
     *
     * @return int
     */
    public function getContribution(){
      return $this->_get(6);
    }
    
    /**
     * Set <contribution> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildMember
     */
    public function setContribution( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <totalcontribution> has a value
     *
     * @return boolean
     */
    public function hasTotalcontribution(){
      return $this->_has(19);
    }
    
    /**
     * Clear <totalcontribution> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearTotalcontribution(){
      return $this->_clear(19);
    }
    
    /**
     * Get <totalcontribution> value
     *
     * @return int
     */
    public function getTotalcontribution(){
      return $this->_get(19);
    }
    
    /**
     * Set <totalcontribution> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildMember
     */
    public function setTotalcontribution( $value){
      return $this->_set(19, $value);
    }
    
    /**
     * Check if <entertime> has a value
     *
     * @return boolean
     */
    public function hasEntertime(){
      return $this->_has(7);
    }
    
    /**
     * Clear <entertime> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearEntertime(){
      return $this->_clear(7);
    }
    
    /**
     * Get <entertime> value
     *
     * @return int
     */
    public function getEntertime(){
      return $this->_get(7);
    }
    
    /**
     * Set <entertime> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildMember
     */
    public function setEntertime( $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <offlinetime> has a value
     *
     * @return boolean
     */
    public function hasOfflinetime(){
      return $this->_has(8);
    }
    
    /**
     * Clear <offlinetime> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearOfflinetime(){
      return $this->_clear(8);
    }
    
    /**
     * Get <offlinetime> value
     *
     * @return int
     */
    public function getOfflinetime(){
      return $this->_get(8);
    }
    
    /**
     * Set <offlinetime> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildMember
     */
    public function setOfflinetime( $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <giftpoint> has a value
     *
     * @return boolean
     */
    public function hasGiftpoint(){
      return $this->_has(9);
    }
    
    /**
     * Clear <giftpoint> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearGiftpoint(){
      return $this->_clear(9);
    }
    
    /**
     * Get <giftpoint> value
     *
     * @return int
     */
    public function getGiftpoint(){
      return $this->_get(9);
    }
    
    /**
     * Set <giftpoint> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildMember
     */
    public function setGiftpoint( $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <hair> has a value
     *
     * @return boolean
     */
    public function hasHair(){
      return $this->_has(16);
    }
    
    /**
     * Clear <hair> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearHair(){
      return $this->_clear(16);
    }
    
    /**
     * Get <hair> value
     *
     * @return int
     */
    public function getHair(){
      return $this->_get(16);
    }
    
    /**
     * Set <hair> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildMember
     */
    public function setHair( $value){
      return $this->_set(16, $value);
    }
    
    /**
     * Check if <haircolor> has a value
     *
     * @return boolean
     */
    public function hasHaircolor(){
      return $this->_has(17);
    }
    
    /**
     * Clear <haircolor> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearHaircolor(){
      return $this->_clear(17);
    }
    
    /**
     * Get <haircolor> value
     *
     * @return int
     */
    public function getHaircolor(){
      return $this->_get(17);
    }
    
    /**
     * Set <haircolor> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildMember
     */
    public function setHaircolor( $value){
      return $this->_set(17, $value);
    }
    
    /**
     * Check if <body> has a value
     *
     * @return boolean
     */
    public function hasBody(){
      return $this->_has(18);
    }
    
    /**
     * Clear <body> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearBody(){
      return $this->_clear(18);
    }
    
    /**
     * Get <body> value
     *
     * @return int
     */
    public function getBody(){
      return $this->_get(18);
    }
    
    /**
     * Set <body> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildMember
     */
    public function setBody( $value){
      return $this->_set(18, $value);
    }
    
    /**
     * Check if <weekasset> has a value
     *
     * @return boolean
     */
    public function hasWeekasset(){
      return $this->_has(22);
    }
    
    /**
     * Clear <weekasset> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearWeekasset(){
      return $this->_clear(22);
    }
    
    /**
     * Get <weekasset> value
     *
     * @return int
     */
    public function getWeekasset(){
      return $this->_get(22);
    }
    
    /**
     * Set <weekasset> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildMember
     */
    public function setWeekasset( $value){
      return $this->_set(22, $value);
    }
    
    /**
     * Check if <asset> has a value
     *
     * @return boolean
     */
    public function hasAsset(){
      return $this->_has(23);
    }
    
    /**
     * Clear <asset> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearAsset(){
      return $this->_clear(23);
    }
    
    /**
     * Get <asset> value
     *
     * @return int
     */
    public function getAsset(){
      return $this->_get(23);
    }
    
    /**
     * Set <asset> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildMember
     */
    public function setAsset( $value){
      return $this->_set(23, $value);
    }
    
    /**
     * Check if <zoneid> has a value
     *
     * @return boolean
     */
    public function hasZoneid(){
      return $this->_has(24);
    }
    
    /**
     * Clear <zoneid> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearZoneid(){
      return $this->_clear(24);
    }
    
    /**
     * Get <zoneid> value
     *
     * @return int
     */
    public function getZoneid(){
      return $this->_get(24);
    }
    
    /**
     * Set <zoneid> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildMember
     */
    public function setZoneid( $value){
      return $this->_set(24, $value);
    }
    
    /**
     * Check if <head> has a value
     *
     * @return boolean
     */
    public function hasHead(){
      return $this->_has(25);
    }
    
    /**
     * Clear <head> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearHead(){
      return $this->_clear(25);
    }
    
    /**
     * Get <head> value
     *
     * @return int
     */
    public function getHead(){
      return $this->_get(25);
    }
    
    /**
     * Set <head> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildMember
     */
    public function setHead( $value){
      return $this->_set(25, $value);
    }
    
    /**
     * Check if <face> has a value
     *
     * @return boolean
     */
    public function hasFace(){
      return $this->_has(28);
    }
    
    /**
     * Clear <face> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearFace(){
      return $this->_clear(28);
    }
    
    /**
     * Get <face> value
     *
     * @return int
     */
    public function getFace(){
      return $this->_get(28);
    }
    
    /**
     * Set <face> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildMember
     */
    public function setFace( $value){
      return $this->_set(28, $value);
    }
    
    /**
     * Check if <mouth> has a value
     *
     * @return boolean
     */
    public function hasMouth(){
      return $this->_has(29);
    }
    
    /**
     * Clear <mouth> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearMouth(){
      return $this->_clear(29);
    }
    
    /**
     * Get <mouth> value
     *
     * @return int
     */
    public function getMouth(){
      return $this->_get(29);
    }
    
    /**
     * Set <mouth> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildMember
     */
    public function setMouth( $value){
      return $this->_set(29, $value);
    }
    
    /**
     * Check if <eye> has a value
     *
     * @return boolean
     */
    public function hasEye(){
      return $this->_has(30);
    }
    
    /**
     * Clear <eye> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearEye(){
      return $this->_clear(30);
    }
    
    /**
     * Get <eye> value
     *
     * @return int
     */
    public function getEye(){
      return $this->_get(30);
    }
    
    /**
     * Set <eye> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildMember
     */
    public function setEye( $value){
      return $this->_set(30, $value);
    }
    
    /**
     * Check if <gender> has a value
     *
     * @return boolean
     */
    public function hasGender(){
      return $this->_has(10);
    }
    
    /**
     * Clear <gender> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearGender(){
      return $this->_clear(10);
    }
    
    /**
     * Get <gender> value
     *
     * @return int - \RO\Cmd\EGender
     */
    public function getGender(){
      return $this->_get(10);
    }
    
    /**
     * Set <gender> value
     *
     * @param int - \RO\Cmd\EGender $value
     * @return \RO\Cmd\GuildMember
     */
    public function setGender( $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <profession> has a value
     *
     * @return boolean
     */
    public function hasProfession(){
      return $this->_has(11);
    }
    
    /**
     * Clear <profession> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearProfession(){
      return $this->_clear(11);
    }
    
    /**
     * Get <profession> value
     *
     * @return int - \RO\Cmd\EProfession
     */
    public function getProfession(){
      return $this->_get(11);
    }
    
    /**
     * Set <profession> value
     *
     * @param int - \RO\Cmd\EProfession $value
     * @return \RO\Cmd\GuildMember
     */
    public function setProfession( $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <job> has a value
     *
     * @return boolean
     */
    public function hasJob(){
      return $this->_has(12);
    }
    
    /**
     * Clear <job> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearJob(){
      return $this->_clear(12);
    }
    
    /**
     * Get <job> value
     *
     * @return int - \RO\Cmd\EGuildJob
     */
    public function getJob(){
      return $this->_get(12);
    }
    
    /**
     * Set <job> value
     *
     * @param int - \RO\Cmd\EGuildJob $value
     * @return \RO\Cmd\GuildMember
     */
    public function setJob( $value){
      return $this->_set(12, $value);
    }
    
    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(13);
    }
    
    /**
     * Clear <name> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearName(){
      return $this->_clear(13);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(13);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \RO\Cmd\GuildMember
     */
    public function setName( $value){
      return $this->_set(13, $value);
    }
    
    /**
     * Check if <var> has a value
     *
     * @return boolean
     */
    public function hasVar(){
      return $this->_has(14);
    }
    
    /**
     * Clear <var> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearVar(){
      return $this->_clear(14);
    }
    
    /**
     * Get <var> value
     *
     * @return string
     */
    public function getVar(){
      return $this->_get(14);
    }
    
    /**
     * Set <var> value
     *
     * @param string $value
     * @return \RO\Cmd\GuildMember
     */
    public function setVar( $value){
      return $this->_set(14, $value);
    }
    
    /**
     * Check if <pray> has a value
     *
     * @return boolean
     */
    public function hasPray(){
      return $this->_has(15);
    }
    
    /**
     * Clear <pray> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearPray(){
      return $this->_clear(15);
    }
    
    /**
     * Get <pray> value
     *
     * @return \RO\Cmd\BlobGuildPray
     */
    public function getPray(){
      return $this->_get(15);
    }
    
    /**
     * Set <pray> value
     *
     * @param \RO\Cmd\BlobGuildPray $value
     * @return \RO\Cmd\GuildMember
     */
    public function setPray(\RO\Cmd\BlobGuildPray $value){
      return $this->_set(15, $value);
    }
    
    /**
     * Check if <donate> has a value
     *
     * @return boolean
     */
    public function hasDonate(){
      return $this->_has(21);
    }
    
    /**
     * Clear <donate> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearDonate(){
      return $this->_clear(21);
    }
    
    /**
     * Get <donate> value
     *
     * @return \RO\Cmd\BlobDonate
     */
    public function getDonate(){
      return $this->_get(21);
    }
    
    /**
     * Set <donate> value
     *
     * @param \RO\Cmd\BlobDonate $value
     * @return \RO\Cmd\GuildMember
     */
    public function setDonate(\RO\Cmd\BlobDonate $value){
      return $this->_set(21, $value);
    }
    
    /**
     * Check if <levelupeffect> has a value
     *
     * @return boolean
     */
    public function hasLevelupeffect(){
      return $this->_has(20);
    }
    
    /**
     * Clear <levelupeffect> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearLevelupeffect(){
      return $this->_clear(20);
    }
    
    /**
     * Get <levelupeffect> value
     *
     * @return boolean
     */
    public function getLevelupeffect(){
      return $this->_get(20);
    }
    
    /**
     * Set <levelupeffect> value
     *
     * @param boolean $value
     * @return \RO\Cmd\GuildMember
     */
    public function setLevelupeffect( $value){
      return $this->_set(20, $value);
    }
    
    /**
     * Check if <exchangezone> has a value
     *
     * @return boolean
     */
    public function hasExchangezone(){
      return $this->_has(26);
    }
    
    /**
     * Clear <exchangezone> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearExchangezone(){
      return $this->_clear(26);
    }
    
    /**
     * Get <exchangezone> value
     *
     * @return boolean
     */
    public function getExchangezone(){
      return $this->_get(26);
    }
    
    /**
     * Set <exchangezone> value
     *
     * @param boolean $value
     * @return \RO\Cmd\GuildMember
     */
    public function setExchangezone( $value){
      return $this->_set(26, $value);
    }
    
    /**
     * Check if <accid> has a value
     *
     * @return boolean
     */
    public function hasAccid(){
      return $this->_has(27);
    }
    
    /**
     * Clear <accid> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearAccid(){
      return $this->_clear(27);
    }
    
    /**
     * Get <accid> value
     *
     * @return int
     */
    public function getAccid(){
      return $this->_get(27);
    }
    
    /**
     * Set <accid> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildMember
     */
    public function setAccid( $value){
      return $this->_set(27, $value);
    }
    
    /**
     * Check if <building> has a value
     *
     * @return boolean
     */
    public function hasBuilding(){
      return $this->_has(31);
    }
    
    /**
     * Clear <building> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearBuilding(){
      return $this->_clear(31);
    }
    
    /**
     * Get <building> value
     *
     * @return \RO\Cmd\BlobGuildBuilding
     */
    public function getBuilding(){
      return $this->_get(31);
    }
    
    /**
     * Set <building> value
     *
     * @param \RO\Cmd\BlobGuildBuilding $value
     * @return \RO\Cmd\GuildMember
     */
    public function setBuilding(\RO\Cmd\BlobGuildBuilding $value){
      return $this->_set(31, $value);
    }
    
    /**
     * Check if <challenge> has a value
     *
     * @return boolean
     */
    public function hasChallenge(){
      return $this->_has(32);
    }
    
    /**
     * Clear <challenge> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearChallenge(){
      return $this->_clear(32);
    }
    
    /**
     * Get <challenge> value
     *
     * @return int
     */
    public function getChallenge(){
      return $this->_get(32);
    }
    
    /**
     * Set <challenge> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildMember
     */
    public function setChallenge( $value){
      return $this->_set(32, $value);
    }
    
    /**
     * Check if <lastexittime> has a value
     *
     * @return boolean
     */
    public function hasLastexittime(){
      return $this->_has(33);
    }
    
    /**
     * Clear <lastexittime> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearLastexittime(){
      return $this->_clear(33);
    }
    
    /**
     * Get <lastexittime> value
     *
     * @return int
     */
    public function getLastexittime(){
      return $this->_get(33);
    }
    
    /**
     * Set <lastexittime> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildMember
     */
    public function setLastexittime( $value){
      return $this->_set(33, $value);
    }
    
    /**
     * Check if <redtip> has a value
     *
     * @return boolean
     */
    public function hasRedtip(){
      return $this->_has(34);
    }
    
    /**
     * Clear <redtip> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearRedtip(){
      return $this->_clear(34);
    }
    
    /**
     * Get <redtip> value
     *
     * @return int
     */
    public function getRedtip(){
      return $this->_get(34);
    }
    
    /**
     * Set <redtip> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildMember
     */
    public function setRedtip( $value){
      return $this->_set(34, $value);
    }
    
    /**
     * Check if <buildingeffect> has a value
     *
     * @return boolean
     */
    public function hasBuildingeffect(){
      return $this->_has(35);
    }
    
    /**
     * Clear <buildingeffect> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearBuildingeffect(){
      return $this->_clear(35);
    }
    
    /**
     * Get <buildingeffect> value
     *
     * @return boolean
     */
    public function getBuildingeffect(){
      return $this->_get(35);
    }
    
    /**
     * Set <buildingeffect> value
     *
     * @param boolean $value
     * @return \RO\Cmd\GuildMember
     */
    public function setBuildingeffect( $value){
      return $this->_set(35, $value);
    }
    
    /**
     * Check if <realtimevoice> has a value
     *
     * @return boolean
     */
    public function hasRealtimevoice(){
      return $this->_has(36);
    }
    
    /**
     * Clear <realtimevoice> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearRealtimevoice(){
      return $this->_clear(36);
    }
    
    /**
     * Get <realtimevoice> value
     *
     * @return boolean
     */
    public function getRealtimevoice(){
      return $this->_get(36);
    }
    
    /**
     * Set <realtimevoice> value
     *
     * @param boolean $value
     * @return \RO\Cmd\GuildMember
     */
    public function setRealtimevoice( $value){
      return $this->_set(36, $value);
    }
    
    /**
     * Check if <weekbcoin> has a value
     *
     * @return boolean
     */
    public function hasWeekbcoin(){
      return $this->_has(37);
    }
    
    /**
     * Clear <weekbcoin> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearWeekbcoin(){
      return $this->_clear(37);
    }
    
    /**
     * Get <weekbcoin> value
     *
     * @return int
     */
    public function getWeekbcoin(){
      return $this->_get(37);
    }
    
    /**
     * Set <weekbcoin> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildMember
     */
    public function setWeekbcoin( $value){
      return $this->_set(37, $value);
    }
    
    /**
     * Check if <totalcoin> has a value
     *
     * @return boolean
     */
    public function hasTotalcoin(){
      return $this->_has(38);
    }
    
    /**
     * Clear <totalcoin> value
     *
     * @return \RO\Cmd\GuildMember
     */
    public function clearTotalcoin(){
      return $this->_clear(38);
    }
    
    /**
     * Get <totalcoin> value
     *
     * @return int
     */
    public function getTotalcoin(){
      return $this->_get(38);
    }
    
    /**
     * Set <totalcoin> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildMember
     */
    public function setTotalcoin( $value){
      return $this->_set(38, $value);
    }
  }
}

