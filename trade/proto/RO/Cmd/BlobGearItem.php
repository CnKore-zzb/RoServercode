<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: RecordCmd.proto

namespace RO\Cmd {

  class BlobGearItem extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $gearid = null;
    
    /**  @var int */
    public $state = null;
    
    /**  @var int */
    public $sceneid = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.BlobGearItem');

      // OPTIONAL UINT32 gearid = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "gearid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 state = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "state";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 sceneid = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "sceneid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <gearid> has a value
     *
     * @return boolean
     */
    public function hasGearid(){
      return $this->_has(1);
    }
    
    /**
     * Clear <gearid> value
     *
     * @return \RO\Cmd\BlobGearItem
     */
    public function clearGearid(){
      return $this->_clear(1);
    }
    
    /**
     * Get <gearid> value
     *
     * @return int
     */
    public function getGearid(){
      return $this->_get(1);
    }
    
    /**
     * Set <gearid> value
     *
     * @param int $value
     * @return \RO\Cmd\BlobGearItem
     */
    public function setGearid( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <state> has a value
     *
     * @return boolean
     */
    public function hasState(){
      return $this->_has(2);
    }
    
    /**
     * Clear <state> value
     *
     * @return \RO\Cmd\BlobGearItem
     */
    public function clearState(){
      return $this->_clear(2);
    }
    
    /**
     * Get <state> value
     *
     * @return int
     */
    public function getState(){
      return $this->_get(2);
    }
    
    /**
     * Set <state> value
     *
     * @param int $value
     * @return \RO\Cmd\BlobGearItem
     */
    public function setState( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <sceneid> has a value
     *
     * @return boolean
     */
    public function hasSceneid(){
      return $this->_has(3);
    }
    
    /**
     * Clear <sceneid> value
     *
     * @return \RO\Cmd\BlobGearItem
     */
    public function clearSceneid(){
      return $this->_clear(3);
    }
    
    /**
     * Get <sceneid> value
     *
     * @return int
     */
    public function getSceneid(){
      return $this->_get(3);
    }
    
    /**
     * Set <sceneid> value
     *
     * @param int $value
     * @return \RO\Cmd\BlobGearItem
     */
    public function setSceneid( $value){
      return $this->_set(3, $value);
    }
  }
}

