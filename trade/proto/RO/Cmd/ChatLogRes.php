<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: LogCmd.proto

namespace RO\Cmd {

  class ChatLogRes extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $sendid = null;
    
    /**  @var string */
    public $sendname = null;
    
    /**  @var int */
    public $recvid = null;
    
    /**  @var string */
    public $recvname = null;
    
    /**  @var int */
    public $createtime = null;
    
    /**  @var string */
    public $content = null;
    
    /**  @var int */
    public $voicelen = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.ChatLogRes');

      // OPTIONAL UINT64 sendid = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "sendid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING sendname = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "sendname";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT64 recvid = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "recvid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING recvname = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "recvname";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 createtime = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "createtime";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING content = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "content";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 voicelen = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "voicelen";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <sendid> has a value
     *
     * @return boolean
     */
    public function hasSendid(){
      return $this->_has(1);
    }
    
    /**
     * Clear <sendid> value
     *
     * @return \RO\Cmd\ChatLogRes
     */
    public function clearSendid(){
      return $this->_clear(1);
    }
    
    /**
     * Get <sendid> value
     *
     * @return int
     */
    public function getSendid(){
      return $this->_get(1);
    }
    
    /**
     * Set <sendid> value
     *
     * @param int $value
     * @return \RO\Cmd\ChatLogRes
     */
    public function setSendid( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <sendname> has a value
     *
     * @return boolean
     */
    public function hasSendname(){
      return $this->_has(2);
    }
    
    /**
     * Clear <sendname> value
     *
     * @return \RO\Cmd\ChatLogRes
     */
    public function clearSendname(){
      return $this->_clear(2);
    }
    
    /**
     * Get <sendname> value
     *
     * @return string
     */
    public function getSendname(){
      return $this->_get(2);
    }
    
    /**
     * Set <sendname> value
     *
     * @param string $value
     * @return \RO\Cmd\ChatLogRes
     */
    public function setSendname( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <recvid> has a value
     *
     * @return boolean
     */
    public function hasRecvid(){
      return $this->_has(3);
    }
    
    /**
     * Clear <recvid> value
     *
     * @return \RO\Cmd\ChatLogRes
     */
    public function clearRecvid(){
      return $this->_clear(3);
    }
    
    /**
     * Get <recvid> value
     *
     * @return int
     */
    public function getRecvid(){
      return $this->_get(3);
    }
    
    /**
     * Set <recvid> value
     *
     * @param int $value
     * @return \RO\Cmd\ChatLogRes
     */
    public function setRecvid( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <recvname> has a value
     *
     * @return boolean
     */
    public function hasRecvname(){
      return $this->_has(4);
    }
    
    /**
     * Clear <recvname> value
     *
     * @return \RO\Cmd\ChatLogRes
     */
    public function clearRecvname(){
      return $this->_clear(4);
    }
    
    /**
     * Get <recvname> value
     *
     * @return string
     */
    public function getRecvname(){
      return $this->_get(4);
    }
    
    /**
     * Set <recvname> value
     *
     * @param string $value
     * @return \RO\Cmd\ChatLogRes
     */
    public function setRecvname( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <createtime> has a value
     *
     * @return boolean
     */
    public function hasCreatetime(){
      return $this->_has(5);
    }
    
    /**
     * Clear <createtime> value
     *
     * @return \RO\Cmd\ChatLogRes
     */
    public function clearCreatetime(){
      return $this->_clear(5);
    }
    
    /**
     * Get <createtime> value
     *
     * @return int
     */
    public function getCreatetime(){
      return $this->_get(5);
    }
    
    /**
     * Set <createtime> value
     *
     * @param int $value
     * @return \RO\Cmd\ChatLogRes
     */
    public function setCreatetime( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <content> has a value
     *
     * @return boolean
     */
    public function hasContent(){
      return $this->_has(6);
    }
    
    /**
     * Clear <content> value
     *
     * @return \RO\Cmd\ChatLogRes
     */
    public function clearContent(){
      return $this->_clear(6);
    }
    
    /**
     * Get <content> value
     *
     * @return string
     */
    public function getContent(){
      return $this->_get(6);
    }
    
    /**
     * Set <content> value
     *
     * @param string $value
     * @return \RO\Cmd\ChatLogRes
     */
    public function setContent( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <voicelen> has a value
     *
     * @return boolean
     */
    public function hasVoicelen(){
      return $this->_has(7);
    }
    
    /**
     * Clear <voicelen> value
     *
     * @return \RO\Cmd\ChatLogRes
     */
    public function clearVoicelen(){
      return $this->_clear(7);
    }
    
    /**
     * Get <voicelen> value
     *
     * @return int
     */
    public function getVoicelen(){
      return $this->_get(7);
    }
    
    /**
     * Set <voicelen> value
     *
     * @param int $value
     * @return \RO\Cmd\ChatLogRes
     */
    public function setVoicelen( $value){
      return $this->_set(7, $value);
    }
  }
}

