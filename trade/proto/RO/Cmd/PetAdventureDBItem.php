<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: RecordCmd.proto

namespace RO\Cmd {

  class PetAdventureDBItem extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $id = 0;
    
    /**  @var int */
    public $starttime = 0;
    
    /**  @var int - \RO\Cmd\EPetAdventureStatus */
    public $status = \RO\Cmd\EPetAdventureStatus::EPETADVENTURESTATUS_MIN;
    
    /**  @var \RO\Cmd\ItemData[]  */
    public $eggs = array();
    
    /**  @var \RO\Cmd\PetAdventureStep[]  */
    public $steps = array();
    
    /**  @var \RO\Cmd\ItemData[]  */
    public $raresreward = array();
    
    /**  @var int */
    public $specid = 0;
    
    /**  @var \RO\Cmd\PetEfficiencyInfo[]  */
    public $eff = array();
    
    /**  @var \RO\Cmd\PetMonsterRewardInfo[]  */
    public $rewardinfo = array();
    
    /**  @var \RO\Cmd\ItemData[]  */
    public $extrarewardinfo = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.PetAdventureDBItem');

      // OPTIONAL UINT32 id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "id";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 starttime = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "starttime";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL ENUM status = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "status";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\EPetAdventureStatus';
      $f->default   = \RO\Cmd\EPetAdventureStatus::EPETADVENTURESTATUS_MIN;
      $descriptor->addField($f);

      // REPEATED MESSAGE eggs = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "eggs";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\ItemData';
      $descriptor->addField($f);

      // REPEATED MESSAGE steps = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "steps";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\PetAdventureStep';
      $descriptor->addField($f);

      // REPEATED MESSAGE raresreward = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "raresreward";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\ItemData';
      $descriptor->addField($f);

      // OPTIONAL UINT32 specid = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "specid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // REPEATED MESSAGE eff = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "eff";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\PetEfficiencyInfo';
      $descriptor->addField($f);

      // REPEATED MESSAGE rewardinfo = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "rewardinfo";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\PetMonsterRewardInfo';
      $descriptor->addField($f);

      // REPEATED MESSAGE extrarewardinfo = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "extrarewardinfo";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\ItemData';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <id> has a value
     *
     * @return boolean
     */
    public function hasId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <id> value
     *
     * @return \RO\Cmd\PetAdventureDBItem
     */
    public function clearId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <id> value
     *
     * @return int
     */
    public function getId(){
      return $this->_get(1);
    }
    
    /**
     * Set <id> value
     *
     * @param int $value
     * @return \RO\Cmd\PetAdventureDBItem
     */
    public function setId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <starttime> has a value
     *
     * @return boolean
     */
    public function hasStarttime(){
      return $this->_has(2);
    }
    
    /**
     * Clear <starttime> value
     *
     * @return \RO\Cmd\PetAdventureDBItem
     */
    public function clearStarttime(){
      return $this->_clear(2);
    }
    
    /**
     * Get <starttime> value
     *
     * @return int
     */
    public function getStarttime(){
      return $this->_get(2);
    }
    
    /**
     * Set <starttime> value
     *
     * @param int $value
     * @return \RO\Cmd\PetAdventureDBItem
     */
    public function setStarttime( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <status> has a value
     *
     * @return boolean
     */
    public function hasStatus(){
      return $this->_has(3);
    }
    
    /**
     * Clear <status> value
     *
     * @return \RO\Cmd\PetAdventureDBItem
     */
    public function clearStatus(){
      return $this->_clear(3);
    }
    
    /**
     * Get <status> value
     *
     * @return int - \RO\Cmd\EPetAdventureStatus
     */
    public function getStatus(){
      return $this->_get(3);
    }
    
    /**
     * Set <status> value
     *
     * @param int - \RO\Cmd\EPetAdventureStatus $value
     * @return \RO\Cmd\PetAdventureDBItem
     */
    public function setStatus( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <eggs> has a value
     *
     * @return boolean
     */
    public function hasEggs(){
      return $this->_has(4);
    }
    
    /**
     * Clear <eggs> value
     *
     * @return \RO\Cmd\PetAdventureDBItem
     */
    public function clearEggs(){
      return $this->_clear(4);
    }
    
    /**
     * Get <eggs> value
     *
     * @param int $idx
     * @return \RO\Cmd\ItemData
     */
    public function getEggs($idx = NULL){
      return $this->_get(4, $idx);
    }
    
    /**
     * Set <eggs> value
     *
     * @param \RO\Cmd\ItemData $value
     * @return \RO\Cmd\PetAdventureDBItem
     */
    public function setEggs(\RO\Cmd\ItemData $value, $idx = NULL){
      return $this->_set(4, $value, $idx);
    }
    
    /**
     * Get all elements of <eggs>
     *
     * @return \RO\Cmd\ItemData[]
     */
    public function getEggsList(){
     return $this->_get(4);
    }
    
    /**
     * Add a new element to <eggs>
     *
     * @param \RO\Cmd\ItemData $value
     * @return \RO\Cmd\PetAdventureDBItem
     */
    public function addEggs(\RO\Cmd\ItemData $value){
     return $this->_add(4, $value);
    }
    
    /**
     * Check if <steps> has a value
     *
     * @return boolean
     */
    public function hasSteps(){
      return $this->_has(5);
    }
    
    /**
     * Clear <steps> value
     *
     * @return \RO\Cmd\PetAdventureDBItem
     */
    public function clearSteps(){
      return $this->_clear(5);
    }
    
    /**
     * Get <steps> value
     *
     * @param int $idx
     * @return \RO\Cmd\PetAdventureStep
     */
    public function getSteps($idx = NULL){
      return $this->_get(5, $idx);
    }
    
    /**
     * Set <steps> value
     *
     * @param \RO\Cmd\PetAdventureStep $value
     * @return \RO\Cmd\PetAdventureDBItem
     */
    public function setSteps(\RO\Cmd\PetAdventureStep $value, $idx = NULL){
      return $this->_set(5, $value, $idx);
    }
    
    /**
     * Get all elements of <steps>
     *
     * @return \RO\Cmd\PetAdventureStep[]
     */
    public function getStepsList(){
     return $this->_get(5);
    }
    
    /**
     * Add a new element to <steps>
     *
     * @param \RO\Cmd\PetAdventureStep $value
     * @return \RO\Cmd\PetAdventureDBItem
     */
    public function addSteps(\RO\Cmd\PetAdventureStep $value){
     return $this->_add(5, $value);
    }
    
    /**
     * Check if <raresreward> has a value
     *
     * @return boolean
     */
    public function hasRaresreward(){
      return $this->_has(6);
    }
    
    /**
     * Clear <raresreward> value
     *
     * @return \RO\Cmd\PetAdventureDBItem
     */
    public function clearRaresreward(){
      return $this->_clear(6);
    }
    
    /**
     * Get <raresreward> value
     *
     * @param int $idx
     * @return \RO\Cmd\ItemData
     */
    public function getRaresreward($idx = NULL){
      return $this->_get(6, $idx);
    }
    
    /**
     * Set <raresreward> value
     *
     * @param \RO\Cmd\ItemData $value
     * @return \RO\Cmd\PetAdventureDBItem
     */
    public function setRaresreward(\RO\Cmd\ItemData $value, $idx = NULL){
      return $this->_set(6, $value, $idx);
    }
    
    /**
     * Get all elements of <raresreward>
     *
     * @return \RO\Cmd\ItemData[]
     */
    public function getRaresrewardList(){
     return $this->_get(6);
    }
    
    /**
     * Add a new element to <raresreward>
     *
     * @param \RO\Cmd\ItemData $value
     * @return \RO\Cmd\PetAdventureDBItem
     */
    public function addRaresreward(\RO\Cmd\ItemData $value){
     return $this->_add(6, $value);
    }
    
    /**
     * Check if <specid> has a value
     *
     * @return boolean
     */
    public function hasSpecid(){
      return $this->_has(7);
    }
    
    /**
     * Clear <specid> value
     *
     * @return \RO\Cmd\PetAdventureDBItem
     */
    public function clearSpecid(){
      return $this->_clear(7);
    }
    
    /**
     * Get <specid> value
     *
     * @return int
     */
    public function getSpecid(){
      return $this->_get(7);
    }
    
    /**
     * Set <specid> value
     *
     * @param int $value
     * @return \RO\Cmd\PetAdventureDBItem
     */
    public function setSpecid( $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <eff> has a value
     *
     * @return boolean
     */
    public function hasEff(){
      return $this->_has(8);
    }
    
    /**
     * Clear <eff> value
     *
     * @return \RO\Cmd\PetAdventureDBItem
     */
    public function clearEff(){
      return $this->_clear(8);
    }
    
    /**
     * Get <eff> value
     *
     * @param int $idx
     * @return \RO\Cmd\PetEfficiencyInfo
     */
    public function getEff($idx = NULL){
      return $this->_get(8, $idx);
    }
    
    /**
     * Set <eff> value
     *
     * @param \RO\Cmd\PetEfficiencyInfo $value
     * @return \RO\Cmd\PetAdventureDBItem
     */
    public function setEff(\RO\Cmd\PetEfficiencyInfo $value, $idx = NULL){
      return $this->_set(8, $value, $idx);
    }
    
    /**
     * Get all elements of <eff>
     *
     * @return \RO\Cmd\PetEfficiencyInfo[]
     */
    public function getEffList(){
     return $this->_get(8);
    }
    
    /**
     * Add a new element to <eff>
     *
     * @param \RO\Cmd\PetEfficiencyInfo $value
     * @return \RO\Cmd\PetAdventureDBItem
     */
    public function addEff(\RO\Cmd\PetEfficiencyInfo $value){
     return $this->_add(8, $value);
    }
    
    /**
     * Check if <rewardinfo> has a value
     *
     * @return boolean
     */
    public function hasRewardinfo(){
      return $this->_has(9);
    }
    
    /**
     * Clear <rewardinfo> value
     *
     * @return \RO\Cmd\PetAdventureDBItem
     */
    public function clearRewardinfo(){
      return $this->_clear(9);
    }
    
    /**
     * Get <rewardinfo> value
     *
     * @param int $idx
     * @return \RO\Cmd\PetMonsterRewardInfo
     */
    public function getRewardinfo($idx = NULL){
      return $this->_get(9, $idx);
    }
    
    /**
     * Set <rewardinfo> value
     *
     * @param \RO\Cmd\PetMonsterRewardInfo $value
     * @return \RO\Cmd\PetAdventureDBItem
     */
    public function setRewardinfo(\RO\Cmd\PetMonsterRewardInfo $value, $idx = NULL){
      return $this->_set(9, $value, $idx);
    }
    
    /**
     * Get all elements of <rewardinfo>
     *
     * @return \RO\Cmd\PetMonsterRewardInfo[]
     */
    public function getRewardinfoList(){
     return $this->_get(9);
    }
    
    /**
     * Add a new element to <rewardinfo>
     *
     * @param \RO\Cmd\PetMonsterRewardInfo $value
     * @return \RO\Cmd\PetAdventureDBItem
     */
    public function addRewardinfo(\RO\Cmd\PetMonsterRewardInfo $value){
     return $this->_add(9, $value);
    }
    
    /**
     * Check if <extrarewardinfo> has a value
     *
     * @return boolean
     */
    public function hasExtrarewardinfo(){
      return $this->_has(10);
    }
    
    /**
     * Clear <extrarewardinfo> value
     *
     * @return \RO\Cmd\PetAdventureDBItem
     */
    public function clearExtrarewardinfo(){
      return $this->_clear(10);
    }
    
    /**
     * Get <extrarewardinfo> value
     *
     * @param int $idx
     * @return \RO\Cmd\ItemData
     */
    public function getExtrarewardinfo($idx = NULL){
      return $this->_get(10, $idx);
    }
    
    /**
     * Set <extrarewardinfo> value
     *
     * @param \RO\Cmd\ItemData $value
     * @return \RO\Cmd\PetAdventureDBItem
     */
    public function setExtrarewardinfo(\RO\Cmd\ItemData $value, $idx = NULL){
      return $this->_set(10, $value, $idx);
    }
    
    /**
     * Get all elements of <extrarewardinfo>
     *
     * @return \RO\Cmd\ItemData[]
     */
    public function getExtrarewardinfoList(){
     return $this->_get(10);
    }
    
    /**
     * Add a new element to <extrarewardinfo>
     *
     * @param \RO\Cmd\ItemData $value
     * @return \RO\Cmd\PetAdventureDBItem
     */
    public function addExtrarewardinfo(\RO\Cmd\ItemData $value){
     return $this->_add(10, $value);
    }
  }
}

