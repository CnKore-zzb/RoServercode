<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: RecordCmd.proto

namespace RO\Cmd {

  class BlobExchangeShop extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $version = 0;
    
    /**  @var boolean */
    public $menuopen = false;
    
    /**  @var \RO\Cmd\ExchangeShopItem[]  */
    public $items = array();
    
    /**  @var \RO\Cmd\ItemGetCount[]  */
    public $itemget = array();
    
    /**  @var int[]  */
    public $exchanged_goods = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.BlobExchangeShop');

      // OPTIONAL UINT32 version = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "version";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL BOOL menuopen = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "menuopen";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // REPEATED MESSAGE items = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "items";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\ExchangeShopItem';
      $descriptor->addField($f);

      // REPEATED MESSAGE itemget = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "itemget";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\ItemGetCount';
      $descriptor->addField($f);

      // REPEATED UINT32 exchanged_goods = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "exchanged_goods";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <version> has a value
     *
     * @return boolean
     */
    public function hasVersion(){
      return $this->_has(1);
    }
    
    /**
     * Clear <version> value
     *
     * @return \RO\Cmd\BlobExchangeShop
     */
    public function clearVersion(){
      return $this->_clear(1);
    }
    
    /**
     * Get <version> value
     *
     * @return int
     */
    public function getVersion(){
      return $this->_get(1);
    }
    
    /**
     * Set <version> value
     *
     * @param int $value
     * @return \RO\Cmd\BlobExchangeShop
     */
    public function setVersion( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <menuopen> has a value
     *
     * @return boolean
     */
    public function hasMenuopen(){
      return $this->_has(2);
    }
    
    /**
     * Clear <menuopen> value
     *
     * @return \RO\Cmd\BlobExchangeShop
     */
    public function clearMenuopen(){
      return $this->_clear(2);
    }
    
    /**
     * Get <menuopen> value
     *
     * @return boolean
     */
    public function getMenuopen(){
      return $this->_get(2);
    }
    
    /**
     * Set <menuopen> value
     *
     * @param boolean $value
     * @return \RO\Cmd\BlobExchangeShop
     */
    public function setMenuopen( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <items> has a value
     *
     * @return boolean
     */
    public function hasItems(){
      return $this->_has(3);
    }
    
    /**
     * Clear <items> value
     *
     * @return \RO\Cmd\BlobExchangeShop
     */
    public function clearItems(){
      return $this->_clear(3);
    }
    
    /**
     * Get <items> value
     *
     * @param int $idx
     * @return \RO\Cmd\ExchangeShopItem
     */
    public function getItems($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <items> value
     *
     * @param \RO\Cmd\ExchangeShopItem $value
     * @return \RO\Cmd\BlobExchangeShop
     */
    public function setItems(\RO\Cmd\ExchangeShopItem $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <items>
     *
     * @return \RO\Cmd\ExchangeShopItem[]
     */
    public function getItemsList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <items>
     *
     * @param \RO\Cmd\ExchangeShopItem $value
     * @return \RO\Cmd\BlobExchangeShop
     */
    public function addItems(\RO\Cmd\ExchangeShopItem $value){
     return $this->_add(3, $value);
    }
    
    /**
     * Check if <itemget> has a value
     *
     * @return boolean
     */
    public function hasItemget(){
      return $this->_has(4);
    }
    
    /**
     * Clear <itemget> value
     *
     * @return \RO\Cmd\BlobExchangeShop
     */
    public function clearItemget(){
      return $this->_clear(4);
    }
    
    /**
     * Get <itemget> value
     *
     * @param int $idx
     * @return \RO\Cmd\ItemGetCount
     */
    public function getItemget($idx = NULL){
      return $this->_get(4, $idx);
    }
    
    /**
     * Set <itemget> value
     *
     * @param \RO\Cmd\ItemGetCount $value
     * @return \RO\Cmd\BlobExchangeShop
     */
    public function setItemget(\RO\Cmd\ItemGetCount $value, $idx = NULL){
      return $this->_set(4, $value, $idx);
    }
    
    /**
     * Get all elements of <itemget>
     *
     * @return \RO\Cmd\ItemGetCount[]
     */
    public function getItemgetList(){
     return $this->_get(4);
    }
    
    /**
     * Add a new element to <itemget>
     *
     * @param \RO\Cmd\ItemGetCount $value
     * @return \RO\Cmd\BlobExchangeShop
     */
    public function addItemget(\RO\Cmd\ItemGetCount $value){
     return $this->_add(4, $value);
    }
    
    /**
     * Check if <exchanged_goods> has a value
     *
     * @return boolean
     */
    public function hasExchangedGoods(){
      return $this->_has(5);
    }
    
    /**
     * Clear <exchanged_goods> value
     *
     * @return \RO\Cmd\BlobExchangeShop
     */
    public function clearExchangedGoods(){
      return $this->_clear(5);
    }
    
    /**
     * Get <exchanged_goods> value
     *
     * @param int $idx
     * @return int
     */
    public function getExchangedGoods($idx = NULL){
      return $this->_get(5, $idx);
    }
    
    /**
     * Set <exchanged_goods> value
     *
     * @param int $value
     * @return \RO\Cmd\BlobExchangeShop
     */
    public function setExchangedGoods( $value, $idx = NULL){
      return $this->_set(5, $value, $idx);
    }
    
    /**
     * Get all elements of <exchanged_goods>
     *
     * @return int[]
     */
    public function getExchangedGoodsList(){
     return $this->_get(5);
    }
    
    /**
     * Add a new element to <exchanged_goods>
     *
     * @param int $value
     * @return \RO\Cmd\BlobExchangeShop
     */
    public function addExchangedGoods( $value){
     return $this->_add(5, $value);
    }
  }
}

