<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: RecordCmd.proto

namespace RO\Cmd {

  class BlobDeposit extends \DrSlump\Protobuf\Message {

    /**  @var \RO\Cmd\DepositTypeData[]  */
    public $typeDatas = array();
    
    /**  @var \RO\Cmd\DepositCardData[]  */
    public $cardDatas = array();
    
    /**  @var \RO\Cmd\ChargeData[]  */
    public $chargeDatas = array();
    
    /**  @var int[]  */
    public $usedcards = array();
    
    /**  @var boolean */
    public $hasquota = false;
    
    /**  @var \RO\Cmd\QuotaDetail[]  */
    public $quota_detail = array();
    
    /**  @var \RO\Cmd\QuotaLog[]  */
    public $quota_log = array();
    
    /**  @var boolean */
    public $getitem = false;
    
    /**  @var int */
    public $quota_lock = 0;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.BlobDeposit');

      // REPEATED MESSAGE typeDatas = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "typeDatas";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\DepositTypeData';
      $descriptor->addField($f);

      // REPEATED MESSAGE cardDatas = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "cardDatas";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\DepositCardData';
      $descriptor->addField($f);

      // REPEATED MESSAGE chargeDatas = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "chargeDatas";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\ChargeData';
      $descriptor->addField($f);

      // REPEATED UINT32 usedcards = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "usedcards";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // OPTIONAL BOOL hasquota = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "hasquota";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // REPEATED MESSAGE quota_detail = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "quota_detail";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\QuotaDetail';
      $descriptor->addField($f);

      // REPEATED MESSAGE quota_log = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "quota_log";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\QuotaLog';
      $descriptor->addField($f);

      // OPTIONAL BOOL getitem = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "getitem";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // OPTIONAL UINT64 quota_lock = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "quota_lock";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <typeDatas> has a value
     *
     * @return boolean
     */
    public function hasTypeDatas(){
      return $this->_has(1);
    }
    
    /**
     * Clear <typeDatas> value
     *
     * @return \RO\Cmd\BlobDeposit
     */
    public function clearTypeDatas(){
      return $this->_clear(1);
    }
    
    /**
     * Get <typeDatas> value
     *
     * @param int $idx
     * @return \RO\Cmd\DepositTypeData
     */
    public function getTypeDatas($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <typeDatas> value
     *
     * @param \RO\Cmd\DepositTypeData $value
     * @return \RO\Cmd\BlobDeposit
     */
    public function setTypeDatas(\RO\Cmd\DepositTypeData $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <typeDatas>
     *
     * @return \RO\Cmd\DepositTypeData[]
     */
    public function getTypeDatasList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <typeDatas>
     *
     * @param \RO\Cmd\DepositTypeData $value
     * @return \RO\Cmd\BlobDeposit
     */
    public function addTypeDatas(\RO\Cmd\DepositTypeData $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <cardDatas> has a value
     *
     * @return boolean
     */
    public function hasCardDatas(){
      return $this->_has(2);
    }
    
    /**
     * Clear <cardDatas> value
     *
     * @return \RO\Cmd\BlobDeposit
     */
    public function clearCardDatas(){
      return $this->_clear(2);
    }
    
    /**
     * Get <cardDatas> value
     *
     * @param int $idx
     * @return \RO\Cmd\DepositCardData
     */
    public function getCardDatas($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <cardDatas> value
     *
     * @param \RO\Cmd\DepositCardData $value
     * @return \RO\Cmd\BlobDeposit
     */
    public function setCardDatas(\RO\Cmd\DepositCardData $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <cardDatas>
     *
     * @return \RO\Cmd\DepositCardData[]
     */
    public function getCardDatasList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <cardDatas>
     *
     * @param \RO\Cmd\DepositCardData $value
     * @return \RO\Cmd\BlobDeposit
     */
    public function addCardDatas(\RO\Cmd\DepositCardData $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <chargeDatas> has a value
     *
     * @return boolean
     */
    public function hasChargeDatas(){
      return $this->_has(3);
    }
    
    /**
     * Clear <chargeDatas> value
     *
     * @return \RO\Cmd\BlobDeposit
     */
    public function clearChargeDatas(){
      return $this->_clear(3);
    }
    
    /**
     * Get <chargeDatas> value
     *
     * @param int $idx
     * @return \RO\Cmd\ChargeData
     */
    public function getChargeDatas($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <chargeDatas> value
     *
     * @param \RO\Cmd\ChargeData $value
     * @return \RO\Cmd\BlobDeposit
     */
    public function setChargeDatas(\RO\Cmd\ChargeData $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <chargeDatas>
     *
     * @return \RO\Cmd\ChargeData[]
     */
    public function getChargeDatasList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <chargeDatas>
     *
     * @param \RO\Cmd\ChargeData $value
     * @return \RO\Cmd\BlobDeposit
     */
    public function addChargeDatas(\RO\Cmd\ChargeData $value){
     return $this->_add(3, $value);
    }
    
    /**
     * Check if <usedcards> has a value
     *
     * @return boolean
     */
    public function hasUsedcards(){
      return $this->_has(4);
    }
    
    /**
     * Clear <usedcards> value
     *
     * @return \RO\Cmd\BlobDeposit
     */
    public function clearUsedcards(){
      return $this->_clear(4);
    }
    
    /**
     * Get <usedcards> value
     *
     * @param int $idx
     * @return int
     */
    public function getUsedcards($idx = NULL){
      return $this->_get(4, $idx);
    }
    
    /**
     * Set <usedcards> value
     *
     * @param int $value
     * @return \RO\Cmd\BlobDeposit
     */
    public function setUsedcards( $value, $idx = NULL){
      return $this->_set(4, $value, $idx);
    }
    
    /**
     * Get all elements of <usedcards>
     *
     * @return int[]
     */
    public function getUsedcardsList(){
     return $this->_get(4);
    }
    
    /**
     * Add a new element to <usedcards>
     *
     * @param int $value
     * @return \RO\Cmd\BlobDeposit
     */
    public function addUsedcards( $value){
     return $this->_add(4, $value);
    }
    
    /**
     * Check if <hasquota> has a value
     *
     * @return boolean
     */
    public function hasHasquota(){
      return $this->_has(5);
    }
    
    /**
     * Clear <hasquota> value
     *
     * @return \RO\Cmd\BlobDeposit
     */
    public function clearHasquota(){
      return $this->_clear(5);
    }
    
    /**
     * Get <hasquota> value
     *
     * @return boolean
     */
    public function getHasquota(){
      return $this->_get(5);
    }
    
    /**
     * Set <hasquota> value
     *
     * @param boolean $value
     * @return \RO\Cmd\BlobDeposit
     */
    public function setHasquota( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <quota_detail> has a value
     *
     * @return boolean
     */
    public function hasQuotaDetail(){
      return $this->_has(6);
    }
    
    /**
     * Clear <quota_detail> value
     *
     * @return \RO\Cmd\BlobDeposit
     */
    public function clearQuotaDetail(){
      return $this->_clear(6);
    }
    
    /**
     * Get <quota_detail> value
     *
     * @param int $idx
     * @return \RO\Cmd\QuotaDetail
     */
    public function getQuotaDetail($idx = NULL){
      return $this->_get(6, $idx);
    }
    
    /**
     * Set <quota_detail> value
     *
     * @param \RO\Cmd\QuotaDetail $value
     * @return \RO\Cmd\BlobDeposit
     */
    public function setQuotaDetail(\RO\Cmd\QuotaDetail $value, $idx = NULL){
      return $this->_set(6, $value, $idx);
    }
    
    /**
     * Get all elements of <quota_detail>
     *
     * @return \RO\Cmd\QuotaDetail[]
     */
    public function getQuotaDetailList(){
     return $this->_get(6);
    }
    
    /**
     * Add a new element to <quota_detail>
     *
     * @param \RO\Cmd\QuotaDetail $value
     * @return \RO\Cmd\BlobDeposit
     */
    public function addQuotaDetail(\RO\Cmd\QuotaDetail $value){
     return $this->_add(6, $value);
    }
    
    /**
     * Check if <quota_log> has a value
     *
     * @return boolean
     */
    public function hasQuotaLog(){
      return $this->_has(7);
    }
    
    /**
     * Clear <quota_log> value
     *
     * @return \RO\Cmd\BlobDeposit
     */
    public function clearQuotaLog(){
      return $this->_clear(7);
    }
    
    /**
     * Get <quota_log> value
     *
     * @param int $idx
     * @return \RO\Cmd\QuotaLog
     */
    public function getQuotaLog($idx = NULL){
      return $this->_get(7, $idx);
    }
    
    /**
     * Set <quota_log> value
     *
     * @param \RO\Cmd\QuotaLog $value
     * @return \RO\Cmd\BlobDeposit
     */
    public function setQuotaLog(\RO\Cmd\QuotaLog $value, $idx = NULL){
      return $this->_set(7, $value, $idx);
    }
    
    /**
     * Get all elements of <quota_log>
     *
     * @return \RO\Cmd\QuotaLog[]
     */
    public function getQuotaLogList(){
     return $this->_get(7);
    }
    
    /**
     * Add a new element to <quota_log>
     *
     * @param \RO\Cmd\QuotaLog $value
     * @return \RO\Cmd\BlobDeposit
     */
    public function addQuotaLog(\RO\Cmd\QuotaLog $value){
     return $this->_add(7, $value);
    }
    
    /**
     * Check if <getitem> has a value
     *
     * @return boolean
     */
    public function hasGetitem(){
      return $this->_has(8);
    }
    
    /**
     * Clear <getitem> value
     *
     * @return \RO\Cmd\BlobDeposit
     */
    public function clearGetitem(){
      return $this->_clear(8);
    }
    
    /**
     * Get <getitem> value
     *
     * @return boolean
     */
    public function getGetitem(){
      return $this->_get(8);
    }
    
    /**
     * Set <getitem> value
     *
     * @param boolean $value
     * @return \RO\Cmd\BlobDeposit
     */
    public function setGetitem( $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <quota_lock> has a value
     *
     * @return boolean
     */
    public function hasQuotaLock(){
      return $this->_has(9);
    }
    
    /**
     * Clear <quota_lock> value
     *
     * @return \RO\Cmd\BlobDeposit
     */
    public function clearQuotaLock(){
      return $this->_clear(9);
    }
    
    /**
     * Get <quota_lock> value
     *
     * @return int
     */
    public function getQuotaLock(){
      return $this->_get(9);
    }
    
    /**
     * Set <quota_lock> value
     *
     * @param int $value
     * @return \RO\Cmd\BlobDeposit
     */
    public function setQuotaLock( $value){
      return $this->_set(9, $value);
    }
  }
}

