<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: ProtoCommon.proto

namespace RO\Cmd {

  class FrostItemInfo extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $item_id = null;
    
    /**  @var int */
    public $frosted_time = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.FrostItemInfo');

      // OPTIONAL UINT32 item_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "item_id";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT64 frosted_time = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "frosted_time";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <item_id> has a value
     *
     * @return boolean
     */
    public function hasItemId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <item_id> value
     *
     * @return \RO\Cmd\FrostItemInfo
     */
    public function clearItemId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <item_id> value
     *
     * @return int
     */
    public function getItemId(){
      return $this->_get(1);
    }
    
    /**
     * Set <item_id> value
     *
     * @param int $value
     * @return \RO\Cmd\FrostItemInfo
     */
    public function setItemId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <frosted_time> has a value
     *
     * @return boolean
     */
    public function hasFrostedTime(){
      return $this->_has(2);
    }
    
    /**
     * Clear <frosted_time> value
     *
     * @return \RO\Cmd\FrostItemInfo
     */
    public function clearFrostedTime(){
      return $this->_clear(2);
    }
    
    /**
     * Get <frosted_time> value
     *
     * @return int
     */
    public function getFrostedTime(){
      return $this->_get(2);
    }
    
    /**
     * Set <frosted_time> value
     *
     * @param int $value
     * @return \RO\Cmd\FrostItemInfo
     */
    public function setFrostedTime( $value){
      return $this->_set(2, $value);
    }
  }
}

