<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: SceneChatRoom.proto

namespace RO\Cmd {

  class ChatRoomData extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $roomid = 0;
    
    /**  @var string */
    public $name = null;
    
    /**  @var string */
    public $pswd = null;
    
    /**  @var int */
    public $ownerid = 0;
    
    /**  @var int */
    public $maxnum = 2;
    
    /**  @var int - \RO\Cmd\EChatRoomType */
    public $roomtype = \RO\Cmd\EChatRoomType::ECHATROOMTYPE_PUBLIC;
    
    /**  @var \RO\Cmd\ChatRoomMember[]  */
    public $members = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.ChatRoomData');

      // OPTIONAL UINT32 roomid = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "roomid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL STRING name = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING pswd = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "pswd";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT64 ownerid = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "ownerid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 maxnum = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "maxnum";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 2;
      $descriptor->addField($f);

      // OPTIONAL ENUM roomtype = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "roomtype";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\EChatRoomType';
      $f->default   = \RO\Cmd\EChatRoomType::ECHATROOMTYPE_PUBLIC;
      $descriptor->addField($f);

      // REPEATED MESSAGE members = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "members";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\ChatRoomMember';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <roomid> has a value
     *
     * @return boolean
     */
    public function hasRoomid(){
      return $this->_has(1);
    }
    
    /**
     * Clear <roomid> value
     *
     * @return \RO\Cmd\ChatRoomData
     */
    public function clearRoomid(){
      return $this->_clear(1);
    }
    
    /**
     * Get <roomid> value
     *
     * @return int
     */
    public function getRoomid(){
      return $this->_get(1);
    }
    
    /**
     * Set <roomid> value
     *
     * @param int $value
     * @return \RO\Cmd\ChatRoomData
     */
    public function setRoomid( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(2);
    }
    
    /**
     * Clear <name> value
     *
     * @return \RO\Cmd\ChatRoomData
     */
    public function clearName(){
      return $this->_clear(2);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(2);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \RO\Cmd\ChatRoomData
     */
    public function setName( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <pswd> has a value
     *
     * @return boolean
     */
    public function hasPswd(){
      return $this->_has(3);
    }
    
    /**
     * Clear <pswd> value
     *
     * @return \RO\Cmd\ChatRoomData
     */
    public function clearPswd(){
      return $this->_clear(3);
    }
    
    /**
     * Get <pswd> value
     *
     * @return string
     */
    public function getPswd(){
      return $this->_get(3);
    }
    
    /**
     * Set <pswd> value
     *
     * @param string $value
     * @return \RO\Cmd\ChatRoomData
     */
    public function setPswd( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <ownerid> has a value
     *
     * @return boolean
     */
    public function hasOwnerid(){
      return $this->_has(4);
    }
    
    /**
     * Clear <ownerid> value
     *
     * @return \RO\Cmd\ChatRoomData
     */
    public function clearOwnerid(){
      return $this->_clear(4);
    }
    
    /**
     * Get <ownerid> value
     *
     * @return int
     */
    public function getOwnerid(){
      return $this->_get(4);
    }
    
    /**
     * Set <ownerid> value
     *
     * @param int $value
     * @return \RO\Cmd\ChatRoomData
     */
    public function setOwnerid( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <maxnum> has a value
     *
     * @return boolean
     */
    public function hasMaxnum(){
      return $this->_has(5);
    }
    
    /**
     * Clear <maxnum> value
     *
     * @return \RO\Cmd\ChatRoomData
     */
    public function clearMaxnum(){
      return $this->_clear(5);
    }
    
    /**
     * Get <maxnum> value
     *
     * @return int
     */
    public function getMaxnum(){
      return $this->_get(5);
    }
    
    /**
     * Set <maxnum> value
     *
     * @param int $value
     * @return \RO\Cmd\ChatRoomData
     */
    public function setMaxnum( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <roomtype> has a value
     *
     * @return boolean
     */
    public function hasRoomtype(){
      return $this->_has(6);
    }
    
    /**
     * Clear <roomtype> value
     *
     * @return \RO\Cmd\ChatRoomData
     */
    public function clearRoomtype(){
      return $this->_clear(6);
    }
    
    /**
     * Get <roomtype> value
     *
     * @return int - \RO\Cmd\EChatRoomType
     */
    public function getRoomtype(){
      return $this->_get(6);
    }
    
    /**
     * Set <roomtype> value
     *
     * @param int - \RO\Cmd\EChatRoomType $value
     * @return \RO\Cmd\ChatRoomData
     */
    public function setRoomtype( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <members> has a value
     *
     * @return boolean
     */
    public function hasMembers(){
      return $this->_has(7);
    }
    
    /**
     * Clear <members> value
     *
     * @return \RO\Cmd\ChatRoomData
     */
    public function clearMembers(){
      return $this->_clear(7);
    }
    
    /**
     * Get <members> value
     *
     * @param int $idx
     * @return \RO\Cmd\ChatRoomMember
     */
    public function getMembers($idx = NULL){
      return $this->_get(7, $idx);
    }
    
    /**
     * Set <members> value
     *
     * @param \RO\Cmd\ChatRoomMember $value
     * @return \RO\Cmd\ChatRoomData
     */
    public function setMembers(\RO\Cmd\ChatRoomMember $value, $idx = NULL){
      return $this->_set(7, $value, $idx);
    }
    
    /**
     * Get all elements of <members>
     *
     * @return \RO\Cmd\ChatRoomMember[]
     */
    public function getMembersList(){
     return $this->_get(7);
    }
    
    /**
     * Add a new element to <members>
     *
     * @param \RO\Cmd\ChatRoomMember $value
     * @return \RO\Cmd\ChatRoomData
     */
    public function addMembers(\RO\Cmd\ChatRoomMember $value){
     return $this->_add(7, $value);
    }
  }
}

