<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: RecordCmd.proto

namespace RO\Cmd {

  class BlobShopGotItem extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $version = 0;
    
    /**  @var \RO\Cmd\ShopGotItem[]  */
    public $list = array();
    
    /**  @var \RO\Cmd\ShopGotItem[]  */
    public $random = array();
    
    /**  @var int */
    public $refreshlv = 0;
    
    /**  @var int */
    public $refreshlv_resettime = 0;
    
    /**  @var \RO\Cmd\ShopGotItem[]  */
    public $month = array();
    
    /**  @var \RO\Cmd\ShopGotItem[]  */
    public $randombylv = array();
    
    /**  @var \RO\Cmd\ShopGotItem[]  */
    public $discountact = array();
    
    /**  @var \RO\Cmd\ShopGotItem[]  */
    public $randomacc = array();
    
    /**  @var \RO\Cmd\ShopGotItem[]  */
    public $listweek = array();
    
    /**  @var \RO\Cmd\ShopGotItem[]  */
    public $limitmonth = array();
    
    /**  @var \RO\Cmd\ShopGotItem[]  */
    public $addcount = array();
    
    /**  @var \RO\Cmd\ShopGotItem[]  */
    public $limititem = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.BlobShopGotItem');

      // OPTIONAL UINT32 version = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "version";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // REPEATED MESSAGE list = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\ShopGotItem';
      $descriptor->addField($f);

      // REPEATED MESSAGE random = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "random";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\ShopGotItem';
      $descriptor->addField($f);

      // OPTIONAL UINT32 refreshlv = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "refreshlv";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 refreshlv_resettime = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "refreshlv_resettime";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // REPEATED MESSAGE month = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "month";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\ShopGotItem';
      $descriptor->addField($f);

      // REPEATED MESSAGE randombylv = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "randombylv";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\ShopGotItem';
      $descriptor->addField($f);

      // REPEATED MESSAGE discountact = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "discountact";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\ShopGotItem';
      $descriptor->addField($f);

      // REPEATED MESSAGE randomacc = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "randomacc";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\ShopGotItem';
      $descriptor->addField($f);

      // REPEATED MESSAGE listweek = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "listweek";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\ShopGotItem';
      $descriptor->addField($f);

      // REPEATED MESSAGE limitmonth = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "limitmonth";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\ShopGotItem';
      $descriptor->addField($f);

      // REPEATED MESSAGE addcount = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "addcount";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\ShopGotItem';
      $descriptor->addField($f);

      // REPEATED MESSAGE limititem = 13
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 13;
      $f->name      = "limititem";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\ShopGotItem';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <version> has a value
     *
     * @return boolean
     */
    public function hasVersion(){
      return $this->_has(1);
    }
    
    /**
     * Clear <version> value
     *
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function clearVersion(){
      return $this->_clear(1);
    }
    
    /**
     * Get <version> value
     *
     * @return int
     */
    public function getVersion(){
      return $this->_get(1);
    }
    
    /**
     * Set <version> value
     *
     * @param int $value
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function setVersion( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <list> has a value
     *
     * @return boolean
     */
    public function hasList(){
      return $this->_has(2);
    }
    
    /**
     * Clear <list> value
     *
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function clearList(){
      return $this->_clear(2);
    }
    
    /**
     * Get <list> value
     *
     * @param int $idx
     * @return \RO\Cmd\ShopGotItem
     */
    public function getList($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <list> value
     *
     * @param \RO\Cmd\ShopGotItem $value
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function setList(\RO\Cmd\ShopGotItem $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <list>
     *
     * @return \RO\Cmd\ShopGotItem[]
     */
    public function getListList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <list>
     *
     * @param \RO\Cmd\ShopGotItem $value
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function addList(\RO\Cmd\ShopGotItem $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <random> has a value
     *
     * @return boolean
     */
    public function hasRandom(){
      return $this->_has(3);
    }
    
    /**
     * Clear <random> value
     *
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function clearRandom(){
      return $this->_clear(3);
    }
    
    /**
     * Get <random> value
     *
     * @param int $idx
     * @return \RO\Cmd\ShopGotItem
     */
    public function getRandom($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <random> value
     *
     * @param \RO\Cmd\ShopGotItem $value
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function setRandom(\RO\Cmd\ShopGotItem $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <random>
     *
     * @return \RO\Cmd\ShopGotItem[]
     */
    public function getRandomList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <random>
     *
     * @param \RO\Cmd\ShopGotItem $value
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function addRandom(\RO\Cmd\ShopGotItem $value){
     return $this->_add(3, $value);
    }
    
    /**
     * Check if <refreshlv> has a value
     *
     * @return boolean
     */
    public function hasRefreshlv(){
      return $this->_has(4);
    }
    
    /**
     * Clear <refreshlv> value
     *
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function clearRefreshlv(){
      return $this->_clear(4);
    }
    
    /**
     * Get <refreshlv> value
     *
     * @return int
     */
    public function getRefreshlv(){
      return $this->_get(4);
    }
    
    /**
     * Set <refreshlv> value
     *
     * @param int $value
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function setRefreshlv( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <refreshlv_resettime> has a value
     *
     * @return boolean
     */
    public function hasRefreshlvResettime(){
      return $this->_has(5);
    }
    
    /**
     * Clear <refreshlv_resettime> value
     *
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function clearRefreshlvResettime(){
      return $this->_clear(5);
    }
    
    /**
     * Get <refreshlv_resettime> value
     *
     * @return int
     */
    public function getRefreshlvResettime(){
      return $this->_get(5);
    }
    
    /**
     * Set <refreshlv_resettime> value
     *
     * @param int $value
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function setRefreshlvResettime( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <month> has a value
     *
     * @return boolean
     */
    public function hasMonth(){
      return $this->_has(6);
    }
    
    /**
     * Clear <month> value
     *
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function clearMonth(){
      return $this->_clear(6);
    }
    
    /**
     * Get <month> value
     *
     * @param int $idx
     * @return \RO\Cmd\ShopGotItem
     */
    public function getMonth($idx = NULL){
      return $this->_get(6, $idx);
    }
    
    /**
     * Set <month> value
     *
     * @param \RO\Cmd\ShopGotItem $value
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function setMonth(\RO\Cmd\ShopGotItem $value, $idx = NULL){
      return $this->_set(6, $value, $idx);
    }
    
    /**
     * Get all elements of <month>
     *
     * @return \RO\Cmd\ShopGotItem[]
     */
    public function getMonthList(){
     return $this->_get(6);
    }
    
    /**
     * Add a new element to <month>
     *
     * @param \RO\Cmd\ShopGotItem $value
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function addMonth(\RO\Cmd\ShopGotItem $value){
     return $this->_add(6, $value);
    }
    
    /**
     * Check if <randombylv> has a value
     *
     * @return boolean
     */
    public function hasRandombylv(){
      return $this->_has(7);
    }
    
    /**
     * Clear <randombylv> value
     *
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function clearRandombylv(){
      return $this->_clear(7);
    }
    
    /**
     * Get <randombylv> value
     *
     * @param int $idx
     * @return \RO\Cmd\ShopGotItem
     */
    public function getRandombylv($idx = NULL){
      return $this->_get(7, $idx);
    }
    
    /**
     * Set <randombylv> value
     *
     * @param \RO\Cmd\ShopGotItem $value
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function setRandombylv(\RO\Cmd\ShopGotItem $value, $idx = NULL){
      return $this->_set(7, $value, $idx);
    }
    
    /**
     * Get all elements of <randombylv>
     *
     * @return \RO\Cmd\ShopGotItem[]
     */
    public function getRandombylvList(){
     return $this->_get(7);
    }
    
    /**
     * Add a new element to <randombylv>
     *
     * @param \RO\Cmd\ShopGotItem $value
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function addRandombylv(\RO\Cmd\ShopGotItem $value){
     return $this->_add(7, $value);
    }
    
    /**
     * Check if <discountact> has a value
     *
     * @return boolean
     */
    public function hasDiscountact(){
      return $this->_has(8);
    }
    
    /**
     * Clear <discountact> value
     *
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function clearDiscountact(){
      return $this->_clear(8);
    }
    
    /**
     * Get <discountact> value
     *
     * @param int $idx
     * @return \RO\Cmd\ShopGotItem
     */
    public function getDiscountact($idx = NULL){
      return $this->_get(8, $idx);
    }
    
    /**
     * Set <discountact> value
     *
     * @param \RO\Cmd\ShopGotItem $value
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function setDiscountact(\RO\Cmd\ShopGotItem $value, $idx = NULL){
      return $this->_set(8, $value, $idx);
    }
    
    /**
     * Get all elements of <discountact>
     *
     * @return \RO\Cmd\ShopGotItem[]
     */
    public function getDiscountactList(){
     return $this->_get(8);
    }
    
    /**
     * Add a new element to <discountact>
     *
     * @param \RO\Cmd\ShopGotItem $value
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function addDiscountact(\RO\Cmd\ShopGotItem $value){
     return $this->_add(8, $value);
    }
    
    /**
     * Check if <randomacc> has a value
     *
     * @return boolean
     */
    public function hasRandomacc(){
      return $this->_has(9);
    }
    
    /**
     * Clear <randomacc> value
     *
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function clearRandomacc(){
      return $this->_clear(9);
    }
    
    /**
     * Get <randomacc> value
     *
     * @param int $idx
     * @return \RO\Cmd\ShopGotItem
     */
    public function getRandomacc($idx = NULL){
      return $this->_get(9, $idx);
    }
    
    /**
     * Set <randomacc> value
     *
     * @param \RO\Cmd\ShopGotItem $value
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function setRandomacc(\RO\Cmd\ShopGotItem $value, $idx = NULL){
      return $this->_set(9, $value, $idx);
    }
    
    /**
     * Get all elements of <randomacc>
     *
     * @return \RO\Cmd\ShopGotItem[]
     */
    public function getRandomaccList(){
     return $this->_get(9);
    }
    
    /**
     * Add a new element to <randomacc>
     *
     * @param \RO\Cmd\ShopGotItem $value
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function addRandomacc(\RO\Cmd\ShopGotItem $value){
     return $this->_add(9, $value);
    }
    
    /**
     * Check if <listweek> has a value
     *
     * @return boolean
     */
    public function hasListweek(){
      return $this->_has(10);
    }
    
    /**
     * Clear <listweek> value
     *
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function clearListweek(){
      return $this->_clear(10);
    }
    
    /**
     * Get <listweek> value
     *
     * @param int $idx
     * @return \RO\Cmd\ShopGotItem
     */
    public function getListweek($idx = NULL){
      return $this->_get(10, $idx);
    }
    
    /**
     * Set <listweek> value
     *
     * @param \RO\Cmd\ShopGotItem $value
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function setListweek(\RO\Cmd\ShopGotItem $value, $idx = NULL){
      return $this->_set(10, $value, $idx);
    }
    
    /**
     * Get all elements of <listweek>
     *
     * @return \RO\Cmd\ShopGotItem[]
     */
    public function getListweekList(){
     return $this->_get(10);
    }
    
    /**
     * Add a new element to <listweek>
     *
     * @param \RO\Cmd\ShopGotItem $value
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function addListweek(\RO\Cmd\ShopGotItem $value){
     return $this->_add(10, $value);
    }
    
    /**
     * Check if <limitmonth> has a value
     *
     * @return boolean
     */
    public function hasLimitmonth(){
      return $this->_has(11);
    }
    
    /**
     * Clear <limitmonth> value
     *
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function clearLimitmonth(){
      return $this->_clear(11);
    }
    
    /**
     * Get <limitmonth> value
     *
     * @param int $idx
     * @return \RO\Cmd\ShopGotItem
     */
    public function getLimitmonth($idx = NULL){
      return $this->_get(11, $idx);
    }
    
    /**
     * Set <limitmonth> value
     *
     * @param \RO\Cmd\ShopGotItem $value
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function setLimitmonth(\RO\Cmd\ShopGotItem $value, $idx = NULL){
      return $this->_set(11, $value, $idx);
    }
    
    /**
     * Get all elements of <limitmonth>
     *
     * @return \RO\Cmd\ShopGotItem[]
     */
    public function getLimitmonthList(){
     return $this->_get(11);
    }
    
    /**
     * Add a new element to <limitmonth>
     *
     * @param \RO\Cmd\ShopGotItem $value
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function addLimitmonth(\RO\Cmd\ShopGotItem $value){
     return $this->_add(11, $value);
    }
    
    /**
     * Check if <addcount> has a value
     *
     * @return boolean
     */
    public function hasAddcount(){
      return $this->_has(12);
    }
    
    /**
     * Clear <addcount> value
     *
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function clearAddcount(){
      return $this->_clear(12);
    }
    
    /**
     * Get <addcount> value
     *
     * @param int $idx
     * @return \RO\Cmd\ShopGotItem
     */
    public function getAddcount($idx = NULL){
      return $this->_get(12, $idx);
    }
    
    /**
     * Set <addcount> value
     *
     * @param \RO\Cmd\ShopGotItem $value
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function setAddcount(\RO\Cmd\ShopGotItem $value, $idx = NULL){
      return $this->_set(12, $value, $idx);
    }
    
    /**
     * Get all elements of <addcount>
     *
     * @return \RO\Cmd\ShopGotItem[]
     */
    public function getAddcountList(){
     return $this->_get(12);
    }
    
    /**
     * Add a new element to <addcount>
     *
     * @param \RO\Cmd\ShopGotItem $value
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function addAddcount(\RO\Cmd\ShopGotItem $value){
     return $this->_add(12, $value);
    }
    
    /**
     * Check if <limititem> has a value
     *
     * @return boolean
     */
    public function hasLimititem(){
      return $this->_has(13);
    }
    
    /**
     * Clear <limititem> value
     *
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function clearLimititem(){
      return $this->_clear(13);
    }
    
    /**
     * Get <limititem> value
     *
     * @param int $idx
     * @return \RO\Cmd\ShopGotItem
     */
    public function getLimititem($idx = NULL){
      return $this->_get(13, $idx);
    }
    
    /**
     * Set <limititem> value
     *
     * @param \RO\Cmd\ShopGotItem $value
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function setLimititem(\RO\Cmd\ShopGotItem $value, $idx = NULL){
      return $this->_set(13, $value, $idx);
    }
    
    /**
     * Get all elements of <limititem>
     *
     * @return \RO\Cmd\ShopGotItem[]
     */
    public function getLimititemList(){
     return $this->_get(13);
    }
    
    /**
     * Add a new element to <limititem>
     *
     * @param \RO\Cmd\ShopGotItem $value
     * @return \RO\Cmd\BlobShopGotItem
     */
    public function addLimititem(\RO\Cmd\ShopGotItem $value){
     return $this->_add(13, $value);
    }
  }
}

