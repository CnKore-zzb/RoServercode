<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: ActivityEvent.proto

namespace RO\Cmd {

  class AERewardExtraInfo extends \DrSlump\Protobuf\Message {

    /**  @var \RO\Cmd\AEReward[]  */
    public $rewards = array();
    
    /**  @var int */
    public $finishcount = 0;
    
    /**  @var int */
    public $daylimit = 0;
    
    /**  @var boolean */
    public $acclimit = false;
    
    /**  @var int */
    public $weeklimit = 0;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.AERewardExtraInfo');

      // REPEATED MESSAGE rewards = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "rewards";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\AEReward';
      $descriptor->addField($f);

      // OPTIONAL UINT32 finishcount = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "finishcount";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 daylimit = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "daylimit";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL BOOL acclimit = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "acclimit";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // OPTIONAL UINT32 weeklimit = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "weeklimit";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <rewards> has a value
     *
     * @return boolean
     */
    public function hasRewards(){
      return $this->_has(1);
    }
    
    /**
     * Clear <rewards> value
     *
     * @return \RO\Cmd\AERewardExtraInfo
     */
    public function clearRewards(){
      return $this->_clear(1);
    }
    
    /**
     * Get <rewards> value
     *
     * @param int $idx
     * @return \RO\Cmd\AEReward
     */
    public function getRewards($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <rewards> value
     *
     * @param \RO\Cmd\AEReward $value
     * @return \RO\Cmd\AERewardExtraInfo
     */
    public function setRewards(\RO\Cmd\AEReward $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <rewards>
     *
     * @return \RO\Cmd\AEReward[]
     */
    public function getRewardsList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <rewards>
     *
     * @param \RO\Cmd\AEReward $value
     * @return \RO\Cmd\AERewardExtraInfo
     */
    public function addRewards(\RO\Cmd\AEReward $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <finishcount> has a value
     *
     * @return boolean
     */
    public function hasFinishcount(){
      return $this->_has(2);
    }
    
    /**
     * Clear <finishcount> value
     *
     * @return \RO\Cmd\AERewardExtraInfo
     */
    public function clearFinishcount(){
      return $this->_clear(2);
    }
    
    /**
     * Get <finishcount> value
     *
     * @return int
     */
    public function getFinishcount(){
      return $this->_get(2);
    }
    
    /**
     * Set <finishcount> value
     *
     * @param int $value
     * @return \RO\Cmd\AERewardExtraInfo
     */
    public function setFinishcount( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <daylimit> has a value
     *
     * @return boolean
     */
    public function hasDaylimit(){
      return $this->_has(3);
    }
    
    /**
     * Clear <daylimit> value
     *
     * @return \RO\Cmd\AERewardExtraInfo
     */
    public function clearDaylimit(){
      return $this->_clear(3);
    }
    
    /**
     * Get <daylimit> value
     *
     * @return int
     */
    public function getDaylimit(){
      return $this->_get(3);
    }
    
    /**
     * Set <daylimit> value
     *
     * @param int $value
     * @return \RO\Cmd\AERewardExtraInfo
     */
    public function setDaylimit( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <acclimit> has a value
     *
     * @return boolean
     */
    public function hasAcclimit(){
      return $this->_has(4);
    }
    
    /**
     * Clear <acclimit> value
     *
     * @return \RO\Cmd\AERewardExtraInfo
     */
    public function clearAcclimit(){
      return $this->_clear(4);
    }
    
    /**
     * Get <acclimit> value
     *
     * @return boolean
     */
    public function getAcclimit(){
      return $this->_get(4);
    }
    
    /**
     * Set <acclimit> value
     *
     * @param boolean $value
     * @return \RO\Cmd\AERewardExtraInfo
     */
    public function setAcclimit( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <weeklimit> has a value
     *
     * @return boolean
     */
    public function hasWeeklimit(){
      return $this->_has(5);
    }
    
    /**
     * Clear <weeklimit> value
     *
     * @return \RO\Cmd\AERewardExtraInfo
     */
    public function clearWeeklimit(){
      return $this->_clear(5);
    }
    
    /**
     * Get <weeklimit> value
     *
     * @return int
     */
    public function getWeeklimit(){
      return $this->_get(5);
    }
    
    /**
     * Set <weeklimit> value
     *
     * @param int $value
     * @return \RO\Cmd\AERewardExtraInfo
     */
    public function setWeeklimit( $value){
      return $this->_set(5, $value);
    }
  }
}

