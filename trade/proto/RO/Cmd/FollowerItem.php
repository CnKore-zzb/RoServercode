<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: RecordCmd.proto

namespace RO\Cmd {

  class FollowerItem extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $id = 0;
    
    /**  @var float */
    public $spdRatio = 0;
    
    /**  @var int */
    public $behaviours = 0;
    
    /**  @var int */
    public $questid = 0;
    
    /**  @var int */
    public $cleartime = 0;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.FollowerItem');

      // OPTIONAL UINT32 id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "id";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL FLOAT spdRatio = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "spdRatio";
      $f->type      = \DrSlump\Protobuf::TYPE_FLOAT;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 behaviours = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "behaviours";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 questid = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "questid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 cleartime = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "cleartime";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <id> has a value
     *
     * @return boolean
     */
    public function hasId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <id> value
     *
     * @return \RO\Cmd\FollowerItem
     */
    public function clearId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <id> value
     *
     * @return int
     */
    public function getId(){
      return $this->_get(1);
    }
    
    /**
     * Set <id> value
     *
     * @param int $value
     * @return \RO\Cmd\FollowerItem
     */
    public function setId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <spdRatio> has a value
     *
     * @return boolean
     */
    public function hasSpdRatio(){
      return $this->_has(2);
    }
    
    /**
     * Clear <spdRatio> value
     *
     * @return \RO\Cmd\FollowerItem
     */
    public function clearSpdRatio(){
      return $this->_clear(2);
    }
    
    /**
     * Get <spdRatio> value
     *
     * @return float
     */
    public function getSpdRatio(){
      return $this->_get(2);
    }
    
    /**
     * Set <spdRatio> value
     *
     * @param float $value
     * @return \RO\Cmd\FollowerItem
     */
    public function setSpdRatio( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <behaviours> has a value
     *
     * @return boolean
     */
    public function hasBehaviours(){
      return $this->_has(3);
    }
    
    /**
     * Clear <behaviours> value
     *
     * @return \RO\Cmd\FollowerItem
     */
    public function clearBehaviours(){
      return $this->_clear(3);
    }
    
    /**
     * Get <behaviours> value
     *
     * @return int
     */
    public function getBehaviours(){
      return $this->_get(3);
    }
    
    /**
     * Set <behaviours> value
     *
     * @param int $value
     * @return \RO\Cmd\FollowerItem
     */
    public function setBehaviours( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <questid> has a value
     *
     * @return boolean
     */
    public function hasQuestid(){
      return $this->_has(4);
    }
    
    /**
     * Clear <questid> value
     *
     * @return \RO\Cmd\FollowerItem
     */
    public function clearQuestid(){
      return $this->_clear(4);
    }
    
    /**
     * Get <questid> value
     *
     * @return int
     */
    public function getQuestid(){
      return $this->_get(4);
    }
    
    /**
     * Set <questid> value
     *
     * @param int $value
     * @return \RO\Cmd\FollowerItem
     */
    public function setQuestid( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <cleartime> has a value
     *
     * @return boolean
     */
    public function hasCleartime(){
      return $this->_has(5);
    }
    
    /**
     * Clear <cleartime> value
     *
     * @return \RO\Cmd\FollowerItem
     */
    public function clearCleartime(){
      return $this->_clear(5);
    }
    
    /**
     * Get <cleartime> value
     *
     * @return int
     */
    public function getCleartime(){
      return $this->_get(5);
    }
    
    /**
     * Set <cleartime> value
     *
     * @param int $value
     * @return \RO\Cmd\FollowerItem
     */
    public function setCleartime( $value){
      return $this->_set(5, $value);
    }
  }
}

