<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: SessionCmd.proto

namespace RO\Cmd {

  class ChatMsgSession extends \DrSlump\Protobuf\Message {

    /**  @var int - \RO\Cmd\Command */
    public $cmd = \RO\Cmd\Command::SESSION_PROTOCMD;
    
    /**  @var int - \RO\Cmd\SessionParam */
    public $param = \RO\Cmd\SessionParam::CHAT_MSG;
    
    /**  @var int[]  */
    public $targetid = array();
    
    /**  @var string */
    public $msg = null;
    
    /**  @var int - \RO\Cmd\EGameChatChannel */
    public $channel = \RO\Cmd\EGameChatChannel::ECHAT_CHANNEL_MIN;
    
    /**  @var int */
    public $selfid = 0;
    
    /**  @var string */
    public $voice = null;
    
    /**  @var int */
    public $voicetime = 0;
    
    /**  @var boolean */
    public $blink = false;
    
    /**  @var int */
    public $msgid = 0;
    
    /**  @var boolean */
    public $msgover = false;
    
    /**  @var \RO\Cmd\BarrageMsgChatCmd */
    public $barrage = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.ChatMsgSession');

      // OPTIONAL ENUM cmd = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "cmd";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\Command';
      $f->default   = \RO\Cmd\Command::SESSION_PROTOCMD;
      $descriptor->addField($f);

      // OPTIONAL ENUM param = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "param";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\SessionParam';
      $f->default   = \RO\Cmd\SessionParam::CHAT_MSG;
      $descriptor->addField($f);

      // REPEATED UINT64 targetid = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "targetid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // OPTIONAL STRING msg = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "msg";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL ENUM channel = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "channel";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\EGameChatChannel';
      $f->default   = \RO\Cmd\EGameChatChannel::ECHAT_CHANNEL_MIN;
      $descriptor->addField($f);

      // OPTIONAL UINT64 selfid = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "selfid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL BYTES voice = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "voice";
      $f->type      = \DrSlump\Protobuf::TYPE_BYTES;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 voicetime = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "voicetime";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL BOOL blink = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "blink";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // OPTIONAL UINT32 msgid = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "msgid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL BOOL msgover = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "msgover";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE barrage = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "barrage";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\BarrageMsgChatCmd';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <cmd> has a value
     *
     * @return boolean
     */
    public function hasCmd(){
      return $this->_has(1);
    }
    
    /**
     * Clear <cmd> value
     *
     * @return \RO\Cmd\ChatMsgSession
     */
    public function clearCmd(){
      return $this->_clear(1);
    }
    
    /**
     * Get <cmd> value
     *
     * @return int - \RO\Cmd\Command
     */
    public function getCmd(){
      return $this->_get(1);
    }
    
    /**
     * Set <cmd> value
     *
     * @param int - \RO\Cmd\Command $value
     * @return \RO\Cmd\ChatMsgSession
     */
    public function setCmd( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <param> has a value
     *
     * @return boolean
     */
    public function hasParam(){
      return $this->_has(2);
    }
    
    /**
     * Clear <param> value
     *
     * @return \RO\Cmd\ChatMsgSession
     */
    public function clearParam(){
      return $this->_clear(2);
    }
    
    /**
     * Get <param> value
     *
     * @return int - \RO\Cmd\SessionParam
     */
    public function getParam(){
      return $this->_get(2);
    }
    
    /**
     * Set <param> value
     *
     * @param int - \RO\Cmd\SessionParam $value
     * @return \RO\Cmd\ChatMsgSession
     */
    public function setParam( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <targetid> has a value
     *
     * @return boolean
     */
    public function hasTargetid(){
      return $this->_has(3);
    }
    
    /**
     * Clear <targetid> value
     *
     * @return \RO\Cmd\ChatMsgSession
     */
    public function clearTargetid(){
      return $this->_clear(3);
    }
    
    /**
     * Get <targetid> value
     *
     * @param int $idx
     * @return int
     */
    public function getTargetid($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <targetid> value
     *
     * @param int $value
     * @return \RO\Cmd\ChatMsgSession
     */
    public function setTargetid( $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <targetid>
     *
     * @return int[]
     */
    public function getTargetidList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <targetid>
     *
     * @param int $value
     * @return \RO\Cmd\ChatMsgSession
     */
    public function addTargetid( $value){
     return $this->_add(3, $value);
    }
    
    /**
     * Check if <msg> has a value
     *
     * @return boolean
     */
    public function hasMsg(){
      return $this->_has(4);
    }
    
    /**
     * Clear <msg> value
     *
     * @return \RO\Cmd\ChatMsgSession
     */
    public function clearMsg(){
      return $this->_clear(4);
    }
    
    /**
     * Get <msg> value
     *
     * @return string
     */
    public function getMsg(){
      return $this->_get(4);
    }
    
    /**
     * Set <msg> value
     *
     * @param string $value
     * @return \RO\Cmd\ChatMsgSession
     */
    public function setMsg( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <channel> has a value
     *
     * @return boolean
     */
    public function hasChannel(){
      return $this->_has(5);
    }
    
    /**
     * Clear <channel> value
     *
     * @return \RO\Cmd\ChatMsgSession
     */
    public function clearChannel(){
      return $this->_clear(5);
    }
    
    /**
     * Get <channel> value
     *
     * @return int - \RO\Cmd\EGameChatChannel
     */
    public function getChannel(){
      return $this->_get(5);
    }
    
    /**
     * Set <channel> value
     *
     * @param int - \RO\Cmd\EGameChatChannel $value
     * @return \RO\Cmd\ChatMsgSession
     */
    public function setChannel( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <selfid> has a value
     *
     * @return boolean
     */
    public function hasSelfid(){
      return $this->_has(6);
    }
    
    /**
     * Clear <selfid> value
     *
     * @return \RO\Cmd\ChatMsgSession
     */
    public function clearSelfid(){
      return $this->_clear(6);
    }
    
    /**
     * Get <selfid> value
     *
     * @return int
     */
    public function getSelfid(){
      return $this->_get(6);
    }
    
    /**
     * Set <selfid> value
     *
     * @param int $value
     * @return \RO\Cmd\ChatMsgSession
     */
    public function setSelfid( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <voice> has a value
     *
     * @return boolean
     */
    public function hasVoice(){
      return $this->_has(7);
    }
    
    /**
     * Clear <voice> value
     *
     * @return \RO\Cmd\ChatMsgSession
     */
    public function clearVoice(){
      return $this->_clear(7);
    }
    
    /**
     * Get <voice> value
     *
     * @return string
     */
    public function getVoice(){
      return $this->_get(7);
    }
    
    /**
     * Set <voice> value
     *
     * @param string $value
     * @return \RO\Cmd\ChatMsgSession
     */
    public function setVoice( $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <voicetime> has a value
     *
     * @return boolean
     */
    public function hasVoicetime(){
      return $this->_has(8);
    }
    
    /**
     * Clear <voicetime> value
     *
     * @return \RO\Cmd\ChatMsgSession
     */
    public function clearVoicetime(){
      return $this->_clear(8);
    }
    
    /**
     * Get <voicetime> value
     *
     * @return int
     */
    public function getVoicetime(){
      return $this->_get(8);
    }
    
    /**
     * Set <voicetime> value
     *
     * @param int $value
     * @return \RO\Cmd\ChatMsgSession
     */
    public function setVoicetime( $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <blink> has a value
     *
     * @return boolean
     */
    public function hasBlink(){
      return $this->_has(9);
    }
    
    /**
     * Clear <blink> value
     *
     * @return \RO\Cmd\ChatMsgSession
     */
    public function clearBlink(){
      return $this->_clear(9);
    }
    
    /**
     * Get <blink> value
     *
     * @return boolean
     */
    public function getBlink(){
      return $this->_get(9);
    }
    
    /**
     * Set <blink> value
     *
     * @param boolean $value
     * @return \RO\Cmd\ChatMsgSession
     */
    public function setBlink( $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <msgid> has a value
     *
     * @return boolean
     */
    public function hasMsgid(){
      return $this->_has(10);
    }
    
    /**
     * Clear <msgid> value
     *
     * @return \RO\Cmd\ChatMsgSession
     */
    public function clearMsgid(){
      return $this->_clear(10);
    }
    
    /**
     * Get <msgid> value
     *
     * @return int
     */
    public function getMsgid(){
      return $this->_get(10);
    }
    
    /**
     * Set <msgid> value
     *
     * @param int $value
     * @return \RO\Cmd\ChatMsgSession
     */
    public function setMsgid( $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <msgover> has a value
     *
     * @return boolean
     */
    public function hasMsgover(){
      return $this->_has(11);
    }
    
    /**
     * Clear <msgover> value
     *
     * @return \RO\Cmd\ChatMsgSession
     */
    public function clearMsgover(){
      return $this->_clear(11);
    }
    
    /**
     * Get <msgover> value
     *
     * @return boolean
     */
    public function getMsgover(){
      return $this->_get(11);
    }
    
    /**
     * Set <msgover> value
     *
     * @param boolean $value
     * @return \RO\Cmd\ChatMsgSession
     */
    public function setMsgover( $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <barrage> has a value
     *
     * @return boolean
     */
    public function hasBarrage(){
      return $this->_has(12);
    }
    
    /**
     * Clear <barrage> value
     *
     * @return \RO\Cmd\ChatMsgSession
     */
    public function clearBarrage(){
      return $this->_clear(12);
    }
    
    /**
     * Get <barrage> value
     *
     * @return \RO\Cmd\BarrageMsgChatCmd
     */
    public function getBarrage(){
      return $this->_get(12);
    }
    
    /**
     * Set <barrage> value
     *
     * @param \RO\Cmd\BarrageMsgChatCmd $value
     * @return \RO\Cmd\ChatMsgSession
     */
    public function setBarrage(\RO\Cmd\BarrageMsgChatCmd $value){
      return $this->_set(12, $value);
    }
  }
}

