<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: ActivityEvent.proto

namespace RO\Cmd {

  class AERewardItem extends \DrSlump\Protobuf\Message {

    /**  @var int - \RO\Cmd\EAERewardMode */
    public $mode = \RO\Cmd\EAERewardMode::EAEREWARDMODE_MIN;
    
    /**  @var int */
    public $daycount = 0;
    
    /**  @var int */
    public $acclimitcharid = 0;
    
    /**  @var int */
    public $multipledaycount = 0;
    
    /**  @var int */
    public $multipleacclimitcharid = 0;
    
    /**  @var int */
    public $weekcount = 0;
    
    /**  @var int */
    public $multipleweekcount = 0;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.AERewardItem');

      // OPTIONAL ENUM mode = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "mode";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\EAERewardMode';
      $f->default   = \RO\Cmd\EAERewardMode::EAEREWARDMODE_MIN;
      $descriptor->addField($f);

      // OPTIONAL UINT32 daycount = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "daycount";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT64 acclimitcharid = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "acclimitcharid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 multipledaycount = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "multipledaycount";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT64 multipleacclimitcharid = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "multipleacclimitcharid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 weekcount = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "weekcount";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 multipleweekcount = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "multipleweekcount";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <mode> has a value
     *
     * @return boolean
     */
    public function hasMode(){
      return $this->_has(1);
    }
    
    /**
     * Clear <mode> value
     *
     * @return \RO\Cmd\AERewardItem
     */
    public function clearMode(){
      return $this->_clear(1);
    }
    
    /**
     * Get <mode> value
     *
     * @return int - \RO\Cmd\EAERewardMode
     */
    public function getMode(){
      return $this->_get(1);
    }
    
    /**
     * Set <mode> value
     *
     * @param int - \RO\Cmd\EAERewardMode $value
     * @return \RO\Cmd\AERewardItem
     */
    public function setMode( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <daycount> has a value
     *
     * @return boolean
     */
    public function hasDaycount(){
      return $this->_has(2);
    }
    
    /**
     * Clear <daycount> value
     *
     * @return \RO\Cmd\AERewardItem
     */
    public function clearDaycount(){
      return $this->_clear(2);
    }
    
    /**
     * Get <daycount> value
     *
     * @return int
     */
    public function getDaycount(){
      return $this->_get(2);
    }
    
    /**
     * Set <daycount> value
     *
     * @param int $value
     * @return \RO\Cmd\AERewardItem
     */
    public function setDaycount( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <acclimitcharid> has a value
     *
     * @return boolean
     */
    public function hasAcclimitcharid(){
      return $this->_has(3);
    }
    
    /**
     * Clear <acclimitcharid> value
     *
     * @return \RO\Cmd\AERewardItem
     */
    public function clearAcclimitcharid(){
      return $this->_clear(3);
    }
    
    /**
     * Get <acclimitcharid> value
     *
     * @return int
     */
    public function getAcclimitcharid(){
      return $this->_get(3);
    }
    
    /**
     * Set <acclimitcharid> value
     *
     * @param int $value
     * @return \RO\Cmd\AERewardItem
     */
    public function setAcclimitcharid( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <multipledaycount> has a value
     *
     * @return boolean
     */
    public function hasMultipledaycount(){
      return $this->_has(4);
    }
    
    /**
     * Clear <multipledaycount> value
     *
     * @return \RO\Cmd\AERewardItem
     */
    public function clearMultipledaycount(){
      return $this->_clear(4);
    }
    
    /**
     * Get <multipledaycount> value
     *
     * @return int
     */
    public function getMultipledaycount(){
      return $this->_get(4);
    }
    
    /**
     * Set <multipledaycount> value
     *
     * @param int $value
     * @return \RO\Cmd\AERewardItem
     */
    public function setMultipledaycount( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <multipleacclimitcharid> has a value
     *
     * @return boolean
     */
    public function hasMultipleacclimitcharid(){
      return $this->_has(5);
    }
    
    /**
     * Clear <multipleacclimitcharid> value
     *
     * @return \RO\Cmd\AERewardItem
     */
    public function clearMultipleacclimitcharid(){
      return $this->_clear(5);
    }
    
    /**
     * Get <multipleacclimitcharid> value
     *
     * @return int
     */
    public function getMultipleacclimitcharid(){
      return $this->_get(5);
    }
    
    /**
     * Set <multipleacclimitcharid> value
     *
     * @param int $value
     * @return \RO\Cmd\AERewardItem
     */
    public function setMultipleacclimitcharid( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <weekcount> has a value
     *
     * @return boolean
     */
    public function hasWeekcount(){
      return $this->_has(6);
    }
    
    /**
     * Clear <weekcount> value
     *
     * @return \RO\Cmd\AERewardItem
     */
    public function clearWeekcount(){
      return $this->_clear(6);
    }
    
    /**
     * Get <weekcount> value
     *
     * @return int
     */
    public function getWeekcount(){
      return $this->_get(6);
    }
    
    /**
     * Set <weekcount> value
     *
     * @param int $value
     * @return \RO\Cmd\AERewardItem
     */
    public function setWeekcount( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <multipleweekcount> has a value
     *
     * @return boolean
     */
    public function hasMultipleweekcount(){
      return $this->_has(7);
    }
    
    /**
     * Clear <multipleweekcount> value
     *
     * @return \RO\Cmd\AERewardItem
     */
    public function clearMultipleweekcount(){
      return $this->_clear(7);
    }
    
    /**
     * Get <multipleweekcount> value
     *
     * @return int
     */
    public function getMultipleweekcount(){
      return $this->_get(7);
    }
    
    /**
     * Set <multipleweekcount> value
     *
     * @param int $value
     * @return \RO\Cmd\AERewardItem
     */
    public function setMultipleweekcount( $value){
      return $this->_set(7, $value);
    }
  }
}

