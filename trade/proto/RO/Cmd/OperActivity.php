<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: SessionSociality.proto

namespace RO\Cmd {

  class OperActivity extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $id = 0;
    
    /**  @var string */
    public $name = null;
    
    /**  @var string */
    public $iconurl = null;
    
    /**  @var int */
    public $begintime = 0;
    
    /**  @var int */
    public $endtime = 0;
    
    /**  @var string */
    public $url = null;
    
    /**  @var boolean */
    public $countdown = false;
    
    /**  @var \RO\Cmd\OperSubActivity[]  */
    public $sub_activity = array();
    
    /**  @var \RO\Cmd\OperActivityData */
    public $data = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.OperActivity');

      // OPTIONAL UINT32 id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "id";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL STRING name = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING iconurl = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "iconurl";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT32 begintime = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "begintime";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 endtime = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "endtime";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL STRING url = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "url";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL countdown = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "countdown";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // REPEATED MESSAGE sub_activity = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "sub_activity";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\OperSubActivity';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE data = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "data";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\OperActivityData';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <id> has a value
     *
     * @return boolean
     */
    public function hasId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <id> value
     *
     * @return \RO\Cmd\OperActivity
     */
    public function clearId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <id> value
     *
     * @return int
     */
    public function getId(){
      return $this->_get(1);
    }
    
    /**
     * Set <id> value
     *
     * @param int $value
     * @return \RO\Cmd\OperActivity
     */
    public function setId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(2);
    }
    
    /**
     * Clear <name> value
     *
     * @return \RO\Cmd\OperActivity
     */
    public function clearName(){
      return $this->_clear(2);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(2);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \RO\Cmd\OperActivity
     */
    public function setName( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <iconurl> has a value
     *
     * @return boolean
     */
    public function hasIconurl(){
      return $this->_has(3);
    }
    
    /**
     * Clear <iconurl> value
     *
     * @return \RO\Cmd\OperActivity
     */
    public function clearIconurl(){
      return $this->_clear(3);
    }
    
    /**
     * Get <iconurl> value
     *
     * @return string
     */
    public function getIconurl(){
      return $this->_get(3);
    }
    
    /**
     * Set <iconurl> value
     *
     * @param string $value
     * @return \RO\Cmd\OperActivity
     */
    public function setIconurl( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <begintime> has a value
     *
     * @return boolean
     */
    public function hasBegintime(){
      return $this->_has(4);
    }
    
    /**
     * Clear <begintime> value
     *
     * @return \RO\Cmd\OperActivity
     */
    public function clearBegintime(){
      return $this->_clear(4);
    }
    
    /**
     * Get <begintime> value
     *
     * @return int
     */
    public function getBegintime(){
      return $this->_get(4);
    }
    
    /**
     * Set <begintime> value
     *
     * @param int $value
     * @return \RO\Cmd\OperActivity
     */
    public function setBegintime( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <endtime> has a value
     *
     * @return boolean
     */
    public function hasEndtime(){
      return $this->_has(5);
    }
    
    /**
     * Clear <endtime> value
     *
     * @return \RO\Cmd\OperActivity
     */
    public function clearEndtime(){
      return $this->_clear(5);
    }
    
    /**
     * Get <endtime> value
     *
     * @return int
     */
    public function getEndtime(){
      return $this->_get(5);
    }
    
    /**
     * Set <endtime> value
     *
     * @param int $value
     * @return \RO\Cmd\OperActivity
     */
    public function setEndtime( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <url> has a value
     *
     * @return boolean
     */
    public function hasUrl(){
      return $this->_has(6);
    }
    
    /**
     * Clear <url> value
     *
     * @return \RO\Cmd\OperActivity
     */
    public function clearUrl(){
      return $this->_clear(6);
    }
    
    /**
     * Get <url> value
     *
     * @return string
     */
    public function getUrl(){
      return $this->_get(6);
    }
    
    /**
     * Set <url> value
     *
     * @param string $value
     * @return \RO\Cmd\OperActivity
     */
    public function setUrl( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <countdown> has a value
     *
     * @return boolean
     */
    public function hasCountdown(){
      return $this->_has(7);
    }
    
    /**
     * Clear <countdown> value
     *
     * @return \RO\Cmd\OperActivity
     */
    public function clearCountdown(){
      return $this->_clear(7);
    }
    
    /**
     * Get <countdown> value
     *
     * @return boolean
     */
    public function getCountdown(){
      return $this->_get(7);
    }
    
    /**
     * Set <countdown> value
     *
     * @param boolean $value
     * @return \RO\Cmd\OperActivity
     */
    public function setCountdown( $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <sub_activity> has a value
     *
     * @return boolean
     */
    public function hasSubActivity(){
      return $this->_has(8);
    }
    
    /**
     * Clear <sub_activity> value
     *
     * @return \RO\Cmd\OperActivity
     */
    public function clearSubActivity(){
      return $this->_clear(8);
    }
    
    /**
     * Get <sub_activity> value
     *
     * @param int $idx
     * @return \RO\Cmd\OperSubActivity
     */
    public function getSubActivity($idx = NULL){
      return $this->_get(8, $idx);
    }
    
    /**
     * Set <sub_activity> value
     *
     * @param \RO\Cmd\OperSubActivity $value
     * @return \RO\Cmd\OperActivity
     */
    public function setSubActivity(\RO\Cmd\OperSubActivity $value, $idx = NULL){
      return $this->_set(8, $value, $idx);
    }
    
    /**
     * Get all elements of <sub_activity>
     *
     * @return \RO\Cmd\OperSubActivity[]
     */
    public function getSubActivityList(){
     return $this->_get(8);
    }
    
    /**
     * Add a new element to <sub_activity>
     *
     * @param \RO\Cmd\OperSubActivity $value
     * @return \RO\Cmd\OperActivity
     */
    public function addSubActivity(\RO\Cmd\OperSubActivity $value){
     return $this->_add(8, $value);
    }
    
    /**
     * Check if <data> has a value
     *
     * @return boolean
     */
    public function hasData(){
      return $this->_has(9);
    }
    
    /**
     * Clear <data> value
     *
     * @return \RO\Cmd\OperActivity
     */
    public function clearData(){
      return $this->_clear(9);
    }
    
    /**
     * Get <data> value
     *
     * @return \RO\Cmd\OperActivityData
     */
    public function getData(){
      return $this->_get(9);
    }
    
    /**
     * Set <data> value
     *
     * @param \RO\Cmd\OperActivityData $value
     * @return \RO\Cmd\OperActivity
     */
    public function setData(\RO\Cmd\OperActivityData $value){
      return $this->_set(9, $value);
    }
  }
}

