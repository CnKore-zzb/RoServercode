<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: RecordCmd.proto

namespace RO\Cmd {

  class BlobAccQuest extends \DrSlump\Protobuf\Message {

    /**  @var int[]  */
    public $accept_ids = array();
    
    /**  @var int[]  */
    public $choice_ids = array();
    
    /**  @var int */
    public $version = 0;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.BlobAccQuest');

      // REPEATED UINT32 accept_ids = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "accept_ids";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // REPEATED UINT32 choice_ids = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "choice_ids";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // OPTIONAL UINT32 version = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "version";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <accept_ids> has a value
     *
     * @return boolean
     */
    public function hasAcceptIds(){
      return $this->_has(1);
    }
    
    /**
     * Clear <accept_ids> value
     *
     * @return \RO\Cmd\BlobAccQuest
     */
    public function clearAcceptIds(){
      return $this->_clear(1);
    }
    
    /**
     * Get <accept_ids> value
     *
     * @param int $idx
     * @return int
     */
    public function getAcceptIds($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <accept_ids> value
     *
     * @param int $value
     * @return \RO\Cmd\BlobAccQuest
     */
    public function setAcceptIds( $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <accept_ids>
     *
     * @return int[]
     */
    public function getAcceptIdsList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <accept_ids>
     *
     * @param int $value
     * @return \RO\Cmd\BlobAccQuest
     */
    public function addAcceptIds( $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <choice_ids> has a value
     *
     * @return boolean
     */
    public function hasChoiceIds(){
      return $this->_has(2);
    }
    
    /**
     * Clear <choice_ids> value
     *
     * @return \RO\Cmd\BlobAccQuest
     */
    public function clearChoiceIds(){
      return $this->_clear(2);
    }
    
    /**
     * Get <choice_ids> value
     *
     * @param int $idx
     * @return int
     */
    public function getChoiceIds($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <choice_ids> value
     *
     * @param int $value
     * @return \RO\Cmd\BlobAccQuest
     */
    public function setChoiceIds( $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <choice_ids>
     *
     * @return int[]
     */
    public function getChoiceIdsList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <choice_ids>
     *
     * @param int $value
     * @return \RO\Cmd\BlobAccQuest
     */
    public function addChoiceIds( $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <version> has a value
     *
     * @return boolean
     */
    public function hasVersion(){
      return $this->_has(3);
    }
    
    /**
     * Clear <version> value
     *
     * @return \RO\Cmd\BlobAccQuest
     */
    public function clearVersion(){
      return $this->_clear(3);
    }
    
    /**
     * Get <version> value
     *
     * @return int
     */
    public function getVersion(){
      return $this->_get(3);
    }
    
    /**
     * Set <version> value
     *
     * @param int $value
     * @return \RO\Cmd\BlobAccQuest
     */
    public function setVersion( $value){
      return $this->_set(3, $value);
    }
  }
}

