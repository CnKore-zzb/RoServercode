<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: SocialCmd.proto

namespace RO\Cmd {

  class AddRelationSocialCmd extends \DrSlump\Protobuf\Message {

    /**  @var int - \RO\Cmd\Command */
    public $cmd = \RO\Cmd\Command::SOCIAL_PROTOCMD;
    
    /**  @var int - \RO\Cmd\SocialParam */
    public $param = \RO\Cmd\SocialParam::SOCIALPARAM_SOCIAL_ADDRELATION;
    
    /**  @var \RO\Cmd\SocialUser */
    public $user = null;
    
    /**  @var int */
    public $destid = 0;
    
    /**  @var int - \RO\Cmd\ESocialRelation */
    public $relation = \RO\Cmd\ESocialRelation::ESOCIALRELATION_MIN;
    
    /**  @var boolean */
    public $to_global = false;
    
    /**  @var boolean */
    public $check = false;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.AddRelationSocialCmd');

      // OPTIONAL ENUM cmd = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "cmd";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\Command';
      $f->default   = \RO\Cmd\Command::SOCIAL_PROTOCMD;
      $descriptor->addField($f);

      // OPTIONAL ENUM param = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "param";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\SocialParam';
      $f->default   = \RO\Cmd\SocialParam::SOCIALPARAM_SOCIAL_ADDRELATION;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE user = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "user";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\SocialUser';
      $descriptor->addField($f);

      // OPTIONAL UINT64 destid = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "destid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL ENUM relation = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "relation";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\ESocialRelation';
      $f->default   = \RO\Cmd\ESocialRelation::ESOCIALRELATION_MIN;
      $descriptor->addField($f);

      // OPTIONAL BOOL to_global = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "to_global";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // OPTIONAL BOOL check = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "check";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <cmd> has a value
     *
     * @return boolean
     */
    public function hasCmd(){
      return $this->_has(1);
    }
    
    /**
     * Clear <cmd> value
     *
     * @return \RO\Cmd\AddRelationSocialCmd
     */
    public function clearCmd(){
      return $this->_clear(1);
    }
    
    /**
     * Get <cmd> value
     *
     * @return int - \RO\Cmd\Command
     */
    public function getCmd(){
      return $this->_get(1);
    }
    
    /**
     * Set <cmd> value
     *
     * @param int - \RO\Cmd\Command $value
     * @return \RO\Cmd\AddRelationSocialCmd
     */
    public function setCmd( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <param> has a value
     *
     * @return boolean
     */
    public function hasParam(){
      return $this->_has(2);
    }
    
    /**
     * Clear <param> value
     *
     * @return \RO\Cmd\AddRelationSocialCmd
     */
    public function clearParam(){
      return $this->_clear(2);
    }
    
    /**
     * Get <param> value
     *
     * @return int - \RO\Cmd\SocialParam
     */
    public function getParam(){
      return $this->_get(2);
    }
    
    /**
     * Set <param> value
     *
     * @param int - \RO\Cmd\SocialParam $value
     * @return \RO\Cmd\AddRelationSocialCmd
     */
    public function setParam( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <user> has a value
     *
     * @return boolean
     */
    public function hasUser(){
      return $this->_has(3);
    }
    
    /**
     * Clear <user> value
     *
     * @return \RO\Cmd\AddRelationSocialCmd
     */
    public function clearUser(){
      return $this->_clear(3);
    }
    
    /**
     * Get <user> value
     *
     * @return \RO\Cmd\SocialUser
     */
    public function getUser(){
      return $this->_get(3);
    }
    
    /**
     * Set <user> value
     *
     * @param \RO\Cmd\SocialUser $value
     * @return \RO\Cmd\AddRelationSocialCmd
     */
    public function setUser(\RO\Cmd\SocialUser $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <destid> has a value
     *
     * @return boolean
     */
    public function hasDestid(){
      return $this->_has(4);
    }
    
    /**
     * Clear <destid> value
     *
     * @return \RO\Cmd\AddRelationSocialCmd
     */
    public function clearDestid(){
      return $this->_clear(4);
    }
    
    /**
     * Get <destid> value
     *
     * @return int
     */
    public function getDestid(){
      return $this->_get(4);
    }
    
    /**
     * Set <destid> value
     *
     * @param int $value
     * @return \RO\Cmd\AddRelationSocialCmd
     */
    public function setDestid( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <relation> has a value
     *
     * @return boolean
     */
    public function hasRelation(){
      return $this->_has(5);
    }
    
    /**
     * Clear <relation> value
     *
     * @return \RO\Cmd\AddRelationSocialCmd
     */
    public function clearRelation(){
      return $this->_clear(5);
    }
    
    /**
     * Get <relation> value
     *
     * @return int - \RO\Cmd\ESocialRelation
     */
    public function getRelation(){
      return $this->_get(5);
    }
    
    /**
     * Set <relation> value
     *
     * @param int - \RO\Cmd\ESocialRelation $value
     * @return \RO\Cmd\AddRelationSocialCmd
     */
    public function setRelation( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <to_global> has a value
     *
     * @return boolean
     */
    public function hasToGlobal(){
      return $this->_has(6);
    }
    
    /**
     * Clear <to_global> value
     *
     * @return \RO\Cmd\AddRelationSocialCmd
     */
    public function clearToGlobal(){
      return $this->_clear(6);
    }
    
    /**
     * Get <to_global> value
     *
     * @return boolean
     */
    public function getToGlobal(){
      return $this->_get(6);
    }
    
    /**
     * Set <to_global> value
     *
     * @param boolean $value
     * @return \RO\Cmd\AddRelationSocialCmd
     */
    public function setToGlobal( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <check> has a value
     *
     * @return boolean
     */
    public function hasCheck(){
      return $this->_has(7);
    }
    
    /**
     * Clear <check> value
     *
     * @return \RO\Cmd\AddRelationSocialCmd
     */
    public function clearCheck(){
      return $this->_clear(7);
    }
    
    /**
     * Get <check> value
     *
     * @return boolean
     */
    public function getCheck(){
      return $this->_get(7);
    }
    
    /**
     * Set <check> value
     *
     * @param boolean $value
     * @return \RO\Cmd\AddRelationSocialCmd
     */
    public function setCheck( $value){
      return $this->_set(7, $value);
    }
  }
}

