<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: SessionTeam.proto

namespace RO\Cmd {

  class TeamSealData extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $seal = 0;
    
    /**  @var int */
    public $zoneid = 0;
    
    /**  @var \RO\Cmd\ScenePos */
    public $pos = null;
    
    /**  @var int */
    public $teamid = 0;
    
    /**  @var int */
    public $lastonlinetime = 0;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.TeamSealData');

      // OPTIONAL UINT32 seal = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "seal";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 zoneid = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "zoneid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE pos = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "pos";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\ScenePos';
      $descriptor->addField($f);

      // OPTIONAL UINT64 teamid = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "teamid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 lastonlinetime = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "lastonlinetime";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <seal> has a value
     *
     * @return boolean
     */
    public function hasSeal(){
      return $this->_has(1);
    }
    
    /**
     * Clear <seal> value
     *
     * @return \RO\Cmd\TeamSealData
     */
    public function clearSeal(){
      return $this->_clear(1);
    }
    
    /**
     * Get <seal> value
     *
     * @return int
     */
    public function getSeal(){
      return $this->_get(1);
    }
    
    /**
     * Set <seal> value
     *
     * @param int $value
     * @return \RO\Cmd\TeamSealData
     */
    public function setSeal( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <zoneid> has a value
     *
     * @return boolean
     */
    public function hasZoneid(){
      return $this->_has(3);
    }
    
    /**
     * Clear <zoneid> value
     *
     * @return \RO\Cmd\TeamSealData
     */
    public function clearZoneid(){
      return $this->_clear(3);
    }
    
    /**
     * Get <zoneid> value
     *
     * @return int
     */
    public function getZoneid(){
      return $this->_get(3);
    }
    
    /**
     * Set <zoneid> value
     *
     * @param int $value
     * @return \RO\Cmd\TeamSealData
     */
    public function setZoneid( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <pos> has a value
     *
     * @return boolean
     */
    public function hasPos(){
      return $this->_has(2);
    }
    
    /**
     * Clear <pos> value
     *
     * @return \RO\Cmd\TeamSealData
     */
    public function clearPos(){
      return $this->_clear(2);
    }
    
    /**
     * Get <pos> value
     *
     * @return \RO\Cmd\ScenePos
     */
    public function getPos(){
      return $this->_get(2);
    }
    
    /**
     * Set <pos> value
     *
     * @param \RO\Cmd\ScenePos $value
     * @return \RO\Cmd\TeamSealData
     */
    public function setPos(\RO\Cmd\ScenePos $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <teamid> has a value
     *
     * @return boolean
     */
    public function hasTeamid(){
      return $this->_has(4);
    }
    
    /**
     * Clear <teamid> value
     *
     * @return \RO\Cmd\TeamSealData
     */
    public function clearTeamid(){
      return $this->_clear(4);
    }
    
    /**
     * Get <teamid> value
     *
     * @return int
     */
    public function getTeamid(){
      return $this->_get(4);
    }
    
    /**
     * Set <teamid> value
     *
     * @param int $value
     * @return \RO\Cmd\TeamSealData
     */
    public function setTeamid( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <lastonlinetime> has a value
     *
     * @return boolean
     */
    public function hasLastonlinetime(){
      return $this->_has(5);
    }
    
    /**
     * Clear <lastonlinetime> value
     *
     * @return \RO\Cmd\TeamSealData
     */
    public function clearLastonlinetime(){
      return $this->_clear(5);
    }
    
    /**
     * Get <lastonlinetime> value
     *
     * @return int
     */
    public function getLastonlinetime(){
      return $this->_get(5);
    }
    
    /**
     * Set <lastonlinetime> value
     *
     * @param int $value
     * @return \RO\Cmd\TeamSealData
     */
    public function setLastonlinetime( $value){
      return $this->_set(5, $value);
    }
  }
}

