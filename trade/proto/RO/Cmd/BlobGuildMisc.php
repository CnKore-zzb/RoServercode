<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: GuildCmd.proto

namespace RO\Cmd {

  class BlobGuildMisc extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $var = null;
    
    /**  @var \RO\Cmd\GuildJob[]  */
    public $job = array();
    
    /**  @var int */
    public $donatetime1 = 0;
    
    /**  @var int */
    public $donatetime2 = 0;
    
    /**  @var \RO\Cmd\GuildQuest[]  */
    public $quest = array();
    
    /**  @var int */
    public $nextquesttime = 0;
    
    /**  @var \RO\Cmd\DojoMsgBlob[]  */
    public $dojomsg = array();
    
    /**  @var int */
    public $donatetime3 = 0;
    
    /**  @var int */
    public $donatetime4 = 0;
    
    /**  @var int */
    public $renametime = 0;
    
    /**  @var int */
    public $city_giveup_time = 0;
    
    /**  @var int */
    public $auth_version = 0;
    
    /**  @var \RO\Cmd\GuildBuildingData */
    public $building = null;
    
    /**  @var int */
    public $openfunction = 0;
    
    /**  @var \RO\Cmd\GuildChallengeData */
    public $challenge = null;
    
    /**  @var \RO\Cmd\GuildWelfare */
    public $welfare = null;
    
    /**  @var \RO\Cmd\GuildArtifact */
    public $artifact = null;
    
    /**  @var \RO\Cmd\BlobGQuest */
    public $quests = null;
    
    /**  @var \RO\Cmd\BlobGuildTreasure */
    public $treasures = null;
    
    /**  @var \RO\Cmd\BlobGGvg */
    public $gvg = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.BlobGuildMisc');

      // OPTIONAL BYTES var = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "var";
      $f->type      = \DrSlump\Protobuf::TYPE_BYTES;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE job = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "job";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\GuildJob';
      $descriptor->addField($f);

      // OPTIONAL UINT32 donatetime1 = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "donatetime1";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 donatetime2 = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "donatetime2";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // REPEATED MESSAGE quest = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "quest";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\GuildQuest';
      $descriptor->addField($f);

      // OPTIONAL UINT32 nextquesttime = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "nextquesttime";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // REPEATED MESSAGE dojomsg = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "dojomsg";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\DojoMsgBlob';
      $descriptor->addField($f);

      // OPTIONAL UINT32 donatetime3 = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "donatetime3";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 donatetime4 = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "donatetime4";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 renametime = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "renametime";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 city_giveup_time = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "city_giveup_time";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 auth_version = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "auth_version";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE building = 13
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 13;
      $f->name      = "building";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\GuildBuildingData';
      $descriptor->addField($f);

      // OPTIONAL UINT64 openfunction = 14
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 14;
      $f->name      = "openfunction";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE challenge = 15
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 15;
      $f->name      = "challenge";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\GuildChallengeData';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE welfare = 16
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 16;
      $f->name      = "welfare";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\GuildWelfare';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE artifact = 17
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 17;
      $f->name      = "artifact";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\GuildArtifact';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE quests = 18
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 18;
      $f->name      = "quests";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\BlobGQuest';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE treasures = 19
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 19;
      $f->name      = "treasures";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\BlobGuildTreasure';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE gvg = 20
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20;
      $f->name      = "gvg";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\BlobGGvg';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <var> has a value
     *
     * @return boolean
     */
    public function hasVar(){
      return $this->_has(1);
    }
    
    /**
     * Clear <var> value
     *
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function clearVar(){
      return $this->_clear(1);
    }
    
    /**
     * Get <var> value
     *
     * @return string
     */
    public function getVar(){
      return $this->_get(1);
    }
    
    /**
     * Set <var> value
     *
     * @param string $value
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function setVar( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <job> has a value
     *
     * @return boolean
     */
    public function hasJob(){
      return $this->_has(2);
    }
    
    /**
     * Clear <job> value
     *
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function clearJob(){
      return $this->_clear(2);
    }
    
    /**
     * Get <job> value
     *
     * @param int $idx
     * @return \RO\Cmd\GuildJob
     */
    public function getJob($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <job> value
     *
     * @param \RO\Cmd\GuildJob $value
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function setJob(\RO\Cmd\GuildJob $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <job>
     *
     * @return \RO\Cmd\GuildJob[]
     */
    public function getJobList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <job>
     *
     * @param \RO\Cmd\GuildJob $value
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function addJob(\RO\Cmd\GuildJob $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <donatetime1> has a value
     *
     * @return boolean
     */
    public function hasDonatetime1(){
      return $this->_has(3);
    }
    
    /**
     * Clear <donatetime1> value
     *
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function clearDonatetime1(){
      return $this->_clear(3);
    }
    
    /**
     * Get <donatetime1> value
     *
     * @return int
     */
    public function getDonatetime1(){
      return $this->_get(3);
    }
    
    /**
     * Set <donatetime1> value
     *
     * @param int $value
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function setDonatetime1( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <donatetime2> has a value
     *
     * @return boolean
     */
    public function hasDonatetime2(){
      return $this->_has(4);
    }
    
    /**
     * Clear <donatetime2> value
     *
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function clearDonatetime2(){
      return $this->_clear(4);
    }
    
    /**
     * Get <donatetime2> value
     *
     * @return int
     */
    public function getDonatetime2(){
      return $this->_get(4);
    }
    
    /**
     * Set <donatetime2> value
     *
     * @param int $value
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function setDonatetime2( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <quest> has a value
     *
     * @return boolean
     */
    public function hasQuest(){
      return $this->_has(5);
    }
    
    /**
     * Clear <quest> value
     *
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function clearQuest(){
      return $this->_clear(5);
    }
    
    /**
     * Get <quest> value
     *
     * @param int $idx
     * @return \RO\Cmd\GuildQuest
     */
    public function getQuest($idx = NULL){
      return $this->_get(5, $idx);
    }
    
    /**
     * Set <quest> value
     *
     * @param \RO\Cmd\GuildQuest $value
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function setQuest(\RO\Cmd\GuildQuest $value, $idx = NULL){
      return $this->_set(5, $value, $idx);
    }
    
    /**
     * Get all elements of <quest>
     *
     * @return \RO\Cmd\GuildQuest[]
     */
    public function getQuestList(){
     return $this->_get(5);
    }
    
    /**
     * Add a new element to <quest>
     *
     * @param \RO\Cmd\GuildQuest $value
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function addQuest(\RO\Cmd\GuildQuest $value){
     return $this->_add(5, $value);
    }
    
    /**
     * Check if <nextquesttime> has a value
     *
     * @return boolean
     */
    public function hasNextquesttime(){
      return $this->_has(6);
    }
    
    /**
     * Clear <nextquesttime> value
     *
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function clearNextquesttime(){
      return $this->_clear(6);
    }
    
    /**
     * Get <nextquesttime> value
     *
     * @return int
     */
    public function getNextquesttime(){
      return $this->_get(6);
    }
    
    /**
     * Set <nextquesttime> value
     *
     * @param int $value
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function setNextquesttime( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <dojomsg> has a value
     *
     * @return boolean
     */
    public function hasDojomsg(){
      return $this->_has(7);
    }
    
    /**
     * Clear <dojomsg> value
     *
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function clearDojomsg(){
      return $this->_clear(7);
    }
    
    /**
     * Get <dojomsg> value
     *
     * @param int $idx
     * @return \RO\Cmd\DojoMsgBlob
     */
    public function getDojomsg($idx = NULL){
      return $this->_get(7, $idx);
    }
    
    /**
     * Set <dojomsg> value
     *
     * @param \RO\Cmd\DojoMsgBlob $value
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function setDojomsg(\RO\Cmd\DojoMsgBlob $value, $idx = NULL){
      return $this->_set(7, $value, $idx);
    }
    
    /**
     * Get all elements of <dojomsg>
     *
     * @return \RO\Cmd\DojoMsgBlob[]
     */
    public function getDojomsgList(){
     return $this->_get(7);
    }
    
    /**
     * Add a new element to <dojomsg>
     *
     * @param \RO\Cmd\DojoMsgBlob $value
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function addDojomsg(\RO\Cmd\DojoMsgBlob $value){
     return $this->_add(7, $value);
    }
    
    /**
     * Check if <donatetime3> has a value
     *
     * @return boolean
     */
    public function hasDonatetime3(){
      return $this->_has(8);
    }
    
    /**
     * Clear <donatetime3> value
     *
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function clearDonatetime3(){
      return $this->_clear(8);
    }
    
    /**
     * Get <donatetime3> value
     *
     * @return int
     */
    public function getDonatetime3(){
      return $this->_get(8);
    }
    
    /**
     * Set <donatetime3> value
     *
     * @param int $value
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function setDonatetime3( $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <donatetime4> has a value
     *
     * @return boolean
     */
    public function hasDonatetime4(){
      return $this->_has(9);
    }
    
    /**
     * Clear <donatetime4> value
     *
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function clearDonatetime4(){
      return $this->_clear(9);
    }
    
    /**
     * Get <donatetime4> value
     *
     * @return int
     */
    public function getDonatetime4(){
      return $this->_get(9);
    }
    
    /**
     * Set <donatetime4> value
     *
     * @param int $value
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function setDonatetime4( $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <renametime> has a value
     *
     * @return boolean
     */
    public function hasRenametime(){
      return $this->_has(10);
    }
    
    /**
     * Clear <renametime> value
     *
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function clearRenametime(){
      return $this->_clear(10);
    }
    
    /**
     * Get <renametime> value
     *
     * @return int
     */
    public function getRenametime(){
      return $this->_get(10);
    }
    
    /**
     * Set <renametime> value
     *
     * @param int $value
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function setRenametime( $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <city_giveup_time> has a value
     *
     * @return boolean
     */
    public function hasCityGiveupTime(){
      return $this->_has(11);
    }
    
    /**
     * Clear <city_giveup_time> value
     *
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function clearCityGiveupTime(){
      return $this->_clear(11);
    }
    
    /**
     * Get <city_giveup_time> value
     *
     * @return int
     */
    public function getCityGiveupTime(){
      return $this->_get(11);
    }
    
    /**
     * Set <city_giveup_time> value
     *
     * @param int $value
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function setCityGiveupTime( $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <auth_version> has a value
     *
     * @return boolean
     */
    public function hasAuthVersion(){
      return $this->_has(12);
    }
    
    /**
     * Clear <auth_version> value
     *
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function clearAuthVersion(){
      return $this->_clear(12);
    }
    
    /**
     * Get <auth_version> value
     *
     * @return int
     */
    public function getAuthVersion(){
      return $this->_get(12);
    }
    
    /**
     * Set <auth_version> value
     *
     * @param int $value
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function setAuthVersion( $value){
      return $this->_set(12, $value);
    }
    
    /**
     * Check if <building> has a value
     *
     * @return boolean
     */
    public function hasBuilding(){
      return $this->_has(13);
    }
    
    /**
     * Clear <building> value
     *
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function clearBuilding(){
      return $this->_clear(13);
    }
    
    /**
     * Get <building> value
     *
     * @return \RO\Cmd\GuildBuildingData
     */
    public function getBuilding(){
      return $this->_get(13);
    }
    
    /**
     * Set <building> value
     *
     * @param \RO\Cmd\GuildBuildingData $value
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function setBuilding(\RO\Cmd\GuildBuildingData $value){
      return $this->_set(13, $value);
    }
    
    /**
     * Check if <openfunction> has a value
     *
     * @return boolean
     */
    public function hasOpenfunction(){
      return $this->_has(14);
    }
    
    /**
     * Clear <openfunction> value
     *
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function clearOpenfunction(){
      return $this->_clear(14);
    }
    
    /**
     * Get <openfunction> value
     *
     * @return int
     */
    public function getOpenfunction(){
      return $this->_get(14);
    }
    
    /**
     * Set <openfunction> value
     *
     * @param int $value
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function setOpenfunction( $value){
      return $this->_set(14, $value);
    }
    
    /**
     * Check if <challenge> has a value
     *
     * @return boolean
     */
    public function hasChallenge(){
      return $this->_has(15);
    }
    
    /**
     * Clear <challenge> value
     *
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function clearChallenge(){
      return $this->_clear(15);
    }
    
    /**
     * Get <challenge> value
     *
     * @return \RO\Cmd\GuildChallengeData
     */
    public function getChallenge(){
      return $this->_get(15);
    }
    
    /**
     * Set <challenge> value
     *
     * @param \RO\Cmd\GuildChallengeData $value
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function setChallenge(\RO\Cmd\GuildChallengeData $value){
      return $this->_set(15, $value);
    }
    
    /**
     * Check if <welfare> has a value
     *
     * @return boolean
     */
    public function hasWelfare(){
      return $this->_has(16);
    }
    
    /**
     * Clear <welfare> value
     *
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function clearWelfare(){
      return $this->_clear(16);
    }
    
    /**
     * Get <welfare> value
     *
     * @return \RO\Cmd\GuildWelfare
     */
    public function getWelfare(){
      return $this->_get(16);
    }
    
    /**
     * Set <welfare> value
     *
     * @param \RO\Cmd\GuildWelfare $value
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function setWelfare(\RO\Cmd\GuildWelfare $value){
      return $this->_set(16, $value);
    }
    
    /**
     * Check if <artifact> has a value
     *
     * @return boolean
     */
    public function hasArtifact(){
      return $this->_has(17);
    }
    
    /**
     * Clear <artifact> value
     *
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function clearArtifact(){
      return $this->_clear(17);
    }
    
    /**
     * Get <artifact> value
     *
     * @return \RO\Cmd\GuildArtifact
     */
    public function getArtifact(){
      return $this->_get(17);
    }
    
    /**
     * Set <artifact> value
     *
     * @param \RO\Cmd\GuildArtifact $value
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function setArtifact(\RO\Cmd\GuildArtifact $value){
      return $this->_set(17, $value);
    }
    
    /**
     * Check if <quests> has a value
     *
     * @return boolean
     */
    public function hasQuests(){
      return $this->_has(18);
    }
    
    /**
     * Clear <quests> value
     *
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function clearQuests(){
      return $this->_clear(18);
    }
    
    /**
     * Get <quests> value
     *
     * @return \RO\Cmd\BlobGQuest
     */
    public function getQuests(){
      return $this->_get(18);
    }
    
    /**
     * Set <quests> value
     *
     * @param \RO\Cmd\BlobGQuest $value
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function setQuests(\RO\Cmd\BlobGQuest $value){
      return $this->_set(18, $value);
    }
    
    /**
     * Check if <treasures> has a value
     *
     * @return boolean
     */
    public function hasTreasures(){
      return $this->_has(19);
    }
    
    /**
     * Clear <treasures> value
     *
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function clearTreasures(){
      return $this->_clear(19);
    }
    
    /**
     * Get <treasures> value
     *
     * @return \RO\Cmd\BlobGuildTreasure
     */
    public function getTreasures(){
      return $this->_get(19);
    }
    
    /**
     * Set <treasures> value
     *
     * @param \RO\Cmd\BlobGuildTreasure $value
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function setTreasures(\RO\Cmd\BlobGuildTreasure $value){
      return $this->_set(19, $value);
    }
    
    /**
     * Check if <gvg> has a value
     *
     * @return boolean
     */
    public function hasGvg(){
      return $this->_has(20);
    }
    
    /**
     * Clear <gvg> value
     *
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function clearGvg(){
      return $this->_clear(20);
    }
    
    /**
     * Get <gvg> value
     *
     * @return \RO\Cmd\BlobGGvg
     */
    public function getGvg(){
      return $this->_get(20);
    }
    
    /**
     * Set <gvg> value
     *
     * @param \RO\Cmd\BlobGGvg $value
     * @return \RO\Cmd\BlobGuildMisc
     */
    public function setGvg(\RO\Cmd\BlobGGvg $value){
      return $this->_set(20, $value);
    }
  }
}

