<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: ScenePet.proto

namespace RO\Cmd {

  class UserPetData extends \DrSlump\Protobuf\Message {

    /**  @var \RO\Cmd\EggData */
    public $basedata = null;
    
    /**  @var boolean */
    public $inhand = false;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.UserPetData');

      // OPTIONAL MESSAGE basedata = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "basedata";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\EggData';
      $descriptor->addField($f);

      // OPTIONAL BOOL inhand = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "inhand";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <basedata> has a value
     *
     * @return boolean
     */
    public function hasBasedata(){
      return $this->_has(1);
    }
    
    /**
     * Clear <basedata> value
     *
     * @return \RO\Cmd\UserPetData
     */
    public function clearBasedata(){
      return $this->_clear(1);
    }
    
    /**
     * Get <basedata> value
     *
     * @return \RO\Cmd\EggData
     */
    public function getBasedata(){
      return $this->_get(1);
    }
    
    /**
     * Set <basedata> value
     *
     * @param \RO\Cmd\EggData $value
     * @return \RO\Cmd\UserPetData
     */
    public function setBasedata(\RO\Cmd\EggData $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <inhand> has a value
     *
     * @return boolean
     */
    public function hasInhand(){
      return $this->_has(2);
    }
    
    /**
     * Clear <inhand> value
     *
     * @return \RO\Cmd\UserPetData
     */
    public function clearInhand(){
      return $this->_clear(2);
    }
    
    /**
     * Get <inhand> value
     *
     * @return boolean
     */
    public function getInhand(){
      return $this->_get(2);
    }
    
    /**
     * Set <inhand> value
     *
     * @param boolean $value
     * @return \RO\Cmd\UserPetData
     */
    public function setInhand( $value){
      return $this->_set(2, $value);
    }
  }
}

