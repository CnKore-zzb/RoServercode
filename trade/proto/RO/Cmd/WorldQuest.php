<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: SceneQuest.proto

namespace RO\Cmd {

  class WorldQuest extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $mapid = 0;
    
    /**  @var boolean */
    public $type_main = false;
    
    /**  @var boolean */
    public $type_branch = false;
    
    /**  @var boolean */
    public $type_daily = false;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.WorldQuest');

      // OPTIONAL UINT32 mapid = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "mapid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL BOOL type_main = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "type_main";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // OPTIONAL BOOL type_branch = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "type_branch";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // OPTIONAL BOOL type_daily = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "type_daily";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <mapid> has a value
     *
     * @return boolean
     */
    public function hasMapid(){
      return $this->_has(1);
    }
    
    /**
     * Clear <mapid> value
     *
     * @return \RO\Cmd\WorldQuest
     */
    public function clearMapid(){
      return $this->_clear(1);
    }
    
    /**
     * Get <mapid> value
     *
     * @return int
     */
    public function getMapid(){
      return $this->_get(1);
    }
    
    /**
     * Set <mapid> value
     *
     * @param int $value
     * @return \RO\Cmd\WorldQuest
     */
    public function setMapid( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <type_main> has a value
     *
     * @return boolean
     */
    public function hasTypeMain(){
      return $this->_has(2);
    }
    
    /**
     * Clear <type_main> value
     *
     * @return \RO\Cmd\WorldQuest
     */
    public function clearTypeMain(){
      return $this->_clear(2);
    }
    
    /**
     * Get <type_main> value
     *
     * @return boolean
     */
    public function getTypeMain(){
      return $this->_get(2);
    }
    
    /**
     * Set <type_main> value
     *
     * @param boolean $value
     * @return \RO\Cmd\WorldQuest
     */
    public function setTypeMain( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <type_branch> has a value
     *
     * @return boolean
     */
    public function hasTypeBranch(){
      return $this->_has(3);
    }
    
    /**
     * Clear <type_branch> value
     *
     * @return \RO\Cmd\WorldQuest
     */
    public function clearTypeBranch(){
      return $this->_clear(3);
    }
    
    /**
     * Get <type_branch> value
     *
     * @return boolean
     */
    public function getTypeBranch(){
      return $this->_get(3);
    }
    
    /**
     * Set <type_branch> value
     *
     * @param boolean $value
     * @return \RO\Cmd\WorldQuest
     */
    public function setTypeBranch( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <type_daily> has a value
     *
     * @return boolean
     */
    public function hasTypeDaily(){
      return $this->_has(4);
    }
    
    /**
     * Clear <type_daily> value
     *
     * @return \RO\Cmd\WorldQuest
     */
    public function clearTypeDaily(){
      return $this->_clear(4);
    }
    
    /**
     * Get <type_daily> value
     *
     * @return boolean
     */
    public function getTypeDaily(){
      return $this->_get(4);
    }
    
    /**
     * Set <type_daily> value
     *
     * @param boolean $value
     * @return \RO\Cmd\WorldQuest
     */
    public function setTypeDaily( $value){
      return $this->_set(4, $value);
    }
  }
}

