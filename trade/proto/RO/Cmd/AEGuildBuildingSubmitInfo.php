<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: ActivityEvent.proto

namespace RO\Cmd {

  class AEGuildBuildingSubmitInfo extends \DrSlump\Protobuf\Message {

    /**  @var int - \RO\Cmd\EGuildBuilding[]  */
    public $types = array();
    
    /**  @var int */
    public $minlv = 0;
    
    /**  @var int */
    public $maxlv = 0;
    
    /**  @var int */
    public $submitinc = 0;
    
    /**  @var int */
    public $rewardinc = 0;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.AEGuildBuildingSubmitInfo');

      // REPEATED ENUM types = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "types";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\EGuildBuilding';
      $descriptor->addField($f);

      // OPTIONAL UINT32 minlv = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "minlv";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 maxlv = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "maxlv";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 submitinc = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "submitinc";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 rewardinc = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "rewardinc";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <types> has a value
     *
     * @return boolean
     */
    public function hasTypes(){
      return $this->_has(1);
    }
    
    /**
     * Clear <types> value
     *
     * @return \RO\Cmd\AEGuildBuildingSubmitInfo
     */
    public function clearTypes(){
      return $this->_clear(1);
    }
    
    /**
     * Get <types> value
     *
     * @param int $idx
     * @return int - \RO\Cmd\EGuildBuilding
     */
    public function getTypes($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <types> value
     *
     * @param int - \RO\Cmd\EGuildBuilding $value
     * @return \RO\Cmd\AEGuildBuildingSubmitInfo
     */
    public function setTypes( $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <types>
     *
     * @return int - \RO\Cmd\EGuildBuilding[]
     */
    public function getTypesList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <types>
     *
     * @param int - \RO\Cmd\EGuildBuilding $value
     * @return \RO\Cmd\AEGuildBuildingSubmitInfo
     */
    public function addTypes( $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <minlv> has a value
     *
     * @return boolean
     */
    public function hasMinlv(){
      return $this->_has(2);
    }
    
    /**
     * Clear <minlv> value
     *
     * @return \RO\Cmd\AEGuildBuildingSubmitInfo
     */
    public function clearMinlv(){
      return $this->_clear(2);
    }
    
    /**
     * Get <minlv> value
     *
     * @return int
     */
    public function getMinlv(){
      return $this->_get(2);
    }
    
    /**
     * Set <minlv> value
     *
     * @param int $value
     * @return \RO\Cmd\AEGuildBuildingSubmitInfo
     */
    public function setMinlv( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <maxlv> has a value
     *
     * @return boolean
     */
    public function hasMaxlv(){
      return $this->_has(3);
    }
    
    /**
     * Clear <maxlv> value
     *
     * @return \RO\Cmd\AEGuildBuildingSubmitInfo
     */
    public function clearMaxlv(){
      return $this->_clear(3);
    }
    
    /**
     * Get <maxlv> value
     *
     * @return int
     */
    public function getMaxlv(){
      return $this->_get(3);
    }
    
    /**
     * Set <maxlv> value
     *
     * @param int $value
     * @return \RO\Cmd\AEGuildBuildingSubmitInfo
     */
    public function setMaxlv( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <submitinc> has a value
     *
     * @return boolean
     */
    public function hasSubmitinc(){
      return $this->_has(4);
    }
    
    /**
     * Clear <submitinc> value
     *
     * @return \RO\Cmd\AEGuildBuildingSubmitInfo
     */
    public function clearSubmitinc(){
      return $this->_clear(4);
    }
    
    /**
     * Get <submitinc> value
     *
     * @return int
     */
    public function getSubmitinc(){
      return $this->_get(4);
    }
    
    /**
     * Set <submitinc> value
     *
     * @param int $value
     * @return \RO\Cmd\AEGuildBuildingSubmitInfo
     */
    public function setSubmitinc( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <rewardinc> has a value
     *
     * @return boolean
     */
    public function hasRewardinc(){
      return $this->_has(5);
    }
    
    /**
     * Clear <rewardinc> value
     *
     * @return \RO\Cmd\AEGuildBuildingSubmitInfo
     */
    public function clearRewardinc(){
      return $this->_clear(5);
    }
    
    /**
     * Get <rewardinc> value
     *
     * @return int
     */
    public function getRewardinc(){
      return $this->_get(5);
    }
    
    /**
     * Set <rewardinc> value
     *
     * @param int $value
     * @return \RO\Cmd\AEGuildBuildingSubmitInfo
     */
    public function setRewardinc( $value){
      return $this->_set(5, $value);
    }
  }
}

