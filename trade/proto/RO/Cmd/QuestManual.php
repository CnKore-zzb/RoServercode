<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: SceneQuest.proto

namespace RO\Cmd {

  class QuestManual extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $version = null;
    
    /**  @var \RO\Cmd\QuestManualMain */
    public $main = null;
    
    /**  @var \RO\Cmd\QuestManualBranch */
    public $branch = null;
    
    /**  @var \RO\Cmd\QuestManualStory */
    public $story = null;
    
    /**  @var \RO\Cmd\QuestName[]  */
    public $prequest = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.QuestManual');

      // OPTIONAL STRING version = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "version";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE main = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "main";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\QuestManualMain';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE branch = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "branch";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\QuestManualBranch';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE story = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "story";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\QuestManualStory';
      $descriptor->addField($f);

      // REPEATED MESSAGE prequest = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "prequest";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\QuestName';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <version> has a value
     *
     * @return boolean
     */
    public function hasVersion(){
      return $this->_has(1);
    }
    
    /**
     * Clear <version> value
     *
     * @return \RO\Cmd\QuestManual
     */
    public function clearVersion(){
      return $this->_clear(1);
    }
    
    /**
     * Get <version> value
     *
     * @return string
     */
    public function getVersion(){
      return $this->_get(1);
    }
    
    /**
     * Set <version> value
     *
     * @param string $value
     * @return \RO\Cmd\QuestManual
     */
    public function setVersion( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <main> has a value
     *
     * @return boolean
     */
    public function hasMain(){
      return $this->_has(2);
    }
    
    /**
     * Clear <main> value
     *
     * @return \RO\Cmd\QuestManual
     */
    public function clearMain(){
      return $this->_clear(2);
    }
    
    /**
     * Get <main> value
     *
     * @return \RO\Cmd\QuestManualMain
     */
    public function getMain(){
      return $this->_get(2);
    }
    
    /**
     * Set <main> value
     *
     * @param \RO\Cmd\QuestManualMain $value
     * @return \RO\Cmd\QuestManual
     */
    public function setMain(\RO\Cmd\QuestManualMain $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <branch> has a value
     *
     * @return boolean
     */
    public function hasBranch(){
      return $this->_has(3);
    }
    
    /**
     * Clear <branch> value
     *
     * @return \RO\Cmd\QuestManual
     */
    public function clearBranch(){
      return $this->_clear(3);
    }
    
    /**
     * Get <branch> value
     *
     * @return \RO\Cmd\QuestManualBranch
     */
    public function getBranch(){
      return $this->_get(3);
    }
    
    /**
     * Set <branch> value
     *
     * @param \RO\Cmd\QuestManualBranch $value
     * @return \RO\Cmd\QuestManual
     */
    public function setBranch(\RO\Cmd\QuestManualBranch $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <story> has a value
     *
     * @return boolean
     */
    public function hasStory(){
      return $this->_has(4);
    }
    
    /**
     * Clear <story> value
     *
     * @return \RO\Cmd\QuestManual
     */
    public function clearStory(){
      return $this->_clear(4);
    }
    
    /**
     * Get <story> value
     *
     * @return \RO\Cmd\QuestManualStory
     */
    public function getStory(){
      return $this->_get(4);
    }
    
    /**
     * Set <story> value
     *
     * @param \RO\Cmd\QuestManualStory $value
     * @return \RO\Cmd\QuestManual
     */
    public function setStory(\RO\Cmd\QuestManualStory $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <prequest> has a value
     *
     * @return boolean
     */
    public function hasPrequest(){
      return $this->_has(5);
    }
    
    /**
     * Clear <prequest> value
     *
     * @return \RO\Cmd\QuestManual
     */
    public function clearPrequest(){
      return $this->_clear(5);
    }
    
    /**
     * Get <prequest> value
     *
     * @param int $idx
     * @return \RO\Cmd\QuestName
     */
    public function getPrequest($idx = NULL){
      return $this->_get(5, $idx);
    }
    
    /**
     * Set <prequest> value
     *
     * @param \RO\Cmd\QuestName $value
     * @return \RO\Cmd\QuestManual
     */
    public function setPrequest(\RO\Cmd\QuestName $value, $idx = NULL){
      return $this->_set(5, $value, $idx);
    }
    
    /**
     * Get all elements of <prequest>
     *
     * @return \RO\Cmd\QuestName[]
     */
    public function getPrequestList(){
     return $this->_get(5);
    }
    
    /**
     * Add a new element to <prequest>
     *
     * @param \RO\Cmd\QuestName $value
     * @return \RO\Cmd\QuestManual
     */
    public function addPrequest(\RO\Cmd\QuestName $value){
     return $this->_add(5, $value);
    }
  }
}

