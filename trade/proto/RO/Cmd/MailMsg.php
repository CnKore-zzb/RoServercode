<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: SessionMail.proto

namespace RO\Cmd {

  class MailMsg extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $language = 0;
    
    /**  @var string */
    public $title = null;
    
    /**  @var string */
    public $msg = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.MailMsg');

      // OPTIONAL UINT32 language = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "language";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL STRING title = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "title";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING msg = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "msg";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <language> has a value
     *
     * @return boolean
     */
    public function hasLanguage(){
      return $this->_has(1);
    }
    
    /**
     * Clear <language> value
     *
     * @return \RO\Cmd\MailMsg
     */
    public function clearLanguage(){
      return $this->_clear(1);
    }
    
    /**
     * Get <language> value
     *
     * @return int
     */
    public function getLanguage(){
      return $this->_get(1);
    }
    
    /**
     * Set <language> value
     *
     * @param int $value
     * @return \RO\Cmd\MailMsg
     */
    public function setLanguage( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <title> has a value
     *
     * @return boolean
     */
    public function hasTitle(){
      return $this->_has(2);
    }
    
    /**
     * Clear <title> value
     *
     * @return \RO\Cmd\MailMsg
     */
    public function clearTitle(){
      return $this->_clear(2);
    }
    
    /**
     * Get <title> value
     *
     * @return string
     */
    public function getTitle(){
      return $this->_get(2);
    }
    
    /**
     * Set <title> value
     *
     * @param string $value
     * @return \RO\Cmd\MailMsg
     */
    public function setTitle( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <msg> has a value
     *
     * @return boolean
     */
    public function hasMsg(){
      return $this->_has(3);
    }
    
    /**
     * Clear <msg> value
     *
     * @return \RO\Cmd\MailMsg
     */
    public function clearMsg(){
      return $this->_clear(3);
    }
    
    /**
     * Get <msg> value
     *
     * @return string
     */
    public function getMsg(){
      return $this->_get(3);
    }
    
    /**
     * Set <msg> value
     *
     * @param string $value
     * @return \RO\Cmd\MailMsg
     */
    public function setMsg( $value){
      return $this->_set(3, $value);
    }
  }
}

