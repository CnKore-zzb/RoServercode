<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: SessionCmd.proto

namespace RO\Cmd {

  class GetMailAttachSessionCmd extends \DrSlump\Protobuf\Message {

    /**  @var int - \RO\Cmd\Command */
    public $cmd = \RO\Cmd\Command::SESSION_PROTOCMD;
    
    /**  @var int - \RO\Cmd\SessionParam */
    public $param = \RO\Cmd\SessionParam::SESSIONPARAM_GET_MAILATTACH;
    
    /**  @var int */
    public $charid = 0;
    
    /**  @var int */
    public $mailid = 0;
    
    /**  @var int */
    public $msgid = 0;
    
    /**  @var \RO\Cmd\ItemInfo[]  */
    public $items = array();
    
    /**  @var \RO\Cmd\ItemData[]  */
    public $itemDatas = array();
    
    /**  @var string */
    public $groupid = null;
    
    /**  @var int - \RO\Cmd\EGetMailOpt */
    public $opt = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.GetMailAttachSessionCmd');

      // OPTIONAL ENUM cmd = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "cmd";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\Command';
      $f->default   = \RO\Cmd\Command::SESSION_PROTOCMD;
      $descriptor->addField($f);

      // OPTIONAL ENUM param = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "param";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\SessionParam';
      $f->default   = \RO\Cmd\SessionParam::SESSIONPARAM_GET_MAILATTACH;
      $descriptor->addField($f);

      // OPTIONAL UINT64 charid = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "charid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT64 mailid = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "mailid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 msgid = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "msgid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // REPEATED MESSAGE items = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "items";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\ItemInfo';
      $descriptor->addField($f);

      // REPEATED MESSAGE itemDatas = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "itemDatas";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\ItemData';
      $descriptor->addField($f);

      // OPTIONAL STRING groupid = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "groupid";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL ENUM opt = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "opt";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\EGetMailOpt';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <cmd> has a value
     *
     * @return boolean
     */
    public function hasCmd(){
      return $this->_has(1);
    }
    
    /**
     * Clear <cmd> value
     *
     * @return \RO\Cmd\GetMailAttachSessionCmd
     */
    public function clearCmd(){
      return $this->_clear(1);
    }
    
    /**
     * Get <cmd> value
     *
     * @return int - \RO\Cmd\Command
     */
    public function getCmd(){
      return $this->_get(1);
    }
    
    /**
     * Set <cmd> value
     *
     * @param int - \RO\Cmd\Command $value
     * @return \RO\Cmd\GetMailAttachSessionCmd
     */
    public function setCmd( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <param> has a value
     *
     * @return boolean
     */
    public function hasParam(){
      return $this->_has(2);
    }
    
    /**
     * Clear <param> value
     *
     * @return \RO\Cmd\GetMailAttachSessionCmd
     */
    public function clearParam(){
      return $this->_clear(2);
    }
    
    /**
     * Get <param> value
     *
     * @return int - \RO\Cmd\SessionParam
     */
    public function getParam(){
      return $this->_get(2);
    }
    
    /**
     * Set <param> value
     *
     * @param int - \RO\Cmd\SessionParam $value
     * @return \RO\Cmd\GetMailAttachSessionCmd
     */
    public function setParam( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <charid> has a value
     *
     * @return boolean
     */
    public function hasCharid(){
      return $this->_has(3);
    }
    
    /**
     * Clear <charid> value
     *
     * @return \RO\Cmd\GetMailAttachSessionCmd
     */
    public function clearCharid(){
      return $this->_clear(3);
    }
    
    /**
     * Get <charid> value
     *
     * @return int
     */
    public function getCharid(){
      return $this->_get(3);
    }
    
    /**
     * Set <charid> value
     *
     * @param int $value
     * @return \RO\Cmd\GetMailAttachSessionCmd
     */
    public function setCharid( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <mailid> has a value
     *
     * @return boolean
     */
    public function hasMailid(){
      return $this->_has(4);
    }
    
    /**
     * Clear <mailid> value
     *
     * @return \RO\Cmd\GetMailAttachSessionCmd
     */
    public function clearMailid(){
      return $this->_clear(4);
    }
    
    /**
     * Get <mailid> value
     *
     * @return int
     */
    public function getMailid(){
      return $this->_get(4);
    }
    
    /**
     * Set <mailid> value
     *
     * @param int $value
     * @return \RO\Cmd\GetMailAttachSessionCmd
     */
    public function setMailid( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <msgid> has a value
     *
     * @return boolean
     */
    public function hasMsgid(){
      return $this->_has(5);
    }
    
    /**
     * Clear <msgid> value
     *
     * @return \RO\Cmd\GetMailAttachSessionCmd
     */
    public function clearMsgid(){
      return $this->_clear(5);
    }
    
    /**
     * Get <msgid> value
     *
     * @return int
     */
    public function getMsgid(){
      return $this->_get(5);
    }
    
    /**
     * Set <msgid> value
     *
     * @param int $value
     * @return \RO\Cmd\GetMailAttachSessionCmd
     */
    public function setMsgid( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <items> has a value
     *
     * @return boolean
     */
    public function hasItems(){
      return $this->_has(6);
    }
    
    /**
     * Clear <items> value
     *
     * @return \RO\Cmd\GetMailAttachSessionCmd
     */
    public function clearItems(){
      return $this->_clear(6);
    }
    
    /**
     * Get <items> value
     *
     * @param int $idx
     * @return \RO\Cmd\ItemInfo
     */
    public function getItems($idx = NULL){
      return $this->_get(6, $idx);
    }
    
    /**
     * Set <items> value
     *
     * @param \RO\Cmd\ItemInfo $value
     * @return \RO\Cmd\GetMailAttachSessionCmd
     */
    public function setItems(\RO\Cmd\ItemInfo $value, $idx = NULL){
      return $this->_set(6, $value, $idx);
    }
    
    /**
     * Get all elements of <items>
     *
     * @return \RO\Cmd\ItemInfo[]
     */
    public function getItemsList(){
     return $this->_get(6);
    }
    
    /**
     * Add a new element to <items>
     *
     * @param \RO\Cmd\ItemInfo $value
     * @return \RO\Cmd\GetMailAttachSessionCmd
     */
    public function addItems(\RO\Cmd\ItemInfo $value){
     return $this->_add(6, $value);
    }
    
    /**
     * Check if <itemDatas> has a value
     *
     * @return boolean
     */
    public function hasItemDatas(){
      return $this->_has(7);
    }
    
    /**
     * Clear <itemDatas> value
     *
     * @return \RO\Cmd\GetMailAttachSessionCmd
     */
    public function clearItemDatas(){
      return $this->_clear(7);
    }
    
    /**
     * Get <itemDatas> value
     *
     * @param int $idx
     * @return \RO\Cmd\ItemData
     */
    public function getItemDatas($idx = NULL){
      return $this->_get(7, $idx);
    }
    
    /**
     * Set <itemDatas> value
     *
     * @param \RO\Cmd\ItemData $value
     * @return \RO\Cmd\GetMailAttachSessionCmd
     */
    public function setItemDatas(\RO\Cmd\ItemData $value, $idx = NULL){
      return $this->_set(7, $value, $idx);
    }
    
    /**
     * Get all elements of <itemDatas>
     *
     * @return \RO\Cmd\ItemData[]
     */
    public function getItemDatasList(){
     return $this->_get(7);
    }
    
    /**
     * Add a new element to <itemDatas>
     *
     * @param \RO\Cmd\ItemData $value
     * @return \RO\Cmd\GetMailAttachSessionCmd
     */
    public function addItemDatas(\RO\Cmd\ItemData $value){
     return $this->_add(7, $value);
    }
    
    /**
     * Check if <groupid> has a value
     *
     * @return boolean
     */
    public function hasGroupid(){
      return $this->_has(8);
    }
    
    /**
     * Clear <groupid> value
     *
     * @return \RO\Cmd\GetMailAttachSessionCmd
     */
    public function clearGroupid(){
      return $this->_clear(8);
    }
    
    /**
     * Get <groupid> value
     *
     * @return string
     */
    public function getGroupid(){
      return $this->_get(8);
    }
    
    /**
     * Set <groupid> value
     *
     * @param string $value
     * @return \RO\Cmd\GetMailAttachSessionCmd
     */
    public function setGroupid( $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <opt> has a value
     *
     * @return boolean
     */
    public function hasOpt(){
      return $this->_has(9);
    }
    
    /**
     * Clear <opt> value
     *
     * @return \RO\Cmd\GetMailAttachSessionCmd
     */
    public function clearOpt(){
      return $this->_clear(9);
    }
    
    /**
     * Get <opt> value
     *
     * @return int - \RO\Cmd\EGetMailOpt
     */
    public function getOpt(){
      return $this->_get(9);
    }
    
    /**
     * Set <opt> value
     *
     * @param int - \RO\Cmd\EGetMailOpt $value
     * @return \RO\Cmd\GetMailAttachSessionCmd
     */
    public function setOpt( $value){
      return $this->_set(9, $value);
    }
  }
}

