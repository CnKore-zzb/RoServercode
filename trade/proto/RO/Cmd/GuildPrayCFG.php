<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: GuildCmd.proto

namespace RO\Cmd {

  class GuildPrayCFG extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $prayid = 0;
    
    /**  @var int */
    public $praylv = 0;
    
    /**  @var int - \RO\Cmd\EPrayType */
    public $type = \RO\Cmd\EPrayType::EPRAYTYPE_GODDESS;
    
    /**  @var \RO\Cmd\UserAttr[]  */
    public $attrs = array();
    
    /**  @var \RO\Cmd\ItemInfo[]  */
    public $costs = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.GuildPrayCFG');

      // OPTIONAL UINT32 prayid = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "prayid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 praylv = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "praylv";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL ENUM type = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "type";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\EPrayType';
      $f->default   = \RO\Cmd\EPrayType::EPRAYTYPE_GODDESS;
      $descriptor->addField($f);

      // REPEATED MESSAGE attrs = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "attrs";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\UserAttr';
      $descriptor->addField($f);

      // REPEATED MESSAGE costs = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "costs";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\ItemInfo';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <prayid> has a value
     *
     * @return boolean
     */
    public function hasPrayid(){
      return $this->_has(1);
    }
    
    /**
     * Clear <prayid> value
     *
     * @return \RO\Cmd\GuildPrayCFG
     */
    public function clearPrayid(){
      return $this->_clear(1);
    }
    
    /**
     * Get <prayid> value
     *
     * @return int
     */
    public function getPrayid(){
      return $this->_get(1);
    }
    
    /**
     * Set <prayid> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildPrayCFG
     */
    public function setPrayid( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <praylv> has a value
     *
     * @return boolean
     */
    public function hasPraylv(){
      return $this->_has(2);
    }
    
    /**
     * Clear <praylv> value
     *
     * @return \RO\Cmd\GuildPrayCFG
     */
    public function clearPraylv(){
      return $this->_clear(2);
    }
    
    /**
     * Get <praylv> value
     *
     * @return int
     */
    public function getPraylv(){
      return $this->_get(2);
    }
    
    /**
     * Set <praylv> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildPrayCFG
     */
    public function setPraylv( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <type> has a value
     *
     * @return boolean
     */
    public function hasType(){
      return $this->_has(3);
    }
    
    /**
     * Clear <type> value
     *
     * @return \RO\Cmd\GuildPrayCFG
     */
    public function clearType(){
      return $this->_clear(3);
    }
    
    /**
     * Get <type> value
     *
     * @return int - \RO\Cmd\EPrayType
     */
    public function getType(){
      return $this->_get(3);
    }
    
    /**
     * Set <type> value
     *
     * @param int - \RO\Cmd\EPrayType $value
     * @return \RO\Cmd\GuildPrayCFG
     */
    public function setType( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <attrs> has a value
     *
     * @return boolean
     */
    public function hasAttrs(){
      return $this->_has(4);
    }
    
    /**
     * Clear <attrs> value
     *
     * @return \RO\Cmd\GuildPrayCFG
     */
    public function clearAttrs(){
      return $this->_clear(4);
    }
    
    /**
     * Get <attrs> value
     *
     * @param int $idx
     * @return \RO\Cmd\UserAttr
     */
    public function getAttrs($idx = NULL){
      return $this->_get(4, $idx);
    }
    
    /**
     * Set <attrs> value
     *
     * @param \RO\Cmd\UserAttr $value
     * @return \RO\Cmd\GuildPrayCFG
     */
    public function setAttrs(\RO\Cmd\UserAttr $value, $idx = NULL){
      return $this->_set(4, $value, $idx);
    }
    
    /**
     * Get all elements of <attrs>
     *
     * @return \RO\Cmd\UserAttr[]
     */
    public function getAttrsList(){
     return $this->_get(4);
    }
    
    /**
     * Add a new element to <attrs>
     *
     * @param \RO\Cmd\UserAttr $value
     * @return \RO\Cmd\GuildPrayCFG
     */
    public function addAttrs(\RO\Cmd\UserAttr $value){
     return $this->_add(4, $value);
    }
    
    /**
     * Check if <costs> has a value
     *
     * @return boolean
     */
    public function hasCosts(){
      return $this->_has(5);
    }
    
    /**
     * Clear <costs> value
     *
     * @return \RO\Cmd\GuildPrayCFG
     */
    public function clearCosts(){
      return $this->_clear(5);
    }
    
    /**
     * Get <costs> value
     *
     * @param int $idx
     * @return \RO\Cmd\ItemInfo
     */
    public function getCosts($idx = NULL){
      return $this->_get(5, $idx);
    }
    
    /**
     * Set <costs> value
     *
     * @param \RO\Cmd\ItemInfo $value
     * @return \RO\Cmd\GuildPrayCFG
     */
    public function setCosts(\RO\Cmd\ItemInfo $value, $idx = NULL){
      return $this->_set(5, $value, $idx);
    }
    
    /**
     * Get all elements of <costs>
     *
     * @return \RO\Cmd\ItemInfo[]
     */
    public function getCostsList(){
     return $this->_get(5);
    }
    
    /**
     * Add a new element to <costs>
     *
     * @param \RO\Cmd\ItemInfo $value
     * @return \RO\Cmd\GuildPrayCFG
     */
    public function addCosts(\RO\Cmd\ItemInfo $value){
     return $this->_add(5, $value);
    }
  }
}

