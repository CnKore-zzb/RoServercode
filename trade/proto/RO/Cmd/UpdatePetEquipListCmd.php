<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: ScenePet.proto

namespace RO\Cmd {

  class UpdatePetEquipListCmd extends \DrSlump\Protobuf\Message {

    /**  @var int - \RO\Cmd\Command */
    public $cmd = \RO\Cmd\Command::SCENE_USER_PET_PROTOCMD;
    
    /**  @var int - \RO\Cmd\PetParam */
    public $param = \RO\Cmd\PetParam::PETPARAM_EQUIP_LIST_UPDATE;
    
    /**  @var int[]  */
    public $additems = array();
    
    /**  @var \RO\Cmd\SpecPetEquip[]  */
    public $addbodyitems = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.UpdatePetEquipListCmd');

      // OPTIONAL ENUM cmd = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "cmd";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\Command';
      $f->default   = \RO\Cmd\Command::SCENE_USER_PET_PROTOCMD;
      $descriptor->addField($f);

      // OPTIONAL ENUM param = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "param";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\PetParam';
      $f->default   = \RO\Cmd\PetParam::PETPARAM_EQUIP_LIST_UPDATE;
      $descriptor->addField($f);

      // REPEATED UINT32 additems = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "additems";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // REPEATED MESSAGE addbodyitems = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "addbodyitems";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\RO\Cmd\SpecPetEquip';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <cmd> has a value
     *
     * @return boolean
     */
    public function hasCmd(){
      return $this->_has(1);
    }
    
    /**
     * Clear <cmd> value
     *
     * @return \RO\Cmd\UpdatePetEquipListCmd
     */
    public function clearCmd(){
      return $this->_clear(1);
    }
    
    /**
     * Get <cmd> value
     *
     * @return int - \RO\Cmd\Command
     */
    public function getCmd(){
      return $this->_get(1);
    }
    
    /**
     * Set <cmd> value
     *
     * @param int - \RO\Cmd\Command $value
     * @return \RO\Cmd\UpdatePetEquipListCmd
     */
    public function setCmd( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <param> has a value
     *
     * @return boolean
     */
    public function hasParam(){
      return $this->_has(2);
    }
    
    /**
     * Clear <param> value
     *
     * @return \RO\Cmd\UpdatePetEquipListCmd
     */
    public function clearParam(){
      return $this->_clear(2);
    }
    
    /**
     * Get <param> value
     *
     * @return int - \RO\Cmd\PetParam
     */
    public function getParam(){
      return $this->_get(2);
    }
    
    /**
     * Set <param> value
     *
     * @param int - \RO\Cmd\PetParam $value
     * @return \RO\Cmd\UpdatePetEquipListCmd
     */
    public function setParam( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <additems> has a value
     *
     * @return boolean
     */
    public function hasAdditems(){
      return $this->_has(3);
    }
    
    /**
     * Clear <additems> value
     *
     * @return \RO\Cmd\UpdatePetEquipListCmd
     */
    public function clearAdditems(){
      return $this->_clear(3);
    }
    
    /**
     * Get <additems> value
     *
     * @param int $idx
     * @return int
     */
    public function getAdditems($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <additems> value
     *
     * @param int $value
     * @return \RO\Cmd\UpdatePetEquipListCmd
     */
    public function setAdditems( $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <additems>
     *
     * @return int[]
     */
    public function getAdditemsList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <additems>
     *
     * @param int $value
     * @return \RO\Cmd\UpdatePetEquipListCmd
     */
    public function addAdditems( $value){
     return $this->_add(3, $value);
    }
    
    /**
     * Check if <addbodyitems> has a value
     *
     * @return boolean
     */
    public function hasAddbodyitems(){
      return $this->_has(4);
    }
    
    /**
     * Clear <addbodyitems> value
     *
     * @return \RO\Cmd\UpdatePetEquipListCmd
     */
    public function clearAddbodyitems(){
      return $this->_clear(4);
    }
    
    /**
     * Get <addbodyitems> value
     *
     * @param int $idx
     * @return \RO\Cmd\SpecPetEquip
     */
    public function getAddbodyitems($idx = NULL){
      return $this->_get(4, $idx);
    }
    
    /**
     * Set <addbodyitems> value
     *
     * @param \RO\Cmd\SpecPetEquip $value
     * @return \RO\Cmd\UpdatePetEquipListCmd
     */
    public function setAddbodyitems(\RO\Cmd\SpecPetEquip $value, $idx = NULL){
      return $this->_set(4, $value, $idx);
    }
    
    /**
     * Get all elements of <addbodyitems>
     *
     * @return \RO\Cmd\SpecPetEquip[]
     */
    public function getAddbodyitemsList(){
     return $this->_get(4);
    }
    
    /**
     * Add a new element to <addbodyitems>
     *
     * @param \RO\Cmd\SpecPetEquip $value
     * @return \RO\Cmd\UpdatePetEquipListCmd
     */
    public function addAddbodyitems(\RO\Cmd\SpecPetEquip $value){
     return $this->_add(4, $value);
    }
  }
}

