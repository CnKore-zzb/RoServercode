<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: GuildSCmd.proto

namespace RO\Cmd {

  class GuildPrayGuildSCmd extends \DrSlump\Protobuf\Message {

    /**  @var int - \RO\Cmd\Command */
    public $cmd = \RO\Cmd\Command::GUILD_PROTOCMD;
    
    /**  @var int - \RO\Cmd\GuildSParam */
    public $param = \RO\Cmd\GuildSParam::GUILDSPARAM_GUILDPRAY;
    
    /**  @var \RO\Cmd\SocialUser */
    public $user = null;
    
    /**  @var int */
    public $npcid = 0;
    
    /**  @var int */
    public $prayid = 0;
    
    /**  @var int */
    public $praylv = 0;
    
    /**  @var int */
    public $needcon = 0;
    
    /**  @var int */
    public $needmon = 0;
    
    /**  @var int */
    public $prayitem = 0;
    
    /**  @var int */
    public $msgid = 0;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Cmd.GuildPrayGuildSCmd');

      // OPTIONAL ENUM cmd = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "cmd";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\Command';
      $f->default   = \RO\Cmd\Command::GUILD_PROTOCMD;
      $descriptor->addField($f);

      // OPTIONAL ENUM param = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "param";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\GuildSParam';
      $f->default   = \RO\Cmd\GuildSParam::GUILDSPARAM_GUILDPRAY;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE user = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "user";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\RO\Cmd\SocialUser';
      $descriptor->addField($f);

      // OPTIONAL UINT64 npcid = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "npcid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 prayid = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "prayid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 praylv = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "praylv";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 needcon = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "needcon";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 needmon = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "needmon";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 prayitem = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "prayitem";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      // OPTIONAL UINT32 msgid = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "msgid";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = 0;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <cmd> has a value
     *
     * @return boolean
     */
    public function hasCmd(){
      return $this->_has(1);
    }
    
    /**
     * Clear <cmd> value
     *
     * @return \RO\Cmd\GuildPrayGuildSCmd
     */
    public function clearCmd(){
      return $this->_clear(1);
    }
    
    /**
     * Get <cmd> value
     *
     * @return int - \RO\Cmd\Command
     */
    public function getCmd(){
      return $this->_get(1);
    }
    
    /**
     * Set <cmd> value
     *
     * @param int - \RO\Cmd\Command $value
     * @return \RO\Cmd\GuildPrayGuildSCmd
     */
    public function setCmd( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <param> has a value
     *
     * @return boolean
     */
    public function hasParam(){
      return $this->_has(2);
    }
    
    /**
     * Clear <param> value
     *
     * @return \RO\Cmd\GuildPrayGuildSCmd
     */
    public function clearParam(){
      return $this->_clear(2);
    }
    
    /**
     * Get <param> value
     *
     * @return int - \RO\Cmd\GuildSParam
     */
    public function getParam(){
      return $this->_get(2);
    }
    
    /**
     * Set <param> value
     *
     * @param int - \RO\Cmd\GuildSParam $value
     * @return \RO\Cmd\GuildPrayGuildSCmd
     */
    public function setParam( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <user> has a value
     *
     * @return boolean
     */
    public function hasUser(){
      return $this->_has(3);
    }
    
    /**
     * Clear <user> value
     *
     * @return \RO\Cmd\GuildPrayGuildSCmd
     */
    public function clearUser(){
      return $this->_clear(3);
    }
    
    /**
     * Get <user> value
     *
     * @return \RO\Cmd\SocialUser
     */
    public function getUser(){
      return $this->_get(3);
    }
    
    /**
     * Set <user> value
     *
     * @param \RO\Cmd\SocialUser $value
     * @return \RO\Cmd\GuildPrayGuildSCmd
     */
    public function setUser(\RO\Cmd\SocialUser $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <npcid> has a value
     *
     * @return boolean
     */
    public function hasNpcid(){
      return $this->_has(4);
    }
    
    /**
     * Clear <npcid> value
     *
     * @return \RO\Cmd\GuildPrayGuildSCmd
     */
    public function clearNpcid(){
      return $this->_clear(4);
    }
    
    /**
     * Get <npcid> value
     *
     * @return int
     */
    public function getNpcid(){
      return $this->_get(4);
    }
    
    /**
     * Set <npcid> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildPrayGuildSCmd
     */
    public function setNpcid( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <prayid> has a value
     *
     * @return boolean
     */
    public function hasPrayid(){
      return $this->_has(5);
    }
    
    /**
     * Clear <prayid> value
     *
     * @return \RO\Cmd\GuildPrayGuildSCmd
     */
    public function clearPrayid(){
      return $this->_clear(5);
    }
    
    /**
     * Get <prayid> value
     *
     * @return int
     */
    public function getPrayid(){
      return $this->_get(5);
    }
    
    /**
     * Set <prayid> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildPrayGuildSCmd
     */
    public function setPrayid( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <praylv> has a value
     *
     * @return boolean
     */
    public function hasPraylv(){
      return $this->_has(6);
    }
    
    /**
     * Clear <praylv> value
     *
     * @return \RO\Cmd\GuildPrayGuildSCmd
     */
    public function clearPraylv(){
      return $this->_clear(6);
    }
    
    /**
     * Get <praylv> value
     *
     * @return int
     */
    public function getPraylv(){
      return $this->_get(6);
    }
    
    /**
     * Set <praylv> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildPrayGuildSCmd
     */
    public function setPraylv( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <needcon> has a value
     *
     * @return boolean
     */
    public function hasNeedcon(){
      return $this->_has(7);
    }
    
    /**
     * Clear <needcon> value
     *
     * @return \RO\Cmd\GuildPrayGuildSCmd
     */
    public function clearNeedcon(){
      return $this->_clear(7);
    }
    
    /**
     * Get <needcon> value
     *
     * @return int
     */
    public function getNeedcon(){
      return $this->_get(7);
    }
    
    /**
     * Set <needcon> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildPrayGuildSCmd
     */
    public function setNeedcon( $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <needmon> has a value
     *
     * @return boolean
     */
    public function hasNeedmon(){
      return $this->_has(8);
    }
    
    /**
     * Clear <needmon> value
     *
     * @return \RO\Cmd\GuildPrayGuildSCmd
     */
    public function clearNeedmon(){
      return $this->_clear(8);
    }
    
    /**
     * Get <needmon> value
     *
     * @return int
     */
    public function getNeedmon(){
      return $this->_get(8);
    }
    
    /**
     * Set <needmon> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildPrayGuildSCmd
     */
    public function setNeedmon( $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <prayitem> has a value
     *
     * @return boolean
     */
    public function hasPrayitem(){
      return $this->_has(9);
    }
    
    /**
     * Clear <prayitem> value
     *
     * @return \RO\Cmd\GuildPrayGuildSCmd
     */
    public function clearPrayitem(){
      return $this->_clear(9);
    }
    
    /**
     * Get <prayitem> value
     *
     * @return int
     */
    public function getPrayitem(){
      return $this->_get(9);
    }
    
    /**
     * Set <prayitem> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildPrayGuildSCmd
     */
    public function setPrayitem( $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <msgid> has a value
     *
     * @return boolean
     */
    public function hasMsgid(){
      return $this->_has(10);
    }
    
    /**
     * Clear <msgid> value
     *
     * @return \RO\Cmd\GuildPrayGuildSCmd
     */
    public function clearMsgid(){
      return $this->_clear(10);
    }
    
    /**
     * Get <msgid> value
     *
     * @return int
     */
    public function getMsgid(){
      return $this->_get(10);
    }
    
    /**
     * Set <msgid> value
     *
     * @param int $value
     * @return \RO\Cmd\GuildPrayGuildSCmd
     */
    public function setMsgid( $value){
      return $this->_set(10, $value);
    }
  }
}

