---
# 服务器配置例子
# 请将 example-server 和本文件的相关内容复制一个出来进行修改
#
hosts:
  # 服务1，http 类型，监听端口 9000
  Main:
    type: http                     # 也支持 https
    host: 0.0.0.0
    port: 9001
    listen:
      - tcp://0.0.0.0:9002         # 再额外监听一个 9010 端口
    name: MQSRV                    # 会输出 Server: MQSRV 的头信息
    useAction: false               # 使用Action功能
    useAssets: false               # 使用静态文件
    # class: WorkerHttpTest        # 自定义抽象化的类名称
    # errorPage404: 404.html       # 自定义404页面路径
    # errorPage500: error.html     # 自定义错误页面路径

    # 监听的域名列表，支持域名正则表达式，请以/开始和结束
    domains:
      - test.com
      - myqee.com
      - /*\.domain\.com/
      - /s\d+\.domain\.com/g

  TestDomain:
    # 和上面http服务监听的ip端口一样，但是只监听指定的域名
    # 推荐让服务监听不同的端口，然后用 nginx 来监听不同的域名
    type: http
    host: 0.0.0.0
    port: 9001
    http2: true                # 开启http2
    domain:
      - mydomian2.com          # 匹配 Host是 mydomian.com 的域名
      - "*.mydomian2.com"      # 匹配 mydomian.com 的二级域名，星号只能在第一个位置

  # 服务2，监听端口 9001
  WebSocket:
    type: ws                # 也支持 wss
    host: 0.0.0.0
    port: 9003
    class: MyTestWebSocket  # 不设置则默认用 WorkerWebSocket 类
    # handShake: true           # 使用用 onHandShake 取代 onOpen 事件，默认 false，设置true 则必须实现 onHandShake 回调方法， see http://wiki.swoole.com/wiki/page/409.html

  # 自定义端口
  TcpTest:
    type: tcp
    host: 0.0.0.0
    port: 2200
    conf:
      # 端口监听参数设置 see http://wiki.swoole.com/wiki/page/526.html
      open_eof_check: true
      open_eof_split: true
      package_eof: "\n"

  RangeUpload:
    # 专门用于处理大文件上传，支持断点、分片上传 type 为 upload
    # 断点续传 see http://www.linuxprobe.com/nginx-upload-module.html
    type: upload
    host: 0.0.0.0
    port: 9120
    # 以下参数是 upload 类型特有的参数
    max_size: 1G            # 允许上传的文件最大尺寸, 支持 K, M, G, T 后缀

  # api服务端口
  ApiTest:
    type: api               # api 的类型需要继承 MyQEE\Server\WorkerAPI 类
    host: 127.0.0.1
    port: 8080

  # 管理服务端口
  MyAdmin:
    type: manager           # manager 的类型需要继承 MyQEE\Server\WorkerManager 类
    host: 127.0.0.1
    port: 8800

  # 创建一个 Redis 协议服务（swoole 1.8.14 以上支持）
  # 注意：Redis 服务器必须使用或扩展到 MyQEE\Server\ServerRedis 类，并且 Redis 服务器中不可同时存在 http 或 webSocket 服务的端口监听
  MyRedisServer:
    type: redis           # Redis 的类型需要继承 MyQEE\Server\WorkerRedis
    host: 127.0.0.1
    port: 6379

  # 自定义tcp、udp多端口监听
  TcpTest2:
    type: tcp
    listen:
      - tcp://0.0.0.0:1315
      - udp:///tmp/test.sock
    conf:
      open_eof_check: true
      open_eof_split: true
      package_eof: "\n"

# 自定义工作子进程
customWorker:
  Test:
    name: myTest                      # 不设置则使用 Test
    class: MyTestCustomWorker         # 不设置则使用 WorkerCustomTest 的类名，其中Test为它的Key
    #redirect_stdin_stdout: false     # 作用于 new \Swoole\Process 的第2个参数，可不设置，默认 false
    #create_pipe: 2                   # 作用于 new \Swoole\Process 的第3个参数，可不设置，1.8.3以前默认1，1.8.3起默认2（即 SOCK_DGRAM 模式），see https://wiki.swoole.com/wiki/page/214.html
    #memory_limit: 4G                 # 进程内存的php限制，默认4G

# 异步任务进程配置
task:
  # 任务进程数，请根据实际情况调整
  number: 10
  class: WorkerTask

server:
  # 不设置则使用主服务的 ip:port
  name: server01

  # 进程数，实际服务器可调为 cpu 的 1-4 倍
  # 不设置则默认cpu数
  # see https://wiki.swoole.com/wiki/page/275.html
  # worker_num: 16

  # 启动模式, 可选:
  # base : 按 SWOOLE_BASE 模式启动;
  # process: 按 SWOOLE_PROCESS 模式启动;
  # 一般情况下用 process 模式启动即可
  # see http://wiki.swoole.com/wiki/page/14.html
  mode: process

  # 单个worker进程内存限制, 默认2G
  worker_memory_limit: 2G

  # 单个任务进程内存限制, 默认2G
  task_worker_memory_limit: 2G

  # 进程间通信的 UnixSocket 缓存区尺寸, 不设置则使用系统默认值
  # see http://wiki.swoole.com/wiki/page/352.html
  unixsock_buffer_size: 33554432

  # 若任务投递缓冲区塞满, 是否阻塞, 0: 直接返回 false, 1: 阻塞等待
  socket_block: 0

# 远程调试脚本功能
remote_shell:
  open: false
  host: 127.0.0.1
  port: 9599
  public_keys:
  # 支持多个公钥，可以使用 bin/remote-shell -c /path/ 创建一个配对的密钥，将公钥放服务器，路径填这里，私钥文件放自己电脑
  #  - /path/public.key

# 服务器的log
log:
  # 需要输出的log类型, 没设置的则丢弃
  # 可以任意自定义类型, 然后在 worker 或 task 对象中用 $this->log('test', 'myType'); 输出
  # 系统默认的有 warn, info, debug, trace
  level:
    - warn
    - info

  # 日志存放目录, 其中 $type 为日志类型
  # 注意:swoole 的 log 路径在 $type = swoole 里
  # path: /var/log/myqee.$type.log

  # log 中是否附带打印log的文件路径和行号信息，默认 true
  withFilePath: true

  # 开启独立 Logger 进程写log，默认 true，配置了 path 才生效，也可以设定字符串指定类名称
  loggerProcess: true

  # 独立 Logger 进程Tag名称，默认 sysLogger, 一般不用设置
  loggerProcessName: sysLogger

  # 自动存档，只有开启了 loggerProcess 才会生效
  active:
      # 日志存档大小, 0 则不自动存档
      # 支持 K, M, G 3种后缀，不设置则不限制
      sizeLimit: 128M

      # 自动存档时间间隔，不设置则不自动存档，后缀可以是 h, d, w, m 分别表示按小时、天、星期、月存档
      timeLimit: 1h

      # 自动存档时间key，不设置则系统默认
      #timeKey: Ymd-H

      # 存档前缀，默认 active.
      prefix: active.

      # 存档路径，不设置则默认原路径
      path:

      # 自动存档是否压缩，默认否
      compress: false

# 集群配置
clusters:
  # 集群模式
  # none     - 单机或无状态服务器(默认)
  # simple   - 简单模式, 服务器间可以相互通讯调用, task只能本服务器投递
  # task     - 独立Task任务服务器模式, 可以使用 bin/task-server 启动独立任务服务器
  # advanced - 高级模式, taskWorker 和 Worker 进程独立启动, 可以只作为 taskWorker 或 Worker 进程启动, 可以垮服务器任务投递
  mode: none

  # 集群分组名
  group: default

  # 在当前集群分组里的序号, 请保持唯一, 不设置则自动分配
  id: 0

  # 集群间通讯IP, 请设置内网IP, 不设置则由注册服务器根据请求时的IP来设置
  #ip: 192.168.1.1

  # 集群间通讯端口, 默认1311
  port: 1311

  # 高级集群模式下任务进程暴露的端口, 只有在 mode = advanced 时有用, 默认 1312
  # 任务服务器可以使用 bin/task-server 单独启动
  task_port: 1312

  # 通讯数据内容是否加密
  # 在注册服务器成功后, 服务器会返回一个随机密钥, 所有的通讯数据将会使用此密钥加密解密
  # 每个服务器可单独设置是否加密, 内网服务器可以设置成 false, 外网的设成 true
  encrypt: false

  # 注册服务器设置
  register:
    # 所有服务器启动后需要到注册服务器上进行注册, 然后才能相互连接通讯, 注册服务器宕机的话不影响已经注册好的服务器间通讯
    ip: 127.0.0.1

    # 请不要和集群通讯端口重复, 默认 1310
    port: 1310

    # 注册服务器用密钥, 如果不设置则用 path 做密钥, 建议自定义设置
    key:

    # 当前服务器是否是注册服务器
    # 注册服务器推荐用 bin/register-server 单独启动, 也可以用当前任意一台服务器启动作为注册服务器
    is_register: false

php:
  error_reporting: 7
  timezone: PRC
  precision: 18      # 数据精度，php默认为14
  memory_limit: 2G   # 单个进程最大内存限制, 默认2G


# swoole 相关配置
swoole:
  #更多参数 see http://wiki.swoole.com/wiki/page/274.html

  # Worker与Reactor通信模式
  # see http://wiki.swoole.com/wiki/page/277.html
  # 请注意: 如果设置成1或3则swoole底层默认会屏蔽 onConnect/onClose 事件
  # 可以通过 enable_unsafe_event 参数强制开启, 但是系统并不能保证3个事件正确的调用顺序 see http://wiki.swoole.com/wiki/page/448.html
  #dispatch_mode: 2

  #reactor_num: 2

  #backlog : 128

  # 启动进程数
  #worker_num: 10
  max_request: 0

  # 任务进程数，上面的 task 的 number 参数会覆盖此参数
  # task_worker_num: 10
  task_max_request: 0

  # 数据包大小限制, 单位字节
  package_max_length: 5000000

  # 值必须小余 ulimit -n 的值
  # max_conn: 10000

  # 关闭 fopen('php://input') 数据的解析
  # see http://wiki.swoole.com/wiki/page/375.html
  http_parse_post: 0

  # 启用心跳检测，此选项表示每隔多久轮循一次，单位为秒
  #heartbeat_check_interval: 30

  # 表示连接最大允许空闲的时间, 需要比 heartbeat_check_interval 大
  #heartbeat_idle_time: 160

  # 设置task的数据临时目录，在swoole_server中，如果投递的数据超过8192字节，将启用临时文件来保存数据。
  # 这里的task_tmpdir就是用来设置临时文件保存的位置
  # 在 linux/unix 中 /dev/shm/ 目录一般都是内存目录, 如果设置的目录不存在, 系统会调整为 /tmp/ 目录
  # http://wiki.swoole.com/wiki/page/314.html
  task_tmpdir: /dev/shm/

  # 发送缓存区尺寸
  # http://wiki.swoole.com/wiki/page/440.html
  buffer_output_size: 33554432
